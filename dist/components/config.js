define("TencentCloudMonitorGrafanaApp", ["@grafana/data","@grafana/runtime","app/core/core_module","lodash","moment"], function(__WEBPACK_EXTERNAL_MODULE__grafana_data__, __WEBPACK_EXTERNAL_MODULE__grafana_runtime__, __WEBPACK_EXTERNAL_MODULE_grafana_app_core_core_module__, __WEBPACK_EXTERNAL_MODULE_lodash__, __WEBPACK_EXTERNAL_MODULE_moment__) { return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./components/config.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../node_modules/qs/lib/formats.js":
/*!*****************************************!*\
  !*** ../node_modules/qs/lib/formats.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var replace = String.prototype.replace;
var percentTwenties = /%20/g;

module.exports = {
    'default': 'RFC3986',
    formatters: {
        RFC1738: function (value) {
            return replace.call(value, percentTwenties, '+');
        },
        RFC3986: function (value) {
            return value;
        }
    },
    RFC1738: 'RFC1738',
    RFC3986: 'RFC3986'
};


/***/ }),

/***/ "../node_modules/qs/lib/index.js":
/*!***************************************!*\
  !*** ../node_modules/qs/lib/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var stringify = __webpack_require__(/*! ./stringify */ "../node_modules/qs/lib/stringify.js");
var parse = __webpack_require__(/*! ./parse */ "../node_modules/qs/lib/parse.js");
var formats = __webpack_require__(/*! ./formats */ "../node_modules/qs/lib/formats.js");

module.exports = {
    formats: formats,
    parse: parse,
    stringify: stringify
};


/***/ }),

/***/ "../node_modules/qs/lib/parse.js":
/*!***************************************!*\
  !*** ../node_modules/qs/lib/parse.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./utils */ "../node_modules/qs/lib/utils.js");

var has = Object.prototype.hasOwnProperty;

var defaults = {
    allowDots: false,
    allowPrototypes: false,
    arrayLimit: 20,
    decoder: utils.decode,
    delimiter: '&',
    depth: 5,
    parameterLimit: 1000,
    plainObjects: false,
    strictNullHandling: false
};

var parseValues = function parseQueryStringValues(str, options) {
    var obj = {};
    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\?/, '') : str;
    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;
    var parts = cleanStr.split(options.delimiter, limit);

    for (var i = 0; i < parts.length; ++i) {
        var part = parts[i];

        var bracketEqualsPos = part.indexOf(']=');
        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;

        var key, val;
        if (pos === -1) {
            key = options.decoder(part, defaults.decoder);
            val = options.strictNullHandling ? null : '';
        } else {
            key = options.decoder(part.slice(0, pos), defaults.decoder);
            val = options.decoder(part.slice(pos + 1), defaults.decoder);
        }
        if (has.call(obj, key)) {
            obj[key] = [].concat(obj[key]).concat(val);
        } else {
            obj[key] = val;
        }
    }

    return obj;
};

var parseObject = function (chain, val, options) {
    var leaf = val;

    for (var i = chain.length - 1; i >= 0; --i) {
        var obj;
        var root = chain[i];

        if (root === '[]') {
            obj = [];
            obj = obj.concat(leaf);
        } else {
            obj = options.plainObjects ? Object.create(null) : {};
            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;
            var index = parseInt(cleanRoot, 10);
            if (
                !isNaN(index)
                && root !== cleanRoot
                && String(index) === cleanRoot
                && index >= 0
                && (options.parseArrays && index <= options.arrayLimit)
            ) {
                obj = [];
                obj[index] = leaf;
            } else {
                obj[cleanRoot] = leaf;
            }
        }

        leaf = obj;
    }

    return leaf;
};

var parseKeys = function parseQueryStringKeys(givenKey, val, options) {
    if (!givenKey) {
        return;
    }

    // Transform dot notation to bracket notation
    var key = options.allowDots ? givenKey.replace(/\.([^.[]+)/g, '[$1]') : givenKey;

    // The regex chunks

    var brackets = /(\[[^[\]]*])/;
    var child = /(\[[^[\]]*])/g;

    // Get the parent

    var segment = brackets.exec(key);
    var parent = segment ? key.slice(0, segment.index) : key;

    // Stash the parent if it exists

    var keys = [];
    if (parent) {
        // If we aren't using plain objects, optionally prefix keys
        // that would overwrite object prototype properties
        if (!options.plainObjects && has.call(Object.prototype, parent)) {
            if (!options.allowPrototypes) {
                return;
            }
        }

        keys.push(parent);
    }

    // Loop through children appending to the array until we hit depth

    var i = 0;
    while ((segment = child.exec(key)) !== null && i < options.depth) {
        i += 1;
        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {
            if (!options.allowPrototypes) {
                return;
            }
        }
        keys.push(segment[1]);
    }

    // If there's a remainder, just add whatever is left

    if (segment) {
        keys.push('[' + key.slice(segment.index) + ']');
    }

    return parseObject(keys, val, options);
};

module.exports = function (str, opts) {
    var options = opts ? utils.assign({}, opts) : {};

    if (options.decoder !== null && options.decoder !== undefined && typeof options.decoder !== 'function') {
        throw new TypeError('Decoder has to be a function.');
    }

    options.ignoreQueryPrefix = options.ignoreQueryPrefix === true;
    options.delimiter = typeof options.delimiter === 'string' || utils.isRegExp(options.delimiter) ? options.delimiter : defaults.delimiter;
    options.depth = typeof options.depth === 'number' ? options.depth : defaults.depth;
    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : defaults.arrayLimit;
    options.parseArrays = options.parseArrays !== false;
    options.decoder = typeof options.decoder === 'function' ? options.decoder : defaults.decoder;
    options.allowDots = typeof options.allowDots === 'boolean' ? options.allowDots : defaults.allowDots;
    options.plainObjects = typeof options.plainObjects === 'boolean' ? options.plainObjects : defaults.plainObjects;
    options.allowPrototypes = typeof options.allowPrototypes === 'boolean' ? options.allowPrototypes : defaults.allowPrototypes;
    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : defaults.parameterLimit;
    options.strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;

    if (str === '' || str === null || typeof str === 'undefined') {
        return options.plainObjects ? Object.create(null) : {};
    }

    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;
    var obj = options.plainObjects ? Object.create(null) : {};

    // Iterate over the keys and setup the new object

    var keys = Object.keys(tempObj);
    for (var i = 0; i < keys.length; ++i) {
        var key = keys[i];
        var newObj = parseKeys(key, tempObj[key], options);
        obj = utils.merge(obj, newObj, options);
    }

    return utils.compact(obj);
};


/***/ }),

/***/ "../node_modules/qs/lib/stringify.js":
/*!*******************************************!*\
  !*** ../node_modules/qs/lib/stringify.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./utils */ "../node_modules/qs/lib/utils.js");
var formats = __webpack_require__(/*! ./formats */ "../node_modules/qs/lib/formats.js");

var arrayPrefixGenerators = {
    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching
        return prefix + '[]';
    },
    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching
        return prefix + '[' + key + ']';
    },
    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching
        return prefix;
    }
};

var toISO = Date.prototype.toISOString;

var defaults = {
    delimiter: '&',
    encode: true,
    encoder: utils.encode,
    encodeValuesOnly: false,
    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching
        return toISO.call(date);
    },
    skipNulls: false,
    strictNullHandling: false
};

var stringify = function stringify( // eslint-disable-line func-name-matching
    object,
    prefix,
    generateArrayPrefix,
    strictNullHandling,
    skipNulls,
    encoder,
    filter,
    sort,
    allowDots,
    serializeDate,
    formatter,
    encodeValuesOnly
) {
    var obj = object;
    if (typeof filter === 'function') {
        obj = filter(prefix, obj);
    } else if (obj instanceof Date) {
        obj = serializeDate(obj);
    } else if (obj === null) {
        if (strictNullHandling) {
            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder) : prefix;
        }

        obj = '';
    }

    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {
        if (encoder) {
            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder);
            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder))];
        }
        return [formatter(prefix) + '=' + formatter(String(obj))];
    }

    var values = [];

    if (typeof obj === 'undefined') {
        return values;
    }

    var objKeys;
    if (Array.isArray(filter)) {
        objKeys = filter;
    } else {
        var keys = Object.keys(obj);
        objKeys = sort ? keys.sort(sort) : keys;
    }

    for (var i = 0; i < objKeys.length; ++i) {
        var key = objKeys[i];

        if (skipNulls && obj[key] === null) {
            continue;
        }

        if (Array.isArray(obj)) {
            values = values.concat(stringify(
                obj[key],
                generateArrayPrefix(prefix, key),
                generateArrayPrefix,
                strictNullHandling,
                skipNulls,
                encoder,
                filter,
                sort,
                allowDots,
                serializeDate,
                formatter,
                encodeValuesOnly
            ));
        } else {
            values = values.concat(stringify(
                obj[key],
                prefix + (allowDots ? '.' + key : '[' + key + ']'),
                generateArrayPrefix,
                strictNullHandling,
                skipNulls,
                encoder,
                filter,
                sort,
                allowDots,
                serializeDate,
                formatter,
                encodeValuesOnly
            ));
        }
    }

    return values;
};

module.exports = function (object, opts) {
    var obj = object;
    var options = opts ? utils.assign({}, opts) : {};

    if (options.encoder !== null && options.encoder !== undefined && typeof options.encoder !== 'function') {
        throw new TypeError('Encoder has to be a function.');
    }

    var delimiter = typeof options.delimiter === 'undefined' ? defaults.delimiter : options.delimiter;
    var strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;
    var skipNulls = typeof options.skipNulls === 'boolean' ? options.skipNulls : defaults.skipNulls;
    var encode = typeof options.encode === 'boolean' ? options.encode : defaults.encode;
    var encoder = typeof options.encoder === 'function' ? options.encoder : defaults.encoder;
    var sort = typeof options.sort === 'function' ? options.sort : null;
    var allowDots = typeof options.allowDots === 'undefined' ? false : options.allowDots;
    var serializeDate = typeof options.serializeDate === 'function' ? options.serializeDate : defaults.serializeDate;
    var encodeValuesOnly = typeof options.encodeValuesOnly === 'boolean' ? options.encodeValuesOnly : defaults.encodeValuesOnly;
    if (typeof options.format === 'undefined') {
        options.format = formats['default'];
    } else if (!Object.prototype.hasOwnProperty.call(formats.formatters, options.format)) {
        throw new TypeError('Unknown format option provided.');
    }
    var formatter = formats.formatters[options.format];
    var objKeys;
    var filter;

    if (typeof options.filter === 'function') {
        filter = options.filter;
        obj = filter('', obj);
    } else if (Array.isArray(options.filter)) {
        filter = options.filter;
        objKeys = filter;
    }

    var keys = [];

    if (typeof obj !== 'object' || obj === null) {
        return '';
    }

    var arrayFormat;
    if (options.arrayFormat in arrayPrefixGenerators) {
        arrayFormat = options.arrayFormat;
    } else if ('indices' in options) {
        arrayFormat = options.indices ? 'indices' : 'repeat';
    } else {
        arrayFormat = 'indices';
    }

    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];

    if (!objKeys) {
        objKeys = Object.keys(obj);
    }

    if (sort) {
        objKeys.sort(sort);
    }

    for (var i = 0; i < objKeys.length; ++i) {
        var key = objKeys[i];

        if (skipNulls && obj[key] === null) {
            continue;
        }

        keys = keys.concat(stringify(
            obj[key],
            key,
            generateArrayPrefix,
            strictNullHandling,
            skipNulls,
            encode ? encoder : null,
            filter,
            sort,
            allowDots,
            serializeDate,
            formatter,
            encodeValuesOnly
        ));
    }

    var joined = keys.join(delimiter);
    var prefix = options.addQueryPrefix === true ? '?' : '';

    return joined.length > 0 ? prefix + joined : '';
};


/***/ }),

/***/ "../node_modules/qs/lib/utils.js":
/*!***************************************!*\
  !*** ../node_modules/qs/lib/utils.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var has = Object.prototype.hasOwnProperty;

var hexTable = (function () {
    var array = [];
    for (var i = 0; i < 256; ++i) {
        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());
    }

    return array;
}());

var compactQueue = function compactQueue(queue) {
    var obj;

    while (queue.length) {
        var item = queue.pop();
        obj = item.obj[item.prop];

        if (Array.isArray(obj)) {
            var compacted = [];

            for (var j = 0; j < obj.length; ++j) {
                if (typeof obj[j] !== 'undefined') {
                    compacted.push(obj[j]);
                }
            }

            item.obj[item.prop] = compacted;
        }
    }

    return obj;
};

var arrayToObject = function arrayToObject(source, options) {
    var obj = options && options.plainObjects ? Object.create(null) : {};
    for (var i = 0; i < source.length; ++i) {
        if (typeof source[i] !== 'undefined') {
            obj[i] = source[i];
        }
    }

    return obj;
};

var merge = function merge(target, source, options) {
    if (!source) {
        return target;
    }

    if (typeof source !== 'object') {
        if (Array.isArray(target)) {
            target.push(source);
        } else if (typeof target === 'object') {
            if (options.plainObjects || options.allowPrototypes || !has.call(Object.prototype, source)) {
                target[source] = true;
            }
        } else {
            return [target, source];
        }

        return target;
    }

    if (typeof target !== 'object') {
        return [target].concat(source);
    }

    var mergeTarget = target;
    if (Array.isArray(target) && !Array.isArray(source)) {
        mergeTarget = arrayToObject(target, options);
    }

    if (Array.isArray(target) && Array.isArray(source)) {
        source.forEach(function (item, i) {
            if (has.call(target, i)) {
                if (target[i] && typeof target[i] === 'object') {
                    target[i] = merge(target[i], item, options);
                } else {
                    target.push(item);
                }
            } else {
                target[i] = item;
            }
        });
        return target;
    }

    return Object.keys(source).reduce(function (acc, key) {
        var value = source[key];

        if (has.call(acc, key)) {
            acc[key] = merge(acc[key], value, options);
        } else {
            acc[key] = value;
        }
        return acc;
    }, mergeTarget);
};

var assign = function assignSingleSource(target, source) {
    return Object.keys(source).reduce(function (acc, key) {
        acc[key] = source[key];
        return acc;
    }, target);
};

var decode = function (str) {
    try {
        return decodeURIComponent(str.replace(/\+/g, ' '));
    } catch (e) {
        return str;
    }
};

var encode = function encode(str) {
    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.
    // It has been adapted here for stricter adherence to RFC 3986
    if (str.length === 0) {
        return str;
    }

    var string = typeof str === 'string' ? str : String(str);

    var out = '';
    for (var i = 0; i < string.length; ++i) {
        var c = string.charCodeAt(i);

        if (
            c === 0x2D // -
            || c === 0x2E // .
            || c === 0x5F // _
            || c === 0x7E // ~
            || (c >= 0x30 && c <= 0x39) // 0-9
            || (c >= 0x41 && c <= 0x5A) // a-z
            || (c >= 0x61 && c <= 0x7A) // A-Z
        ) {
            out += string.charAt(i);
            continue;
        }

        if (c < 0x80) {
            out = out + hexTable[c];
            continue;
        }

        if (c < 0x800) {
            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);
            continue;
        }

        if (c < 0xD800 || c >= 0xE000) {
            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);
            continue;
        }

        i += 1;
        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));
        out += hexTable[0xF0 | (c >> 18)]
            + hexTable[0x80 | ((c >> 12) & 0x3F)]
            + hexTable[0x80 | ((c >> 6) & 0x3F)]
            + hexTable[0x80 | (c & 0x3F)];
    }

    return out;
};

var compact = function compact(value) {
    var queue = [{ obj: { o: value }, prop: 'o' }];
    var refs = [];

    for (var i = 0; i < queue.length; ++i) {
        var item = queue[i];
        var obj = item.obj[item.prop];

        var keys = Object.keys(obj);
        for (var j = 0; j < keys.length; ++j) {
            var key = keys[j];
            var val = obj[key];
            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {
                queue.push({ obj: obj, prop: key });
                refs.push(val);
            }
        }
    }

    return compactQueue(queue);
};

var isRegExp = function isRegExp(obj) {
    return Object.prototype.toString.call(obj) === '[object RegExp]';
};

var isBuffer = function isBuffer(obj) {
    if (obj === null || typeof obj === 'undefined') {
        return false;
    }

    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));
};

module.exports = {
    arrayToObject: arrayToObject,
    assign: assign,
    compact: compact,
    decode: decode,
    encode: encode,
    isBuffer: isBuffer,
    isRegExp: isRegExp,
    merge: merge
};


/***/ }),

/***/ "./components/config.ts":
/*!******************************!*\
  !*** ./components/config.ts ***!
  \******************************/
/*! exports provided: MonitorAppConfigCtrl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MonitorAppConfigCtrl", function() { return MonitorAppConfigCtrl; });
/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @grafana/runtime */ "@grafana/runtime");
/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_grafana_runtime__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _datasource_common_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../datasource/common/constants */ "./datasource/common/constants.ts");
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};



var backendSrv = Object(_grafana_runtime__WEBPACK_IMPORTED_MODULE_0__["getBackendSrv"])();
var tcFolder = {
  uid: 'tencent-cloud-monitor',
  title: '腾讯云监控',
  folderId: null
};
var tcFolder_EN = {
  uid: 'tencent-cloud-monitor-english',
  title: 'Tencent Cloud Monitor',
  folderId: null
};
/**
 * 生成腾讯云专用目录
 * @returns
 */

function getFolderId() {
  var _a, _b;

  return __awaiter(this, void 0, void 0, function () {
    var folders, folderId, folderEnId, folder, folderEn;
    return __generator(this, function (_c) {
      switch (_c.label) {
        case 0:
          if (tcFolder.folderId && tcFolder_EN.folderId) {
            return [2
            /*return*/
            , [tcFolder.folderId, tcFolder_EN.folderId]];
          }

          return [4
          /*yield*/
          , backendSrv.get('/api/folders')];

        case 1:
          folders = _c.sent();
          folderId = (_a = folders.find(function (item) {
            return item.uid === tcFolder.uid;
          })) === null || _a === void 0 ? void 0 : _a.id;
          folderEnId = (_b = folders.find(function (item) {
            return item.uid === tcFolder_EN.uid;
          })) === null || _b === void 0 ? void 0 : _b.id;
          if (!!folderId) return [3
          /*break*/
          , 3];
          return [4
          /*yield*/
          , backendSrv.post('/api/folders', tcFolder)];

        case 2:
          folder = _c.sent();
          folderId = (folder === null || folder === void 0 ? void 0 : folder.id) || 0;
          _c.label = 3;

        case 3:
          if (!!folderEnId) return [3
          /*break*/
          , 5];
          return [4
          /*yield*/
          , backendSrv.post('/api/folders', tcFolder_EN)];

        case 4:
          folderEn = _c.sent();
          folderEnId = (folderEn === null || folderEn === void 0 ? void 0 : folderEn.id) || 0;
          _c.label = 5;

        case 5:
          tcFolder.folderId = folderId;
          tcFolder_EN.folderId = folderEnId;
          return [2
          /*return*/
          , [folderId, folderEnId]];
      }
    });
  });
}
/**
 * 请求拦截器，拦截导入按钮的接口请求
 */


function backendInterceptor() {
  var _this = this;

  var oldPost = backendSrv.post.bind(Object(_grafana_runtime__WEBPACK_IMPORTED_MODULE_0__["getBackendSrv"])());
  var pluginId = window.location.pathname.split('/').filter(function (item) {
    return item;
  })[1];

  backendSrv.post = function (url, data) {
    return __awaiter(_this, void 0, void 0, function () {
      var _a, folderId, folderEnId;

      return __generator(this, function (_b) {
        switch (_b.label) {
          case 0:
            if (!(url === '/api/dashboards/import' && data.pluginId === pluginId)) return [3
            /*break*/
            , 2];
            return [4
            /*yield*/
            , getFolderId()];

          case 1:
            _a = _b.sent(), folderId = _a[0], folderEnId = _a[1];
            data.folderId = data.path.endsWith('_en_dashboard.json') ? folderEnId : folderId;
            _b.label = 2;

          case 2:
            return [2
            /*return*/
            , oldPost(url, data)];
        }
      });
    });
  };
}

backendInterceptor();

var MonitorAppConfigCtrl =
/** @class */
function () {
  MonitorAppConfigCtrl.$inject = ["$scope", "$injector", "$q"];

  /** @ngInject */
  function MonitorAppConfigCtrl($scope, $injector, $q) {
    var _a;

    this.appEditCtrl.setPostUpdateHook(this.postUpdate.bind(this));
    this.$q = $q; // Make sure it has a JSON Data spot

    if (!this.appModel) {
      // eslint-disable-next-line @typescript-eslint/consistent-type-assertions
      this.appModel = {};
    } // Required until we get the types sorted on appModel :(


    var appModel = this.appModel;

    if (!appModel.jsonData) {
      appModel.jsonData = {};
    }

    this.configured = false;

    if ((_a = this.appModel) === null || _a === void 0 ? void 0 : _a.enabled) {
      var datasources = Object.values(_grafana_runtime__WEBPACK_IMPORTED_MODULE_0__["config"].datasources).filter(function (ds) {
        return ds.type === _datasource_common_constants__WEBPACK_IMPORTED_MODULE_1__["TcDataSourceId"];
      });

      if (datasources.length > 0) {
        this.configured = true;
      }
    }
  }

  MonitorAppConfigCtrl.prototype.moveToFolder = function (dashbaordUid, folderId) {
    return __awaiter(this, void 0, void 0, function () {
      var dashboard;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , backendSrv.get("/api/dashboards/uid/".concat(dashbaordUid))];

          case 1:
            dashboard = _a.sent().dashboard; // 移动目录

            return [4
            /*yield*/
            , backendSrv.post('/api/dashboards/db/', {
              dashboard: dashboard,
              folderId: folderId,
              message: '',
              overwrite: true
            })];

          case 2:
            // 移动目录
            _a.sent();

            return [2
            /*return*/
            ];
        }
      });
    });
  };

  MonitorAppConfigCtrl.prototype.reviseDashboard = function () {
    var _a;

    return __awaiter(this, void 0, void 0, function () {
      var _b, folderId, folderEnId, rs, pmlist;

      var _this = this;

      return __generator(this, function (_c) {
        switch (_c.label) {
          case 0:
            return [4
            /*yield*/
            , getFolderId()];

          case 1:
            _b = _c.sent(), folderId = _b[0], folderEnId = _b[1];
            return [4
            /*yield*/
            , backendSrv.get("/api/plugins/".concat((_a = this.appModel) === null || _a === void 0 ? void 0 : _a.id, "/dashboards"))];

          case 2:
            rs = _c.sent();
            pmlist = rs.map(function (item) {
              var importedUrl = item.importedUrl,
                  path = item.path;
              var uid = importedUrl.split('/')[2];

              if (uid) {
                return _this.moveToFolder(uid, path.endsWith('_en_dashboard.json') ? folderEnId : folderId);
              } else {
                return Promise.resolve();
              }
            });
            return [2
            /*return*/
            , Promise.all(pmlist)];
        }
      });
    });
  };

  MonitorAppConfigCtrl.prototype.postUpdate = function () {
    var _a;

    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function (_b) {
        switch (_b.label) {
          case 0:
            if (!((_a = this.appModel) === null || _a === void 0 ? void 0 : _a.enabled)) {
              return [2
              /*return*/
              ];
            } // enable或者update时，对预设dashboard进行修改


            return [4
            /*yield*/
            , this.reviseDashboard()];

          case 1:
            // enable或者update时，对预设dashboard进行修改
            _b.sent();

            return [2
            /*return*/
            , this.$q.resolve(true)];
        }
      });
    });
  };

  MonitorAppConfigCtrl.templateUrl = 'components/config.html';
  return MonitorAppConfigCtrl;
}();



/***/ }),

/***/ "./datasource/common/constants.ts":
/*!****************************************!*\
  !*** ./datasource/common/constants.ts ***!
  \****************************************/
/*! exports provided: TcDataSourceId, GetServiceAPIInfo, VARIABLE_ALIAS, GetServiceFromNamespace, GetLabelFromNamespace, ParseMetricQuery, ParseMetricRegex, ReplaceVariable, GetDimensions, ParseQueryResult, isVariable, GetRequestParams, GetRequestParamsV2, SliceLength, FilterKeys, parseDataFromBackendPlugin, IS_DEVELOPMENT_ENVIRONMENT, CoreApp */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TcDataSourceId", function() { return TcDataSourceId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetServiceAPIInfo", function() { return GetServiceAPIInfo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VARIABLE_ALIAS", function() { return VARIABLE_ALIAS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetServiceFromNamespace", function() { return GetServiceFromNamespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetLabelFromNamespace", function() { return GetLabelFromNamespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParseMetricQuery", function() { return ParseMetricQuery; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParseMetricRegex", function() { return ParseMetricRegex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReplaceVariable", function() { return ReplaceVariable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetDimensions", function() { return GetDimensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParseQueryResult", function() { return ParseQueryResult; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isVariable", function() { return isVariable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetRequestParams", function() { return GetRequestParams; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetRequestParamsV2", function() { return GetRequestParamsV2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SliceLength", function() { return SliceLength; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FilterKeys", function() { return FilterKeys; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseDataFromBackendPlugin", function() { return parseDataFromBackendPlugin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IS_DEVELOPMENT_ENVIRONMENT", function() { return IS_DEVELOPMENT_ENVIRONMENT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CoreApp", function() { return CoreApp; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var qs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! qs */ "../node_modules/qs/lib/index.js");
/* harmony import */ var qs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(qs__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _tc_monitor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tc_monitor */ "./datasource/tc_monitor/index.ts");
/* harmony import */ var _sign__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sign */ "./datasource/common/sign.ts");
/* harmony import */ var _signV2__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./signV2 */ "./datasource/common/signV2.ts");
/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @grafana/runtime */ "@grafana/runtime");
/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_grafana_runtime__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../locale */ "./locale/index.ts");
/* harmony import */ var _plugin_json__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../plugin.json */ "./datasource/plugin.json");
var _plugin_json__WEBPACK_IMPORTED_MODULE_7___namespace = /*#__PURE__*/__webpack_require__.t(/*! ../plugin.json */ "./datasource/plugin.json", 1);
var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};

var __rest = undefined && undefined.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};









var TcDataSourceId = _plugin_json__WEBPACK_IMPORTED_MODULE_7__.id; // the services of tencentcloud monitor api

var FINACE_REGIONS = ['ap-shanghai-fsi', 'ap-shenzhen-fsi'];
var SERVICES_API_INFO = {
  api: {
    service: 'api',
    version: '2020-11-06',
    path: '/api',
    host: 'api.tencentcloudapi.com'
  },
  // monitor api info
  monitor: {
    service: 'monitor',
    version: '2018-07-24',
    path: '/monitor',
    host: 'monitor.tencentcloudapi.com'
  },
  // cls api info
  cls: {
    service: 'cls',
    version: '2020-10-16',
    path: '/cls',
    host: 'cls.tencentcloudapi.com'
  },
  // cvm api info
  cvm: {
    service: 'cvm',
    version: '2017-03-12',
    path: '/cvm',
    host: 'cvm.tencentcloudapi.com'
  },
  // cdb api info
  cdb: {
    service: 'cdb',
    version: '2017-03-20',
    path: '/cdb',
    host: 'cdb.tencentcloudapi.com'
  },
  // pcx api info
  pcx: {
    service: 'pcx',
    version: '',
    path: '/pcx',
    host: 'vpc.api.qcloud.com'
  },
  // vpc api info
  vpc: {
    service: 'vpc',
    version: '2017-03-12',
    path: '/vpc',
    host: 'vpc.tencentcloudapi.com'
  },
  // mongodb api info
  mongodb: {
    service: 'mongodb',
    version: '2019-07-25',
    path: '/mongodb',
    host: 'mongodb.tencentcloudapi.com'
  },
  // 负载均衡 clb
  clb: {
    service: 'clb',
    version: '2018-03-17',
    path: '/clb',
    host: 'clb.tencentcloudapi.com'
  },
  // postgresql api info
  postgres: {
    service: 'postgres',
    version: '2017-03-12',
    path: '/postgres',
    host: 'postgres.tencentcloudapi.com'
  },
  // cdn info
  cdn: {
    service: 'cdn',
    version: '2018-06-06',
    path: '/cdn',
    host: 'cdn.tencentcloudapi.com'
  },
  // redis info
  redis: {
    service: 'redis',
    version: '2018-04-12',
    path: '/redis',
    host: 'redis.tencentcloudapi.com'
  },
  scf: {
    service: 'scf',
    version: '2018-04-16',
    path: '/scf',
    host: 'scf.tencentcloudapi.com'
  },
  cfs: {
    service: 'cfs',
    version: '2019-07-19',
    path: '/cfs',
    host: 'cfs.tencentcloudapi.com'
  },
  ckafka: {
    service: 'ckafka',
    version: '2019-08-19',
    path: '/ckafka',
    host: 'ckafka.tencentcloudapi.com'
  },
  // 专线接入实例列表
  dc: {
    service: 'dc',
    version: '2018-04-10',
    path: '/dc',
    host: 'dc.tencentcloudapi.com'
  },
  // cynosdb实例列表
  cynosdb: {
    service: 'cynosdb',
    version: '2019-01-07',
    path: '/cynosdb',
    host: 'cynosdb.tencentcloudapi.com'
  },
  // sqlserver实例列表
  sqlserver: {
    service: 'sqlserver',
    version: '2018-03-28',
    path: '/sqlserver',
    host: 'sqlserver.tencentcloudapi.com'
  },
  // bm实例列表
  bm: {
    service: 'bm',
    version: '2018-04-23',
    path: '/bm',
    host: 'bm.tencentcloudapi.com'
  },
  bmeip: {
    service: 'bmeip',
    version: '2018-06-25',
    path: '/bmeip',
    host: 'bmeip.tencentcloudapi.com'
  },
  bmvpc: {
    service: 'bmvpc',
    version: '2018-06-25',
    path: '/bmvpc',
    host: 'bmvpc.tencentcloudapi.com'
  },
  bmlb: {
    service: 'bmlb',
    version: '2018-06-25',
    path: '/bmlb',
    host: 'bmlb.tencentcloudapi.com'
  },
  // ES集群实例
  es: {
    service: 'es',
    version: '2018-04-16',
    path: '/es',
    host: 'es.tencentcloudapi.com'
  },
  // MapReduce
  emr: {
    service: 'emr',
    version: '2019-01-03',
    path: '/emr',
    host: 'emr.tencentcloudapi.com'
  },
  // CMQ消息队列
  cmq: {
    service: 'cmq',
    version: '2019-03-04',
    path: '/cmq',
    host: 'cmq.tencentcloudapi.com'
  },
  cbs: {
    service: 'cbs',
    version: '2017-03-12',
    path: '/cbs',
    host: 'cbs.tencentcloudapi.com'
  },
  // tcaplus实例
  tcaplusdb: {
    service: 'tcaplusdb',
    version: '2019-08-23',
    path: '/tcaplusdb',
    host: 'tcaplusdb.tencentcloudapi.com'
  },
  // tcaplus实例
  dcdb: {
    service: 'dcdb',
    version: '2018-04-11',
    path: '/dcdb',
    host: 'dcdb.tencentcloudapi.com'
  },
  // apigateway实例
  apigateway: {
    service: 'apigateway',
    version: '2018-08-08',
    path: '/apigateway',
    host: 'apigateway.tencentcloudapi.com'
  },
  tdmq: {
    service: 'tdmq',
    version: '2020-02-17',
    path: '/tdmq',
    host: 'tdmq.tencentcloudapi.com'
  },
  tdmq_rabbitmq: {
    service: 'tdmq',
    version: '2020-02-17',
    path: '/tdmq',
    host: 'tdmq.tencentcloudapi.com'
  },
  tdmq_rocketmq: {
    service: 'tdmq',
    version: '2020-02-17',
    path: '/tdmq',
    host: 'tdmq.tencentcloudapi.com'
  },
  gaap: {
    service: 'gaap',
    version: '2018-05-29',
    path: '/gaap',
    host: 'gaap.tencentcloudapi.com'
  },
  ecm: {
    service: 'ecm',
    version: '2019-07-19',
    path: '/ecm',
    host: 'ecm.tencentcloudapi.com'
  },
  gse: {
    service: 'gse',
    version: '2019-11-12',
    path: '/gse',
    host: 'gse.tencentcloudapi.com'
  },
  lighthouse: {
    service: 'lighthouse',
    version: '2020-03-24',
    path: '/lighthouse',
    host: 'lighthouse.tencentcloudapi.com'
  },
  tsf: {
    service: 'tsf',
    version: '2018-03-26',
    path: '/tsf',
    host: 'tsf.tencentcloudapi.com'
  },
  rum: {
    service: 'rum',
    version: '2021-06-22',
    path: '/rum',
    host: 'rum.tencentcloudapi.com'
  },
  tke: {
    service: 'tke',
    version: '2018-05-25',
    path: '/tke',
    host: 'tke.tencentcloudapi.com'
  },
  ecdn: {
    service: 'ecdn',
    version: '2019-10-12',
    path: '/ecdn',
    host: 'ecdn.tencentcloudapi.com'
  },
  waf: {
    service: 'waf',
    version: '2018-01-25',
    path: '/waf',
    host: 'waf.tencentcloudapi.com'
  },
  region: {
    service: 'region',
    version: '2022-06-27',
    path: '/region',
    host: 'region.tencentcloudapi.com'
  },
  apm: {
    service: 'apm',
    version: '2021-06-22',
    path: '/apm',
    host: 'apm.tencentcloudapi.com'
  } // 不单独定义lb，因为lb同样用的是vpc的配置，同上
  // lb: {
  //   service: 'lb',
  //   version: '2017-03-12',
  //   path: '/lb',
  //   host: 'vpc.tencentcloudapi.com'
  // }
  // 负载均衡四层协议 lbPrivate
  // lbPrivate: {
  //   service: 'lbPrivate',
  //   version: '2018-03-17',
  //   path: '/clb',
  //   host: 'clb.tencentcloudapi.com',
  // },

};
var FINACE_HOST = {
  scf: {
    'ap-shanghai-fsi': {
      path: '/fsi/scf/shanghai',
      host: 'scf.ap-shanghai-fsi.tencentcloudapi.com'
    },
    'ap-shenzhen-fsi': {
      path: '/fsi/scf/shenzhen',
      host: 'scf.ap-shenzhen-fsi.tencentcloudapi.com'
    }
  },
  cfs: {
    'ap-shanghai-fsi': {
      path: '/fsi/cfs/shanghai',
      host: 'cfs.ap-shanghai-fsi.tencentcloudapi.com'
    },
    'ap-shenzhen-fsi': {
      path: '/fsi/cfs/shenzhen',
      host: 'cfs.ap-shenzhen-fsi.tencentcloudapi.com'
    }
  },
  ckafka: {
    'ap-shanghai-fsi': {
      path: '/fsi/ckafka/shanghai',
      host: 'ckafka.ap-shanghai-fsi.tencentcloudapi.com'
    },
    'ap-shenzhen-fsi': {
      path: '/fsi/ckafka/shenzhen',
      host: 'ckafka.ap-shenzhen-fsi.tencentcloudapi.com'
    }
  },
  clb: {
    'ap-shanghai-fsi': {
      path: '/fsi/clb/shanghai',
      host: 'clb.ap-shanghai-fsi.tencentcloudapi.com'
    },
    'ap-shenzhen-fsi': {
      path: '/fsi/clb/shenzhen',
      host: 'clb.ap-shenzhen-fsi.tencentcloudapi.com'
    }
  },
  mongodb: {
    'ap-shanghai-fsi': {
      path: '/fsi/mongodb/shanghai',
      host: 'mongodb.ap-shanghai-fsi.tencentcloudapi.com'
    },
    'ap-shenzhen-fsi': {
      path: '/fsi/mongodb/shenzhen',
      host: 'mongodb.ap-shenzhen-fsi.tencentcloudapi.com'
    }
  },
  vpc: {
    'ap-shanghai-fsi': {
      path: '/fsi/vpc/shanghai',
      host: 'vpc.ap-shanghai-fsi.tencentcloudapi.com'
    },
    'ap-shenzhen-fsi': {
      path: '/fsi/vpc/shenzhen',
      host: 'vpc.ap-shenzhen-fsi.tencentcloudapi.com'
    }
  },
  cvm: {
    'ap-shanghai-fsi': {
      path: '/fsi/cvm/shanghai',
      host: 'cvm.ap-shanghai-fsi.tencentcloudapi.com'
    },
    'ap-shenzhen-fsi': {
      path: '/fsi/cvm/shenzhen',
      host: 'cvm.ap-shenzhen-fsi.tencentcloudapi.com'
    }
  },
  cdb: {
    'ap-shanghai-fsi': {
      path: '/fsi/cdb/shanghai',
      host: 'cdb.ap-shanghai-fsi.tencentcloudapi.com'
    },
    'ap-shenzhen-fsi': {
      path: '/fsi/cdb/shenzhen',
      host: 'cdb.ap-shenzhen-fsi.tencentcloudapi.com'
    }
  },
  monitor: {
    'ap-shanghai-fsi': {
      path: '/fsi/monitor/shanghai',
      host: 'monitor.ap-shanghai-fsi.tencentcloudapi.com'
    },
    'ap-shenzhen-fsi': {
      path: '/fsi/monitor/shenzhen',
      host: 'monitor.ap-shenzhen-fsi.tencentcloudapi.com'
    }
  },
  postgres: {
    'ap-shanghai-fsi': {
      path: '/fsi/postgres/shanghai',
      host: 'postgres.ap-shanghai-fsi.tencentcloudapi.com'
    },
    'ap-shenzhen-fsi': {
      path: '/fsi/postgres/shenzhen',
      host: 'postgres.ap-shenzhen-fsi.tencentcloudapi.com'
    }
  },
  emr: {
    'ap-shanghai-fsi': {
      path: '/fsi/emr/shanghai',
      host: 'emr.ap-shanghai-fsi.tencentcloudapi.com'
    },
    'ap-shenzhen-fsi': {
      path: '/fsi/emr/shenzhen',
      host: 'emr.ap-shenzhen-fsi.tencentcloudapi.com'
    }
  },
  cmq: {
    'ap-shanghai-fsi': {
      path: '/fsi/cmq/shanghai',
      host: 'cmq.ap-shanghai-fsi.tencentcloudapi.com'
    },
    'ap-shenzhen-fsi': {
      path: '/fsi/cmq/shenzhen',
      host: 'cmq.ap-shenzhen-fsi.tencentcloudapi.com'
    }
  },
  cls: {
    'ap-shanghai-fsi': {
      path: '/fsi/cls/shanghai',
      host: 'cls.ap-shanghai-fsi.tencentcloudapi.com'
    },
    'ap-shenzhen-fsi': {
      path: '/fsi/cls/shenzhen',
      host: 'cls.ap-shenzhen-fsi.tencentcloudapi.com'
    }
  }
}; // 获取对应业务的 API 接口信息

function GetServiceAPIInfo(region, service) {
  return __assign(__assign({}, SERVICES_API_INFO[service] || {}), getHostAndPath(region, service));
} // get host and path for finance regions

function getHostAndPath(region, service) {
  if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.indexOf(FINACE_REGIONS, region) === -1) {
    return {};
  }

  return lodash__WEBPACK_IMPORTED_MODULE_0___default.a.find(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.find(FINACE_HOST, function (__, key) {
    return key === service;
  }), function (__, key) {
    return key === region;
  }) || {};
} // 变量替换指定实例按照那个字段展示


var VARIABLE_ALIAS = 'instancealias';
function GetServiceFromNamespace(namespace) {
  return lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.find(_tc_monitor__WEBPACK_IMPORTED_MODULE_2__["SERVICES"], function (service) {
    return service.namespace === namespace;
  }), 'service');
} // 处理存量target中保存的qce/cvm

function GetLabelFromNamespace(namespace) {
  return lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.find(_tc_monitor__WEBPACK_IMPORTED_MODULE_2__["SERVICES"], function (service) {
    return service.namespace === namespace || service.label === namespace;
  }), 'label');
} // parse template variable query params

function ParseMetricQuery(query) {
  if (query === void 0) {
    query = '';
  }

  if (!query) {
    return {};
  }

  var result = {};

  var queries = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.split(query, '&');

  lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(queries, function (item) {
    var str = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.split(item, '=');

    if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.trim(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(str, '0', ''))) {
      var val = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.trim(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(str, '1', ''));

      try {
        val = JSON.parse(val);
      } catch (e) {// console.log({ val });
      }

      result[lodash__WEBPACK_IMPORTED_MODULE_0___default.a.toLower(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.trim(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(str, '0', '')))] = val;
    }
  });

  return result;
} // parse template variable regex params

function ParseMetricRegex(regex) {
  if (regex === void 0) {
    regex = '';
  }

  if (!regex) {
    return [];
  }

  regex = regex.replace(/：/g, ':');
  regex = regex.replace(/，/g, ',');
  var regexParams = ParseMetricQuery(regex);
  var result = [];

  lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(regexParams, function (value, key) {
    if (key === 'tag:tag-key') {
      var valuesArr = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.split(value, ',');

      lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(valuesArr, function (item) {
        var temp = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.split(item, ':');

        if (temp.length === 2) {
          result.push({
            Name: "tag:".concat(temp[0]),
            Values: temp.slice(1)
          });
        }
      });
    } else {
      result.push({
        Name: key,
        Values: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.split(value, ',')
      });
    }
  });

  return result;
} // get the actual value of template variable

function parseVariableFormat(varname) {
  varname = String(varname || ''); // $varname

  var varFlag = false;
  var regResult1 = varname.match(/^\${?(\w+)}?/);

  if (regResult1) {
    varFlag = true;
    varname = "${".concat(regResult1[1], ":json}");
  } // [[varname]]


  var regResult2 = varname.match(/^\[\[(\w+)(\:\w+)?\]\]/);

  if (regResult2) {
    varFlag = true;
    varname = "${".concat(regResult2[1], ":json}");
  }

  return {
    varname: varname,
    varFlag: varFlag
  };
}

function ReplaceVariable(templateSrv, scopedVars, field, multiple) {
  if (multiple === void 0) {
    multiple = false;
  }

  var _a = parseVariableFormat(field),
      varname = _a.varname,
      varFlag = _a.varFlag;

  var replaceVar = templateSrv.replace(varname, scopedVars);

  if (varFlag) {
    try {
      replaceVar = JSON.parse(replaceVar);
    } catch (error) {}
  }

  if (!multiple && lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(replaceVar)) {
    replaceVar = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(replaceVar, '0', '');
  }

  return replaceVar;
} // get dimensions for instance query param

function GetDimensions(obj) {
  if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(obj)) {
    return [];
  }

  var dimensions = [];

  lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(obj, function (item) {
    if (item.Value !== null && item.Value !== undefined && item.Value !== '') {
      dimensions.push({
        Name: item.Name,
        Value: typeof item.Value === 'string' ? item.Value : "".concat(item.Value)
      });
    }
  });

  return dimensions;
} // parse query data result for panel

function ParseQueryResult(response, instances, timeshift) {
  if (instances === void 0) {
    instances = [];
  }

  if (timeshift === void 0) {
    timeshift = 0;
  }

  var instanceList = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.cloneDeep(instances);

  var dataPoints = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(response, 'DataPoints', []);

  return lodash__WEBPACK_IMPORTED_MODULE_0___default.a.map(dataPoints, function (dataPoint) {
    var instanceAliasValue = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(dataPoint, 'Dimensions[0].Value');

    for (var i = 0; i < instanceList.length; i++) {
      if (isInstanceMatch(instanceList[i], lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(dataPoint, 'Dimensions', []))) {
        instanceAliasValue = instanceList[i]._InstanceAliasValue;
        instanceList.splice(i, 1);
        break;
      }
    }

    return {
      target: "".concat(response.MetricName, " - ").concat(instanceAliasValue),
      datapoints: parseDataPoint(dataPoint, timeshift)
    };
  });
} // parse tencent cloud monitor response data to grafana panel data

function parseDataPoint(dataPoint, timeshift) {
  if (timeshift === void 0) {
    timeshift = 0;
  }

  var timestamps = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(dataPoint, 'Timestamps', []);

  var values = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(dataPoint, 'Values', []);

  var result = timestamps.map(function (timestamp, index) {
    return [values[index], timestamp * 1000 + timeshift];
  });
  return result;
} // check whether instance is match or not


function isInstanceMatch(instance, dimensions) {
  var match = true; // eslint-disable-next-line @typescript-eslint/prefer-for-of

  for (var i = 0; i < dimensions.length; i++) {
    if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(instance, dimensions[i].Name, '').toString() !== dimensions[i].Value.toString()) {
      match = false;
      break;
    }
  }

  return match;
}
/**
 * 检查某个变量是否模板变量，即是否匹配 ${varnam} 或 [[varname]]
 *
 * @param field 变量字段名
 */


function isVariable(value) {
  if (value && (value.match(/^\${?(\w+)}?/) || value.match(/^\[\[(\w+)(\:\w+)?\]\]/))) {
    return true;
  }

  return false;
}
/**
 * 腾讯云 API 3.0 接口协议
 * @param options 接口请求对象 { url: string, data?: object }
 * @param service 产品名字 'cvm'
 * @param signObj 接口请求相关信息 { region?: string, action: string }
 * @param secretId
 * @param secretKey
 */

function GetRequestParams(options, service, signObj, secretId, datasourceId, backendSrv) {
  if (signObj === void 0) {
    signObj = {};
  }

  return __awaiter(this, void 0, void 0, function () {
    var signParams, sign, _a, intranet, headerSigned;

    return __generator(this, function (_b) {
      switch (_b.label) {
        case 0:
          signParams = __assign(__assign(__assign({
            secretId: secretId,
            payload: options.data || ''
          }, signObj), lodash__WEBPACK_IMPORTED_MODULE_0___default.a.pick(GetServiceAPIInfo(signObj.region || '', service), ['service', 'host', 'version']) || {}), {
            backendSrv: backendSrv,
            datasourceId: datasourceId,
            region: 'ap-guangzhou'
          });
          sign = new _sign__WEBPACK_IMPORTED_MODULE_3__["default"](signParams);
          return [4
          /*yield*/
          , sign.getHeader()];

        case 1:
          _a = _b.sent(), intranet = _a.intranet, headerSigned = __rest(_a, ["intranet"]); // 传入x-tc-language实现国际化
          // zh-CN en-US ko-KR ja-JP

          options.headers = Object.assign(options.headers || {}, __assign({}, headerSigned), {
            'x-tc-language': Object(_locale__WEBPACK_IMPORTED_MODULE_6__["getLanguage"])()
          });
          options.method = 'POST';

          if (intranet) {
            options.url += '-internal';
          }

          return [2
          /*return*/
          , options];
      }
    });
  });
}
/**
 *  腾讯云 API 2.0 接口协议
 * @param options 接口请求对象 { url: string, data?: object }
 * @param service 产品名字 'cvm'
 * @param signObj 接口请求相关信息 { region?: string, action: string }
 * @param secretId
 * @param secretKey
 */

function GetRequestParamsV2(options, service, signObj, secretId, datasourceId, backendSrv) {
  if (options === void 0) {
    options = {};
  }

  if (signObj === void 0) {
    signObj = {};
  }

  return __awaiter(this, void 0, void 0, function () {
    var data, signParams, sign, _a, queryString, path, host, intranet;

    return __generator(this, function (_b) {
      switch (_b.label) {
        case 0:
          data = options.data || {};
          signParams = __assign(__assign(__assign({
            secretId: secretId,
            data: data
          }, signObj), lodash__WEBPACK_IMPORTED_MODULE_0___default.a.pick(GetServiceAPIInfo(signObj.region || '', service), ['host', 'version']) || {}), {
            backendSrv: backendSrv,
            datasourceId: datasourceId
          });
          options.method = 'POST';
          sign = new _signV2__WEBPACK_IMPORTED_MODULE_4__["default"](signParams);
          options.headers = Object.assign(options.headers || {}, {
            'Content-Type': 'application/x-www-form-urlencoded'
          });
          return [4
          /*yield*/
          , sign.generateQueryString()];

        case 1:
          _a = _b.sent(), queryString = _a.queryString, path = _a.path, host = _a.host, intranet = _a.intranet;
          options.data = qs__WEBPACK_IMPORTED_MODULE_1___default.a.stringify(__assign(__assign(__assign({}, options.data), queryString), host && {
            host: host
          }));

          if (intranet) {
            // TODO: qcloud.com intranet host
            console.log('got intranet for sign v2');
          }

          options.url += path;
          return [2
          /*return*/
          , options];
      }
    });
  });
}
function SliceLength(total, len) {
  if (total === void 0) {
    total = 0;
  }

  if (len === void 0) {
    len = 1;
  }

  var result = [];
  var num = Math.ceil(total / len);

  for (var i = 1; i < num; i++) {
    result.push({
      Offset: len * i
    });
  }

  return result;
}
var FilterKeys = ['Namespace', 'Offset', 'Limit', 'SearchKey', 'Description', 'OrderBy', 'Order'];
function parseDataFromBackendPlugin(res) {
  var data = Object(_grafana_runtime__WEBPACK_IMPORTED_MODULE_5__["toDataQueryResponse"])(res).data;
  return {
    authorization: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(data, '[0].meta.custom', '')
  };
}
/** 当前环境是否为非生产环境 */

var IS_DEVELOPMENT_ENVIRONMENT = !("development" === 'production');
/**
 * @link https://github.com/grafana/grafana/blob/3c6e0e8ef85048af952367751e478c08342e17b4/packages/grafana-data/src/types/app.ts#L12
 */

var CoreApp;

(function (CoreApp) {
  CoreApp["CloudAlerting"] = "cloud-alerting";
  CoreApp["UnifiedAlerting"] = "unified-alerting";
  CoreApp["Dashboard"] = "dashboard";
  CoreApp["Explore"] = "explore";
  CoreApp["Unknown"] = "unknown";
  CoreApp["PanelEditor"] = "panel-editor";
  CoreApp["PanelViewer"] = "panel-viewer";
})(CoreApp || (CoreApp = {}));

/***/ }),

/***/ "./datasource/common/datasourceStorage.ts":
/*!************************************************!*\
  !*** ./datasource/common/datasourceStorage.ts ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _indexedDB__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./indexedDB */ "./datasource/common/indexedDB.ts");
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};



var InstanceStorage =
/** @class */
function () {
  function InstanceStorage() {
    // prefix = 'Datasource';
    // storageKey = 'grafanaInstanceCache';
    this.insKey = 'Instances';
    this.cacheWay = '';
  }

  InstanceStorage.prototype.setInstance = function (service, value) {
    return this.setStorage(service, this.insKey, value, true);
  };

  InstanceStorage.prototype.getInstance = function (service) {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function (_a) {
        return [2
        /*return*/
        , this.getStorage(service, this.insKey)];
      });
    });
  };

  InstanceStorage.prototype.setExtraStorage = function (service, Ekey, EValue) {
    return this.setStorage(service, Ekey, EValue, false);
  };

  InstanceStorage.prototype.getExtraStorage = function (service, Ekey) {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function (_a) {
        return [2
        /*return*/
        , this.getStorage(service, Ekey)];
      });
    });
  };

  InstanceStorage.prototype.setStorage = function (serviceKey, key, value, isCover) {
    var _a;

    if (isCover === void 0) {
      isCover = false;
    } // console.log('set', serviceKey, key, value);


    return _indexedDB__WEBPACK_IMPORTED_MODULE_0__["default"].addData((_a = {
      service: serviceKey
    }, _a[key] = value, _a), isCover);
  }; // 获取到模版变量信息


  InstanceStorage.prototype.getStorage = function (service, key) {
    return __awaiter(this, void 0, void 0, function () {
      var storage;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , _indexedDB__WEBPACK_IMPORTED_MODULE_0__["default"].getData(service)];

          case 1:
            storage = _a.sent(); // console.log('get', key, storage);

            return [2
            /*return*/
            , key ? storage === null || storage === void 0 ? void 0 : storage[key] : storage];
        }
      });
    });
  };

  return InstanceStorage;
}();

/* harmony default export */ __webpack_exports__["default"] = (new InstanceStorage());

/***/ }),

/***/ "./datasource/common/indexedDB.ts":
/*!****************************************!*\
  !*** ./datasource/common/indexedDB.ts ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
}; // interface UpdateProps {
//   storeName: string;
//   cursorKey: string;
//   cursorValue?: any;
//   data: any;
// }


var store = {
  name: 'grafanaInstanceList',
  key: 'service'
};

var promisify = function promisify(request, type) {
  return new Promise(function (resolve, reject) {
    request.onsuccess = function (event) {
      var returnMap = {
        event: event.target.result,
        request: request.result,
        msg: '操作成功'
      };
      resolve(returnMap[type || 'msg']);
    };

    request.onerror = function (event) {
      return reject(event.target.error || '操作失败');
    };
  });
}; // 固定表名和数据库名


var IndexedDB =
/** @class */
function () {
  function IndexedDB(props) {
    this.name = 'grafanaDatabase';
    this.version = 1;
    var _a = props.name,
        name = _a === void 0 ? 'database' : _a,
        _b = props.version,
        version = _b === void 0 ? 1 : _b,
        store = props.store;
    this.name = name;
    this.version = version;
    this.initDB(store);
  }
  /**
   * 初始化数据库
   * @param store 库表的结构
   */


  IndexedDB.prototype.initDB = function (store) {
    var indexeddb = window.indexedDB || window.webkitIndexedDB || window.mozIndexedDB || window.msIndexedDB;
    var request = indexeddb.open(this.name, this.version);

    request.onupgradeneeded = function (event) {
      var db = event.target.result;

      if (db.objectStoreNames.contains(store.name)) {// 存在表store
      } //  遍历store，设置数据表结构


      db.createObjectStore(store.name, {
        keyPath: store.key
      });
    };

    request.onerror = function () {
      return Promise.reject(new Error('初始化数据库失败'));
    };

    request.onsuccess = function () {
      return Promise.resolve('初始化数据库成功');
    };
  };

  IndexedDB.prototype.openDB = function () {
    var indexeddb = window.indexedDB || window.webkitIndexedDB || window.mozIndexedDB || window.msIndexedDB;
    var request = indexeddb.open(this.name, this.version);
    return promisify(request, 'event');
  };
  /**
   * 新增数据
   * @param storeName 表名
   * @param data 添加的数据
   */


  IndexedDB.prototype.insertData = function (storeName, data) {
    return __awaiter(this, void 0, void 0, function () {
      var db, transaction_1, objectStore, error_1;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            _a.trys.push([0, 2,, 3]);

            return [4
            /*yield*/
            , this.openDB()];

          case 1:
            db = _a.sent();
            transaction_1 = db.transaction(storeName, 'readwrite');
            objectStore = transaction_1.objectStore(storeName);
            objectStore.add(data); // console.timeEnd('insertData');

            return [2
            /*return*/
            , new Promise(function (resolve, reject) {
              transaction_1.oncomplete = function () {
                // console.timeEnd('insertData');
                resolve('所有数据插入成功');
              };

              transaction_1.onerror = function (event) {
                reject(event);
              };
            })];

          case 2:
            error_1 = _a.sent();
            return [2
            /*return*/
            , Promise.reject(error_1)];

          case 3:
            return [2
            /*return*/
            ];
        }
      });
    });
  };
  /**
   * 更新数据
   * @param props 查询数据的参数以及要修改的值的参数
   */


  IndexedDB.prototype.addData = function (data, isCover) {
    return __awaiter(this, void 0, void 0, function () {
      var storeName, oldData, objectStore, newData, requestUpdate, error_2;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            _a.trys.push([0, 3,, 4]);

            storeName = store.name;
            return [4
            /*yield*/
            , this.getData(data.service)];

          case 1:
            oldData = _a.sent();
            return [4
            /*yield*/
            , this.getObjectStore(storeName, 'readwrite')];

          case 2:
            objectStore = _a.sent();

            if (!oldData) {
              // 不存在则新建
              this.insertData(storeName, data);
            }

            newData = __assign(__assign({}, oldData), data);
            if (isCover) newData = data; // 需要覆盖之前内容

            requestUpdate = objectStore.put(newData); // console.timeEnd('updateData');

            return [2
            /*return*/
            , promisify(requestUpdate)];

          case 3:
            error_2 = _a.sent();
            return [2
            /*return*/
            , Promise.reject(error_2)];

          case 4:
            return [2
            /*return*/
            ];
        }
      });
    });
  };
  /**
   * 获取数据库的值，返回查询到的第一项
   * @param storeName 表名/存储对象的键
   * @param cursorKey key
   * @param cursorValue 要查询索引的值
   */


  IndexedDB.prototype.getData = function (seviceName) {
    return __awaiter(this, void 0, void 0, function () {
      var storeName, objectStore, request, error_3;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            _a.trys.push([0, 2,, 3]);

            storeName = store.name;
            return [4
            /*yield*/
            , this.getObjectStore(storeName)];

          case 1:
            objectStore = _a.sent();
            request = objectStore.get(seviceName); // console.timeEnd('getData');

            return [2
            /*return*/
            , promisify(request, 'request')];

          case 2:
            error_3 = _a.sent();
            return [2
            /*return*/
            , Promise.reject(error_3)];

          case 3:
            return [2
            /*return*/
            ];
        }
      });
    });
  };

  IndexedDB.prototype.getAllData = function (storeName) {
    return __awaiter(this, void 0, void 0, function () {
      var objectStore, request, result, error_4;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            _a.trys.push([0, 3,, 4]);

            return [4
            /*yield*/
            , this.getObjectStore(storeName)];

          case 1:
            objectStore = _a.sent();
            request = objectStore.getAll();
            return [4
            /*yield*/
            , promisify(request, 'request')];

          case 2:
            result = _a.sent(); // console.timeEnd('getAllData');

            return [2
            /*return*/
            , result ? result : []];

          case 3:
            error_4 = _a.sent();
            return [2
            /*return*/
            , Promise.reject(error_4)];

          case 4:
            return [2
            /*return*/
            ];
        }
      });
    });
  };
  /**
   * 获取对象仓库
   * @param storeName 表名
   * @param type readonly 或者 readwrite等
   */


  IndexedDB.prototype.getObjectStore = function (storeName, type) {
    return __awaiter(this, void 0, Promise, function () {
      var db, error_5;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            _a.trys.push([0, 2,, 3]);

            return [4
            /*yield*/
            , this.openDB()];

          case 1:
            db = _a.sent();
            return [2
            /*return*/
            , db.transaction(storeName, type).objectStore(storeName)];

          case 2:
            error_5 = _a.sent();
            return [2
            /*return*/
            , Promise.reject(error_5)];

          case 3:
            return [2
            /*return*/
            ];
        }
      });
    });
  };

  return IndexedDB;
}(); // console.log('testDDB')
// const indexDB = new IndexedDB({store});
// indexDB.addData({service: 'cvm', instance: [{ins: 23}]}).then(e=>{
//   indexDB.getData('cvm').then(dd=>{console.log({dd})})
// })


/* harmony default export */ __webpack_exports__["default"] = (new IndexedDB({
  store: store
}));

/***/ }),

/***/ "./datasource/common/sign.ts":
/*!***********************************!*\
  !*** ./datasource/common/sign.ts ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! moment */ "moment");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_0__);
var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};


var HttpRequestMethod = 'POST';
var CanonicalUri = '/';
var CanonicalQueryString = '';
var ContentType = 'application/json';

var Sign =
/** @class */
function () {
  function Sign(options) {
    var secretId = options.secretId,
        service = options.service,
        action = options.action,
        host = options.host,
        version = options.version,
        _a = options.payload,
        payload = _a === void 0 ? '' : _a,
        region = options.region,
        backendSrv = options.backendSrv,
        datasourceId = options.datasourceId;
    this.secretId = secretId; // this.secretKey = secretKey;

    this.service = service;
    this.action = action;
    this.host = host;
    this.version = version;
    this.payload = typeof payload === 'string' ? payload : JSON.stringify(payload);
    this.region = region;
    var nowDate = moment__WEBPACK_IMPORTED_MODULE_0___default()().utc();
    this.timestamp = nowDate.unix();
    this.date = nowDate.format('YYYY-MM-DD');
    this.backendSrv = backendSrv;
    this.datasourceId = datasourceId;
  }

  Sign.prototype.getHeader = function () {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function (_a) {
        return [2
        /*return*/
        , this.getResourceHeader()];
      });
    });
  };

  Sign.prototype.getResourceHeader = function () {
    var _a, _b, _c;

    return __awaiter(this, void 0, void 0, function () {
      var res, resp, err_1, authorization, token, intranet, grafanaVersion, headers;
      return __generator(this, function (_d) {
        switch (_d.label) {
          case 0:
            res = {};
            _d.label = 1;

          case 1:
            _d.trys.push([1, 3,, 4]);

            return [4
            /*yield*/
            , this.backendSrv.datasourceRequest({
              url: "/api/datasources/".concat(this.datasourceId, "/resources/sign_v3"),
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              data: {
                Host: this.host,
                Service: this.service,
                Version: this.version,
                Action: this.action,
                Region: this.region,
                Timestamp: this.timestamp,
                Method: HttpRequestMethod,
                Uri: CanonicalUri,
                Query: CanonicalQueryString,
                Body: this.payload,
                Headers: {
                  'content-type': ContentType,
                  host: this.host
                }
              }
            })];

          case 2:
            resp = _d.sent();
            res = resp.data;
            return [3
            /*break*/
            , 4];

          case 3:
            err_1 = _d.sent();
            return [3
            /*break*/
            , 4];

          case 4:
            authorization = res.authorization, token = res.token, intranet = res.intranet;
            grafanaVersion = ((_c = (_b = (_a = window.grafanaBootData) === null || _a === void 0 ? void 0 : _a.settings) === null || _b === void 0 ? void 0 : _b.buildInfo) === null || _c === void 0 ? void 0 : _c.version) || '0.0.0';
            headers = __assign(__assign(__assign({
              Authorization: authorization,
              'Content-Type': ContentType,
              'X-TC-Action': this.action,
              'X-TC-Timestamp': this.timestamp.toString(),
              'X-TC-Version': this.version,
              'X-TC-RequestClient': "GF_".concat(grafanaVersion, "_PL_CM_").concat("2.8.7")
            }, this.region && {
              'X-TC-Region': this.region
            }), token && {
              'X-TC-Token': token
            }), {
              intranet: intranet
            });
            return [2
            /*return*/
            , headers];
        }
      });
    });
  };

  return Sign;
}();

/* harmony default export */ __webpack_exports__["default"] = (Sign);

/***/ }),

/***/ "./datasource/common/signV2.ts":
/*!*************************************!*\
  !*** ./datasource/common/signV2.ts ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 *
 * @param defaults 为对象
 * secretId
 * secretKey
 * action
 * region
 * host
 */
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};

var SignV2 =
/** @class */
function () {
  function SignV2(defaults) {
    var _this = this;

    if (defaults === void 0) {
      defaults = {};
    }

    this.defaults = {
      path: '/v2/index.php',
      method: 'POST'
    };

    this.generateQueryString = function () {
      return __awaiter(_this, void 0, void 0, function () {
        return __generator(this, function (_a) {
          return [2
          /*return*/
          , this.getResourceQueryString()];
        });
      });
    };

    this.defaults = Object.assign(this.defaults, defaults);
    this.defaults.secretKey = '';
    this.backendSrv = defaults.backendSrv;
    this.datasourceId = defaults.datasourceId;
  }

  SignV2.prototype.getResourceQueryString = function () {
    return __awaiter(this, void 0, void 0, function () {
      var res, data, payload, resp, err_1, path, querystring, host, intranet;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            res = {};
            _a.label = 1;

          case 1:
            _a.trys.push([1, 3,, 4]);

            data = this.defaults.data;
            payload = typeof data === 'string' ? data : JSON.stringify(data);
            return [4
            /*yield*/
            , this.backendSrv.datasourceRequest({
              url: "/api/datasources/".concat(this.datasourceId, "/resources/sign_v2"),
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              data: {
                Host: this.defaults.host,
                Action: this.defaults.action,
                Version: this.defaults.version,
                Region: this.defaults.region,
                Method: this.defaults.method,
                Uri: this.defaults.path,
                Query: '',
                Body: payload
              }
            })];

          case 2:
            resp = _a.sent();
            res = resp.data;
            return [3
            /*break*/
            , 4];

          case 3:
            err_1 = _a.sent();
            return [3
            /*break*/
            , 4];

          case 4:
            path = res.path, querystring = res.querystring, host = res.host, intranet = res.intranet;
            return [2
            /*return*/
            , {
              queryString: querystring,
              path: path,
              host: host,
              intranet: intranet
            }];
        }
      });
    });
  };

  return SignV2;
}();

/* harmony default export */ __webpack_exports__["default"] = (SignV2);

/***/ }),

/***/ "./datasource/common/utils.ts":
/*!************************************!*\
  !*** ./datasource/common/utils.ts ***!
  \************************************/
/*! exports provided: fetchAllFactory, instanceQueryParamsBaseParse, getNamesapceFromService, serviceGroupBy, isTargetEqual, getTimeShiftInMs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fetchAllFactory", function() { return fetchAllFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "instanceQueryParamsBaseParse", function() { return instanceQueryParamsBaseParse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getNamesapceFromService", function() { return getNamesapceFromService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "serviceGroupBy", function() { return serviceGroupBy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isTargetEqual", function() { return isTargetEqual; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTimeShiftInMs", function() { return getTimeShiftInMs; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _tc_monitor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tc_monitor */ "./datasource/tc_monitor/index.ts");
var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};



/* 从分页数据获取全量数据 */

var PageSize = 50;

function getFieldsValue(value, fields) {
  return fields.map(function (item) {
    return lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(value, item, lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(value, "Result.".concat(item), []));
  });
}

function fetchAllFactory(fetcher, _params, field) {
  var _a, _b, _c, _d, _e, _f, _g, _h;

  return __awaiter(this, void 0, void 0, function () {
    var params, rs, fields, TotalCount, firstLists, delta, batchCount, pmList, resultList;
    return __generator(this, function (_j) {
      switch (_j.label) {
        case 0:
          params = __assign({}, lodash__WEBPACK_IMPORTED_MODULE_0___default.a.omit(_params, ['isOffsetPage']));
          params.Limit = params.Limit || PageSize; // 默认给个Limit大小为50

          params.Offset = (_a = params.Offset) !== null && _a !== void 0 ? _a : 0; // 默认给个Offset为0

          return [4
          /*yield*/
          , fetcher(params)];

        case 1:
          rs = (_b = _j.sent()) !== null && _b !== void 0 ? _b : {};
          fields = Array.isArray(field) ? field : [field];
          TotalCount = (_h = (_f = (_e = (_c = rs.TotalCount) !== null && _c !== void 0 ? _c : (_d = rs.Result) === null || _d === void 0 ? void 0 : _d.TotalCount) !== null && _e !== void 0 ? _e : rs.TotalCnt) !== null && _f !== void 0 ? _f : (_g = rs.Result) === null || _g === void 0 ? void 0 : _g.TotalCnt) !== null && _h !== void 0 ? _h : 0;
          firstLists = getFieldsValue(rs, fields);

          if (TotalCount === 0 || firstLists[0].length === TotalCount) {
            // 只有一页，结束
            return [2
            /*return*/
            , firstLists];
          }

          delta = TotalCount - firstLists[0].length;
          batchCount = Math.ceil(delta / PageSize);
          pmList = new Array(batchCount).fill(0).map(function (_, index) {
            params.Offset = _params.isOffsetPage ? 1 + index : (1 + index) * params.Limit;
            return fetcher(params);
          });
          return [4
          /*yield*/
          , Promise.all(pmList)];

        case 2:
          resultList = _j.sent();
          return [2
          /*return*/
          , resultList.reduce(function (acc, cur) {
            var lists = getFieldsValue(cur, fields); // [[], [], []] + [[], [], []]

            acc.forEach(function (list, index) {
              return list.push.apply(list, lists[index]);
            });
            return acc;
          }, firstLists)];
      }
    });
  });
}
/**
 * 实例列表接口入参处理
 *
 * @param queries 表单键入内容
 * @param isFilter 是否需要设置为Filters格式
 */

function instanceQueryParamsBaseParse(queries, isFilter) {
  var params = {};

  if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(queries)) {
    params.Limit = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Limit', 20) || 20;
    params.Offset = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Offset', 0) || 0;
    queries = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.omit(queries, ['Offset', 'Limit']);
    var Filters_1 = [];

    lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(queries, function (item, key) {
      if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(item)) {
        item = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(item);

        if (item.length > 0) {
          if (isFilter) {
            Filters_1.push({
              Name: key,
              Values: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(item).slice(0, 5)
            });
          } else {
            params[key] = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(item);
          }
        }
      } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(item)) {
        if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNumber(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', undefined)) || !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', undefined))) {
          if (isFilter) {
            Filters_1.push({
              Name: key,
              Values: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', []).slice(0, 5)
            });
          } else {
            params[key] = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value');
          }
        }
      } else if (item !== null && item !== undefined && item !== '') {
        if (isFilter) {
          Filters_1.push({
            Name: key,
            Values: item
          });
        } else {
          params[key] = item;
        }
      }
    });

    if (isFilter && Filters_1.length > 0) {
      params.Filters = Filters_1;
      return params;
    }
  }

  return params;
}
function getNamesapceFromService(serviceName) {
  return lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.find(_tc_monitor__WEBPACK_IMPORTED_MODULE_1__["SERVICES"], function (service) {
    return service.service === serviceName;
  }), 'namespace');
}
function serviceGroupBy(services) {
  var result = services.reduce(function (acc, cur) {
    var namespace = cur.namespace,
        label = cur.label,
        _a = cur.groupName,
        groupName = _a === void 0 ? label : _a;
    var existedGroup = acc.find(function (item) {
      return item.label === groupName;
    });

    if (!existedGroup) {
      acc.push({
        label: groupName,
        value: groupName,
        items: [{
          label: label,
          value: namespace
        }]
      });
      return acc;
    }

    existedGroup.items.push({
      label: label,
      value: namespace
    });
    return acc;
  }, []); // 将只有一个子元素的项目进行特殊处理

  var rs = result.map(function (item) {
    return item.items.length === 1 ? {
      label: item.items[0].label,
      value: item.items[0].value
    } : item;
  });
  return rs;
}
var isTargetEqual = function isTargetEqual(newTargetString, oldTargetString, key) {
  try {
    var newTarget = JSON.parse(newTargetString);
    var oldTarget = JSON.parse(oldTargetString);
    return newTarget[key] === oldTarget[key];
  } catch (e) {
    return newTargetString === oldTargetString;
  }
};
var getTimeShiftInMs = function getTimeShiftInMs(timeShift) {
  var parts = /^(\d+)([d|h|m|s])$/.exec(timeShift);

  if (!parts) {
    return 0;
  }

  var amount = parseInt(parts[1], 10);
  var unit = parts[2];

  switch (unit) {
    case 'd':
      return amount * 86400 * 1000;

    case 'h':
      return amount * 3600 * 1000;

    case 'm':
      return amount * 60 * 1000;

    case 's':
      return amount * 1000;
  }

  return 0;
};

/***/ }),

/***/ "./datasource/plugin.json":
/*!********************************!*\
  !*** ./datasource/plugin.json ***!
  \********************************/
/*! exports provided: type, name, id, backend, alerting, logs, metrics, annotations, executable, queryOptions, routes, info, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"type\":\"datasource\",\"name\":\"Tencent Cloud Monitoring\",\"id\":\"tencentcloud-monitor-datasource\",\"backend\":true,\"alerting\":true,\"logs\":true,\"metrics\":true,\"annotations\":false,\"executable\":\"tencentcloud-monitor-app-backend\",\"queryOptions\":{\"maxDataPoints\":true},\"routes\":[{\"path\":\"cls-internal\",\"url\":\"https://cls.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"region-internal\",\"url\":\"https://region.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"api-internal\",\"url\":\"https://api.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"cmq-internal\",\"url\":\"https://cmq.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/cmq/shanghai-internal\",\"url\":\"https://cmq.ap-shanghai-fsi.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/cmq/shenzhen-internal\",\"url\":\"https://cmq.ap-shenzhen-fsi.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"emr-internal\",\"url\":\"https://emr.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/emr/shanghai-internal\",\"url\":\"https://emr.ap-shanghai-fsi.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/emr/shenzhen-internal\",\"url\":\"https://emr.ap-shenzhen-fsi.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"scf-internal\",\"url\":\"https://scf.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/scf/shanghai-internal\",\"url\":\"https://scf.ap-shanghai-fsi.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/scf/shenzhen-internal\",\"url\":\"https://scf.ap-shenzhen-fsi.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"cfs-internal\",\"url\":\"https://cfs.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/cfs/shanghai-internal\",\"url\":\"https://cfs.ap-shanghai-fsi.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/cfs/shenzhen-internal\",\"url\":\"https://cfs.ap-shenzhen-fsi.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"ckafka-internal\",\"url\":\"https://ckafka.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/ckafka/shanghai-internal\",\"url\":\"https://ckafka.ap-shanghai-fsi.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/ckafka/shenzhen-internal\",\"url\":\"https://ckafka.ap-shenzhen-fsi.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"clb-internal\",\"url\":\"https://clb.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/clb/shanghai-internal\",\"url\":\"https://clb.ap-shanghai-fsi.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/clb/shenzhen-internal\",\"url\":\"https://clb.ap-shenzhen-fsi.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"mongodb-internal\",\"url\":\"https://mongodb.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/mongodb/shanghai-internal\",\"url\":\"https://mongodb.ap-shanghai-fsi.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/mongodb/shenzhen-internal\",\"url\":\"https://mongodb.ap-shenzhen-fsi.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"vpc-internal\",\"url\":\"https://vpc.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/vpc/shanghai-internal\",\"url\":\"https://vpc.ap-shanghai-fsi.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/vpc/shenzhen-internal\",\"url\":\"https://vpc.ap-shenzhen-fsi.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"pcx-internal\",\"url\":\"https://vpc.api.qcloud.com.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/x-www-form-urlencoded\"}]},{\"path\":\"cvm-internal\",\"url\":\"https://cvm.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/cvm/shanghai-internal\",\"url\":\"https://cvm.ap-shanghai-fsi.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/cvm/shenzhen-internal\",\"url\":\"https://cvm.ap-shenzhen-fsi.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"monitor-internal\",\"url\":\"https://monitor.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/monitor/shanghai-internal\",\"url\":\"https://monitor.ap-shanghai-fsi.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/monitor/shenzhen-internal\",\"url\":\"https://monitor.ap-shenzhen-fsi.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"cdb-internal\",\"url\":\"https://cdb.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/cdb/shanghai-internal\",\"url\":\"https://cdb.ap-shanghai-fsi.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/cdb/shenzhen-internal\",\"url\":\"https://cdb.ap-shenzhen-fsi.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"postgres-internal\",\"url\":\"https://postgres.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/postgres/shanghai-internal\",\"url\":\"https://postgres.ap-shanghai-fsi.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/postgres/shenzhen-internal\",\"url\":\"https://postgres.ap-shenzhen-fsi.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"cdn-internal\",\"url\":\"https://cdn.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"redis-internal\",\"url\":\"https://redis.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"dcdb-internal\",\"url\":\"https://dcdb.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"dc-internal\",\"url\":\"https://dc.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"cynosdb-internal\",\"url\":\"https://cynosdb.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"sqlserver-internal\",\"url\":\"https://sqlserver.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"bmeip-internal\",\"url\":\"https://bmeip.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"bmvpc-internal\",\"url\":\"https://bmvpc.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"bmlb-internal\",\"url\":\"https://bmlb.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"bm-internal\",\"url\":\"https://bm.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"es-internal\",\"url\":\"https://es.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"cbs-internal\",\"url\":\"https://cbs.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"tcaplusdb-internal\",\"url\":\"https://tcaplusdb.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"apigateway-internal\",\"url\":\"https://apigateway.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"tdmq-internal\",\"url\":\"https://tdmq.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"gaap-internal\",\"url\":\"https://gaap.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"ecm-internal\",\"url\":\"https://ecm.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"gse-internal\",\"url\":\"https://gse.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"lighthouse-internal\",\"url\":\"https://lighthouse.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"tsf-internal\",\"url\":\"https://tsf.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"rum-internal\",\"url\":\"https://rum.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"tke-internal\",\"url\":\"https://tke.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"ecdn-internal\",\"url\":\"https://ecdn.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"waf-internal\",\"url\":\"https://waf.internal.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"apigateway\",\"url\":\"https://apigateway.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"api\",\"url\":\"https://api.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"cmq\",\"url\":\"https://cmq.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/cmq/shanghai\",\"url\":\"https://cmq.ap-shanghai-fsi.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/cmq/shenzhen\",\"url\":\"https://cmq.ap-shenzhen-fsi.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"emr\",\"url\":\"https://emr.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/emr/shanghai\",\"url\":\"https://emr.ap-shanghai-fsi.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/emr/shenzhen\",\"url\":\"https://emr.ap-shenzhen-fsi.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"scf\",\"url\":\"https://scf.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/scf/shanghai\",\"url\":\"https://scf.ap-shanghai-fsi.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/scf/shenzhen\",\"url\":\"https://scf.ap-shenzhen-fsi.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"cfs\",\"url\":\"https://cfs.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/cfs/shanghai\",\"url\":\"https://cfs.ap-shanghai-fsi.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/cfs/shenzhen\",\"url\":\"https://cfs.ap-shenzhen-fsi.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"ckafka\",\"url\":\"https://ckafka.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/ckafka/shanghai\",\"url\":\"https://ckafka.ap-shanghai-fsi.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/ckafka/shenzhen\",\"url\":\"https://ckafka.ap-shenzhen-fsi.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"clb\",\"url\":\"https://clb.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/clb/shanghai\",\"url\":\"https://clb.ap-shanghai-fsi.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/clb/shenzhen\",\"url\":\"https://clb.ap-shenzhen-fsi.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"mongodb\",\"url\":\"https://mongodb.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/mongodb/shanghai\",\"url\":\"https://mongodb.ap-shanghai-fsi.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/mongodb/shenzhen\",\"url\":\"https://mongodb.ap-shenzhen-fsi.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"vpc\",\"url\":\"https://vpc.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/vpc/shanghai\",\"url\":\"https://vpc.ap-shanghai-fsi.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/vpc/shenzhen\",\"url\":\"https://vpc.ap-shenzhen-fsi.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"pcx\",\"url\":\"https://vpc.api.qcloud.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/x-www-form-urlencoded\"}]},{\"path\":\"cvm\",\"url\":\"https://cvm.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/cvm/shanghai\",\"url\":\"https://cvm.ap-shanghai-fsi.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/cvm/shenzhen\",\"url\":\"https://cvm.ap-shenzhen-fsi.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"monitor\",\"url\":\"https://monitor.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/monitor/shanghai\",\"url\":\"https://monitor.ap-shanghai-fsi.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/monitor/shenzhen\",\"url\":\"https://monitor.ap-shenzhen-fsi.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"cdb\",\"url\":\"https://cdb.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/cdb/shanghai\",\"url\":\"https://cdb.ap-shanghai-fsi.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/cdb/shenzhen\",\"url\":\"https://cdb.ap-shenzhen-fsi.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"postgres\",\"url\":\"https://postgres.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/postgres/shanghai\",\"url\":\"https://postgres.ap-shanghai-fsi.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/postgres/shenzhen\",\"url\":\"https://postgres.ap-shenzhen-fsi.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"cdn\",\"url\":\"https://cdn.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"redis\",\"url\":\"https://redis.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"dcdb\",\"url\":\"https://dcdb.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"dc\",\"url\":\"https://dc.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"cynosdb\",\"url\":\"https://cynosdb.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"sqlserver\",\"url\":\"https://sqlserver.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"bmeip\",\"url\":\"https://bmeip.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"bmvpc\",\"url\":\"https://bmvpc.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"bmlb\",\"url\":\"https://bmlb.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"bm\",\"url\":\"https://bm.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"es\",\"url\":\"https://es.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"cbs\",\"url\":\"https://cbs.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"tcaplusdb\",\"url\":\"https://tcaplusdb.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"tdmq\",\"url\":\"https://tdmq.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"gaap\",\"url\":\"https://gaap.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"ecm\",\"url\":\"https://ecm.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"gse\",\"url\":\"https://gse.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"cls\",\"url\":\"https://cls.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/cls/shanghai\",\"url\":\"https://cls.ap-shanghai-fsi.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"fsi/cls/shenzhen\",\"url\":\"https://cls.ap-shenzhen-fsi.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"region\",\"url\":\"https://region.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"lighthouse\",\"url\":\"https://lighthouse.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"tsf\",\"url\":\"https://tsf.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"rum\",\"url\":\"https://rum.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"apm\",\"url\":\"https://apm.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"tke\",\"url\":\"https://tke.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"ecdn\",\"url\":\"https://ecdn.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]},{\"path\":\"waf\",\"url\":\"https://waf.tencentcloudapi.com\",\"headers\":[{\"name\":\"Content-Type\",\"content\":\"application/json\"}]}],\"info\":{\"author\":{\"name\":\"Tencent Cloud\"},\"logos\":{\"small\":\"img/tencent-cloud.svg\",\"large\":\"img/tencent-cloud.svg\"},\"description\":\"Data source for Tencent Cloud monitoring service\"}}");

/***/ }),

/***/ "./datasource/tc_monitor sync recursive ^.*$":
/*!*****************************************!*\
  !*** ./datasource/tc_monitor sync ^.*$ ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	".": "./datasource/tc_monitor/index.ts",
	"./": "./datasource/tc_monitor/index.ts",
	"./MonitorDatasource": "./datasource/tc_monitor/MonitorDatasource.ts",
	"./MonitorDatasource.ts": "./datasource/tc_monitor/MonitorDatasource.ts",
	"./_base/datasource": "./datasource/tc_monitor/_base/datasource.ts",
	"./_base/datasource.ts": "./datasource/tc_monitor/_base/datasource.ts",
	"./_base/query": "./datasource/tc_monitor/_base/query.ts",
	"./_base/query.ts": "./datasource/tc_monitor/_base/query.ts",
	"./_base/query_filter": "./datasource/tc_monitor/_base/query_filter.ts",
	"./_base/query_filter.ts": "./datasource/tc_monitor/_base/query_filter.ts",
	"./_base/types": "./datasource/tc_monitor/_base/types.ts",
	"./_base/types.ts": "./datasource/tc_monitor/_base/types.ts",
	"./apigateway/datasource": "./datasource/tc_monitor/apigateway/datasource.ts",
	"./apigateway/datasource.ts": "./datasource/tc_monitor/apigateway/datasource.ts",
	"./apigateway/query": "./datasource/tc_monitor/apigateway/query.ts",
	"./apigateway/query.ts": "./datasource/tc_monitor/apigateway/query.ts",
	"./apigateway/query_def": "./datasource/tc_monitor/apigateway/query_def.ts",
	"./apigateway/query_def.ts": "./datasource/tc_monitor/apigateway/query_def.ts",
	"./bmIntraLb/datasource": "./datasource/tc_monitor/bmIntraLb/datasource.ts",
	"./bmIntraLb/datasource.ts": "./datasource/tc_monitor/bmIntraLb/datasource.ts",
	"./bmIntraLb/query": "./datasource/tc_monitor/bmIntraLb/query.ts",
	"./bmIntraLb/query.ts": "./datasource/tc_monitor/bmIntraLb/query.ts",
	"./bmIntraLb/query_def": "./datasource/tc_monitor/bmIntraLb/query_def.ts",
	"./bmIntraLb/query_def.ts": "./datasource/tc_monitor/bmIntraLb/query_def.ts",
	"./bm_lb/datasource": "./datasource/tc_monitor/bm_lb/datasource.ts",
	"./bm_lb/datasource.ts": "./datasource/tc_monitor/bm_lb/datasource.ts",
	"./bm_lb/query": "./datasource/tc_monitor/bm_lb/query.ts",
	"./bm_lb/query.ts": "./datasource/tc_monitor/bm_lb/query.ts",
	"./bm_lb/query_def": "./datasource/tc_monitor/bm_lb/query_def.ts",
	"./bm_lb/query_def.ts": "./datasource/tc_monitor/bm_lb/query_def.ts",
	"./bm_pcx/datasource": "./datasource/tc_monitor/bm_pcx/datasource.ts",
	"./bm_pcx/datasource.ts": "./datasource/tc_monitor/bm_pcx/datasource.ts",
	"./bm_pcx/query": "./datasource/tc_monitor/bm_pcx/query.ts",
	"./bm_pcx/query.ts": "./datasource/tc_monitor/bm_pcx/query.ts",
	"./bm_pcx/query_def": "./datasource/tc_monitor/bm_pcx/query_def.ts",
	"./bm_pcx/query_def.ts": "./datasource/tc_monitor/bm_pcx/query_def.ts",
	"./bwp/datasource": "./datasource/tc_monitor/bwp/datasource.ts",
	"./bwp/datasource.ts": "./datasource/tc_monitor/bwp/datasource.ts",
	"./bwp/query": "./datasource/tc_monitor/bwp/query.ts",
	"./bwp/query.ts": "./datasource/tc_monitor/bwp/query.ts",
	"./bwp/query_def": "./datasource/tc_monitor/bwp/query_def.ts",
	"./bwp/query_def.ts": "./datasource/tc_monitor/bwp/query_def.ts",
	"./cbs/datasource": "./datasource/tc_monitor/cbs/datasource.ts",
	"./cbs/datasource.ts": "./datasource/tc_monitor/cbs/datasource.ts",
	"./cbs/query": "./datasource/tc_monitor/cbs/query.ts",
	"./cbs/query.ts": "./datasource/tc_monitor/cbs/query.ts",
	"./cbs/query_def": "./datasource/tc_monitor/cbs/query_def.ts",
	"./cbs/query_def.ts": "./datasource/tc_monitor/cbs/query_def.ts",
	"./cdb/datasource": "./datasource/tc_monitor/cdb/datasource.ts",
	"./cdb/datasource.ts": "./datasource/tc_monitor/cdb/datasource.ts",
	"./cdb/query": "./datasource/tc_monitor/cdb/query.ts",
	"./cdb/query.ts": "./datasource/tc_monitor/cdb/query.ts",
	"./cdb/query_def": "./datasource/tc_monitor/cdb/query_def.ts",
	"./cdb/query_def.ts": "./datasource/tc_monitor/cdb/query_def.ts",
	"./cdn/datasource": "./datasource/tc_monitor/cdn/datasource.ts",
	"./cdn/datasource.ts": "./datasource/tc_monitor/cdn/datasource.ts",
	"./cdn/query": "./datasource/tc_monitor/cdn/query.ts",
	"./cdn/query.ts": "./datasource/tc_monitor/cdn/query.ts",
	"./cdn/query_def": "./datasource/tc_monitor/cdn/query_def.ts",
	"./cdn/query_def.ts": "./datasource/tc_monitor/cdn/query_def.ts",
	"./cdn_province/datasource": "./datasource/tc_monitor/cdn_province/datasource.ts",
	"./cdn_province/datasource.ts": "./datasource/tc_monitor/cdn_province/datasource.ts",
	"./cdn_province/query": "./datasource/tc_monitor/cdn_province/query.ts",
	"./cdn_province/query.ts": "./datasource/tc_monitor/cdn_province/query.ts",
	"./cdn_province/query_def": "./datasource/tc_monitor/cdn_province/query_def.ts",
	"./cdn_province/query_def.ts": "./datasource/tc_monitor/cdn_province/query_def.ts",
	"./ceip_summary/datasource": "./datasource/tc_monitor/ceip_summary/datasource.ts",
	"./ceip_summary/datasource.ts": "./datasource/tc_monitor/ceip_summary/datasource.ts",
	"./ceip_summary/query": "./datasource/tc_monitor/ceip_summary/query.ts",
	"./ceip_summary/query.ts": "./datasource/tc_monitor/ceip_summary/query.ts",
	"./ceip_summary/query_def": "./datasource/tc_monitor/ceip_summary/query_def.ts",
	"./ceip_summary/query_def.ts": "./datasource/tc_monitor/ceip_summary/query_def.ts",
	"./ces/datasource": "./datasource/tc_monitor/ces/datasource.ts",
	"./ces/datasource.ts": "./datasource/tc_monitor/ces/datasource.ts",
	"./ces/query": "./datasource/tc_monitor/ces/query.ts",
	"./ces/query.ts": "./datasource/tc_monitor/ces/query.ts",
	"./ces/query_def": "./datasource/tc_monitor/ces/query_def.ts",
	"./ces/query_def.ts": "./datasource/tc_monitor/ces/query_def.ts",
	"./cfs/datasource": "./datasource/tc_monitor/cfs/datasource.ts",
	"./cfs/datasource.ts": "./datasource/tc_monitor/cfs/datasource.ts",
	"./cfs/query": "./datasource/tc_monitor/cfs/query.ts",
	"./cfs/query.ts": "./datasource/tc_monitor/cfs/query.ts",
	"./cfs/query_def": "./datasource/tc_monitor/cfs/query_def.ts",
	"./cfs/query_def.ts": "./datasource/tc_monitor/cfs/query_def.ts",
	"./ckafka/datasource": "./datasource/tc_monitor/ckafka/datasource.ts",
	"./ckafka/datasource.ts": "./datasource/tc_monitor/ckafka/datasource.ts",
	"./ckafka/query": "./datasource/tc_monitor/ckafka/query.ts",
	"./ckafka/query.ts": "./datasource/tc_monitor/ckafka/query.ts",
	"./ckafka/query_def": "./datasource/tc_monitor/ckafka/query_def.ts",
	"./ckafka/query_def.ts": "./datasource/tc_monitor/ckafka/query_def.ts",
	"./clb/datasource": "./datasource/tc_monitor/clb/datasource.ts",
	"./clb/datasource.ts": "./datasource/tc_monitor/clb/datasource.ts",
	"./clb/query": "./datasource/tc_monitor/clb/query.ts",
	"./clb/query.ts": "./datasource/tc_monitor/clb/query.ts",
	"./clb/query_def": "./datasource/tc_monitor/clb/query_def.ts",
	"./clb/query_def.ts": "./datasource/tc_monitor/clb/query_def.ts",
	"./cls/datasource": "./datasource/tc_monitor/cls/datasource.ts",
	"./cls/datasource.ts": "./datasource/tc_monitor/cls/datasource.ts",
	"./cls/query": "./datasource/tc_monitor/cls/query.ts",
	"./cls/query.ts": "./datasource/tc_monitor/cls/query.ts",
	"./cls/query_def": "./datasource/tc_monitor/cls/query_def.ts",
	"./cls/query_def.ts": "./datasource/tc_monitor/cls/query_def.ts",
	"./cmq/datasource": "./datasource/tc_monitor/cmq/datasource.ts",
	"./cmq/datasource.ts": "./datasource/tc_monitor/cmq/datasource.ts",
	"./cmq/query": "./datasource/tc_monitor/cmq/query.ts",
	"./cmq/query.ts": "./datasource/tc_monitor/cmq/query.ts",
	"./cmq/query_def": "./datasource/tc_monitor/cmq/query_def.ts",
	"./cmq/query_def.ts": "./datasource/tc_monitor/cmq/query_def.ts",
	"./cmq_topic/datasource": "./datasource/tc_monitor/cmq_topic/datasource.ts",
	"./cmq_topic/datasource.ts": "./datasource/tc_monitor/cmq_topic/datasource.ts",
	"./cmq_topic/query": "./datasource/tc_monitor/cmq_topic/query.ts",
	"./cmq_topic/query.ts": "./datasource/tc_monitor/cmq_topic/query.ts",
	"./cmq_topic/query_def": "./datasource/tc_monitor/cmq_topic/query_def.ts",
	"./cmq_topic/query_def.ts": "./datasource/tc_monitor/cmq_topic/query_def.ts",
	"./cos/datasource": "./datasource/tc_monitor/cos/datasource.ts",
	"./cos/datasource.ts": "./datasource/tc_monitor/cos/datasource.ts",
	"./cos/query_def": "./datasource/tc_monitor/cos/query_def.ts",
	"./cos/query_def.ts": "./datasource/tc_monitor/cos/query_def.ts",
	"./cpm/datasource": "./datasource/tc_monitor/cpm/datasource.ts",
	"./cpm/datasource.ts": "./datasource/tc_monitor/cpm/datasource.ts",
	"./cpm/query": "./datasource/tc_monitor/cpm/query.ts",
	"./cpm/query.ts": "./datasource/tc_monitor/cpm/query.ts",
	"./cpm/query_def": "./datasource/tc_monitor/cpm/query_def.ts",
	"./cpm/query_def.ts": "./datasource/tc_monitor/cpm/query_def.ts",
	"./cvm/datasource": "./datasource/tc_monitor/cvm/datasource.ts",
	"./cvm/datasource.ts": "./datasource/tc_monitor/cvm/datasource.ts",
	"./cvm/query": "./datasource/tc_monitor/cvm/query.ts",
	"./cvm/query.ts": "./datasource/tc_monitor/cvm/query.ts",
	"./cvm/query_def": "./datasource/tc_monitor/cvm/query_def.ts",
	"./cvm/query_def.ts": "./datasource/tc_monitor/cvm/query_def.ts",
	"./cynosdb_mysql/datasource": "./datasource/tc_monitor/cynosdb_mysql/datasource.ts",
	"./cynosdb_mysql/datasource.ts": "./datasource/tc_monitor/cynosdb_mysql/datasource.ts",
	"./cynosdb_mysql/query": "./datasource/tc_monitor/cynosdb_mysql/query.ts",
	"./cynosdb_mysql/query.ts": "./datasource/tc_monitor/cynosdb_mysql/query.ts",
	"./cynosdb_mysql/query_def": "./datasource/tc_monitor/cynosdb_mysql/query_def.ts",
	"./cynosdb_mysql/query_def.ts": "./datasource/tc_monitor/cynosdb_mysql/query_def.ts",
	"./dc/datasource": "./datasource/tc_monitor/dc/datasource.ts",
	"./dc/datasource.ts": "./datasource/tc_monitor/dc/datasource.ts",
	"./dc/query": "./datasource/tc_monitor/dc/query.ts",
	"./dc/query.ts": "./datasource/tc_monitor/dc/query.ts",
	"./dc/query_def": "./datasource/tc_monitor/dc/query_def.ts",
	"./dc/query_def.ts": "./datasource/tc_monitor/dc/query_def.ts",
	"./dcdb/datasource": "./datasource/tc_monitor/dcdb/datasource.ts",
	"./dcdb/datasource.ts": "./datasource/tc_monitor/dcdb/datasource.ts",
	"./dcdb/query": "./datasource/tc_monitor/dcdb/query.ts",
	"./dcdb/query.ts": "./datasource/tc_monitor/dcdb/query.ts",
	"./dcdb/query_def": "./datasource/tc_monitor/dcdb/query_def.ts",
	"./dcdb/query_def.ts": "./datasource/tc_monitor/dcdb/query_def.ts",
	"./dcg/datasource": "./datasource/tc_monitor/dcg/datasource.ts",
	"./dcg/datasource.ts": "./datasource/tc_monitor/dcg/datasource.ts",
	"./dcg/query": "./datasource/tc_monitor/dcg/query.ts",
	"./dcg/query.ts": "./datasource/tc_monitor/dcg/query.ts",
	"./dcg/query_def": "./datasource/tc_monitor/dcg/query_def.ts",
	"./dcg/query_def.ts": "./datasource/tc_monitor/dcg/query_def.ts",
	"./dcx/datasource": "./datasource/tc_monitor/dcx/datasource.ts",
	"./dcx/datasource.ts": "./datasource/tc_monitor/dcx/datasource.ts",
	"./dcx/query": "./datasource/tc_monitor/dcx/query.ts",
	"./dcx/query.ts": "./datasource/tc_monitor/dcx/query.ts",
	"./dcx/query_def": "./datasource/tc_monitor/dcx/query_def.ts",
	"./dcx/query_def.ts": "./datasource/tc_monitor/dcx/query_def.ts",
	"./ecdn/datasource": "./datasource/tc_monitor/ecdn/datasource.ts",
	"./ecdn/datasource.ts": "./datasource/tc_monitor/ecdn/datasource.ts",
	"./ecdn/query": "./datasource/tc_monitor/ecdn/query.ts",
	"./ecdn/query.ts": "./datasource/tc_monitor/ecdn/query.ts",
	"./ecdn/query_def": "./datasource/tc_monitor/ecdn/query_def.ts",
	"./ecdn/query_def.ts": "./datasource/tc_monitor/ecdn/query_def.ts",
	"./ecm/datasource": "./datasource/tc_monitor/ecm/datasource.ts",
	"./ecm/datasource.ts": "./datasource/tc_monitor/ecm/datasource.ts",
	"./ecm/query": "./datasource/tc_monitor/ecm/query.ts",
	"./ecm/query.ts": "./datasource/tc_monitor/ecm/query.ts",
	"./ecm/query_def": "./datasource/tc_monitor/ecm/query_def.ts",
	"./ecm/query_def.ts": "./datasource/tc_monitor/ecm/query_def.ts",
	"./ecm_block_storage/datasource": "./datasource/tc_monitor/ecm_block_storage/datasource.ts",
	"./ecm_block_storage/datasource.ts": "./datasource/tc_monitor/ecm_block_storage/datasource.ts",
	"./ecm_block_storage/query": "./datasource/tc_monitor/ecm_block_storage/query.ts",
	"./ecm_block_storage/query.ts": "./datasource/tc_monitor/ecm_block_storage/query.ts",
	"./ecm_block_storage/query_def": "./datasource/tc_monitor/ecm_block_storage/query_def.ts",
	"./ecm_block_storage/query_def.ts": "./datasource/tc_monitor/ecm_block_storage/query_def.ts",
	"./ecm_lb/datasource": "./datasource/tc_monitor/ecm_lb/datasource.ts",
	"./ecm_lb/datasource.ts": "./datasource/tc_monitor/ecm_lb/datasource.ts",
	"./ecm_lb/query": "./datasource/tc_monitor/ecm_lb/query.ts",
	"./ecm_lb/query.ts": "./datasource/tc_monitor/ecm_lb/query.ts",
	"./ecm_lb/query_def": "./datasource/tc_monitor/ecm_lb/query_def.ts",
	"./ecm_lb/query_def.ts": "./datasource/tc_monitor/ecm_lb/query_def.ts",
	"./gse/datasource": "./datasource/tc_monitor/gse/datasource.ts",
	"./gse/datasource.ts": "./datasource/tc_monitor/gse/datasource.ts",
	"./gse/query": "./datasource/tc_monitor/gse/query.ts",
	"./gse/query.ts": "./datasource/tc_monitor/gse/query.ts",
	"./gse/query_def": "./datasource/tc_monitor/gse/query_def.ts",
	"./gse/query_def.ts": "./datasource/tc_monitor/gse/query_def.ts",
	"./index": "./datasource/tc_monitor/index.ts",
	"./index.ts": "./datasource/tc_monitor/index.ts",
	"./lb/datasource": "./datasource/tc_monitor/lb/datasource.ts",
	"./lb/datasource.ts": "./datasource/tc_monitor/lb/datasource.ts",
	"./lb/query": "./datasource/tc_monitor/lb/query.ts",
	"./lb/query.ts": "./datasource/tc_monitor/lb/query.ts",
	"./lb/query_def": "./datasource/tc_monitor/lb/query_def.ts",
	"./lb/query_def.ts": "./datasource/tc_monitor/lb/query_def.ts",
	"./lighthouse/datasource": "./datasource/tc_monitor/lighthouse/datasource.ts",
	"./lighthouse/datasource.ts": "./datasource/tc_monitor/lighthouse/datasource.ts",
	"./lighthouse/query": "./datasource/tc_monitor/lighthouse/query.ts",
	"./lighthouse/query.ts": "./datasource/tc_monitor/lighthouse/query.ts",
	"./lighthouse/query_def": "./datasource/tc_monitor/lighthouse/query_def.ts",
	"./lighthouse/query_def.ts": "./datasource/tc_monitor/lighthouse/query_def.ts",
	"./mongodb/datasource": "./datasource/tc_monitor/mongodb/datasource.ts",
	"./mongodb/datasource.ts": "./datasource/tc_monitor/mongodb/datasource.ts",
	"./mongodb/query": "./datasource/tc_monitor/mongodb/query.ts",
	"./mongodb/query.ts": "./datasource/tc_monitor/mongodb/query.ts",
	"./mongodb/query_def": "./datasource/tc_monitor/mongodb/query_def.ts",
	"./mongodb/query_def.ts": "./datasource/tc_monitor/mongodb/query_def.ts",
	"./mr/datasource": "./datasource/tc_monitor/mr/datasource.ts",
	"./mr/datasource.ts": "./datasource/tc_monitor/mr/datasource.ts",
	"./mr/query": "./datasource/tc_monitor/mr/query.ts",
	"./mr/query.ts": "./datasource/tc_monitor/mr/query.ts",
	"./mr/query_def": "./datasource/tc_monitor/mr/query_def.ts",
	"./mr/query_def.ts": "./datasource/tc_monitor/mr/query_def.ts",
	"./nat_gateway/datasource": "./datasource/tc_monitor/nat_gateway/datasource.ts",
	"./nat_gateway/datasource.ts": "./datasource/tc_monitor/nat_gateway/datasource.ts",
	"./nat_gateway/query": "./datasource/tc_monitor/nat_gateway/query.ts",
	"./nat_gateway/query.ts": "./datasource/tc_monitor/nat_gateway/query.ts",
	"./nat_gateway/query_def": "./datasource/tc_monitor/nat_gateway/query_def.ts",
	"./nat_gateway/query_def.ts": "./datasource/tc_monitor/nat_gateway/query_def.ts",
	"./ov_cdn/datasource": "./datasource/tc_monitor/ov_cdn/datasource.ts",
	"./ov_cdn/datasource.ts": "./datasource/tc_monitor/ov_cdn/datasource.ts",
	"./ov_cdn/query": "./datasource/tc_monitor/ov_cdn/query.ts",
	"./ov_cdn/query.ts": "./datasource/tc_monitor/ov_cdn/query.ts",
	"./ov_cdn/query_def": "./datasource/tc_monitor/ov_cdn/query_def.ts",
	"./ov_cdn/query_def.ts": "./datasource/tc_monitor/ov_cdn/query_def.ts",
	"./pcx/datasource": "./datasource/tc_monitor/pcx/datasource.ts",
	"./pcx/datasource.ts": "./datasource/tc_monitor/pcx/datasource.ts",
	"./pcx/query": "./datasource/tc_monitor/pcx/query.ts",
	"./pcx/query.ts": "./datasource/tc_monitor/pcx/query.ts",
	"./pcx/query_def": "./datasource/tc_monitor/pcx/query_def.ts",
	"./pcx/query_def.ts": "./datasource/tc_monitor/pcx/query_def.ts",
	"./postgresql/datasource": "./datasource/tc_monitor/postgresql/datasource.ts",
	"./postgresql/datasource.ts": "./datasource/tc_monitor/postgresql/datasource.ts",
	"./postgresql/query": "./datasource/tc_monitor/postgresql/query.ts",
	"./postgresql/query.ts": "./datasource/tc_monitor/postgresql/query.ts",
	"./postgresql/query_def": "./datasource/tc_monitor/postgresql/query_def.ts",
	"./postgresql/query_def.ts": "./datasource/tc_monitor/postgresql/query_def.ts",
	"./qaap/datasource": "./datasource/tc_monitor/qaap/datasource.ts",
	"./qaap/datasource.ts": "./datasource/tc_monitor/qaap/datasource.ts",
	"./qaap/query": "./datasource/tc_monitor/qaap/query.ts",
	"./qaap/query.ts": "./datasource/tc_monitor/qaap/query.ts",
	"./qaap/query_def": "./datasource/tc_monitor/qaap/query_def.ts",
	"./qaap/query_def.ts": "./datasource/tc_monitor/qaap/query_def.ts",
	"./redis/datasource": "./datasource/tc_monitor/redis/datasource.ts",
	"./redis/datasource.ts": "./datasource/tc_monitor/redis/datasource.ts",
	"./redis/query": "./datasource/tc_monitor/redis/query.ts",
	"./redis/query.ts": "./datasource/tc_monitor/redis/query.ts",
	"./redis/query_def": "./datasource/tc_monitor/redis/query_def.ts",
	"./redis/query_def.ts": "./datasource/tc_monitor/redis/query_def.ts",
	"./redis_mem/datasource": "./datasource/tc_monitor/redis_mem/datasource.ts",
	"./redis_mem/datasource.ts": "./datasource/tc_monitor/redis_mem/datasource.ts",
	"./redis_mem/query": "./datasource/tc_monitor/redis_mem/query.ts",
	"./redis_mem/query.ts": "./datasource/tc_monitor/redis_mem/query.ts",
	"./redis_mem/query_def": "./datasource/tc_monitor/redis_mem/query_def.ts",
	"./redis_mem/query_def.ts": "./datasource/tc_monitor/redis_mem/query_def.ts",
	"./scf/datasource": "./datasource/tc_monitor/scf/datasource.ts",
	"./scf/datasource.ts": "./datasource/tc_monitor/scf/datasource.ts",
	"./scf/query": "./datasource/tc_monitor/scf/query.ts",
	"./scf/query.ts": "./datasource/tc_monitor/scf/query.ts",
	"./scf/query_def": "./datasource/tc_monitor/scf/query_def.ts",
	"./scf/query_def.ts": "./datasource/tc_monitor/scf/query_def.ts",
	"./sqlserver/datasource": "./datasource/tc_monitor/sqlserver/datasource.ts",
	"./sqlserver/datasource.ts": "./datasource/tc_monitor/sqlserver/datasource.ts",
	"./sqlserver/query": "./datasource/tc_monitor/sqlserver/query.ts",
	"./sqlserver/query.ts": "./datasource/tc_monitor/sqlserver/query.ts",
	"./sqlserver/query_def": "./datasource/tc_monitor/sqlserver/query_def.ts",
	"./sqlserver/query_def.ts": "./datasource/tc_monitor/sqlserver/query_def.ts",
	"./tcaplus/datasource": "./datasource/tc_monitor/tcaplus/datasource.ts",
	"./tcaplus/datasource.ts": "./datasource/tc_monitor/tcaplus/datasource.ts",
	"./tcaplus/query": "./datasource/tc_monitor/tcaplus/query.ts",
	"./tcaplus/query.ts": "./datasource/tc_monitor/tcaplus/query.ts",
	"./tcaplus/query_def": "./datasource/tc_monitor/tcaplus/query_def.ts",
	"./tcaplus/query_def.ts": "./datasource/tc_monitor/tcaplus/query_def.ts",
	"./tdmq/datasource": "./datasource/tc_monitor/tdmq/datasource.ts",
	"./tdmq/datasource.ts": "./datasource/tc_monitor/tdmq/datasource.ts",
	"./tdmq/query": "./datasource/tc_monitor/tdmq/query.ts",
	"./tdmq/query.ts": "./datasource/tc_monitor/tdmq/query.ts",
	"./tdmq/query_def": "./datasource/tc_monitor/tdmq/query_def.ts",
	"./tdmq/query_def.ts": "./datasource/tc_monitor/tdmq/query_def.ts",
	"./tdmq_rabbitmq/datasource": "./datasource/tc_monitor/tdmq_rabbitmq/datasource.ts",
	"./tdmq_rabbitmq/datasource.ts": "./datasource/tc_monitor/tdmq_rabbitmq/datasource.ts",
	"./tdmq_rabbitmq/query": "./datasource/tc_monitor/tdmq_rabbitmq/query.ts",
	"./tdmq_rabbitmq/query.ts": "./datasource/tc_monitor/tdmq_rabbitmq/query.ts",
	"./tdmq_rabbitmq/query_def": "./datasource/tc_monitor/tdmq_rabbitmq/query_def.ts",
	"./tdmq_rabbitmq/query_def.ts": "./datasource/tc_monitor/tdmq_rabbitmq/query_def.ts",
	"./tdmq_rocketmq/datasource": "./datasource/tc_monitor/tdmq_rocketmq/datasource.ts",
	"./tdmq_rocketmq/datasource.ts": "./datasource/tc_monitor/tdmq_rocketmq/datasource.ts",
	"./tdmq_rocketmq/query": "./datasource/tc_monitor/tdmq_rocketmq/query.ts",
	"./tdmq_rocketmq/query.ts": "./datasource/tc_monitor/tdmq_rocketmq/query.ts",
	"./tdmq_rocketmq/query_def": "./datasource/tc_monitor/tdmq_rocketmq/query_def.ts",
	"./tdmq_rocketmq/query_def.ts": "./datasource/tc_monitor/tdmq_rocketmq/query_def.ts",
	"./tke/datasource": "./datasource/tc_monitor/tke/datasource.ts",
	"./tke/datasource.ts": "./datasource/tc_monitor/tke/datasource.ts",
	"./tke/query": "./datasource/tc_monitor/tke/query.ts",
	"./tke/query.ts": "./datasource/tc_monitor/tke/query.ts",
	"./tke/query_def": "./datasource/tc_monitor/tke/query_def.ts",
	"./tke/query_def.ts": "./datasource/tc_monitor/tke/query_def.ts",
	"./tsf/datasource": "./datasource/tc_monitor/tsf/datasource.ts",
	"./tsf/datasource.ts": "./datasource/tc_monitor/tsf/datasource.ts",
	"./tsf/query": "./datasource/tc_monitor/tsf/query.ts",
	"./tsf/query.ts": "./datasource/tc_monitor/tsf/query.ts",
	"./tsf/query_def": "./datasource/tc_monitor/tsf/query_def.ts",
	"./tsf/query_def.ts": "./datasource/tc_monitor/tsf/query_def.ts",
	"./v_clb/datasource": "./datasource/tc_monitor/v_clb/datasource.ts",
	"./v_clb/datasource.ts": "./datasource/tc_monitor/v_clb/datasource.ts",
	"./v_clb/query": "./datasource/tc_monitor/v_clb/query.ts",
	"./v_clb/query.ts": "./datasource/tc_monitor/v_clb/query.ts",
	"./v_clb/query_def": "./datasource/tc_monitor/v_clb/query_def.ts",
	"./v_clb/query_def.ts": "./datasource/tc_monitor/v_clb/query_def.ts",
	"./vbc/datasource": "./datasource/tc_monitor/vbc/datasource.ts",
	"./vbc/datasource.ts": "./datasource/tc_monitor/vbc/datasource.ts",
	"./vbc/query": "./datasource/tc_monitor/vbc/query.ts",
	"./vbc/query.ts": "./datasource/tc_monitor/vbc/query.ts",
	"./vbc/query_def": "./datasource/tc_monitor/vbc/query_def.ts",
	"./vbc/query_def.ts": "./datasource/tc_monitor/vbc/query_def.ts",
	"./vpc_net_detect/datasource": "./datasource/tc_monitor/vpc_net_detect/datasource.ts",
	"./vpc_net_detect/datasource.ts": "./datasource/tc_monitor/vpc_net_detect/datasource.ts",
	"./vpc_net_detect/query": "./datasource/tc_monitor/vpc_net_detect/query.ts",
	"./vpc_net_detect/query.ts": "./datasource/tc_monitor/vpc_net_detect/query.ts",
	"./vpc_net_detect/query_def": "./datasource/tc_monitor/vpc_net_detect/query_def.ts",
	"./vpc_net_detect/query_def.ts": "./datasource/tc_monitor/vpc_net_detect/query_def.ts",
	"./vpngw/datasource": "./datasource/tc_monitor/vpngw/datasource.ts",
	"./vpngw/datasource.ts": "./datasource/tc_monitor/vpngw/datasource.ts",
	"./vpngw/query": "./datasource/tc_monitor/vpngw/query.ts",
	"./vpngw/query.ts": "./datasource/tc_monitor/vpngw/query.ts",
	"./vpngw/query_def": "./datasource/tc_monitor/vpngw/query_def.ts",
	"./vpngw/query_def.ts": "./datasource/tc_monitor/vpngw/query_def.ts",
	"./vpnx/datasource": "./datasource/tc_monitor/vpnx/datasource.ts",
	"./vpnx/datasource.ts": "./datasource/tc_monitor/vpnx/datasource.ts",
	"./vpnx/query": "./datasource/tc_monitor/vpnx/query.ts",
	"./vpnx/query.ts": "./datasource/tc_monitor/vpnx/query.ts",
	"./vpnx/query_def": "./datasource/tc_monitor/vpnx/query_def.ts",
	"./vpnx/query_def.ts": "./datasource/tc_monitor/vpnx/query_def.ts",
	"./waf/datasource": "./datasource/tc_monitor/waf/datasource.ts",
	"./waf/datasource.ts": "./datasource/tc_monitor/waf/datasource.ts",
	"./waf/query": "./datasource/tc_monitor/waf/query.ts",
	"./waf/query.ts": "./datasource/tc_monitor/waf/query.ts",
	"./waf/query_def": "./datasource/tc_monitor/waf/query_def.ts",
	"./waf/query_def.ts": "./datasource/tc_monitor/waf/query_def.ts"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./datasource/tc_monitor sync recursive ^.*$";

/***/ }),

/***/ "./datasource/tc_monitor sync recursive ^\\.\\/[a-zA-Z]\\w+\\/(datasource)|(query(_def)?)\\.ts$":
/*!***************************************************************************************!*\
  !*** ./datasource/tc_monitor sync ^\.\/[a-zA-Z]\w+\/(datasource)|(query(_def)?)\.ts$ ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./_base/query.ts": "./datasource/tc_monitor/_base/query.ts",
	"./apigateway/datasource": "./datasource/tc_monitor/apigateway/datasource.ts",
	"./apigateway/datasource.ts": "./datasource/tc_monitor/apigateway/datasource.ts",
	"./apigateway/query.ts": "./datasource/tc_monitor/apigateway/query.ts",
	"./apigateway/query_def.ts": "./datasource/tc_monitor/apigateway/query_def.ts",
	"./bmIntraLb/datasource": "./datasource/tc_monitor/bmIntraLb/datasource.ts",
	"./bmIntraLb/datasource.ts": "./datasource/tc_monitor/bmIntraLb/datasource.ts",
	"./bmIntraLb/query.ts": "./datasource/tc_monitor/bmIntraLb/query.ts",
	"./bmIntraLb/query_def.ts": "./datasource/tc_monitor/bmIntraLb/query_def.ts",
	"./bm_lb/datasource": "./datasource/tc_monitor/bm_lb/datasource.ts",
	"./bm_lb/datasource.ts": "./datasource/tc_monitor/bm_lb/datasource.ts",
	"./bm_lb/query.ts": "./datasource/tc_monitor/bm_lb/query.ts",
	"./bm_lb/query_def.ts": "./datasource/tc_monitor/bm_lb/query_def.ts",
	"./bm_pcx/datasource": "./datasource/tc_monitor/bm_pcx/datasource.ts",
	"./bm_pcx/datasource.ts": "./datasource/tc_monitor/bm_pcx/datasource.ts",
	"./bm_pcx/query.ts": "./datasource/tc_monitor/bm_pcx/query.ts",
	"./bm_pcx/query_def.ts": "./datasource/tc_monitor/bm_pcx/query_def.ts",
	"./bwp/datasource": "./datasource/tc_monitor/bwp/datasource.ts",
	"./bwp/datasource.ts": "./datasource/tc_monitor/bwp/datasource.ts",
	"./bwp/query.ts": "./datasource/tc_monitor/bwp/query.ts",
	"./bwp/query_def.ts": "./datasource/tc_monitor/bwp/query_def.ts",
	"./cbs/datasource": "./datasource/tc_monitor/cbs/datasource.ts",
	"./cbs/datasource.ts": "./datasource/tc_monitor/cbs/datasource.ts",
	"./cbs/query.ts": "./datasource/tc_monitor/cbs/query.ts",
	"./cbs/query_def.ts": "./datasource/tc_monitor/cbs/query_def.ts",
	"./cdb/datasource": "./datasource/tc_monitor/cdb/datasource.ts",
	"./cdb/datasource.ts": "./datasource/tc_monitor/cdb/datasource.ts",
	"./cdb/query.ts": "./datasource/tc_monitor/cdb/query.ts",
	"./cdb/query_def.ts": "./datasource/tc_monitor/cdb/query_def.ts",
	"./cdn/datasource": "./datasource/tc_monitor/cdn/datasource.ts",
	"./cdn/datasource.ts": "./datasource/tc_monitor/cdn/datasource.ts",
	"./cdn/query.ts": "./datasource/tc_monitor/cdn/query.ts",
	"./cdn/query_def.ts": "./datasource/tc_monitor/cdn/query_def.ts",
	"./cdn_province/datasource": "./datasource/tc_monitor/cdn_province/datasource.ts",
	"./cdn_province/datasource.ts": "./datasource/tc_monitor/cdn_province/datasource.ts",
	"./cdn_province/query.ts": "./datasource/tc_monitor/cdn_province/query.ts",
	"./cdn_province/query_def.ts": "./datasource/tc_monitor/cdn_province/query_def.ts",
	"./ceip_summary/datasource": "./datasource/tc_monitor/ceip_summary/datasource.ts",
	"./ceip_summary/datasource.ts": "./datasource/tc_monitor/ceip_summary/datasource.ts",
	"./ceip_summary/query.ts": "./datasource/tc_monitor/ceip_summary/query.ts",
	"./ceip_summary/query_def.ts": "./datasource/tc_monitor/ceip_summary/query_def.ts",
	"./ces/datasource": "./datasource/tc_monitor/ces/datasource.ts",
	"./ces/datasource.ts": "./datasource/tc_monitor/ces/datasource.ts",
	"./ces/query.ts": "./datasource/tc_monitor/ces/query.ts",
	"./ces/query_def.ts": "./datasource/tc_monitor/ces/query_def.ts",
	"./cfs/datasource": "./datasource/tc_monitor/cfs/datasource.ts",
	"./cfs/datasource.ts": "./datasource/tc_monitor/cfs/datasource.ts",
	"./cfs/query.ts": "./datasource/tc_monitor/cfs/query.ts",
	"./cfs/query_def.ts": "./datasource/tc_monitor/cfs/query_def.ts",
	"./ckafka/datasource": "./datasource/tc_monitor/ckafka/datasource.ts",
	"./ckafka/datasource.ts": "./datasource/tc_monitor/ckafka/datasource.ts",
	"./ckafka/query.ts": "./datasource/tc_monitor/ckafka/query.ts",
	"./ckafka/query_def.ts": "./datasource/tc_monitor/ckafka/query_def.ts",
	"./clb/datasource": "./datasource/tc_monitor/clb/datasource.ts",
	"./clb/datasource.ts": "./datasource/tc_monitor/clb/datasource.ts",
	"./clb/query.ts": "./datasource/tc_monitor/clb/query.ts",
	"./clb/query_def.ts": "./datasource/tc_monitor/clb/query_def.ts",
	"./cls/datasource": "./datasource/tc_monitor/cls/datasource.ts",
	"./cls/datasource.ts": "./datasource/tc_monitor/cls/datasource.ts",
	"./cls/query.ts": "./datasource/tc_monitor/cls/query.ts",
	"./cls/query_def.ts": "./datasource/tc_monitor/cls/query_def.ts",
	"./cmq/datasource": "./datasource/tc_monitor/cmq/datasource.ts",
	"./cmq/datasource.ts": "./datasource/tc_monitor/cmq/datasource.ts",
	"./cmq/query.ts": "./datasource/tc_monitor/cmq/query.ts",
	"./cmq/query_def.ts": "./datasource/tc_monitor/cmq/query_def.ts",
	"./cmq_topic/datasource": "./datasource/tc_monitor/cmq_topic/datasource.ts",
	"./cmq_topic/datasource.ts": "./datasource/tc_monitor/cmq_topic/datasource.ts",
	"./cmq_topic/query.ts": "./datasource/tc_monitor/cmq_topic/query.ts",
	"./cmq_topic/query_def.ts": "./datasource/tc_monitor/cmq_topic/query_def.ts",
	"./cos/datasource": "./datasource/tc_monitor/cos/datasource.ts",
	"./cos/datasource.ts": "./datasource/tc_monitor/cos/datasource.ts",
	"./cos/query_def.ts": "./datasource/tc_monitor/cos/query_def.ts",
	"./cpm/datasource": "./datasource/tc_monitor/cpm/datasource.ts",
	"./cpm/datasource.ts": "./datasource/tc_monitor/cpm/datasource.ts",
	"./cpm/query.ts": "./datasource/tc_monitor/cpm/query.ts",
	"./cpm/query_def.ts": "./datasource/tc_monitor/cpm/query_def.ts",
	"./cvm/datasource": "./datasource/tc_monitor/cvm/datasource.ts",
	"./cvm/datasource.ts": "./datasource/tc_monitor/cvm/datasource.ts",
	"./cvm/query.ts": "./datasource/tc_monitor/cvm/query.ts",
	"./cvm/query_def.ts": "./datasource/tc_monitor/cvm/query_def.ts",
	"./cynosdb_mysql/datasource": "./datasource/tc_monitor/cynosdb_mysql/datasource.ts",
	"./cynosdb_mysql/datasource.ts": "./datasource/tc_monitor/cynosdb_mysql/datasource.ts",
	"./cynosdb_mysql/query.ts": "./datasource/tc_monitor/cynosdb_mysql/query.ts",
	"./cynosdb_mysql/query_def.ts": "./datasource/tc_monitor/cynosdb_mysql/query_def.ts",
	"./dc/datasource": "./datasource/tc_monitor/dc/datasource.ts",
	"./dc/datasource.ts": "./datasource/tc_monitor/dc/datasource.ts",
	"./dc/query.ts": "./datasource/tc_monitor/dc/query.ts",
	"./dc/query_def.ts": "./datasource/tc_monitor/dc/query_def.ts",
	"./dcdb/datasource": "./datasource/tc_monitor/dcdb/datasource.ts",
	"./dcdb/datasource.ts": "./datasource/tc_monitor/dcdb/datasource.ts",
	"./dcdb/query.ts": "./datasource/tc_monitor/dcdb/query.ts",
	"./dcdb/query_def.ts": "./datasource/tc_monitor/dcdb/query_def.ts",
	"./dcg/datasource": "./datasource/tc_monitor/dcg/datasource.ts",
	"./dcg/datasource.ts": "./datasource/tc_monitor/dcg/datasource.ts",
	"./dcg/query.ts": "./datasource/tc_monitor/dcg/query.ts",
	"./dcg/query_def.ts": "./datasource/tc_monitor/dcg/query_def.ts",
	"./dcx/datasource": "./datasource/tc_monitor/dcx/datasource.ts",
	"./dcx/datasource.ts": "./datasource/tc_monitor/dcx/datasource.ts",
	"./dcx/query.ts": "./datasource/tc_monitor/dcx/query.ts",
	"./dcx/query_def.ts": "./datasource/tc_monitor/dcx/query_def.ts",
	"./ecdn/datasource": "./datasource/tc_monitor/ecdn/datasource.ts",
	"./ecdn/datasource.ts": "./datasource/tc_monitor/ecdn/datasource.ts",
	"./ecdn/query.ts": "./datasource/tc_monitor/ecdn/query.ts",
	"./ecdn/query_def.ts": "./datasource/tc_monitor/ecdn/query_def.ts",
	"./ecm/datasource": "./datasource/tc_monitor/ecm/datasource.ts",
	"./ecm/datasource.ts": "./datasource/tc_monitor/ecm/datasource.ts",
	"./ecm/query.ts": "./datasource/tc_monitor/ecm/query.ts",
	"./ecm/query_def.ts": "./datasource/tc_monitor/ecm/query_def.ts",
	"./ecm_block_storage/datasource": "./datasource/tc_monitor/ecm_block_storage/datasource.ts",
	"./ecm_block_storage/datasource.ts": "./datasource/tc_monitor/ecm_block_storage/datasource.ts",
	"./ecm_block_storage/query.ts": "./datasource/tc_monitor/ecm_block_storage/query.ts",
	"./ecm_block_storage/query_def.ts": "./datasource/tc_monitor/ecm_block_storage/query_def.ts",
	"./ecm_lb/datasource": "./datasource/tc_monitor/ecm_lb/datasource.ts",
	"./ecm_lb/datasource.ts": "./datasource/tc_monitor/ecm_lb/datasource.ts",
	"./ecm_lb/query.ts": "./datasource/tc_monitor/ecm_lb/query.ts",
	"./ecm_lb/query_def.ts": "./datasource/tc_monitor/ecm_lb/query_def.ts",
	"./gse/datasource": "./datasource/tc_monitor/gse/datasource.ts",
	"./gse/datasource.ts": "./datasource/tc_monitor/gse/datasource.ts",
	"./gse/query.ts": "./datasource/tc_monitor/gse/query.ts",
	"./gse/query_def.ts": "./datasource/tc_monitor/gse/query_def.ts",
	"./lb/datasource": "./datasource/tc_monitor/lb/datasource.ts",
	"./lb/datasource.ts": "./datasource/tc_monitor/lb/datasource.ts",
	"./lb/query.ts": "./datasource/tc_monitor/lb/query.ts",
	"./lb/query_def.ts": "./datasource/tc_monitor/lb/query_def.ts",
	"./lighthouse/datasource": "./datasource/tc_monitor/lighthouse/datasource.ts",
	"./lighthouse/datasource.ts": "./datasource/tc_monitor/lighthouse/datasource.ts",
	"./lighthouse/query.ts": "./datasource/tc_monitor/lighthouse/query.ts",
	"./lighthouse/query_def.ts": "./datasource/tc_monitor/lighthouse/query_def.ts",
	"./mongodb/datasource": "./datasource/tc_monitor/mongodb/datasource.ts",
	"./mongodb/datasource.ts": "./datasource/tc_monitor/mongodb/datasource.ts",
	"./mongodb/query.ts": "./datasource/tc_monitor/mongodb/query.ts",
	"./mongodb/query_def.ts": "./datasource/tc_monitor/mongodb/query_def.ts",
	"./mr/datasource": "./datasource/tc_monitor/mr/datasource.ts",
	"./mr/datasource.ts": "./datasource/tc_monitor/mr/datasource.ts",
	"./mr/query.ts": "./datasource/tc_monitor/mr/query.ts",
	"./mr/query_def.ts": "./datasource/tc_monitor/mr/query_def.ts",
	"./nat_gateway/datasource": "./datasource/tc_monitor/nat_gateway/datasource.ts",
	"./nat_gateway/datasource.ts": "./datasource/tc_monitor/nat_gateway/datasource.ts",
	"./nat_gateway/query.ts": "./datasource/tc_monitor/nat_gateway/query.ts",
	"./nat_gateway/query_def.ts": "./datasource/tc_monitor/nat_gateway/query_def.ts",
	"./ov_cdn/datasource": "./datasource/tc_monitor/ov_cdn/datasource.ts",
	"./ov_cdn/datasource.ts": "./datasource/tc_monitor/ov_cdn/datasource.ts",
	"./ov_cdn/query.ts": "./datasource/tc_monitor/ov_cdn/query.ts",
	"./ov_cdn/query_def.ts": "./datasource/tc_monitor/ov_cdn/query_def.ts",
	"./pcx/datasource": "./datasource/tc_monitor/pcx/datasource.ts",
	"./pcx/datasource.ts": "./datasource/tc_monitor/pcx/datasource.ts",
	"./pcx/query.ts": "./datasource/tc_monitor/pcx/query.ts",
	"./pcx/query_def.ts": "./datasource/tc_monitor/pcx/query_def.ts",
	"./postgresql/datasource": "./datasource/tc_monitor/postgresql/datasource.ts",
	"./postgresql/datasource.ts": "./datasource/tc_monitor/postgresql/datasource.ts",
	"./postgresql/query.ts": "./datasource/tc_monitor/postgresql/query.ts",
	"./postgresql/query_def.ts": "./datasource/tc_monitor/postgresql/query_def.ts",
	"./qaap/datasource": "./datasource/tc_monitor/qaap/datasource.ts",
	"./qaap/datasource.ts": "./datasource/tc_monitor/qaap/datasource.ts",
	"./qaap/query.ts": "./datasource/tc_monitor/qaap/query.ts",
	"./qaap/query_def.ts": "./datasource/tc_monitor/qaap/query_def.ts",
	"./redis/datasource": "./datasource/tc_monitor/redis/datasource.ts",
	"./redis/datasource.ts": "./datasource/tc_monitor/redis/datasource.ts",
	"./redis/query.ts": "./datasource/tc_monitor/redis/query.ts",
	"./redis/query_def.ts": "./datasource/tc_monitor/redis/query_def.ts",
	"./redis_mem/datasource": "./datasource/tc_monitor/redis_mem/datasource.ts",
	"./redis_mem/datasource.ts": "./datasource/tc_monitor/redis_mem/datasource.ts",
	"./redis_mem/query.ts": "./datasource/tc_monitor/redis_mem/query.ts",
	"./redis_mem/query_def.ts": "./datasource/tc_monitor/redis_mem/query_def.ts",
	"./scf/datasource": "./datasource/tc_monitor/scf/datasource.ts",
	"./scf/datasource.ts": "./datasource/tc_monitor/scf/datasource.ts",
	"./scf/query.ts": "./datasource/tc_monitor/scf/query.ts",
	"./scf/query_def.ts": "./datasource/tc_monitor/scf/query_def.ts",
	"./sqlserver/datasource": "./datasource/tc_monitor/sqlserver/datasource.ts",
	"./sqlserver/datasource.ts": "./datasource/tc_monitor/sqlserver/datasource.ts",
	"./sqlserver/query.ts": "./datasource/tc_monitor/sqlserver/query.ts",
	"./sqlserver/query_def.ts": "./datasource/tc_monitor/sqlserver/query_def.ts",
	"./tcaplus/datasource": "./datasource/tc_monitor/tcaplus/datasource.ts",
	"./tcaplus/datasource.ts": "./datasource/tc_monitor/tcaplus/datasource.ts",
	"./tcaplus/query.ts": "./datasource/tc_monitor/tcaplus/query.ts",
	"./tcaplus/query_def.ts": "./datasource/tc_monitor/tcaplus/query_def.ts",
	"./tdmq/datasource": "./datasource/tc_monitor/tdmq/datasource.ts",
	"./tdmq/datasource.ts": "./datasource/tc_monitor/tdmq/datasource.ts",
	"./tdmq/query.ts": "./datasource/tc_monitor/tdmq/query.ts",
	"./tdmq/query_def.ts": "./datasource/tc_monitor/tdmq/query_def.ts",
	"./tdmq_rabbitmq/datasource": "./datasource/tc_monitor/tdmq_rabbitmq/datasource.ts",
	"./tdmq_rabbitmq/datasource.ts": "./datasource/tc_monitor/tdmq_rabbitmq/datasource.ts",
	"./tdmq_rabbitmq/query.ts": "./datasource/tc_monitor/tdmq_rabbitmq/query.ts",
	"./tdmq_rabbitmq/query_def.ts": "./datasource/tc_monitor/tdmq_rabbitmq/query_def.ts",
	"./tdmq_rocketmq/datasource": "./datasource/tc_monitor/tdmq_rocketmq/datasource.ts",
	"./tdmq_rocketmq/datasource.ts": "./datasource/tc_monitor/tdmq_rocketmq/datasource.ts",
	"./tdmq_rocketmq/query.ts": "./datasource/tc_monitor/tdmq_rocketmq/query.ts",
	"./tdmq_rocketmq/query_def.ts": "./datasource/tc_monitor/tdmq_rocketmq/query_def.ts",
	"./tke/datasource": "./datasource/tc_monitor/tke/datasource.ts",
	"./tke/datasource.ts": "./datasource/tc_monitor/tke/datasource.ts",
	"./tke/query.ts": "./datasource/tc_monitor/tke/query.ts",
	"./tke/query_def.ts": "./datasource/tc_monitor/tke/query_def.ts",
	"./tsf/datasource": "./datasource/tc_monitor/tsf/datasource.ts",
	"./tsf/datasource.ts": "./datasource/tc_monitor/tsf/datasource.ts",
	"./tsf/query.ts": "./datasource/tc_monitor/tsf/query.ts",
	"./tsf/query_def.ts": "./datasource/tc_monitor/tsf/query_def.ts",
	"./v_clb/datasource": "./datasource/tc_monitor/v_clb/datasource.ts",
	"./v_clb/datasource.ts": "./datasource/tc_monitor/v_clb/datasource.ts",
	"./v_clb/query.ts": "./datasource/tc_monitor/v_clb/query.ts",
	"./v_clb/query_def.ts": "./datasource/tc_monitor/v_clb/query_def.ts",
	"./vbc/datasource": "./datasource/tc_monitor/vbc/datasource.ts",
	"./vbc/datasource.ts": "./datasource/tc_monitor/vbc/datasource.ts",
	"./vbc/query.ts": "./datasource/tc_monitor/vbc/query.ts",
	"./vbc/query_def.ts": "./datasource/tc_monitor/vbc/query_def.ts",
	"./vpc_net_detect/datasource": "./datasource/tc_monitor/vpc_net_detect/datasource.ts",
	"./vpc_net_detect/datasource.ts": "./datasource/tc_monitor/vpc_net_detect/datasource.ts",
	"./vpc_net_detect/query.ts": "./datasource/tc_monitor/vpc_net_detect/query.ts",
	"./vpc_net_detect/query_def.ts": "./datasource/tc_monitor/vpc_net_detect/query_def.ts",
	"./vpngw/datasource": "./datasource/tc_monitor/vpngw/datasource.ts",
	"./vpngw/datasource.ts": "./datasource/tc_monitor/vpngw/datasource.ts",
	"./vpngw/query.ts": "./datasource/tc_monitor/vpngw/query.ts",
	"./vpngw/query_def.ts": "./datasource/tc_monitor/vpngw/query_def.ts",
	"./vpnx/datasource": "./datasource/tc_monitor/vpnx/datasource.ts",
	"./vpnx/datasource.ts": "./datasource/tc_monitor/vpnx/datasource.ts",
	"./vpnx/query.ts": "./datasource/tc_monitor/vpnx/query.ts",
	"./vpnx/query_def.ts": "./datasource/tc_monitor/vpnx/query_def.ts",
	"./waf/datasource": "./datasource/tc_monitor/waf/datasource.ts",
	"./waf/datasource.ts": "./datasource/tc_monitor/waf/datasource.ts",
	"./waf/query.ts": "./datasource/tc_monitor/waf/query.ts",
	"./waf/query_def.ts": "./datasource/tc_monitor/waf/query_def.ts"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./datasource/tc_monitor sync recursive ^\\.\\/[a-zA-Z]\\w+\\/(datasource)|(query(_def)?)\\.ts$";

/***/ }),

/***/ "./datasource/tc_monitor/MonitorDatasource.ts":
/*!****************************************************!*\
  !*** ./datasource/tc_monitor/MonitorDatasource.ts ***!
  \****************************************************/
/*! exports provided: TCMonitorDatasource */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TCMonitorDatasource", function() { return TCMonitorDatasource; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index */ "./datasource/tc_monitor/index.ts");
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/constants */ "./datasource/common/constants.ts");
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/utils */ "./datasource/common/utils.ts");
/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @grafana/data */ "@grafana/data");
/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_grafana_data__WEBPACK_IMPORTED_MODULE_4__);






var TCMonitorDatasource =
/** @class */
function () {
  TCMonitorDatasource.$inject = ["instanceSettings", "backendSrv", "templateSrv"];

  /** @ngInject */
  function TCMonitorDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = this;

    this.instanceSettings = instanceSettings;
    this.backendSrv = backendSrv;
    this.templateSrv = templateSrv;

    lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(_index__WEBPACK_IMPORTED_MODULE_1__["Datasources"], function (_class, key) {
      _this[key] = new _class(_this.instanceSettings, _this.backendSrv, _this.templateSrv);
    });
  } // 根据 Datasource Config 配置时勾选的监控服务项，获取相应的命名空间


  TCMonitorDatasource.prototype.getNamespaces = function () {
    var _this = this;

    var namespaces = [];

    lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(_index__WEBPACK_IMPORTED_MODULE_1__["SERVICES"], function (service) {
      if (_this.instanceSettings.jsonData[service.service] === true) {
        // namespaces.push(service.namespace);
        namespaces.push(service);
      }
    });

    return namespaces;
  };

  TCMonitorDatasource.prototype.getCascaderNamespaces = function () {
    var _this = this;

    var validServices = _index__WEBPACK_IMPORTED_MODULE_1__["SERVICES"].filter(function (service) {
      return _this.instanceSettings.jsonData[service.service];
    });
    return Object(_common_utils__WEBPACK_IMPORTED_MODULE_3__["serviceGroupBy"])(validServices);
  };

  TCMonitorDatasource.prototype.getSelectedServices = function () {
    var namespaces = this.getNamespaces();
    return lodash__WEBPACK_IMPORTED_MODULE_0___default.a.map(namespaces, function (_a) {
      var namespace = _a.namespace;
      return Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["GetServiceFromNamespace"])(namespace);
    });
  };
  /**
   * 根据 Panel 的配置项，获取相应的监控数据
   *
   * @param options Panel 的配置参数，示例如下
   *  {
   *     cacheTimeout: undefined,
   *     dashboardId: 41,
   *     interval: "30s",
   *     intervalMs: 30000,
   *     maxDataPoints: 554,
   *     panelId: 2,
   *     range: {
   *        from: Moment,
   *        to: Moment,
   *        raw: {from: "now-6h", to: "now"}
   *     },
   *     rangeRaw: {from: "now-6h", to: "now"},
   *     scopedVars: {__interval: {…}, __interval_ms: {…}}
   *     targets: [
   *       {
   *          namespace: "QCE/CVM",
   *          refId: "A",
   *          service: "cvm",
   *          showInstanceDetails: false,
   *          cvm: {
   *            dimensionObject: {InstanceId: {…}}
   *            instance: "",
   *            instanceAlias: "InstanceId",
   *            metricName: "AccOuttraffic",
   *            metricUnit: "MB",
   *            period: 10,
   *            queries: {Filters: {…}, InstanceIds: Array(1), Limit: 20, Offset: 0, filtersChecked: false, …},
   *            region: "ap-beijing"
   *          },
   *          cdb: {},
   *       },
   *     ],
   *     timezone: "browser"
   *   }
   * @return 返回数据对象，示例如下
   * {
   *   data: [
   *     {
   *       "target": "AccOuttraffic - ins-123",
   *       "datapoints": [
   *         [861, 1450754160000],
   *         [767, 1450754220000]
   *       ]
   *     }
   *   ]
   * }
   */


  TCMonitorDatasource.prototype.query = function (options) {
    var _this = this;

    var promises = [];
    var services = this.getSelectedServices();

    lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(services, function (service) {
      var optionsTemp = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.cloneDeep(options);

      var targets = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.filter(optionsTemp.targets, function (item) {
        return item.service === service;
      });

      optionsTemp.targets = targets;

      if (optionsTemp.targets.length > 0) {
        var promiseTemp = _this["".concat(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.toUpper(service), "Datasource")].query(optionsTemp);

        if (promiseTemp) {
          promises.push(promiseTemp);
        }
      }
    });

    if (promises.length === 0) {
      return Promise.resolve({
        data: [],
        state: _grafana_data__WEBPACK_IMPORTED_MODULE_4__["LoadingState"].Done
      });
    }

    return Promise.all(promises).then(function (results) {
      return {
        data: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.flatten(results),
        state: _grafana_data__WEBPACK_IMPORTED_MODULE_4__["LoadingState"].Done
      };
    });
  };
  /**
   * 获取模板变量的选择项列表
   *
   * @param query 模板变量配置填写的 Query 参数字符串
   */


  TCMonitorDatasource.prototype.metricFindQuery = function (query, options) {
    var queries = Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["ParseMetricQuery"])(query);
    var service = Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["GetServiceFromNamespace"])(queries['namespace'] || '');

    if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(queries) || !queries['namespace'] || !queries['action'] || !service) {
      return Promise.resolve([]);
    }

    if (this["".concat(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.toUpper(service), "Datasource")].metricFindQuery) {
      var result = this["".concat(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.toUpper(service), "Datasource")].metricFindQuery(queries, lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(options, 'variable.regex', undefined));

      if (result) {
        return result;
      }
    }

    return Promise.resolve([]);
  };
  /**
   * 获取地域列表
   * @param service
   */


  TCMonitorDatasource.prototype.getRegions = function (service) {
    if (this["".concat(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.toUpper(service), "Datasource")].getRegions) {
      return this["".concat(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.toUpper(service), "Datasource")].getRegions();
    }

    return [];
  };
  /**
   * 获取监控指标列表
   * @param service
   * @param region
   */


  TCMonitorDatasource.prototype.getMetrics = function (service, region) {
    return this["".concat(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.toUpper(service), "Datasource")].getMetrics(region);
  };
  /**
   * 获取可用区列表
   * @param service
   * @param region
   */


  TCMonitorDatasource.prototype.getZones = function (service, region) {
    if (this["".concat(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.toUpper(service), "Datasource")].getZones) {
      return this["".concat(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.toUpper(service), "Datasource")].getZones(region);
    }

    return [];
  };
  /**
   * 获取filter中dropdown列表
   * @param service
   * @param param
   */


  TCMonitorDatasource.prototype.getFilterDropdown = function (service, param) {
    if (this["".concat(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.toUpper(service), "Datasource")].getFilterDropdown) {
      return this["".concat(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.toUpper(service), "Datasource")].getFilterDropdown(param);
    }

    return [];
  };
  /**
   * 获取实例列表
   * @param service
   * @param region
   * @param params
   */


  TCMonitorDatasource.prototype.getInstances = function (service, region, params) {
    return this["".concat(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.toUpper(service), "Datasource")].getInstances(region, params);
  };
  /**
   * 获取监听器列表
   * @param service
   * @param region
   * @param params
   */


  TCMonitorDatasource.prototype.getListeners = function (service, region, instance) {
    if (!this["".concat(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.toUpper(service), "Datasource")].getListeners) {
      return [];
    }

    return this["".concat(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.toUpper(service), "Datasource")].getListeners(region, instance);
  };
  /**
   * 获取 私有网络列表
   * @param service
   */


  TCMonitorDatasource.prototype.getVpcIds = function (service, region) {
    if (this["".concat(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.toUpper(service), "Datasource")].getVpcIds) {
      return this["".concat(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.toUpper(service), "Datasource")].getVpcIds(region);
    }
  }; // 在 Datasource Config 配置时，验证 SerectId、SerectKey 的有效性，并测试勾选的监控服务项的对应 API 连通性


  TCMonitorDatasource.prototype.testDatasource = function () {
    var _this = this;

    var promises = [];
    var services = this.getSelectedServices();

    lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(services, function (service) {
      promises.push(_this["".concat(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.toUpper(service), "Datasource")].testDatasource());
    });

    if (promises.length === 0) {
      return Promise.resolve(null);
    }

    return Promise.all(promises).then(function (results) {
      var status = 'success';
      var message = 'DataSource Connection OK';

      var errorMsg = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.reduce(results, function (acc, cur) {
        if (cur.status === 'error') {
          if (acc === '') acc += 'Oops! Found an error in: ';
          acc += "".concat(cur.service, ": ").concat(cur.message, "; \n");
        }

        return acc;
      }, '');

      if (errorMsg) {
        status = 'error';
        message = errorMsg;
      }

      return {
        status: status,
        message: message,
        title: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.upperFirst(status)
      };
    });
  };

  TCMonitorDatasource.prototype.getServiceFn = function (service, fnName) {
    var _this = this;

    return function () {
      var _a;

      var argu = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        argu[_i] = arguments[_i];
      }

      if (!_this["".concat(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.toUpper(service), "Datasource")][fnName]) {
        return [];
      }

      return (_a = _this["".concat(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.toUpper(service), "Datasource")])[fnName].apply(_a, argu);
    };
  };

  return TCMonitorDatasource;
}();



/***/ }),

/***/ "./datasource/tc_monitor/_base/datasource.ts":
/*!***************************************************!*\
  !*** ./datasource/tc_monitor/_base/datasource.ts ***!
  \***************************************************/
/*! exports provided: BaseDatasource */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BaseDatasource", function() { return BaseDatasource; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! moment */ "moment");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");
/* harmony import */ var _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/datasourceStorage */ "./datasource/common/datasourceStorage.ts");
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");
/* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../locale */ "./locale/index.ts");
var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};

var __spreadArray = undefined && undefined.__spreadArray || function (to, from, pack) {
  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
    if (ar || !(i in from)) {
      if (!ar) ar = Array.prototype.slice.call(from, 0, i);
      ar[i] = from[i];
    }
  }
  return to.concat(ar || Array.prototype.slice.call(from));
};








var BaseDatasource =
/** @class */
function () {
  BaseDatasource.$inject = ["instanceSettings", "backendSrv", "templateSrv"];

  /** @ngInject */
  function BaseDatasource(instanceSettings, backendSrv, templateSrv) {
    this.instanceListCache = [];
    this.extraMetricDims = [];
    this.checkKeys = [];
    this.MetricReqConfig = {};
    this.extrasAlias = [];
    /*
    一个配置：(用于处理除了InstanceId之外的)(Record中的key是指标修正之后的维度，即通过InvalidDemsion处理后)
    1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、
    2 dim_KeyInTarget 通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。为空则取即通过InvalidDemsion处理后的key
    3 dim_KeyInMap 保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。即：templateQueryIdMap中内容。联合上面2的内容筛选出原始sourceMap
    4 通过这个dim和sourceMap获取维度值。即sourceMap[dim]
    */

    this.queryMonitorExtraConfg = {};
    this.CandiateDimensions = {};
    this.instanceSettings = instanceSettings;
    this.backendSrv = backendSrv;
    this.templateSrv = templateSrv;
    this.url = instanceSettings.url;
    this.secretId = (instanceSettings.jsonData || {}).secretId || '';
    Object(_locale__WEBPACK_IMPORTED_MODULE_5__["setLanguage"])(instanceSettings.jsonData.language || _locale__WEBPACK_IMPORTED_MODULE_5__["Language"].Chinese);
  }

  Object.defineProperty(BaseDatasource.prototype, "namespace", {
    get: function get() {
      // 需要注意的是this.service来自于原型上，在实例中导入时注入
      return this.Namespace || Object(_common_utils__WEBPACK_IMPORTED_MODULE_4__["getNamesapceFromService"])(this.service);
    },
    enumerable: false,
    configurable: true
  }); // 获取额外要显示到图例里的内容

  BaseDatasource.prototype.getOtherAlias = function (instance, target) {
    var _this = this;

    var _a;

    var result = '';
    var alias = instance._InstanceAliasValue;
    (_a = this.extrasAlias) === null || _a === void 0 ? void 0 : _a.forEach(function (extra) {
      var extraAlia = _this.getVariable(target[extra]);

      if (extraAlia && alias.indexOf(extraAlia) === -1) {
        result += " - ".concat(extraAlia);
      }
    });
    return result;
  };
  /* 格式化模板变量上的显示 */


  BaseDatasource.prototype.getAliasValue = function (instance, alias) {
    var result = instance[alias];
    return Array.isArray(result) ? result.join() : result;
  };

  BaseDatasource.prototype.formatVarDisplay = function (instance, displayTpl, instanceAlias) {
    var _this = this; // 获取display=aaa${InstanceName}bbb${InstanceId}ccc


    if (displayTpl) {
      return displayTpl.replace(/\$\{(\w+)\}/g, function (a, b) {
        if (!b || !_this.InstanceAliasList.includes(b)) {
          return '';
        }

        return _this.getAliasValue(instance, b);
      });
    }

    return this.getAliasValue(instance, instanceAlias);
  };
  /**
   * @param query 模板变量配置填写的 Query 参数对象，由顶层将字符串转换为了对象
   */


  BaseDatasource.prototype.metricFindQuery = function (query, regex) {
    var _a;

    return __awaiter(this, void 0, void 0, function () {
      var action, namespace, display, _b, payload, region, _c, instancealias, regionQuery, result, res, instance, instanceCache, error_1;

      var _this = this;

      return __generator(this, function (_d) {
        switch (_d.label) {
          case 0:
            action = query.action, namespace = query.namespace, display = query.display, _b = query.payload, payload = _b === void 0 ? {} : _b;
            region = query.region, _c = query.instancealias, instancealias = _c === void 0 ? this.templateQueryIdMap.instance : _c;

            if (!action || !namespace) {
              return [2
              /*return*/
              , []];
            } // 支持payload里传入模板变量


            if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(payload)) {
              lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(payload, function (value, key) {
                payload[key] = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isString(value) ? _this.getVariable(value) : value;
              });
            }

            regionQuery = action.match(/^DescribeRegions$/i);

            if (regionQuery) {
              return [2
              /*return*/
              , this.getRegions()];
            }

            region = this.getVariable(region); // 将模板region转换为真实值

            if (!(region && action.match(/^DescribeInstances/i))) return [3
            /*break*/
            , 3];
            return [4
            /*yield*/
            , this.getVariableInstances(region, payload)];

          case 1:
            result = _d.sent();
            instancealias = this.InstanceAliasList.includes(instancealias) ? instancealias : this.templateQueryIdMap.instance;
            res = result.flatMap(function (item) {
              var insAlias = _this.formatVarDisplay(item, display, instancealias);

              item._InstanceAliasValue = insAlias; // FIXME:

              if (!item[instancealias]) return [];
              return [{
                text: insAlias,
                value: item[_this.templateQueryIdMap.instance]
              }];
            }); // 缓存全量实例列表

            return [4
            /*yield*/
            , _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_3__["default"].setInstance(this.service, result)];

          case 2:
            // 缓存全量实例列表
            _d.sent();

            return [2
            /*return*/
            , res];

          case 3:
            instance = this.getVariable(query['instance']);
            if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(instance)) instance = instance[0]; // 有额外维度，仅支持实例单选情况

            if (!(region && action && instance)) return [3
            /*break*/
            , 8];
            _d.label = 4;

          case 4:
            _d.trys.push([4, 6,, 7]);

            return [4
            /*yield*/
            , _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_3__["default"].getInstance(this.service)];

          case 5:
            instanceCache = _d.sent();
            instance = (_a = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.cloneDeep(instanceCache.find(function (item) {
              return item[_this.templateQueryIdMap.instance] === instance;
            }))) !== null && _a !== void 0 ? _a : {};
            return [3
            /*break*/
            , 7];

          case 6:
            error_1 = _d.sent();
            return [3
            /*break*/
            , 7];

          case 7:
            return [2
            /*return*/
            , this.fetchMetricData(action, region, instance, query)];

          case 8:
            return [2
            /*return*/
            , Promise.resolve([])];
        }
      });
    });
  }; // 获取指标数据


  BaseDatasource.prototype.fetchMetricData = function (action, region, instance, query) {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function (_a) {
        return [2
        /*return*/
        , []];
      });
    });
  };
  /**
   * 根据 Panel 的配置项，获取相应的监控数据
   *
   * @param options Panel 的配置参数
   * @return 返回数据数组，示例如下
   * [
   *   {
   *     "target": "AccOuttraffic - ins-123",
   *     "datapoints": [
   *       [861, 1450754160000],
   *       [767, 1450754220000]
   *     ]
   *   }
   * ]
   */


  BaseDatasource.prototype.dimensionsFormat = function (dimKeys, ins, dimensionObject, target, service, options) {
    var _a;

    return __awaiter(this, void 0, void 0, function () {
      var _loop_1, this_1, _i, dimKeys_1, key;

      return __generator(this, function (_b) {
        switch (_b.label) {
          case 0:
            _loop_1 = function _loop_1(key) {
              var keyTmp, invalidDim, extraDimValue, _c, dim_KeyInStorage, _d, dim_KeyInTarget, dim_KeyInMap_1, dim_KeyInIns, extraIns_1, extraSourceMap, error_2, extraStorage, isStringOrNumber, insAlias, otherAlias;

              return __generator(this, function (_e) {
                switch (_e.label) {
                  case 0:
                    keyTmp = key;
                    invalidDim = this_1.InvalidDimensions || this_1.getInvalidDimensions(this_1, target[service]);

                    if (invalidDim[key]) {
                      // 从【维度中】的字段到【实例中】字段的映射。 { functionName: FunctionName }
                      keyTmp = invalidDim[key];
                      ins[key] = ins[keyTmp];
                    }

                    extraDimValue = this_1.getVariable(target[service][keyTmp]);
                    if (!this_1.queryMonitorExtraConfg[keyTmp]) return [3
                    /*break*/
                    , 5];
                    _c = this_1.queryMonitorExtraConfg[keyTmp], dim_KeyInStorage = _c.dim_KeyInStorage, _d = _c.dim_KeyInTarget, dim_KeyInTarget = _d === void 0 ? keyTmp : _d, dim_KeyInMap_1 = _c.dim_KeyInMap, dim_KeyInIns = _c.dim_KeyInIns;
                    extraIns_1 = Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["ReplaceVariable"])(this_1.templateSrv, options.scopedVars, target[service][dim_KeyInTarget], true);
                    extraSourceMap = {};
                    _e.label = 1;

                  case 1:
                    _e.trys.push([1, 2,, 4]);

                    extraSourceMap = JSON.parse(extraIns_1); // 兼容json字符串的 形式

                    return [3
                    /*break*/
                    , 4];

                  case 2:
                    error_2 = _e.sent();
                    if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(extraIns_1)) extraIns_1 = extraIns_1[0]; // 如果多个，取第一个。除了实例ID 暂不支持其他纬度多选

                    return [4
                    /*yield*/
                    , _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_3__["default"].getExtraStorage(this_1.service, dim_KeyInStorage)];

                  case 3:
                    extraStorage = _e.sent();
                    extraSourceMap = (_a = extraStorage === null || extraStorage === void 0 ? void 0 : extraStorage.find(function (item) {
                      if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(item[dim_KeyInMap_1])) {
                        return item[dim_KeyInMap_1][0] === extraIns_1;
                      }

                      return item[dim_KeyInMap_1] === extraIns_1;
                    })) !== null && _a !== void 0 ? _a : {};
                    return [3
                    /*break*/
                    , 4];

                  case 4:
                    isStringOrNumber = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isString(extraSourceMap) || lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNumber(extraSourceMap);
                    insAlias = ins._InstanceAliasValue;
                    otherAlias = isStringOrNumber ? extraSourceMap : extraSourceMap._InstanceAliasValue;

                    if (otherAlias && insAlias.indexOf(otherAlias) === -1) {
                      ins._InstanceAliasValue += " - ".concat(otherAlias);
                    }

                    extraDimValue = isStringOrNumber ? extraSourceMap : extraSourceMap === null || extraSourceMap === void 0 ? void 0 : extraSourceMap[dim_KeyInIns || keyTmp];
                    return [3
                    /*break*/
                    , 6];

                  case 5:
                    ins._InstanceAliasValue += this_1.getOtherAlias(ins, target[service]);
                    _e.label = 6;

                  case 6:
                    if (Object(_common_utils__WEBPACK_IMPORTED_MODULE_4__["getTimeShiftInMs"])(target[service].timeshift) > 0 && ins._InstanceAliasValue.indexOf(target[service].timeshift) === -1) {
                      ins._InstanceAliasValue += "_".concat(target[service].timeshift);
                    } // 设置instance，针对额外的维度，需要注意模板变量的值
                    // ins[key] = ins[keyTmp] ?? extraDimValue;


                    ins[key] = this_1.getDimensionsVal(ins, keyTmp, extraDimValue); // cynosdb产品接口返回维度和入参不一致

                    if (this_1.checkKeys.length > 0) {
                      this_1.checkKeys.forEach(function (Ekey) {
                        ins[Ekey] = ins[key];
                      });
                    }

                    dimensionObject[key] = {
                      Name: key,
                      Value: ins[key]
                    };
                    return [2
                    /*return*/
                    ];
                }
              });
            };

            this_1 = this;
            _i = 0, dimKeys_1 = dimKeys;
            _b.label = 1;

          case 1:
            if (!(_i < dimKeys_1.length)) return [3
            /*break*/
            , 4];
            key = dimKeys_1[_i];
            return [5
            /*yield**/
            , _loop_1(key)];

          case 2:
            _b.sent();

            _b.label = 3;

          case 3:
            _i++;
            return [3
            /*break*/
            , 1];

          case 4:
            return [2
            /*return*/
            , dimensionObject];
        }
      });
    });
  };

  BaseDatasource.prototype.getDimensionsVal = function (ins, key, extraDimValue) {
    var dimVal = ins[key];

    if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(dimVal) && this.CandiateDimensions[key]) {
      dimVal = ins[this.CandiateDimensions[key]];
    }

    return dimVal !== null && dimVal !== void 0 ? dimVal : extraDimValue;
  };

  BaseDatasource.prototype.query = function (options) {
    var _this = this;

    var service = this.service; // 强制声明非空

    var queries = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.filter(options.targets, function (item) {
      // 过滤无效的查询 target
      return item.hide !== true && !!item.namespace && !!item[service].metricName && !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["ReplaceVariable"])(_this.templateSrv, options.scopedVars, item[service].region, false)) && !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["ReplaceVariable"])(_this.templateSrv, options.scopedVars, item[service].instance, true));
    }).reduce(function (prev, target) {
      if (Object(_common_utils__WEBPACK_IMPORTED_MODULE_4__["getTimeShiftInMs"])(target[service].timeshift) > 0) {
        var cloneTarget = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.cloneDeep(target);

        cloneTarget[service].timeshift = '';
        return __spreadArray(__spreadArray([], prev, true), [cloneTarget, target], false);
      }

      return __spreadArray(__spreadArray([], prev, true), [target], false);
    }, []).map(function (target) {
      return __awaiter(_this, void 0, void 0, function () {
        var instances, instanceCache, timeshift, region, insInReq, _i, instances_1, ins, dimensionObject, dimKeys, dimResult, data;

        var _this = this;

        return __generator(this, function (_a) {
          switch (_a.label) {
            case 0:
              instances = Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["ReplaceVariable"])(this.templateSrv, options.scopedVars, target[service].instance, true);
              return [4
              /*yield*/
              , _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_3__["default"].getInstance(this.service)];

            case 1:
              instanceCache = _a.sent();
              timeshift = Object(_common_utils__WEBPACK_IMPORTED_MODULE_4__["getTimeShiftInMs"])(target[service].timeshift);
              instances = [].concat(instances).map(function (inst) {
                var _a, _b;

                try {
                  return JSON.parse(inst); // 兼容json字符串的 形式
                } catch (error) {
                  // 如果没拿到缓存，取默认实例组
                  if (!instanceCache) return (_a = _this.getDefaultInsObj) === null || _a === void 0 ? void 0 : _a.call(_this, inst);
                  return (_b = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.cloneDeep(instanceCache.find(function (item) {
                    return item[_this.templateQueryIdMap.instance] === inst;
                  }))) !== null && _b !== void 0 ? _b : {};
                }
              });
              region = Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["ReplaceVariable"])(this.templateSrv, options.scopedVars, target[service].region, false);
              insInReq = [];
              _i = 0, instances_1 = instances;
              _a.label = 2;

            case 2:
              if (!(_i < instances_1.length)) return [3
              /*break*/
              , 5];
              ins = instances_1[_i];
              dimensionObject = target[service].dimensionObject;
              dimKeys = Object.keys(dimensionObject);
              return [4
              /*yield*/
              , this.dimensionsFormat(dimKeys, ins, dimensionObject, target, service, options)];

            case 3:
              dimResult = _a.sent();
              insInReq.push([{
                Dimensions: Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["GetDimensions"])(dimResult)
              }]);
              _a.label = 4;

            case 4:
              _i++;
              return [3
              /*break*/
              , 2];

            case 5:
              data = {
                StartTime: moment__WEBPACK_IMPORTED_MODULE_1___default()(options.range.from).subtract(timeshift).format(),
                EndTime: moment__WEBPACK_IMPORTED_MODULE_1___default()(options.range.to).subtract(timeshift).format(),
                Period: target[service].period || 300,
                Instances: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.flatMap(insInReq),
                Namespace: target.namespace,
                MetricName: target[service].metricName
              };
              return [2
              /*return*/
              , this.getMonitorData(data, region, instances, target[service], options)];
          }
        });
      });
    });

    if (queries.length === 0) {
      return [];
    }

    return Promise.all(queries).then(function (responses) {
      return lodash__WEBPACK_IMPORTED_MODULE_0___default.a.flatten(responses);
    })["catch"](function (error) {
      return [];
    });
  };

  BaseDatasource.prototype.getDefaultInsObj = function (ins) {
    return {};
  };

  BaseDatasource.prototype.getInstanceReqConfig = function (selfIns) {
    return {};
  };

  BaseDatasource.prototype.getInvalidDimensions = function (selfIns, target) {
    return {};
  }; // 获取某个变量的实际值，this.templateSrv.replace() 函数返回实际值的字符串


  BaseDatasource.prototype.getVariable = function (metric) {
    var rs = this.templateSrv.replace((metric || '').trim());
    var valStr = rs.match(/\{([\w-,]+)\}/); // 判断是否为多选

    if (valStr) {
      return valStr[1].split(',');
    }

    return rs;
  };
  /**
   * 获取 监控数据
   * @param params 获取监控数据的请求参数
   * @param region 地域信息
   * @param instances 实例列表，用于对返回结果的匹配解析
   */


  BaseDatasource.prototype.getMonitorData = function (params, region, instances, target, options) {
    var serviceInfo = Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["GetServiceAPIInfo"])(region, 'monitor');
    var timeshift = Object(_common_utils__WEBPACK_IMPORTED_MODULE_4__["getTimeShiftInMs"])(target.timeshift);
    return this.doRequest({
      url: this.url + serviceInfo.path,
      data: params
    }, serviceInfo.service, {
      action: 'GetMonitorData',
      region: region
    }).then(function (response) {
      return Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["ParseQueryResult"])(response, instances, timeshift);
    });
  };

  BaseDatasource.prototype.getRegions = function () {
    return this.doRequest({
      url: this.url + '/cvm'
    }, 'cvm', {
      action: 'DescribeRegions'
    }).then(function (response) {
      return lodash__WEBPACK_IMPORTED_MODULE_0___default.a.filter(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.map(response.RegionSet || [], function (item) {
        return {
          text: item.RegionName,
          value: item.Region,
          RegionState: item.RegionState
        };
      }), function (item) {
        return item.RegionState === 'AVAILABLE';
      });
    });
  };

  BaseDatasource.prototype.getMetrics = function (region) {
    var _this = this;

    if (region === void 0) {
      region = 'ap-guangzhou';
    }

    var serviceInfo = Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["GetServiceAPIInfo"])(region, 'monitor');
    return this.doRequest({
      url: this.url + serviceInfo.path,
      data: {
        Namespace: this.namespace
      }
    }, serviceInfo.service, {
      region: region,
      action: 'DescribeBaseMetrics'
    }).then(function (response) {
      var res = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.filter(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.filter(response.MetricSet || [], function (item) {
        return !(item.Namespace !== _this.namespace || !item.MetricName);
      }));

      var resFilterFn = _this.MetricReqConfig.resultFilter;

      if (resFilterFn) {
        return res.map(function (item) {
          return resFilterFn(item);
        });
      }

      return res;
    });
  };

  BaseDatasource.prototype.getInstances = function (region, params) {
    if (params === void 0) {
      params = {};
    }

    var _a = this.InstanceReqConfig || this.getInstanceReqConfig(this),
        _b = _a.service,
        service = _b === void 0 ? this.service : _b,
        action = _a.action,
        field = _a.responseField,
        interceptor = _a.interceptor;

    params = __assign({
      Offset: 0,
      Limit: 100
    }, params);
    var serviceInfo = Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["GetServiceAPIInfo"])(region, service);
    return this.doRequest({
      url: this.url + serviceInfo.path,
      data: (interceptor === null || interceptor === void 0 ? void 0 : interceptor.request) ? interceptor.request(params) : params
    }, serviceInfo.service, {
      region: region,
      action: action
    }).then(function (response) {
      var _a, _b; // 处理异常，则不按正常的情况处理，直接抛出错误


      if (response === null || response === void 0 ? void 0 : response.Error) {
        console.error(response.Error);
        return response;
      }

      var result; // 先，field处理

      if (field) {
        result = (_b = (_a = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(response, field)) !== null && _a !== void 0 ? _a : lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(response, "Result.".concat(field))) !== null && _b !== void 0 ? _b : [];
      } // 后，拦截器处理


      if (interceptor === null || interceptor === void 0 ? void 0 : interceptor.response) {
        result = interceptor.response(result);
      }

      return result;
    });
  };

  BaseDatasource.prototype.getVariableInstances = function (region, query) {
    var _this = this;

    if (query === void 0) {
      query = {};
    }

    var result = [];

    var params = __assign({
      Offset: 0,
      Limit: 100
    }, query);

    var _a = this.InstanceReqConfig || this.getInstanceReqConfig(this),
        _b = _a.service,
        service = _b === void 0 ? this.service : _b,
        action = _a.action,
        field = _a.responseField,
        interceptor = _a.interceptor;

    var serviceInfo = Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["GetServiceAPIInfo"])(region, service);
    return this.doRequest({
      url: this.url + serviceInfo.path,
      data: (interceptor === null || interceptor === void 0 ? void 0 : interceptor.request) ? interceptor.request(params) : params
    }, serviceInfo.service, {
      region: region,
      action: action
    }).then(function (response) {
      var _a, _b, _c, _d, _e, _f;

      result = (_b = (_a = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(response, field)) !== null && _a !== void 0 ? _a : lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(response, "Result.".concat(field))) !== null && _b !== void 0 ? _b : [];
      var total = (_f = (_e = (_d = (_c = response.TotalCount) !== null && _c !== void 0 ? _c : response.TotalCnt) !== null && _d !== void 0 ? _d : response.TotalNumber) !== null && _e !== void 0 ? _e : lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(response, "Result.TotalCount")) !== null && _f !== void 0 ? _f : 0;

      if (result.length >= total) {
        return (interceptor === null || interceptor === void 0 ? void 0 : interceptor.response) ? interceptor.response(result) : result;
      } else {
        var param = Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["SliceLength"])(total, (params === null || params === void 0 ? void 0 : params.Limit) || 100);
        var promises_1 = [];

        lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(param, function (item) {
          promises_1.push(_this.getInstances(region, __assign(__assign({}, item), query)));
        });

        return Promise.all(promises_1).then(function (responses) {
          lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(responses, function (item) {
            result = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.concat(result, item);
          });

          return (interceptor === null || interceptor === void 0 ? void 0 : interceptor.response) ? interceptor.response(result) : result;
        })["catch"](function (error) {
          return (interceptor === null || interceptor === void 0 ? void 0 : interceptor.response) ? interceptor.response(result) : result;
        });
      }
    });
  }; // 检查某变量字段是否有值


  BaseDatasource.prototype.isValidConfigField = function (field) {
    return field && field.length > 0;
  };

  BaseDatasource.prototype.testDatasource = function () {
    // const { service = this.service, action } = this.InstanceReqConfig;
    // const serviceInfo = GetServiceAPIInfo('ap-guangzhou', service);
    var _this = this;

    if (!this.isValidConfigField(this.secretId)) {
      return {
        service: this.service,
        status: 'error',
        message: 'The SecretId/SecretKey field is required.'
      };
    }

    return Promise.all([this.getRegions(), this.getMetrics(), // this.doRequest(
    //   {
    //     url: this.url + serviceInfo.path,
    //     data: {
    //       Offset: 0,
    //       Limit: 1,
    //     },
    //   },
    //   service,
    //   { region: 'ap-guangzhou', action },
    // ),
    this.getInstances('ap-guangzhou', {
      Offset: 0,
      Limit: 1
    })]).then(function (responses) {
      var cvmErr = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(responses, '[0].Error', {});

      var monitorErr = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(responses, '[1].Error', {});

      var serviceErr = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(responses, '[2].Error', {}); // const cvmAuthFail = _.get(cvmErr, 'Code', '').indexOf('AuthFailure') !== -1;
      // const monitorAuthFail = _.get(monitorErr, 'Code', '').indexOf('AuthFailure') !== -1;
      // const serviceAuthFail = _.get(serviceErr, 'Code', '').indexOf('AuthFailure') !== -1;


      var cvmAuthFail = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(cvmErr, 'Code', '');

      var monitorAuthFail = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(monitorErr, 'Code', '');

      var serviceAuthFail = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(serviceErr, 'Code', '');

      if (cvmAuthFail || monitorAuthFail || serviceAuthFail) {
        var messages = [];

        if (cvmAuthFail) {
          messages.push(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(cvmErr, 'Code'));
        }

        if (monitorAuthFail) {
          messages.push(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(monitorErr, 'Code'));
        }

        if (serviceAuthFail) {
          messages.push(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(serviceErr, 'Code'));
        }

        var message = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.join(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(messages)), '; ');

        return {
          service: _this.service,
          status: 'error',
          message: message
        };
      } else {
        return {
          namespace: _this.namespace,
          service: _this.service,
          status: 'success',
          message: "Successfully queried the ".concat(_this.service, " service."),
          title: 'Success'
        };
      }
    })["catch"](function (error) {
      var message = "".concat(_this.service, " service:");
      message += error.statusText ? error.statusText + '; ' : '';

      if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(error, 'data.error.code', '')) {
        message += error.data.error.code + '. ' + error.data.error.message;
      } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(error, 'data.error', '')) {
        message += error.data.error;
      } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(error, 'data', '')) {
        message += error.data;
      } else {
        message += "Cannot connect to ".concat(_this.service, " service.");
      }

      return {
        service: _this.service,
        status: 'error',
        message: message
      };
    });
  };

  BaseDatasource.prototype.doRequest = function (options, service, signObj) {
    if (signObj === void 0) {
      signObj = {};
    }

    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["GetRequestParams"])(options, service, signObj, this.secretId, this.instanceSettings.id, this.backendSrv)];

          case 1:
            options = _a.sent();
            return [2
            /*return*/
            , this.backendSrv.datasourceRequest(options).then(function (response) {
              return lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(response, 'data.Response', {});
            })["catch"](function (error) {
              throw error;
            })];
        }
      });
    });
  };

  return BaseDatasource;
}();



/***/ }),

/***/ "./datasource/tc_monitor/_base/query.ts":
/*!**********************************************!*\
  !*** ./datasource/tc_monitor/_base/query.ts ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grafana/app/core/core_module */ "grafana/app/core/core_module");
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");



function classFactory(detailConfig) {
  return (
    /** @class */
    function () {
      QueryCtrl.$inject = ["$scope", "$rootScope"];

      /** @ngInject */
      function QueryCtrl($scope, $rootScope) {
        Object.assign($scope, detailConfig);

        $scope.getDropdown = function (field) {
          var service = Object(_common_constants__WEBPACK_IMPORTED_MODULE_1__["GetServiceFromNamespace"])($scope.namespace);
          return $scope.datasource.getFilterDropdown(service, {
            field: field,
            region: $scope.region
          });
        };
      }

      return QueryCtrl;
    }()
  );
}

var template = "\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"{{instanceDocUrl}}\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in fieldDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputNumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />    \n      <multi-condition\n        ng-if=\"field.type === 'inputNumberMulti'\"\n        type=\"'inputNumber'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        maxNum=\"field.max\"\n        minNum=\"field.min\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputMulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownMulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <gf-form-dropdown \n        ng-if=\"field.type === 'dropdown'\"\n        model=\"target.queries[field.key]\" \n        allow-custom=\"true\" \n        lookup-text=\"true\" \n        get-options=\"getDropdown(field.key)\" \n        css-class=\"min-width-10\"\n        on-change=\"onChange()\">\n      </gf-form-dropdown>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n      <gf-form-switch \n        ng-if=\"field.type === 'switch'\"\n        class=\"gf-form tc-switch\" \n        label-class=\"width-7\" \n        checked=\"target.queries[field.key]\" \n        switch-class=\"max-width-5\"\n      ></gf-form-switch>\n    </div>\n  </div>\n</div>\n  </div>\n";

function queryDDOFactory(QueryCtrl) {
  return function queryDDO() {
    return {
      template: template,
      controller: QueryCtrl,
      restrict: 'E',
      scope: {
        target: '=',
        showDetail: '=',
        region: '=',
        datasource: '=',
        getDropdownOptions: '&',
        onChange: '&'
      }
    };
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (name, config) {
  // QueryCtrl._config = config;
  var newQueryIns = classFactory(config);
  grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default.a.directive(name, queryDDOFactory(newQueryIns));
});

/***/ }),

/***/ "./datasource/tc_monitor/_base/query_filter.ts":
/*!*****************************************************!*\
  !*** ./datasource/tc_monitor/_base/query_filter.ts ***!
  \*****************************************************/
/*! exports provided: queryDDO, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryDDO", function() { return queryDDO; });
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grafana/app/core/core_module */ "grafana/app/core/core_module");
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__);


var SPQueryCtrl =
/** @class */
function () {
  SPQueryCtrl.$inject = ["$scope", "$rootScope"];

  /** @ngInject */
  function SPQueryCtrl($scope, $rootScope) {
    Object.assign($scope, SPQueryCtrl._config);

    $scope.onChecked = function (srcField, dstField) {
      if ($scope.target.queries[srcField] === true) {
        $scope.target.queries[dstField] = false;
      }

      $scope.onChange();
    };

    $scope.init();
  }

  return SPQueryCtrl;
}();

var template = "\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"{{instanceDocUrl}}\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        \u504F\u79FB\u91CF, \u4F8B\u5982Offset=20&Limit=20 \u8FD4\u56DE\u7B2C 20 \u5230 40 \u9879\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        \u5355\u6B21\u8BF7\u6C42\u8FD4\u56DE\u7684\u6570\u91CF\uFF0C\u9ED8\u8BA4\u4E3A20\uFF0C\u6700\u5C0F\u503C\u4E3A1\uFF0C\u6700\u5927\u503C\u4E3A100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      InstanceIds\n      <info-popover mode=\"right-normal\">\n        \u5B9E\u4F8B ID\uFF0C\u6BCF\u6B21\u8BF7\u6C42\u7684\u5B9E\u4F8B\u7684\u4E0A\u9650\u4E3A100\uFF0C\u53C2\u6570\u4E0D\u652F\u6301\u540C\u65F6\u6307\u5B9A InstanceIds \u548C Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n      switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n  <multi-condition type=\"'input'\" max-cond=\"100\" value=\"target.queries.InstanceIds\" on-change=\"onChange()\">\n  </multi-condition>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      Filters\n      <info-popover mode=\"right-normal\">\n        \u8FC7\u6EE4\u6761\u4EF6\uFF0C\u6BCF\u6B21\u8BF7\u6C42\u7684 Filters \u7684\u4E0A\u9650\u4E3A10\uFF0CFilter.Values \u7684\u4E0A\u9650\u4E3A5\u3002\u53C2\u6570\u4E0D\u652F\u6301\u540C\u65F6\u6307\u5B9A InstanceIds \u548C Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n      on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n  <div class=\"gf-form-inline\" ng-repeat=\"field in CVMFilterFieldsDescriptor\">\n    <label class=\"gf-form-label width-14\">\n      {{ field.key }}\n      <info-popover mode=\"right-normal\">\n        {{ field.cnDescriptor }}\n        <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n      </info-popover>\n    </label>\n    <multi-condition\n      ng-if=\"field.type === 'dropdownmulti'\"\n      type=\"'dropdown'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      get-options=\"getDropdown(field.key)\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputNumbermulti'\"\n      type=\"'inputNumber'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      maxNum=\"field.max\"\n      minNum=\"field.min\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputmulti'\"\n      type=\"'input'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <custom-select-dropdown\n      ng-if=\"field.type === 'select'\"\n      value=\"target.queries.Filters[field.key]\"\n      options=\"field.list\"\n      multiple=\"true\"\n      on-change=\"onChange()\"\n    ></custom-select-dropdown>\n  </div>\n</div>\n</div>\n";
function queryDDO() {
  return {
    template: template,
    controller: SPQueryCtrl,
    restrict: 'E',
    scope: {
      target: '=',
      showDetail: '=',
      region: '=',
      datasource: '=',
      getDropdownOptions: '&',
      onChange: '&'
    }
  };
}
/* harmony default export */ __webpack_exports__["default"] = (function (name, config) {
  SPQueryCtrl._config = config;
  grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default.a.directive(name, queryDDO);
});

/***/ }),

/***/ "./datasource/tc_monitor/_base/types.ts":
/*!**********************************************!*\
  !*** ./datasource/tc_monitor/_base/types.ts ***!
  \**********************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./datasource/tc_monitor/apigateway/datasource.ts":
/*!********************************************************!*\
  !*** ./datasource/tc_monitor/apigateway/datasource.ts ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/apigateway/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");
/* harmony import */ var _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/datasourceStorage */ "./datasource/common/datasourceStorage.ts");
/* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../locale */ "./locale/index.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};








var DCDatasource =
/** @class */
function (_super) {
  __extends(DCDatasource, _super);

  function DCDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = _query_def__WEBPACK_IMPORTED_MODULE_0__["namespace"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["APIGATEWAYInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["APIGATEWAYInvalidDemensions"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_0__["templateQueryIdMap"]; // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致

    _this.InstanceReqConfig = {
      service: 'apigateway',
      action: 'DescribeServicesStatus',
      responseField: 'ServiceSet'
    };
    _this.keyInStorage = _query_def__WEBPACK_IMPORTED_MODULE_0__["keyInStorage"];
    _this.queryMonitorExtraConfg = _query_def__WEBPACK_IMPORTED_MODULE_0__["queryMonitorExtraConfg"];
    return _this;
  } // getFilterDropdown({ field }) {
  //   return super.getRegions();
  // }


  DCDatasource.prototype.getRegions = function () {
    return Promise.resolve(_query_def__WEBPACK_IMPORTED_MODULE_0__["regionSupported"].map(function (_a) {
      var value = _a.value;
      return {
        value: value,
        text: Object(_locale__WEBPACK_IMPORTED_MODULE_5__["t"])(value)
      };
    }));
  };

  DCDatasource.prototype.getEnvironmentNameList = function (params) {
    return __awaiter(this, void 0, void 0, function () {
      var region, instanceId, serviceInfo, res, rs;

      var _this = this;

      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            region = params.region, instanceId = params.instanceId;
            serviceInfo = Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["GetServiceAPIInfo"])(region, this.service);
            return [4
            /*yield*/
            , Object(_common_utils__WEBPACK_IMPORTED_MODULE_3__["fetchAllFactory"])(function (data) {
              return _this.doRequest({
                url: _this.url + serviceInfo.path,
                data: data
              }, serviceInfo.service, {
                region: region,
                action: 'DescribeServiceEnvironmentList'
              });
            }, {
              ServiceId: instanceId
            }, 'EnvironmentList')];

          case 1:
            res = _a.sent();
            rs = res[0];
            return [2
            /*return*/
            , rs];
        }
      });
    });
  };

  DCDatasource.prototype.fetchMetricData = function (action, region, instance) {
    return __awaiter(this, void 0, void 0, function () {
      var rs, result;

      var _this = this;

      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            if (!(action === 'DescribeServiceEnvironmentList')) return [3
            /*break*/
            , 3];
            return [4
            /*yield*/
            , this.getEnvironmentNameList({
              region: region,
              instanceId: instance[this.templateQueryIdMap.instance]
            })];

          case 1:
            rs = _a.sent();
            result = rs.map(function (o) {
              o._InstanceAliasValue = o[_this.templateQueryIdMap.environmentName];
              return {
                text: o[_this.templateQueryIdMap.environmentName],
                value: o[_this.templateQueryIdMap.environmentName]
              };
            });
            return [4
            /*yield*/
            , _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_4__["default"].setExtraStorage(this.service, this.keyInStorage.environmentList, rs)];

          case 2:
            _a.sent();

            return [2
            /*return*/
            , result];

          case 3:
            return [2
            /*return*/
            , []];
        }
      });
    });
  };

  return DCDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (DCDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/apigateway/query.ts":
/*!***************************************************!*\
  !*** ./datasource/tc_monitor/apigateway/query.ts ***!
  \***************************************************/
/*! exports provided: QueryCtrl, sQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QueryCtrl", function() { return QueryCtrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sQuery", function() { return sQuery; });
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grafana/app/core/core_module */ "grafana/app/core/core_module");
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/apigateway/query_def.ts");
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};





var QueryCtrl =
/** @class */
function () {
  QueryCtrl.$inject = ["$scope", "$rootScope"];

  /** @ngInject */
  function QueryCtrl($scope, $rootScope) {
    var _this = this;

    $scope.init = function () {
      $scope.APIGATEWAYFilterFieldsDescriptor = _query_def__WEBPACK_IMPORTED_MODULE_1__["APIGATEWAYFilterFieldsDescriptor"];
      $scope.namespace = _query_def__WEBPACK_IMPORTED_MODULE_1__["namespace"];
    };

    $scope.getInstanceId = function () {
      var instance = $scope.target.instance;
      var service = Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["GetServiceFromNamespace"])($scope.namespace); // console.log({namespace, service});

      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);

      if (!instance) {
        return '';
      }

      try {
        instance = JSON.parse(instance)[_query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"].instance];
      } catch (error) {// console.log();
      }

      return instance;
    };

    $scope.getExtraDropdown = function (target) {
      return __awaiter(_this, void 0, void 0, function () {
        var service, instanceId, region, rs, result;
        return __generator(this, function (_a) {
          switch (_a.label) {
            case 0:
              service = Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["GetServiceFromNamespace"])($scope.namespace);
              instanceId = $scope.getInstanceId();
              region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);
              return [4
              /*yield*/
              , $scope.datasource.getServiceFn(service, 'getEnvironmentNameList')({
                region: region,
                instanceId: instanceId
              })];

            case 1:
              rs = _a.sent();
              result = rs.map(function (o) {
                return {
                  text: o.EnvironmentName,
                  value: JSON.stringify(o)
                };
              });
              return [2
              /*return*/
              , result];
          }
        });
      });
    };

    $scope.init();
  }

  return QueryCtrl;
}();


var template = "\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/45073\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in APIGATEWAYFilterFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputNumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />    \n      <multi-condition\n        ng-if=\"field.type === 'inputNumberMulti'\"\n        type=\"'inputNumber'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        maxNum=\"field.max\"\n        minNum=\"field.min\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputMulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- \u8D77\u59CB\u533A\u57DF \u76EE\u7684\u533A\u57DF\u7B49 -->\n  <div>\n    <div class=\"gf-form-inline\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">EnvironmentName</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target.EnvironmentName\" allow-custom=\"true\" lookup-text=\"true\"  get-options=\"getExtraDropdown(target)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n";
function sQuery() {
  return {
    template: template,
    controller: QueryCtrl,
    restrict: 'E',
    scope: {
      target: '=',
      showDetail: '=',
      region: '=',
      datasource: '=',
      getDropdownOptions: '&',
      onChange: '&',
      onRefresh: '&',
      dims: '='
    }
  };
}
grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default.a.directive(_query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorName"], sQuery);

/***/ }),

/***/ "./datasource/tc_monitor/apigateway/query_def.ts":
/*!*******************************************************!*\
  !*** ./datasource/tc_monitor/apigateway/query_def.ts ***!
  \*******************************************************/
/*! exports provided: default, APIGATEWAYFilterFieldsDescriptor, templateQueryIdMap, APIGATEWAYInstanceAliasList, APIGATEWAYInvalidDemensions, namespace, queryEditorName, queryEditorConfig, regionSupported, queryMonitorExtraConfg, keyInStorage, APIGATEWAYGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "APIGATEWAYFilterFieldsDescriptor", function() { return APIGATEWAYFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "APIGATEWAYInstanceAliasList", function() { return APIGATEWAYInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "APIGATEWAYInvalidDemensions", function() { return APIGATEWAYInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorName", function() { return queryEditorName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorConfig", function() { return queryEditorConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "regionSupported", function() { return regionSupported; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryMonitorExtraConfg", function() { return queryMonitorExtraConfg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keyInStorage", function() { return keyInStorage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "APIGATEWAYGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");

var namespace = 'QCE/APIGATEWAY'; // 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称

var queryEditorName = 'apigatewayQuery';
var APIGATEWAYInvalidDemensions = {
  serviceId: 'ServiceId',
  environmentName: 'EnvironmentName',
  apiid: 'Apiid',
  apiId: 'Apiid'
}; // 需和文件名对应

var APIGATEWAYInstanceAliasList = ['ServiceId', 'ServiceName'];
var templateQueryIdMap = {
  instance: 'ServiceId',
  environmentName: 'EnvironmentName'
}; // 需要缓存到storage的内容的key列表

var keyInStorage = {
  environmentList: 'EnvironmentList'
};
/*
如果有InstanceId额外的维度，原则上都需要传入此map结构配置
key的含义：
  经过InvalidDemensions处理后的string。topicId =》TopicId。
  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId
value的含义：
  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、
  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。
                    默认取通过InvalidDemsion处理后的key
  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。
                    即：templateQueryIdMap中内容。
                    联合上面2的内容筛选出原始sourceMap
*/

var queryMonitorExtraConfg = {
  EnvironmentName: {
    dim_KeyInStorage: keyInStorage.environmentList,
    dim_KeyInTarget: 'EnvironmentName',
    dim_KeyInMap: templateQueryIdMap.environmentName
  }
}; // select类型需要注意是{},multi后缀是[],dropdown是''

var APIGATEWAYFilterFields = {
  Limit: 20,
  Offset: 0,
  ServiceId: [],
  ServiceName: [],
  NotUsagePlanId: [],
  Environment: [],
  IpVersion: []
};
var APIGATEWAYFilterFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputNumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputNumber',
  min: 1,
  max: 100
}, {
  key: 'ServiceId',
  enDescriptor: 'ServiceId',
  cnDescriptor: '服务id',
  link: '',
  type: 'inputMulti'
}, {
  key: 'ServiceName',
  enDescriptor: 'ServiceName',
  cnDescriptor: '服务名称',
  link: '',
  type: 'inputMulti'
}, {
  key: 'NotUsagePlanId',
  enDescriptor: 'NotUsagePlanId',
  cnDescriptor: 'NotUsagePlanId',
  link: '',
  type: 'inputMulti'
}, {
  key: 'Environment',
  enDescriptor: 'Environment',
  cnDescriptor: '环境名称',
  link: '',
  type: 'inputMulti'
}, {
  key: 'IpVersion',
  enDescriptor: 'IpVersion',
  cnDescriptor: 'IP版本',
  link: '',
  type: 'inputMulti'
}]; // 各产品实例列表detail配置

var queryEditorConfig = {
  instanceDocUrl: 'https://cloud.tencent.com/document/api/628/45198',
  namespace: namespace,
  fieldDescriptor: APIGATEWAYFilterFieldsDescriptor
};
var APIGATEWAY_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'ServiceId',
  EnvironmentName: '',
  queries: APIGATEWAYFilterFields
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  return Object(_common_utils__WEBPACK_IMPORTED_MODULE_0__["instanceQueryParamsBaseParse"])(queries, true);
} // regions for dropdown


var regionSupported = [{
  value: 'ap-beijing'
}, {
  value: 'ap-chengdu'
}, {
  value: 'ap-chongqing'
}, {
  value: 'ap-guangzhou'
}, {
  value: 'ap-hongkong'
}, {
  value: 'ap-mumbai'
}, {
  value: 'ap-nanjing'
}, {
  value: 'ap-shanghai'
}, {
  value: 'ap-shanghai-fsi'
}, {
  value: 'ap-shenzhen-fsi'
}, {
  value: 'ap-singapore'
}, {
  value: 'ap-tokyo'
}, {
  value: 'eu-frankfurt'
}, {
  value: 'na-ashburn'
}, {
  value: 'na-siliconvalley'
}, {
  value: 'na-toronto'
}];
/* harmony default export */ __webpack_exports__["default"] = (APIGATEWAY_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/bmIntraLb/datasource.ts":
/*!*******************************************************!*\
  !*** ./datasource/tc_monitor/bmIntraLb/datasource.ts ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/bmIntraLb/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../locale */ "./locale/index.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};






var DCDatasource =
/** @class */
function (_super) {
  __extends(DCDatasource, _super);

  function DCDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = _query_def__WEBPACK_IMPORTED_MODULE_0__["namespace"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["BMINTRALBInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["BMINTRALBInvalidDemensions"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_0__["templateQueryIdMap"]; // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致

    _this.InstanceReqConfig = {
      service: 'bmlb',
      action: 'DescribeLoadBalancers',
      responseField: 'LoadBalancerSet',
      interceptor: {
        request: function request(params) {
          return __assign(__assign({}, params), {
            LoadBalancerType: 'internal'
          });
        } // 设置一些请求参数的 默认值

      }
    };
    _this.RegionMap = {};
    return _this;
  } // 重写getRegion


  DCDatasource.prototype.getRegions = function () {
    var _this = this;

    return this.doRequest({
      url: this.url + '/bm'
    }, 'bm', {
      action: 'DescribeRegions',
      region: 'ap-guangzhou'
    }).then(function (response) {
      // 缓存，后面获取可用区zone
      _this.RegionMap = lodash__WEBPACK_IMPORTED_MODULE_2___default.a.keyBy(response.RegionInfoSet, 'Region');
      return lodash__WEBPACK_IMPORTED_MODULE_2___default.a.map(response.RegionInfoSet || [], function (item) {
        return {
          text: Object(_locale__WEBPACK_IMPORTED_MODULE_3__["t"])(item.Region),
          value: item.Region
        };
      });
    });
  };

  DCDatasource.prototype.getMetrics = function (region) {
    if (region === void 0) {
      region = 'ap-guangzhou';
    }

    return __awaiter(this, void 0, void 0, function () {
      var rawSet;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , _super.prototype.getMetrics.call(this, region)];

          case 1:
            rawSet = _a.sent();
            return [2
            /*return*/
            , lodash__WEBPACK_IMPORTED_MODULE_2___default.a.compact(rawSet.map(function (item) {
              if (Object(_query_def__WEBPACK_IMPORTED_MODULE_0__["isValidMetric"])(item)) {
                return item;
              }

              return null;
            }))];
        }
      });
    });
  };

  return DCDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (DCDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/bmIntraLb/query.ts":
/*!**************************************************!*\
  !*** ./datasource/tc_monitor/bmIntraLb/query.ts ***!
  \**************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _base_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_base/query */ "./datasource/tc_monitor/_base/query.ts");
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/bmIntraLb/query_def.ts");


Object(_base_query__WEBPACK_IMPORTED_MODULE_0__["default"])(_query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorName"], _query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorConfig"]);

/***/ }),

/***/ "./datasource/tc_monitor/bmIntraLb/query_def.ts":
/*!******************************************************!*\
  !*** ./datasource/tc_monitor/bmIntraLb/query_def.ts ***!
  \******************************************************/
/*! exports provided: default, BMINTRALBFilterFieldsDescriptor, templateQueryIdMap, BMINTRALBInstanceAliasList, BMINTRALBInvalidDemensions, namespace, queryEditorName, queryEditorConfig, isValidMetric, BMINTRALBGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BMINTRALBFilterFieldsDescriptor", function() { return BMINTRALBFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BMINTRALBInstanceAliasList", function() { return BMINTRALBInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BMINTRALBInvalidDemensions", function() { return BMINTRALBInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorName", function() { return queryEditorName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorConfig", function() { return queryEditorConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isValidMetric", function() { return isValidMetric; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BMINTRALBGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);


var namespace = 'QCE/BM_INTRA_LB'; // 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称

var queryEditorName = 'bmIntraLbQuery';
var BMINTRALBInvalidDemensions = {
  vip: 'LoadBalancerVips',
  vpcId: 'VpcId'
}; // 要和文件名方式一致，ceip_summary=>CEIPSUMMARY

var BMINTRALBInstanceAliasList = ['LoadBalancerId', 'LoadBalancerVips', 'LoadBalancerName'];
var templateQueryIdMap = {
  instance: 'LoadBalancerId'
}; // select类型需要注意是{},multi后缀是[],dropdown是类型

var BMINTRALBFilterFields = {
  Limit: 20,
  Offset: 0,
  LoadBalancerIds: [],
  LoadBalancerName: [],
  LoadBalancerVips: []
};
var BMINTRALBFilterFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputNumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputNumber',
  min: 1,
  max: 100
}, {
  key: 'LoadBalancerIds',
  enDescriptor: 'LoadBalancerIds',
  cnDescriptor: '负载均衡器ID数组',
  link: '',
  type: 'inputMulti'
}, {
  key: 'LoadBalancerName',
  enDescriptor: 'LoadBalancerName',
  cnDescriptor: '负载均衡器名称',
  link: '',
  type: 'inputMulti'
}, {
  key: 'LoadBalancerVips',
  enDescriptor: 'LoadBalancerVips',
  cnDescriptor: '负载均衡获得的公网IP地址',
  link: '',
  type: 'inputMulti'
}]; // 各产品实例列表detail配置

var queryEditorConfig = {
  instanceDocUrl: 'https://cloud.tencent.com/document/api/1027/33280',
  namespace: namespace,
  fieldDescriptor: BMINTRALBFilterFieldsDescriptor
};
var BMINTRALB_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'LoadBalancerId',
  queries: BMINTRALBFilterFields
};
var BMLBValidMetricsT = ['Inpkg', 'Outpkg', 'Intraffic', 'Outtraffic', 'Connum', 'Req'];

function isValidMetric(metric) {
  var validMetrics = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.map(BMLBValidMetricsT, lodash__WEBPACK_IMPORTED_MODULE_1___default.a.toUpper);

  return lodash__WEBPACK_IMPORTED_MODULE_1___default.a.indexOf(validMetrics, lodash__WEBPACK_IMPORTED_MODULE_1___default.a.toUpper(metric.MetricName)) !== -1;
}

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  return Object(_common_utils__WEBPACK_IMPORTED_MODULE_0__["instanceQueryParamsBaseParse"])(queries, false);
}

/* harmony default export */ __webpack_exports__["default"] = (BMINTRALB_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/bm_lb/datasource.ts":
/*!***************************************************!*\
  !*** ./datasource/tc_monitor/bm_lb/datasource.ts ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/bm_lb/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../locale */ "./locale/index.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};






var DCDatasource =
/** @class */
function (_super) {
  __extends(DCDatasource, _super);

  function DCDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = _query_def__WEBPACK_IMPORTED_MODULE_0__["namespace"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["BMLBInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["CPMInvalidDemensions"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_0__["templateQueryIdMap"]; // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致

    _this.InstanceReqConfig = {
      service: 'bmlb',
      action: 'DescribeLoadBalancers',
      responseField: 'LoadBalancerSet',
      interceptor: {
        request: function request(params) {
          return __assign(__assign({}, params), {
            LoadBalancerType: 'open'
          });
        } // 设置一些请求参数的 默认值

      }
    };
    _this.RegionMap = {};
    return _this;
  }

  DCDatasource.prototype.getMetrics = function (region) {
    if (region === void 0) {
      region = 'ap-guangzhou';
    }

    return __awaiter(this, void 0, void 0, function () {
      var rawSet;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , _super.prototype.getMetrics.call(this, region)];

          case 1:
            rawSet = _a.sent();
            return [2
            /*return*/
            , lodash__WEBPACK_IMPORTED_MODULE_2___default.a.compact(rawSet.map(function (item) {
              if (Object(_query_def__WEBPACK_IMPORTED_MODULE_0__["isValidMetric"])(item)) {
                return item;
              }

              return null;
            }))];
        }
      });
    });
  }; // 重写getRegion


  DCDatasource.prototype.getRegions = function () {
    var _this = this;

    return this.doRequest({
      url: this.url + '/bm'
    }, 'bm', {
      action: 'DescribeRegions',
      region: 'ap-guangzhou'
    }).then(function (response) {
      // 缓存，后面获取可用区zone
      _this.RegionMap = lodash__WEBPACK_IMPORTED_MODULE_2___default.a.keyBy(response.RegionInfoSet, 'Region');
      return lodash__WEBPACK_IMPORTED_MODULE_2___default.a.map(response.RegionInfoSet || [], function (item) {
        return {
          text: Object(_locale__WEBPACK_IMPORTED_MODULE_3__["t"])(item.Region),
          value: item.Region
        };
      });
    });
  };

  return DCDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (DCDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/bm_lb/query.ts":
/*!**********************************************!*\
  !*** ./datasource/tc_monitor/bm_lb/query.ts ***!
  \**********************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _base_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_base/query */ "./datasource/tc_monitor/_base/query.ts");
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/bm_lb/query_def.ts");


Object(_base_query__WEBPACK_IMPORTED_MODULE_0__["default"])(_query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorName"], _query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorConfig"]);

/***/ }),

/***/ "./datasource/tc_monitor/bm_lb/query_def.ts":
/*!**************************************************!*\
  !*** ./datasource/tc_monitor/bm_lb/query_def.ts ***!
  \**************************************************/
/*! exports provided: default, CPMFilterFieldsDescriptor, templateQueryIdMap, BMLBInstanceAliasList, CPMInvalidDemensions, namespace, queryEditorName, queryEditorConfig, isValidMetric, BMLBGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CPMFilterFieldsDescriptor", function() { return CPMFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BMLBInstanceAliasList", function() { return BMLBInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CPMInvalidDemensions", function() { return CPMInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorName", function() { return queryEditorName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorConfig", function() { return queryEditorConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isValidMetric", function() { return isValidMetric; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BMLBGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);


var namespace = 'QCE/BM_LB'; // 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称

var queryEditorName = 'bmLbQuery';
var CPMInvalidDemensions = {
  vip: 'LoadBalancerVips'
}; // 要和文件名方式一致，ceip_summary=>CEIPSUMMARY

var BMLBInstanceAliasList = ['LoadBalancerId', 'LoadBalancerVips', 'LoadBalancerName'];
var templateQueryIdMap = {
  instance: 'LoadBalancerId'
}; // select类型需要注意是{},multi后缀是[],dropdown是类型

var CPMFilterFields = {
  Limit: 20,
  Offset: 0,
  LoadBalancerIds: [],
  LoadBalancerName: [],
  LoadBalancerVips: []
};
var CPMFilterFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputNumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputNumber',
  min: 1,
  max: 100
}, {
  key: 'LoadBalancerIds',
  enDescriptor: 'LoadBalancerIds',
  cnDescriptor: '负载均衡器ID数组',
  link: '',
  type: 'inputMulti'
}, {
  key: 'LoadBalancerName',
  enDescriptor: 'LoadBalancerName',
  cnDescriptor: '负载均衡器名称',
  link: '',
  type: 'inputMulti'
}, {
  key: 'LoadBalancerVips',
  enDescriptor: 'LoadBalancerVips',
  cnDescriptor: '负载均衡获得的公网IP地址',
  link: '',
  type: 'inputMulti'
}]; // 各产品实例列表detail配置

var queryEditorConfig = {
  instanceDocUrl: 'https://cloud.tencent.com/document/api/1027/33280',
  namespace: namespace,
  fieldDescriptor: CPMFilterFieldsDescriptor
};
var CPM_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'LoadBalancerId',
  queries: CPMFilterFields
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  return Object(_common_utils__WEBPACK_IMPORTED_MODULE_0__["instanceQueryParamsBaseParse"])(queries, false);
}

var BMLBValidMetricsT = ['Inpkg', 'Outpkg', 'Intraffic', 'Outtraffic', 'Connum', 'Req'];

function isValidMetric(metric) {
  var validMetrics = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.map(BMLBValidMetricsT, lodash__WEBPACK_IMPORTED_MODULE_1___default.a.toUpper);

  return lodash__WEBPACK_IMPORTED_MODULE_1___default.a.indexOf(validMetrics, lodash__WEBPACK_IMPORTED_MODULE_1___default.a.toUpper(metric.MetricName)) !== -1;
}

/* harmony default export */ __webpack_exports__["default"] = (CPM_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/bm_pcx/datasource.ts":
/*!****************************************************!*\
  !*** ./datasource/tc_monitor/bm_pcx/datasource.ts ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/bm_pcx/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../locale */ "./locale/index.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();






var DCDatasource =
/** @class */
function (_super) {
  __extends(DCDatasource, _super);

  function DCDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = _query_def__WEBPACK_IMPORTED_MODULE_0__["namespace"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["BMPCXInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["BMPCXInvalidDemensions"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_0__["templateQueryIdMap"]; // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致

    _this.InstanceReqConfig = {
      service: 'bmvpc',
      action: 'DescribeVpcPeerConnections',
      responseField: 'VpcPeerConnectionSet'
    };
    _this.MetricReqConfig = {
      resultFilter: _query_def__WEBPACK_IMPORTED_MODULE_0__["modifyDimensons"]
    };
    _this.RegionMap = {};
    return _this;
  } // 重写getRegion


  DCDatasource.prototype.getRegions = function () {
    var _this = this;

    return this.doRequest({
      url: this.url + '/bm'
    }, 'bm', {
      action: 'DescribeRegions',
      region: 'ap-guangzhou'
    }).then(function (response) {
      // 缓存，后面获取可用区zone
      _this.RegionMap = lodash__WEBPACK_IMPORTED_MODULE_2___default.a.keyBy(response.RegionInfoSet, 'Region');
      return lodash__WEBPACK_IMPORTED_MODULE_2___default.a.map(response.RegionInfoSet || [], function (item) {
        return {
          text: Object(_locale__WEBPACK_IMPORTED_MODULE_3__["t"])(item.Region),
          value: item.Region
        };
      });
    });
  };

  return DCDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (DCDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/bm_pcx/query.ts":
/*!***********************************************!*\
  !*** ./datasource/tc_monitor/bm_pcx/query.ts ***!
  \***********************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _base_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_base/query */ "./datasource/tc_monitor/_base/query.ts");
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/bm_pcx/query_def.ts");


Object(_base_query__WEBPACK_IMPORTED_MODULE_0__["default"])(_query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorName"], _query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorConfig"]);

/***/ }),

/***/ "./datasource/tc_monitor/bm_pcx/query_def.ts":
/*!***************************************************!*\
  !*** ./datasource/tc_monitor/bm_pcx/query_def.ts ***!
  \***************************************************/
/*! exports provided: default, BMPCXFilterFieldsDescriptor, templateQueryIdMap, BMPCXInstanceAliasList, BMPCXInvalidDemensions, namespace, queryEditorName, queryEditorConfig, modifyDimensons, BMPCXGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BMPCXFilterFieldsDescriptor", function() { return BMPCXFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BMPCXInstanceAliasList", function() { return BMPCXInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BMPCXInvalidDemensions", function() { return BMPCXInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorName", function() { return queryEditorName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorConfig", function() { return queryEditorConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modifyDimensons", function() { return modifyDimensons; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BMPCXGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);


var namespace = 'QCE/BM_PCX'; // 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称

var queryEditorName = 'bmPcxQuery';
var BMPCXInvalidDemensions = {
  peeringConnectionId: 'VpcPeerConnectionId'
}; // 要和文件名方式一致，ceip_summary=>CEIPSUMMARY

var BMPCXInstanceAliasList = ['VpcPeerConnectionId', 'VpcPeerConnectionName'];
var templateQueryIdMap = {
  instance: 'VpcPeerConnectionId'
}; // select类型需要注意是{},multi后缀是[],dropdown是类型

var BMPCXFilterFields = {
  Limit: 20,
  Offset: 0,
  VpcPeerConnectionIds: []
};
var BMPCXFilterFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputNumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputNumber',
  min: 1,
  max: 100
}, {
  key: 'VpcPeerConnectionIds',
  enDescriptor: 'VpcPeerConnectionIds',
  cnDescriptor: '对等连接实例ID',
  link: '',
  type: 'inputMulti'
}]; // 各产品实例列表detail配置

var queryEditorConfig = {
  instanceDocUrl: 'https://cloud.tencent.com/document/product/1024/36903',
  namespace: namespace,
  fieldDescriptor: BMPCXFilterFieldsDescriptor
};
var BMPCX_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'VpcPeerConnectionId',
  queries: BMPCXFilterFields
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  return Object(_common_utils__WEBPACK_IMPORTED_MODULE_0__["instanceQueryParamsBaseParse"])(queries, false);
}

function modifyDimensons(metricItem) {
  var metricTmp = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.cloneDeep(metricItem);

  metricTmp.Dimensions.forEach(function (item) {
    item.Dimensions = ['peeringConnectionId'];
  });
  return metricTmp;
}

/* harmony default export */ __webpack_exports__["default"] = (BMPCX_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/bwp/datasource.ts":
/*!*************************************************!*\
  !*** ./datasource/tc_monitor/bwp/datasource.ts ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/bwp/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();




var BWPDatasource =
/** @class */
function (_super) {
  __extends(BWPDatasource, _super);

  function BWPDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = 'QCE/BWP';
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["BWPInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["BWPInvalidDemensions"];
    _this.templateQueryIdMap = {
      instance: 'BandwidthPackageId'
    };
    _this.InstanceReqConfig = {
      service: 'vpc',
      action: 'DescribeBandwidthPackages',
      responseField: 'BandwidthPackageSet'
    };
    return _this;
  }

  return BWPDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (BWPDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/bwp/query.ts":
/*!********************************************!*\
  !*** ./datasource/tc_monitor/bwp/query.ts ***!
  \********************************************/
/*! exports provided: BWPQueryCtrl, bwpQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BWPQueryCtrl", function() { return BWPQueryCtrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bwpQuery", function() { return bwpQuery; });
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grafana/app/core/core_module */ "grafana/app/core/core_module");
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/bwp/query_def.ts");



var BWPQueryCtrl =
/** @class */
function () {
  BWPQueryCtrl.$inject = ["$scope", "$rootScope"];

  /** @ngInject */
  function BWPQueryCtrl($scope, $rootScope) {
    $scope.init = function () {
      $scope.BWPFilterFieldsDescriptor = _query_def__WEBPACK_IMPORTED_MODULE_1__["BWPFilterFieldsDescriptor"];
    };

    $scope.onChecked = function (srcField, dstField) {
      if ($scope.target.queries[srcField] === true) {
        $scope.target.queries[dstField] = false;
      }

      $scope.onChange();
    };

    $scope.getDropdown = function (field) {
      switch (field) {
        case 'zone':
          return $scope.getZones();

        default:
          return [];
      }
    };

    $scope.getZones = function () {
      if (!$scope.region) {
        return [];
      }

      return $scope.datasource.getZones('cvm', $scope.region);
    };

    $scope.init();
  }

  return BWPQueryCtrl;
}();


var template = "\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/213/15728\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        \u504F\u79FB\u91CF, \u4F8B\u5982Offset=20&Limit=20 \u8FD4\u56DE\u7B2C 20 \u5230 40 \u9879\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        \u5355\u6B21\u8BF7\u6C42\u8FD4\u56DE\u7684\u6570\u91CF\uFF0C\u9ED8\u8BA4\u4E3A20\uFF0C\u6700\u5C0F\u503C\u4E3A1\uFF0C\u6700\u5927\u503C\u4E3A100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      BandwidthPackageIds\n      <info-popover mode=\"right-normal\">\n        \u5E26\u5BBD\u5305\u552F\u4E00ID\u5217\u8868\uFF0C\u53C2\u6570\u4E0D\u652F\u6301\u540C\u65F6\u6307\u5B9A BandwidthPackageIds \u548C Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n      switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n  <multi-condition type=\"'input'\" max-cond=\"100\" value=\"target.queries.BandwidthPackageIds\" on-change=\"onChange()\">\n  </multi-condition>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      Filters\n      <info-popover mode=\"right-normal\">\n        \u8FC7\u6EE4\u6761\u4EF6\uFF0C\u6BCF\u6B21\u8BF7\u6C42\u7684 Filters \u7684\u4E0A\u9650\u4E3A10\uFF0CFilter.Values \u7684\u4E0A\u9650\u4E3A5\u3002\u53C2\u6570\u4E0D\u652F\u6301\u540C\u65F6\u6307\u5B9A BandwidthPackageIds \u548C Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n      on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n  <div class=\"gf-form-inline\" ng-repeat=\"field in BWPFilterFieldsDescriptor\">\n    <label class=\"gf-form-label width-14\">\n      {{ field.key }}\n      <info-popover mode=\"right-normal\">\n        {{ field.cnDescriptor }}\n        <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n      </info-popover>\n    </label>\n    <multi-condition\n      ng-if=\"field.type === 'dropdownmulti'\"\n      type=\"'dropdown'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      get-options=\"getDropdown(field.key)\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputNumbermulti'\"\n      type=\"'inputNumber'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      maxNum=\"field.max\"\n      minNum=\"field.min\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputmulti'\"\n      type=\"'input'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <custom-select-dropdown\n      ng-if=\"field.type === 'select'\"\n      value=\"target.queries.Filters[field.key]\"\n      options=\"field.list\"\n      multiple=\"true\"\n      on-change=\"onChange()\"\n    ></custom-select-dropdown>\n  </div>\n</div>\n\n</div>\n";
function bwpQuery() {
  return {
    template: template,
    controller: BWPQueryCtrl,
    restrict: 'E',
    scope: {
      target: '=',
      showDetail: '=',
      region: '=',
      datasource: '=',
      getDropdownOptions: '&',
      onChange: '&'
    }
  };
}
grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default.a.directive('bwpQuery', bwpQuery);

/***/ }),

/***/ "./datasource/tc_monitor/bwp/query_def.ts":
/*!************************************************!*\
  !*** ./datasource/tc_monitor/bwp/query_def.ts ***!
  \************************************************/
/*! exports provided: default, BWPFilterFieldsDescriptor, templateQueryIdMap, BWPInstanceAliasList, BWPInvalidDemensions, BWPGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BWPFilterFieldsDescriptor", function() { return BWPFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BWPInstanceAliasList", function() { return BWPInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BWPInvalidDemensions", function() { return BWPInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BWPGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};


var networkTypes = [{
  text: 'BGP',
  value: 'BGP'
}, {
  text: 'SINGLEISP',
  value: 'SINGLEISP'
}, {
  text: 'ANYCAST',
  value: 'ANYCAST'
}];
var chargeTypes = [{
  text: 'top5计费',
  value: 'TOP5_POSTPAID_BY_MONTH'
}, {
  text: '月95计费',
  value: 'PERCENT95_POSTPAID_BY_MONTH'
}];
var BWPFilterFields = {
  'bandwidth-package_id': [],
  'bandwidth-package-name': [],
  'network-type': [],
  'charge-type': []
};
var BWPFilterFieldsDescriptor = [{
  key: 'bandwidth-package_id',
  enDescriptor: 'BandwidthPackage Id',
  cnDescriptor: '带宽包ID',
  link: '',
  type: 'inputmulti'
}, {
  key: 'bandwidth-package-name',
  enDescriptor: 'BandwidthPackage Name',
  cnDescriptor: '带宽包名称',
  link: '',
  type: 'inputmulti'
}, {
  key: 'network-type',
  enDescriptor: 'network type',
  cnDescriptor: '带宽包类型',
  link: '',
  type: 'select',
  list: networkTypes
}, {
  key: 'charge-type',
  enDescriptor: 'charge type',
  cnDescriptor: '带宽包计费类型',
  link: '',
  type: 'select',
  list: chargeTypes
}];
var BWP_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'BandwidthPackageId',
  queries: {
    Limit: 20,
    Offset: 0,
    instanceIdsChecked: false,
    filtersChecked: false,
    BandwidthPackageIds: [''],
    Filters: __assign({}, BWPFilterFields)
  }
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  var params = {};

  if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(queries)) {
    params.Limit = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Limit', 20) || 20;
    params.Offset = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Offset', 0) || 0;

    if (queries.instanceIdsChecked) {
      if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(queries.BandwidthPackageIds)) {
        var BandwidthPackageIds = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(queries.BandwidthPackageIds);

        if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(BandwidthPackageIds).length > 0) {
          params.BandwidthPackageIds = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(BandwidthPackageIds).slice(0, 100);
        }
      }
    } else if (queries.filtersChecked) {
      var Filters_1 = [];

      lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(queries.Filters, function (item, key) {
        if (Filters_1.length > 9) {
          return;
        }

        if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(item)) {
          item = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(item);

          if (item.length > 0) {
            Filters_1.push({
              Name: key,
              Values: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(item).slice(0, 5)
            });
          }
        } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(item)) {
          if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', []))) {
            Filters_1.push({
              Name: key,
              Values: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', []).slice(0, 5)
            });
          }
        }
      });

      if (Filters_1.length > 0) {
        params.Filters = Filters_1;
      }
    }
  }

  return params;
}

var BWPInstanceAliasList = ['BandwidthPackageId', 'BandwidthPackageName'];
var templateQueryIdMap = {
  instance: 'BandwidthPackageId'
};
var BWPInvalidDemensions = {
  bandwidthPackageId: 'BandwidthPackageId'
};
/* harmony default export */ __webpack_exports__["default"] = (BWP_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/cbs/datasource.ts":
/*!*************************************************!*\
  !*** ./datasource/tc_monitor/cbs/datasource.ts ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/cbs/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};





var DCDatasource =
/** @class */
function (_super) {
  __extends(DCDatasource, _super);

  function DCDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = _query_def__WEBPACK_IMPORTED_MODULE_0__["namespace"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["CBSInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["CBSInvalidDemensions"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_0__["templateQueryIdMap"]; // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致

    _this.InstanceReqConfig = {
      service: 'cbs',
      action: 'DescribeDisks',
      responseField: 'DiskSet'
    };
    return _this;
  }

  DCDatasource.prototype.getMetrics = function (region) {
    if (region === void 0) {
      region = 'ap-guangzhou';
    }

    return __awaiter(this, void 0, void 0, function () {
      var rawSet;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , _super.prototype.getMetrics.call(this, region)];

          case 1:
            rawSet = _a.sent();
            return [2
            /*return*/
            , lodash__WEBPACK_IMPORTED_MODULE_2___default.a.filter(rawSet, _query_def__WEBPACK_IMPORTED_MODULE_0__["isValidMetric"])];
        }
      });
    });
  };

  return DCDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (DCDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/cbs/query.ts":
/*!********************************************!*\
  !*** ./datasource/tc_monitor/cbs/query.ts ***!
  \********************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _base_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_base/query */ "./datasource/tc_monitor/_base/query.ts");
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/cbs/query_def.ts");


Object(_base_query__WEBPACK_IMPORTED_MODULE_0__["default"])(_query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorName"], _query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorConfig"]);

/***/ }),

/***/ "./datasource/tc_monitor/cbs/query_def.ts":
/*!************************************************!*\
  !*** ./datasource/tc_monitor/cbs/query_def.ts ***!
  \************************************************/
/*! exports provided: default, CBSFilterFieldsDescriptor, templateQueryIdMap, CBSInstanceAliasList, CBSInvalidDemensions, namespace, queryEditorName, queryEditorConfig, isValidMetric, CBSGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CBSFilterFieldsDescriptor", function() { return CBSFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CBSInstanceAliasList", function() { return CBSInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CBSInvalidDemensions", function() { return CBSInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorName", function() { return queryEditorName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorConfig", function() { return queryEditorConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isValidMetric", function() { return isValidMetric; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CBSGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");


var namespace = 'QCE/BLOCK_STORAGE';
var queryEditorName = 'cbsQuery';
var CBSInvalidDemensions = {
  diskId: 'DiskId',
  InstanceId: 'InstanceId',
  diskname: 'DiskName',
  unInstanceId: 'InstanceId'
};
var CBSInstanceAliasList = ['DiskId', 'DiskName'];
var templateQueryIdMap = {
  instance: 'DiskId'
}; // select类型需要注意是{},multi后缀是[]

var CBSFilterFields = {
  Limit: 20,
  Offset: 0,
  DiskIds: [],
  OrderField: [],
  Order: [],
  ReturnBindAutoSnapshotPolicy: false
};
var CBSFilterFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputNumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputNumber',
  min: 1,
  max: 100
}, {
  key: 'DiskIds',
  enDescriptor: 'DiskIds',
  cnDescriptor: '云硬盘ID',
  link: '',
  type: 'inputMulti'
}, {
  key: 'Order',
  enDescriptor: 'Order',
  cnDescriptor: '排列顺序',
  link: '',
  type: 'select',
  list: [{
    text: '升序排列',
    value: 'ASC'
  }, {
    text: '降序排列',
    value: 'DESC'
  }]
}, {
  key: 'OrderField',
  enDescriptor: 'OrderField',
  cnDescriptor: '排序的依据字段',
  link: '',
  type: 'select',
  list: [{
    text: '云盘的创建时间排序',
    value: 'CREATE_TIME'
  }, {
    text: '云盘的到期时间排序',
    value: 'DEADLINE'
  }]
}, {
  key: 'ReturnBindAutoSnapshotPolicy',
  enDescriptor: 'ReturnBindAutoSnapshotPolicy',
  cnDescriptor: '否需要返回云盘绑定的定期快照策略ID',
  link: '',
  type: 'switch'
}]; // 各产品实例列表detail配置

var queryEditorConfig = {
  instanceDocUrl: 'https://cloud.tencent.com/document/api/362/16315',
  namespace: namespace,
  fieldDescriptor: CBSFilterFieldsDescriptor
};
var CBS_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'DiskId',
  queries: CBSFilterFields
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  return Object(_common_utils__WEBPACK_IMPORTED_MODULE_1__["instanceQueryParamsBaseParse"])(queries, false);
}

function isValidMetric(metricObj) {
  if (metricObj === void 0) {
    metricObj = {};
  }

  var dimension = lodash__WEBPACK_IMPORTED_MODULE_0__["get"](metricObj, 'Dimensions[0].Dimensions'); // console.log('dimension', dimension, dimension.length === 1 && _.indexOf(dimension, 'diskId') !== -1);


  return dimension.length === 1 && lodash__WEBPACK_IMPORTED_MODULE_0__["indexOf"](dimension, 'diskId') !== -1;
}

/* harmony default export */ __webpack_exports__["default"] = (CBS_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/cdb/datasource.ts":
/*!*************************************************!*\
  !*** ./datasource/tc_monitor/cdb/datasource.ts ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/cdb/query_def.ts");
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};






var CDBDatasource =
/** @class */
function (_super) {
  __extends(CDBDatasource, _super);

  function CDBDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = 'QCE/CDB';
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_1__["CDBInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_1__["CDBInvalidDemensions"];
    _this.templateQueryIdMap = {
      instance: 'InstanceId'
    };
    _this.InstanceReqConfig = {
      service: 'cdb',
      action: 'DescribeDBInstances',
      responseField: 'Items'
    };
    return _this;
  }

  CDBDatasource.prototype.getMetrics = function (region) {
    if (region === void 0) {
      region = 'ap-guangzhou';
    }

    return __awaiter(this, void 0, void 0, function () {
      var rawSet;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , _super.prototype.getMetrics.call(this, region)];

          case 1:
            rawSet = _a.sent();
            return [2
            /*return*/
            , lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(rawSet.map(function (item) {
              if (Object(_query_def__WEBPACK_IMPORTED_MODULE_1__["isValidMetric"])(item)) {
                return Object(_query_def__WEBPACK_IMPORTED_MODULE_1__["modifyDimensons"])(item);
              }

              return null;
            }))];
        }
      });
    });
  };
  /**
   * 获取 可用区
   * @param region 地域信息
   */


  CDBDatasource.prototype.getZones = function (region) {
    var serviceInfo = Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["GetServiceAPIInfo"])(region, 'cvm');
    return this.doRequest({
      url: this.url + serviceInfo.path
    }, serviceInfo.service, {
      region: region,
      action: 'DescribeZones'
    }).then(function (response) {
      return lodash__WEBPACK_IMPORTED_MODULE_0___default.a.filter(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.map(response.ZoneSet || [], function (item) {
        return {
          text: item.ZoneName,
          value: item.ZoneId,
          ZoneState: item.ZoneState,
          Zone: item.Zone
        };
      }), function (item) {
        return item.ZoneState === 'AVAILABLE';
      });
    });
  }; // 仅对维度组合是InstanceId和InstanceType的指标，其他指标不支持


  CDBDatasource.prototype.getDefaultInsObj = function (ins) {
    var _a;

    return _a = {}, _a[_query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"].instance] = ins, _a.InstanceType = 1, _a;
  };

  return CDBDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_3__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (CDBDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/cdb/query.ts":
/*!********************************************!*\
  !*** ./datasource/tc_monitor/cdb/query.ts ***!
  \********************************************/
/*! exports provided: CDBQueryCtrl, cdbQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CDBQueryCtrl", function() { return CDBQueryCtrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cdbQuery", function() { return cdbQuery; });
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grafana/app/core/core_module */ "grafana/app/core/core_module");
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/cdb/query_def.ts");



var CDBQueryCtrl =
/** @class */
function () {
  CDBQueryCtrl.$inject = ["$scope", "$rootScope"];

  /** @ngInject */
  function CDBQueryCtrl($scope, $rootScope) {
    $scope.init = function () {
      $scope.CDBFieldsDescriptor = _query_def__WEBPACK_IMPORTED_MODULE_1__["CDBFieldsDescriptor"];
    };

    $scope.onChecked = function (srcField, dstField) {
      if ($scope.target.queries[srcField] === true) {
        $scope.target.queries[dstField] = false;
      }

      $scope.onChange();
    };

    $scope.getDropdown = function (field) {
      switch (field) {
        case 'ZoneIds':
          return $scope.getZones();

        default:
          return [];
      }
    };

    $scope.getZones = function () {
      if (!$scope.region) {
        return [];
      }

      return $scope.datasource.getZones('cdb', $scope.region);
    };

    $scope.init();
  }

  return CDBQueryCtrl;
}();


var template = "\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/236/15872\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in CDBFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n";
function cdbQuery() {
  return {
    template: template,
    controller: CDBQueryCtrl,
    restrict: 'E',
    scope: {
      target: '=',
      showDetail: '=',
      region: '=',
      datasource: '=',
      getDropdownOptions: '&',
      onChange: '&'
    }
  };
}
grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default.a.directive('cdbQuery', cdbQuery);

/***/ }),

/***/ "./datasource/tc_monitor/cdb/query_def.ts":
/*!************************************************!*\
  !*** ./datasource/tc_monitor/cdb/query_def.ts ***!
  \************************************************/
/*! exports provided: default, CDBFieldsDescriptor, CDBInstanceAliasList, templateQueryIdMap, CDBInvalidDemensions, isValidMetric, modifyDimensons, CDBGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CDBFieldsDescriptor", function() { return CDBFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CDBInstanceAliasList", function() { return CDBInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CDBInvalidDemensions", function() { return CDBInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isValidMetric", function() { return isValidMetric; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modifyDimensons", function() { return modifyDimensons; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CDBGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};


var InstanceTypes = [{
  text: '主实例',
  value: 1
}, {
  text: '备灾实例',
  value: 2
}, {
  text: '只读实例',
  value: 3
}];
var Status = [{
  text: '创建中',
  value: 0
}, {
  text: '运行中',
  value: 1
}, {
  text: '隔离中',
  value: 4
}, {
  text: '已隔离',
  value: 5
}];
var PayTypes = [{
  text: '包年包月',
  value: 0
}, {
  text: '小时计费',
  value: 1
}];
var TaskStatus = [{
  text: '没有任务',
  value: 0
}, {
  text: '升级中',
  value: 1
}, {
  text: '数据导入中',
  value: 2
}, {
  text: '开放Slave中',
  value: 3
}, {
  text: '外网访问开通中',
  value: 4
}, {
  text: '批量操作执行中',
  value: 5
}, {
  text: '回档中',
  value: 6
}, {
  text: '外网访问关闭中',
  value: 7
}, {
  text: '密码修改中',
  value: 8
}, {
  text: '实例名修改中',
  value: 9
}, {
  text: '重启中',
  value: 10
}, {
  text: '自建迁移中',
  value: 12
}, {
  text: '删除库表中',
  value: 13
}, {
  text: '灾备实例创建同步中',
  value: 14
}, {
  text: '升级待切换',
  value: 15
}, {
  text: '升级切换中',
  value: 16
}, {
  text: '升级切换完成',
  value: 17
}];
var EngineVersions = [{
  text: '5.1',
  value: '5.1'
}, {
  text: '5.5',
  value: '5.5'
}, {
  text: '5.6',
  value: '5.6'
}, {
  text: '5.7',
  value: '5.7'
}];
var OrderBy = [{
  text: 'InstanceId',
  value: 'InstanceId'
}, {
  text: 'InstanceName',
  value: 'InstanceName'
}, {
  text: 'CreateTime',
  value: 'CreateTime'
}, {
  text: 'DeadlineTime',
  value: 'DeadlineTime'
}];
var OrderDirection = [{
  text: 'ASC',
  value: 'ASC'
}, {
  text: 'DESC',
  value: 'DESC'
}];
var InitFlag = [{
  text: '未初始化',
  value: 0
}, {
  text: '初始化',
  value: 1
}];
var CdbErrors = [{
  text: '未锁定',
  value: 0
}, {
  text: '锁定',
  value: 1
}];
var CDBFields = {
  ProjectId: '',
  InstanceTypes: {},
  Vips: [],
  Status: {},
  Offset: 0,
  Limit: 20,
  SecurityGroupId: '',
  PayTypes: {},
  InstanceNames: [],
  TaskStatus: {},
  EngineVersions: {},
  VpcIds: [],
  ZoneIds: [],
  SubnetIds: [],
  CdbErrors: {},
  OrderBy: {},
  OrderDirection: {},
  InstanceIds: [],
  InitFlag: {}
};
var CDBFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputnumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputnumber',
  min: 1,
  max: 100
}, {
  key: 'InstanceNames',
  enDescriptor: 'Instance Name',
  cnDescriptor: '实例名称',
  link: '',
  type: 'inputmulti'
}, {
  key: 'InstanceIds',
  enDescriptor: 'Instance ID',
  cnDescriptor: '实例ID',
  link: '',
  type: 'inputmulti'
}, {
  key: 'ZoneIds',
  enDescriptor: 'Zone ID',
  cnDescriptor: '可用区的ID',
  link: '',
  type: 'dropdownmulti'
}, {
  key: 'InstanceTypes',
  enDescriptor: 'Instance Type',
  cnDescriptor: '实例类型',
  link: '',
  multiple: true,
  type: 'select',
  list: InstanceTypes
}, {
  key: 'EngineVersions',
  enDescriptor: 'Engine Version',
  cnDescriptor: '实例数据库引擎版本',
  link: '',
  multiple: true,
  type: 'select',
  list: EngineVersions
}, {
  key: 'TaskStatus',
  enDescriptor: 'Task Status',
  cnDescriptor: '实例任务',
  link: '',
  multiple: true,
  type: 'select',
  list: TaskStatus
}, {
  key: 'InitFlag',
  enDescriptor: 'Init Flag',
  cnDescriptor: '实例初始化状态',
  link: '',
  multiple: true,
  type: 'select',
  list: InitFlag
}, {
  key: 'PayTypes',
  enDescriptor: 'Pay Type',
  cnDescriptor: '付费类型',
  link: '',
  multiple: true,
  type: 'select',
  list: PayTypes
}, {
  key: 'CdbErrors',
  enDescriptor: 'CDB Errors',
  cnDescriptor: '实例锁定标记',
  link: '',
  multiple: true,
  type: 'select',
  list: CdbErrors
}, {
  key: 'Status',
  enDescriptor: 'Status',
  cnDescriptor: '实例状态',
  link: '',
  multiple: true,
  type: 'select',
  list: Status
}, {
  key: 'OrderBy',
  enDescriptor: 'OrderBy',
  cnDescriptor: '排序字段',
  link: '',
  type: 'select',
  list: OrderBy
}, {
  key: 'OrderDirection',
  enDescriptor: 'Order Direction',
  cnDescriptor: '排序方式',
  link: '',
  type: 'select',
  list: OrderDirection
}, {
  key: 'Vips',
  enDescriptor: 'Vip',
  cnDescriptor: '实例内网IP地址',
  link: '',
  type: 'inputmulti'
}, {
  key: 'VpcIds',
  enDescriptor: 'Vpc ID',
  cnDescriptor: '私有网络ID',
  link: 'https://cloud.tencent.com/document/api/215/15778',
  type: 'inputmulti'
}, {
  key: 'SubnetIds',
  enDescriptor: 'Subnet ID',
  cnDescriptor: '子网ID',
  link: 'https://cloud.tencent.com/document/api/215/15784',
  type: 'inputmulti'
}, {
  key: 'ProjectId',
  enDescriptor: 'Project ID',
  cnDescriptor: '项目ID',
  link: 'https://cloud.tencent.com/document/product/378/4400',
  type: 'input'
}, {
  key: 'SecurityGroupId',
  enDescriptor: 'Security Group ID',
  cnDescriptor: '安全组ID',
  link: 'https://cloud.tencent.com/document/api/236/15854',
  type: 'input'
}];
var CDB_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'InstanceId',
  queries: __assign({}, CDBFields)
};
var CDBInstanceAliasList = ['InstanceId', 'InstanceName', 'Vip'];

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  var params = {};

  if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(queries)) {
    params.Limit = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Limit', 20) || 20;
    params.Offset = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Offset', 0) || 0;
    queries = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.omit(queries, ['Offset', 'Limit']);

    lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(queries, function (item, key) {
      if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(item)) {
        item = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(item);

        if (item.length > 0) {
          params[key] = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(item);
        }
      } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(item)) {
        if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNumber(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', undefined)) || !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', undefined))) {
          params[key] = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value');
        }
      } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNumber(item) || !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(item)) {
        params[key] = item;
      }
    });
  }

  return params;
}

function isValidMetric(metricObj) {
  if (metricObj === void 0) {
    metricObj = {};
  }

  var dimension = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(metricObj, 'Dimensions[0].Dimensions');

  return dimension.length === 2 && (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.indexOf(dimension, 'instanceid') !== -1 && lodash__WEBPACK_IMPORTED_MODULE_0___default.a.indexOf(dimension, 'insttype') !== -1 || lodash__WEBPACK_IMPORTED_MODULE_0___default.a.indexOf(dimension, 'InstanceId') !== -1 && lodash__WEBPACK_IMPORTED_MODULE_0___default.a.indexOf(dimension, 'InstanceType') !== -1);
}

function modifyDimensons(metricItem) {
  var metricTmp = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.cloneDeep(metricItem);

  metricTmp.Dimensions.forEach(function (item) {
    item.Dimensions = item.Dimensions.map(function (i) {
      return CDBInvalidDemensions[i] || i;
    });
  });
  return metricTmp;
}

var CDBInvalidDemensions = {
  instanceid: 'InstanceId',
  insttype: 'InstanceType',
  region: 'Region'
};
var templateQueryIdMap = {
  instance: 'InstanceId'
};
/* harmony default export */ __webpack_exports__["default"] = (CDB_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/cdn/datasource.ts":
/*!*************************************************!*\
  !*** ./datasource/tc_monitor/cdn/datasource.ts ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/cdn/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};




var CDNDatasource =
/** @class */
function (_super) {
  __extends(CDNDatasource, _super);

  function CDNDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = 'QCE/CDN';
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["CDNInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["CDNInvalidDemensions"];
    _this.templateQueryIdMap = {
      instance: 'Domain'
    };
    _this.InstanceReqConfig = {
      service: 'cdn',
      action: 'DescribeDomains',
      responseField: 'Domains'
    };
    return _this;
  }

  CDNDatasource.prototype.metricFindQuery = function (query, regex) {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function (_a) {
        return [2
        /*return*/
        , _super.prototype.metricFindQuery.call(this, __assign(__assign({}, query), {
          region: 'ap-guangzhou'
        }), regex)];
      });
    });
  };

  return CDNDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (CDNDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/cdn/query.ts":
/*!********************************************!*\
  !*** ./datasource/tc_monitor/cdn/query.ts ***!
  \********************************************/
/*! exports provided: CDNQueryCtrl, cdnQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CDNQueryCtrl", function() { return CDNQueryCtrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cdnQuery", function() { return cdnQuery; });
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grafana/app/core/core_module */ "grafana/app/core/core_module");
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/cdn/query_def.ts");



var CDNQueryCtrl =
/** @class */
function () {
  CDNQueryCtrl.$inject = ["$scope", "$rootScope"];

  /** @ngInject */
  function CDNQueryCtrl($scope, $rootScope) {
    $scope.init = function () {
      $scope.CDNFilterFieldsDescriptor = _query_def__WEBPACK_IMPORTED_MODULE_1__["CDNFilterFieldsDescriptor"];
    }; // $scope.onChecked = (srcField, dstField) => {
    //   if ($scope.target.queries[srcField] === true) {
    //     $scope.target.queries[dstField] = false;
    //   }
    //   $scope.onChange();
    // };
    // $scope.getDropdown = (field) => {
    //   switch (field) {
    //     case 'zone':
    //       return $scope.getZones();
    //     default:
    //       return [];
    //   }
    // };
    // $scope.getZones = () => {
    //   if (!$scope.region) {
    //     return [];
    //   }
    //   return $scope.datasource.getZones('cvm', $scope.region);
    // };


    $scope.init();
  }

  return CDNQueryCtrl;
}();


var template = "\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/228/41118\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        \u504F\u79FB\u91CF, \u4F8B\u5982Offset=20&Limit=20 \u8FD4\u56DE\u7B2C 20 \u5230 40 \u9879\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        \u5355\u6B21\u8BF7\u6C42\u8FD4\u56DE\u7684\u6570\u91CF\uFF0C\u9ED8\u8BA4\u4E3A20\uFF0C\u6700\u5C0F\u503C\u4E3A1\uFF0C\u6700\u5927\u503C\u4E3A100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\" ng-repeat=\"field in CDNFilterFieldsDescriptor\">\n<label class=\"gf-form-label width-14\">\n  {{ field.key }}\n  <info-popover mode=\"right-normal\">\n    {{ field.cnDescriptor }}\n    <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n  </info-popover>\n</label>\n<multi-condition\n  ng-if=\"field.type === 'inputNumbermulti'\"\n  type=\"'inputNumber'\"\n  max-cond=\"5\"\n  value=\"target.queries.Filters[field.key]\"\n  maxNum=\"field.max\"\n  minNum=\"field.min\"\n  on-change=\"onChange()\"\n></multi-condition>\n<multi-condition\n  ng-if=\"field.type === 'inputmulti'\"\n  type=\"'input'\"\n  max-cond=\"5\"\n  value=\"target.queries.Filters[field.key]\"\n  on-change=\"onChange()\"\n></multi-condition>\n<custom-select-dropdown\n  ng-if=\"field.type === 'select'\"\n  value=\"target.queries.Filters[field.key]\"\n  options=\"field.list\"\n  multiple=\"true\"\n  on-change=\"onChange()\"\n></custom-select-dropdown>\n</div>\n\n</div>\n";
function cdnQuery() {
  return {
    template: template,
    controller: CDNQueryCtrl,
    restrict: 'E',
    scope: {
      target: '=',
      showDetail: '=',
      region: '=',
      datasource: '=',
      getDropdownOptions: '&',
      onChange: '&'
    }
  };
}
grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default.a.directive('cdnQuery', cdnQuery);

/***/ }),

/***/ "./datasource/tc_monitor/cdn/query_def.ts":
/*!************************************************!*\
  !*** ./datasource/tc_monitor/cdn/query_def.ts ***!
  \************************************************/
/*! exports provided: default, CDNFilterFieldsDescriptor, templateQueryIdMap, CDNInstanceAliasList, CDNInvalidDemensions, CDNGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CDNFilterFieldsDescriptor", function() { return CDNFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CDNInstanceAliasList", function() { return CDNInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CDNInvalidDemensions", function() { return CDNInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CDNGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};


var CDNFilterFields = {
  origin: [],
  domain: [],
  resourceId: [],
  status: {},
  serviceType: {},
  projectId: [],
  domainType: {},
  fullUrlCache: {},
  https: {},
  originPullProtocol: {},
  tagKey: []
};
var CDNFilterFieldsDescriptor = [{
  key: 'origin',
  enDescriptor: 'origin',
  cnDescriptor: '主源站',
  link: '',
  type: 'inputmulti'
}, {
  key: 'domain',
  enDescriptor: 'domain',
  cnDescriptor: '域名',
  link: '',
  type: 'inputmulti'
}, {
  key: 'resourceId',
  enDescriptor: 'resourceId',
  cnDescriptor: '域名id',
  link: '',
  type: 'inputmulti'
}, {
  key: 'status',
  enDescriptor: 'status',
  cnDescriptor: '域名状态',
  link: '',
  type: 'select',
  list: [{
    text: 'online',
    value: 'online'
  }, {
    text: 'offline',
    value: 'offline'
  }, {
    text: 'processing',
    value: 'processing'
  }]
}, {
  key: 'serviceType',
  enDescriptor: 'serviceType',
  cnDescriptor: '业务类型',
  link: '',
  type: 'select',
  list: [{
    text: 'web',
    value: 'web'
  }, {
    text: 'download',
    value: 'download'
  }, {
    text: 'media',
    value: 'media'
  }]
}, {
  key: 'projectId',
  enDescriptor: 'projectId',
  cnDescriptor: '项目ID',
  link: '',
  type: 'inputNumbermulti'
}, {
  key: 'domainType',
  enDescriptor: 'domainType',
  cnDescriptor: '主源站类型',
  link: '',
  type: 'select',
  list: [{
    text: '自有源',
    value: 'cname'
  }, {
    text: 'cos接入',
    value: 'cos'
  }]
}, {
  key: 'fullUrlCache',
  enDescriptor: 'fullUrlCache',
  cnDescriptor: '全路径缓存',
  link: '',
  type: 'select',
  list: [{
    text: '打开',
    value: 'on'
  }, {
    text: '关闭',
    value: 'off'
  }]
}, {
  key: 'https',
  enDescriptor: 'https',
  cnDescriptor: '是否配置https',
  link: '',
  type: 'select',
  list: [{
    text: 'on',
    value: 'on'
  }, {
    text: 'off',
    value: 'off'
  }, {
    text: 'processing',
    value: 'processing'
  }]
}, {
  key: 'originPullProtocol',
  enDescriptor: 'originPullProtocol',
  cnDescriptor: '回源协议类型',
  link: '',
  type: 'select',
  list: [{
    text: 'http',
    value: 'http'
  }, {
    text: 'follow',
    value: 'follow'
  }, {
    text: 'https',
    value: 'https'
  }]
}, {
  key: 'tagKey',
  enDescriptor: 'tagKey',
  cnDescriptor: '标签键',
  link: '',
  type: 'inputmulti'
}];
var CDN_STATE = {
  region: 'ap-guangzhou',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'Domain',
  queries: {
    Limit: 20,
    Offset: 0,
    Filters: __assign({}, CDNFilterFields)
  }
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  var params = {};

  if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(queries)) {
    params.Limit = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Limit', 20) || 20;
    params.Offset = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Offset', 0) || 0;
    var Filters_1 = [];

    lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(queries.Filters, function (item, key) {
      // console.log('item', item, queries);
      if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(item)) {
        item = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(item);

        if (item.length > 0) {
          Filters_1.push({
            Name: key,
            Value: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(item).slice(0, 5)
          });
        }
      } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(item)) {
        if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', []))) {
          Filters_1.push({
            Name: key,
            Value: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', []).slice(0, 5)
          });
        }
      }
    });

    if (Filters_1.length > 0) {
      params.Filters = Filters_1;
    }
  }

  return params;
}

var CDNInstanceAliasList = ['Domain', 'ProjectId'];
var CDNInvalidDemensions = {
  projectId: 'ProjectId',
  domain: 'Domain'
};
var templateQueryIdMap = {
  instance: 'Domain'
};
/* harmony default export */ __webpack_exports__["default"] = (CDN_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/cdn_province/datasource.ts":
/*!**********************************************************!*\
  !*** ./datasource/tc_monitor/cdn_province/datasource.ts ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/cdn_province/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};





var DCDatasource =
/** @class */
function (_super) {
  __extends(DCDatasource, _super);

  function DCDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = _query_def__WEBPACK_IMPORTED_MODULE_0__["namespace"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["CDNPROVINCEInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["CDNPROVINCEInvalidDemensions"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_0__["templateQueryIdMap"]; // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致

    _this.InstanceReqConfig = {
      service: 'cdn',
      action: 'DescribeDomains',
      responseField: 'Domains'
    };
    _this.extrasAlias = ['isp', 'district'];
    return _this;
  } // getFilterDropdown({ field }) {
  //   return super.getRegions();
  // }


  DCDatasource.prototype.metricFindQuery = function (query, regex) {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function (_a) {
        return [2
        /*return*/
        , _super.prototype.metricFindQuery.call(this, __assign(__assign({}, query), {
          region: 'ap-guangzhou'
        }), regex)];
      });
    });
  };

  DCDatasource.prototype.getConsumerList = function (params) {
    return __awaiter(this, void 0, void 0, function () {
      var region, field, serviceInfo, rs;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            region = params.region, field = params.field;
            serviceInfo = Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["GetServiceAPIInfo"])(region, 'cdn');
            return [4
            /*yield*/
            , this.doRequest({
              url: this.url + serviceInfo.path,
              data: {
                Name: field
              }
            }, serviceInfo.service, {
              action: 'DescribeMapInfo'
            })];

          case 1:
            rs = _a.sent();
            return [2
            /*return*/
            , (rs.MapInfoList || []).map(function (o) {
              return {
                text: o.Name,
                value: o.Name
              };
            })];
        }
      });
    });
  };

  DCDatasource.prototype.fetchMetricData = function (action, region, instance, query) {
    return __awaiter(this, void 0, void 0, function () {
      var field, rs;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            if (!(action === 'DescribeMapInfo')) return [3
            /*break*/
            , 2];
            field = query.name;
            return [4
            /*yield*/
            , this.getConsumerList({
              region: region,
              field: field
            })];

          case 1:
            rs = _a.sent();
            return [2
            /*return*/
            , rs];

          case 2:
            return [2
            /*return*/
            , []];
        }
      });
    });
  };

  return DCDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (DCDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/cdn_province/query.ts":
/*!*****************************************************!*\
  !*** ./datasource/tc_monitor/cdn_province/query.ts ***!
  \*****************************************************/
/*! exports provided: QueryCtrl, sQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QueryCtrl", function() { return QueryCtrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sQuery", function() { return sQuery; });
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grafana/app/core/core_module */ "grafana/app/core/core_module");
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/cdn_province/query_def.ts");
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};




var ExtraFields = [{
  label: 'Isp',
  field: 'isp'
}, {
  label: 'Province',
  field: 'district'
}];

var QueryCtrl =
/** @class */
function () {
  QueryCtrl.$inject = ["$scope", "$rootScope"];

  /** @ngInject */
  function QueryCtrl($scope, $rootScope) {
    var _this = this;

    $scope.init = function () {
      $scope.CDNPROVINCEFilterFieldsDescriptor = _query_def__WEBPACK_IMPORTED_MODULE_1__["CDNPROVINCEFilterFieldsDescriptor"];
      $scope.ExtraFields = ExtraFields;
      $scope.namespace = _query_def__WEBPACK_IMPORTED_MODULE_1__["namespace"];
    };

    $scope.getExtraDropdown = function (target, field) {
      return __awaiter(_this, void 0, void 0, function () {
        var service, region, rs;
        return __generator(this, function (_a) {
          switch (_a.label) {
            case 0:
              service = Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["GetServiceFromNamespace"])($scope.namespace);
              region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);
              return [4
              /*yield*/
              , $scope.datasource.getServiceFn(service, 'getConsumerList')({
                region: region,
                field: field
              })];

            case 1:
              rs = _a.sent();
              return [2
              /*return*/
              , rs];
          }
        });
      });
    };

    $scope.init();
  }

  return QueryCtrl;
}();


var template = "\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Domains are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/228/41118\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\" ng-repeat=\"field in CDNPROVINCEFilterFieldsDescriptor\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <input\n          ng-if=\"field.type === 'inputNumber'\"\n          style=\"margin-right:2px\"\n          type=\"number\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n          ng-min=\"field.min\"\n          ng-max=\"field.max\"\n        />\n        <input\n          ng-if=\"field.type === 'input'\"\n          style=\"margin-right:2px\"\n          type=\"text\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n        />    \n        <multi-condition\n          ng-if=\"field.type === 'inputNumberMulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputMulti'\"\n          type=\"'input'\"\n          value=\"target.queries[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries[field.key]\"\n          options=\"field.list\"\n          multiple=\"field.multiple || false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n\n<!-- \u8D77\u59CB\u533A\u57DF \u76EE\u7684\u533A\u57DF\u7B49 -->\n  <div>\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in ExtraFields\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(target, extra.field)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n";
function sQuery() {
  return {
    template: template,
    controller: QueryCtrl,
    restrict: 'E',
    scope: {
      target: '=',
      showDetail: '=',
      region: '=',
      datasource: '=',
      getDropdownOptions: '&',
      onChange: '&',
      onRefresh: '&',
      dims: '='
    }
  };
}
grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default.a.directive(_query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorName"], sQuery);

/***/ }),

/***/ "./datasource/tc_monitor/cdn_province/query_def.ts":
/*!*********************************************************!*\
  !*** ./datasource/tc_monitor/cdn_province/query_def.ts ***!
  \*********************************************************/
/*! exports provided: default, CDNPROVINCEFilterFieldsDescriptor, templateQueryIdMap, CDNPROVINCEInstanceAliasList, CDNPROVINCEInvalidDemensions, namespace, queryEditorName, CDNPROVINCEGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CDNPROVINCEFilterFieldsDescriptor", function() { return CDNPROVINCEFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CDNPROVINCEInstanceAliasList", function() { return CDNPROVINCEInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CDNPROVINCEInvalidDemensions", function() { return CDNPROVINCEInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorName", function() { return queryEditorName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CDNPROVINCEGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");

var namespace = 'QCE/CDN_LOG_DATA'; // 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称

var queryEditorName = 'cdnProvinceQuery';
var CDNPROVINCEInvalidDemensions = {
  domain: 'Domain',
  // isp: 'Isp',
  projectid: 'ProjectId',
  province: 'district',
  appid: 'AppId'
}; // 需和文件名对应

var CDNPROVINCEInstanceAliasList = ['Domain', 'ProjectId'];
var templateQueryIdMap = {
  instance: 'Domain'
}; // select类型需要注意是{},multi后缀是[],dropdown是''

var CDNPROVINCEFilterFields = {
  Limit: 20,
  Offset: 0,
  origin: [],
  domain: [],
  resourceId: [],
  status: {},
  serviceType: {},
  projectId: [],
  domainType: {},
  fullUrlCache: {},
  https: {},
  originPullProtocol: {},
  tagKey: []
};
var CDNPROVINCEFilterFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputNumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputNumber',
  min: 1,
  max: 100
}, {
  key: 'origin',
  enDescriptor: 'origin',
  cnDescriptor: '主源站',
  link: '',
  type: 'inputMulti'
}, {
  key: 'domain',
  enDescriptor: 'domain',
  cnDescriptor: '域名',
  link: '',
  type: 'inputMulti'
}, {
  key: 'resourceId',
  enDescriptor: 'resourceId',
  cnDescriptor: '域名id',
  link: '',
  type: 'inputMulti'
}, {
  key: 'status',
  enDescriptor: 'status',
  cnDescriptor: '域名状态',
  link: '',
  type: 'select',
  list: [{
    text: 'online',
    value: 'online'
  }, {
    text: 'offline',
    value: 'offline'
  }, {
    text: 'processing',
    value: 'processing'
  }]
}, {
  key: 'serviceType',
  enDescriptor: 'serviceType',
  cnDescriptor: '业务类型',
  link: '',
  type: 'select',
  list: [{
    text: 'web',
    value: 'web'
  }, {
    text: 'download',
    value: 'download'
  }, {
    text: 'media',
    value: 'media'
  }]
}, {
  key: 'projectId',
  enDescriptor: 'projectId',
  cnDescriptor: '项目ID',
  link: '',
  type: 'inputNumberMulti'
}, {
  key: 'domainType',
  enDescriptor: 'domainType',
  cnDescriptor: '主源站类型',
  link: '',
  type: 'select',
  list: [{
    text: '自有源',
    value: 'cname'
  }, {
    text: 'cos接入',
    value: 'cos'
  }]
}, {
  key: 'fullUrlCache',
  enDescriptor: 'fullUrlCache',
  cnDescriptor: '全路径缓存',
  link: '',
  type: 'select',
  list: [{
    text: '打开',
    value: 'on'
  }, {
    text: '关闭',
    value: 'off'
  }]
}, {
  key: 'https',
  enDescriptor: 'https',
  cnDescriptor: '是否配置https',
  link: '',
  type: 'select',
  list: [{
    text: 'on',
    value: 'on'
  }, {
    text: 'off',
    value: 'off'
  }, {
    text: 'processing',
    value: 'processing'
  }]
}, {
  key: 'originPullProtocol',
  enDescriptor: 'originPullProtocol',
  cnDescriptor: '回源协议类型',
  link: '',
  type: 'select',
  list: [{
    text: 'http',
    value: 'http'
  }, {
    text: 'follow',
    value: 'follow'
  }, {
    text: 'https',
    value: 'https'
  }]
}, {
  key: 'tagKey',
  enDescriptor: 'tagKey',
  cnDescriptor: '标签键',
  link: '',
  type: 'inputMulti'
}];
var CDNPROVINCE_STATE = {
  region: 'ap-guangzhou',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'Domain',
  // Isp Province分别在两个接口，单独保存在state
  isp: '',
  district: '',
  queries: CDNPROVINCEFilterFields
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  return Object(_common_utils__WEBPACK_IMPORTED_MODULE_0__["instanceQueryParamsBaseParse"])(queries, true);
} // const regionSupported = [
//   { text: '华北地区(北京)', value: 'ap-beijing' },
//   { text: '西南地区(成都)', value: 'ap-chengdu' },
//   { text: '西南地区(重庆)', value: 'ap-chongqing' },
//   { text: '华南地区(广州)', value: 'ap-guangzhou' },
//   { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },
//   { text: '亚太南部(孟买)', value: 'ap-mumbai' },
//   { text: '华东地区(南京)', value: 'ap-nanjing' },
//   { text: '华东地区(上海)', value: 'ap-shanghai' },
//   { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },
//   { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },
//   { text: '亚太东南(新加坡)', value: 'ap-singapore' },
//   { text: '亚太东北(东京)', value: 'ap-tokyo' },
//   { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },
//   { text: '美国东部(弗吉尼亚)', value: 'na-ashburn' },
//   { text: '美国西部(硅谷)', value: 'na-siliconvalley' },
//   { text: '北美地区(多伦多)', value: 'na-toronto' },
// ];


/* harmony default export */ __webpack_exports__["default"] = (CDNPROVINCE_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/ceip_summary/datasource.ts":
/*!**********************************************************!*\
  !*** ./datasource/tc_monitor/ceip_summary/datasource.ts ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/ceip_summary/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();




var DCDatasource =
/** @class */
function (_super) {
  __extends(DCDatasource, _super);

  function DCDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = _query_def__WEBPACK_IMPORTED_MODULE_0__["namespace"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["CEIPSUMMARYInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["CEIPInvalidDemensions"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_0__["templateQueryIdMap"]; // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致

    _this.InstanceReqConfig = {
      service: 'vpc',
      action: 'DescribeAddresses',
      responseField: 'AddressSet',
      interceptor: {
        request: function request(params) {
          var Filters = params.Filters;

          if (!Filters) {
            params.Filters = [];
          }

          params.Filters.push({
            Name: 'address-type',
            Values: ['AnycastEIP']
          });
          return params;
        } // 设置一些请求参数的 默认值
        // response: (data: unknown[]) =>[
        //   {
        //     AddressId: 'AddressId',
        //     AddressIp: '111.22.3.4'
        //   },
        // ],

      }
    };
    _this.MetricReqConfig = {
      resultFilter: _query_def__WEBPACK_IMPORTED_MODULE_0__["modifyDimensons"]
    };
    return _this;
  }

  return DCDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (DCDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/ceip_summary/query.ts":
/*!*****************************************************!*\
  !*** ./datasource/tc_monitor/ceip_summary/query.ts ***!
  \*****************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _base_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_base/query */ "./datasource/tc_monitor/_base/query.ts");
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/ceip_summary/query_def.ts");


Object(_base_query__WEBPACK_IMPORTED_MODULE_0__["default"])(_query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorName"], _query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorConfig"]);

/***/ }),

/***/ "./datasource/tc_monitor/ceip_summary/query_def.ts":
/*!*********************************************************!*\
  !*** ./datasource/tc_monitor/ceip_summary/query_def.ts ***!
  \*********************************************************/
/*! exports provided: default, CEIPFilterFieldsDescriptor, templateQueryIdMap, CEIPSUMMARYInstanceAliasList, CEIPInvalidDemensions, namespace, queryEditorName, modifyDimensons, queryEditorConfig, CEIPSUMMARYGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CEIPFilterFieldsDescriptor", function() { return CEIPFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CEIPSUMMARYInstanceAliasList", function() { return CEIPSUMMARYInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CEIPInvalidDemensions", function() { return CEIPInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorName", function() { return queryEditorName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modifyDimensons", function() { return modifyDimensons; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorConfig", function() { return queryEditorConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CEIPSUMMARYGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");


var namespace = 'QCE/CEIP_SUMMARY'; // 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称

var queryEditorName = 'ceipSummaryQuery';
var CEIPInvalidDemensions = {
  vip: 'AddressIp',
  eip: 'AddressIp'
}; // 要和文件名方式一致，ceip_summary=>CEIPSUMMARY

var CEIPSUMMARYInstanceAliasList = ['AddressId', 'AddressName', 'AddressIp'];
var templateQueryIdMap = {
  instance: 'AddressId'
}; // select类型需要注意是{},multi后缀是[]

var CEIPFilterFields = {
  Limit: 20,
  Offset: 0,
  'address-id': [],
  'address-name': [],
  'address-ip': [],
  'address-status': {},
  'is-arrears': {},
  'address-isp': {},
  'instance-id': [],
  'private-ip-address': [],
  'network-interface-id': []
};
var CEIPFilterFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputNumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputNumber',
  min: 1,
  max: 100
}, {
  key: 'address-id',
  enDescriptor: 'address-id',
  cnDescriptor: ' EIP 的唯一 ID',
  link: '',
  type: 'inputMulti'
}, {
  key: 'address-name',
  enDescriptor: 'address-name',
  cnDescriptor: 'EIP 名称',
  link: '',
  type: 'inputMulti'
}, {
  key: 'address-ip',
  enDescriptor: 'address-ip',
  cnDescriptor: 'EIP 的 IP 地址',
  link: '',
  type: 'inputMulti'
}, {
  key: 'address-status',
  enDescriptor: 'address-status',
  cnDescriptor: 'EIP 的状态',
  link: '',
  type: 'select',
  multiple: true,
  list: [{
    text: 'CREATING',
    value: 'CREATING'
  }, {
    text: 'BINDING',
    value: 'BINDING'
  }, {
    text: 'BIND',
    value: 'BIND'
  }, {
    text: 'UNBINDING',
    value: 'UNBINDING'
  }, {
    text: 'UNBIND',
    value: 'UNBIND'
  }, {
    text: 'OFFLINING',
    value: 'OFFLINING'
  }, {
    text: 'BIND_ENI',
    value: 'BIND_ENI'
  }]
}, {
  key: 'instance-id',
  enDescriptor: 'instance-id',
  cnDescriptor: 'EIP 绑定的实例 ID',
  link: '',
  type: 'inputMulti'
}, {
  key: 'private-ip-address',
  enDescriptor: 'private-ip-address',
  cnDescriptor: 'EIP 绑定的内网 IP ',
  link: '',
  type: 'inputMulti'
}, {
  key: 'network-interface-id',
  enDescriptor: 'network-interface-id',
  cnDescriptor: ' EIP 绑定的弹性网卡 ID',
  link: '',
  type: 'inputMulti'
}, {
  key: 'is-arrears',
  enDescriptor: 'is-arrears',
  cnDescriptor: 'EIP 是否欠费',
  link: '',
  type: 'select',
  multiple: true,
  list: [{
    text: '欠费状态',
    value: 'TRUE'
  }, {
    text: '费用状态正常',
    value: 'FALSE'
  }]
}, {
  key: 'address-isp',
  enDescriptor: 'address-isp',
  cnDescriptor: '运营商类型',
  link: '',
  type: 'select',
  multiple: true,
  list: [{
    text: 'BGP',
    value: 'BGP'
  }, {
    text: 'CMCC',
    value: 'CMCC'
  }, {
    text: 'CUCC',
    value: 'CUCC'
  }, {
    text: 'CTCC',
    value: 'CTCC'
  }]
}]; // 各产品实例列表detail配置

var queryEditorConfig = {
  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/16702',
  namespace: namespace,
  fieldDescriptor: CEIPFilterFieldsDescriptor
};
var CEIP_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'AddressId',
  queries: CEIPFilterFields
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  return Object(_common_utils__WEBPACK_IMPORTED_MODULE_1__["instanceQueryParamsBaseParse"])(queries, true);
}

function modifyDimensons(metricItem) {
  var metricTmp = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.cloneDeep(metricItem);

  metricTmp.Dimensions.forEach(function (item) {
    item.Dimensions = ['eip'];
  });
  return metricTmp;
}

/* harmony default export */ __webpack_exports__["default"] = (CEIP_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/ces/datasource.ts":
/*!*************************************************!*\
  !*** ./datasource/tc_monitor/ces/datasource.ts ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/ces/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();




var DCDatasource =
/** @class */
function (_super) {
  __extends(DCDatasource, _super);

  function DCDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = _query_def__WEBPACK_IMPORTED_MODULE_0__["namespace"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["CESInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["CESInvalidDemensions"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_0__["templateQueryIdMap"]; // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致

    _this.InstanceReqConfig = {
      service: 'es',
      action: 'DescribeInstances',
      responseField: 'InstanceList'
    };
    return _this;
  }

  return DCDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (DCDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/ces/query.ts":
/*!********************************************!*\
  !*** ./datasource/tc_monitor/ces/query.ts ***!
  \********************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _base_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_base/query */ "./datasource/tc_monitor/_base/query.ts");
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/ces/query_def.ts");


Object(_base_query__WEBPACK_IMPORTED_MODULE_0__["default"])(_query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorName"], _query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorConfig"]);

/***/ }),

/***/ "./datasource/tc_monitor/ces/query_def.ts":
/*!************************************************!*\
  !*** ./datasource/tc_monitor/ces/query_def.ts ***!
  \************************************************/
/*! exports provided: default, CESFilterFieldsDescriptor, templateQueryIdMap, CESInstanceAliasList, CESInvalidDemensions, namespace, queryEditorName, queryEditorConfig, CESGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CESFilterFieldsDescriptor", function() { return CESFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CESInstanceAliasList", function() { return CESInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CESInvalidDemensions", function() { return CESInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorName", function() { return queryEditorName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorConfig", function() { return queryEditorConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CESGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");

var namespace = 'QCE/CES'; // 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称

var queryEditorName = 'cesQuery';
var CESInvalidDemensions = {
  uInstanceId: 'InstanceId'
};
var CESInstanceAliasList = ['InstanceId', 'InstanceName'];
var templateQueryIdMap = {
  instance: 'InstanceId'
}; // select类型需要注意是{},multi后缀是[],dropdown是类型

var CESFilterFields = {
  Limit: 20,
  Offset: 0,
  InstanceIds: [],
  InstanceNames: [],
  OrderByKey: {},
  OrderByType: {},
  IpList: []
};
var CESFilterFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputNumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputNumber',
  min: 1,
  max: 100
}, {
  key: 'InstanceIds',
  enDescriptor: 'InstanceIds',
  cnDescriptor: '集群实例ID列表',
  link: '',
  type: 'inputMulti'
}, {
  key: 'InstanceNames',
  enDescriptor: 'InstanceNames',
  cnDescriptor: '集群实例名称列表',
  link: '',
  type: 'inputMulti'
}, {
  key: 'OrderByKey',
  enDescriptor: 'OrderByKey',
  cnDescriptor: '排序字段',
  link: '',
  type: 'select',
  list: [{
    text: '实例ID',
    value: 1
  }, {
    text: '实例名称',
    value: 2
  }, {
    text: '可用区',
    value: 3
  }, {
    text: '创建时间',
    value: 4
  }]
}, {
  key: 'OrderByType',
  enDescriptor: 'OrderByType',
  cnDescriptor: '排序方式',
  link: '',
  type: 'select',
  list: [{
    text: '升序',
    value: 0
  }, {
    text: '降序',
    value: 1
  }]
}, {
  key: 'IpList',
  enDescriptor: 'IpList',
  cnDescriptor: '私有网络vip列表',
  link: '',
  type: 'inputMulti'
}]; // 各产品实例列表detail配置

var queryEditorConfig = {
  instanceDocUrl: 'https://cloud.tencent.com/document/api/845/30631',
  namespace: namespace,
  fieldDescriptor: CESFilterFieldsDescriptor
};
var CES_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'InstanceId',
  queries: CESFilterFields
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  return Object(_common_utils__WEBPACK_IMPORTED_MODULE_0__["instanceQueryParamsBaseParse"])(queries, false);
}

/* harmony default export */ __webpack_exports__["default"] = (CES_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/cfs/datasource.ts":
/*!*************************************************!*\
  !*** ./datasource/tc_monitor/cfs/datasource.ts ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/cfs/query_def.ts");
/* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../locale */ "./locale/index.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();





var CFSDatasource =
/** @class */
function (_super) {
  __extends(CFSDatasource, _super);

  function CFSDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.templateQueryIdMap = {
      instance: 'FileSystemId'
    };
    _this.extrasAlias = ['version'];
    _this.Namespace = 'QCE/CFS';
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_1__["CFSInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_1__["CFSInvalidDemensions"];
    _this.InstanceReqConfig = {
      service: 'cfs',
      action: 'DescribeCfsFileSystems',
      responseField: 'FileSystems'
    };
    return _this;
  }

  CFSDatasource.prototype.getRegions = function () {
    return Promise.resolve(_query_def__WEBPACK_IMPORTED_MODULE_1__["regionSupported"].map(function (_a) {
      var value = _a.value;
      return {
        value: value,
        text: Object(_locale__WEBPACK_IMPORTED_MODULE_2__["t"])(value)
      };
    }));
  };

  return CFSDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_0__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (CFSDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/cfs/query.ts":
/*!********************************************!*\
  !*** ./datasource/tc_monitor/cfs/query.ts ***!
  \********************************************/
/*! exports provided: SCFQueryCtrl, scfQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SCFQueryCtrl", function() { return SCFQueryCtrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scfQuery", function() { return scfQuery; });
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grafana/app/core/core_module */ "grafana/app/core/core_module");
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/cfs/query_def.ts");
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};




var SCFQueryCtrl =
/** @class */
function () {
  SCFQueryCtrl.$inject = ["$scope", "$rootScope"];

  /** @ngInject */
  function SCFQueryCtrl($scope, $rootScope) {
    var _this = this;

    $scope.init = function () {
      $scope.CFSQueryDescriptor = _query_def__WEBPACK_IMPORTED_MODULE_1__["CFSQueryDescriptor"];
    };

    $scope.getVersions = function (target) {
      return __awaiter(_this, void 0, void 0, function () {
        var instance, region, fetcher;
        return __generator(this, function (_a) {
          instance = target.instance, region = target.region;
          fetcher = $scope.datasource.getServiceFn('scf', 'getVersions');
          if (!instance || !region) return [2
          /*return*/
          , []];
          return [2
          /*return*/
          , fetcher(region, {
            FunctionName: JSON.parse(instance).FunctionName
          }).then(function (res) {
            // console.log(res, 'res');
            return res;
          })];
        });
      });
    }; // $scope.onChecked = (srcField, dstField) => {
    //   if ($scope.target.queries[srcField] === true) {
    //     $scope.target.queries[dstField] = false;
    //   }
    //   $scope.onChange();
    // };
    // $scope.getDropdown = (field) => {
    //   switch (field) {
    //     case 'zone':
    //       return $scope.getZones();
    //     default:
    //       return [];
    //   }
    // };
    // $scope.getZones = () => {
    //   if (!$scope.region) {
    //     return [];
    //   }
    //   return $scope.datasource.getZones('cvm', $scope.region);
    // };


    $scope.init();
  }

  return SCFQueryCtrl;
}();


var template = "\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n  FileSystems are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/582/38170\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in CFSQueryDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n  </div>\n";
function scfQuery() {
  return {
    template: template,
    controller: SCFQueryCtrl,
    restrict: 'E',
    scope: {
      target: '=',
      showDetail: '=',
      region: '=',
      datasource: '=',
      getDropdownOptions: '&',
      onChange: '&'
    }
  };
}
grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default.a.directive('cfsQuery', scfQuery);

/***/ }),

/***/ "./datasource/tc_monitor/cfs/query_def.ts":
/*!************************************************!*\
  !*** ./datasource/tc_monitor/cfs/query_def.ts ***!
  \************************************************/
/*! exports provided: CFSQueryDescriptor, default, CFSInstanceAliasList, CFSInvalidDemensions, templateQueryIdMap, regionSupported, CFSGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CFSQueryDescriptor", function() { return CFSQueryDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CFSInstanceAliasList", function() { return CFSInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CFSInvalidDemensions", function() { return CFSInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "regionSupported", function() { return regionSupported; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CFSGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);

var CFSQueryDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputnumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputnumber',
  min: 1,
  max: 100
}, {
  key: 'FileSystemId',
  enDescriptor: 'File System Id',
  cnDescriptor: '文件系统 ID',
  link: '',
  type: 'input'
}, {
  key: 'VpcId',
  enDescriptor: 'VpcId',
  cnDescriptor: '私有网络（VPC） ID',
  link: '',
  type: 'input'
}, {
  key: 'SubnetId',
  enDescriptor: 'SubnetId',
  cnDescriptor: '子网 ID',
  link: '',
  type: 'input'
}];
var CFS_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'FileSystemId',
  version: '',
  queries: {
    Offset: 0,
    Limit: 20,
    FileSystemId: '',
    VpcId: '',
    SubnetId: ''
  }
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  var params = {};

  if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(queries)) {
    params.Limit = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Limit', 20) || 20;
    params.Offset = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Offset', 0) || 0;
    queries = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.omit(queries, ['Offset', 'Limit']);

    lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(queries, function (item, key) {
      if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(item)) {
        item = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(item);

        if (item.length > 0) {
          params[key] = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(item);
        }
      } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(item)) {
        if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNumber(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', undefined)) || !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', undefined))) {
          params[key] = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value');
        }
      } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNumber(item) || !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(item)) {
        params[key] = item;
      }
    });
  }

  return params;
}

var CFSInstanceAliasList = ['FileSystemId', 'FsName']; // 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key

var CFSInvalidDemensions = {// functionName: 'FunctionName',
  // namespace: 'Namespace'
};
var regionSupported = [{
  value: 'ap-beijing'
}, {
  value: 'ap-chengdu'
}, {
  value: 'ap-chongqing'
}, {
  value: 'ap-guangzhou'
}, {
  value: 'ap-hongkong'
}, {
  value: 'ap-mumbai'
}, {
  value: 'ap-nanjing'
}, {
  value: 'ap-seoul'
}, {
  value: 'ap-shanghai'
}, {
  value: 'ap-shanghai-fsi'
}, {
  value: 'ap-shenzhen-fsi'
}, {
  value: 'ap-singapore'
}, {
  value: 'ap-tokyo'
}, {
  value: 'eu-frankfurt'
}, {
  value: 'na-siliconvalley'
}, {
  value: 'na-toronto'
}];
var templateQueryIdMap = {
  instance: 'InstanceId'
};
/* harmony default export */ __webpack_exports__["default"] = (CFS_STATE);
 // monitor监控数据默认支持的维度
// export const SCFDefaultDimensionList = ['functionName', 'namespace', 'version'];

/***/ }),

/***/ "./datasource/tc_monitor/ckafka/datasource.ts":
/*!****************************************************!*\
  !*** ./datasource/tc_monitor/ckafka/datasource.ts ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/ckafka/query_def.ts");
/* harmony import */ var _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/datasourceStorage */ "./datasource/common/datasourceStorage.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};








var CKFKADatasource =
/** @class */
function (_super) {
  __extends(CKFKADatasource, _super);

  function CKFKADatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = 'QCE/CKAFKA';
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_4__["CKAFKAInstanceAliasList"];
    _this.TopicAliasList = _query_def__WEBPACK_IMPORTED_MODULE_4__["CKAFKATopicAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_4__["CKAFKAInvalidDemensions"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_4__["templateQueryIdMap"];
    _this.InstanceReqConfig = {
      service: 'ckafka',
      action: 'DescribeInstances',
      responseField: 'InstanceList'
    };
    _this.extraMetricDims = ['topicId']; // extrasAlias = ['topicId', 'consumerGroup', 'partition'];

    _this.keyInStorage = _query_def__WEBPACK_IMPORTED_MODULE_4__["keyInStorage"];
    _this.queryMonitorExtraConfg = _query_def__WEBPACK_IMPORTED_MODULE_4__["queryMonitorExtraConfg"];
    _this.consumerGroupCache = {};
    return _this;
  }

  CKFKADatasource.prototype.getConsumerGroups = function (region, params) {
    var _a, _b, _c;

    return __awaiter(this, void 0, void 0, function () {
      var serviceInfo, InstanceId, _d, groupname, _e, topicid, consumerGoup, topicList, GroupList, TopicList, PartitionList, GroupDetailList, SubscribedInfos, partitions;

      var _this = this;

      return __generator(this, function (_f) {
        switch (_f.label) {
          case 0:
            serviceInfo = Object(_common_constants__WEBPACK_IMPORTED_MODULE_1__["GetServiceAPIInfo"])(region, 'ckafka');
            InstanceId = params.InstanceId, _d = params.groupname, groupname = _d === void 0 ? '' : _d, _e = params.topicid, topicid = _e === void 0 ? '' : _e;
            groupname = this.getVariable(groupname); // 将模板转换为真实值

            topicid = this.getVariable(topicid); // 将模板转换为真实值

            try {
              groupname = JSON.parse(groupname)[_query_def__WEBPACK_IMPORTED_MODULE_4__["templateQueryIdMap"].groupName];
              topicid = JSON.parse(topicid)[_query_def__WEBPACK_IMPORTED_MODULE_4__["templateQueryIdMap"].topicId];
            } catch (e) {}

            consumerGoup = this.consumerGroupCache[InstanceId];
            if (!!consumerGoup) return [3
            /*break*/
            , 3];
            return [4
            /*yield*/
            , Object(_common_utils__WEBPACK_IMPORTED_MODULE_2__["fetchAllFactory"])(function (data) {
              return _this.doRequest({
                url: _this.url + serviceInfo.path,
                data: data
              }, serviceInfo.service, {
                region: region,
                action: 'DescribeConsumerGroup'
              });
            }, lodash__WEBPACK_IMPORTED_MODULE_0___default.a.pick(params, 'InstanceId'), ['GroupListForMonitor', 'TopicListForMonitor', 'PartitionListForMonitor', 'GroupList'])];

          case 1:
            // 从分页数据，获取全量数据
            consumerGoup = _f.sent();
            return [4
            /*yield*/
            , Object(_common_utils__WEBPACK_IMPORTED_MODULE_2__["fetchAllFactory"])(function (data) {
              return _this.doRequest({
                url: _this.url + serviceInfo.path,
                data: data
              }, serviceInfo.service, {
                region: region,
                action: 'DescribeTopic'
              });
            }, lodash__WEBPACK_IMPORTED_MODULE_0___default.a.pick(params, 'InstanceId'), ['TopicList'])];

          case 2:
            topicList = _f.sent();
            consumerGoup[1] = Object(lodash__WEBPACK_IMPORTED_MODULE_0__["flattenDeep"])(topicList);
            console.log({
              consumerGoup: consumerGoup,
              topicList: topicList
            });
            this.consumerGroupCache[InstanceId] = consumerGoup;
            _f.label = 3;

          case 3:
            GroupList = consumerGoup[0], TopicList = consumerGoup[1], PartitionList = consumerGoup[2], GroupDetailList = consumerGoup[3]; // 无重复数组

            TopicList = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniqBy(TopicList, function (item) {
              return item.TopicId;
            });
            GroupList = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniqBy(GroupList, function (item) {
              return item.GroupName;
            });
            PartitionList = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniqBy(PartitionList, function (item) {
              return item.PartitionId;
            });
            GroupDetailList = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniqBy(GroupDetailList, function (item) {
              return item.ConsumerGroupName;
            });
            SubscribedInfos = ((_a = GroupDetailList.find(function (d) {
              return d.ConsumerGroupName === groupname;
            })) === null || _a === void 0 ? void 0 : _a.SubscribedInfo) || [];
            partitions = ((_c = (_b = SubscribedInfos.find(function (sub) {
              return sub.TopicId === topicid;
            })) === null || _b === void 0 ? void 0 : _b.Partition) === null || _c === void 0 ? void 0 : _c.map(function (p) {
              var _a;

              return _a = {}, _a[_query_def__WEBPACK_IMPORTED_MODULE_4__["templateQueryIdMap"].partition] = p, _a;
            })) || [];
            return [2
            /*return*/
            , {
              GroupList: GroupList,
              TopicList: SubscribedInfos.length > 0 ? SubscribedInfos.map(function (_a) {
                var TopicId = _a.TopicId,
                    TopicName = _a.TopicName;
                return {
                  TopicId: TopicId,
                  TopicName: TopicName
                };
              }) : TopicList,
              PartitionList: partitions.length > 0 ? partitions : PartitionList
            }];
        }
      });
    });
  };

  CKFKADatasource.prototype.formatTopicVarDisplay = function (topic, displayTpl, topicAlias) {
    var _this = this;

    if (displayTpl) {
      return displayTpl.replace(/\$\{(\w+)\}/g, function (a, b) {
        if (!b || !_this.TopicAliasList.includes(b)) {
          return '';
        }

        return _this.getAliasValue(topic, b);
      });
    }

    return this.getAliasValue(topic, topicAlias);
  }; // 查询指标下的数据


  CKFKADatasource.prototype.fetchMetricData = function (action, region, instance, query) {
    return __awaiter(this, void 0, void 0, function () {
      var topicalias, groupname, topicid, result, display, TopicList, GroupList, PartitionList, rs;

      var _this = this;

      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            topicalias = query.topicalias, groupname = query.groupname, topicid = query.topicid;
            return [4
            /*yield*/
            , this.getConsumerGroups(region, {
              InstanceId: instance.InstanceId,
              groupname: groupname,
              topicid: topicid
            })];

          case 1:
            result = _a.sent();
            display = query.display;
            TopicList = result.TopicList, GroupList = result.GroupList, PartitionList = result.PartitionList;
            topicalias = this.TopicAliasList.includes(topicalias) ? topicalias : this.templateQueryIdMap.topicId;
            rs = {
              GroupList: GroupList.map(function (group) {
                group._InstanceAliasValue = group.GroupName;
                return {
                  text: group.GroupName,
                  value: group[_query_def__WEBPACK_IMPORTED_MODULE_4__["templateQueryIdMap"].groupName]
                };
              }),
              TopicList: TopicList.map(function (topic) {
                var topicAlias = _this.formatTopicVarDisplay(topic, display, topicalias);

                topic._InstanceAliasValue = topicAlias || topic[_query_def__WEBPACK_IMPORTED_MODULE_4__["templateQueryIdMap"].topicId];
                return {
                  text: topicAlias || topic[_query_def__WEBPACK_IMPORTED_MODULE_4__["templateQueryIdMap"].topicId],
                  value: topic[_query_def__WEBPACK_IMPORTED_MODULE_4__["templateQueryIdMap"].topicId],
                  TopicName: topic.TopicName
                };
              }),
              PartitionList: PartitionList.map(function (par) {
                par._InstanceAliasValue = par[_query_def__WEBPACK_IMPORTED_MODULE_4__["templateQueryIdMap"].partition];
                return {
                  text: par[_query_def__WEBPACK_IMPORTED_MODULE_4__["templateQueryIdMap"].partition],
                  value: par[_query_def__WEBPACK_IMPORTED_MODULE_4__["templateQueryIdMap"].partition]
                };
              })
            };
            return [4
            /*yield*/
            , _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_5__["default"].setExtraStorage(this.service, this.keyInStorage.TopicList, TopicList)];

          case 2:
            _a.sent();

            return [4
            /*yield*/
            , _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_5__["default"].setExtraStorage(this.service, this.keyInStorage.GroupList, GroupList)];

          case 3:
            _a.sent();

            return [4
            /*yield*/
            , _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_5__["default"].setExtraStorage(this.service, this.keyInStorage.PartitionList, PartitionList)];

          case 4:
            _a.sent(); // console.log({ res1, res2, res3 });
            // console.log({rs});
            // 根据action返回指定的维度数据列表


            switch (action) {
              case 'DescribeTopicList':
                return [2
                /*return*/
                , rs.TopicList];

              case 'DescribeGroup':
                return [2
                /*return*/
                , rs.GroupList];

              case 'DescribePartion':
                return [2
                /*return*/
                , rs.PartitionList];

              default:
                return [2
                /*return*/
                , []];
            }

            return [2
            /*return*/
            ];
        }
      });
    });
  };

  return CKFKADatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_3__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (CKFKADatasource);

/***/ }),

/***/ "./datasource/tc_monitor/ckafka/query.ts":
/*!***********************************************!*\
  !*** ./datasource/tc_monitor/ckafka/query.ts ***!
  \***********************************************/
/*! exports provided: CKAFKAQueryCtrl, scfQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CKAFKAQueryCtrl", function() { return CKAFKAQueryCtrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scfQuery", function() { return scfQuery; });
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grafana/app/core/core_module */ "grafana/app/core/core_module");
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/ckafka/query_def.ts");
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};




var ExtraFields = [{
  label: 'ConsumerGroup',
  field: 'consumerGroup'
}, {
  label: 'TopicId',
  field: 'topicId'
}, {
  label: 'Partition',
  field: 'partition'
}];

var CKAFKAQueryCtrl =
/** @class */
function () {
  CKAFKAQueryCtrl.$inject = ["$scope", "$rootScope"];

  /** @ngInject */
  function CKAFKAQueryCtrl($scope, $rootScope) {
    var _this = this;

    $scope.init = function () {
      $scope.CKAFKAQueryDescriptor = _query_def__WEBPACK_IMPORTED_MODULE_1__["CKAFKAQueryDescriptor"];
    };

    $scope.getDropdown = function (field) {
      switch (field) {
        default:
          return [];
      }
    };

    $scope.onInstanceChange = function (n, o) {
      if (Object(_common_utils__WEBPACK_IMPORTED_MODULE_2__["isTargetEqual"])(n, o, 'LoadBalancerId')) return;
      $scope.target.consumerGroup = '';
      $scope.target.topicId = '';
      $scope.target.topicName = '';
      $scope.target.partition = '';
    };

    $scope.getExtraFields = function () {
      return ExtraFields.filter(function (item) {
        var _a;

        return item.field in ((_a = $scope.dims) !== null && _a !== void 0 ? _a : {});
      });
    };

    $scope.getInstanceId = function () {
      var instance = $scope.target.instance;
      instance = $scope.datasource.getServiceFn('ckafka', 'getVariable')(instance);
      if (Array.isArray(instance)) instance = instance[0];

      if (!instance) {
        return '';
      }

      try {
        instance = JSON.parse(instance).InstanceId;
      } catch (error) {// console.log();
      }

      return instance;
    };

    $scope.getExtraDropdown = function (target, field) {
      return __awaiter(_this, void 0, void 0, function () {
        var InstanceId, fetcher, region, res, TopicList, GroupList, PartitionList, data;
        return __generator(this, function (_a) {
          switch (_a.label) {
            case 0:
              InstanceId = $scope.getInstanceId();
              fetcher = $scope.datasource.getServiceFn('ckafka', 'getConsumerGroups');
              region = $scope.datasource.getServiceFn('ckafka', 'getVariable')(target.region);
              return [4
              /*yield*/
              , fetcher(region, {
                InstanceId: InstanceId,
                groupname: target.consumerGroup,
                topicid: target.topicId
              })];

            case 1:
              res = _a.sent();
              TopicList = res.TopicList, GroupList = res.GroupList, PartitionList = res.PartitionList;
              data = {
                GroupList: GroupList.map(function (group) {
                  group._InstanceAliasValue = group.GroupName;
                  return {
                    text: group.GroupName,
                    value: JSON.stringify(group)
                  };
                }),
                TopicList: TopicList.map(function (topic) {
                  topic._InstanceAliasValue = topic[_query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"].topicId];
                  return {
                    text: topic[_query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"].topicId],
                    value: JSON.stringify(topic) // 为了获取多维度的值，这里完全可以使用JSON.stringify()将整个对象放进去

                  };
                }),
                PartitionList: PartitionList.map(function (par) {
                  par._InstanceAliasValue = par[_query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"].partition];
                  return {
                    text: String(par[_query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"].partition]),
                    value: JSON.stringify(par)
                  };
                })
              };

              switch (field) {
                case 'consumerGroup':
                  return [2
                  /*return*/
                  , data.GroupList];

                case 'topicId':
                  return [2
                  /*return*/
                  , data.TopicList];

                case 'partition':
                  return [2
                  /*return*/
                  , data.PartitionList];
              }

              return [2
              /*return*/
              ];
          }
        });
      });
    };

    $scope.init();
  }

  return CKAFKAQueryCtrl;
}();


var template = "\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/583/18582\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in CKAFKAQueryDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- \u4E3B\u9898\uFF0C\u6D88\u8D39\u5206\u7EC4\uFF0C\u5206\u533A -->\n  <div ng-if=\"target.instance\">\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getExtraDropdown(target, extra.field)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  </div>\n";
function scfQuery() {
  return {
    template: template,
    controller: CKAFKAQueryCtrl,
    restrict: 'E',
    scope: {
      target: '=',
      showDetail: '=',
      region: '=',
      datasource: '=',
      getDropdownOptions: '&',
      onChange: '&',
      onRefresh: '&',
      dims: '=',
      instance: '='
    },
    link: function link(scope, element, attrs) {
      scope.$watch('target.instance', function (newValue, oldValue) {
        var _a;

        (_a = scope.onInstanceChange) === null || _a === void 0 ? void 0 : _a.call(scope, newValue, oldValue);
      });
    }
  };
}
grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default.a.directive('ckafkaQuery', scfQuery);

/***/ }),

/***/ "./datasource/tc_monitor/ckafka/query_def.ts":
/*!***************************************************!*\
  !*** ./datasource/tc_monitor/ckafka/query_def.ts ***!
  \***************************************************/
/*! exports provided: CKAFKAQueryDescriptor, default, CKAFKAInstanceAliasList, CKAFKATopicAliasList, CKAFKAInvalidDemensions, templateQueryIdMap, keyInStorage, queryMonitorExtraConfg, CKAFKAGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CKAFKAQueryDescriptor", function() { return CKAFKAQueryDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CKAFKAInstanceAliasList", function() { return CKAFKAInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CKAFKATopicAliasList", function() { return CKAFKATopicAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CKAFKAInvalidDemensions", function() { return CKAFKAInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keyInStorage", function() { return keyInStorage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryMonitorExtraConfg", function() { return queryMonitorExtraConfg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CKAFKAGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);

var CKAFKAQueryDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputnumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为10，最小值为1，最大值为100',
  link: '',
  type: 'inputnumber',
  min: 1,
  max: 100
}, {
  key: 'InstanceId',
  enDescriptor: 'InstanceId',
  cnDescriptor: '按照实例ID过滤',
  link: '',
  type: 'input'
}, {
  key: 'SearchWord',
  enDescriptor: 'SearchWord',
  cnDescriptor: '按照实例名称过滤，支持模糊查询',
  link: '',
  type: 'input'
}, {
  key: 'TagKey',
  enDescriptor: 'TagKey',
  cnDescriptor: '匹配标签key值',
  link: '',
  type: 'input'
}, {
  key: 'Status',
  enDescriptor: 'Status',
  cnDescriptor: '实例的状态，不填默认返回全部',
  link: '',
  type: 'select',
  multiple: true,
  list: [{
    text: '创建中',
    value: 0
  }, {
    text: '运行中',
    value: 1
  }, {
    text: '删除中',
    value: 2
  }]
}];
var CKAFKA_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'InstanceId',
  topicId: '',
  topicName: '',
  consumerGroup: '',
  partition: '',
  queries: {
    Offset: 0,
    Limit: 10,
    Status: [],
    InstanceId: '',
    SearchWord: '',
    TagKey: ''
  }
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  var params = {};

  if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(queries)) {
    params.Limit = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Limit', 20) || 20;
    params.Offset = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Offset', 0) || 0;
    queries = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.omit(queries, ['Offset', 'Limit']);

    lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(queries, function (item, key) {
      if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(item)) {
        item = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(item);

        if (item.length > 0) {
          params[key] = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(item);
        }
      } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(item)) {
        if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNumber(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', undefined)) || !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', undefined))) {
          params[key] = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value');
        }
      } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNumber(item) || !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(item)) {
        params[key] = item;
      }
    });
  }

  return params;
}

var CKAFKAInstanceAliasList = ['InstanceId', 'InstanceName'];
var CKAFKATopicAliasList = ['TopicId', 'TopicName']; // 保存在模板变量value中的key

var templateQueryIdMap = {
  instance: 'InstanceId',
  topicId: 'TopicId',
  groupName: 'GroupName',
  partition: 'PartitionId'
}; // 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key

var CKAFKAInvalidDemensions = new Proxy({
  topicId: 'TopicId',
  topicName: 'TopicName',
  consumerGroup: 'GroupName',
  partition: 'PartitionId'
}, {
  get: function get(obj, prop) {
    if (String(prop).toLocaleLowerCase() === 'instanceid') return 'InstanceId';
    return obj[prop];
  }
}); // 需要缓存到storage的内容的key列表

var keyInStorage = {
  TopicList: 'TopicList',
  GroupList: 'GroupList',
  PartitionList: 'PartitionList'
};
/*
如果有InstanceId额外的维度，原则上都需要传入此map结构配置
key的含义：
  经过InvalidDemensions处理后的string。topicId =》TopicId。
  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId
value的含义：
  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、
  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。
                    默认取通过InvalidDemsion处理后的key
  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。
                    即：templateQueryIdMap中内容。
                    联合上面2的内容筛选出原始sourceMap
*/

var queryMonitorExtraConfg = {
  TopicId: {
    dim_KeyInStorage: keyInStorage.TopicList,
    dim_KeyInTarget: 'topicId',
    dim_KeyInMap: templateQueryIdMap.topicId
  },
  // topicName和topicId是同一个storage中的source，所以根据topicId帅选
  TopicName: {
    dim_KeyInStorage: keyInStorage.TopicList,
    dim_KeyInTarget: 'topicId',
    dim_KeyInMap: templateQueryIdMap.topicId
  },
  GroupName: {
    dim_KeyInStorage: keyInStorage.GroupList,
    dim_KeyInTarget: 'consumerGroup',
    dim_KeyInMap: templateQueryIdMap.groupName
  },
  PartitionId: {
    dim_KeyInStorage: keyInStorage.PartitionList,
    dim_KeyInTarget: 'partition',
    dim_KeyInMap: templateQueryIdMap.partition
  }
};
/* harmony default export */ __webpack_exports__["default"] = (CKAFKA_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/clb/datasource.ts":
/*!*************************************************!*\
  !*** ./datasource/tc_monitor/clb/datasource.ts ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/clb/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");
/* harmony import */ var _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/datasourceStorage */ "./datasource/common/datasourceStorage.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};








var DCDatasource =
/** @class */
function (_super) {
  __extends(DCDatasource, _super);

  function DCDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this; // Namespace = namespace;


    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["InstanceAliasList"];
    _this.ListenerAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["LOADBALANCEListenerAliasList"];
    _this.ServerAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["LOADBALANCEServerAliasList"];
    _this.CandiateDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["CANDIATEDIMENSIONS"]; // InvalidDimensions = LOADBALANCEVALIDDIMENSIONS;

    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_0__["templateQueryIdMap"]; // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致
    // InstanceReqConfig = {
    //   service: 'clb',
    //   action: 'DescribeLoadBalancers',
    //   responseField: 'LoadBalancerSet',
    // };

    _this.keyInStorage = _query_def__WEBPACK_IMPORTED_MODULE_0__["keyInStorage"];
    _this.queryMonitorExtraConfg = _query_def__WEBPACK_IMPORTED_MODULE_0__["queryMonitorExtraConfg"];
    return _this;
  } // getFilterDropdown({ field }) {
  //   return super.getRegions();
  // }


  DCDatasource.prototype.getInvalidDimensions = function (selfIns, tagret) {
    if (selfIns.service === 'lbPrivate' || selfIns.service === 'lbPublic' && tagret.servers) return __assign(__assign({}, _query_def__WEBPACK_IMPORTED_MODULE_0__["LOADBALANCEVALIDDIMENSIONS"]), {
      vpcId: 'NumericalVpcId'
    });
    return _query_def__WEBPACK_IMPORTED_MODULE_0__["LOADBALANCEVALIDDIMENSIONS"];
  };

  DCDatasource.prototype.getInstanceReqConfig = function (selfIns) {
    var res = {
      service: 'clb',
      action: 'DescribeLoadBalancers',
      responseField: 'LoadBalancerSet'
    };

    if (selfIns.service === 'lbPrivate' || selfIns.service === 'loadBalance') {
      res.interceptor = {
        request: function request(param) {
          return __assign(__assign({}, param), {
            LoadBalancerType: 'INTERNAL'
          });
        }
      };
    }

    if (selfIns.service === 'lbPublic') {
      res.interceptor = {
        request: function request(param) {
          return __assign(__assign({}, param), {
            LoadBalancerType: 'OPEN'
          });
        }
      };
    }

    return res;
  };

  DCDatasource.prototype.getListenerList = function (params) {
    return __awaiter(this, void 0, void 0, function () {
      var region, instanceId, serviceInfo, res, rs;

      var _this = this;

      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            region = params.region, instanceId = params.instanceId;
            serviceInfo = Object(_common_constants__WEBPACK_IMPORTED_MODULE_3__["GetServiceAPIInfo"])(region, 'clb');
            return [4
            /*yield*/
            , Object(_common_utils__WEBPACK_IMPORTED_MODULE_4__["fetchAllFactory"])(function (data) {
              return _this.doRequest({
                url: _this.url + serviceInfo.path,
                data: data
              }, serviceInfo.service, {
                region: region,
                action: 'DescribeListeners'
              });
            }, {
              LoadBalancerId: instanceId
            }, 'Listeners')];

          case 1:
            res = _a.sent();
            rs = res[0];
            return [2
            /*return*/
            , rs];
        }
      });
    });
  };

  DCDatasource.prototype.formatVariableDisplay = function (data, displayTpl, alias, aliasList) {
    var _this = this;

    if (displayTpl) {
      return displayTpl.replace(/\$\{(\w+)\}/g, function (a, b) {
        if (!b || !aliasList.includes(b)) {
          return '';
        }

        return _this.getAliasValue(data, b);
      });
    }

    return this.getAliasValue(data, alias);
  };

  DCDatasource.prototype.getServerList = function (params) {
    return __awaiter(this, void 0, void 0, function () {
      var region, instanceId, listenerId, serviceInfo, res, Listeners, serversList;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            region = params.region, instanceId = params.instanceId, listenerId = params.listenerId;
            serviceInfo = Object(_common_constants__WEBPACK_IMPORTED_MODULE_3__["GetServiceAPIInfo"])(region, 'clb');
            return [4
            /*yield*/
            , this.doRequest({
              url: this.url + serviceInfo.path,
              data: {
                LoadBalancerId: instanceId,
                ListenerIds: [listenerId]
              }
            }, serviceInfo.service, {
              region: region,
              action: 'DescribeTargets'
            })];

          case 1:
            res = _a.sent();
            Listeners = res.Listeners;
            serversList = lodash__WEBPACK_IMPORTED_MODULE_2___default.a.reduce(Listeners, function (prev, item) {
              var Rules = item.Rules,
                  Targets = item.Targets;

              if (!lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isEmpty(Rules)) {
                return lodash__WEBPACK_IMPORTED_MODULE_2___default.a.concat(prev, lodash__WEBPACK_IMPORTED_MODULE_2___default.a.flatten(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.map(Rules, function (elem) {
                  return lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isEmpty(elem.Targets) ? [] : elem.Targets;
                })));
              }

              if (!lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isEmpty(Targets)) {
                return lodash__WEBPACK_IMPORTED_MODULE_2___default.a.concat(prev, Targets);
              }

              return prev;
            }, []);
            return [2
            /*return*/
            , serversList];
        }
      });
    });
  };

  DCDatasource.prototype.fetchMetricData = function (action, region, instance, query) {
    return __awaiter(this, void 0, void 0, function () {
      var display, rs, listeneralias_1, result, listenerid, serverprivateip, serveralias, serverPrivateIp_1, serversList, serverAlias_1, result;

      var _this = this;

      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            display = query.display;
            if (!(action === 'DescribeListeners')) return [3
            /*break*/
            , 3];
            return [4
            /*yield*/
            , this.getListenerList({
              region: region,
              instanceId: instance[this.templateQueryIdMap.instance]
            })];

          case 1:
            rs = _a.sent();
            listeneralias_1 = query.listeneralias;
            listeneralias_1 = this.ListenerAliasList.includes(listeneralias_1) ? listeneralias_1 : this.templateQueryIdMap.listener;
            result = rs.flatMap(function (o) {
              var listenAlias = _this.formatVariableDisplay(o, display, listeneralias_1, _this.ListenerAliasList);

              var lisId = o[_this.templateQueryIdMap.listener];
              o._InstanceAliasValue = listenAlias || lisId; // if (!o[listeneralias]) return [];

              return {
                text: listenAlias || lisId,
                value: lisId
              };
            });
            return [4
            /*yield*/
            , _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_5__["default"].setExtraStorage(this.service, this.keyInStorage.listener, rs)];

          case 2:
            _a.sent();

            return [2
            /*return*/
            , result];

          case 3:
            if (!(action === 'DescribeServer' || action === 'DescribeServerPort')) return [3
            /*break*/
            , 6];
            listenerid = query.listenerid, serverprivateip = query.serverprivateip, serveralias = query.serveralias;
            serverPrivateIp_1 = this.getVariable(serverprivateip);
            return [4
            /*yield*/
            , this.getServerList({
              region: region,
              instanceId: instance[this.templateQueryIdMap.instance],
              listenerId: this.getVariable(listenerid)
            })];

          case 4:
            serversList = _a.sent();
            serverAlias_1 = this.ServerAliasList.includes(serveralias) ? serveralias : this.templateQueryIdMap.servers;
            result = lodash__WEBPACK_IMPORTED_MODULE_2___default.a.chain(serversList).filter(function (item) {
              if (action === 'DescribeServer') {
                return true;
              }

              return serverPrivateIp_1 === lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(item, 'PrivateIpAddresses.0');
            }).map(function (item) {
              var alias = _this.formatVariableDisplay(item, display, serverAlias_1, _this.ServerAliasList);

              var id = item[_this.templateQueryIdMap.servers][0];
              item._InstanceAliasValue = alias || id;
              return action === 'DescribeServer' ? {
                text: alias || id,
                value: id
              } : {
                text: "".concat(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(item, 'Port')),
                value: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(item, 'Port')
              };
            }).value();
            return [4
            /*yield*/
            , _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_5__["default"].setExtraStorage(this.service, this.keyInStorage.servers, serversList)];

          case 5:
            _a.sent();

            return [2
            /*return*/
            , action === 'DescribeServer' ? result : lodash__WEBPACK_IMPORTED_MODULE_2___default.a.uniqBy(result, 'text')];

          case 6:
            return [2
            /*return*/
            , []];
        }
      });
    });
  };

  return DCDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (DCDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/clb/query.ts":
/*!********************************************!*\
  !*** ./datasource/tc_monitor/clb/query.ts ***!
  \********************************************/
/*! exports provided: QueryCtrl, sQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QueryCtrl", function() { return QueryCtrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sQuery", function() { return sQuery; });
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grafana/app/core/core_module */ "grafana/app/core/core_module");
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/clb/query_def.ts");
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};







var QueryCtrl =
/** @class */
function () {
  QueryCtrl.$inject = ["$scope", "$rootScope"];

  /** @ngInject */
  function QueryCtrl($scope, $rootScope) {
    var _this = this;

    $scope.init = function () {
      $scope.LOADBALANCEFieldsDescriptor = _query_def__WEBPACK_IMPORTED_MODULE_2__["LOADBALANCEFieldsDescriptor"];
      $scope.serversList = [];
    };

    $scope.onFieldChange = function (field) {
      $scope.onRefresh();
    };

    $scope.onInstanceChange = function (n, o) {
      if (Object(_common_utils__WEBPACK_IMPORTED_MODULE_4__["isTargetEqual"])(n, o, 'InstanceId')) return;
      $scope.target.listener = '';
      $scope.target.servers = '';
      $scope.target.serverPort = '';
    };

    $scope.getVariableId = function (data, type) {
      var variableData = data;
      var service = Object(_common_constants__WEBPACK_IMPORTED_MODULE_3__["GetServiceFromNamespace"])(_query_def__WEBPACK_IMPORTED_MODULE_2__["namespace"]);
      variableData = $scope.datasource.getServiceFn(service, 'getVariable')(variableData);

      if (!variableData) {
        return '';
      }

      try {
        variableData = JSON.parse(variableData)[_query_def__WEBPACK_IMPORTED_MODULE_2__["templateQueryIdMap"][type]];
      } catch (error) {// console.log();
      }

      return variableData;
    };

    $scope.getExtraDropdown = function (target) {
      return __awaiter(_this, void 0, void 0, function () {
        var instance, service, instanceId, region, rs, result;
        return __generator(this, function (_a) {
          switch (_a.label) {
            case 0:
              instance = $scope.target.instance;
              service = Object(_common_constants__WEBPACK_IMPORTED_MODULE_3__["GetServiceFromNamespace"])(_query_def__WEBPACK_IMPORTED_MODULE_2__["namespace"]);
              instanceId = $scope.getVariableId(instance, 'instance');
              region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);
              return [4
              /*yield*/
              , $scope.datasource.getServiceFn(service, 'getListenerList')({
                region: region,
                instanceId: instanceId
              })];

            case 1:
              rs = _a.sent();
              result = rs.map(function (o) {
                o._InstanceAliasValue = o[_query_def__WEBPACK_IMPORTED_MODULE_2__["templateQueryIdMap"].listener];
                return {
                  text: o[_query_def__WEBPACK_IMPORTED_MODULE_2__["templateQueryIdMap"].listener],
                  value: JSON.stringify(o)
                };
              });
              return [2
              /*return*/
              , result];
          }
        });
      });
    };

    $scope.getServersDropdown = function (target) {
      return __awaiter(_this, void 0, void 0, function () {
        var _a, instance, listener, service, instanceId, listenerId, region, serversList, res;

        return __generator(this, function (_b) {
          switch (_b.label) {
            case 0:
              _a = $scope.target, instance = _a.instance, listener = _a.listener;
              service = Object(_common_constants__WEBPACK_IMPORTED_MODULE_3__["GetServiceFromNamespace"])(_query_def__WEBPACK_IMPORTED_MODULE_2__["namespace"]);
              instanceId = $scope.getVariableId(instance, 'instance');
              listenerId = $scope.getVariableId(listener, 'listener');
              region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);
              return [4
              /*yield*/
              , $scope.datasource.getServiceFn(service, 'getServerList')({
                region: region,
                instanceId: instanceId,
                listenerId: listenerId
              })];

            case 1:
              serversList = _b.sent();
              $scope.serversList = serversList;
              res = Object(lodash__WEBPACK_IMPORTED_MODULE_1__["chain"])(serversList).map(function (item) {
                item._InstanceAliasValue = Object(lodash__WEBPACK_IMPORTED_MODULE_1__["get"])(item, 'PrivateIpAddresses.0');
                return {
                  text: Object(lodash__WEBPACK_IMPORTED_MODULE_1__["get"])(item, 'PrivateIpAddresses.0'),
                  value: JSON.stringify(item)
                };
              }).uniqBy('text').value();
              return [2
              /*return*/
              , res];
          }
        });
      });
    };

    $scope.getServerPortDropdown = function (target) {
      return __awaiter(_this, void 0, void 0, function () {
        var servers, serverPortList, serversSource_1;
        return __generator(this, function (_a) {
          servers = $scope.target.servers;
          serverPortList = [];

          try {
            serversSource_1 = JSON.parse(servers);
            serverPortList = Object(lodash__WEBPACK_IMPORTED_MODULE_1__["chain"])($scope.serversList).filter(function (item) {
              return Object(lodash__WEBPACK_IMPORTED_MODULE_1__["get"])(serversSource_1, 'PrivateIpAddresses.0') === Object(lodash__WEBPACK_IMPORTED_MODULE_1__["get"])(item, 'PrivateIpAddresses.0');
            }).map(function (item) {
              item._InstanceAliasValue = Object(lodash__WEBPACK_IMPORTED_MODULE_1__["get"])(item, 'Port');
              return {
                text: "".concat(Object(lodash__WEBPACK_IMPORTED_MODULE_1__["get"])(item, 'Port')),
                value: JSON.stringify(item)
              };
            }).value();
          } catch (error) {}

          return [2
          /*return*/
          , serverPortList];
        });
      });
    };

    $scope.init();
  }

  return QueryCtrl;
}();


var template = "\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Functions are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/214/30685\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\" ng-repeat=\"field in LOADBALANCEFieldsDescriptor\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <input\n          ng-if=\"field.type === 'inputNumber'\"\n          style=\"margin-right:2px\"\n          type=\"number\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n          ng-min=\"field.min\"\n          ng-max=\"field.max\"\n        />\n        <input\n          ng-if=\"field.type === 'input'\"\n          style=\"margin-right:2px\"\n          type=\"text\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n        />\n        <multi-condition\n          ng-if=\"field.type === 'inputNumberMulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputMulti'\"\n          type=\"'input'\"\n          value=\"target.queries[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries[field.key]\"\n          options=\"field.list\"\n          multiple=\"field.multiple || false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!--Listener\u7EF4\u5EA6\u90E8\u5206-->\n<div class=\"gf-form-inline\" ng-if=\"target.instance\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label query-keyword width-9\">\n      Listeners\n      <info-popover mode=\"right-normal\">\n        \u53EF\u4E0D\u9009\u62E9\u76D1\u542C\u5668\uFF0C\u8FD9\u65F6\u901A\u8FC7\u5B9E\u4F8B\u7EF4\u5EA6\u67E5\u8BE2\u76D1\u63A7\u6570\u636E\n      </info-popover>\n    </label>\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n      <gf-form-dropdown model=\"target.listener\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getExtraDropdown(target)\"\n        on-change=\"onRefresh()\" css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n  </div>\n</div>\n<div class=\"gf-form-inline\" ng-if=\"target.listener && namespace !== '".concat(_query_def__WEBPACK_IMPORTED_MODULE_2__["namespace"], "'\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label query-keyword width-9\">Servers</label>\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n      <gf-form-dropdown model=\"target.servers\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getServersDropdown(target)\"\n        on-change=\"onRefresh()\" css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n  </div>\n</div>\n<div class=\"gf-form-inline\" ng-if=\"target.servers && namespace !== '").concat(_query_def__WEBPACK_IMPORTED_MODULE_2__["namespace"], "'\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label query-keyword width-9\">ServerPort</label>\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n      <gf-form-dropdown model=\"target.serverPort\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getServerPortDropdown(target)\"\n        on-change=\"onRefresh()\" css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n  </div>\n</div>\n");
function sQuery() {
  return {
    template: template,
    controller: QueryCtrl,
    restrict: 'E',
    scope: {
      target: '=',
      namespace: '=',
      showDetail: '=',
      region: '=',
      datasource: '=',
      getDropdownOptions: '&',
      onChange: '&',
      onRefresh: '&',
      dims: '='
    },
    link: function link(scope, element, attrs) {
      scope.$watch('target.instance', function (newValue, oldValue) {
        var _a;

        (_a = scope.onInstanceChange) === null || _a === void 0 ? void 0 : _a.call(scope, newValue, oldValue);
      });
    }
  };
}
grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default.a.directive('clbQuery', sQuery);

/***/ }),

/***/ "./datasource/tc_monitor/clb/query_def.ts":
/*!************************************************!*\
  !*** ./datasource/tc_monitor/clb/query_def.ts ***!
  \************************************************/
/*! exports provided: default, LOADBALANCEFieldsDescriptor, InstanceAliasList, LOADBALANCEListenerAliasList, LOADBALANCEServerAliasList, LOADBALANCEVALIDDIMENSIONS, templateQueryIdMap, CANDIATEDIMENSIONS, queryMonitorExtraConfg, keyInStorage, queryEditorConfig, namespace, queryEditorName, GetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LOADBALANCEFieldsDescriptor", function() { return LOADBALANCEFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InstanceAliasList", function() { return InstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LOADBALANCEListenerAliasList", function() { return LOADBALANCEListenerAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LOADBALANCEServerAliasList", function() { return LOADBALANCEServerAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LOADBALANCEVALIDDIMENSIONS", function() { return LOADBALANCEVALIDDIMENSIONS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CANDIATEDIMENSIONS", function() { return CANDIATEDIMENSIONS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryMonitorExtraConfg", function() { return queryMonitorExtraConfg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keyInStorage", function() { return keyInStorage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorConfig", function() { return queryEditorConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorName", function() { return queryEditorName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");

var namespace = 'QCE/LOADBALANCE'; // 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称

var queryEditorName = 'loadBalanceQuery';
var ForwardTypes = [{
  text: '通用的负载均衡',
  value: 1
}, {
  text: '传统的负载均衡',
  value: 0
}];
var OrderBy = [{
  text: 'LoadBalancerName',
  value: 'LoadBalancerName'
}, {
  text: 'CreateTime',
  value: 'CreateTime'
}, {
  text: 'Domain',
  value: 'Domain'
}, {
  text: 'LoadBalancerType',
  value: 'LoadBalancerType'
}];
var OrderType = [{
  text: '升序',
  value: 0
}, {
  text: '降序',
  value: 1
}];
var WithRs = [{
  text: '没有绑定后端服务',
  value: 0
}, {
  text: '绑定后端服务',
  value: 1
}, {
  text: '查询全部',
  value: -1
}];
var LOADBALANCEFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputNumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1',
  link: '',
  type: 'inputNumber',
  min: 1
}, {
  key: 'LoadBalancerIds',
  enDescriptor: 'LoadBalancer ID',
  cnDescriptor: '实例ID',
  link: '',
  type: 'inputMulti'
}, {
  key: 'LoadBalancerName',
  enDescriptor: 'LoadBalancer Name',
  cnDescriptor: '实例名称',
  link: '',
  type: 'input'
}, {
  key: 'Forward',
  enDescriptor: 'Forward',
  cnDescriptor: '负载均衡实例类型',
  link: '',
  type: 'select',
  list: ForwardTypes
}, {
  key: 'Domain',
  enDescriptor: 'Domain',
  cnDescriptor: '域名，腾讯云为负载均衡实例分配的域名，本参数仅对传统型公网负载均衡才有意义',
  link: '',
  type: 'input'
}, {
  key: 'LoadBalancerVips',
  enDescriptor: 'LoadBalancer Vips',
  cnDescriptor: '负载均衡实例的 VIP 地址',
  link: '',
  type: 'inputMulti'
}, {
  key: 'BackendPrivateIps',
  enDescriptor: 'BackendPrivate Ips',
  cnDescriptor: '负载均衡绑定的后端服务的内网 IP',
  link: '',
  type: 'inputMulti'
}, {
  key: 'BackendPublicIps',
  enDescriptor: 'BackendPublic Ips',
  cnDescriptor: '负载均衡绑定的后端服务的外网 IP',
  link: '',
  type: 'inputMulti'
}, {
  key: 'ProjectId',
  enDescriptor: 'Project ID',
  cnDescriptor: '负载均衡实例所属的项目 ID',
  link: '',
  type: 'inputNumber'
}, {
  key: 'VpcId',
  enDescriptor: 'Vpc ID',
  cnDescriptor: '负载均衡实例所属私有网络',
  link: '',
  type: 'input'
}, {
  key: 'SecurityGroup',
  enDescriptor: 'Security Group',
  cnDescriptor: '安全组ID',
  link: '',
  type: 'input'
}, {
  key: 'MasterZone',
  enDescriptor: 'Master Zone',
  cnDescriptor: '主可用区ID',
  link: '',
  type: 'input'
}, {
  key: 'WithRs',
  enDescriptor: 'WithRs',
  cnDescriptor: '负载均衡是否绑定后端服务',
  link: '',
  type: 'select',
  list: WithRs
}, {
  key: 'OrderBy',
  enDescriptor: 'OrderBy',
  cnDescriptor: '排序字段',
  link: '',
  type: 'select',
  list: OrderBy
}, {
  key: 'OrderType',
  enDescriptor: 'OrderByType',
  cnDescriptor: '排序方式',
  link: '',
  type: 'select',
  list: OrderType
}]; // 各产品实例列表detail配置

var queryEditorConfig = {
  instanceDocUrl: 'https://cloud.tencent.com/document/api/214/30685',
  namespace: namespace,
  fieldDescriptor: LOADBALANCEFieldsDescriptor
};
var LBFields = {
  LoadBalancerIds: [],
  Forward: undefined,
  LoadBalancerName: '',
  Domain: '',
  LoadBalancerVips: [],
  BackendPublicIps: [],
  BackendPrivateIps: [],
  Limit: 20,
  Offset: 0,
  ProjectId: undefined,
  WithRs: {},
  VpcId: '',
  SecurityGroup: '',
  MasterZone: '',
  OrderBy: {},
  OrderType: {}
};
var LOADBALANCE_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'LoadBalancerId',
  Port: '',
  Protocol: '',
  listener: '',
  servers: '',
  serverPort: '',
  // listenerAlias: 'ListenerId',
  queries: LBFields
}; // function GetInstanceQueryParams(queries: any = {}) {
//   const params: any = {};
//   if (!_.isEmpty(queries)) {
//     params.Limit = _.get(queries, 'Limit', 20) || 20;
//     params.Offset = _.get(queries, 'Offset', 0) || 0;
//     queries = _.omit(queries, ['Offset', 'Limit']);
//     _.forEach(queries, (item: any, key) => {
//       if (_.isArray(item)) {
//         item = _.compact(item);
//         if (item.length > 0) {
//           params[key] = _.uniq(item);
//         }
//       } else if (_.isObject(item)) {
//         if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {
//           params[key] = _.get(item, 'value');
//         }
//       } else if (_.isNumber(item) || !_.isEmpty(item)) {
//         params[key] = item;
//       }
//     });
//   }
//   return params;
// }

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  return Object(_common_utils__WEBPACK_IMPORTED_MODULE_0__["instanceQueryParamsBaseParse"])(queries, false);
}

var InstanceAliasList = ['LoadBalancerId', 'LoadBalancerName', 'LoadBalancerVips'];
var LOADBALANCEListenerAliasList = ['ListenerId', 'ListenerName', 'Port'];
var LOADBALANCEServerAliasList = ['PrivateIpAddresses', 'InstanceId'];
var LOADBALANCEVALIDDIMENSIONS = {
  vip: 'LoadBalancerVips',
  // vpcId: 'NumericalVpcId',
  loadBalancerPort: 'Port',
  protocol: 'Protocol',
  lanIp: 'PrivateIpAddresses',
  port: 'ServerPort'
}; // 对于ipv6类型，vip应该取AddressIPv6。

var CANDIATEDIMENSIONS = {
  LoadBalancerVips: 'AddressIPv6'
}; // dimensionObject[item] = { Name: item, Value: '' };
// const LOADBALANCE_INSTANCE_DIMENSIONOBJECTS = {
//   vip: { Name: 'vip', Value: '' },
// };
// const LOADBALANCE_LISTENER_DIMENSIONOBJECTS = {
//   vip: { Name: 'vip', Value: '' },
//   loadBalancerPort: { Name: 'loadBalancerPort', Value: '' },
//   protocol: { Name: 'protocol', Value: '' },
// };

var templateQueryIdMap = {
  instance: 'LoadBalancerId',
  listener: 'ListenerId',
  servers: 'PrivateIpAddresses',
  port: 'Port'
}; // 需要缓存到storage的内容的key列表

var keyInStorage = {
  listener: 'ListenerList',
  servers: 'ServersList'
};
/*
如果有InstanceId额外的维度，原则上都需要传入此map结构配置
key的含义：
  经过InvalidDemensions处理后的string。topicId =》TopicId。
  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId
value的含义：
  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、
  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。
                    默认取通过InvalidDemsion处理后的key
  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。
                    即：templateQueryIdMap中内容。
                    联合上面2的内容筛选出原始sourceMap
*/

var queryMonitorExtraConfg = {
  Port: {
    dim_KeyInStorage: keyInStorage.listener,
    dim_KeyInTarget: 'listener',
    dim_KeyInMap: templateQueryIdMap.listener
  },
  Protocol: {
    dim_KeyInStorage: keyInStorage.listener,
    dim_KeyInTarget: 'listener',
    dim_KeyInMap: templateQueryIdMap.listener
  },
  PrivateIpAddresses: {
    dim_KeyInStorage: keyInStorage.servers,
    dim_KeyInTarget: 'servers',
    dim_KeyInMap: templateQueryIdMap.servers
  },
  ServerPort: {
    dim_KeyInStorage: keyInStorage.servers,
    dim_KeyInTarget: 'serverPort',
    dim_KeyInIns: 'Port',
    dim_KeyInMap: templateQueryIdMap.port
  }
};
/* harmony default export */ __webpack_exports__["default"] = (LOADBALANCE_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/cls/datasource.ts":
/*!*************************************************!*\
  !*** ./datasource/tc_monitor/cls/datasource.ts ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/cls/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../locale */ "./locale/index.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};






var DCDatasource =
/** @class */
function (_super) {
  __extends(DCDatasource, _super);

  function DCDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = _query_def__WEBPACK_IMPORTED_MODULE_0__["namespace"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["CLSInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["CLSInvalidDemensions"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_0__["templateQueryIdMap"]; // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致

    _this.InstanceReqConfig = {
      service: 'cls',
      action: 'DescribeTopics',
      responseField: 'Topics'
    };
    return _this;
  } // getFilterDropdown({ field }) {
  //   return super.getRegions();
  // }


  DCDatasource.prototype.getRegions = function () {
    return Promise.resolve(_query_def__WEBPACK_IMPORTED_MODULE_0__["regionSupported"].map(function (_a) {
      var value = _a.value;
      return {
        value: value,
        text: Object(_locale__WEBPACK_IMPORTED_MODULE_3__["t"])(value)
      };
    }));
  }; // async getInstances(region, params = {}) {
  //   const superRes = await super.getInstances(region, params);
  //   console.log({ superRes });
  // }


  DCDatasource.prototype.getMetrics = function (region) {
    if (region === void 0) {
      region = 'ap-guangzhou';
    }

    return __awaiter(this, void 0, void 0, function () {
      var rawSet;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , _super.prototype.getMetrics.call(this, region)];

          case 1:
            rawSet = _a.sent();
            return [2
            /*return*/
            , lodash__WEBPACK_IMPORTED_MODULE_2___default.a.compact(rawSet.map(function (item) {
              return Object(_query_def__WEBPACK_IMPORTED_MODULE_0__["modifyDimensons"])(item);
            }))];
        }
      });
    });
  };

  return DCDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (DCDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/cls/query.ts":
/*!********************************************!*\
  !*** ./datasource/tc_monitor/cls/query.ts ***!
  \********************************************/
/*! exports provided: QueryCtrl, sQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QueryCtrl", function() { return QueryCtrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sQuery", function() { return sQuery; });
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grafana/app/core/core_module */ "grafana/app/core/core_module");
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/cls/query_def.ts");



var QueryCtrl =
/** @class */
function () {
  QueryCtrl.$inject = ["$scope", "$rootScope"];

  /** @ngInject */
  function QueryCtrl($scope, $rootScope) {
    $scope.init = function () {
      $scope.GSEFilterFieldsDescriptor = _query_def__WEBPACK_IMPORTED_MODULE_1__["CLSFilterFieldsDescriptor"];
    };

    $scope.init();
  }

  return QueryCtrl;
}();


var template = "\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/45073\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in GSEFilterFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputNumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />    \n      <multi-condition\n        ng-if=\"field.type === 'inputNumberMulti'\"\n        type=\"'inputNumber'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        maxNum=\"field.max\"\n        minNum=\"field.min\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputMulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- \u8D77\u59CB\u533A\u57DF \u76EE\u7684\u533A\u57DF\u7B49 -->\n<div>\n  <div class=\"gf-form-inline\" >\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label query-keyword width-9\">uin</label>\n      <input\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.uin\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />    \n    </div>\n  </div>\n</div>\n</div>\n";
function sQuery() {
  return {
    template: template,
    controller: QueryCtrl,
    restrict: 'E',
    scope: {
      target: '=',
      showDetail: '=',
      region: '=',
      datasource: '=',
      getDropdownOptions: '&',
      onChange: '&',
      onRefresh: '&',
      dims: '='
    }
  };
}
grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default.a.directive(_query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorName"], sQuery);

/***/ }),

/***/ "./datasource/tc_monitor/cls/query_def.ts":
/*!************************************************!*\
  !*** ./datasource/tc_monitor/cls/query_def.ts ***!
  \************************************************/
/*! exports provided: default, CLSFilterFieldsDescriptor, templateQueryIdMap, CLSInstanceAliasList, CLSInvalidDemensions, namespace, queryEditorName, queryEditorConfig, regionSupported, modifyDimensons, CLSGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CLSFilterFieldsDescriptor", function() { return CLSFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CLSInstanceAliasList", function() { return CLSInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CLSInvalidDemensions", function() { return CLSInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorName", function() { return queryEditorName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorConfig", function() { return queryEditorConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "regionSupported", function() { return regionSupported; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modifyDimensons", function() { return modifyDimensons; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CLSGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);


var namespace = 'QCE/CLS';
var queryEditorName = 'clsQuery';
var CLSInvalidDemensions = {// instanceid: 'TopicId',
}; // 需和文件名对应

var CLSInstanceAliasList = ['TopicId', 'TopicName'];
var templateQueryIdMap = {
  instance: 'TopicId'
}; // 需要缓存到storage的内容的key列表
// const keyInStorage = {
//   fleet: 'fleet', // 实例队列
//   queue: 'queueName', // 会话队列
// };

/*
如果有InstanceId额外的维度，原则上都需要传入此map结构配置
key的含义：
  经过InvalidDemensions处理后的string。topicId =》TopicId。
  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId
value的含义：
  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、
  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。
                    默认取通过InvalidDemsion处理后的key
  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。
                    即：templateQueryIdMap中内容。
                    联合上面2的内容筛选出原始sourceMap
*/
// const queryMonitorExtraConfg = {
//   FleetId: {
//     dim_KeyInStorage: keyInStorage.fleet,
//     dim_KeyInTarget: 'FleetId',
//     dim_KeyInMap: templateQueryIdMap.FleetId,
//   },
//   Name: {
//     dim_KeyInStorage: keyInStorage.queue,
//     dim_KeyInTarget: 'Name',
//     dim_KeyInMap: templateQueryIdMap.Name,
//   },
// };
// select类型需要注意是{},multi后缀是[],dropdown是''

var CLSFilterFields = {
  Limit: 20,
  Offset: 0,
  topicName: [],
  topicId: [],
  logsetName: [],
  logsetId: [],
  tagKey: [],
  'tag:tagKey': [],
  storageType: {}
};
var CLSFilterFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputNumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputNumber',
  min: 1,
  max: 100
}, {
  key: 'topicName',
  enDescriptor: 'topicName',
  cnDescriptor: '日志主题名称',
  link: '',
  type: 'inputMulti'
}, {
  key: 'topicId',
  enDescriptor: 'topicId',
  cnDescriptor: '日志主题ID',
  link: '',
  type: 'inputMulti'
}, {
  key: 'logsetName',
  enDescriptor: 'logsetName',
  cnDescriptor: '日志集名称',
  link: '',
  type: 'inputMulti'
}, {
  key: 'logsetId',
  enDescriptor: 'logsetId',
  cnDescriptor: '日志集ID',
  link: '',
  type: 'inputMulti'
}, {
  key: 'tagKey',
  enDescriptor: 'tagKey',
  cnDescriptor: '标签键',
  link: '',
  type: 'inputMulti'
}, {
  key: 'tag:tagKey',
  enDescriptor: 'tag - tagKey',
  cnDescriptor: '标签键值对',
  link: '',
  type: 'inputMulti'
}, {
  key: 'storageType',
  enDescriptor: 'storageType',
  cnDescriptor: '日志主题的存储类型',
  link: '',
  type: 'select',
  list: [{
    text: '实时存储',
    value: 'hot'
  }, {
    text: '离线存储',
    value: 'cold'
  }]
}]; // 各产品实例列表detail配置

var queryEditorConfig = {
  instanceDocUrl: 'https://cloud.tencent.com/document/api/614/56454',
  namespace: namespace,
  fieldDescriptor: CLSFilterFieldsDescriptor
};
var CLS_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'TopicId',
  uin: '',
  queries: CLSFilterFields
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  return Object(_common_utils__WEBPACK_IMPORTED_MODULE_0__["instanceQueryParamsBaseParse"])(queries, true);
} // regions for dropdown


var regionSupported = [{
  value: 'ap-bangkok'
}, {
  value: 'ap-beijing'
}, {
  value: 'ap-chengdu'
}, {
  value: 'ap-chongqing'
}, {
  value: 'ap-guangzhou'
}, {
  value: 'ap-hongkong'
}, {
  value: 'ap-jakarta'
}, {
  value: 'ap-mumbai'
}, {
  value: 'ap-seoul'
}, {
  value: 'ap-nanjing'
}, {
  value: 'ap-shanghai'
}, {
  value: 'ap-shanghai-fsi'
}, {
  value: 'ap-shenzhen-fsi'
}, {
  value: 'ap-singapore'
}, {
  value: 'ap-tokyo'
}, {
  value: 'eu-frankfurt'
}, {
  value: 'eu-moscow'
}, {
  value: 'na-ashburn'
}, {
  value: 'na-siliconvalley'
}, {
  value: 'na-toronto'
}];

function modifyDimensons(metricItem) {
  var metricTmp = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.cloneDeep(metricItem);

  metricTmp.Dimensions.forEach(function (item) {
    // item.Dimensions = item.Dimensions.map((v) => CLSInvalidDemensions[v] || v);
    item.Dimensions = ['uin', 'TopicId'];
  });
  return metricTmp;
}

/* harmony default export */ __webpack_exports__["default"] = (CLS_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/cmq/datasource.ts":
/*!*************************************************!*\
  !*** ./datasource/tc_monitor/cmq/datasource.ts ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/cmq/query_def.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};

var __spreadArray = undefined && undefined.__spreadArray || function (to, from, pack) {
  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
    if (ar || !(i in from)) {
      if (!ar) ar = Array.prototype.slice.call(from, 0, i);
      ar[i] = from[i];
    }
  }
  return to.concat(ar || Array.prototype.slice.call(from));
};




var CmqDatasource =
/** @class */
function (_super) {
  __extends(CmqDatasource, _super);

  function CmqDatasource() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_1__["InvalidDemensions"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_1__["InstanceAliasList"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"];
    _this.InstanceReqConfig = {
      service: 'cmq',
      action: 'DescribeQueueDetail',
      responseField: 'QueueSet'
    };
    return _this;
  }

  CmqDatasource.prototype.getMetrics = function (region) {
    if (region === void 0) {
      region = 'ap-guangzhou';
    }

    return __awaiter(this, void 0, void 0, function () {
      var rawMetric;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , _super.prototype.getMetrics.call(this, region)];

          case 1:
            rawMetric = _a.sent();
            return [2
            /*return*/
            , rawMetric.map(function (metric) {
              var dims = metric.Dimensions[0].Dimensions;
              dims = Array.from(new Set(__spreadArray(__spreadArray([], dims, true), ['queueId', 'queueName'], false)));
              metric.Dimensions[0].Dimensions = dims;
              return metric;
            })];
        }
      });
    });
  };

  return CmqDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_0__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (CmqDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/cmq/query.ts":
/*!********************************************!*\
  !*** ./datasource/tc_monitor/cmq/query.ts ***!
  \********************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _base_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_base/query */ "./datasource/tc_monitor/_base/query.ts");
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/cmq/query_def.ts");


Object(_base_query__WEBPACK_IMPORTED_MODULE_0__["default"])('cmqQuery', {
  fieldDescriptor: _query_def__WEBPACK_IMPORTED_MODULE_1__["InstanceQueryDescriptor"],
  instanceDocUrl: 'https://cloud.tencent.com/document/api/406/42624',
  namespace: 'QCE/CMQ'
});

/***/ }),

/***/ "./datasource/tc_monitor/cmq/query_def.ts":
/*!************************************************!*\
  !*** ./datasource/tc_monitor/cmq/query_def.ts ***!
  \************************************************/
/*! exports provided: InstanceQueryDescriptor, InvalidDemensions, templateQueryIdMap, InstanceAliasList, GetInstanceQueryParams, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InstanceQueryDescriptor", function() { return InstanceQueryDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InvalidDemensions", function() { return InvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InstanceAliasList", function() { return InstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);

var InstanceQueryDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputNumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为10，最小值为1，最大值为100',
  link: '',
  type: 'inputNumber',
  min: 1,
  max: 50
}, {
  key: 'QueueName',
  enDescriptor: 'QueueName',
  cnDescriptor: '精确匹配QueueName',
  link: '',
  type: 'input'
}, {
  key: 'TagKey',
  enDescriptor: 'TagKey',
  cnDescriptor: '标签搜索',
  link: '',
  type: 'input'
}];

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  var params = {};

  if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(queries)) {
    params.Limit = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Limit', 20) || 20;
    params.Offset = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Offset', 0) || 0;
    queries = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.omit(queries, ['Offset', 'Limit']);

    lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(queries, function (item, key) {
      if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(item)) {
        item = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(item);

        if (item.length > 0) {
          params[key] = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(item);
        }
      } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(item)) {
        if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNumber(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', undefined)) || !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', undefined))) {
          params[key] = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value');
        }
      } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNumber(item) || !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(item)) {
        params[key] = item;
      }
    });
  }

  return params;
} // 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key


var InvalidDemensions = {
  queueId: 'QueueId',
  queueName: 'QueueName'
};
var templateQueryIdMap = {
  instance: 'QueueName'
}; // 与名称挂钩的变量

var InstanceAliasList = ['QueueName', 'QueueId'];
 // 界面状态模型，default

/* harmony default export */ __webpack_exports__["default"] = ({
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'QueueName',
  queries: {
    Offset: 0,
    Limit: 20,
    QueueName: '',
    TagKey: ''
  }
});

/***/ }),

/***/ "./datasource/tc_monitor/cmq_topic/datasource.ts":
/*!*******************************************************!*\
  !*** ./datasource/tc_monitor/cmq_topic/datasource.ts ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/cmq_topic/query_def.ts");
/* harmony import */ var _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/datasourceStorage */ "./datasource/common/datasourceStorage.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};







var CmqTopicDatasource =
/** @class */
function (_super) {
  __extends(CmqTopicDatasource, _super);

  function CmqTopicDatasource() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.Namespace = 'QCE/CMQTOPIC';
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_3__["InvalidDemensions"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_3__["InstanceAliasList"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_3__["templateQueryIdMap"];
    _this.InstanceReqConfig = {
      service: 'cmq',
      action: 'DescribeTopicDetail',
      responseField: 'TopicSet'
    };
    _this.keyInStorage = _query_def__WEBPACK_IMPORTED_MODULE_3__["keyInStorage"];
    _this.queryMonitorExtraConfg = _query_def__WEBPACK_IMPORTED_MODULE_3__["queryMonitorExtraConfg"];
    _this.extraMetricDims = ['subscriptionId']; // 多选

    return _this;
  }

  CmqTopicDatasource.prototype.fetchAllSubscription = function (region, params) {
    return __awaiter(this, void 0, void 0, function () {
      var serviceInfo, rs;

      var _this = this;

      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            serviceInfo = Object(_common_constants__WEBPACK_IMPORTED_MODULE_0__["GetServiceAPIInfo"])(region, 'cmq');
            return [4
            /*yield*/
            , Object(_common_utils__WEBPACK_IMPORTED_MODULE_1__["fetchAllFactory"])(function (data) {
              return _this.doRequest({
                url: _this.url + serviceInfo.path,
                data: data
              }, serviceInfo.service, {
                region: region,
                action: 'DescribeSubscriptionDetail'
              });
            }, params, 'SubscriptionSet')];

          case 1:
            rs = _a.sent();
            return [2
            /*return*/
            , rs[0]];
        }
      });
    });
  };

  CmqTopicDatasource.prototype.fetchMetricData = function (action, region, instance) {
    return __awaiter(this, void 0, void 0, function () {
      var result, _a, rs;

      return __generator(this, function (_b) {
        switch (_b.label) {
          case 0:
            _a = action;

            switch (_a) {
              case 'DescribeSubscriptionDetail':
                return [3
                /*break*/
                , 1];
            }

            return [3
            /*break*/
            , 4];

          case 1:
            return [4
            /*yield*/
            , this.fetchAllSubscription(region, {
              TopicName: instance.TopicName
            })];

          case 2:
            result = _b.sent();
            rs = result.map(function (item) {
              item._InstanceAliasValue = item.SubscriptionId;
              return {
                text: item.SubscriptionId,
                value: item[_query_def__WEBPACK_IMPORTED_MODULE_3__["templateQueryIdMap"].subscription]
              };
            });
            return [4
            /*yield*/
            , _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_4__["default"].setExtraStorage(this.service, this.keyInStorage.subscriptionId, result)];

          case 3:
            _b.sent();

            return [2
            /*return*/
            , rs];

          case 4:
            return [2
            /*return*/
            , []];
        }
      });
    });
  };

  CmqTopicDatasource.prototype.getMetrics = function (region) {
    if (region === void 0) {
      region = 'ap-guangzhou';
    }

    return __awaiter(this, void 0, void 0, function () {
      var rawMetric;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , _super.prototype.getMetrics.call(this, region)];

          case 1:
            rawMetric = _a.sent();
            return [2
            /*return*/
            , rawMetric.map(function (metric) {
              var dims = metric.Dimensions[0].Dimensions;
              dims.push('topicId');

              if (['NumOfNotify', 'NumOfSuccNotify'].includes(metric.MetricName)) {
                dims.push('subscriptionId');
              }

              dims = Array.from(new Set(dims));
              metric.Dimensions[0].Dimensions = dims;
              return metric;
            })];
        }
      });
    });
  };

  return CmqTopicDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_2__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (CmqTopicDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/cmq_topic/query.ts":
/*!**************************************************!*\
  !*** ./datasource/tc_monitor/cmq_topic/query.ts ***!
  \**************************************************/
/*! exports provided: CmqTopicQueryCtrl, scfQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CmqTopicQueryCtrl", function() { return CmqTopicQueryCtrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scfQuery", function() { return scfQuery; });
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grafana/app/core/core_module */ "grafana/app/core/core_module");
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/cmq_topic/query_def.ts");
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};



var ExtraFields = [{
  label: 'Subscription(订阅)',
  field: 'subscriptionId'
}];

var CmqTopicQueryCtrl =
/** @class */
function () {
  CmqTopicQueryCtrl.$inject = ["$scope", "$rootScope"];

  /** @ngInject */
  function CmqTopicQueryCtrl($scope, $rootScope) {
    var _this = this;

    $scope.init = function () {
      $scope.InstanceQueryDescriptor = _query_def__WEBPACK_IMPORTED_MODULE_1__["InstanceQueryDescriptor"];
    };

    $scope.getDropdown = function (field) {
      switch (field) {
        default:
          return [];
      }
    }; // 各个实例下的订阅，由于不想每次都重复发请求，所以这里做了一层缓存，数据结构为{ [instanceId]: {   } }


    $scope.cacheMap = {};

    $scope.getExtraFields = function () {
      return ExtraFields.filter(function (item) {
        var _a;

        return item.field in ((_a = $scope.dims) !== null && _a !== void 0 ? _a : {});
      });
    };

    $scope.getTopicName = function () {
      var instance = $scope.target.instance;
      instance = $scope.datasource.getServiceFn('cmqTopic', 'getVariable')(instance);

      if (!instance) {
        return '';
      }

      try {
        instance = JSON.parse(instance).TopicName;
      } catch (error) {// console.log();
      }

      return instance;
    };

    $scope.onExtraFieldChange = function (field) {
      $scope.onRefresh();
    };

    $scope.getExtraDropdown = function (target, field) {
      return __awaiter(_this, void 0, void 0, function () {
        var TopicName, data, region, fetcher, datas;
        return __generator(this, function (_a) {
          switch (_a.label) {
            case 0:
              if (!(field === 'subscriptionId')) return [3
              /*break*/
              , 3];
              TopicName = $scope.getTopicName();
              data = $scope.cacheMap[TopicName];
              if (!!data) return [3
              /*break*/
              , 2];
              region = $scope.datasource.getServiceFn('cmqTopic', 'getVariable')(target.region);
              fetcher = $scope.datasource.getServiceFn('cmqTopic', 'fetchAllSubscription');
              return [4
              /*yield*/
              , fetcher(region, {
                TopicName: TopicName
              })];

            case 1:
              datas = _a.sent();
              data = datas.map(function (item) {
                item._InstanceAliasValue = item.SubscriptionId;
                return {
                  text: item.SubscriptionId,
                  value: JSON.stringify(item)
                };
              });
              _a.label = 2;

            case 2:
              // 缓存
              $scope.cacheMap[TopicName] = data;
              return [2
              /*return*/
              , data];

            case 3:
              return [2
              /*return*/
              , []];
          }
        });
      });
    };

    $scope.init();
  }

  return CmqTopicQueryCtrl;
}();


var template = "\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/406/42637\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in InstanceQueryDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- \u4E3B\u9898\u7684ui -->\n  <div ng-if=\"target.instance\">\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"true\" get-options=\"getExtraDropdown(target, extra.field)\"\n            on-change=\"onExtraFieldChange(extra.field)\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  </div>\n";
function scfQuery() {
  return {
    template: template,
    controller: CmqTopicQueryCtrl,
    restrict: 'E',
    scope: {
      target: '=',
      showDetail: '=',
      region: '=',
      datasource: '=',
      getDropdownOptions: '&',
      onChange: '&',
      onRefresh: '&',
      dims: '='
    }
  };
}
grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default.a.directive('cmqTopicQuery', scfQuery);

/***/ }),

/***/ "./datasource/tc_monitor/cmq_topic/query_def.ts":
/*!******************************************************!*\
  !*** ./datasource/tc_monitor/cmq_topic/query_def.ts ***!
  \******************************************************/
/*! exports provided: InstanceQueryDescriptor, InvalidDemensions, templateQueryIdMap, InstanceAliasList, GetInstanceQueryParams, queryMonitorExtraConfg, keyInStorage, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InstanceQueryDescriptor", function() { return InstanceQueryDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InvalidDemensions", function() { return InvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InstanceAliasList", function() { return InstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryMonitorExtraConfg", function() { return queryMonitorExtraConfg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keyInStorage", function() { return keyInStorage; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);

var InstanceQueryDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputNumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为10，最小值为1，最大值为100',
  link: '',
  type: 'inputNumber',
  min: 1,
  max: 50
}, {
  key: 'TopicName',
  enDescriptor: 'TopicName',
  cnDescriptor: '精确匹配TopicName',
  link: '',
  type: 'input'
}, {
  key: 'TagKey',
  enDescriptor: 'TagKey',
  cnDescriptor: '标签搜索',
  link: '',
  type: 'input'
}];

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  var params = {};

  if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(queries)) {
    params.Limit = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Limit', 20) || 20;
    params.Offset = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Offset', 0) || 0;
    queries = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.omit(queries, ['Offset', 'Limit']);

    lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(queries, function (item, key) {
      if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(item)) {
        item = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(item);

        if (item.length > 0) {
          params[key] = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(item);
        }
      } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(item)) {
        if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNumber(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', undefined)) || !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', undefined))) {
          params[key] = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value');
        }
      } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNumber(item) || !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(item)) {
        params[key] = item;
      }
    });
  }

  return params;
} // 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key


var InvalidDemensions = {
  topicId: 'TopicId'
}; // 因为cmq那边，以TopciName为主键

var templateQueryIdMap = {
  instance: 'TopicName',
  subscription: 'SubscriptionId'
}; // 需要缓存到storage的内容的key列表

var keyInStorage = {
  subscriptionId: 'subscriptionId'
};
/*
如果有InstanceId额外的维度，原则上都需要传入此map结构配置
key的含义：
  经过InvalidDemensions处理后的string。topicId =》TopicId。
  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId
value的含义：
  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、
  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。
                    默认取通过InvalidDemsion处理后的key
  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。
                    即：templateQueryIdMap中内容。
                    联合上面2的内容筛选出原始sourceMap
*/

var queryMonitorExtraConfg = {
  subscriptionId: {
    dim_KeyInStorage: keyInStorage.subscriptionId,
    dim_KeyInTarget: 'subscriptionId',
    dim_KeyInMap: templateQueryIdMap.subscription
  }
}; // 与名称挂钩的变量

var InstanceAliasList = ['TopicName', 'TopicId'];
 // 界面状态模型，default

/* harmony default export */ __webpack_exports__["default"] = ({
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'TopicName',
  subscriptionId: '',
  queries: {
    Offset: 0,
    Limit: 20,
    TopicName: '',
    TagKey: ''
  }
});

/***/ }),

/***/ "./datasource/tc_monitor/cos/datasource.ts":
/*!*************************************************!*\
  !*** ./datasource/tc_monitor/cos/datasource.ts ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};



var CosDatasource =
/** @class */
function (_super) {
  __extends(CosDatasource, _super);

  function CosDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.InvalidDimensions = {};
    _this.InstanceAliasList = ['BucketName'];
    _this.templateQueryIdMap = {
      instance: 'BucketName'
    };
    _this.InstanceReqConfig = {}; // 不必要的配置

    _this.cosURL = "/api/datasources/".concat(_this.instanceSettings.id, "/resources/tc_cos_list");
    return _this;
  }

  CosDatasource.prototype.getInstances = function (region) {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function (_a) {
        return [2
        /*return*/
        , this.backendSrv.datasourceRequest({
          url: this.cosURL,
          method: 'GET',
          params: {
            region: region
          },
          headers: {
            'Content-Type': 'application/json'
          }
        }).then(function (res) {
          var data = res.data;
          data = data || {};
          var Buckets = data.Buckets;
          Buckets = Buckets || []; // name contains appid，see detail https://cloud.tencent.com/document/product/436/8291

          return Buckets.map(function (item) {
            return __assign(__assign({}, item), {
              BucketName: item.Name,
              bucket: item.Name,
              appid: item.Name.split('-').slice(-1)[0]
            });
          });
        })];
      });
    });
  };

  CosDatasource.prototype.getVariableInstances = function (region) {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function (_a) {
        return [2
        /*return*/
        , this.getInstances(region)];
      });
    });
  };

  return CosDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_0__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (CosDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/cos/query_def.ts":
/*!************************************************!*\
  !*** ./datasource/tc_monitor/cos/query_def.ts ***!
  \************************************************/
/*! exports provided: InstanceAliasList, GetInstanceQueryParams, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InstanceAliasList", function() { return InstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);


function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  var params = {};

  if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(queries)) {
    params.Limit = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Limit', 20) || 20;
    params.Offset = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Offset', 0) || 0;
    queries = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.omit(queries, ['Offset', 'Limit']);

    lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(queries, function (item, key) {
      if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(item)) {
        item = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(item);

        if (item.length > 0) {
          params[key] = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(item);
        }
      } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(item)) {
        if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNumber(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', undefined)) || !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', undefined))) {
          params[key] = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value');
        }
      } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNumber(item) || !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(item)) {
        params[key] = item;
      }
    });
  }

  return params;
} // 与名称挂钩的变量


var InstanceAliasList = ['BucketName'];
 // 界面状态模型，default

/* harmony default export */ __webpack_exports__["default"] = ({
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'BucketName',
  queries: {}
});

/***/ }),

/***/ "./datasource/tc_monitor/cpm/datasource.ts":
/*!*************************************************!*\
  !*** ./datasource/tc_monitor/cpm/datasource.ts ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/cpm/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../locale */ "./locale/index.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};







var DCDatasource =
/** @class */
function (_super) {
  __extends(DCDatasource, _super);

  function DCDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = _query_def__WEBPACK_IMPORTED_MODULE_0__["namespace"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["CPMInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["CPMInvalidDemensions"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_0__["templateQueryIdMap"]; // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致

    _this.InstanceReqConfig = {
      service: 'bm',
      action: 'DescribeDevices',
      responseField: 'DeviceInfoSet'
    };
    _this.RegionMap = {};
    return _this;
  } // 重写getRegion


  DCDatasource.prototype.getRegions = function () {
    var _this = this;

    return this.doRequest({
      url: this.url + '/bm'
    }, 'bm', {
      action: 'DescribeRegions',
      region: 'ap-guangzhou'
    }).then(function (response) {
      // 缓存，后面获取可用区zone
      _this.RegionMap = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.keyBy(response.RegionInfoSet, 'Region');
      return lodash__WEBPACK_IMPORTED_MODULE_3___default.a.map(response.RegionInfoSet || [], function (item) {
        return {
          text: Object(_locale__WEBPACK_IMPORTED_MODULE_4__["t"])(item.Region),
          value: item.Region
        };
      });
    });
  };

  DCDatasource.prototype.getMetrics = function (region) {
    if (region === void 0) {
      region = 'ap-guangzhou';
    }

    return __awaiter(this, void 0, void 0, function () {
      var rawSet;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , _super.prototype.getMetrics.call(this, region)];

          case 1:
            rawSet = _a.sent();
            return [2
            /*return*/
            , rawSet.map(function (item) {
              return Object(_query_def__WEBPACK_IMPORTED_MODULE_0__["modifyDimensons"])(item);
            })];
        }
      });
    });
  };

  DCDatasource.prototype.getFilterDropdown = function (_a) {
    var field = _a.field,
        region = _a.region;

    if (field === 'DeviceClassCode') {
      var serviceInfo = Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["GetServiceAPIInfo"])(region, 'bm');
      return this.doRequest({
        url: this.url + serviceInfo.path
      }, 'bm', {
        region: region,
        action: 'DescribeDeviceClass'
      }).then(function (response) {
        return lodash__WEBPACK_IMPORTED_MODULE_3___default.a.map(response.DeviceClassSet || [], function (item) {
          return {
            text: item.DeviceClassCode,
            value: item.DeviceClassCode
          };
        });
      });
    }

    return [];
  };

  return DCDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (DCDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/cpm/query.ts":
/*!********************************************!*\
  !*** ./datasource/tc_monitor/cpm/query.ts ***!
  \********************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _base_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_base/query */ "./datasource/tc_monitor/_base/query.ts");
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/cpm/query_def.ts");


Object(_base_query__WEBPACK_IMPORTED_MODULE_0__["default"])(_query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorName"], _query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorConfig"]);

/***/ }),

/***/ "./datasource/tc_monitor/cpm/query_def.ts":
/*!************************************************!*\
  !*** ./datasource/tc_monitor/cpm/query_def.ts ***!
  \************************************************/
/*! exports provided: default, CPMFilterFieldsDescriptor, templateQueryIdMap, CPMInstanceAliasList, CPMInvalidDemensions, namespace, queryEditorName, queryEditorConfig, modifyDimensons, CPMGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CPMFilterFieldsDescriptor", function() { return CPMFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CPMInstanceAliasList", function() { return CPMInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CPMInvalidDemensions", function() { return CPMInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorName", function() { return queryEditorName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorConfig", function() { return queryEditorConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modifyDimensons", function() { return modifyDimensons; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CPMGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);


var namespace = 'QCE/CPM'; // 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称

var queryEditorName = 'cpmQuery';
var CPMInvalidDemensions = {
  instanceId: 'InstanceId' // uniqid: 'InstanceId',

};
var CPMInstanceAliasList = ['InstanceId', 'Name'];
var templateQueryIdMap = {
  instance: 'InstanceId'
}; // select类型需要注意是{},multi后缀是[],dropdown是''

var CPMFilterFields = {
  Limit: 20,
  Offset: 0,
  DeviceClassCode: '',
  InstanceIds: [],
  WanIps: [],
  LanIps: [],
  Alias: '',
  VagueIp: '',
  AutoRenewFlag: {},
  VpcId: '',
  SubnetId: '',
  DeviceType: {},
  IsLuckyDevice: {}
};
var CPMFilterFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputNumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputNumber',
  min: 1,
  max: 100
}, {
  key: 'DeviceClassCode',
  enDescriptor: 'DeviceClassCode',
  cnDescriptor: '机型ID',
  link: '',
  type: 'dropdown'
}, {
  key: 'InstanceIds',
  enDescriptor: 'InstanceIds',
  cnDescriptor: '设备ID数组',
  link: '',
  type: 'inputMulti'
}, {
  key: 'WanIps',
  enDescriptor: 'WanIps',
  cnDescriptor: '外网IP数组',
  link: '',
  type: 'inputMulti'
}, {
  key: 'LanIps',
  enDescriptor: 'LanIps',
  cnDescriptor: '内网IP数组',
  link: '',
  type: 'inputMulti'
}, {
  key: 'Alias',
  enDescriptor: 'Alias',
  cnDescriptor: '设备名称',
  link: '',
  type: 'input'
}, {
  key: 'VagueIp',
  enDescriptor: 'VagueIp',
  cnDescriptor: '模糊IP查询',
  link: '',
  type: 'input'
}, {
  key: 'AutoRenewFlag',
  enDescriptor: 'AutoRenewFlag',
  cnDescriptor: '自动续费标志',
  link: '',
  type: 'select',
  list: [{
    text: '不自动续费',
    value: 0
  }, {
    text: '自动续费',
    value: 1
  }]
}, {
  key: 'VpcId',
  enDescriptor: 'VpcId',
  cnDescriptor: '私有网络唯一ID',
  link: '',
  type: 'input'
}, {
  key: 'SubnetId',
  enDescriptor: 'SubnetId',
  cnDescriptor: '子网唯一ID',
  link: '',
  type: 'input'
}, {
  key: 'DeviceType',
  enDescriptor: 'DeviceType',
  cnDescriptor: '子网实例ID',
  link: '',
  type: 'select',
  list: [{
    text: '计算型',
    value: 'compute'
  }, {
    text: '标准型',
    value: 'standard'
  }, {
    text: '存储型',
    value: 'storage'
  }]
}, {
  key: 'IsLuckyDevice',
  enDescriptor: 'IsLuckyDevice',
  cnDescriptor: '竞价实例机器过滤',
  link: '',
  type: 'select',
  list: [{
    text: '非竞价实例机器',
    value: 0
  }, {
    text: '竞价实例的机器',
    value: 1
  }]
}]; // 各产品实例列表detail配置

var queryEditorConfig = {
  instanceDocUrl: 'https://cloud.tencent.com/document/api/386/32904',
  namespace: namespace,
  fieldDescriptor: CPMFilterFieldsDescriptor
};
var CPM_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'InstanceId',
  queries: CPMFilterFields
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  return Object(_common_utils__WEBPACK_IMPORTED_MODULE_0__["instanceQueryParamsBaseParse"])(queries, false);
}

function modifyDimensons(metricItem) {
  var metricTmp = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.cloneDeep(metricItem);

  metricTmp.Dimensions.forEach(function (item) {
    item.Dimensions = ['instanceId'];
  });
  return metricTmp;
}

/* harmony default export */ __webpack_exports__["default"] = (CPM_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/cvm/datasource.ts":
/*!*************************************************!*\
  !*** ./datasource/tc_monitor/cvm/datasource.ts ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/cvm/query_def.ts");
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};






var CVMDatasource =
/** @class */
function (_super) {
  __extends(CVMDatasource, _super);

  function CVMDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = 'QCE/CVM';
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_1__["CVMInstanceAliasList"];
    _this.InvalidDimensions = {};
    _this.templateQueryIdMap = {
      instance: 'InstanceId'
    };
    _this.InstanceReqConfig = {
      service: 'cvm',
      action: 'DescribeInstances',
      responseField: 'InstanceSet'
    };
    return _this;
  }

  CVMDatasource.prototype.getMetrics = function (region) {
    if (region === void 0) {
      region = 'ap-guangzhou';
    }

    return __awaiter(this, void 0, void 0, function () {
      var rawSet;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , _super.prototype.getMetrics.call(this, region)];

          case 1:
            rawSet = _a.sent();
            return [2
            /*return*/
            , lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(rawSet.map(function (item) {
              if (Object(_query_def__WEBPACK_IMPORTED_MODULE_1__["isValidMetric"])(item)) {
                return Object(_query_def__WEBPACK_IMPORTED_MODULE_1__["modifyDimensons"])(item);
              }

              return null;
            }))];
        }
      });
    });
  };

  CVMDatasource.prototype.getRegions = function () {
    return this.doRequest({
      url: this.url + '/api',
      data: {
        Product: 'cvm'
      }
    }, 'api', {
      action: 'DescribeRegions'
    }).then(function (response) {
      return lodash__WEBPACK_IMPORTED_MODULE_0___default.a.filter(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.map(response.RegionSet || [], function (item) {
        return {
          text: item.RegionName,
          value: item.Region,
          RegionState: item.RegionState
        };
      }), function (item) {
        return item.RegionState === 'AVAILABLE';
      });
    });
  };

  CVMDatasource.prototype.getZones = function (region) {
    var serviceInfo = Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["GetServiceAPIInfo"])(region, 'api');
    return this.doRequest({
      url: this.url + serviceInfo.path,
      data: {
        Product: 'cvm'
      }
    }, serviceInfo.service, {
      region: region,
      action: 'DescribeZones'
    }).then(function (response) {
      return lodash__WEBPACK_IMPORTED_MODULE_0___default.a.filter(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.map(response.ZoneSet || [], function (item) {
        return {
          text: item.ZoneName,
          value: item.Zone,
          ZoneState: item.ZoneState,
          Zone: item.Zone
        };
      }), function (item) {
        return item.ZoneState === 'AVAILABLE';
      });
    });
  };

  return CVMDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_3__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (CVMDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/cvm/query.ts":
/*!********************************************!*\
  !*** ./datasource/tc_monitor/cvm/query.ts ***!
  \********************************************/
/*! exports provided: CVMQueryCtrl, cvmQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CVMQueryCtrl", function() { return CVMQueryCtrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cvmQuery", function() { return cvmQuery; });
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grafana/app/core/core_module */ "grafana/app/core/core_module");
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/cvm/query_def.ts");



var CVMQueryCtrl =
/** @class */
function () {
  CVMQueryCtrl.$inject = ["$scope", "$rootScope"];

  /** @ngInject */
  function CVMQueryCtrl($scope, $rootScope) {
    $scope.init = function () {
      $scope.CVMFilterFieldsDescriptor = _query_def__WEBPACK_IMPORTED_MODULE_1__["CVMFilterFieldsDescriptor"];
    };

    $scope.onChecked = function (srcField, dstField) {
      if ($scope.target.queries[srcField] === true) {
        $scope.target.queries[dstField] = false;
      }

      $scope.onChange();
    };

    $scope.getDropdown = function (field) {
      switch (field) {
        case 'zone':
          return $scope.getZones();

        default:
          return [];
      }
    };

    $scope.getZones = function () {
      if (!$scope.region) {
        return [];
      }

      return $scope.datasource.getZones('cvm', $scope.region);
    };

    $scope.init();
  }

  return CVMQueryCtrl;
}();


var template = "\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/213/15728\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        \u504F\u79FB\u91CF, \u4F8B\u5982Offset=20&Limit=20 \u8FD4\u56DE\u7B2C 20 \u5230 40 \u9879\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        \u5355\u6B21\u8BF7\u6C42\u8FD4\u56DE\u7684\u6570\u91CF\uFF0C\u9ED8\u8BA4\u4E3A20\uFF0C\u6700\u5C0F\u503C\u4E3A1\uFF0C\u6700\u5927\u503C\u4E3A100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      InstanceIds\n      <info-popover mode=\"right-normal\">\n        \u5B9E\u4F8B ID\uFF0C\u6BCF\u6B21\u8BF7\u6C42\u7684\u5B9E\u4F8B\u7684\u4E0A\u9650\u4E3A100\uFF0C\u53C2\u6570\u4E0D\u652F\u6301\u540C\u65F6\u6307\u5B9A InstanceIds \u548C Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n      switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n  <multi-condition type=\"'input'\" max-cond=\"100\" value=\"target.queries.InstanceIds\" on-change=\"onChange()\">\n  </multi-condition>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      Filters\n      <info-popover mode=\"right-normal\">\n        \u8FC7\u6EE4\u6761\u4EF6\uFF0C\u6BCF\u6B21\u8BF7\u6C42\u7684 Filters \u7684\u4E0A\u9650\u4E3A10\uFF0CFilter.Values \u7684\u4E0A\u9650\u4E3A5\u3002\u53C2\u6570\u4E0D\u652F\u6301\u540C\u65F6\u6307\u5B9A InstanceIds \u548C Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n      on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n  <div class=\"gf-form-inline\" ng-repeat=\"field in CVMFilterFieldsDescriptor\">\n    <label class=\"gf-form-label width-14\">\n      {{ field.key }}\n      <info-popover mode=\"right-normal\">\n        {{ field.cnDescriptor }}\n        <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n      </info-popover>\n    </label>\n    <multi-condition\n      ng-if=\"field.type === 'dropdownmulti'\"\n      type=\"'dropdown'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      get-options=\"getDropdown(field.key)\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputNumbermulti'\"\n      type=\"'inputNumber'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      maxNum=\"field.max\"\n      minNum=\"field.min\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputmulti'\"\n      type=\"'input'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <custom-select-dropdown\n      ng-if=\"field.type === 'select'\"\n      value=\"target.queries.Filters[field.key]\"\n      options=\"field.list\"\n      multiple=\"true\"\n      on-change=\"onChange()\"\n    ></custom-select-dropdown>\n  </div>\n</div>\n\n</div>\n";
function cvmQuery() {
  return {
    template: template,
    controller: CVMQueryCtrl,
    restrict: 'E',
    scope: {
      target: '=',
      showDetail: '=',
      region: '=',
      datasource: '=',
      getDropdownOptions: '&',
      onChange: '&'
    }
  };
}
grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default.a.directive('cvmQuery', cvmQuery);

/***/ }),

/***/ "./datasource/tc_monitor/cvm/query_def.ts":
/*!************************************************!*\
  !*** ./datasource/tc_monitor/cvm/query_def.ts ***!
  \************************************************/
/*! exports provided: default, CVMFilterFieldsDescriptor, CVMInstanceAliasList, isValidMetric, modifyDimensons, templateQueryIdMap, CVMGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CVMFilterFieldsDescriptor", function() { return CVMFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CVMInstanceAliasList", function() { return CVMInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isValidMetric", function() { return isValidMetric; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modifyDimensons", function() { return modifyDimensons; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CVMGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};


var instanceChargeTypes = [{
  text: '预付费',
  value: 'PREPAID'
}, {
  text: '后付费',
  value: 'POSTPAID_BY_HOUR'
}, {
  text: 'CDH付费',
  value: 'CDHPAID'
}];
var CVMFilterFields = {
  zone: [],
  'project-id': [],
  'host-id': [],
  'vpc-id': [],
  'subnet-id': [],
  'instance-id': [],
  'security-group-id': [],
  'instance-name': [],
  'instance-charge-type': {},
  'private-ip-address': [],
  'public-ip-address': [],
  'tag-key': []
};
var CVMFilterFieldsDescriptor = [{
  key: 'zone',
  enDescriptor: 'Zone',
  cnDescriptor: '可用区',
  link: '',
  type: 'dropdownmulti'
}, {
  key: 'project-id',
  enDescriptor: 'Project ID',
  cnDescriptor: '项目ID',
  link: 'https://cloud.tencent.com/document/api/378/4400',
  type: 'inputNumbermulti'
}, {
  key: 'host-id',
  enDescriptor: 'CDH ID',
  cnDescriptor: 'CDH ID',
  link: 'https://cloud.tencent.com/document/product/416/19730',
  type: 'inputmulti'
}, {
  key: 'vpc-id',
  enDescriptor: 'VPC ID',
  cnDescriptor: 'VPC ID',
  link: '',
  type: 'inputmulti'
}, {
  key: 'subnet-id',
  enDescriptor: 'Subnet ID',
  cnDescriptor: '子网ID',
  link: '',
  type: 'inputmulti'
}, {
  key: 'instance-id',
  enDescriptor: 'Instance ID',
  cnDescriptor: '实例ID',
  link: '',
  type: 'inputmulti'
}, {
  key: 'security-group-id',
  enDescriptor: 'Security Group ID',
  cnDescriptor: '安全组ID',
  link: '',
  type: 'inputmulti'
}, {
  key: 'instance-name',
  enDescriptor: 'Instance Name',
  cnDescriptor: '实例名称',
  link: '',
  type: 'inputmulti'
}, {
  key: 'tag-key',
  enDescriptor: '标签简',
  cnDescriptor: '标签简',
  link: '',
  type: 'inputmulti'
}, {
  key: 'instance-charge-type',
  enDescriptor: 'Instance Charge Type',
  cnDescriptor: '实例计费模式',
  link: '',
  type: 'select',
  list: instanceChargeTypes
}, {
  key: 'private-ip-address',
  enDescriptor: 'Private IP Address',
  cnDescriptor: '实例主网卡的内网IP',
  link: '',
  type: 'inputmulti'
}, {
  key: 'public-ip-address',
  enDescriptor: 'Public IP Address',
  cnDescriptor: '实例主网卡的公网IP，包含实例创建时自动分配的IP和实例创建后手动绑定的弹性IP',
  link: '',
  type: 'inputmulti'
}];
var CVM_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'InstanceId',
  queries: {
    Limit: 20,
    Offset: 0,
    instanceIdsChecked: false,
    filtersChecked: false,
    InstanceIds: [''],
    Filters: __assign({}, CVMFilterFields)
  }
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  var params = {};

  if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(queries)) {
    params.Limit = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Limit', 20) || 20;
    params.Offset = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Offset', 0) || 0;

    if (queries.instanceIdsChecked) {
      if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(queries.InstanceIds)) {
        var InstanceIds = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(queries.InstanceIds);

        if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(InstanceIds).length > 0) {
          params.InstanceIds = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(InstanceIds).slice(0, 100);
        }
      }
    } else if (queries.filtersChecked) {
      var Filters_1 = [];

      lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(queries.Filters, function (item, key) {
        if (Filters_1.length > 9) {
          return;
        }

        if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(item)) {
          item = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(item);

          if (item.length > 0) {
            Filters_1.push({
              Name: key,
              Values: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(item).slice(0, 5)
            });
          }
        } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(item)) {
          if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', []))) {
            Filters_1.push({
              Name: key,
              Values: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', []).slice(0, 5)
            });
          }
        }
      });

      if (Filters_1.length > 0) {
        params.Filters = Filters_1;
      }
    }
  }

  return params;
}

var CVMInstanceAliasList = ['InstanceId', 'InstanceName', 'PrivateIpAddresses', 'PublicIpAddresses'];
var CVMValidMetricsT = ['CPUUsage', 'CpuLoadavg', 'Cpuloadavg5m', 'Cpuloadavg15m', 'BaseCpuUsage', 'GpuMemTotal', 'GpuMemUsage', 'GpuMemUsed', 'GpuPowDraw', 'GpuPowLimit', 'GpuPowUsage', 'GpuTemp', 'GpuUtil', 'LanOuttraffic', 'LanIntraffic', 'LanOutpkg', 'LanInpkg', 'WanOuttraffic', 'WanIntraffic', 'WanOutpkg', 'WanInpkg', 'AccOuttraffic', 'TcpCurrEstab', 'TimeOffset', 'MemUsed', 'MemUsage', 'CvmDiskUsage', 'BaseCpuUsage', 'VmDiskReadIops']; // const CVMInvalidDemensions = {
//   'vm_uuid': 'InstanceId',
//   'vmUuid': 'InstanceId',
// };

var templateQueryIdMap = {
  instance: 'InstanceId'
};

function isValidMetric(metric) {
  var CVMValidMetrics = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.map(CVMValidMetricsT, lodash__WEBPACK_IMPORTED_MODULE_0___default.a.toUpper);

  return lodash__WEBPACK_IMPORTED_MODULE_0___default.a.indexOf(CVMValidMetrics, lodash__WEBPACK_IMPORTED_MODULE_0___default.a.toUpper(metric.MetricName)) !== -1;
}

function modifyDimensons(metricItem) {
  var metricTmp = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.cloneDeep(metricItem);

  metricTmp.Dimensions.forEach(function (item) {
    item.Dimensions = ['InstanceId'];
  });
  return metricTmp;
}

/* harmony default export */ __webpack_exports__["default"] = (CVM_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/cynosdb_mysql/datasource.ts":
/*!***********************************************************!*\
  !*** ./datasource/tc_monitor/cynosdb_mysql/datasource.ts ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/cynosdb_mysql/query_def.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};



 // import { t } from '../../../locale';

var CYNOSDBMYSQLDatasource =
/** @class */
function (_super) {
  __extends(CYNOSDBMYSQLDatasource, _super);

  function CYNOSDBMYSQLDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = _query_def__WEBPACK_IMPORTED_MODULE_0__["namespace"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["CYNOSDBMYSQLInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["CYNOSDBInvalidDemensions"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_0__["templateQueryIdMap"];
    _this.checkKeys = _query_def__WEBPACK_IMPORTED_MODULE_0__["checkKeys"]; // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致

    _this.InstanceReqConfig = {
      service: 'cynosdb',
      action: 'DescribeInstances',
      responseField: 'InstanceSet'
    };
    return _this;
  }

  CYNOSDBMYSQLDatasource.prototype.getMetrics = function (region) {
    if (region === void 0) {
      region = 'ap-guangzhou';
    }

    return __awaiter(this, void 0, void 0, function () {
      var rawSet;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , _super.prototype.getMetrics.call(this, region)];

          case 1:
            rawSet = _a.sent();
            return [2
            /*return*/
            , rawSet.map(function (item) {
              return Object(_query_def__WEBPACK_IMPORTED_MODULE_0__["modifyDimensons"])(item);
            })];
        }
      });
    });
  }; // getRegions() {
  //   return Promise.resolve(regionSupported.map(({ value }) => ({ value, text: t(value) })));
  // }


  CYNOSDBMYSQLDatasource.prototype.getRegions = function () {
    return this.doRequest({
      url: this.url + '/api',
      data: {
        Product: 'cynosdbmysql'
      }
    }, 'api', {
      action: 'DescribeRegions'
    }).then(function (response) {
      return lodash__WEBPACK_IMPORTED_MODULE_1___default.a.filter(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.map(response.RegionSet || [], function (item) {
        return {
          text: item.RegionName,
          value: item.Region,
          RegionState: item.RegionState
        };
      }), function (item) {
        return item.RegionState === 'AVAILABLE';
      });
    });
  }; // 仅对维度组合是InstanceId的指标，其他指标不支持


  CYNOSDBMYSQLDatasource.prototype.getDefaultInsObj = function (ins) {
    var _a;

    return _a = {}, _a[_query_def__WEBPACK_IMPORTED_MODULE_0__["templateQueryIdMap"].instance] = ins, _a;
  };

  return CYNOSDBMYSQLDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_2__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (CYNOSDBMYSQLDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/cynosdb_mysql/query.ts":
/*!******************************************************!*\
  !*** ./datasource/tc_monitor/cynosdb_mysql/query.ts ***!
  \******************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _base_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_base/query */ "./datasource/tc_monitor/_base/query.ts");
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/cynosdb_mysql/query_def.ts");


Object(_base_query__WEBPACK_IMPORTED_MODULE_0__["default"])(_query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorName"], _query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorConfig"]);

/***/ }),

/***/ "./datasource/tc_monitor/cynosdb_mysql/query_def.ts":
/*!**********************************************************!*\
  !*** ./datasource/tc_monitor/cynosdb_mysql/query_def.ts ***!
  \**********************************************************/
/*! exports provided: default, cynosdbMysqlFilterFieldsDescriptor, templateQueryIdMap, CYNOSDBMYSQLInstanceAliasList, CYNOSDBInvalidDemensions, namespace, queryEditorName, queryEditorConfig, regionSupported, modifyDimensons, checkKeys, CYNOSDBMYSQLGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cynosdbMysqlFilterFieldsDescriptor", function() { return cynosdbMysqlFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CYNOSDBMYSQLInstanceAliasList", function() { return CYNOSDBMYSQLInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CYNOSDBInvalidDemensions", function() { return CYNOSDBInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorName", function() { return queryEditorName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorConfig", function() { return queryEditorConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "regionSupported", function() { return regionSupported; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modifyDimensons", function() { return modifyDimensons; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checkKeys", function() { return checkKeys; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CYNOSDBMYSQLGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");


var namespace = 'QCE/CYNOSDB_MYSQL'; // 按照驼峰方式命名，和SERVICES保持一致，abcDeF会成为angular组件名字<abc-de-f-query />

var queryEditorName = 'cynosdbMysqlQuery';
var cynosdbMysqlFilterFields = {
  Limit: 20,
  Offset: 0,
  OrderBy: {},
  OrderByType: {},
  InstanceIds: [],
  DbType: {} // Status: '',

};
var cynosdbMysqlFilterFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputNumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputNumber',
  min: 1,
  max: 1000
}, {
  key: 'InstanceIds',
  enDescriptor: 'InstanceIds',
  cnDescriptor: '实例id列表',
  link: '',
  type: 'inputMulti'
}, {
  key: 'OrderBy',
  enDescriptor: 'OrderBy',
  cnDescriptor: '排序字段',
  link: '',
  type: 'select',
  list: [{
    text: '创建时间',
    value: 'CREATETIME'
  }, {
    text: '过期时间',
    value: 'PERIODENDTIME'
  }]
}, {
  key: 'OrderByType',
  enDescriptor: 'OrderByType',
  cnDescriptor: '排序类型',
  link: '',
  type: 'select',
  list: [{
    text: '升序',
    value: 'ASC'
  }, {
    text: '降序',
    value: 'DESC'
  }]
}, {
  key: 'DbType',
  enDescriptor: 'DbType',
  cnDescriptor: '引擎类型',
  link: '',
  type: 'select',
  list: [{
    text: 'MYSQL',
    value: 'MYSQL'
  }, {
    text: 'POSTGRESQL',
    value: 'POSTGRESQL'
  }]
} // {
//   key: 'Status',
//   enDescriptor: 'Status',
//   cnDescriptor: '实例状态',
//   link: '',
//   type: 'input',
// },
]; // regions for dropdown

var regionSupported = [{
  value: 'ap-beijing'
}, {
  value: 'ap-guangzhou'
}, {
  value: 'ap-nanjing'
}, {
  value: 'ap-shanghai'
}];
var queryEditorConfig = {
  instanceDocUrl: 'https://cloud.tencent.com/document/api/1003/48334',
  namespace: namespace,
  fieldDescriptor: cynosdbMysqlFilterFieldsDescriptor
};
var CYNOSDB_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'InstanceId',
  queries: cynosdbMysqlFilterFields
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  return Object(_common_utils__WEBPACK_IMPORTED_MODULE_1__["instanceQueryParamsBaseParse"])(queries, false);
} // 和文件名字一样CYNOSDBMYSQL


var CYNOSDBMYSQLInstanceAliasList = ['InstanceId', 'InstanceName'];
var templateQueryIdMap = {
  instance: 'InstanceId'
};
var CYNOSDBInvalidDemensions = {
  instanceid: 'InstanceId',
  instanceId: 'InstanceId'
};
var checkKeys = ['instanceId'];

function modifyDimensons(metricItem) {
  var metricTmp = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.cloneDeep(metricItem);

  metricTmp.Dimensions.forEach(function (item) {
    item.Dimensions = ['InstanceId'];
  });
  return metricTmp;
}

/* harmony default export */ __webpack_exports__["default"] = (CYNOSDB_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/dc/datasource.ts":
/*!************************************************!*\
  !*** ./datasource/tc_monitor/dc/datasource.ts ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/dc/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};




var DCDatasource =
/** @class */
function (_super) {
  __extends(DCDatasource, _super);

  function DCDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = _query_def__WEBPACK_IMPORTED_MODULE_0__["namespace"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["DCInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["DCInvalidDemensions"];
    _this.templateQueryIdMap = {
      instance: 'DirectConnectId'
    };
    _this.InstanceReqConfig = {
      service: 'dc',
      action: 'DescribeDirectConnects',
      responseField: 'DirectConnectSet'
    };
    return _this;
  }

  DCDatasource.prototype.getMetrics = function (region) {
    if (region === void 0) {
      region = 'ap-guangzhou';
    }

    return __awaiter(this, void 0, void 0, function () {
      var rawSet;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , _super.prototype.getMetrics.call(this, region)];

          case 1:
            rawSet = _a.sent();
            return [2
            /*return*/
            , rawSet.map(function (item) {
              return Object(_query_def__WEBPACK_IMPORTED_MODULE_0__["modifyDimensons"])(item);
            })];
        }
      });
    });
  };

  return DCDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (DCDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/dc/query.ts":
/*!*******************************************!*\
  !*** ./datasource/tc_monitor/dc/query.ts ***!
  \*******************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _base_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_base/query */ "./datasource/tc_monitor/_base/query.ts");
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/dc/query_def.ts");


Object(_base_query__WEBPACK_IMPORTED_MODULE_0__["default"])(_query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorName"], _query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorConfig"]);

/***/ }),

/***/ "./datasource/tc_monitor/dc/query_def.ts":
/*!***********************************************!*\
  !*** ./datasource/tc_monitor/dc/query_def.ts ***!
  \***********************************************/
/*! exports provided: default, DCFilterFieldsDescriptor, templateQueryIdMap, DCInstanceAliasList, DCInvalidDemensions, namespace, queryEditorName, queryEditorConfig, modifyDimensons, DCGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DCFilterFieldsDescriptor", function() { return DCFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DCInstanceAliasList", function() { return DCInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DCInvalidDemensions", function() { return DCInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorName", function() { return queryEditorName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorConfig", function() { return queryEditorConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modifyDimensons", function() { return modifyDimensons; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DCGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");


var namespace = 'QCE/DC';
var queryEditorName = 'dcQuery';
var DCFilterFields = {
  Limit: 20,
  Offset: 0,
  DirectConnectIds: []
};
var DCFilterFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputNumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputNumber',
  min: 1,
  max: 100
}, {
  key: 'DirectConnectIds',
  enDescriptor: 'DirectConnectIds',
  cnDescriptor: '物理专线 ID',
  link: '',
  type: 'inputMulti'
}];
var queryEditorConfig = {
  instanceDocUrl: 'https://cloud.tencent.com/document/api/216/34826',
  namespace: namespace,
  fieldDescriptor: DCFilterFieldsDescriptor
};
var DC_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'DirectConnectId',
  queries: DCFilterFields
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  return Object(_common_utils__WEBPACK_IMPORTED_MODULE_1__["instanceQueryParamsBaseParse"])(queries, false);
}

var DCInstanceAliasList = ['DirectConnectId', 'DirectConnectName'];
var templateQueryIdMap = {
  instance: 'DirectConnectId'
};
var DCInvalidDemensions = {
  directConnectId: 'DirectConnectId',
  directconnectid: 'DirectConnectId'
};

function modifyDimensons(metricItem) {
  var metricTmp = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.cloneDeep(metricItem);

  metricTmp.Dimensions.forEach(function (item) {
    item.Dimensions = ['directConnectId'];
  });
  return metricTmp;
}

/* harmony default export */ __webpack_exports__["default"] = (DC_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/dcdb/datasource.ts":
/*!**************************************************!*\
  !*** ./datasource/tc_monitor/dcdb/datasource.ts ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/dcdb/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");
/* harmony import */ var _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/datasourceStorage */ "./datasource/common/datasourceStorage.ts");
/* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../locale */ "./locale/index.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};









var DCDatasource =
/** @class */
function (_super) {
  __extends(DCDatasource, _super);

  function DCDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = _query_def__WEBPACK_IMPORTED_MODULE_0__["namespace"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["DCDBInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["DCDBInvalidDemensions"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_0__["templateQueryIdMap"]; // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致

    _this.InstanceReqConfig = {
      service: 'dcdb',
      action: 'DescribeDCDBInstances',
      responseField: 'Instances'
    };
    _this.keyInStorage = _query_def__WEBPACK_IMPORTED_MODULE_0__["keyInStorage"];
    _this.queryMonitorExtraConfg = _query_def__WEBPACK_IMPORTED_MODULE_0__["queryMonitorExtraConfg"];
    _this.extraActionMap = {
      DescribeDCDBShards: {
        service: 'dcdb',
        action: 'DescribeDCDBShards',
        responseField: 'Shards',
        pickKey: 'ShardInstanceId'
      },
      DescribeDCDBInstanceNodeInfo: {
        service: 'dcdb',
        action: 'DescribeDCDBInstanceNodeInfo',
        responseField: 'NodesInfo',
        pickKey: 'NodeId'
      }
    };
    return _this;
  } // 重写getRegion, 入参的region用广州


  DCDatasource.prototype.getRegions = function () {
    return this.doRequest({
      url: this.url + '/dcdb'
    }, 'dcdb', {
      action: 'DescribeDCDBSaleInfo',
      region: 'ap-guangzhou'
    }).then(function (response) {
      return lodash__WEBPACK_IMPORTED_MODULE_2___default.a.map(response.RegionList || [], function (item) {
        return {
          text: Object(_locale__WEBPACK_IMPORTED_MODULE_6__["t"])(item.Region),
          value: item.Region,
          RegionState: item.RegionState
        };
      });
    });
  };

  DCDatasource.prototype.getMetrics = function (region) {
    if (region === void 0) {
      region = 'ap-guangzhou';
    }

    return __awaiter(this, void 0, void 0, function () {
      var rawSet;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , _super.prototype.getMetrics.call(this, region)];

          case 1:
            rawSet = _a.sent();
            return [2
            /*return*/
            , lodash__WEBPACK_IMPORTED_MODULE_2___default.a.compact(rawSet.map(function (item) {
              return Object(_query_def__WEBPACK_IMPORTED_MODULE_0__["modifyDimensons"])(item);
            }))];
        }
      });
    });
  };

  DCDatasource.prototype.getConsumerList = function (params) {
    return __awaiter(this, void 0, void 0, function () {
      var region, act, payload, _a, service, action, responseField, serviceInfo, rs;

      var _this = this;

      return __generator(this, function (_b) {
        switch (_b.label) {
          case 0:
            region = params.region, act = params.action, payload = params.payload;
            _a = this.extraActionMap[act], service = _a.service, action = _a.action, responseField = _a.responseField;
            serviceInfo = Object(_common_constants__WEBPACK_IMPORTED_MODULE_3__["GetServiceAPIInfo"])(region, service);
            return [4
            /*yield*/
            , Object(_common_utils__WEBPACK_IMPORTED_MODULE_4__["fetchAllFactory"])(function (data) {
              return _this.doRequest({
                url: _this.url + serviceInfo.path,
                data: data
              }, serviceInfo.service, {
                region: region,
                action: action
              });
            }, payload, responseField)];

          case 1:
            rs = _b.sent();
            return [2
            /*return*/
            , rs[0]];
        }
      });
    });
  };

  DCDatasource.prototype.fetchMetricData = function (action, region, instance, query) {
    return __awaiter(this, void 0, void 0, function () {
      var payload, rs, pickKey_1, result;

      var _this = this;

      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            payload = {
              InstanceId: instance[this.templateQueryIdMap.instance],
              Limit: 100
            };
            if (!(Object.keys(this.extraActionMap).indexOf(action) !== -1)) return [3
            /*break*/
            , 3];
            return [4
            /*yield*/
            , this.getConsumerList({
              region: region,
              action: action,
              payload: payload
            })];

          case 1:
            rs = _a.sent();
            pickKey_1 = this.extraActionMap[action].pickKey;
            result = rs.map(function (o) {
              o._InstanceAliasValue = o[_this.templateQueryIdMap[pickKey_1]];
              return {
                text: o[_this.templateQueryIdMap[pickKey_1]],
                value: o[_this.templateQueryIdMap[pickKey_1]]
              };
            });
            return [4
            /*yield*/
            , _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_5__["default"].setExtraStorage(this.service, this.keyInStorage[pickKey_1], rs)];

          case 2:
            _a.sent();

            return [2
            /*return*/
            , result];

          case 3:
            return [2
            /*return*/
            , []];
        }
      });
    });
  };

  return DCDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (DCDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/dcdb/query.ts":
/*!*********************************************!*\
  !*** ./datasource/tc_monitor/dcdb/query.ts ***!
  \*********************************************/
/*! exports provided: QueryCtrl, sQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QueryCtrl", function() { return QueryCtrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sQuery", function() { return sQuery; });
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grafana/app/core/core_module */ "grafana/app/core/core_module");
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/dcdb/query_def.ts");
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};




var ExtraFields = [{
  label: 'nodeid',
  field: 'NodeId',
  action: 'DescribeDCDBInstanceNodeInfo'
}, {
  label: 'shardid',
  field: 'ShardId',
  action: 'DescribeDCDBShards'
}];
var dropdownTextConfig = {
  DescribeDCDBInstanceNodeInfo: 'NodeId',
  DescribeDCDBShards: 'ShardInstanceId'
};

var QueryCtrl =
/** @class */
function () {
  QueryCtrl.$inject = ["$scope", "$rootScope"];

  /** @ngInject */
  function QueryCtrl($scope, $rootScope) {
    var _this = this;

    $scope.init = function () {
      $scope.DCDBFilterFieldsDescriptor = _query_def__WEBPACK_IMPORTED_MODULE_1__["DCDBFilterFieldsDescriptor"];
      $scope.ExtraFields = ExtraFields;
      $scope.namespace = _query_def__WEBPACK_IMPORTED_MODULE_1__["namespace"];
    };

    $scope.getInstanceId = function () {
      var instance = $scope.target.instance;
      var service = Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["GetServiceFromNamespace"])($scope.namespace);
      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);

      if (!instance) {
        return '';
      }

      try {
        instance = JSON.parse(instance)[_query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"].instance];
      } catch (error) {// console.log();
      }

      return instance;
    };

    $scope.getExtraFields = function () {
      return ExtraFields.filter(function (item) {
        var _a, _b;

        return item.field in ((_a = $scope.dims) !== null && _a !== void 0 ? _a : {}) || item.label in ((_b = $scope.dims) !== null && _b !== void 0 ? _b : {});
      });
    };

    $scope.getExtraDropdown = function (target, action) {
      return __awaiter(_this, void 0, void 0, function () {
        var service, region, instanceId, payload, rs, result;
        return __generator(this, function (_a) {
          switch (_a.label) {
            case 0:
              service = Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["GetServiceFromNamespace"])($scope.namespace);
              region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);
              instanceId = $scope.getInstanceId();
              payload = {
                InstanceId: instanceId,
                Limit: 100
              };
              return [4
              /*yield*/
              , $scope.datasource.getServiceFn(service, 'getConsumerList')({
                region: region,
                action: action,
                payload: payload
              })];

            case 1:
              rs = _a.sent();
              result = rs.map(function (o) {
                o._InstanceAliasValue = o[_query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"][dropdownTextConfig[action]]];
                return {
                  text: o[_query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"][dropdownTextConfig[action]]],
                  value: JSON.stringify(o)
                };
              });
              return [2
              /*return*/
              , result];
          }
        });
      });
    };

    $scope.init();
  }

  return QueryCtrl;
}();


var template = "\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Functions are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/50388\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\" ng-repeat=\"field in DCDBFilterFieldsDescriptor\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <input\n          ng-if=\"field.type === 'inputNumber'\"\n          style=\"margin-right:2px\"\n          type=\"number\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n          ng-min=\"field.min\"\n          ng-max=\"field.max\"\n        />\n        <input\n          ng-if=\"field.type === 'input'\"\n          style=\"margin-right:2px\"\n          type=\"text\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n        />    \n        <multi-condition\n          ng-if=\"field.type === 'inputNumberMulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputMulti'\"\n          type=\"'input'\"\n          value=\"target.queries[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries[field.key]\"\n          options=\"field.list\"\n          multiple=\"field.multiple || false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n\n<!-- \u8D77\u59CB\u533A\u57DF \u76EE\u7684\u533A\u57DF\u7B49 -->\n  <div>\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(target, extra.action)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n";
function sQuery() {
  return {
    template: template,
    controller: QueryCtrl,
    restrict: 'E',
    scope: {
      target: '=',
      showDetail: '=',
      region: '=',
      datasource: '=',
      getDropdownOptions: '&',
      onChange: '&',
      onRefresh: '&',
      dims: '='
    }
  };
}
grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default.a.directive(_query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorName"], sQuery);

/***/ }),

/***/ "./datasource/tc_monitor/dcdb/query_def.ts":
/*!*************************************************!*\
  !*** ./datasource/tc_monitor/dcdb/query_def.ts ***!
  \*************************************************/
/*! exports provided: default, DCDBFilterFieldsDescriptor, templateQueryIdMap, DCDBInstanceAliasList, DCDBInvalidDemensions, namespace, queryEditorName, queryEditorConfig, regionSupported, keyInStorage, modifyDimensons, queryMonitorExtraConfg, DCDBGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DCDBFilterFieldsDescriptor", function() { return DCDBFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DCDBInstanceAliasList", function() { return DCDBInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DCDBInvalidDemensions", function() { return DCDBInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorName", function() { return queryEditorName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorConfig", function() { return queryEditorConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "regionSupported", function() { return regionSupported; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keyInStorage", function() { return keyInStorage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modifyDimensons", function() { return modifyDimensons; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryMonitorExtraConfg", function() { return queryMonitorExtraConfg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DCDBGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");


var namespace = 'QCE/TDMYSQL'; // 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称

var queryEditorName = 'dcdbQuery';
var DCDBInvalidDemensions = {
  nodeid: 'NodeId',
  instanceid: 'InstanceId',
  shardid: 'ShardInstanceId',
  ShardId: 'ShardInstanceId'
}; // 需和文件名对应

var DCDBInstanceAliasList = ['InstanceId', 'InstanceName'];
var templateQueryIdMap = {
  instance: 'InstanceId',
  NodeId: 'NodeId',
  ShardInstanceId: 'ShardInstanceId'
}; // select类型需要注意是{},multi后缀是[],dropdown是''

var DCDBFilterFields = {
  Limit: 20,
  Offset: 0,
  InstanceIds: [],
  SearchName: '',
  SearchKey: '',
  ProjectIds: [],
  // IsFilterVpc
  VpcId: '',
  SubnetId: '',
  OrderBy: {},
  OrderByType: {},
  // IsFilterExcluster: {},
  ExclusterType: {},
  ExclusterIds: [],
  FilterInstanceType: {}
};
var DCDBFilterFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputNumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputNumber',
  min: 1,
  max: 100
}, {
  key: 'InstanceIds',
  enDescriptor: 'InstanceIds',
  cnDescriptor: '实例 ID 查询',
  link: '',
  type: 'inputMulti'
}, {
  key: 'SearchName',
  enDescriptor: 'SearchName',
  cnDescriptor: '搜索的字段名,当前支持的值有：instancename、vip、all',
  link: '',
  type: 'input'
}, {
  key: 'SearchKey',
  enDescriptor: 'SearchKey',
  cnDescriptor: '搜索的关键字',
  link: '',
  type: 'input'
}, {
  key: 'ProjectIds',
  enDescriptor: 'ProjectIds',
  cnDescriptor: '按项目 ID 查询',
  link: '',
  type: 'inputNumberMulti'
}, {
  key: 'VpcId',
  enDescriptor: 'VpcId',
  cnDescriptor: '私有网络 ID',
  link: '',
  type: 'input'
}, {
  key: 'SubnetId',
  enDescriptor: 'SubnetId',
  cnDescriptor: '私有网络的子网 ID',
  link: '',
  type: 'input'
}, {
  key: 'OrderBy',
  enDescriptor: 'OrderBy',
  cnDescriptor: '排序字段',
  link: '',
  type: 'select',
  list: [{
    text: 'projectId',
    value: 'projectId'
  }, {
    text: 'createtime',
    value: 'createtime'
  }, {
    text: 'instancename',
    value: 'instancename'
  }]
}, {
  key: 'OrderByType',
  enDescriptor: 'OrderByType',
  cnDescriptor: '私有网络 ID',
  link: '',
  type: 'select',
  list: [{
    text: 'desc',
    value: 'desc'
  }, {
    text: 'asc',
    value: 'asc'
  }]
}, {
  key: 'ExclusterType',
  enDescriptor: 'ExclusterType',
  cnDescriptor: '集群类型',
  link: '',
  type: 'select',
  list: [{
    text: '非独享集群',
    value: 1
  }, {
    text: '独享集群',
    value: 2
  }, {
    text: '全部',
    value: 0
  }, {
    text: 'asc',
    value: 'asc'
  }]
}, {
  key: 'ExclusterIds',
  enDescriptor: 'ExclusterIds',
  cnDescriptor: '独享集群ID',
  link: '',
  type: 'inputMulti'
}, {
  key: 'FilterInstanceType',
  enDescriptor: 'FilterInstanceType',
  cnDescriptor: '实例类型过滤',
  link: '',
  type: 'select',
  multiple: true,
  list: [{
    text: '独享实例',
    value: 1
  }, {
    text: '主实例',
    value: 2
  }, {
    text: '灾备实例',
    value: 3
  }]
}]; // 各产品实例列表detail配置

var queryEditorConfig = {
  instanceDocUrl: 'https://cloud.tencent.com/document/api/557/16140',
  namespace: namespace,
  fieldDescriptor: DCDBFilterFieldsDescriptor
};
var DCDB_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'InstanceId',
  ShardId: '',
  NodeId: '',
  queries: DCDBFilterFields
};
var modifyMetricConf = {
  shardid: 'ShardId',
  instanceid: 'InstanceId',
  nodeid: 'NodeId'
};

function modifyDimensons(metricItem) {
  var metricTmp = Object(lodash__WEBPACK_IMPORTED_MODULE_0__["cloneDeep"])(metricItem);
  metricTmp.Dimensions.forEach(function (item) {
    item.Dimensions = item.Dimensions.map(function (v) {
      return modifyMetricConf[v] || v;
    });
  });
  return metricTmp;
}

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  var params = Object(_common_utils__WEBPACK_IMPORTED_MODULE_1__["instanceQueryParamsBaseParse"])(queries, false); // 特殊处理

  params.IsFilterVpc = false;
  params.IsFilterExcluster = false;
  if (params.VpcId || params.SubnetId) params.IsFilterVpc = true;
  if (params.ExclusterType) params.IsFilterExcluster = true;
  if (Object(lodash__WEBPACK_IMPORTED_MODULE_0__["isArray"])(params.FilterInstanceType)) params.FilterInstanceType = params.FilterInstanceType.join(',');
  return params;
} // 需要缓存到storage的内容的key列表


var keyInStorage = {
  NodeId: 'NodeId',
  ShardInstanceId: 'ShardId'
};
/*
如果有InstanceId额外的维度，原则上都需要传入此map结构配置
key的含义：
  经过InvalidDemensions处理后的string。topicId =》TopicId。
  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId
value的含义：
  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、
  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。
                    默认取通过InvalidDemsion处理后的key
  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。
                    即：templateQueryIdMap中内容。
                    联合上面2的内容筛选出原始sourceMap
*/

var queryMonitorExtraConfg = {
  NodeId: {
    dim_KeyInStorage: keyInStorage.NodeId,
    dim_KeyInTarget: 'NodeId',
    dim_KeyInMap: templateQueryIdMap.NodeId
  },
  ShardInstanceId: {
    dim_KeyInStorage: keyInStorage.ShardInstanceId,
    dim_KeyInTarget: 'ShardId',
    dim_KeyInMap: templateQueryIdMap.ShardInstanceId
  }
}; // 和其他产品的展示保持一致

var regionSupported = [{
  text: '华北地区(北京)',
  value: 'ap-beijing'
}, {
  text: '西南地区(成都)',
  value: 'ap-chengdu'
}, {
  text: '西南地区(重庆)',
  value: 'ap-chongqing'
}, {
  text: '华南地区(广州)',
  value: 'ap-guangzhou'
}, {
  text: '港澳台地区(中国香港)',
  value: 'ap-hongkong'
}, {
  text: '亚太南部(孟买)',
  value: 'ap-mumbai'
}, {
  text: '华东地区(南京)',
  value: 'ap-nanjing'
}, {
  text: '华东地区(上海)',
  value: 'ap-shanghai'
}, {
  text: '华东地区(上海金融)',
  value: 'ap-shanghai-fsi'
}, {
  text: '华南地区(深圳金融)',
  value: 'ap-shenzhen-fsi'
}, {
  text: '亚太东南(新加坡)',
  value: 'ap-singapore'
}, {
  text: '亚太东北(东京)',
  value: 'ap-tokyo'
}, {
  text: '欧洲地区(法兰克福)',
  value: 'eu-frankfurt'
}, {
  text: '美国东部(弗吉尼亚)',
  value: 'na-ashburn'
}, {
  text: '美国西部(硅谷)',
  value: 'na-siliconvalley'
}, {
  text: '北美地区(多伦多)',
  value: 'na-toronto'
}];
/* harmony default export */ __webpack_exports__["default"] = (DCDB_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/dcg/datasource.ts":
/*!*************************************************!*\
  !*** ./datasource/tc_monitor/dcg/datasource.ts ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/dcg/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();




var DCDatasource =
/** @class */
function (_super) {
  __extends(DCDatasource, _super);

  function DCDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = _query_def__WEBPACK_IMPORTED_MODULE_0__["namespace"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["DCGInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["DCGInvalidDemensions"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_0__["templateQueryIdMap"]; // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致

    _this.InstanceReqConfig = {
      service: 'vpc',
      action: 'DescribeDirectConnectGateways',
      responseField: 'DirectConnectGatewaySet'
    };
    return _this;
  }

  return DCDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (DCDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/dcg/query.ts":
/*!********************************************!*\
  !*** ./datasource/tc_monitor/dcg/query.ts ***!
  \********************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _base_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_base/query */ "./datasource/tc_monitor/_base/query.ts");
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/dcg/query_def.ts");


Object(_base_query__WEBPACK_IMPORTED_MODULE_0__["default"])(_query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorName"], _query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorConfig"]);

/***/ }),

/***/ "./datasource/tc_monitor/dcg/query_def.ts":
/*!************************************************!*\
  !*** ./datasource/tc_monitor/dcg/query_def.ts ***!
  \************************************************/
/*! exports provided: default, DCGFilterFieldsDescriptor, templateQueryIdMap, DCGInstanceAliasList, DCGInvalidDemensions, namespace, queryEditorName, queryEditorConfig, DCGGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DCGFilterFieldsDescriptor", function() { return DCGFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DCGInstanceAliasList", function() { return DCGInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DCGInvalidDemensions", function() { return DCGInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorName", function() { return queryEditorName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorConfig", function() { return queryEditorConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DCGGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");

var namespace = 'QCE/DCG';
var queryEditorName = 'dcgQuery';
var DCGInvalidDemensions = {
  directConnectGatewayId: 'DirectConnectGatewayId'
};
var DCGInstanceAliasList = ['DirectConnectGatewayId', 'DirectConnectGatewayName'];
var templateQueryIdMap = {
  instance: 'DirectConnectGatewayId'
}; // select类型需要注意是{},multi后缀是[]

var DCGFilterFields = {
  Limit: 20,
  Offset: 0,
  'direct-connect-gateway-id': [],
  'direct-connect-gateway-name': [],
  'direct-connect-gateway-ip': [],
  'gateway-type': {},
  'network-type': {},
  'ccn-id': [],
  'vpc-id': []
};
var DCGFilterFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputNumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputNumber',
  min: 1,
  max: 100
}, {
  key: 'direct-connect-gateway-id',
  enDescriptor: 'direct-connect-gateway-id',
  cnDescriptor: '专线网关唯一ID',
  link: '',
  type: 'inputMulti'
}, {
  key: 'direct-connect-gateway-name',
  enDescriptor: 'direct-connect-gateway-name',
  cnDescriptor: '专线网关名称',
  link: '',
  type: 'inputMulti'
}, {
  key: 'direct-connect-gateway-ip',
  enDescriptor: 'direct-connect-gateway-ip',
  cnDescriptor: '专线网关IP',
  link: '',
  type: 'inputMulti'
}, {
  key: 'gateway-type',
  enDescriptor: 'gateway-type',
  cnDescriptor: '网关类型',
  link: '',
  type: 'select',
  multiple: true,
  list: [{
    text: '普通型',
    value: 'NORMAL'
  }, {
    text: 'NAT型',
    value: 'NAT'
  }]
}, {
  key: 'network-type',
  enDescriptor: 'network-type',
  cnDescriptor: '网络类型',
  link: '',
  type: 'select',
  multiple: true,
  list: [{
    text: '私有网络类型',
    value: 'VPC'
  }, {
    text: '云联网类型',
    value: 'CCN'
  }]
}, {
  key: 'ccn-id',
  enDescriptor: 'ccn-id',
  cnDescriptor: '专线网关所在云联网ID',
  link: '',
  type: 'inputMulti'
}, {
  key: 'vpc-id',
  enDescriptor: 'vpc-id',
  cnDescriptor: '专线网关所在私有网络ID',
  link: '',
  type: 'inputMulti'
}]; // 各产品实例列表detail配置

var queryEditorConfig = {
  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/30644',
  namespace: namespace,
  fieldDescriptor: DCGFilterFieldsDescriptor
};
var DCG_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'DirectConnectGatewayId',
  queries: DCGFilterFields
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  return Object(_common_utils__WEBPACK_IMPORTED_MODULE_0__["instanceQueryParamsBaseParse"])(queries, true);
}

/* harmony default export */ __webpack_exports__["default"] = (DCG_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/dcx/datasource.ts":
/*!*************************************************!*\
  !*** ./datasource/tc_monitor/dcx/datasource.ts ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/dcx/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};




var DCXDatasource =
/** @class */
function (_super) {
  __extends(DCXDatasource, _super);

  function DCXDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = _query_def__WEBPACK_IMPORTED_MODULE_0__["namespace"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["DCXInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["DCXInvalidDemensions"];
    _this.templateQueryIdMap = {
      instance: 'DirectConnectTunnelId'
    };
    _this.InstanceReqConfig = {
      service: 'dc',
      action: 'DescribeDirectConnectTunnels',
      responseField: 'DirectConnectTunnelSet'
    };
    return _this;
  }

  DCXDatasource.prototype.getMetrics = function (region) {
    if (region === void 0) {
      region = 'ap-guangzhou';
    }

    return __awaiter(this, void 0, void 0, function () {
      var rawSet;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , _super.prototype.getMetrics.call(this, region)];

          case 1:
            rawSet = _a.sent();
            return [2
            /*return*/
            , rawSet.map(function (item) {
              return Object(_query_def__WEBPACK_IMPORTED_MODULE_0__["modifyDimensons"])(item);
            })];
        }
      });
    });
  };

  return DCXDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (DCXDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/dcx/query.ts":
/*!********************************************!*\
  !*** ./datasource/tc_monitor/dcx/query.ts ***!
  \********************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _base_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_base/query */ "./datasource/tc_monitor/_base/query.ts");
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/dcx/query_def.ts");


Object(_base_query__WEBPACK_IMPORTED_MODULE_0__["default"])(_query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorName"], _query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorConfig"]);

/***/ }),

/***/ "./datasource/tc_monitor/dcx/query_def.ts":
/*!************************************************!*\
  !*** ./datasource/tc_monitor/dcx/query_def.ts ***!
  \************************************************/
/*! exports provided: default, DCXFilterFieldsDescriptor, templateQueryIdMap, DCXInstanceAliasList, DCXInvalidDemensions, namespace, queryEditorName, queryEditorConfig, modifyDimensons, DCXGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DCXFilterFieldsDescriptor", function() { return DCXFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DCXInstanceAliasList", function() { return DCXInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DCXInvalidDemensions", function() { return DCXInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorName", function() { return queryEditorName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorConfig", function() { return queryEditorConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modifyDimensons", function() { return modifyDimensons; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DCXGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");
var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};



var namespace = 'QCE/DCX';
var queryEditorName = 'dcxQuery';
var DCXFilterFields = {
  'direct-connect-tunnel-name': [],
  'direct-connect-tunnel-id': [],
  'direct-connect-id': []
};
var DCXFilterFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputNumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputNumber',
  min: 1,
  max: 100
}, {
  key: 'direct-connect-tunnel-name',
  enDescriptor: 'direct-connect-tunnel-name',
  cnDescriptor: '专用通道名称',
  link: '',
  type: 'inputMulti'
}, {
  key: 'direct-connect-tunnel-id',
  enDescriptor: 'direct-connect-tunnel-id',
  cnDescriptor: '专用通道实例ID',
  link: '',
  type: 'inputMulti'
}, {
  key: 'direct-connect-id',
  enDescriptor: 'direct-connect-id',
  cnDescriptor: '物理专线实例ID',
  link: '',
  type: 'inputMulti'
}];
var queryEditorConfig = {
  instanceDocUrl: 'https://cloud.tencent.com/document/api/216/19819',
  namespace: namespace,
  fieldDescriptor: DCXFilterFieldsDescriptor
};
var DCX_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'DirectConnectTunnelId',
  queries: __assign({
    Limit: 20,
    Offset: 0
  }, DCXFilterFields)
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  return Object(_common_utils__WEBPACK_IMPORTED_MODULE_1__["instanceQueryParamsBaseParse"])(queries, true);
}

var DCXInstanceAliasList = ['DirectConnectTunnelId', 'DirectConnectTunnelName'];
var templateQueryIdMap = {
  instance: 'DirectConnectTunnelId'
};
var DCXInvalidDemensions = {
  directconnectconnid: 'DirectConnectTunnelId',
  directConnectConnId: 'DirectConnectTunnelId'
};

function modifyDimensons(metricItem) {
  var metricTmp = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.cloneDeep(metricItem);

  metricTmp.Dimensions.forEach(function (item) {
    item.Dimensions = ['directConnectConnId'];
  });
  return metricTmp;
}

/* harmony default export */ __webpack_exports__["default"] = (DCX_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/ecdn/datasource.ts":
/*!**************************************************!*\
  !*** ./datasource/tc_monitor/ecdn/datasource.ts ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/ecdn/query_def.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};




var ECDNDatasource =
/** @class */
function (_super) {
  __extends(ECDNDatasource, _super);

  function ECDNDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = _query_def__WEBPACK_IMPORTED_MODULE_1__["namespace"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_1__["ECDNInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_1__["ECDNInvalidDemensions"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"];
    _this.InstanceReqConfig = {
      service: 'ecdn',
      action: 'DescribeDomains',
      responseField: 'Domains'
    };
    return _this;
  }

  ECDNDatasource.prototype.getMetrics = function (region) {
    if (region === void 0) {
      region = 'ap-guangzhou';
    }

    return __awaiter(this, void 0, void 0, function () {
      var rawSet;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , _super.prototype.getMetrics.call(this, region)];

          case 1:
            rawSet = _a.sent();
            return [2
            /*return*/
            , rawSet.map(function (item) {
              return Object(_query_def__WEBPACK_IMPORTED_MODULE_1__["modifyDimensons"])(item);
            })];
        }
      });
    });
  };

  return ECDNDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_0__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (ECDNDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/ecdn/query.ts":
/*!*********************************************!*\
  !*** ./datasource/tc_monitor/ecdn/query.ts ***!
  \*********************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _base_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_base/query */ "./datasource/tc_monitor/_base/query.ts");
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/ecdn/query_def.ts");


Object(_base_query__WEBPACK_IMPORTED_MODULE_0__["default"])(_query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorName"], _query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorConfig"]);

/***/ }),

/***/ "./datasource/tc_monitor/ecdn/query_def.ts":
/*!*************************************************!*\
  !*** ./datasource/tc_monitor/ecdn/query_def.ts ***!
  \*************************************************/
/*! exports provided: default, ECDNFilterFieldsDescriptor, templateQueryIdMap, ECDNInstanceAliasList, ECDNInvalidDemensions, namespace, queryEditorName, queryEditorConfig, modifyDimensons, ECDNGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECDNFilterFieldsDescriptor", function() { return ECDNFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECDNInstanceAliasList", function() { return ECDNInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECDNInvalidDemensions", function() { return ECDNInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorName", function() { return queryEditorName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorConfig", function() { return queryEditorConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modifyDimensons", function() { return modifyDimensons; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECDNGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};


var namespace = 'QCE/DSA';
var queryEditorName = 'ecdnQuery';
var ECDNInstanceAliasList = ['Domain'];
var templateQueryIdMap = {
  instance: 'Domain'
};
var ECDNInvalidDemensions = {
  domain: 'Domain',
  projectid: 'ProjectId'
};
var ECDN_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'Domain',
  queries: {
    Limit: 100,
    Offset: 0,
    origin: [],
    domain: [],
    resourceId: [],
    status: [],
    disable: [],
    projectId: [],
    fullUrlCache: [],
    https: [],
    originPullProtocol: [],
    area: [],
    tagKey: []
  }
};
var ECDNFilterFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputNumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputNumber',
  min: 1,
  max: 100
}, {
  key: 'origin',
  enDescriptor: 'Origin',
  cnDescriptor: '主源站',
  link: '',
  type: 'inputMulti'
}, {
  key: 'domain',
  enDescriptor: 'Domain',
  cnDescriptor: '域名',
  link: '',
  type: 'inputMulti'
}, {
  key: 'resourceId',
  enDescriptor: 'ResourceId',
  cnDescriptor: '域名id',
  link: '',
  type: 'inputMulti'
}, {
  key: 'status',
  enDescriptor: 'Status',
  cnDescriptor: '域名状态',
  link: '',
  type: 'select',
  list: [{
    text: 'online',
    value: 'online'
  }, {
    text: 'offline',
    value: 'offline'
  }, {
    text: 'processing',
    value: 'processing'
  }]
}, {
  key: 'disable',
  enDescriptor: 'Disable',
  cnDescriptor: '域名封禁状态',
  link: '',
  type: 'select',
  list: [{
    text: 'normal',
    value: 'normal'
  }, {
    text: 'unlicensed',
    value: 'unlicensed'
  }]
}, {
  key: 'projectId',
  enDescriptor: 'ProjectId',
  cnDescriptor: '项目ID',
  link: '',
  type: 'inputMulti'
}, {
  key: 'fullUrlCache',
  enDescriptor: 'FullUrlCache',
  cnDescriptor: '全路径缓存',
  link: '',
  type: 'select',
  list: [{
    text: 'on',
    value: 'on'
  }, {
    text: 'off',
    value: 'off'
  }]
}, {
  key: 'https',
  enDescriptor: 'Https',
  cnDescriptor: '是否配置https',
  link: '',
  type: 'select',
  list: [{
    text: 'on',
    value: 'on'
  }, {
    text: 'off',
    value: 'off'
  }, {
    text: 'processing',
    value: 'processing'
  }]
}, {
  key: 'originPullProtocol',
  enDescriptor: 'OriginPullProtocol',
  cnDescriptor: '回源协议类型',
  link: '',
  type: 'select',
  list: [{
    text: 'http',
    value: 'http'
  }, {
    text: 'https',
    value: 'https'
  }, {
    text: 'follow',
    value: 'follow'
  }]
}, {
  key: 'area',
  enDescriptor: 'Area',
  cnDescriptor: '加速区域',
  link: '',
  type: 'select',
  list: [{
    text: 'mainland',
    value: 'mainland'
  }, {
    text: 'overseas',
    value: 'overseas'
  }, {
    text: 'global',
    value: 'global'
  }]
}, {
  key: 'tagKey',
  enDescriptor: 'TagKey',
  cnDescriptor: '标签键',
  link: '',
  type: 'inputMulti'
}];
var queryEditorConfig = {
  instanceDocUrl: 'https://cloud.tencent.com/document/api/570/42462',
  namespace: namespace,
  fieldDescriptor: ECDNFilterFieldsDescriptor
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  var params = {};

  if (!Object(lodash__WEBPACK_IMPORTED_MODULE_0__["isEmpty"])(queries)) {
    params.Limit = Object(lodash__WEBPACK_IMPORTED_MODULE_0__["get"])(queries, 'Limit', 20) || 20;
    params.Offset = Object(lodash__WEBPACK_IMPORTED_MODULE_0__["get"])(queries, 'Offset', 0) || 0;

    var _queries = Object(lodash__WEBPACK_IMPORTED_MODULE_0__["omit"])(queries, ['Offset', 'Limit']);

    var Filters_1 = [];
    Object(lodash__WEBPACK_IMPORTED_MODULE_0__["forEach"])(_queries, function (item, key) {
      if (Object(lodash__WEBPACK_IMPORTED_MODULE_0__["isArray"])(item)) {
        item = Object(lodash__WEBPACK_IMPORTED_MODULE_0__["compact"])(item);

        if (item.length > 0) {
          Filters_1.push({
            Name: key,
            Value: Object(lodash__WEBPACK_IMPORTED_MODULE_0__["uniq"])(item).slice(0, 5)
          });
        }
      } else if (Object(lodash__WEBPACK_IMPORTED_MODULE_0__["isObject"])(item)) {
        if (!Object(lodash__WEBPACK_IMPORTED_MODULE_0__["isEmpty"])(Object(lodash__WEBPACK_IMPORTED_MODULE_0__["get"])(item, 'value', []))) {
          Filters_1.push({
            Name: key,
            Value: [Object(lodash__WEBPACK_IMPORTED_MODULE_0__["get"])(item, 'value', [])].slice(0, 5)
          });
        }
      }
    });

    if (Filters_1.length > 0) {
      params.Filters = Filters_1.map(function (item) {
        if (item.Name === 'domain') {
          return __assign(__assign({}, item), {
            Fuzzy: true
          });
        }

        return item;
      });
      return params;
    }
  }

  return params;
}

function modifyDimensons(metricItem) {
  var metricTmp = Object(lodash__WEBPACK_IMPORTED_MODULE_0__["cloneDeep"])(metricItem);
  metricTmp.Dimensions.forEach(function (item) {
    item.Dimensions = ['domain', 'projectid'];
  });
  return metricTmp;
}

/* harmony default export */ __webpack_exports__["default"] = (ECDN_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/ecm/datasource.ts":
/*!*************************************************!*\
  !*** ./datasource/tc_monitor/ecm/datasource.ts ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/ecm/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};




var DCDatasource =
/** @class */
function (_super) {
  __extends(DCDatasource, _super);

  function DCDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = _query_def__WEBPACK_IMPORTED_MODULE_0__["namespace"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["ECMInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["ECMInvalidDemensions"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_0__["templateQueryIdMap"]; // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致

    _this.InstanceReqConfig = {
      service: 'ecm',
      action: 'DescribeInstances',
      responseField: 'InstanceSet'
    };
    _this.MetricReqConfig = {
      resultFilter: _query_def__WEBPACK_IMPORTED_MODULE_0__["modifyDimensons"]
    };
    return _this;
  }

  DCDatasource.prototype.metricFindQuery = function (query, regex) {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function (_a) {
        return [2
        /*return*/
        , _super.prototype.metricFindQuery.call(this, __assign(__assign({}, query), {
          region: 'ap-guangzhou'
        }), regex)];
      });
    });
  };

  return DCDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (DCDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/ecm/query.ts":
/*!********************************************!*\
  !*** ./datasource/tc_monitor/ecm/query.ts ***!
  \********************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _base_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_base/query */ "./datasource/tc_monitor/_base/query.ts");
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/ecm/query_def.ts");


Object(_base_query__WEBPACK_IMPORTED_MODULE_0__["default"])(_query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorName"], _query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorConfig"]);

/***/ }),

/***/ "./datasource/tc_monitor/ecm/query_def.ts":
/*!************************************************!*\
  !*** ./datasource/tc_monitor/ecm/query_def.ts ***!
  \************************************************/
/*! exports provided: default, ECMFilterFieldsDescriptor, templateQueryIdMap, ECMInstanceAliasList, ECMInvalidDemensions, namespace, queryEditorName, queryEditorConfig, modifyDimensons, ECMGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECMFilterFieldsDescriptor", function() { return ECMFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECMInstanceAliasList", function() { return ECMInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECMInvalidDemensions", function() { return ECMInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorName", function() { return queryEditorName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorConfig", function() { return queryEditorConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modifyDimensons", function() { return modifyDimensons; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECMGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");


var namespace = 'QCE/ECM';
var queryEditorName = 'ecmQuery';
var ECMInvalidDemensions = {
  // diskId: 'InstanceId',
  uuid: 'UUID' // unInstanceId: 'InstanceId',

};
var ECMInstanceAliasList = ['InstanceId', 'InstanceName'];
var templateQueryIdMap = {
  instance: 'InstanceId'
}; // select类型需要注意是{},multi后缀是[]

var ECMFilterFields = {
  Limit: 20,
  Offset: 0,
  zone: [],
  'zone-name': [],
  'module-id': [],
  'module-name': [],
  'instance-id': [],
  'instance-name': [],
  'ip-address': [],
  'instance-uuid': [],
  'instance-state': {},
  'internet-service-provider': [],
  'instance-family': [],
  'image-id': [],
  'vpc-id': [],
  'subnet-id': []
};
var ECMFilterFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputNumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputNumber',
  min: 1,
  max: 100
}, {
  key: 'zone',
  enDescriptor: 'zone',
  cnDescriptor: '可用区英文标识',
  link: '',
  type: 'dropdownMulti'
}, {
  key: 'zone-name',
  enDescriptor: 'zone-name',
  cnDescriptor: '排列顺序',
  link: '',
  type: 'inputMulti'
}, {
  key: 'module-id',
  enDescriptor: 'module-id',
  cnDescriptor: '模块ID',
  link: '',
  type: 'inputMulti'
}, {
  key: 'module-name',
  enDescriptor: 'module-name',
  cnDescriptor: '模块名称',
  link: '',
  type: 'inputMulti'
}, {
  key: 'instance-id',
  enDescriptor: 'instance-id',
  cnDescriptor: '实例ID',
  link: '',
  type: 'inputMulti'
}, {
  key: 'instance-name',
  enDescriptor: 'instance-name',
  cnDescriptor: '实例名称',
  link: '',
  type: 'inputMulti'
}, {
  key: 'ip-address',
  enDescriptor: 'ip-address',
  cnDescriptor: '内网/公网IP',
  link: '',
  type: 'inputMulti'
}, {
  key: 'instance-uuid',
  enDescriptor: 'instance-uuid',
  cnDescriptor: '实例uuid',
  link: '',
  type: 'inputMulti'
}, {
  key: 'instance-state',
  enDescriptor: 'instance-state',
  cnDescriptor: '实例状态',
  link: '',
  type: 'select',
  multiple: true,
  list: [{
    text: '创建中',
    value: 'PENDING'
  }, {
    text: '创建失败',
    value: 'LAUNCH_FAILED'
  }, {
    text: '运行中',
    value: 'RUNNING'
  }, {
    text: '关机',
    value: 'STOPPED'
  }, {
    text: '开机中',
    value: 'STARTING'
  }, {
    text: '关机中',
    value: 'STOPPING'
  }, {
    text: '重启中',
    value: 'REBOOTING'
  }, {
    text: '停止待销毁',
    value: 'SHUTDOWN'
  }, {
    text: '销毁中',
    value: 'TERMINATING'
  }]
}, {
  key: 'internet-service-provider',
  enDescriptor: 'internet-service-provider',
  cnDescriptor: '公网IP所属的运营商',
  link: '',
  type: 'inputMulti'
}, {
  key: 'instance-family',
  enDescriptor: 'instance-family',
  cnDescriptor: '机型family',
  link: '',
  type: 'inputMulti'
}, {
  key: 'image-id',
  enDescriptor: 'image-id',
  cnDescriptor: '镜像ID',
  link: '',
  type: 'inputMulti'
}, {
  key: 'vpc-id',
  enDescriptor: 'vpc-id',
  cnDescriptor: '实例的vpc id',
  link: '',
  type: 'inputMulti'
}, {
  key: 'subnet-id',
  enDescriptor: 'subnet-id',
  cnDescriptor: '实例的subnet id',
  link: '',
  type: 'inputMulti'
}]; // 各产品实例列表detail配置

var queryEditorConfig = {
  instanceDocUrl: 'https://cloud.tencent.com/document/api/1108/42565',
  namespace: namespace,
  fieldDescriptor: ECMFilterFieldsDescriptor
};
var ECM_STATE = {
  region: 'ap-guangzhou',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'InstanceId',
  queries: ECMFilterFields
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  return Object(_common_utils__WEBPACK_IMPORTED_MODULE_1__["instanceQueryParamsBaseParse"])(queries, true);
} // function isValidMetric(metricObj: any = {}) {
//   const dimension = _.get(metricObj, 'Dimensions[0].Dimensions');
//   // console.log('dimension', dimension, dimension.length === 1 && _.indexOf(dimension, 'diskId') !== -1);
//   return dimension.length === 1 &&( _.indexOf(dimension, 'UUID') !== -1 || _.indexOf(dimension, 'uuid') !== -1);
// }


function modifyDimensons(metricItem) {
  var metricTmp = lodash__WEBPACK_IMPORTED_MODULE_0__["cloneDeep"](metricItem);

  metricTmp.Dimensions.forEach(function (item) {
    item.Dimensions = ['UUID'];
  });
  return metricTmp;
}

/* harmony default export */ __webpack_exports__["default"] = (ECM_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/ecm_block_storage/datasource.ts":
/*!***************************************************************!*\
  !*** ./datasource/tc_monitor/ecm_block_storage/datasource.ts ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/ecm_block_storage/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/datasourceStorage */ "./datasource/common/datasourceStorage.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};






var DCDatasource =
/** @class */
function (_super) {
  __extends(DCDatasource, _super);

  function DCDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = _query_def__WEBPACK_IMPORTED_MODULE_0__["namespace"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["ECMBLOCKSTORAGEInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["ECMBLOCKSTORAGEInvalidDemensions"];
    _this.queryMonitorExtraConfg = _query_def__WEBPACK_IMPORTED_MODULE_0__["queryMonitorExtraConfg"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_0__["templateQueryIdMap"];
    _this.keyInStorage = _query_def__WEBPACK_IMPORTED_MODULE_0__["keyInStorage"]; // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致

    _this.InstanceReqConfig = {
      service: 'ecm',
      action: 'DescribeInstances',
      responseField: 'InstanceSet'
    };
    return _this;
  }

  DCDatasource.prototype.getDiskList = function (params) {
    var _a;

    return __awaiter(this, void 0, void 0, function () {
      var payload, InstanceId, instanceCache, instanceObj, dataDisks;

      var _this = this;

      return __generator(this, function (_b) {
        switch (_b.label) {
          case 0:
            payload = params.payload;
            InstanceId = payload.InstanceId;
            return [4
            /*yield*/
            , _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_3__["default"].getInstance(this.service)];

          case 1:
            instanceCache = _b.sent();
            instanceObj = (_a = lodash__WEBPACK_IMPORTED_MODULE_2___default.a.cloneDeep(instanceCache.find(function (item) {
              return item[_this.templateQueryIdMap.instance] === InstanceId;
            }))) !== null && _a !== void 0 ? _a : {};
            dataDisks = instanceObj.DataDisks;
            return [2
            /*return*/
            , dataDisks];
        }
      });
    });
  };

  DCDatasource.prototype.fetchMetricData = function (action, region, instance, query) {
    return __awaiter(this, void 0, void 0, function () {
      var payload, rs, result;

      var _this = this;

      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            payload = {
              InstanceId: instance,
              Limit: 100
            };
            return [4
            /*yield*/
            , this.getDiskList({
              region: region,
              action: action,
              payload: payload
            })];

          case 1:
            rs = _a.sent();
            result = rs.map(function (o) {
              o._InstanceAliasValue = o[_this.templateQueryIdMap.diskId];
              return {
                text: o[_this.templateQueryIdMap.diskId],
                value: o[_this.templateQueryIdMap.diskId]
              };
            });
            return [4
            /*yield*/
            , _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_3__["default"].setExtraStorage(this.service, this.keyInStorage.diskId, rs)];

          case 2:
            _a.sent();

            return [2
            /*return*/
            , result];
        }
      });
    });
  };

  return DCDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (DCDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/ecm_block_storage/query.ts":
/*!**********************************************************!*\
  !*** ./datasource/tc_monitor/ecm_block_storage/query.ts ***!
  \**********************************************************/
/*! exports provided: QueryCtrl, sQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QueryCtrl", function() { return QueryCtrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sQuery", function() { return sQuery; });
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grafana/app/core/core_module */ "grafana/app/core/core_module");
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/ecm_block_storage/query_def.ts");
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");



var ExtraFields = [// {
//   label: 'nodeid',
//   field: 'NodeId',
//   action: 'DescribeInstanceNodeInfo',
// },
{
  label: 'diskId',
  field: 'diskId'
}];

var QueryCtrl =
/** @class */
function () {
  QueryCtrl.$inject = ["$scope", "$rootScope"];

  /** @ngInject */
  function QueryCtrl($scope, $rootScope) {
    $scope.init = function () {
      $scope.ECMBLOCKSTORAGEFilterFieldsDescriptor = _query_def__WEBPACK_IMPORTED_MODULE_1__["ECMBLOCKSTORAGEFilterFieldsDescriptor"];
      $scope.ExtraFields = ExtraFields;
      $scope.namespace = _query_def__WEBPACK_IMPORTED_MODULE_1__["namespace"];
    }; // $scope.getInstanceId = () => {
    //   let { instance } = $scope.target;
    //   const service = GetServiceFromNamespace($scope.namespace);
    //   instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);
    //   if (!instance) {
    //     return '';
    //   }
    //   try {
    //     instance = JSON.parse(instance)[templateQueryIdMap.instance];
    //   } catch (error) {
    //     console.log();
    //   }
    //   return instance;
    // };


    $scope.getExtraFields = function () {
      return ExtraFields.filter(function (item) {
        var _a, _b;

        return item.field in ((_a = $scope.dims) !== null && _a !== void 0 ? _a : {}) || item.label in ((_b = $scope.dims) !== null && _b !== void 0 ? _b : {});
      });
    };

    $scope.getExtraDropdown = function (target, action) {
      var instance = target.instance;
      var service = Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["GetServiceFromNamespace"])($scope.namespace);
      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);

      try {
        instance = JSON.parse(instance);
        var dataDisks = instance.DataDisks;
        return dataDisks.map(function (o) {
          o._InstanceAliasValue = o[_query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"].diskId];
          return {
            text: o[_query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"].diskId],
            value: JSON.stringify(o)
          };
        });
      } catch (error) {
        // console.log('instance error', instance);
        var payload = {
          InstanceId: instance
        };
        var rs = $scope.datasource.getServiceFn(service, 'getDiskList')({
          payload: payload
        });
        var result = rs.map(function (o) {
          return {
            text: o[_query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"].diskId],
            value: JSON.stringify(o)
          };
        });
        return result;
      }
    };

    $scope.init();
  }

  return QueryCtrl;
}();


var template = "\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Functions are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/50388\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\" ng-repeat=\"field in ECMBLOCKSTORAGEFilterFieldsDescriptor\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <input\n          ng-if=\"field.type === 'inputNumber'\"\n          style=\"margin-right:2px\"\n          type=\"number\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n          ng-min=\"field.min\"\n          ng-max=\"field.max\"\n        />\n        <input\n          ng-if=\"field.type === 'input'\"\n          style=\"margin-right:2px\"\n          type=\"text\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n        />    \n        <multi-condition\n          ng-if=\"field.type === 'inputNumberMulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputMulti'\"\n          type=\"'input'\"\n          value=\"target.queries[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries[field.key]\"\n          options=\"field.list\"\n          multiple=\"field.multiple || false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n\n<!-- \u8D77\u59CB\u533A\u57DF \u76EE\u7684\u533A\u57DF\u7B49 -->\n  <div>\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(target)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n";
function sQuery() {
  return {
    template: template,
    controller: QueryCtrl,
    restrict: 'E',
    scope: {
      target: '=',
      showDetail: '=',
      region: '=',
      datasource: '=',
      getDropdownOptions: '&',
      onChange: '&',
      onRefresh: '&',
      dims: '='
    }
  };
}
grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default.a.directive(_query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorName"], sQuery);

/***/ }),

/***/ "./datasource/tc_monitor/ecm_block_storage/query_def.ts":
/*!**************************************************************!*\
  !*** ./datasource/tc_monitor/ecm_block_storage/query_def.ts ***!
  \**************************************************************/
/*! exports provided: default, ECMBLOCKSTORAGEFilterFieldsDescriptor, templateQueryIdMap, ECMBLOCKSTORAGEInstanceAliasList, ECMBLOCKSTORAGEInvalidDemensions, namespace, queryEditorName, queryEditorConfig, keyInStorage, queryMonitorExtraConfg, ECMBLOCKSTORAGEGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECMBLOCKSTORAGEFilterFieldsDescriptor", function() { return ECMBLOCKSTORAGEFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECMBLOCKSTORAGEInstanceAliasList", function() { return ECMBLOCKSTORAGEInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECMBLOCKSTORAGEInvalidDemensions", function() { return ECMBLOCKSTORAGEInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorName", function() { return queryEditorName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorConfig", function() { return queryEditorConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keyInStorage", function() { return keyInStorage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryMonitorExtraConfg", function() { return queryMonitorExtraConfg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECMBLOCKSTORAGEGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");

var namespace = 'QCE/ECM_BLOCK_STORAGE'; // 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称

var queryEditorName = 'ecmBlockStorageQuery';
var ECMBLOCKSTORAGEInvalidDemensions = {
  uuid: 'UUID',
  diskId: 'DiskId'
}; // 需和文件名对应

var ECMBLOCKSTORAGEInstanceAliasList = ['InstanceId', 'InstanceName'];
var templateQueryIdMap = {
  instance: 'InstanceId',
  diskId: 'DiskId'
}; // select类型需要注意是{},multi后缀是[],dropdown是''

var ECMBLOCKSTORAGEFilterFields = {
  Limit: 20,
  Offset: 0,
  'zone-name': [],
  'module-id': [],
  'module-name': [],
  'instance-id': [],
  'instance-name': [],
  'ip-address': [],
  'instance-uuid': [],
  'instance-state': {},
  'internet-service-provider': [],
  'instance-family': [],
  'image-id': [],
  'vpc-id': [],
  'subnet-id': []
};
var ECMBLOCKSTORAGEFilterFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputNumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputNumber',
  min: 1,
  max: 100
}, {
  key: 'zone-name',
  enDescriptor: 'zone-name',
  cnDescriptor: '排列顺序',
  link: '',
  type: 'inputMulti'
}, {
  key: 'module-id',
  enDescriptor: 'module-id',
  cnDescriptor: '模块ID',
  link: '',
  type: 'inputMulti'
}, {
  key: 'module-name',
  enDescriptor: 'module-name',
  cnDescriptor: '模块名称',
  link: '',
  type: 'inputMulti'
}, {
  key: 'instance-id',
  enDescriptor: 'instance-id',
  cnDescriptor: '实例ID',
  link: '',
  type: 'inputMulti'
}, {
  key: 'instance-name',
  enDescriptor: 'instance-name',
  cnDescriptor: '实例名称',
  link: '',
  type: 'inputMulti'
}, {
  key: 'ip-address',
  enDescriptor: 'ip-address',
  cnDescriptor: '内网/公网IP',
  link: '',
  type: 'inputMulti'
}, {
  key: 'instance-uuid',
  enDescriptor: 'instance-uuid',
  cnDescriptor: '实例uuid',
  link: '',
  type: 'inputMulti'
}, {
  key: 'instance-state',
  enDescriptor: 'instance-state',
  cnDescriptor: '实例状态',
  link: '',
  type: 'select',
  multiple: true,
  list: [{
    text: '创建中',
    value: 'PENDING'
  }, {
    text: '创建失败',
    value: 'LAUNCH_FAILED'
  }, {
    text: '运行中',
    value: 'RUNNING'
  }, {
    text: '关机',
    value: 'STOPPED'
  }, {
    text: '开机中',
    value: 'STARTING'
  }, {
    text: '关机中',
    value: 'STOPPING'
  }, {
    text: '重启中',
    value: 'REBOOTING'
  }, {
    text: '停止待销毁',
    value: 'SHUTDOWN'
  }, {
    text: '销毁中',
    value: 'TERMINATING'
  }]
}, {
  key: 'internet-service-provider',
  enDescriptor: 'internet-service-provider',
  cnDescriptor: '公网IP所属的运营商',
  link: '',
  type: 'inputMulti'
}, {
  key: 'instance-family',
  enDescriptor: 'instance-family',
  cnDescriptor: '机型family',
  link: '',
  type: 'inputMulti'
}, {
  key: 'image-id',
  enDescriptor: 'image-id',
  cnDescriptor: '镜像ID',
  link: '',
  type: 'inputMulti'
}, {
  key: 'vpc-id',
  enDescriptor: 'vpc-id',
  cnDescriptor: '实例的vpc id',
  link: '',
  type: 'inputMulti'
}, {
  key: 'subnet-id',
  enDescriptor: 'subnet-id',
  cnDescriptor: '实例的subnet id',
  link: '',
  type: 'inputMulti'
}]; // 各产品实例列表detail配置

var queryEditorConfig = {
  instanceDocUrl: 'https://cloud.tencent.com/document/api/1108/42565',
  namespace: namespace,
  fieldDescriptor: ECMBLOCKSTORAGEFilterFieldsDescriptor
};
var ECMBLOCKSTORAGE_STATE = {
  region: 'ap-guangzhou',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'InstanceId',
  diskId: '',
  queries: ECMBLOCKSTORAGEFilterFields
}; // 需要缓存到storage的内容的key列表

var keyInStorage = {
  diskId: 'diskId'
};
/*
如果有InstanceId额外的维度，原则上都需要传入此map结构配置
key的含义：
  经过InvalidDemensions处理后的string。topicId =》TopicId。
  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId
value的含义：
  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、
  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。
                    默认取通过InvalidDemsion处理后的key
  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。
                    即：templateQueryIdMap中内容。
                    联合上面2的内容筛选出原始sourceMap
*/

var queryMonitorExtraConfg = {
  DiskId: {
    dim_KeyInStorage: keyInStorage.diskId,
    dim_KeyInTarget: 'diskId',
    dim_KeyInMap: templateQueryIdMap.diskId
  }
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  return Object(_common_utils__WEBPACK_IMPORTED_MODULE_0__["instanceQueryParamsBaseParse"])(queries, true);
}

/* harmony default export */ __webpack_exports__["default"] = (ECMBLOCKSTORAGE_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/ecm_lb/datasource.ts":
/*!****************************************************!*\
  !*** ./datasource/tc_monitor/ecm_lb/datasource.ts ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/ecm_lb/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};




var DCDatasource =
/** @class */
function (_super) {
  __extends(DCDatasource, _super);

  function DCDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = _query_def__WEBPACK_IMPORTED_MODULE_0__["namespace"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["ECMLBInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["ECMLBInvalidDemensions"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_0__["templateQueryIdMap"]; // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致

    _this.InstanceReqConfig = {
      service: 'ecm',
      action: 'DescribeLoadBalancers',
      responseField: 'LoadBalancerSet'
    };
    return _this;
  }

  DCDatasource.prototype.metricFindQuery = function (query, regex) {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function (_a) {
        return [2
        /*return*/
        , _super.prototype.metricFindQuery.call(this, __assign(__assign({}, query), {
          region: 'ap-guangzhou'
        }), regex)];
      });
    });
  };

  return DCDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (DCDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/ecm_lb/query.ts":
/*!***********************************************!*\
  !*** ./datasource/tc_monitor/ecm_lb/query.ts ***!
  \***********************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _base_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_base/query */ "./datasource/tc_monitor/_base/query.ts");
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/ecm_lb/query_def.ts");


Object(_base_query__WEBPACK_IMPORTED_MODULE_0__["default"])(_query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorName"], _query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorConfig"]);

/***/ }),

/***/ "./datasource/tc_monitor/ecm_lb/query_def.ts":
/*!***************************************************!*\
  !*** ./datasource/tc_monitor/ecm_lb/query_def.ts ***!
  \***************************************************/
/*! exports provided: default, ECMLBFilterFieldsDescriptor, templateQueryIdMap, ECMLBInstanceAliasList, ECMLBInvalidDemensions, namespace, queryEditorName, queryEditorConfig, modifyDimensons, ECMLBGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECMLBFilterFieldsDescriptor", function() { return ECMLBFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECMLBInstanceAliasList", function() { return ECMLBInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECMLBInvalidDemensions", function() { return ECMLBInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorName", function() { return queryEditorName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorConfig", function() { return queryEditorConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modifyDimensons", function() { return modifyDimensons; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECMLBGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");


var namespace = 'QCE/ECM_LB';
var queryEditorName = 'ecmLbQuery';
var ECMLBInvalidDemensions = {
  vip: 'LoadBalancerVips'
};
var ECMLBInstanceAliasList = ['LoadBalancerId', 'LoadBalancerName'];
var templateQueryIdMap = {
  instance: 'LoadBalancerId'
}; // select类型需要注意是{},multi后缀是[]

var ECMLBFilterFields = {
  Limit: 20,
  Offset: 0,
  LoadBalancerIds: [],
  LoadBalancerName: [],
  LoadBalancerVips: [],
  BackendPrivateIps: [],
  VpcId: ''
};
var ECMLBFilterFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputNumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputNumber',
  min: 1,
  max: 100
}, {
  key: 'LoadBalancerIds',
  enDescriptor: 'LoadBalancerIds',
  cnDescriptor: '负载均衡器ID数组',
  link: '',
  type: 'inputMulti'
}, {
  key: 'LoadBalancerName',
  enDescriptor: 'LoadBalancerName',
  cnDescriptor: '负载均衡器名称',
  link: '',
  type: 'inputMulti'
}, {
  key: 'LoadBalancerVips',
  enDescriptor: 'LoadBalancerVips',
  cnDescriptor: '负载均衡获得的公网IP地址',
  link: '',
  type: 'inputMulti'
}, {
  key: 'BackendPrivateIps',
  enDescriptor: 'BackendPrivateIps',
  cnDescriptor: '绑定的后端服务的内网 IP',
  link: '',
  type: 'inputMulti'
}, {
  key: 'VpcId',
  enDescriptor: 'VpcId',
  cnDescriptor: '实例所属私有网络唯一ID',
  link: '',
  type: 'input'
}]; // 各产品实例列表detail配置

var queryEditorConfig = {
  instanceDocUrl: 'https://cloud.tencent.com/document/api/1108/48459',
  namespace: namespace,
  fieldDescriptor: ECMLBFilterFieldsDescriptor
};
var ECM_STATE = {
  region: 'ap-guangzhou',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'LoadBalancerId',
  queries: ECMLBFilterFields
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  return Object(_common_utils__WEBPACK_IMPORTED_MODULE_1__["instanceQueryParamsBaseParse"])(queries, false);
} // function isValidMetric(metricObj: any = {}) {
//   const dimension = _.get(metricObj, 'Dimensions[0].Dimensions');
//   // console.log('dimension', dimension, dimension.length === 1 && _.indexOf(dimension, 'diskId') !== -1);
//   return dimension.length === 1 &&( _.indexOf(dimension, 'UUID') !== -1 || _.indexOf(dimension, 'uuid') !== -1);
// }


function modifyDimensons(metricItem) {
  var metricTmp = lodash__WEBPACK_IMPORTED_MODULE_0__["cloneDeep"](metricItem);

  metricTmp.Dimensions.forEach(function (item) {// item.Dimensions = ['UUID'];
  });
  return metricTmp;
}

/* harmony default export */ __webpack_exports__["default"] = (ECM_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/gse/datasource.ts":
/*!*************************************************!*\
  !*** ./datasource/tc_monitor/gse/datasource.ts ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/gse/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");
/* harmony import */ var _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/datasourceStorage */ "./datasource/common/datasourceStorage.ts");
/* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../locale */ "./locale/index.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};









var DCDatasource =
/** @class */
function (_super) {
  __extends(DCDatasource, _super);

  function DCDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = _query_def__WEBPACK_IMPORTED_MODULE_0__["namespace"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["GSEInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["GSEInvalidDemensions"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_0__["templateQueryIdMap"];
    _this.queryMonitorExtraConfg = _query_def__WEBPACK_IMPORTED_MODULE_0__["queryMonitorExtraConfg"]; // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致

    _this.InstanceReqConfig = {
      service: 'gse',
      action: 'DescribeInstances',
      responseField: 'Instances'
    };
    _this.keyInStorage = _query_def__WEBPACK_IMPORTED_MODULE_0__["keyInStorage"];
    return _this;
  } // getFilterDropdown({ field }) {
  //   return super.getRegions();
  // }


  DCDatasource.prototype.getRegions = function () {
    return Promise.resolve(_query_def__WEBPACK_IMPORTED_MODULE_0__["regionSupported"].map(function (_a) {
      var value = _a.value;
      return {
        value: value,
        text: Object(_locale__WEBPACK_IMPORTED_MODULE_6__["t"])(value)
      };
    }));
  };

  DCDatasource.prototype.getMetrics = function (region) {
    if (region === void 0) {
      region = 'ap-guangzhou';
    }

    return __awaiter(this, void 0, void 0, function () {
      var rawSet;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , _super.prototype.getMetrics.call(this, region)];

          case 1:
            rawSet = _a.sent();
            return [2
            /*return*/
            , lodash__WEBPACK_IMPORTED_MODULE_2___default.a.compact(rawSet.map(function (item) {
              return Object(_query_def__WEBPACK_IMPORTED_MODULE_0__["modifyDimensons"])(item);
            }))];
        }
      });
    });
  };

  DCDatasource.prototype.getQueueNameList = function (params) {
    return __awaiter(this, void 0, void 0, function () {
      var region, serviceInfo, res, rs;

      var _this = this;

      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            region = params.region;
            serviceInfo = Object(_common_constants__WEBPACK_IMPORTED_MODULE_3__["GetServiceAPIInfo"])(region, this.service);
            return [4
            /*yield*/
            , Object(_common_utils__WEBPACK_IMPORTED_MODULE_4__["fetchAllFactory"])(function (data) {
              return _this.doRequest({
                url: _this.url + serviceInfo.path,
                data: data
              }, serviceInfo.service, {
                region: region,
                action: 'DescribeGameServerSessionQueues'
              });
            }, {}, 'GameServerSessionQueues')];

          case 1:
            res = _a.sent();
            rs = res[0];
            return [2
            /*return*/
            , rs];
        }
      });
    });
  };

  DCDatasource.prototype.getFleetList = function (params) {
    return __awaiter(this, void 0, void 0, function () {
      var region, serviceInfo, res, rs;

      var _this = this;

      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            region = params.region;
            serviceInfo = Object(_common_constants__WEBPACK_IMPORTED_MODULE_3__["GetServiceAPIInfo"])(region, this.service);
            return [4
            /*yield*/
            , Object(_common_utils__WEBPACK_IMPORTED_MODULE_4__["fetchAllFactory"])(function (data) {
              return _this.doRequest({
                url: _this.url + serviceInfo.path,
                data: data
              }, serviceInfo.service, {
                region: region,
                action: 'ListFleets'
              });
            }, {}, 'FleetIds')];

          case 1:
            res = _a.sent();
            rs = res[0];
            return [2
            /*return*/
            , rs.map(function (r) {
              var _a;

              return _a = {}, _a[_this.templateQueryIdMap.FleetId] = r, _a;
            })];
        }
      });
    });
  };

  DCDatasource.prototype.fetchMetricData = function (action, region, instance) {
    return __awaiter(this, void 0, void 0, function () {
      var rs, result, rs, result;

      var _this = this;

      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            if (!(action === 'DescribeGameServerSessionQueues')) return [3
            /*break*/
            , 3];
            return [4
            /*yield*/
            , this.getQueueNameList({
              region: region,
              instanceId: instance[this.templateQueryIdMap.instance]
            })];

          case 1:
            rs = _a.sent();
            result = rs.map(function (o) {
              o._InstanceAliasValue = o[_this.templateQueryIdMap.Name];
              return {
                text: o[_this.templateQueryIdMap.Name],
                value: o[_this.templateQueryIdMap.Name]
              };
            });
            return [4
            /*yield*/
            , _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_5__["default"].setExtraStorage(this.service, this.keyInStorage.queue, rs)];

          case 2:
            _a.sent();

            return [2
            /*return*/
            , result];

          case 3:
            if (!(action === 'ListFleets')) return [3
            /*break*/
            , 6];
            return [4
            /*yield*/
            , this.getFleetList({
              region: region,
              instanceId: instance[this.templateQueryIdMap.instance]
            })];

          case 4:
            rs = _a.sent();
            result = rs.map(function (o) {
              o._InstanceAliasValue = o[_this.templateQueryIdMap.FleetId];
              return {
                text: o[_this.templateQueryIdMap.FleetId],
                value: o[_this.templateQueryIdMap.FleetId]
              };
            });
            return [4
            /*yield*/
            , _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_5__["default"].setExtraStorage(this.service, this.keyInStorage.fleet, rs)];

          case 5:
            _a.sent();

            return [2
            /*return*/
            , result];

          case 6:
            return [2
            /*return*/
            , []];
        }
      });
    });
  };

  return DCDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (DCDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/gse/query.ts":
/*!********************************************!*\
  !*** ./datasource/tc_monitor/gse/query.ts ***!
  \********************************************/
/*! exports provided: QueryCtrl, sQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QueryCtrl", function() { return QueryCtrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sQuery", function() { return sQuery; });
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grafana/app/core/core_module */ "grafana/app/core/core_module");
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/gse/query_def.ts");
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};




var ExtraFields = [{
  label: 'fleetId',
  field: 'FleetId'
}, {
  label: 'queueName',
  field: 'Name'
}];
var actionMaps = {
  FleetId: 'getFleetList',
  Name: 'getQueueNameList'
};

var QueryCtrl =
/** @class */
function () {
  QueryCtrl.$inject = ["$scope", "$rootScope"];

  /** @ngInject */
  function QueryCtrl($scope, $rootScope) {
    var _this = this;

    $scope.init = function () {
      $scope.GSEFilterFieldsDescriptor = _query_def__WEBPACK_IMPORTED_MODULE_1__["GSEFilterFieldsDescriptor"];
      $scope.namespace = _query_def__WEBPACK_IMPORTED_MODULE_1__["namespace"];
    };

    $scope.getExtraFields = function () {
      return ExtraFields.filter(function (item) {
        var _a;

        return item.field in ((_a = $scope.dims) !== null && _a !== void 0 ? _a : {});
      });
    };

    $scope.getInstanceId = function () {
      var instance = $scope.target.instance;
      var service = Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["GetServiceFromNamespace"])($scope.namespace); // console.log({namespace, service});

      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);

      if (!instance) {
        return '';
      }

      try {
        instance = JSON.parse(instance)[_query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"].instance];
      } catch (error) {// console.log();
      }

      return instance;
    };

    $scope.getExtraDropdown = function (target, field) {
      return __awaiter(_this, void 0, void 0, function () {
        var service, instanceId, region, rs, result;
        return __generator(this, function (_a) {
          switch (_a.label) {
            case 0:
              service = Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["GetServiceFromNamespace"])($scope.namespace);
              instanceId = $scope.getInstanceId();
              region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);
              return [4
              /*yield*/
              , $scope.datasource.getServiceFn(service, actionMaps[field])({
                region: region,
                instanceId: instanceId
              })];

            case 1:
              rs = _a.sent();
              result = rs.map(function (o) {
                o._InstanceAliasValue = o[_query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"][field]];
                return {
                  text: o[_query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"][field]],
                  value: JSON.stringify(o)
                };
              });
              return [2
              /*return*/
              , result];
          }
        });
      });
    };

    $scope.init();
  }

  return QueryCtrl;
}();


var template = "\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/45073\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in GSEFilterFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputNumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />    \n      <multi-condition\n        ng-if=\"field.type === 'inputNumberMulti'\"\n        type=\"'inputNumber'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        maxNum=\"field.max\"\n        minNum=\"field.min\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputMulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- \u8D77\u59CB\u533A\u57DF \u76EE\u7684\u533A\u57DF\u7B49 -->\n<div>\n  <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n      <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n        <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getExtraDropdown(target, extra.field)\"\n          on-change=\"onRefresh()\" css-class=\"min-width-10\">\n        </gf-form-dropdown>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n";
function sQuery() {
  return {
    template: template,
    controller: QueryCtrl,
    restrict: 'E',
    scope: {
      target: '=',
      showDetail: '=',
      region: '=',
      datasource: '=',
      getDropdownOptions: '&',
      onChange: '&',
      onRefresh: '&',
      dims: '='
    }
  };
}
grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default.a.directive(_query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorName"], sQuery);

/***/ }),

/***/ "./datasource/tc_monitor/gse/query_def.ts":
/*!************************************************!*\
  !*** ./datasource/tc_monitor/gse/query_def.ts ***!
  \************************************************/
/*! exports provided: default, GSEFilterFieldsDescriptor, templateQueryIdMap, GSEInstanceAliasList, GSEInvalidDemensions, namespace, queryEditorName, queryEditorConfig, regionSupported, modifyDimensons, queryMonitorExtraConfg, fleetId, keyInStorage, GSEGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GSEFilterFieldsDescriptor", function() { return GSEFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GSEInstanceAliasList", function() { return GSEInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GSEInvalidDemensions", function() { return GSEInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorName", function() { return queryEditorName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorConfig", function() { return queryEditorConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "regionSupported", function() { return regionSupported; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modifyDimensons", function() { return modifyDimensons; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryMonitorExtraConfg", function() { return queryMonitorExtraConfg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fleetId", function() { return fleetId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keyInStorage", function() { return keyInStorage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GSEGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);


var namespace = 'QCE/GSE';
var fleetId = 'FleetId'; // 为和cvm其他产品保持一致，即将string[]改为Array<{fleetid: xxx}>,在此声明key
// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称

var queryEditorName = 'gseQuery';
var GSEInvalidDemensions = {
  instanceid: 'InstanceId',
  fleetid: 'FleetId',
  queuename: 'Name'
}; // 需和文件名对应

var GSEInstanceAliasList = ['InstanceId', 'PrivateIpAddress', 'IpAddress'];
var templateQueryIdMap = {
  instance: 'InstanceId',
  Name: 'Name',
  FleetId: fleetId
}; // 需要缓存到storage的内容的key列表

var keyInStorage = {
  fleet: 'fleet',
  queue: 'queueName' // 会话队列

};
/*
如果有InstanceId额外的维度，原则上都需要传入此map结构配置
key的含义：
  经过InvalidDemensions处理后的string。topicId =》TopicId。
  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId
value的含义：
  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、
  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。
                    默认取通过InvalidDemsion处理后的key
  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。
                    即：templateQueryIdMap中内容。
                    联合上面2的内容筛选出原始sourceMap
*/

var queryMonitorExtraConfg = {
  FleetId: {
    dim_KeyInStorage: keyInStorage.fleet,
    dim_KeyInTarget: 'FleetId',
    dim_KeyInMap: templateQueryIdMap.FleetId
  },
  Name: {
    dim_KeyInStorage: keyInStorage.queue,
    dim_KeyInTarget: 'Name',
    dim_KeyInMap: templateQueryIdMap.Name
  }
}; // select类型需要注意是{},multi后缀是[],dropdown是''

var GSEFilterFields = {
  Limit: 20,
  Offset: 0,
  InstanceId: '',
  FleetId: ''
};
var GSEFilterFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputNumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputNumber',
  min: 1,
  max: 100
}, {
  key: 'InstanceId',
  enDescriptor: 'resourceName',
  cnDescriptor: '资源名称',
  link: '',
  type: 'input'
}, {
  key: 'FleetId',
  enDescriptor: 'tagKey',
  cnDescriptor: '标签键',
  link: '',
  type: 'input'
}]; // 各产品实例列表detail配置

var queryEditorConfig = {
  instanceDocUrl: 'https://cloud.tencent.com/document/api/1165/42604',
  namespace: namespace,
  fieldDescriptor: GSEFilterFieldsDescriptor
};
var GSE_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'InstanceId',
  FleetId: '',
  Name: '',
  queries: GSEFilterFields
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  return Object(_common_utils__WEBPACK_IMPORTED_MODULE_0__["instanceQueryParamsBaseParse"])(queries, true);
} // regions for dropdown


var regionSupported = [{
  value: 'ap-bangkok'
}, {
  value: 'ap-beijing'
}, {
  value: 'ap-chengdu'
}, // { value: 'ap-chongqing' },
{
  value: 'ap-guangzhou'
}, {
  value: 'ap-hongkong'
}, {
  value: 'ap-mumbai'
}, {
  value: 'ap-seoul'
}, {
  value: 'ap-nanjing'
}, {
  value: 'ap-shanghai'
}, // { value: 'ap-shanghai-fsi' },
// { value: 'ap-shenzhen-fsi' },
{
  value: 'ap-singapore'
}, {
  value: 'ap-tokyo'
}, {
  value: 'eu-frankfurt'
}, {
  value: 'na-ashburn'
}, {
  value: 'na-siliconvalley'
} // { value: 'na-toronto' },
];

function modifyDimensons(metricItem) {
  var metricTmp = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.cloneDeep(metricItem);

  metricTmp.Dimensions.forEach(function (item) {
    item.Dimensions = item.Dimensions.map(function (v) {
      return GSEInvalidDemensions[v] || v;
    });
  });
  return metricTmp;
}

/* harmony default export */ __webpack_exports__["default"] = (GSE_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/index.ts":
/*!****************************************!*\
  !*** ./datasource/tc_monitor/index.ts ***!
  \****************************************/
/*! exports provided: InitServiceState, SERVICES, Datasources, InstanceAliasList, GetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InitServiceState", function() { return InitStates; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SERVICES", function() { return SERVICES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Datasources", function() { return Datasources; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InstanceAliasList", function() { return InstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../locale */ "./locale/index.ts");
var __spreadArray = undefined && undefined.__spreadArray || function (to, from, pack) {
  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
    if (ar || !(i in from)) {
      if (!ar) ar = Array.prototype.slice.call(from, 0, i);
      ar[i] = from[i];
    }
  }
  return to.concat(ar || Array.prototype.slice.call(from));
};


var SERVICES = [{
  service: 'cvm',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('CVM');
  },

  namespace: 'QCE/CVM',
  href: 'https://cloud.tencent.com/document/api/213/15688'
}, {
  service: 'cdb',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('CDB');
  },

  namespace: 'QCE/CDB',
  href: 'https://cloud.tencent.com/document/api/236/15829',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('cloud_database');
  }

}, {
  service: 'mongoDB',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('CMONGO');
  },

  namespace: 'QCE/CMONGO',
  href: 'https://cloud.tencent.com/document/api/240/38568',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('cloud_database');
  }

}, {
  service: 'postgres',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('POSTGRES');
  },

  namespace: 'QCE/POSTGRES',
  href: 'https://cloud.tencent.com/document/product/248/45105',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('cloud_database');
  }

}, {
  service: 'redis',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('REDIS');
  },

  namespace: 'QCE/REDIS',
  href: 'https://cloud.tencent.com/document/product/248/45110',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('cloud_database');
  }

}, {
  service: 'redisMem',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('REDIS_MEM');
  },

  namespace: 'QCE/REDIS_MEM',
  href: 'https://cloud.tencent.com/document/product/248/49729',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('cloud_database');
  }

}, {
  service: 'sqlserver',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('SQLSERVER');
  },

  namespace: 'QCE/SQLSERVER',
  href: 'https://cloud.tencent.com/document/product/248/45146',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('cloud_database');
  }

}, {
  service: 'cynosdbMysql',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('CYNOSDB_MYSQL');
  },

  namespace: 'QCE/CYNOSDB_MYSQL',
  href: 'https://cloud.tencent.com/document/product/248/45106',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('cloud_database');
  }

}, {
  service: 'tcaplus',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('TCAPLUS');
  },

  namespace: 'QCE/TCAPLUS',
  href: 'https://cloud.tencent.com/document/product/248/45107',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('cloud_database');
  }

}, {
  service: 'dcdb',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('TDMYSQL');
  },

  namespace: 'QCE/TDMYSQL',
  href: 'https://cloud.tencent.com/document/product/248/45108'
}, {
  service: 'pcx',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('PCX');
  },

  namespace: 'QCE/PCX',
  href: 'https://cloud.tencent.com/document/product/215/5181',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('virtual_private_cloud');
  }

}, {
  service: 'bwp',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('BWP');
  },

  namespace: 'QCE/BWP',
  href: 'https://cloud.tencent.com/document/api/215/19209',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('virtual_private_cloud');
  }

}, {
  service: 'natGateway',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('NAT_GATEWAY');
  },

  namespace: 'QCE/NAT_GATEWAY',
  href: 'https://cloud.tencent.com/document/api/215/36034',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('virtual_private_cloud');
  }

}, {
  service: 'vpngw',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('VPNGW');
  },

  namespace: 'QCE/VPNGW',
  href: 'https://cloud.tencent.com/document/product/248/45070',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('virtual_private_cloud');
  }

}, {
  service: 'vpnx',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('VPNX');
  },

  namespace: 'QCE/VPNX',
  href: 'https://cloud.tencent.com/document/product/248/45071',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('virtual_private_cloud');
  }

}, {
  service: 'dcg',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('DCG');
  },

  namespace: 'QCE/DCG',
  href: 'https://cloud.tencent.com/document/product/248/45072',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('virtual_private_cloud');
  }

}, {
  service: 'ceipSummary',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('CEIP_SUMMARY');
  },

  namespace: 'QCE/CEIP_SUMMARY',
  href: 'https://cloud.tencent.com/document/product/248/50381',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('virtual_private_cloud');
  }

}, {
  service: 'vpcNetDetect',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('VPC_NET_DETECT');
  },

  namespace: 'QCE/VPC_NET_DETECT',
  href: 'https://cloud.tencent.com/document/product/248/50384',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('virtual_private_cloud');
  }

}, {
  service: 'vbc',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('VBC');
  },

  namespace: 'QCE/VBC',
  href: 'https://cloud.tencent.com/document/product/248/45073',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('virtual_private_cloud');
  }

}, {
  service: 'lb',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('LB');
  },

  namespace: 'QCE/LB',
  href: 'https://cloud.tencent.com/document/product/248/45099',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('virtual_private_cloud');
  }

}, {
  service: 'lbPublic',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('LB_PUBLIC');
  },

  namespace: 'QCE/LB_PUBLIC',
  href: 'https://cloud.tencent.com/document/product/248/51898',

  get groupName() {
    return "".concat(Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('cloud_load_balancer'), "(").concat(Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('multi_scene'), ")");
  }

}, {
  service: 'lbPrivate',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('LB_PRIVATE');
  },

  namespace: 'QCE/LB_PRIVATE',
  href: 'https://cloud.tencent.com/document/product/248/51899',

  get groupName() {
    return "".concat(Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('cloud_load_balancer'), "(").concat(Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('multi_scene'), ")");
  }

}, {
  service: 'loadBalance',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('LOADBALANCE');
  },

  namespace: 'QCE/LOADBALANCE',
  href: 'https://cloud.tencent.com/document/product/248/51901',

  get groupName() {
    return "".concat(Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('cloud_load_balancer'), "(").concat(Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('multi_scene'), ")");
  }

}, {
  service: 'vClb',

  get label() {
    return "".concat(Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('cloud_load_balancer'), "(").concat(Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('lite'), ")");
  },

  namespace: 'QCE/V_CLB',
  href: 'https://cloud.tencent.com/document/product/248/51901',

  get groupName() {
    return "".concat(Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('cloud_load_balancer'), "(").concat(Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('lite'), ")");
  }

}, {
  service: 'cdn',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('CDN');
  },

  namespace: 'QCE/CDN',
  hideRegion: true,
  href: 'https://cloud.tencent.com/document/product/248/50386',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('content_delivery_network');
  }

}, {
  service: 'cdnProvince',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('CDN_LOG_DATA');
  },

  namespace: 'QCE/CDN_LOG_DATA',
  hideRegion: true,
  href: 'https://cloud.tencent.com/document/product/248/50388',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('content_delivery_network');
  }

}, {
  service: 'ovCdn',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('OV_CDN');
  },

  namespace: 'QCE/OV_CDN',
  hideRegion: true,
  href: 'https://cloud.tencent.com/document/product/248/50387',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('content_delivery_network');
  }

}, {
  service: 'scf',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('SCF_V2');
  },

  namespace: 'QCE/SCF_V2',
  href: 'https://cloud.tencent.com/document/product/248/45130'
}, {
  service: 'cfs',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('CFS');
  },

  namespace: 'QCE/CFS',
  href: 'https://cloud.tencent.com/document/product/248/45143'
}, {
  service: 'cos',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('COS');
  },

  namespace: 'QCE/COS',
  href: 'https://cloud.tencent.com/document/product/248/45140'
}, {
  service: 'ckafka',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('CKAFKA');
  },

  namespace: 'QCE/CKAFKA',
  href: 'https://cloud.tencent.com/document/product/248/45121',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('message_queue');
  }

}, {
  service: 'cmq',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('CMQ');
  },

  namespace: 'QCE/CMQ',
  href: 'https://cloud.tencent.com/document/product/248/45114',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('message_queue');
  }

}, {
  service: 'cmqTopic',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('CMQTOPIC');
  },

  namespace: 'QCE/CMQTOPIC',
  href: 'https://cloud.tencent.com/document/product/248/45113',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('message_queue');
  }

}, {
  service: 'tdmq',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('TDMQ');
  },

  namespace: 'QCE/TDMQ',
  href: 'https://cloud.tencent.com/document/product/248/51450',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('message_queue');
  }

}, {
  service: 'tdmqRocketmq',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('TDMQ_ROCKETMQ');
  },

  namespace: 'QCE/ROCKETMQ',
  href: 'https://cloud.tencent.com/document/product/248/51450',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('message_queue');
  }

}, {
  service: 'tdmqRabbitmq',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('TDMQ_RABBITMQ');
  },

  namespace: 'QCE/RABBITMQ',
  href: 'https://cloud.tencent.com/document/product/248/51450',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('message_queue');
  }

}, {
  service: 'dcx',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('DCX');
  },

  namespace: 'QCE/DCX',
  href: 'https://cloud.tencent.com/document/product/248/45101',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('direct_connect');
  }

}, {
  service: 'dc',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('DC');
  },

  namespace: 'QCE/DC',
  href: 'https://cloud.tencent.com/document/product/248/45102',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('direct_connect');
  }

}, {
  service: 'cpm',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('CPM');
  },

  namespace: 'QCE/CPM',
  href: 'https://cloud.tencent.com/document/product/248/45881',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('cloud_physical_machine');
  }

}, {
  service: 'bmPcx',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('BM_PCX');
  },

  namespace: 'QCE/BM_PCX',
  href: 'https://cloud.tencent.com/document/product/248/45884',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('cloud_physical_machine');
  }

}, {
  service: 'bmLb',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('BM_LB');
  },

  namespace: 'QCE/BM_LB',
  href: 'https://cloud.tencent.com/document/product/248/45886',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('cloud_physical_machine');
  }

}, {
  service: 'bmIntraLb',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('BM_INTRA_LB');
  },

  namespace: 'QCE/BM_INTRA_LB',
  href: 'https://cloud.tencent.com/document/product/248/45885',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('cloud_physical_machine');
  }

}, {
  service: 'ces',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('CES');
  },

  namespace: 'QCE/CES',
  href: 'https://cloud.tencent.com/document/product/248/45129'
}, {
  service: 'mrHDFS',

  get label() {
    return "".concat(Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('elastic_mapReduce'), "(HDFS)");
  },

  namespace: 'QCE/TXMR_HDFS',
  href: 'https://cloud.tencent.com/document/product/248/44797',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('elastic_mapReduce');
  }

}, {
  service: 'mrHBASE',

  get label() {
    return "".concat(Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('elastic_mapReduce'), "(HBASE)");
  },

  namespace: 'QCE/TXMR_HBASE',
  href: 'https://cloud.tencent.com/document/product/248/45567',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('elastic_mapReduce');
  }

}, {
  service: 'mrHIVE',

  get label() {
    return "".concat(Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('elastic_mapReduce'), "(HIVE)");
  },

  namespace: 'QCE/TXMR_HIVE',
  href: 'https://cloud.tencent.com/document/product/248/45569',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('elastic_mapReduce');
  }

}, {
  service: 'mrNODE',

  get label() {
    return "".concat(Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('elastic_mapReduce'), "(NODE)");
  },

  namespace: 'QCE/TXMR_NODE',
  href: 'https://cloud.tencent.com/document/product/248/45570',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('elastic_mapReduce');
  }

}, {
  service: 'mrPRESTO',

  get label() {
    return "".concat(Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('elastic_mapReduce'), "(PRESTO)");
  },

  namespace: 'QCE/TXMR_PRESTO',
  href: 'https://cloud.tencent.com/document/product/248/45571',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('elastic_mapReduce');
  }

}, {
  service: 'mrSPARK',

  get label() {
    return "".concat(Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('elastic_mapReduce'), "(SPARK)");
  },

  namespace: 'QCE/TXMR_SPARK',
  href: 'https://cloud.tencent.com/document/product/248/45572',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('elastic_mapReduce');
  }

}, {
  service: 'mrYARN',

  get label() {
    return "".concat(Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('elastic_mapReduce'), "(YARN)");
  },

  namespace: 'QCE/TXMR_YARN',
  href: 'https://cloud.tencent.com/document/product/248/45573',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('elastic_mapReduce');
  }

}, {
  service: 'mrZOOKEEPER',

  get label() {
    return "".concat(Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('elastic_mapReduce'), "(ZOOKEEPER)");
  },

  namespace: 'QCE/TXMR_ZOOKEEPER',
  href: 'https://cloud.tencent.com/document/product/248/45574',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('elastic_mapReduce');
  }

}, {
  service: 'cbs',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('BLOCK_STORAGE');
  },

  namespace: 'QCE/BLOCK_STORAGE',
  href: 'https://cloud.tencent.com/document/product/362/2345'
}, {
  service: 'apigateway',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('APIGATEWAY');
  },

  namespace: 'QCE/APIGATEWAY',
  href: 'https://cloud.tencent.com/document/product/248/45127'
}, {
  service: 'qaap',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('QAAP');
  },

  namespace: 'QCE/QAAP',
  href: 'https://cloud.tencent.com/document/product/608'
}, {
  service: 'ecm',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('ECM');
  },

  hideRegion: true,
  namespace: 'QCE/ECM',
  href: 'https://cloud.tencent.com/document/product/1108',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('edge_computing_machine');
  }

}, {
  service: 'ecmBlockStorage',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('ECM_BLOCK_STORAGE');
  },

  hideRegion: true,
  namespace: 'QCE/ECM_BLOCK_STORAGE',
  href: 'https://cloud.tencent.com/document/product/1108',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('edge_computing_machine');
  }

}, {
  service: 'ecmLb',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('ECM_LB');
  },

  hideRegion: true,
  namespace: 'QCE/ECM_LB',
  href: 'https://cloud.tencent.com/document/product/1108',

  get groupName() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('edge_computing_machine');
  }

}, {
  service: 'gse',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('GSE');
  },

  namespace: 'QCE/GSE',
  href: 'https://cloud.tencent.com/document/product/1165'
}, {
  service: 'cls',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('CLS');
  },

  namespace: 'QCE/CLS',
  href: 'https://cloud.tencent.com/document/product/614'
}, {
  service: 'tke',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('TKE');
  },

  namespace: 'QCE/TKE2',
  href: 'https://cloud.tencent.com/document/product/457'
}, {
  service: 'ecdn',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('ECDN');
  },

  namespace: 'QCE/DSA',
  href: 'https://cloud.tencent.com/document/product/570'
}, // {
//   service: 'lighthouse',
//   label: '轻量应用服务器(LIGHTHOUSE)',
//   namespace: 'QCE/LIGHTHOUSE',
//   href: 'https://cloud.tencent.com/document/product/1207',
// },
// {
//   service: 'tsf',
//   label: ' 微服务平台(TSF)',
//   namespace: 'QCE/TSF',
//   href: 'https://cloud.tencent.com/document/product/649',
// },
{
  service: 'waf',

  get label() {
    return Object(_locale__WEBPACK_IMPORTED_MODULE_0__["t"])('WAF');
  },

  // hideRegion: true,
  namespace: 'QCE/WAF',
  href: 'https://cloud.tencent.com/document/product/627'
}];
var Datasources = {};
var InitStates = {};
var InstanceAliasList = {};
var GetInstanceQueryParams = {};
/**
 * 由于目录命名不规范，导致需要使用额外逻辑保证正确性。从目录到具体service的映射
 */

var hackModuleName = {
  // lb_loadBalance: 'loadBalance',
  postgresql: 'postgres',
  mongodb: 'mongoDB',
  clb: ['lbPrivate', 'lbPublic', 'loadBalance'],
  mr: ['mrHDFS', 'mrHBASE', 'mrHIVE', 'mrNODE', 'mrPRESTO', 'mrSPARK', 'mrYARN', 'mrZOOKEEPER']
};

var requireModule = __webpack_require__("./datasource/tc_monitor sync recursive ^\\.\\/[a-zA-Z]\\w+\\/(datasource)|(query(_def)?)\\.ts$");

requireModule.keys().forEach(function (filePath) {
  var _a;

  var _b = filePath.split('/'),
      moduleName = _b[1],
      fileName = _b[2]; // hack： 这里是由于产品目录命名不规范,所以才会多这么一段代码


  moduleName = (_a = hackModuleName[moduleName]) !== null && _a !== void 0 ? _a : moduleName; // 目录与模块的映射关系，不管是一对一还是一对多，均按数组进行统一处理

  [].concat(moduleName).forEach(function (module) {
    var _a, _b; // 这个service就是产品配置中的service，需要注意这里的service是根据目录名称算出来的，因此目录名称一定要和service对应


    var service = module.replace(/_([a-zA-Z])/g, function (_, b) {
      return b.toUpperCase();
    });
    var prefix = service.toUpperCase(); // 命名规则
    // datasource

    if (fileName === 'datasource.ts') {
      var Cls_1 = __webpack_require__("./datasource/tc_monitor sync recursive ^.*$")("".concat(filePath))["default"]; // 想办法为实例注入service，不能为prototype或则类本身注入，因为会造成互相污染，详尽mrDatasource


      Datasources["".concat(prefix, "Datasource")] =
      /** @class */
      function () {
        function class_1() {
          var params = [];

          for (var _i = 0; _i < arguments.length; _i++) {
            params[_i] = arguments[_i];
          }

          var target = new (Cls_1.bind.apply(Cls_1, __spreadArray(__spreadArray([void 0], params, false), [service], false)))();
          target.service = service; // eslint-disable-next-line no-constructor-return

          return target;
        }

        return class_1;
      }();
    } // query


    if (fileName === 'query.ts') {
      __webpack_require__("./datasource/tc_monitor sync recursive ^.*$")("".concat(filePath));
    } // query_def


    if (fileName === 'query_def.ts') {
      var alias = "".concat(prefix, "InstanceAliasList");
      var getParams = "".concat(prefix, "GetInstanceQueryParams");

      var target = __webpack_require__("./datasource/tc_monitor sync recursive ^.*$")("".concat(filePath));

      InitStates[service] = target["default"]; // FIXME: 这里需不需要深拷贝？

      InstanceAliasList[alias] = (_a = target[alias]) !== null && _a !== void 0 ? _a : target['InstanceAliasList'];
      GetInstanceQueryParams[getParams] = (_b = target[getParams]) !== null && _b !== void 0 ? _b : target['GetInstanceQueryParams'];
    }
  });
});
 // console.log(Datasources, InitStates, InstanceAliasList, GetInstanceQueryParams);

/***/ }),

/***/ "./datasource/tc_monitor/lb/datasource.ts":
/*!************************************************!*\
  !*** ./datasource/tc_monitor/lb/datasource.ts ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/lb/query_def.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};




var SCFDatasource =
/** @class */
function (_super) {
  __extends(SCFDatasource, _super);

  function SCFDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = 'QCE/LB';
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_1__["LBInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_1__["LBInvalidDemensions"];
    _this.templateQueryIdMap = {
      instance: 'AddressId'
    };
    _this.InstanceReqConfig = {
      service: 'vpc',
      action: 'DescribeAddresses',
      responseField: 'AddressSet',
      interceptor: {
        request: function request(params) {
          var Filters = params.Filters;

          if (!Filters) {
            params.Filters = [];
          }

          params.Filters.push({
            Name: 'address-type',
            Values: ['EIP']
          });
          return params;
        } // 设置一些请求参数的 默认值

      }
    };
    return _this;
  }

  SCFDatasource.prototype.getMetrics = function (region) {
    if (region === void 0) {
      region = 'ap-guangzhou';
    }

    return __awaiter(this, void 0, void 0, function () {
      var rawSet;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , _super.prototype.getMetrics.call(this, region)];

          case 1:
            rawSet = _a.sent();
            return [2
            /*return*/
            , rawSet.filter(function (item) {
              var _a, _b, _c;
              /* hack：这里多加了筛选条件，是因为后端数据不准确，坑啊！ 只拿取包含eip的指标 */


              return (_c = (_b = (_a = item.Dimensions) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.Dimensions) === null || _c === void 0 ? void 0 : _c.includes('eip');
            })];
        }
      });
    });
  };

  return SCFDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_0__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (SCFDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/lb/query.ts":
/*!*******************************************!*\
  !*** ./datasource/tc_monitor/lb/query.ts ***!
  \*******************************************/
/*! exports provided: LBQueryCtrl, lbQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LBQueryCtrl", function() { return LBQueryCtrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lbQuery", function() { return lbQuery; });
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grafana/app/core/core_module */ "grafana/app/core/core_module");
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/lb/query_def.ts");



var LBQueryCtrl =
/** @class */
function () {
  LBQueryCtrl.$inject = ["$scope", "$rootScope"];

  /** @ngInject */
  function LBQueryCtrl($scope, $rootScope) {
    $scope.init = function () {
      // $scope.LBQueryDescriptor = LBQueryDescriptor;
      $scope.LBFilterDescriptor = _query_def__WEBPACK_IMPORTED_MODULE_1__["LBFilterDescriptor"];
    };

    $scope.onChecked = function (srcField, dstField) {
      if ($scope.target.queries[srcField] === true) {
        $scope.target.queries[dstField] = false;
      }

      $scope.onChange();
    };

    $scope.getDropdown = function (field) {
      switch (field) {
        case 'zone':
          return $scope.getZones();

        default:
          return [];
      }
    };

    $scope.getZones = function () {
      if (!$scope.region) {
        return [];
      }

      return $scope.datasource.getZones('cvm', $scope.region);
    };

    $scope.init();
  }

  return LBQueryCtrl;
}();


var template = "\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/215/16702\">Click here to get API doc.</a>\n</label>\n\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        \u504F\u79FB\u91CF, \u4F8B\u5982Offset=20&Limit=20 \u8FD4\u56DE\u7B2C 20 \u5230 40 \u9879\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        \u5355\u6B21\u8BF7\u6C42\u8FD4\u56DE\u7684\u6570\u91CF\uFF0C\u9ED8\u8BA4\u4E3A20\uFF0C\u6700\u5C0F\u503C\u4E3A1\uFF0C\u6700\u5927\u503C\u4E3A100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      AddressIds\n      <info-popover mode=\"right-normal\">\n        \u5B9E\u4F8B ID\uFF0C\u6BCF\u6B21\u8BF7\u6C42\u7684\u5B9E\u4F8B\u7684\u4E0A\u9650\u4E3A100\uFF0C\u53C2\u6570\u4E0D\u652F\u6301\u540C\u65F6\u6307\u5B9A AddressIds \u548C Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n      switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n  <multi-condition type=\"'input'\" max-cond=\"100\" value=\"target.queries.AddressIds\" on-change=\"onChange()\">\n  </multi-condition>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      Filters\n      <info-popover mode=\"right-normal\">\n        \u8FC7\u6EE4\u6761\u4EF6\uFF0C\u6BCF\u6B21\u8BF7\u6C42\u7684 Filters \u7684\u4E0A\u9650\u4E3A10\uFF0CFilter.Values \u7684\u4E0A\u9650\u4E3A5\u3002\u53C2\u6570\u4E0D\u652F\u6301\u540C\u65F6\u6307\u5B9A AddressIds \u548C Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n      on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n  </div>\n</div>\n\n<!--Filters\u90E8\u5206-->\n<div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n  <div class=\"gf-form-inline\" ng-repeat=\"field in LBFilterDescriptor\">\n    <label class=\"gf-form-label width-14\">\n      {{ field.key }}\n      <info-popover mode=\"right-normal\">\n        {{ field.cnDescriptor }}\n        <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n      </info-popover>\n    </label>\n    <multi-condition\n      ng-if=\"field.type === 'dropdownmulti'\"\n      type=\"'dropdown'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      get-options=\"getDropdown(field.key)\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputNumbermulti'\"\n      type=\"'inputNumber'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      maxNum=\"field.max\"\n      minNum=\"field.min\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputmulti'\"\n      type=\"'input'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <custom-select-dropdown\n      ng-if=\"field.type === 'select'\"\n      value=\"target.queries.Filters[field.key]\"\n      options=\"field.list\"\n      multiple=\"true\"\n      on-change=\"onChange()\"\n    ></custom-select-dropdown>\n  </div>\n</div>\n\n</div>\n";
function lbQuery() {
  return {
    template: template,
    controller: LBQueryCtrl,
    restrict: 'E',
    scope: {
      target: '=',
      showDetail: '=',
      region: '=',
      datasource: '=',
      getDropdownOptions: '&',
      onChange: '&'
    }
  };
}
grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default.a.directive('lbQuery', lbQuery);

/***/ }),

/***/ "./datasource/tc_monitor/lb/query_def.ts":
/*!***********************************************!*\
  !*** ./datasource/tc_monitor/lb/query_def.ts ***!
  \***********************************************/
/*! exports provided: LBFilterDescriptor, default, LBInstanceAliasList, LBInvalidDemensions, templateQueryIdMap, LBGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LBFilterDescriptor", function() { return LBFilterDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LBInstanceAliasList", function() { return LBInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LBInvalidDemensions", function() { return LBInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LBGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
var _a;

 // export const LBQueryDescriptor = [{
//   key: 'Offset',
//   enDescriptor: 'Offset',
//   cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
//   link: '',
//   type: 'inputnumber',
//   min: 0,
// },
// {
//   key: 'Limit',
//   enDescriptor: 'Limit',
//   cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为2000',
//   link: '',
//   type: 'inputnumber',
//   min: 1,
//   max: 2000,
// },
// {
//   key: 'AddressId',
//   enDescriptor: 'Address Id',
//   cnDescriptor: '标识 EIP 的唯一 ID ',
//   link: '',
//   type: 'inputmulti',
// }
// ];

var LBFilterDescriptor = [{
  key: 'address-id',
  enDescriptor: 'Address ID',
  cnDescriptor: 'EIP 的唯一 ID ',
  link: '',
  type: 'inputmulti'
}, {
  key: 'address-name',
  enDescriptor: 'Address Name',
  cnDescriptor: 'EIP 名称 ',
  link: '',
  type: 'inputmulti'
}, {
  key: 'address-ip',
  enDescriptor: 'Address IP',
  cnDescriptor: 'EIP 的 IP 地址 ',
  link: '',
  type: 'inputmulti'
}, {
  key: 'address-status',
  enDescriptor: 'Address Status',
  cnDescriptor: 'EIP 的状态',
  link: '',
  type: 'select',
  list: [{
    value: 'CREATING',
    text: 'CREATING'
  }, {
    value: 'BINDING',
    text: 'BINDING'
  }, {
    value: 'BIND',
    text: 'BIND'
  }, {
    value: 'UNBINDING',
    text: 'UNBINDING'
  }, {
    value: 'UNBIND',
    text: 'UNBIND'
  }, {
    value: 'OFFLINING',
    text: 'OFFLINING'
  }, {
    value: 'BIND_ENI',
    text: 'BIND_ENI'
  }]
}, {
  key: 'instance-id',
  enDescriptor: 'Instance ID',
  cnDescriptor: '实例ID ',
  link: '',
  type: 'inputmulti'
}, {
  key: 'private-ip-address',
  enDescriptor: 'Private IP Address',
  cnDescriptor: 'EIP 绑定的内网 IP',
  link: '',
  type: 'inputmulti'
}, {
  key: 'network-interface-id',
  enDescriptor: 'Network Interface ID',
  cnDescriptor: 'EIP 绑定的弹性网卡 ID',
  link: '',
  type: 'inputmulti'
}, {
  key: 'is-arrears',
  enDescriptor: 'Arrears',
  cnDescriptor: 'EIP 是否欠费 ',
  link: '',
  type: 'select',
  list: [{
    text: '正常',
    value: 'FALSE'
  }, {
    text: '欠费',
    value: 'TRUE'
  }]
}]; // const LBFilterFields = {
//   "address-id": [],
//   "address-name": [],
//   "address-ip": [],
//   "address-status ": [],
//   "instance-id ": [],
//   "private-ip-address": [],
//   "network-interface-id ": [],
//   "is-arrears ": [],
// };

var InstanceKey = 'AddressIds';
var LB_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'AddressId',
  version: '',
  queries: (_a = {
    Offset: 0,
    Limit: 20
  }, _a[InstanceKey] = [''], _a.Filters = {
    'address-id': [],
    'address-name': [],
    'address-ip': [],
    'address-status ': [],
    'instance-id ': [],
    'private-ip-address': [],
    'network-interface-id ': [],
    'is-arrears ': []
  }, _a)
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  var params = {};

  if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(queries)) {
    params.Limit = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Limit', 20) || 20;
    params.Offset = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Offset', 0) || 0;

    if (queries.instanceIdsChecked) {
      if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(queries[InstanceKey])) {
        var InstanceIds = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(queries[InstanceKey]);

        if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(InstanceIds).length > 0) {
          params[InstanceKey] = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(InstanceIds).slice(0, 100);
        }
      }
    } else if (queries.filtersChecked) {
      var Filters_1 = [];

      lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(queries.Filters, function (item, key) {
        if (Filters_1.length > 9) {
          return;
        }

        if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(item)) {
          item = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(item);

          if (item.length > 0) {
            Filters_1.push({
              Name: key,
              Values: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(item).slice(0, 5)
            });
          }
        } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(item)) {
          if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', []))) {
            Filters_1.push({
              Name: key,
              Values: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', []).slice(0, 5)
            });
          }
        }
      });

      if (Filters_1.length > 0) {
        params.Filters = Filters_1;
      }
    }
  }

  return params;
}

var LBInstanceAliasList = ['AddressId', 'AddressName', 'AddressIp']; // 维度eip对应于实例中的哪个字段？映射

var LBInvalidDemensions = {
  eip: 'AddressIp'
};
var templateQueryIdMap = {
  instance: 'AddressId'
}; // 从monitor维度到LB实例对应字段的映射
// export const metric2Instance = {
//   functionName: 'FunctionName',
//   namespace: 'Namespace'
// };

/* harmony default export */ __webpack_exports__["default"] = (LB_STATE);
 // monitor监控数据默认支持的维度
// export const LBDefaultDimensionList = ['functionName', 'namespace', 'version'];

/***/ }),

/***/ "./datasource/tc_monitor/lighthouse/datasource.ts":
/*!********************************************************!*\
  !*** ./datasource/tc_monitor/lighthouse/datasource.ts ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/lighthouse/query_def.ts");
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};






var LighthouseDatasource =
/** @class */
function (_super) {
  __extends(LighthouseDatasource, _super);

  function LighthouseDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = 'QCE/LIGHTHOUSE';
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_1__["LIGHTHOUSEInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_1__["LighthouseInvalidDemensions"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"];
    _this.InstanceReqConfig = {
      service: 'lighthouse',
      action: 'DescribeInstances',
      responseField: 'InstanceSet'
    };
    return _this;
  }

  LighthouseDatasource.prototype.getRegions = function () {
    return this.doRequest({
      url: this.url + '/api',
      data: {
        Product: 'lighthouse'
      }
    }, 'api', {
      action: 'DescribeRegions'
    }).then(function (response) {
      return lodash__WEBPACK_IMPORTED_MODULE_0___default.a.filter(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.map(response.RegionSet || [], function (item) {
        return {
          text: item.RegionName,
          value: item.Region,
          RegionState: item.RegionState
        };
      }), function (item) {
        return item.RegionState === 'AVAILABLE';
      });
    });
  };

  LighthouseDatasource.prototype.getZones = function (region) {
    var serviceInfo = Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["GetServiceAPIInfo"])(region, 'api');
    return this.doRequest({
      url: this.url + serviceInfo.path,
      data: {
        Product: 'lighthouse'
      }
    }, serviceInfo.service, {
      region: region,
      action: 'DescribeZones'
    }).then(function (response) {
      return lodash__WEBPACK_IMPORTED_MODULE_0___default.a.filter(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.map(response.ZoneSet || [], function (item) {
        return {
          text: item.ZoneName,
          value: item.Zone,
          ZoneState: item.ZoneState,
          Zone: item.Zone
        };
      }), function (item) {
        return item.ZoneState === 'AVAILABLE';
      });
    });
  };

  LighthouseDatasource.prototype.getMetrics = function (region) {
    if (region === void 0) {
      region = 'ap-guangzhou';
    }

    return __awaiter(this, void 0, void 0, function () {
      var rawSet;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , _super.prototype.getMetrics.call(this, region)];

          case 1:
            rawSet = _a.sent();
            return [2
            /*return*/
            , lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(rawSet.map(function (item) {
              return Object(_query_def__WEBPACK_IMPORTED_MODULE_1__["modifyDimensons"])(item);
            }))];
        }
      });
    });
  };

  return LighthouseDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_3__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (LighthouseDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/lighthouse/query.ts":
/*!***************************************************!*\
  !*** ./datasource/tc_monitor/lighthouse/query.ts ***!
  \***************************************************/
/*! exports provided: LighthouseQueryCtrl, lighthouseQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LighthouseQueryCtrl", function() { return LighthouseQueryCtrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lighthouseQuery", function() { return lighthouseQuery; });
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grafana/app/core/core_module */ "grafana/app/core/core_module");
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/lighthouse/query_def.ts");



var LighthouseQueryCtrl =
/** @class */
function () {
  LighthouseQueryCtrl.$inject = ["$scope", "$rootScope"];

  /** @ngInject */
  function LighthouseQueryCtrl($scope, $rootScope) {
    $scope.init = function () {
      $scope.LighthouseFilterFieldsDescriptor = _query_def__WEBPACK_IMPORTED_MODULE_1__["LighthouseFilterFieldsDescriptor"];
    };

    $scope.onChecked = function (srcField, dstField) {
      if ($scope.target.queries[srcField] === true) {
        $scope.target.queries[dstField] = false;
      }

      $scope.onChange();
    };

    $scope.getDropdown = function (field) {
      switch (field) {
        case 'zone':
          return $scope.getZones();

        default:
          return [];
      }
    };

    $scope.getZones = function () {
      if (!$scope.region) {
        return [];
      }

      return $scope.datasource.getZones('lighthouse', $scope.region);
    };

    $scope.init();
  }

  return LighthouseQueryCtrl;
}();


var template = "\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/1207/47573\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        Offset\n        <info-popover mode=\"right-normal\">\n          \u504F\u79FB\u91CF, \u4F8B\u5982Offset=20&Limit=20 \u8FD4\u56DE\u7B2C 20 \u5230 40 \u9879\n        </info-popover>\n      </label>\n      <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n    </div>\n  </div>\n  <div class=\"gf-form-inline\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        Limit\n        <info-popover mode=\"right-normal\">\n          \u5355\u6B21\u8BF7\u6C42\u8FD4\u56DE\u7684\u6570\u91CF\uFF0C\u9ED8\u8BA4\u4E3A20\uFF0C\u6700\u5C0F\u503C\u4E3A1\uFF0C\u6700\u5927\u503C\u4E3A100\n        </info-popover>\n      </label>\n      <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n    </div>\n  </div>\n  <div class=\"gf-form-inline\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-9\">\n        InstanceIds\n        <info-popover mode=\"right-normal\">\n          \u5B9E\u4F8B ID\uFF0C\u6BCF\u6B21\u8BF7\u6C42\u7684\u5B9E\u4F8B\u7684\u4E0A\u9650\u4E3A100\uFF0C\u53C2\u6570\u4E0D\u652F\u6301\u540C\u65F6\u6307\u5B9A InstanceIds \u548C Filters\n        </info-popover>\n      </label>\n      <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n        switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n    </div>\n  </div>\n  <div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n    <multi-condition type=\"'input'\" max-cond=\"100\" value=\"target.queries.InstanceIds\" on-change=\"onChange()\">\n    </multi-condition>\n  </div>\n  <div class=\"gf-form-inline\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-9\">\n        Filters\n        <info-popover mode=\"right-normal\">\n          \u8FC7\u6EE4\u6761\u4EF6\uFF0C\u6BCF\u6B21\u8BF7\u6C42\u7684 Filters \u7684\u4E0A\u9650\u4E3A10\uFF0CFilter.Values \u7684\u4E0A\u9650\u4E3A5\u3002\u53C2\u6570\u4E0D\u652F\u6301\u540C\u65F6\u6307\u5B9A InstanceIds \u548C Filters\n        </info-popover>\n      </label>\n      <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n        on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n    </div>\n  </div>\n  <div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n    <div class=\"gf-form-inline\" ng-repeat=\"field in LighthouseFilterFieldsDescriptor\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        get-options=\"getDropdown(field.key)\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputNumbermulti'\"\n        type=\"'inputNumber'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        maxNum=\"field.max\"\n        minNum=\"field.min\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries.Filters[field.key]\"\n        options=\"field.list\"\n        multiple=\"true\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n";
function lighthouseQuery() {
  return {
    template: template,
    controller: LighthouseQueryCtrl,
    restrict: 'E',
    scope: {
      target: '=',
      showDetail: '=',
      region: '=',
      datasource: '=',
      getDropdownOptions: '&',
      onChange: '&'
    }
  };
}
grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default.a.directive('lighthouseQuery', lighthouseQuery);

/***/ }),

/***/ "./datasource/tc_monitor/lighthouse/query_def.ts":
/*!*******************************************************!*\
  !*** ./datasource/tc_monitor/lighthouse/query_def.ts ***!
  \*******************************************************/
/*! exports provided: default, LighthouseFilterFieldsDescriptor, LIGHTHOUSEInstanceAliasList, LighthouseInvalidDemensions, templateQueryIdMap, modifyDimensons, LIGHTHOUSEGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LighthouseFilterFieldsDescriptor", function() { return LighthouseFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LIGHTHOUSEInstanceAliasList", function() { return LIGHTHOUSEInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LighthouseInvalidDemensions", function() { return LighthouseInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modifyDimensons", function() { return modifyDimensons; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LIGHTHOUSEGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};


var LighthouseStateType = [{
  text: '创建中',
  value: 'PENDING'
}, {
  text: '创建失败',
  value: 'LAUNCH_FAILED'
}, {
  text: '运行中',
  value: 'RUNNING'
}, {
  text: '关机',
  value: 'STOPPED'
}, {
  text: '开机中',
  value: 'STARTING'
}, {
  text: '关机中',
  value: 'STOPPING'
}, {
  text: '重启中',
  value: 'REBOOTING'
}, {
  text: '停止待销毁',
  value: 'SHUTDOWN'
}, {
  text: '销毁中',
  value: 'TERMINATING'
}];
var LighthouseFilterFields = {
  zone: [],
  'instance-name': [],
  'instance-state': {},
  'private-ip-address': [],
  'public-ip-address': []
};
var LighthouseFilterFieldsDescriptor = [{
  key: 'instance-name',
  enDescriptor: 'Instance Name',
  cnDescriptor: '实例名称',
  link: '',
  type: 'inputmulti'
}, {
  key: 'private-ip-address',
  enDescriptor: 'Private IP Address',
  cnDescriptor: '实例主网卡的内网IP',
  link: '',
  type: 'inputmulti'
}, {
  key: 'public-ip-address',
  enDescriptor: 'Public IP Address',
  cnDescriptor: '实例主网卡的公网IP',
  link: '',
  type: 'inputmulti'
}, {
  key: 'zone',
  enDescriptor: 'Zone',
  cnDescriptor: '可用区',
  link: '',
  type: 'dropdownmulti'
}, {
  key: 'instance-state',
  enDescriptor: 'Instance State',
  cnDescriptor: '实例状态',
  link: '',
  type: 'select',
  list: LighthouseStateType
}];
var LIGHTHOUSE_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'InstanceId',
  queries: {
    Limit: 20,
    Offset: 0,
    instanceIdsChecked: false,
    filtersChecked: false,
    InstanceIds: [''],
    Filters: __assign({}, LighthouseFilterFields)
  }
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  var params = {};

  if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(queries)) {
    params.Limit = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Limit', 20) || 20;
    params.Offset = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Offset', 0) || 0;

    if (queries.instanceIdsChecked) {
      if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(queries.InstanceIds)) {
        var InstanceIds = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(queries.InstanceIds);

        if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(InstanceIds).length > 0) {
          params.InstanceIds = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(InstanceIds).slice(0, 100);
        }
      }
    } else if (queries.filtersChecked) {
      var Filters_1 = [];

      lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(queries.Filters, function (item, key) {
        if (Filters_1.length > 9) {
          return;
        }

        if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(item)) {
          item = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(item);

          if (item.length > 0) {
            Filters_1.push({
              Name: key,
              Values: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(item).slice(0, 5)
            });
          }
        } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(item)) {
          if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', []))) {
            Filters_1.push({
              Name: key,
              Values: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', []).slice(0, 5)
            });
          }
        }
      });

      if (Filters_1.length > 0) {
        params.Filters = Filters_1;
      }
    }
  }

  return params;
}

var LIGHTHOUSEInstanceAliasList = ['InstanceId', 'InstanceName', 'PrivateIpAddresses', 'PublicIpAddresses'];
var LighthouseInvalidDemensions = {
  instanceid: 'InstanceId'
};
var templateQueryIdMap = {
  instance: 'InstanceId'
};

function modifyDimensons(metricItem) {
  var metricTmp = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.cloneDeep(metricItem);

  metricTmp.Dimensions.forEach(function (item) {
    item.Dimensions = ['InstanceId'];
  });
  return metricTmp;
}

/* harmony default export */ __webpack_exports__["default"] = (LIGHTHOUSE_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/mongodb/datasource.ts":
/*!*****************************************************!*\
  !*** ./datasource/tc_monitor/mongodb/datasource.ts ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/mongodb/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
/* harmony import */ var _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/datasourceStorage */ "./datasource/common/datasourceStorage.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};

var __spreadArray = undefined && undefined.__spreadArray || function (to, from, pack) {
  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
    if (ar || !(i in from)) {
      if (!ar) ar = Array.prototype.slice.call(from, 0, i);
      ar[i] = from[i];
    }
  }
  return to.concat(ar || Array.prototype.slice.call(from));
};






var MONGODBDatasource =
/** @class */
function (_super) {
  __extends(MONGODBDatasource, _super);

  function MONGODBDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = 'QCE/CMONGO';
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_1__["MONGODBInstanceAliasList"];
    _this.ReplicaAliasList = ['ReplicaSetId', 'ReplicaSetName'];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"];
    _this.queryMonitorExtraConfg = _query_def__WEBPACK_IMPORTED_MODULE_1__["queryMonitorExtraConfg"];
    _this.InstanceReqConfig = {
      service: 'mongodb',
      action: 'DescribeDBInstances',
      responseField: 'InstanceDetails'
    };
    return _this;
  }

  MONGODBDatasource.prototype.getInvalidDimensions = function (selfIns, target) {
    if (target.node && target.node !== '') {
      return {
        target: 'Node'
      };
    }

    if (target.replica && target.replica !== '') {
      return {
        target: 'Replica'
      };
    }

    return _query_def__WEBPACK_IMPORTED_MODULE_1__["MONGODBInvalidDemensions"];
  };

  MONGODBDatasource.prototype.formatVariableDisplay = function (data, displayTpl, alias, aliasList) {
    var _this = this;

    if (displayTpl) {
      return displayTpl.replace(/\$\{(\w+)\}/g, function (a, b) {
        if (!b || !aliasList.includes(b)) {
          return '';
        }

        return _this.getAliasValue(data, b);
      });
    }

    return this.getAliasValue(data, alias);
  };

  MONGODBDatasource.prototype.fetchMetricData = function (action, region, instance, query) {
    return __awaiter(this, void 0, void 0, function () {
      var display, res, replicaalias_1, result, res, replicasetid, targetReplica_1, result;

      var _this = this;

      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            display = query.display;
            if (!(action === 'DescribeReplicas')) return [3
            /*break*/
            , 3];
            return [4
            /*yield*/
            , this.getInstances(region, {
              InstanceIds: [instance[this.templateQueryIdMap.instance]]
            })];

          case 1:
            res = _a.sent()[0];
            replicaalias_1 = query.replicaalias;
            replicaalias_1 = this.ReplicaAliasList.includes(replicaalias_1) ? replicaalias_1 : this.templateQueryIdMap.replica;
            result = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.map(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(res, 'ReplicaSets', []), function (item) {
              var replicaAlias = _this.formatVariableDisplay(item, display, replicaalias_1, _this.ReplicaAliasList);

              item._InstanceAliasValue = replicaAlias || item[_this.templateQueryIdMap.replica];
              return {
                text: item.ReplicaSetId,
                value: item.ReplicaSetId
              };
            });
            return [4
            /*yield*/
            , _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_3__["default"].setExtraStorage(this.service, this.queryMonitorExtraConfg.Replica.dim_KeyInStorage, lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(res, 'ReplicaSets', []))];

          case 2:
            _a.sent();

            return [2
            /*return*/
            , result];

          case 3:
            if (!(action === 'DescribeReplicaNodes')) return [3
            /*break*/
            , 6];
            return [4
            /*yield*/
            , this.getInstances(region, {
              InstanceIds: [instance[this.templateQueryIdMap.instance]]
            })];

          case 4:
            res = _a.sent()[0];
            replicasetid = query.replicasetid;
            targetReplica_1 = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.find(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(res, 'ReplicaSets', []), {
              ReplicaSetId: this.getVariable(replicasetid)
            });
            result = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.times(targetReplica_1.SecondaryNum, function (index) {
              var nodeId = "".concat(targetReplica_1.ReplicaSetId, "-node-slave").concat(index);
              return {
                text: nodeId,
                value: nodeId
              };
            });

            if (targetReplica_1) {
              result = __spreadArray([{
                text: "".concat(targetReplica_1.ReplicaSetId, "-node-primary"),
                value: "".concat(targetReplica_1.ReplicaSetId, "-node-primary")
              }], result, true);
            }

            return [4
            /*yield*/
            , _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_3__["default"].setExtraStorage(this.service, this.queryMonitorExtraConfg.Node.dim_KeyInStorage, result.map(function (item) {
              return {
                NodeId: item.value,
                _InstanceAliasValue: item.value
              };
            }))];

          case 5:
            _a.sent();

            return [2
            /*return*/
            , result];

          case 6:
            return [2
            /*return*/
            , []];
        }
      });
    });
  };

  return MONGODBDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_2__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (MONGODBDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/mongodb/query.ts":
/*!************************************************!*\
  !*** ./datasource/tc_monitor/mongodb/query.ts ***!
  \************************************************/
/*! exports provided: MongoDBQueryCtrl, mongodbQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MongoDBQueryCtrl", function() { return MongoDBQueryCtrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mongodbQuery", function() { return mongodbQuery; });
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grafana/app/core/core_module */ "grafana/app/core/core_module");
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/mongodb/query_def.ts");
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};

var __spreadArray = undefined && undefined.__spreadArray || function (to, from, pack) {
  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
    if (ar || !(i in from)) {
      if (!ar) ar = Array.prototype.slice.call(from, 0, i);
      ar[i] = from[i];
    }
  }
  return to.concat(ar || Array.prototype.slice.call(from));
};






var MongoDBQueryCtrl =
/** @class */
function () {
  MongoDBQueryCtrl.$inject = ["$scope", "$rootScope"];

  /** @ngInject */
  function MongoDBQueryCtrl($scope, $rootScope) {
    var _this = this;

    $scope.init = function () {
      $scope.MONGODBFieldsDescriptor = _query_def__WEBPACK_IMPORTED_MODULE_2__["MONGODBFieldsDescriptor"];
    };

    $scope.onChecked = function (srcField, dstField) {
      if ($scope.target.queries[srcField] === true) {
        $scope.target.queries[dstField] = false;
      }

      $scope.onChange();
    };

    $scope.getDropdown = function (field) {
      switch (field) {
        default:
          return [];
      }
    };

    $scope.onInstanceChange = function (n, o) {
      if (n === o) {
        return;
      }

      $scope.target.replica = '';
      $scope.target.node = '';
    };

    $scope.getVariableId = function (data, type) {
      var variableData = data;
      var service = Object(_common_constants__WEBPACK_IMPORTED_MODULE_3__["GetServiceFromNamespace"])('QCE/CMONGO');
      variableData = $scope.datasource.getServiceFn(service, 'getVariable')(variableData);

      if (!variableData) {
        return '';
      }

      try {
        variableData = JSON.parse(variableData)[_query_def__WEBPACK_IMPORTED_MODULE_2__["templateQueryIdMap"][type]];
      } catch (error) {// console.log();
      }

      return variableData;
    };

    $scope.getExtraDropdown = function (target, type) {
      return __awaiter(_this, void 0, void 0, function () {
        var _a, instance, replica, service, instanceId, region, res, replicaId, targetReplica_1, options;

        return __generator(this, function (_b) {
          switch (_b.label) {
            case 0:
              _a = $scope.target, instance = _a.instance, replica = _a.replica;
              service = Object(_common_constants__WEBPACK_IMPORTED_MODULE_3__["GetServiceFromNamespace"])('QCE/CMONGO');
              instanceId = $scope.getVariableId(instance, 'instance');
              region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);
              return [4
              /*yield*/
              , $scope.datasource.getServiceFn(service, 'getInstances')(region, {
                InstanceIds: [instanceId]
              })];

            case 1:
              res = _b.sent()[0];

              if (type === 'replica') {
                return [2
                /*return*/
                , Object(lodash__WEBPACK_IMPORTED_MODULE_1__["map"])(Object(lodash__WEBPACK_IMPORTED_MODULE_1__["get"])(res, 'ReplicaSets', []), function (item) {
                  item._InstanceAliasValue = item.ReplicaSetId;
                  return {
                    text: item.ReplicaSetId,
                    value: JSON.stringify(item)
                  };
                })];
              }

              if (type === 'node' && replica !== '') {
                replicaId = $scope.getVariableId(replica, 'replica');
                targetReplica_1 = Object(lodash__WEBPACK_IMPORTED_MODULE_1__["find"])(Object(lodash__WEBPACK_IMPORTED_MODULE_1__["get"])(res, 'ReplicaSets', []), {
                  ReplicaSetId: replicaId
                });
                options = Object(lodash__WEBPACK_IMPORTED_MODULE_1__["times"])(targetReplica_1.SecondaryNum, function (index) {
                  var nodeId = "".concat(targetReplica_1.ReplicaSetId, "-node-slave").concat(index);
                  return {
                    text: nodeId,
                    value: JSON.stringify({
                      NodeId: nodeId,
                      _InstanceAliasValue: "".concat(targetReplica_1.ReplicaSetId, " - ").concat(nodeId)
                    })
                  };
                });
                return [2
                /*return*/
                , __spreadArray([{
                  text: "".concat(targetReplica_1.ReplicaSetId, "-node-primary"),
                  value: JSON.stringify({
                    NodeId: "".concat(targetReplica_1.ReplicaSetId, "-node-primary"),
                    _InstanceAliasValue: "".concat(targetReplica_1.ReplicaSetId, " - ").concat("".concat(targetReplica_1.ReplicaSetId, "-node-primary"))
                  })
                }], options, true)];
              }

              return [2
              /*return*/
              , []];
          }
        });
      });
    };

    $scope.init();
  }

  return MongoDBQueryCtrl;
}();


var template = "\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/240/35769\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in MONGODBFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <gf-form-dropdown\n        ng-if=\"field.type === 'dropdown'\"\n        model=\"target.queries[field.key]\"\n        allow-custom=\"true\"\n        lookup-text=\"true\"\n        get-options=\"getDropdown(field.key)\"\n        on-change=\"onChange()\"\n        css-class=\"min-width-10\"\n      ></gf-form-dropdown>\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<div class=\"gf-form-inline\" ng-if=\"target.instance\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label query-keyword width-9\">\n      Replica\n    </label>\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n      <gf-form-dropdown model=\"target.replica\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getExtraDropdown(target, 'replica')\"\n        on-change=\"onRefresh()\" css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n  </div>\n</div>\n\n<div class=\"gf-form-inline\" ng-if=\"target.replica\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label query-keyword width-9\">\n      Node\n    </label>\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n      <gf-form-dropdown model=\"target.node\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getExtraDropdown(target, 'node')\"\n        on-change=\"onRefresh()\" css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n  </div>\n</div>\n";
function mongodbQuery() {
  return {
    template: template,
    controller: MongoDBQueryCtrl,
    restrict: 'E',
    scope: {
      target: '=',
      showDetail: '=',
      region: '=',
      datasource: '=',
      onRefresh: '&',
      onChange: '&'
    },
    link: function link(scope, element, attrs) {
      scope.$watch('target.instance', function (newValue, oldValue) {
        var _a;

        (_a = scope.onInstanceChange) === null || _a === void 0 ? void 0 : _a.call(scope, newValue, oldValue);
      });
    }
  };
}
grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default.a.directive('mongodbQuery', mongodbQuery);

/***/ }),

/***/ "./datasource/tc_monitor/mongodb/query_def.ts":
/*!****************************************************!*\
  !*** ./datasource/tc_monitor/mongodb/query_def.ts ***!
  \****************************************************/
/*! exports provided: default, MONGODBFieldsDescriptor, MONGODBInvalidDemensions, MONGODBInstanceAliasList, templateQueryIdMap, queryMonitorExtraConfg, MONGODBGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MONGODBFieldsDescriptor", function() { return MONGODBFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MONGODBInvalidDemensions", function() { return MONGODBInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MONGODBInstanceAliasList", function() { return MONGODBInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryMonitorExtraConfg", function() { return queryMonitorExtraConfg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MONGODBGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};


var InstanceTypes = [{
  text: '所有实例',
  value: 0
}, {
  text: '正式实例',
  value: 1
}, {
  text: '临时实例',
  value: 2
}, {
  text: '只读实例',
  value: 3
}, {
  text: '正式，只读，灾备实例',
  value: -1
}];
var ClusterTypes = [{
  text: '副本集实例',
  value: 0
}, {
  text: '分片实例',
  value: 1
}, {
  text: '所有实例',
  value: -1
}];
var Status = [{
  text: '待初始化',
  value: 0
}, {
  text: '流程执行中',
  value: 1
}, {
  text: '实例有效',
  value: 2
}, {
  text: '实例已过期',
  value: -2
}];
var PayMode = [{
  text: '按量计费',
  value: 0
}, {
  text: '包年包月',
  value: 1
}, {
  text: '按量包年包月计费',
  value: -1
}];
var OrderBy = [{
  text: 'ProjectId',
  value: 'ProjectId'
}, {
  text: 'InstanceName',
  value: 'InstanceName'
}, {
  text: 'CreateTime',
  value: 'CreateTime'
}];
var OrderByType = [{
  text: '升序',
  value: 'ASC'
}, {
  text: '降序',
  value: 'DESC'
}];
var MongoDBFields = {
  InstanceIds: [],
  InstanceType: {},
  ClusterType: {},
  Status: [],
  VpcId: '',
  SubnetId: '',
  PayMode: {},
  Limit: 20,
  Offset: 0,
  OrderBy: '',
  OrderByType: ''
};
var MONGODBFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputnumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputnumber',
  min: 1,
  max: 100
}, {
  key: 'InstanceIds',
  enDescriptor: 'InstancesIds',
  cnDescriptor: '实例名称',
  type: 'inputmulti'
}, {
  key: 'InstanceType',
  enDescriptor: 'InstanceType',
  cnDescriptor: '实例类型',
  link: '',
  type: 'select',
  list: InstanceTypes
}, {
  key: 'ClusterType',
  enDescriptor: 'ClusterType',
  cnDescriptor: '集群类型',
  link: '',
  type: 'select',
  list: ClusterTypes
}, {
  key: 'Status',
  enDescriptor: 'Status',
  cnDescriptor: '实例状态',
  link: '',
  multiple: true,
  type: 'select',
  list: Status
}, {
  key: 'VpcId',
  enDescriptor: 'VpcId',
  cnDescriptor: '私有网络的ID',
  link: '',
  type: 'input'
}, {
  key: 'SubnetId',
  enDescriptor: 'SubnetId',
  cnDescriptor: '私有网络的子网ID，基础网络则不传该参数。入参设置该参数的同时，必须设置相应的VpcId',
  link: '',
  type: 'input'
}, {
  key: 'PayMode',
  enDescriptor: 'PayMode',
  cnDescriptor: '付费类型',
  link: '',
  type: 'select',
  list: PayMode
}, {
  key: 'OrderBy',
  enDescriptor: 'OrderBy',
  cnDescriptor: '排序字段',
  link: '',
  type: 'select',
  list: OrderBy
}, {
  key: 'OrderByType',
  enDescriptor: 'OrderByType',
  cnDescriptor: '排序方式',
  link: '',
  type: 'select',
  list: OrderByType
}];
var MONGODB_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'InstanceId',
  queries: __assign({}, MongoDBFields)
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  var params = {};

  if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(queries)) {
    params.Limit = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Limit', 20) || 20;
    params.Offset = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Offset', 0) || 0;
    queries = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.omit(queries, ['Offset', 'Limit']);

    lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(queries, function (item, key) {
      if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(item)) {
        item = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(item);

        if (item.length > 0) {
          params[key] = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(item);
        }
      } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(item)) {
        // select 单选
        if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNumber(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', undefined)) || !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', undefined))) {
          params[key] = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value');
        }
      } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNumber(item) || !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(item)) {
        params[key] = item;
      }
    });
  }

  return params;
}

var MONGODBInstanceAliasList = ['InstanceId', 'InstanceName'];
var MONGODBInvalidDemensions = {
  target: 'InstanceId'
};
var templateQueryIdMap = {
  instance: 'InstanceId',
  replica: 'ReplicaSetId'
};
var queryMonitorExtraConfg = {
  Replica: {
    dim_KeyInStorage: 'ReplicaSets',
    dim_KeyInTarget: 'replica',
    dim_KeyInMap: 'ReplicaSetId',
    dim_KeyInIns: 'ReplicaSetId'
  },
  Node: {
    dim_KeyInStorage: 'ReplicaNodeSets',
    dim_KeyInTarget: 'node',
    dim_KeyInMap: 'NodeId',
    dim_KeyInIns: 'NodeId'
  }
};
/* harmony default export */ __webpack_exports__["default"] = (MONGODB_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/mr/datasource.ts":
/*!************************************************!*\
  !*** ./datasource/tc_monitor/mr/datasource.ts ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/mr/query_def.ts");
/* harmony import */ var _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/datasourceStorage */ "./datasource/common/datasourceStorage.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};







var MrHdfsDatasource =
/** @class */
function (_super) {
  __extends(MrHdfsDatasource, _super);

  function MrHdfsDatasource() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_3__["InvalidDemensions"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_3__["InstanceAliasList"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_3__["templateQueryIdMap"];
    _this.extrasAlias = [];
    _this.keyInStorage = _query_def__WEBPACK_IMPORTED_MODULE_3__["keyInStorage"];
    _this.queryMonitorExtraConfg = _query_def__WEBPACK_IMPORTED_MODULE_3__["queryMonitorExtraConfg"];
    _this.InstanceReqConfig = {
      service: 'emr',
      action: 'DescribeInstances',
      responseField: 'ClusterList',
      interceptor: {
        request: function request(params) {
          return __assign(__assign({}, params), {
            DisplayStrategy: params.DisplayStrategy || 'monitorManage',
            ProjectId: params.ProjectId || -1
          });
        },
        response: function response(data) {
          return data.map(function (_a) {
            var ClusterId = _a.ClusterId,
                ClusterName = _a.ClusterName;
            return {
              ClusterId: ClusterId,
              ClusterName: ClusterName
            };
          });
        }
      }
    };
    return _this;
  }

  MrHdfsDatasource.prototype.fetchAllNodes = function (region, params) {
    return __awaiter(this, void 0, void 0, function () {
      var serviceInfo, rs;

      var _this = this;

      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            serviceInfo = Object(_common_constants__WEBPACK_IMPORTED_MODULE_0__["GetServiceAPIInfo"])(region, 'emr');
            return [4
            /*yield*/
            , Object(_common_utils__WEBPACK_IMPORTED_MODULE_1__["fetchAllFactory"])(function (data) {
              return _this.doRequest({
                url: _this.url + serviceInfo.path,
                data: data
              }, serviceInfo.service, {
                region: region,
                action: 'DescribeClusterNodes'
              });
            }, __assign(__assign({}, params), {
              isOffsetPage: true
            }), 'NodeList')];

          case 1:
            rs = _a.sent(); // return rs[0].map((item) => ({ text: item.Ip, value: item.Ip }));

            return [2
            /*return*/
            , rs[0]];
        }
      });
    });
  };

  MrHdfsDatasource.prototype.fetchMetricData = function (action, region, instance) {
    return __awaiter(this, void 0, void 0, function () {
      var result, _a, resultT;

      return __generator(this, function (_b) {
        switch (_b.label) {
          case 0:
            _a = action;

            switch (_a) {
              case 'DescribeClusterNodes':
                return [3
                /*break*/
                , 1];
            }

            return [3
            /*break*/
            , 4];

          case 1:
            return [4
            /*yield*/
            , this.fetchAllNodes(region, {
              InstanceId: instance.ClusterId,
              NodeFlag: 'all'
            })];

          case 2:
            resultT = _b.sent();
            result = resultT.map(function (item) {
              item._InstanceAliasValue = item[_query_def__WEBPACK_IMPORTED_MODULE_3__["templateQueryIdMap"].node];
              return {
                text: item[_query_def__WEBPACK_IMPORTED_MODULE_3__["templateQueryIdMap"].node],
                value: item[_query_def__WEBPACK_IMPORTED_MODULE_3__["templateQueryIdMap"].node]
              };
            });
            return [4
            /*yield*/
            , _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_4__["default"].setExtraStorage(this.service, this.keyInStorage.node, resultT)];

          case 3:
            _b.sent();

            return [2
            /*return*/
            , result];

          case 4:
            return [2
            /*return*/
            , []];
        }
      });
    });
  };

  return MrHdfsDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_2__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (MrHdfsDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/mr/query.ts":
/*!*******************************************!*\
  !*** ./datasource/tc_monitor/mr/query.ts ***!
  \*******************************************/
/*! exports provided: MrQueryCtrl, mrQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MrQueryCtrl", function() { return MrQueryCtrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mrQuery", function() { return mrQuery; });
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/mr/query_def.ts");
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! grafana/app/core/core_module */ "grafana/app/core/core_module");
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_1__);
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};



var ExtraFields = [{
  label: 'NodeIP',
  field: 'nodeIP'
}];

var MrQueryCtrl =
/** @class */
function () {
  MrQueryCtrl.$inject = ["$scope", "$rootScope"];

  /** @ngInject */
  function MrQueryCtrl($scope, $rootScope) {
    var _this = this;

    $scope.init = function () {
      $scope.InstanceQueryDescriptor = _query_def__WEBPACK_IMPORTED_MODULE_0__["InstanceQueryDescriptor"];
    };

    $scope.getDropdown = function (field) {
      switch (field) {
        default:
          return [];
      }
    }; // 各个实例下的订阅，由于不想每次都重复发请求，所以这里做了一层缓存，数据结构为{ [instanceId]: {   } }


    $scope.cacheMap = {};

    $scope.getExtraFields = function () {
      var _a;

      return Object.keys((_a = $scope.dims) !== null && _a !== void 0 ? _a : {}).some(function (item) {
        return item.startsWith('host4');
      }) ? ExtraFields : []; // return ExtraFields;
    };

    $scope.getInstanceId = function () {
      var instance = $scope.target.instance;
      instance = $scope.datasource.getServiceFn('mrHDFS', 'getVariable')(instance);

      if (!instance) {
        return '';
      }

      try {
        instance = JSON.parse(instance).ClusterId;
      } catch (error) {// console.log();
      }

      return instance;
    };

    $scope.onExtraFieldChange = function (field) {
      $scope.onRefresh();
    };

    $scope.getExtraDropdown = function (target, field) {
      return __awaiter(_this, void 0, void 0, function () {
        var InstanceId, data, region, fetcher, dataT;
        return __generator(this, function (_a) {
          switch (_a.label) {
            case 0:
              if (!(field === 'nodeIP')) return [3
              /*break*/
              , 3];
              InstanceId = $scope.getInstanceId();
              data = $scope.cacheMap[InstanceId];
              if (!!data) return [3
              /*break*/
              , 2];
              region = $scope.datasource.getServiceFn('mrHDFS', 'getVariable')(target.region);
              fetcher = $scope.datasource.getServiceFn('mrHDFS', 'fetchAllNodes');
              return [4
              /*yield*/
              , fetcher(region, {
                InstanceId: InstanceId,
                NodeFlag: 'all'
              })];

            case 1:
              dataT = _a.sent();
              data = dataT.map(function (item) {
                item._InstanceAliasValue = item[_query_def__WEBPACK_IMPORTED_MODULE_0__["templateQueryIdMap"].node];
                return {
                  text: item[_query_def__WEBPACK_IMPORTED_MODULE_0__["templateQueryIdMap"].node],
                  value: JSON.stringify(item)
                };
              });
              _a.label = 2;

            case 2:
              // 缓存
              $scope.cacheMap[InstanceId] = data;
              return [2
              /*return*/
              , data];

            case 3:
              return [2
              /*return*/
              , []];
          }
        });
      });
    };

    $scope.init();
  }

  return MrQueryCtrl;
}();


var template = "\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/589/34266\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in InstanceQueryDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n<!-- \u4E3B\u9898\u7684ui -->\n  <div ng-if=\"target.instance\">\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(target, extra.field)\"\n            on-change=\"onExtraFieldChange(extra.field)\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  </div>\n";
function mrQuery() {
  return {
    template: template,
    controller: MrQueryCtrl,
    restrict: 'E',
    scope: {
      target: '=',
      showDetail: '=',
      region: '=',
      datasource: '=',
      getDropdownOptions: '&',
      onChange: '&',
      onRefresh: '&',
      dims: '='
    }
  };
}
grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_1___default.a.directive('mrQuery', mrQuery);

/***/ }),

/***/ "./datasource/tc_monitor/mr/query_def.ts":
/*!***********************************************!*\
  !*** ./datasource/tc_monitor/mr/query_def.ts ***!
  \***********************************************/
/*! exports provided: InstanceQueryDescriptor, InvalidDemensions, templateQueryIdMap, InstanceAliasList, GetInstanceQueryParams, queryMonitorExtraConfg, keyInStorage, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InstanceQueryDescriptor", function() { return InstanceQueryDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InvalidDemensions", function() { return InvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InstanceAliasList", function() { return InstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryMonitorExtraConfg", function() { return queryMonitorExtraConfg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keyInStorage", function() { return keyInStorage; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);

var InstanceQueryDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputnumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为10，最小值为1，最大值为100',
  link: '',
  type: 'inputnumber',
  min: 1,
  max: 100
}, {
  key: 'InstanceIds',
  enDescriptor: 'InstanceIds',
  cnDescriptor: '按照一个或者多个实例ID查询。实例ID形如: emr-xxxxxxxx ',
  link: '',
  type: 'inputmulti'
}, {
  key: 'OrderField',
  enDescriptor: 'OrderBy',
  cnDescriptor: '排序字段',
  link: '',
  type: 'select',
  list: [{
    text: '实例ID',
    value: 'clusterId'
  }, {
    text: '创建时间',
    value: 'addTime'
  }, {
    text: '状态',
    value: 'status'
  }]
}, {
  key: 'Asc',
  enDescriptor: 'Order Direction',
  cnDescriptor: '排序方式',
  link: '',
  type: 'select',
  list: [{
    text: '降序',
    value: 0
  }, {
    text: '升序',
    value: 1
  }]
}, {
  key: 'ProjectId',
  enDescriptor: 'ProjectId',
  cnDescriptor: '实例所属项目ID',
  link: '',
  type: 'inputnumber'
}, {
  key: 'DisplayStrategy',
  enDescriptor: 'DisplayStrategy',
  cnDescriptor: '集群筛选策略',
  link: '',
  type: 'select',
  list: [{
    text: '未销毁的实例',
    value: 'clusterList'
  }, {
    text: '正常运行的实例',
    value: 'monitorManage'
  }]
}];

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  var params = {};

  if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(queries)) {
    params.Limit = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Limit', 20) || 20;
    params.Offset = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Offset', 0) || 0;
    queries = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.omit(queries, ['Offset', 'Limit']);

    lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(queries, function (item, key) {
      if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(item)) {
        item = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(item);

        if (item.length > 0) {
          params[key] = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(item);
        }
      } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(item)) {
        if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNumber(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', undefined)) || !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', undefined))) {
          params[key] = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value');
        }
      } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNumber(item) || !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(item)) {
        params[key] = item;
      }
    });
  }

  return params;
} // 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key


var InvalidDemensions = new Proxy({}, {
  get: function get(target, k, receiver) {
    if (typeof k === 'string') {
      if (k.startsWith('id4')) return 'ClusterId'; // id4****

      if (k.startsWith('host4')) return 'Ip'; // host4***
    }

    return Reflect.get(target, k, receiver);
  },
  has: function has(target, propKey) {
    return true;
  }
});
var templateQueryIdMap = {
  instance: 'ClusterId',
  node: 'Ip'
}; // 需要缓存到storage的内容的key列表

var keyInStorage = {
  node: 'nodeIP'
};
/**
 * 如果有InstanceId额外的维度，原则上都需要传入此map结构配置
 *
 * `key` 的含义：
 *   经过InvalidDemensions处理后的string。topicId => TopicId。
 *   否则认为指标中维度正确，和指标中维度字段保持一致，即topicId
 *
 * `value` 的含义：
 *   @param {1} dim_KeyInStorage  指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、
 *   @param {2} dim_KeyInTarget   通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。
 *                                  默认取通过InvalidDemsion处理后的key
 *   @param {3} dim_KeyInMap      保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。
 *                                  即：templateQueryIdMap中内容。
 *                                  联合上面 2 的内容筛选出原始sourceMap
 */

var queryMonitorExtraConfg = {
  Ip: {
    dim_KeyInStorage: keyInStorage.node,
    dim_KeyInTarget: 'nodeIP',
    dim_KeyInMap: templateQueryIdMap.node
  }
}; // 与名称挂钩的变量

var InstanceAliasList = ['ClusterId', 'ClusterName'];
 // 界面状态模型，default

/* harmony default export */ __webpack_exports__["default"] = ({
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'ClusterId',
  nodeIP: '',
  queries: {
    Offset: 0,
    Limit: 10,
    DisplayStrategy: '',
    OrderBy: {},
    Order: {},
    InstanceIds: [],
    ProjectId: -1,
    OrderField: '',
    Asc: ''
  }
});

/***/ }),

/***/ "./datasource/tc_monitor/nat_gateway/datasource.ts":
/*!*********************************************************!*\
  !*** ./datasource/tc_monitor/nat_gateway/datasource.ts ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/nat_gateway/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();




var NATGATEWAYDatasource =
/** @class */
function (_super) {
  __extends(NATGATEWAYDatasource, _super);

  function NATGATEWAYDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = 'QCE/NAT_GATEWAY';
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["NATGATEWAYInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["NATInvalidDemensions"];
    _this.templateQueryIdMap = {
      instance: 'NatGatewayId'
    };
    _this.InstanceReqConfig = {
      service: 'vpc',
      action: 'DescribeNatGateways',
      responseField: 'NatGatewaySet'
    };
    return _this;
  }

  return NATGATEWAYDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (NATGATEWAYDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/nat_gateway/query.ts":
/*!****************************************************!*\
  !*** ./datasource/tc_monitor/nat_gateway/query.ts ***!
  \****************************************************/
/*! exports provided: NatGatewayQueryCtrl, natGatewayQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NatGatewayQueryCtrl", function() { return NatGatewayQueryCtrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "natGatewayQuery", function() { return natGatewayQuery; });
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grafana/app/core/core_module */ "grafana/app/core/core_module");
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/nat_gateway/query_def.ts");



var NatGatewayQueryCtrl =
/** @class */
function () {
  NatGatewayQueryCtrl.$inject = ["$scope", "$rootScope"];

  /** @ngInject */
  function NatGatewayQueryCtrl($scope, $rootScope) {
    $scope.init = function () {
      $scope.NATGatewayFilterFieldsDescriptor = _query_def__WEBPACK_IMPORTED_MODULE_1__["NATGatewayFilterFieldsDescriptor"];
    };

    $scope.onChecked = function (srcField, dstField) {
      if ($scope.target.queries[srcField] === true) {
        $scope.target.queries[dstField] = false;
      }

      $scope.onChange();
    };

    $scope.getDropdown = function (field) {
      switch (field) {
        default:
          return [];
      }
    };

    $scope.init();
  }

  return NatGatewayQueryCtrl;
}();


var template = "\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/215/36034\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        \u504F\u79FB\u91CF, \u4F8B\u5982Offset=20&Limit=20 \u8FD4\u56DE\u7B2C 20 \u5230 40 \u9879\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        \u5355\u6B21\u8BF7\u6C42\u8FD4\u56DE\u7684\u6570\u91CF\uFF0C\u9ED8\u8BA4\u4E3A20\uFF0C\u6700\u5C0F\u503C\u4E3A1\uFF0C\u6700\u5927\u503C\u4E3A100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-10\">\n      NatGatewayIds\n      <info-popover mode=\"right-normal\">\n        NAT\u7F51\u5173\u7EDF\u4E00 ID\uFF0C\u53C2\u6570\u4E0D\u652F\u6301\u540C\u65F6\u6307\u5B9A NatGatewayIds \u548C Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n      switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n  <multi-condition type=\"'input'\" value=\"target.queries.NatGatewayIds\" on-change=\"onChange()\">\n  </multi-condition>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-10\">\n      Filters\n      <info-popover mode=\"right-normal\">\n        \u8FC7\u6EE4\u6761\u4EF6\uFF0C\u53C2\u6570\u4E0D\u652F\u6301\u540C\u65F6\u6307\u5B9ANatGatewayIds\u548CFilters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n      on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n  <div class=\"gf-form-inline\" ng-repeat=\"field in NATGatewayFilterFieldsDescriptor\">\n    <label class=\"gf-form-label width-14\">\n      {{ field.key }}\n      <info-popover mode=\"right-normal\">\n        {{ field.cnDescriptor }}\n        <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n      </info-popover>\n    </label>\n    <multi-condition\n      ng-if=\"field.type === 'dropdownmulti'\"\n      type=\"'dropdown'\"\n      value=\"target.queries.Filters[field.key]\"\n      get-options=\"getDropdown(field.key)\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputNumbermulti'\"\n      type=\"'inputNumber'\"\n      value=\"target.queries.Filters[field.key]\"\n      maxNum=\"field.max\"\n      minNum=\"field.min\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputmulti'\"\n      type=\"'input'\"\n      value=\"target.queries.Filters[field.key]\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <custom-select-dropdown\n      ng-if=\"field.type === 'select'\"\n      value=\"target.queries.Filters[field.key]\"\n      options=\"field.list\"\n      multiple=\"true\"\n      on-change=\"onChange()\"\n    ></custom-select-dropdown>\n  </div>\n</div>\n\n</div>\n";
function natGatewayQuery() {
  return {
    template: template,
    controller: NatGatewayQueryCtrl,
    restrict: 'E',
    scope: {
      target: '=',
      showDetail: '=',
      region: '=',
      datasource: '=',
      getDropdownOptions: '&',
      onChange: '&'
    }
  };
}
grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default.a.directive('natGatewayQuery', natGatewayQuery);

/***/ }),

/***/ "./datasource/tc_monitor/nat_gateway/query_def.ts":
/*!********************************************************!*\
  !*** ./datasource/tc_monitor/nat_gateway/query_def.ts ***!
  \********************************************************/
/*! exports provided: default, NATGatewayFilterFieldsDescriptor, NATGATEWAYInstanceAliasList, templateQueryIdMap, NATInvalidDemensions, NATGATEWAYGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NATGatewayFilterFieldsDescriptor", function() { return NATGatewayFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NATGATEWAYInstanceAliasList", function() { return NATGATEWAYInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NATInvalidDemensions", function() { return NATInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NATGATEWAYGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};


var NATGATEWAYInstanceAliasList = ['NatGatewayId', 'NatGatewayName'];
var NATGatewayFilterFields = {
  'nat-gateway-id': [],
  'nat-gateway-name': [],
  'vpc-id': []
};
var NATGatewayFilterFieldsDescriptor = [{
  key: 'nat-gateway-id',
  enDescriptor: 'NatGateway ID',
  cnDescriptor: 'NAT网关统一 ID',
  link: '',
  type: 'inputmulti'
}, {
  key: 'nat-gateway-name',
  enDescriptor: 'NatGateway Name',
  cnDescriptor: 'NatGateway Name',
  link: '',
  type: 'inputmulti'
}, {
  key: 'vpc-id',
  enDescriptor: 'VPC ID',
  cnDescriptor: '私有网络 ID',
  link: '',
  type: 'inputmulti'
}];
var NATGATEWAY_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'NatGatewayId',
  queries: {
    Limit: 20,
    Offset: 0,
    instanceIdsChecked: false,
    filtersChecked: false,
    NatGatewayIds: [''],
    Filters: __assign({}, NATGatewayFilterFields)
  }
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  var params = {};

  if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(queries)) {
    params.Limit = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Limit', 20) || 20;
    params.Offset = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Offset', 0) || 0;

    if (queries.instanceIdsChecked) {
      if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(queries.NatGatewayIds)) {
        var NatGatewayIds = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(queries.NatGatewayIds);

        if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(NatGatewayIds).length > 0) {
          params.InstanceIds = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(NatGatewayIds).slice(0, 100);
        }
      }
    } else if (queries.filtersChecked) {
      var Filters_1 = [];

      lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(queries.Filters, function (item, key) {
        if (Filters_1.length > 9) {
          return;
        }

        if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(item)) {
          item = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(item);

          if (item.length > 0) {
            Filters_1.push({
              Name: key,
              Values: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(item).slice(0, 5)
            });
          }
        } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(item)) {
          if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', []))) {
            Filters_1.push({
              Name: key,
              Values: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', []).slice(0, 5)
            });
          }
        }
      });

      if (Filters_1.length > 0) {
        params.Filters = Filters_1;
      }
    }
  }

  return params;
}

var templateQueryIdMap = {
  instance: 'NatGatewayId'
};
var NATInvalidDemensions = {
  natId: 'NatGatewayId'
};
/* harmony default export */ __webpack_exports__["default"] = (NATGATEWAY_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/ov_cdn/datasource.ts":
/*!****************************************************!*\
  !*** ./datasource/tc_monitor/ov_cdn/datasource.ts ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/ov_cdn/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};




var OVCDNDatasource =
/** @class */
function (_super) {
  __extends(OVCDNDatasource, _super);

  function OVCDNDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = 'QCE/OV_CDN';
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["OVCDNInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["OVCDNInvalidDemensions"];
    _this.templateQueryIdMap = {
      instance: 'Domain'
    };
    _this.InstanceReqConfig = {
      service: 'cdn',
      action: 'DescribeDomains',
      responseField: 'Domains'
    };
    return _this;
  }

  OVCDNDatasource.prototype.metricFindQuery = function (query, regex) {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function (_a) {
        return [2
        /*return*/
        , _super.prototype.metricFindQuery.call(this, __assign(__assign({}, query), {
          region: 'ap-guangzhou'
        }), regex)];
      });
    });
  };

  return OVCDNDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (OVCDNDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/ov_cdn/query.ts":
/*!***********************************************!*\
  !*** ./datasource/tc_monitor/ov_cdn/query.ts ***!
  \***********************************************/
/*! exports provided: OVCDNQueryCtrl, ovCdnQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OVCDNQueryCtrl", function() { return OVCDNQueryCtrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ovCdnQuery", function() { return ovCdnQuery; });
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grafana/app/core/core_module */ "grafana/app/core/core_module");
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/ov_cdn/query_def.ts");



var OVCDNQueryCtrl =
/** @class */
function () {
  OVCDNQueryCtrl.$inject = ["$scope", "$rootScope"];

  /** @ngInject */
  function OVCDNQueryCtrl($scope, $rootScope) {
    $scope.init = function () {
      $scope.OVCDNFilterFieldsDescriptor = _query_def__WEBPACK_IMPORTED_MODULE_1__["OVCDNFilterFieldsDescriptor"];
    }; // $scope.onChecked = (srcField, dstField) => {
    //   if ($scope.target.queries[srcField] === true) {
    //     $scope.target.queries[dstField] = false;
    //   }
    //   $scope.onChange();
    // };
    // $scope.getDropdown = (field) => {
    //   switch (field) {
    //     case 'zone':
    //       return $scope.getZones();
    //     default:
    //       return [];
    //   }
    // };
    // $scope.getZones = () => {
    //   if (!$scope.region) {
    //     return [];
    //   }
    //   return $scope.datasource.getZones('cvm', $scope.region);
    // };


    $scope.init();
  }

  return OVCDNQueryCtrl;
}();


var template = "\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/213/15728\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        \u504F\u79FB\u91CF, \u4F8B\u5982Offset=20&Limit=20 \u8FD4\u56DE\u7B2C 20 \u5230 40 \u9879\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        \u5355\u6B21\u8BF7\u6C42\u8FD4\u56DE\u7684\u6570\u91CF\uFF0C\u9ED8\u8BA4\u4E3A20\uFF0C\u6700\u5C0F\u503C\u4E3A1\uFF0C\u6700\u5927\u503C\u4E3A100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\" ng-repeat=\"field in OVCDNFilterFieldsDescriptor\">\n<label class=\"gf-form-label width-14\">\n  {{ field.key }}\n  <info-popover mode=\"right-normal\">\n    {{ field.cnDescriptor }}\n    <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n  </info-popover>\n</label>\n<multi-condition\n  ng-if=\"field.type === 'inputNumbermulti'\"\n  type=\"'inputNumber'\"\n  max-cond=\"5\"\n  value=\"target.queries.Filters[field.key]\"\n  maxNum=\"field.max\"\n  minNum=\"field.min\"\n  on-change=\"onChange()\"\n></multi-condition>\n<multi-condition\n  ng-if=\"field.type === 'inputmulti'\"\n  type=\"'input'\"\n  max-cond=\"5\"\n  value=\"target.queries.Filters[field.key]\"\n  on-change=\"onChange()\"\n></multi-condition>\n<custom-select-dropdown\n  ng-if=\"field.type === 'select'\"\n  value=\"target.queries.Filters[field.key]\"\n  options=\"field.list\"\n  multiple=\"true\"\n  on-change=\"onChange()\"\n></custom-select-dropdown>\n</div>\n\n</div>\n";
function ovCdnQuery() {
  return {
    template: template,
    controller: OVCDNQueryCtrl,
    restrict: 'E',
    scope: {
      target: '=',
      showDetail: '=',
      region: '=',
      datasource: '=',
      getDropdownOptions: '&',
      onChange: '&'
    }
  };
}
grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default.a.directive('ovCdnQuery', ovCdnQuery);

/***/ }),

/***/ "./datasource/tc_monitor/ov_cdn/query_def.ts":
/*!***************************************************!*\
  !*** ./datasource/tc_monitor/ov_cdn/query_def.ts ***!
  \***************************************************/
/*! exports provided: default, OVCDNFilterFieldsDescriptor, OVCDNInstanceAliasList, templateQueryIdMap, OVCDNInvalidDemensions, OVCDNGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OVCDNFilterFieldsDescriptor", function() { return OVCDNFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OVCDNInstanceAliasList", function() { return OVCDNInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OVCDNInvalidDemensions", function() { return OVCDNInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OVCDNGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};


var CDNFilterFields = {
  origin: [],
  domain: [],
  resourceId: [],
  status: [],
  serviceType: [],
  projectId: [],
  domainType: [],
  fullUrlCache: [],
  https: [],
  originPullProtocol: [],
  tagKey: []
};
var OVCDNFilterFieldsDescriptor = [{
  key: 'origin',
  enDescriptor: 'origin',
  cnDescriptor: '主源站',
  link: '',
  type: 'inputmulti'
}, {
  key: 'domain',
  enDescriptor: 'domain',
  cnDescriptor: '域名',
  link: '',
  type: 'inputmulti'
}, {
  key: 'resourceId',
  enDescriptor: 'resourceId',
  cnDescriptor: '域名id',
  link: '',
  type: 'inputmulti'
}, {
  key: 'status',
  enDescriptor: 'status',
  cnDescriptor: '域名状态',
  link: '',
  type: 'select',
  list: [{
    text: 'online',
    value: 'online'
  }, {
    text: 'offline',
    value: 'offline'
  }, {
    text: 'processing',
    value: 'processing'
  }]
}, {
  key: 'serviceType',
  enDescriptor: 'serviceType',
  cnDescriptor: '业务类型',
  link: '',
  type: 'select',
  list: [{
    text: 'web',
    value: 'web'
  }, {
    text: 'download',
    value: 'download'
  }, {
    text: 'media',
    value: 'media'
  }]
}, {
  key: 'projectId',
  enDescriptor: 'projectId',
  cnDescriptor: '项目ID',
  link: '',
  type: 'inputNumbermulti'
}, {
  key: 'domainType',
  enDescriptor: 'domainType',
  cnDescriptor: '主源站类型',
  link: '',
  type: 'select',
  list: [{
    text: '自有源',
    value: 'cname'
  }, {
    text: 'cos接入',
    value: 'cos'
  }]
}, {
  key: 'fullUrlCache',
  enDescriptor: 'fullUrlCache',
  cnDescriptor: '全路径缓存',
  link: '',
  type: 'select',
  list: [{
    text: '打开',
    value: 'on'
  }, {
    text: '关闭',
    value: 'off'
  }]
}, {
  key: 'https',
  enDescriptor: 'https',
  cnDescriptor: '是否配置https',
  link: '',
  type: 'select',
  list: [{
    text: 'on',
    value: 'on'
  }, {
    text: 'off',
    value: 'off'
  }, {
    text: 'processing',
    value: 'processing'
  }]
}, {
  key: 'originPullProtocol',
  enDescriptor: 'originPullProtocol',
  cnDescriptor: '回源协议类型',
  link: '',
  type: 'select',
  list: [{
    text: 'http',
    value: 'http'
  }, {
    text: 'follow',
    value: 'follow'
  }, {
    text: 'https',
    value: 'https'
  }]
}, {
  key: 'tagKey',
  enDescriptor: 'tagKey',
  cnDescriptor: '标签键',
  link: '',
  type: 'inputmulti'
}];
var OVCDN_STATE = {
  region: 'ap-guangzhou',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'Domain',
  queries: {
    Limit: 20,
    Offset: 0,
    Filters: __assign({}, CDNFilterFields)
  }
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  var params = {};

  if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(queries)) {
    params.Limit = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Limit', 20) || 20;
    params.Offset = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Offset', 0) || 0;
    var Filters_1 = [];

    lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(queries.Filters, function (item, key) {
      if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(item)) {
        item = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(item);

        if (item.length > 0) {
          Filters_1.push({
            Name: key,
            Value: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(item).slice(0, 5)
          });
        }
      } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(item)) {
        if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', []))) {
          Filters_1.push({
            Name: key,
            Value: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', []).slice(0, 5)
          });
        }
      }
    });

    if (Filters_1.length > 0) {
      params.Filters = Filters_1;
    }
  }

  return params;
}

var OVCDNInstanceAliasList = ['Domain', 'ResourceId'];
var OVCDNInvalidDemensions = {
  projectId: 'ProjectId',
  domain: 'Domain'
};
var templateQueryIdMap = {
  instance: 'Domain'
};
/* harmony default export */ __webpack_exports__["default"] = (OVCDN_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/pcx/datasource.ts":
/*!*************************************************!*\
  !*** ./datasource/tc_monitor/pcx/datasource.ts ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/pcx/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};






var DCDatasource =
/** @class */
function (_super) {
  __extends(DCDatasource, _super);

  function DCDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = _query_def__WEBPACK_IMPORTED_MODULE_0__["namespace"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["PCXInstanceAliasList"];
    _this.InvalidDimensions = {};
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_0__["templateQueryIdMap"]; // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致

    _this.InstanceReqConfig = {
      service: 'xx',
      action: 'xx',
      responseField: 'xx'
    };
    return _this;
  }

  DCDatasource.prototype.getInstances = function (region, params) {
    if (region === void 0) {
      region = 'ap-guangzhou';
    }

    if (params === void 0) {
      params = {};
    }

    params = __assign({
      offset: 0,
      limit: 50
    }, params);
    var serviceInfo = Object(_common_constants__WEBPACK_IMPORTED_MODULE_3__["GetServiceAPIInfo"])(region, 'pcx');
    return this.doRequestV2({
      url: this.url + serviceInfo.path,
      data: params
    }, serviceInfo.service, {
      region: region,
      action: 'DescribeVpcPeeringConnections'
    }).then(function (response) {
      return response.data || [];
    });
  };
  /**
   * 模板变量中获取全量的 PCX 实例列表
   * @param region 地域信息
   */


  DCDatasource.prototype.getVariableInstances = function (region, query) {
    var _this = this;

    var result = [];

    var params = __assign({
      Offset: 0,
      Limit: 50
    }, query);

    var serviceInfo = Object(_common_constants__WEBPACK_IMPORTED_MODULE_3__["GetServiceAPIInfo"])(region, 'pcx');
    return this.doRequestV2({
      url: this.url + serviceInfo.path,
      data: params
    }, serviceInfo.service, {
      region: region,
      action: 'DescribeVpcPeeringConnections'
    }).then(function (response) {
      result = response.data || [];
      var total = response.totalCount || 0;

      if (result.length >= total) {
        return result;
      } else {
        var param = Object(_common_constants__WEBPACK_IMPORTED_MODULE_3__["SliceLength"])(total, 50);
        var promises_1 = [];

        lodash__WEBPACK_IMPORTED_MODULE_2___default.a.forEach(param, function (item) {
          promises_1.push(_this.getInstances(region, item));
        });

        return Promise.all(promises_1).then(function (responses) {
          lodash__WEBPACK_IMPORTED_MODULE_2___default.a.forEach(responses, function (item) {
            result = lodash__WEBPACK_IMPORTED_MODULE_2___default.a.concat(result, item);
          });

          return result;
        })["catch"](function (error) {
          return result;
        });
      }
    });
  };

  DCDatasource.prototype.getVpcId = function (region, params) {
    if (params === void 0) {
      params = {};
    }

    params = __assign({
      Offset: 0,
      Limit: 20
    }, params); // TODO 等待腾讯云接口查问题

    params.Offset = String(params.Offset);
    params.Limit = String(params.Limit);
    var serviceInfo = Object(_common_constants__WEBPACK_IMPORTED_MODULE_3__["GetServiceAPIInfo"])(region, 'vpc');
    return this.doRequest({
      url: this.url + serviceInfo.path,
      data: params
    }, serviceInfo.service, {
      region: region,
      action: 'DescribeVpcs'
    }).then(function (response) {
      return lodash__WEBPACK_IMPORTED_MODULE_2___default.a.map(response.VpcSet || [], function (item) {
        return {
          text: item.VpcId,
          value: item.VpcId
        };
      });
    });
  };

  DCDatasource.prototype.getVpcIds = function (region) {
    var _this = this;

    var result = [];
    var params = {
      Offset: 0,
      Limit: 100
    }; // TODO 等待腾讯云接口查问题

    params.Offset = String(params.Offset);
    params.Limit = String(params.Limit);
    var serviceInfo = Object(_common_constants__WEBPACK_IMPORTED_MODULE_3__["GetServiceAPIInfo"])(region, 'vpc');
    return this.doRequest({
      url: this.url + serviceInfo.path,
      data: params
    }, serviceInfo.service, {
      region: region,
      action: 'DescribeVpcs'
    }).then(function (response) {
      result = lodash__WEBPACK_IMPORTED_MODULE_2___default.a.map(response.VpcSet || [], function (item) {
        return {
          text: item.VpcId,
          value: item.VpcId
        };
      });
      var total = response.TotalCount || 0;

      if (result.length >= total) {
        return result;
      } else {
        var param = Object(_common_constants__WEBPACK_IMPORTED_MODULE_3__["SliceLength"])(total, 100);
        var promises_2 = [];

        lodash__WEBPACK_IMPORTED_MODULE_2___default.a.forEach(param, function (item) {
          promises_2.push(_this.getVpcId(region, item));
        });

        return Promise.all(promises_2).then(function (responses) {
          lodash__WEBPACK_IMPORTED_MODULE_2___default.a.forEach(responses, function (item) {
            result = lodash__WEBPACK_IMPORTED_MODULE_2___default.a.concat(result, item);
          });

          return result;
        })["catch"](function (error) {
          return result;
        });
      }
    });
  };
  /**
   * 腾讯云 API 2.0 请求接口
   * @param options
   * @param service
   * @param signObj
   */


  DCDatasource.prototype.doRequestV2 = function (options, service, signObj) {
    if (signObj === void 0) {
      signObj = {};
    }

    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , Object(_common_constants__WEBPACK_IMPORTED_MODULE_3__["GetRequestParamsV2"])(options, service, signObj, this.secretId, this.instanceSettings.id, this.backendSrv)];

          case 1:
            options = _a.sent();
            return [2
            /*return*/
            , this.backendSrv.datasourceRequest(options).then(function (response) {
              return lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(response, 'data', {});
            })["catch"](function (error) {
              throw error;
            })];
        }
      });
    });
  };

  return DCDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (DCDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/pcx/query.ts":
/*!********************************************!*\
  !*** ./datasource/tc_monitor/pcx/query.ts ***!
  \********************************************/
/*! exports provided: PCXQueryCtrl, pcxQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PCXQueryCtrl", function() { return PCXQueryCtrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pcxQuery", function() { return pcxQuery; });
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grafana/app/core/core_module */ "grafana/app/core/core_module");
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/pcx/query_def.ts");



var PCXQueryCtrl =
/** @class */
function () {
  PCXQueryCtrl.$inject = ["$scope", "$rootScope"];

  /** @ngInject */
  function PCXQueryCtrl($scope, $rootScope) {
    $scope.init = function () {
      $scope.PCXFieldsDescriptor = _query_def__WEBPACK_IMPORTED_MODULE_1__["PCXFieldsDescriptor"];
    };

    $scope.onChecked = function (srcField, dstField) {
      if ($scope.target.queries[srcField] === true) {
        $scope.target.queries[dstField] = false;
      }

      $scope.onChange();
    };

    $scope.getDropdown = function (field) {
      switch (field) {
        case 'vpcId':
          return $scope.getVpcIds();

        default:
          return [];
      }
    };

    $scope.getVpcIds = function () {
      if (!$scope.region) {
        return [];
      }

      return $scope.datasource.getVpcIds('pcx', $scope.region);
    };

    $scope.init();
  }

  return PCXQueryCtrl;
}();


var template = "\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/215/2101\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in PCXFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <gf-form-dropdown\n        ng-if=\"field.type === 'dropdown'\"\n        model=\"target.queries[field.key]\"\n        allow-custom=\"true\"\n        lookup-text=\"true\"\n        get-options=\"getDropdown(field.key)\"\n        on-change=\"onChange()\"\n        css-class=\"min-width-10\"\n      ></gf-form-dropdown>\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n\n</div>\n";
function pcxQuery() {
  return {
    template: template,
    controller: PCXQueryCtrl,
    restrict: 'E',
    scope: {
      target: '=',
      showDetail: '=',
      region: '=',
      datasource: '=',
      onChange: '&'
    }
  };
}
grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default.a.directive('pcxQuery', pcxQuery);

/***/ }),

/***/ "./datasource/tc_monitor/pcx/query_def.ts":
/*!************************************************!*\
  !*** ./datasource/tc_monitor/pcx/query_def.ts ***!
  \************************************************/
/*! exports provided: default, PCXInstanceAliasList, PCXFieldsDescriptor, templateQueryIdMap, namespace, PCXGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PCXInstanceAliasList", function() { return PCXInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PCXFieldsDescriptor", function() { return PCXFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PCXGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};


var namespace = 'QCE/PCX';
var PCXFields = {
  limit: 20,
  offset: 0,
  peeringConnectionId: '',
  peeringConnectionName: '',
  vpcId: '',
  state: undefined
};
var PCX_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'peeringConnectionId',
  queries: __assign({}, PCXFields)
};
var StateTypes = [{
  text: '申请中',
  value: 0
}, {
  text: '连接成功',
  value: 1
}, {
  text: '已过期',
  value: 2
}, {
  text: '对端已拒绝',
  value: 3
}, {
  text: '对端已删除',
  value: 4
}];
var PCXFieldsDescriptor = [{
  key: 'offset',
  enDescriptor: 'offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputnumber',
  min: 0
}, {
  key: 'limit',
  enDescriptor: 'limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为50',
  link: '',
  type: 'inputnumber',
  min: 1,
  max: 50
}, {
  key: 'peeringConnectionId',
  enDescriptor: 'PeeringConnection Id',
  cnDescriptor: '私有网络对等连接 ID',
  link: '',
  type: 'input'
}, {
  key: 'peeringConnectionName',
  enDescriptor: 'PeeringConnection Name',
  cnDescriptor: '对等连接名称',
  link: '',
  type: 'input'
}, {
  key: 'vpcId',
  enDescriptor: 'vpcId',
  cnDescriptor: '发起方私有网络 ID 值',
  link: 'https://cloud.tencent.com/document/api/215/1372',
  type: 'dropdown'
}, {
  key: 'state',
  enDescriptor: 'state',
  cnDescriptor: '连接状态',
  link: '',
  type: 'select',
  list: StateTypes
}];
var PCXInstanceAliasList = ['peeringConnectionId', 'peeringConnectionName'];
var templateQueryIdMap = {
  instance: 'peeringConnectionId'
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  var params = {};

  if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(queries)) {
    params.limit = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'limit', 20) || 20;
    params.offset = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'offset', 0) || 0;
    queries = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.omit(queries, ['offset', 'limit']);

    lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(queries, function (item, key) {
      if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(item)) {
        item = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(item);

        if (item.length > 0) {
          params[key] = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(item);
        }
      } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(item)) {
        if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNumber(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', undefined)) || !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', undefined))) {
          params[key] = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value');
        }
      } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNumber(item) || !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(item)) {
        params[key] = item;
      }
    });
  }

  return params;
}

/* harmony default export */ __webpack_exports__["default"] = (PCX_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/postgresql/datasource.ts":
/*!********************************************************!*\
  !*** ./datasource/tc_monitor/postgresql/datasource.ts ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/postgresql/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();




var CDBDatasource =
/** @class */
function (_super) {
  __extends(CDBDatasource, _super);

  function CDBDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = _query_def__WEBPACK_IMPORTED_MODULE_0__["namespace"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["POSTGRESInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["PostgreInvalidDemensions"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_0__["templateQueryIdMap"];
    _this.InstanceReqConfig = {
      service: 'postgres',
      action: 'DescribeDBInstances',
      responseField: 'DBInstanceSet'
    };
    _this.MetricReqConfig = {
      resultFilter: _query_def__WEBPACK_IMPORTED_MODULE_0__["modifyDimensons"]
    };
    return _this;
  }

  return CDBDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (CDBDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/postgresql/query.ts":
/*!***************************************************!*\
  !*** ./datasource/tc_monitor/postgresql/query.ts ***!
  \***************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _base_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_base/query */ "./datasource/tc_monitor/_base/query.ts");
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/postgresql/query_def.ts");


Object(_base_query__WEBPACK_IMPORTED_MODULE_0__["default"])(_query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorName"], _query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorConfig"]);

/***/ }),

/***/ "./datasource/tc_monitor/postgresql/query_def.ts":
/*!*******************************************************!*\
  !*** ./datasource/tc_monitor/postgresql/query_def.ts ***!
  \*******************************************************/
/*! exports provided: default, PostgresFieldsDescriptor, POSTGRESInstanceAliasList, templateQueryIdMap, modifyDimensons, namespace, queryEditorName, queryEditorConfig, PostgreInvalidDemensions, POSTGRESGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostgresFieldsDescriptor", function() { return PostgresFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "POSTGRESInstanceAliasList", function() { return POSTGRESInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modifyDimensons", function() { return modifyDimensons; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorName", function() { return queryEditorName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorConfig", function() { return queryEditorConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostgreInvalidDemensions", function() { return PostgreInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "POSTGRESGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");
var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};



var namespace = 'QCE/POSTGRES'; // 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称

var queryEditorName = 'postgresQuery';
var PostgresFields = {
  'db-instance-id': [],
  'db-instance-name': []
};
var PostgresFieldsDescriptor = [{
  key: 'db-instance-id',
  enDescriptor: 'DB Instance ID',
  cnDescriptor: 'DB 实例ID',
  link: '',
  type: 'inputMulti',
  min: 0
}, {
  key: 'db-instance-name',
  enDescriptor: 'DB Instance Name',
  cnDescriptor: 'DB 实例名称',
  link: '',
  type: 'inputMulti'
}]; // 各产品实例列表detail配置

var queryEditorConfig = {
  instanceDocUrl: 'https://cloud.tencent.com/document/api/409/16773',
  namespace: namespace,
  fieldDescriptor: PostgresFieldsDescriptor
};
var POSTGRESInstanceAliasList = ['DBInstanceId', 'DBInstanceName'];
var POSTGRES_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'DBInstanceId',
  queries: {
    Limit: 20,
    Offset: 0,
    Filters: __assign({}, PostgresFields)
  }
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  return Object(_common_utils__WEBPACK_IMPORTED_MODULE_1__["instanceQueryParamsBaseParse"])(queries, true);
}

function modifyDimensons(metricItem) {
  var metricTmp = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.cloneDeep(metricItem);

  metricTmp.Dimensions.forEach(function (item) {
    item.Dimensions = ['resourceId'];
  });
  return metricTmp;
}

var PostgreInvalidDemensions = {
  uid: 'DBInstanceId',
  resourceId: 'DBInstanceId'
};
var templateQueryIdMap = {
  instance: 'DBInstanceId'
};
/* harmony default export */ __webpack_exports__["default"] = (POSTGRES_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/qaap/datasource.ts":
/*!**************************************************!*\
  !*** ./datasource/tc_monitor/qaap/datasource.ts ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/qaap/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};





var QAAPDatasource =
/** @class */
function (_super) {
  __extends(QAAPDatasource, _super); // MetricReqConfig = {
  //   resultFilter: modifyDimensons,
  // };


  function QAAPDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = _query_def__WEBPACK_IMPORTED_MODULE_1__["namespace"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_1__["QAAPInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_1__["QAAPInvalidDemensions"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"]; // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致

    _this.InstanceReqConfig = {
      service: 'gaap',
      action: 'DescribeProxies',
      responseField: 'ProxySet',
      interceptor: {// response: (data: unknown[]) =>[
        //   {
        //     "NetDetectId": "netd-12345678",
        //   },
        // ],
      }
    };
    return _this;
  }

  QAAPDatasource.prototype.getMetrics = function (region) {
    if (region === void 0) {
      region = 'ap-guangzhou';
    }

    return __awaiter(this, void 0, void 0, function () {
      var rawSet;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , _super.prototype.getMetrics.call(this, region)];

          case 1:
            rawSet = _a.sent();
            return [2
            /*return*/
            , rawSet.filter(function (item) {
              return Object(lodash__WEBPACK_IMPORTED_MODULE_0__["get"])(item, 'Dimensions.length') === 1 && Object(lodash__WEBPACK_IMPORTED_MODULE_0__["get"])(item, 'Dimensions[0].Dimensions.length') === 1 && Object(lodash__WEBPACK_IMPORTED_MODULE_0__["get"])(item, 'Dimensions[0].Dimensions[0]') === 'channelId';
            })];
        }
      });
    });
  };

  return QAAPDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_2__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (QAAPDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/qaap/query.ts":
/*!*********************************************!*\
  !*** ./datasource/tc_monitor/qaap/query.ts ***!
  \*********************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _base_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_base/query */ "./datasource/tc_monitor/_base/query.ts");
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/qaap/query_def.ts");


Object(_base_query__WEBPACK_IMPORTED_MODULE_0__["default"])(_query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorName"], _query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorConfig"]);

/***/ }),

/***/ "./datasource/tc_monitor/qaap/query_def.ts":
/*!*************************************************!*\
  !*** ./datasource/tc_monitor/qaap/query_def.ts ***!
  \*************************************************/
/*! exports provided: default, QAAPFilterFieldsDescriptor, templateQueryIdMap, QAAPInstanceAliasList, QAAPInvalidDemensions, namespace, queryEditorName, queryEditorConfig, modifyDimensons, QAAPGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QAAPFilterFieldsDescriptor", function() { return QAAPFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QAAPInstanceAliasList", function() { return QAAPInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QAAPInvalidDemensions", function() { return QAAPInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorName", function() { return queryEditorName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorConfig", function() { return queryEditorConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modifyDimensons", function() { return modifyDimensons; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QAAPGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");


var namespace = 'QCE/QAAP'; // 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称

var queryEditorName = 'qaapQuery';
var QAAPInvalidDemensions = {
  channelId: 'InstanceId'
};
var QAAPInstanceAliasList = ['InstanceId'];
var templateQueryIdMap = {
  instance: 'InstanceId'
}; // select类型需要注意是{},multi后缀是[]

var QAAPFilterFields = {
  Limit: 20,
  Offset: 0,
  ProjectId: [],
  AccessRegion: [],
  RealServerRegion: [],
  GroupId: []
};
var QAAPFilterFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputNumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputNumber',
  min: 1,
  max: 100
}, {
  key: 'ProjectId',
  enDescriptor: 'ProjectId',
  cnDescriptor: '项目ID',
  link: '',
  type: 'inputMulti'
}, {
  key: 'AccessRegion',
  enDescriptor: 'AccessRegion',
  cnDescriptor: '接入地域',
  link: '',
  type: 'inputMulti'
}, {
  key: 'RealServerRegion',
  enDescriptor: 'RealServerRegion',
  cnDescriptor: '源站地域',
  link: '',
  type: 'inputMulti'
}, {
  key: 'GroupId',
  enDescriptor: 'GroupId',
  cnDescriptor: '通道组ID',
  link: '',
  type: 'inputMulti'
}]; // 各产品实例列表detail配置

var queryEditorConfig = {
  instanceDocUrl: 'https://cloud.tencent.com/document/api/608/36963',
  namespace: namespace,
  fieldDescriptor: QAAPFilterFieldsDescriptor
};
var QAAP_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'InstanceId',
  queries: QAAPFilterFields
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  return Object(_common_utils__WEBPACK_IMPORTED_MODULE_1__["instanceQueryParamsBaseParse"])(queries, true);
}

function modifyDimensons(metricItem) {
  var metricTmp = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.cloneDeep(metricItem); // metricTmp.Dimensions.forEach((item) => {
  //   item.Dimensions = ['netDetectId'];
  // });


  return metricTmp;
}

/* harmony default export */ __webpack_exports__["default"] = (QAAP_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/redis/datasource.ts":
/*!***************************************************!*\
  !*** ./datasource/tc_monitor/redis/datasource.ts ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/redis/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};




var REDISDatasource =
/** @class */
function (_super) {
  __extends(REDISDatasource, _super);

  function REDISDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = 'QCE/REDIS';
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["REDISInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["RedisInvalidDemensions"];
    _this.templateQueryIdMap = {
      instance: 'InstanceId'
    };
    _this.InstanceReqConfig = {
      service: 'redis',
      action: 'DescribeInstances',
      responseField: 'InstanceSet',
      interceptor: {
        request: function request(params) {
          return __assign(__assign({}, params), {
            MonitorVersion: '1m'
          });
        }
      }
    };
    return _this;
  }

  REDISDatasource.prototype.getMetrics = function (region) {
    if (region === void 0) {
      region = 'ap-guangzhou';
    }

    return __awaiter(this, void 0, void 0, function () {
      var rawSet;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , _super.prototype.getMetrics.call(this, region)];

          case 1:
            rawSet = _a.sent();
            return [2
            /*return*/
            , rawSet.filter(function (item) {
              return Object(_query_def__WEBPACK_IMPORTED_MODULE_0__["isValidMetric"])(item);
            })];
        }
      });
    });
  };

  return REDISDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (REDISDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/redis/query.ts":
/*!**********************************************!*\
  !*** ./datasource/tc_monitor/redis/query.ts ***!
  \**********************************************/
/*! exports provided: RedisQueryCtrl, redisQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RedisQueryCtrl", function() { return RedisQueryCtrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "redisQuery", function() { return redisQuery; });
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grafana/app/core/core_module */ "grafana/app/core/core_module");
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/redis/query_def.ts");



var RedisQueryCtrl =
/** @class */
function () {
  RedisQueryCtrl.$inject = ["$scope", "$rootScope"];

  /** @ngInject */
  function RedisQueryCtrl($scope, $rootScope) {
    $scope.init = function () {
      $scope.RedisFieldsDescriptor = _query_def__WEBPACK_IMPORTED_MODULE_1__["RedisFieldsDescriptor"];
    };

    $scope.onChecked = function (srcField, dstField) {
      if ($scope.target.queries[srcField] === true) {
        $scope.target.queries[dstField] = false;
      }

      $scope.onChange();
    };

    $scope.getDropdown = function (field) {
      switch (field) {
        default:
          return [];
      }
    };

    $scope.init();
  }

  return RedisQueryCtrl;
}();


var template = "\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/240/35769\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in RedisFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <gf-form-dropdown\n        ng-if=\"field.type === 'dropdown'\"\n        model=\"target.queries[field.key]\"\n        allow-custom=\"true\"\n        lookup-text=\"true\"\n        get-options=\"getDropdown(field.key)\"\n        on-change=\"onChange()\"\n        css-class=\"min-width-10\"\n      ></gf-form-dropdown>\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n\n</div>\n";
function redisQuery() {
  return {
    template: template,
    controller: RedisQueryCtrl,
    restrict: 'E',
    scope: {
      target: '=',
      showDetail: '=',
      region: '=',
      datasource: '=',
      onChange: '&'
    }
  };
}
grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default.a.directive('redisQuery', redisQuery);

/***/ }),

/***/ "./datasource/tc_monitor/redis/query_def.ts":
/*!**************************************************!*\
  !*** ./datasource/tc_monitor/redis/query_def.ts ***!
  \**************************************************/
/*! exports provided: default, RedisFieldsDescriptor, RedisInvalidDemensions, templateQueryIdMap, REDISInstanceAliasList, isValidMetric, REDISGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RedisFieldsDescriptor", function() { return RedisFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RedisInvalidDemensions", function() { return RedisInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "REDISInstanceAliasList", function() { return REDISInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isValidMetric", function() { return isValidMetric; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "REDISGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};


var BillingMode = [{
  text: '按量计费',
  value: 'postpaid'
}, {
  text: '包年包月',
  value: 'prepaid'
}];
var AutoRenew = [{
  text: '手动续费',
  value: 0
}, {
  text: '自动续费',
  value: 1
}, {
  text: '明确不自动续费',
  value: 2
}];
var Status = [{
  text: '待初始化',
  value: 0
}, {
  text: '流程执行中',
  value: 1
}, {
  text: '运行中',
  value: 2
}, {
  text: '已隔离',
  value: -2
}, {
  text: '待删除',
  value: -3
}];
var TypeVersion = [{
  text: '单机版',
  value: 1
}, {
  text: '主从版',
  value: 2
}, {
  text: '集群版',
  value: 3
}];
var OrderBy = [{
  text: 'projectId',
  value: 'projectId'
}, {
  text: 'instancename',
  value: 'instancename'
}, {
  text: 'createtime',
  value: 'createtime'
}, {
  text: 'type',
  value: 'type'
}, {
  text: 'curDeadline',
  value: 'curDeadline'
}];
var OrderType = [{
  text: '升序',
  value: 0
}, {
  text: '降序',
  value: 1
}];
var Type = [{
  text: 'Redis老集群版',
  value: 1
}, {
  text: 'Redis 2.8主从版',
  value: 2
}, {
  text: 'CKV主从版',
  value: 3
}, {
  text: 'CKV集群版',
  value: 4
}, {
  text: 'Redis 2.8单机版',
  value: 5
}, {
  text: 'Redis 4.0主从版',
  value: 6
}, {
  text: 'Redis 4.0集群版',
  value: 7
}, {
  text: 'Redis5.0主从版',
  value: 8
}, {
  text: 'Redis5.0集群版',
  value: 9
}];
var RedisFields = {
  InstanceId: '',
  OrderBy: '',
  OrderType: null,
  VpcIds: [],
  SubnetIds: [],
  ProjectIds: [],
  SearchKey: '',
  InstanceName: '',
  UniqVpcIds: [],
  UniqSubnetIds: [],
  Status: [],
  TypeVersion: null,
  EngineName: '',
  AutoRenew: null,
  BillingMode: '',
  Type: null
};
var RedisFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputnumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputnumber',
  min: 1,
  max: 100
}, {
  key: 'InstanceId',
  enDescriptor: 'InstancesId',
  cnDescriptor: '实例id',
  type: 'input'
}, {
  key: 'OrderBy',
  enDescriptor: 'OrderBy',
  cnDescriptor: '排序字段',
  link: '',
  type: 'select',
  list: OrderBy
}, {
  key: 'OrderType',
  enDescriptor: 'OrderType',
  cnDescriptor: '排序字段',
  link: '',
  type: 'select',
  list: OrderType
}, {
  key: 'VpcIds',
  enDescriptor: 'VpcIds',
  cnDescriptor: '私有网络ID数组，数组下标从0开始，如果不传则默认选择基础网络，如：47525',
  link: '',
  type: 'inputmulti'
}, {
  key: 'SubnetIds',
  enDescriptor: 'SubnetIds',
  cnDescriptor: '子网ID数组，数组下标从0开始，如：56854',
  link: '',
  type: 'inputmulti'
}, {
  key: 'ProjectIds',
  enDescriptor: 'ProjectIds',
  cnDescriptor: '项目ID 组成的数组',
  link: '',
  type: 'inputmulti'
}, {
  key: 'SearchKey',
  enDescriptor: 'SearchKey',
  cnDescriptor: '查找实例的ID',
  link: '',
  type: 'input'
}, {
  key: 'InstanceName',
  enDescriptor: 'InstanceName',
  cnDescriptor: '实例名称',
  link: '',
  type: 'input'
}, {
  key: 'UniqVpcIds',
  enDescriptor: 'UniqVpcIds',
  cnDescriptor: '私有网络ID数组，数组下标从0开始，如果不传则默认选择基础网络，如：vpc-sad23jfdfk',
  link: '',
  type: 'inputmulti'
}, {
  key: 'UniqSubnetIds',
  enDescriptor: 'UniqSubnetIds',
  cnDescriptor: '子网ID数组，数组下标从0开始，如：subnet-fdj24n34j2',
  link: '',
  type: 'inputmulti'
}, {
  key: 'Status',
  enDescriptor: 'Status',
  cnDescriptor: '实例状态',
  multiple: true,
  type: 'select',
  list: Status
}, {
  key: 'TypeVersion',
  enDescriptor: 'TypeVersion',
  cnDescriptor: '类型版本',
  link: '',
  type: 'select',
  list: TypeVersion
}, {
  key: 'EngineName',
  enDescriptor: 'EngineName',
  cnDescriptor: '引擎信息：Redis-2.8，Redis-4.0，CKV',
  link: '',
  type: 'input'
}, {
  key: 'AutoRenew',
  enDescriptor: 'AutoRenew',
  cnDescriptor: '续费模式',
  multiple: true,
  type: 'select',
  list: AutoRenew
}, {
  key: 'BillingMode',
  enDescriptor: 'BillingMode',
  cnDescriptor: '计费模式：postpaid-按量计费；prepaid-包年包月',
  link: '',
  type: 'select',
  list: BillingMode
}, {
  key: 'Type',
  enDescriptor: 'Type',
  cnDescriptor: '实例类型',
  link: '',
  type: 'select',
  list: Type
}];
var REDIS_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'InstanceId',
  queries: __assign({}, RedisFields)
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  var params = {};

  if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(queries)) {
    params.Limit = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Limit', 20) || 20;
    params.Offset = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Offset', 0) || 0;
    queries = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.omit(queries, ['Offset', 'Limit']);

    lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(queries, function (item, key) {
      if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(item)) {
        item = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(item);

        if (item.length > 0) {
          params[key] = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(item);
        }
      } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(item)) {
        // select 单选
        if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNumber(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', undefined)) || !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', undefined))) {
          params[key] = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value');
        }
      } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNumber(item) || !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(item)) {
        params[key] = item;
      }
    });
  }

  return params;
}

function isValidMetric(metricObj) {
  if (metricObj === void 0) {
    metricObj = {};
  }

  var dimension = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(metricObj, 'Dimensions[0].Dimensions');

  return dimension.length === 1 && lodash__WEBPACK_IMPORTED_MODULE_0___default.a.indexOf(dimension, 'instanceid') !== -1;
}

var REDISInstanceAliasList = ['InstanceId', 'InstanceName', 'WanIp'];
var RedisInvalidDemensions = {
  redis_uuid: 'InstanceId',
  instanceid: 'InstanceId'
};
var templateQueryIdMap = {
  instance: 'InstanceId'
};
/* harmony default export */ __webpack_exports__["default"] = (REDIS_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/redis_mem/datasource.ts":
/*!*******************************************************!*\
  !*** ./datasource/tc_monitor/redis_mem/datasource.ts ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/redis_mem/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};







var REDISDatasource =
/** @class */
function (_super) {
  __extends(REDISDatasource, _super);

  function REDISDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = _query_def__WEBPACK_IMPORTED_MODULE_1__["namespace"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_1__["REDISMEMInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_1__["RedisMemInvalidDemensions"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"];
    _this.extrasAlias = [_query_def__WEBPACK_IMPORTED_MODULE_1__["RedisMemInvalidDemensions"].pnodeid, _query_def__WEBPACK_IMPORTED_MODULE_1__["RedisMemInvalidDemensions"].rnodeid];
    _this.InstanceReqConfig = {
      service: 'redis',
      action: 'DescribeInstances',
      responseField: 'InstanceSet',
      interceptor: {
        request: function request(params) {
          return __assign(__assign({}, params), {
            MonitorVersion: '5s'
          });
        }
      }
    };
    return _this;
  }

  REDISDatasource.prototype.getInstanceNodeInfo = function (params) {
    return __awaiter(this, void 0, void 0, function () {
      var region, instanceId, serviceInfo, res;

      var _this = this;

      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            region = params.region, instanceId = params.instanceId;
            serviceInfo = Object(_common_constants__WEBPACK_IMPORTED_MODULE_3__["GetServiceAPIInfo"])(region, 'redis');
            return [4
            /*yield*/
            , Object(_common_utils__WEBPACK_IMPORTED_MODULE_4__["fetchAllFactory"])(function (data) {
              return _this.doRequest({
                url: _this.url + serviceInfo.path,
                data: data
              }, serviceInfo.service, {
                region: region,
                action: 'DescribeInstanceNodeInfo'
              });
            }, {
              InstanceId: instanceId
            }, _query_def__WEBPACK_IMPORTED_MODULE_1__["NodeType"])];

          case 1:
            res = _a.sent();
            return [2
            /*return*/
            , res];
        }
      });
    });
  };

  REDISDatasource.prototype.fetchMetricData = function (action, region, instance, query) {
    return __awaiter(this, void 0, void 0, function () {
      var rs, nodetype, ndoeTypeIndex;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            if (!(action === 'DescribeInstanceNodeInfo')) return [3
            /*break*/
            , 2];
            return [4
            /*yield*/
            , this.getInstanceNodeInfo({
              region: region,
              instanceId: instance[this.templateQueryIdMap.instance]
            })];

          case 1:
            rs = _a.sent();
            nodetype = query.nodetype;
            ndoeTypeIndex = _query_def__WEBPACK_IMPORTED_MODULE_1__["NodeType"].indexOf(nodetype);
            return [2
            /*return*/
            , ndoeTypeIndex === -1 ? [] : lodash__WEBPACK_IMPORTED_MODULE_0___default.a.map(rs[ndoeTypeIndex], function (item) {
              return {
                text: item.NodeId,
                value: item.NodeId
              };
            })];

          case 2:
            return [2
            /*return*/
            , []];
        }
      });
    });
  };

  return REDISDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_2__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (REDISDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/redis_mem/query.ts":
/*!**************************************************!*\
  !*** ./datasource/tc_monitor/redis_mem/query.ts ***!
  \**************************************************/
/*! exports provided: RedisMemQueryCtrl, redisMemQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RedisMemQueryCtrl", function() { return RedisMemQueryCtrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "redisMemQuery", function() { return redisMemQuery; });
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grafana/app/core/core_module */ "grafana/app/core/core_module");
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/redis_mem/query_def.ts");
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};






var RedisMemQueryCtrl =
/** @class */
function () {
  RedisMemQueryCtrl.$inject = ["$scope", "$rootScope"];

  /** @ngInject */
  function RedisMemQueryCtrl($scope, $rootScope) {
    var _this = this;

    $scope.init = function () {
      $scope.RedisMemFieldsDescriptor = _query_def__WEBPACK_IMPORTED_MODULE_2__["RedisMemFieldsDescriptor"];
    };

    $scope.clearExtrasAlias = function () {
      $scope.target.rnodeid = '';
      $scope.target.pnodeid = '';
    };

    $scope.onChecked = function (srcField, dstField) {
      if ($scope.target.queries[srcField] === true) {
        $scope.target.queries[dstField] = false;
      }

      $scope.onChange();
    };

    $scope.getDropdown = function (field) {
      switch (field) {
        default:
          return [];
      }
    };

    $scope.getVariableId = function (data, type) {
      var variableData = data;
      var service = Object(_common_constants__WEBPACK_IMPORTED_MODULE_3__["GetServiceFromNamespace"])(_query_def__WEBPACK_IMPORTED_MODULE_2__["namespace"]);
      variableData = $scope.datasource.getServiceFn(service, 'getVariable')(variableData);

      if (!variableData) {
        return '';
      }

      try {
        variableData = JSON.parse(variableData)[_query_def__WEBPACK_IMPORTED_MODULE_2__["templateQueryIdMap"][type]];
      } catch (error) {}

      return variableData;
    };

    $scope.getExtraDropdown = function (target, nodetype) {
      return __awaiter(_this, void 0, void 0, function () {
        var instance, service, instanceId, region, rs, ndoeTypeIndex;
        return __generator(this, function (_a) {
          switch (_a.label) {
            case 0:
              instance = $scope.target.instance;
              service = Object(_common_constants__WEBPACK_IMPORTED_MODULE_3__["GetServiceFromNamespace"])(_query_def__WEBPACK_IMPORTED_MODULE_2__["namespace"]);
              instanceId = $scope.getVariableId(instance, 'instance');
              region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);
              return [4
              /*yield*/
              , $scope.datasource.getServiceFn(service, 'getInstanceNodeInfo')({
                region: region,
                instanceId: instanceId
              })];

            case 1:
              rs = _a.sent();
              ndoeTypeIndex = _query_def__WEBPACK_IMPORTED_MODULE_2__["NodeType"].indexOf(nodetype);
              return [2
              /*return*/
              , ndoeTypeIndex === -1 ? [] : Object(lodash__WEBPACK_IMPORTED_MODULE_1__["map"])(rs[ndoeTypeIndex], function (item) {
                return {
                  text: item.NodeId,
                  value: item.NodeId
                };
              })];
          }
        });
      });
    };

    $scope.init();
  }

  return RedisMemQueryCtrl;
}();


var template = "\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/240/35769\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in RedisMemFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <gf-form-dropdown\n        ng-if=\"field.type === 'dropdown'\"\n        model=\"target.queries[field.key]\"\n        allow-custom=\"true\"\n        lookup-text=\"true\"\n        get-options=\"getDropdown(field.key)\"\n        on-change=\"onChange()\"\n        css-class=\"min-width-10\"\n      ></gf-form-dropdown>\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n\n</div>\n\n<div class=\"gf-form-inline\" ng-if=\"target.instance && dims.rnodeid\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label query-keyword width-9\">\n      RedisNode\n    </label>\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n      <gf-form-dropdown model=\"target.rnodeid\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getExtraDropdown(target, 'Redis')\"\n        on-change=\"onRefresh()\" css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n  </div>\n</div>\n<div class=\"gf-form-inline\" ng-if=\"target.instance && dims.pnodeid\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label query-keyword width-9\">\n      ProxyNode\n    </label>\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n      <gf-form-dropdown model=\"target.pnodeid\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getExtraDropdown(target, 'Proxy')\"\n        on-change=\"onRefresh()\" css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n  </div>\n</div>\n";
function redisMemQuery() {
  return {
    template: template,
    controller: RedisMemQueryCtrl,
    restrict: 'E',
    scope: {
      target: '=',
      showDetail: '=',
      region: '=',
      datasource: '=',
      onChange: '&',
      onRefresh: '&',
      dims: '='
    },
    link: function link(scope, element, attrs) {
      scope.$watch('target.instance', function () {
        var _a;

        (_a = scope.clearExtrasAlias) === null || _a === void 0 ? void 0 : _a.call(scope);
      });
      scope.$watch('target.metricName', function () {
        var _a;

        (_a = scope.clearExtrasAlias) === null || _a === void 0 ? void 0 : _a.call(scope);
      });
    }
  };
}
grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default.a.directive('redisMemQuery', redisMemQuery);

/***/ }),

/***/ "./datasource/tc_monitor/redis_mem/query_def.ts":
/*!******************************************************!*\
  !*** ./datasource/tc_monitor/redis_mem/query_def.ts ***!
  \******************************************************/
/*! exports provided: default, RedisMemFieldsDescriptor, RedisMemInvalidDemensions, REDISMEMInstanceAliasList, templateQueryIdMap, namespace, NodeType, REDISMEMGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RedisMemFieldsDescriptor", function() { return RedisMemFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RedisMemInvalidDemensions", function() { return RedisMemInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "REDISMEMInstanceAliasList", function() { return REDISMEMInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NodeType", function() { return NodeType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "REDISMEMGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};


var namespace = 'QCE/REDIS_MEM';
var BillingMode = [{
  text: '按量计费',
  value: 'postpaid'
}, {
  text: '包年包月',
  value: 'prepaid'
}];
var AutoRenew = [{
  text: '手动续费',
  value: 0
}, {
  text: '自动续费',
  value: 1
}, {
  text: '明确不自动续费',
  value: 2
}];
var Status = [{
  text: '待初始化',
  value: 0
}, {
  text: '流程执行中',
  value: 1
}, {
  text: '运行中',
  value: 2
}, {
  text: '已隔离',
  value: -2
}, {
  text: '待删除',
  value: -3
}];
var TypeVersion = [{
  text: '单机版',
  value: 1
}, {
  text: '主从版',
  value: 2
}, {
  text: '集群版',
  value: 3
}];
var OrderBy = [{
  text: 'projectId',
  value: 'projectId'
}, {
  text: 'instancename',
  value: 'instancename'
}, {
  text: 'createtime',
  value: 'createtime'
}, {
  text: 'type',
  value: 'type'
}, {
  text: 'curDeadline',
  value: 'curDeadline'
}];
var OrderType = [{
  text: '升序',
  value: 0
}, {
  text: '降序',
  value: 1
}];
var Type = [{
  text: 'Redis老集群版',
  value: 1
}, {
  text: 'Redis 2.8主从版',
  value: 2
}, {
  text: 'CKV主从版',
  value: 3
}, {
  text: 'CKV集群版',
  value: 4
}, {
  text: 'Redis 2.8单机版',
  value: 5
}, {
  text: 'Redis 4.0主从版',
  value: 6
}, {
  text: 'Redis 4.0集群版',
  value: 7
}, {
  text: 'Redis5.0主从版',
  value: 8
}, {
  text: 'Redis5.0集群版',
  value: 9
}];
var RedisFields = {
  InstanceId: '',
  OrderBy: '',
  OrderType: null,
  VpcIds: [],
  SubnetIds: [],
  ProjectIds: [],
  SearchKey: '',
  InstanceName: '',
  UniqVpcIds: [],
  UniqSubnetIds: [],
  Status: [],
  TypeVersion: null,
  EngineName: '',
  AutoRenew: null,
  BillingMode: '',
  Type: null
};
var RedisMemFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputnumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputnumber',
  min: 1,
  max: 100
}, {
  key: 'InstanceId',
  enDescriptor: 'InstancesId',
  cnDescriptor: '实例id',
  type: 'input'
}, {
  key: 'OrderBy',
  enDescriptor: 'OrderBy',
  cnDescriptor: '排序字段',
  link: '',
  type: 'select',
  list: OrderBy
}, {
  key: 'OrderType',
  enDescriptor: 'OrderType',
  cnDescriptor: '排序字段',
  link: '',
  type: 'select',
  list: OrderType
}, {
  key: 'VpcIds',
  enDescriptor: 'VpcIds',
  cnDescriptor: '私有网络ID数组，数组下标从0开始，如果不传则默认选择基础网络，如：47525',
  link: '',
  type: 'inputmulti'
}, {
  key: 'SubnetIds',
  enDescriptor: 'SubnetIds',
  cnDescriptor: '子网ID数组，数组下标从0开始，如：56854',
  link: '',
  type: 'inputmulti'
}, {
  key: 'ProjectIds',
  enDescriptor: 'ProjectIds',
  cnDescriptor: '项目ID 组成的数组',
  link: '',
  type: 'inputmulti'
}, {
  key: 'SearchKey',
  enDescriptor: 'SearchKey',
  cnDescriptor: '查找实例的ID',
  link: '',
  type: 'input'
}, {
  key: 'InstanceName',
  enDescriptor: 'InstanceName',
  cnDescriptor: '实例名称',
  link: '',
  type: 'input'
}, {
  key: 'UniqVpcIds',
  enDescriptor: 'UniqVpcIds',
  cnDescriptor: '私有网络ID数组，数组下标从0开始，如果不传则默认选择基础网络，如：vpc-sad23jfdfk',
  link: '',
  type: 'inputmulti'
}, {
  key: 'UniqSubnetIds',
  enDescriptor: 'UniqSubnetIds',
  cnDescriptor: '子网ID数组，数组下标从0开始，如：subnet-fdj24n34j2',
  link: '',
  type: 'inputmulti'
}, {
  key: 'Status',
  enDescriptor: 'Status',
  cnDescriptor: '实例状态',
  multiple: true,
  type: 'select',
  list: Status
}, {
  key: 'TypeVersion',
  enDescriptor: 'TypeVersion',
  cnDescriptor: '类型版本',
  link: '',
  type: 'select',
  list: TypeVersion
}, {
  key: 'EngineName',
  enDescriptor: 'EngineName',
  cnDescriptor: '引擎信息：Redis-2.8，Redis-4.0，CKV',
  link: '',
  type: 'input'
}, {
  key: 'AutoRenew',
  enDescriptor: 'AutoRenew',
  cnDescriptor: '续费模式',
  multiple: true,
  type: 'select',
  list: AutoRenew
}, {
  key: 'BillingMode',
  enDescriptor: 'BillingMode',
  cnDescriptor: '计费模式：postpaid-按量计费；prepaid-包年包月',
  link: '',
  type: 'select',
  list: BillingMode
}, {
  key: 'Type',
  enDescriptor: 'Type',
  cnDescriptor: '实例类型',
  link: '',
  type: 'select',
  list: Type
}];
var REDISMEM_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'InstanceId',
  queries: __assign({}, RedisFields),
  rnodeid: '',
  pnodeid: ''
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  var params = {};

  if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(queries)) {
    params.Limit = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Limit', 20) || 20;
    params.Offset = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Offset', 0) || 0;
    queries = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.omit(queries, ['Offset', 'Limit']);

    lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(queries, function (item, key) {
      if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(item)) {
        item = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(item);

        if (item.length > 0) {
          params[key] = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(item);
        }
      } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(item)) {
        // select 单选
        if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNumber(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', undefined)) || !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', undefined))) {
          params[key] = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value');
        }
      } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNumber(item) || !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(item)) {
        params[key] = item;
      }
    });
  }

  return params;
}

var REDISMEMInstanceAliasList = ['InstanceId', 'InstanceName', 'WanIp'];
var RedisMemInvalidDemensions = {
  instanceid: 'InstanceId',
  rnodeid: 'rnodeid',
  pnodeid: 'pnodeid'
};
var templateQueryIdMap = {
  instance: 'InstanceId',
  rnodeid: 'rnodeid',
  pnodeid: 'pnodeid'
};
var NodeType = ['Redis', 'Proxy'];
/* harmony default export */ __webpack_exports__["default"] = (REDISMEM_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/scf/datasource.ts":
/*!*************************************************!*\
  !*** ./datasource/tc_monitor/scf/datasource.ts ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/scf/query_def.ts");
/* harmony import */ var _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/datasourceStorage */ "./datasource/common/datasourceStorage.ts");
/* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../locale */ "./locale/index.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};







var SCFDatasource =
/** @class */
function (_super) {
  __extends(SCFDatasource, _super);

  function SCFDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_2__["templateQueryIdMap"];
    _this.queryMonitorExtraConfg = _query_def__WEBPACK_IMPORTED_MODULE_2__["queryMonitorExtraConfg"];
    _this.keyInStorage = _query_def__WEBPACK_IMPORTED_MODULE_2__["keyInStorage"];
    _this.Namespace = 'QCE/SCF_V2';
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_2__["SCFInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_2__["SCFInvalidDemensions"];
    _this.InstanceReqConfig = {
      service: 'scf',
      action: 'ListFunctions',
      responseField: 'Functions'
    };
    return _this;
  }

  SCFDatasource.prototype.getRegions = function () {
    return Promise.resolve(_query_def__WEBPACK_IMPORTED_MODULE_2__["regionSupported"].map(function (_a) {
      var value = _a.value;
      return {
        value: value,
        text: Object(_locale__WEBPACK_IMPORTED_MODULE_4__["t"])(value)
      };
    }));
  };

  SCFDatasource.prototype.getMetrics = function (region) {
    if (region === void 0) {
      region = 'ap-guangzhou';
    }

    return __awaiter(this, void 0, void 0, function () {
      var rawSet;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , _super.prototype.getMetrics.call(this, region)];

          case 1:
            rawSet = _a.sent();
            return [2
            /*return*/
            , rawSet.filter(function (item) {
              var _a, _b, _c, _d, _e, _f;
              /* hack：这里多加了筛选条件，是因为后端数据不准确，坑啊！ 只拿取包含functionName的指标 */


              return ((_c = (_b = (_a = item.Dimensions) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.Dimensions) === null || _c === void 0 ? void 0 : _c.includes('functionName')) && ((_f = (_e = (_d = item.Dimensions) === null || _d === void 0 ? void 0 : _d[0]) === null || _e === void 0 ? void 0 : _e.Dimensions) === null || _f === void 0 ? void 0 : _f.includes('namespace')) && !item.MetricName.startsWith('Name');
            })];
        }
      });
    });
  };

  SCFDatasource.prototype.getVersions = function (region, params) {
    var serviceInfo = Object(_common_constants__WEBPACK_IMPORTED_MODULE_0__["GetServiceAPIInfo"])(region, 'scf');
    return this.doRequest({
      url: this.url + serviceInfo.path,
      data: params
    }, serviceInfo.service, {
      region: region,
      action: 'ListVersionByFunction'
    }).then(function (response) {
      return response.Versions;
    });
  };

  SCFDatasource.prototype.fetchMetricData = function (action, region, instance) {
    return __awaiter(this, void 0, void 0, function () {
      var rs, result;

      var _this = this;

      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            if (!(action === 'ListVersionByFunction')) return [3
            /*break*/
            , 3];
            return [4
            /*yield*/
            , this.getVersions(region, {
              FunctionName: instance[this.templateQueryIdMap.instance]
            })];

          case 1:
            rs = _a.sent();
            result = rs.map(function (o) {
              o._InstanceAliasValue = o[_this.templateQueryIdMap.version];
              return {
                text: o[_this.templateQueryIdMap.version],
                value: o[_this.templateQueryIdMap.version]
              };
            });
            return [4
            /*yield*/
            , _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_3__["default"].setExtraStorage(this.service, this.keyInStorage.version, rs)];

          case 2:
            _a.sent();

            return [2
            /*return*/
            , result];

          case 3:
            return [2
            /*return*/
            , []];
        }
      });
    });
  };

  return SCFDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (SCFDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/scf/query.ts":
/*!********************************************!*\
  !*** ./datasource/tc_monitor/scf/query.ts ***!
  \********************************************/
/*! exports provided: SCFQueryCtrl, scfQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SCFQueryCtrl", function() { return SCFQueryCtrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scfQuery", function() { return scfQuery; });
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grafana/app/core/core_module */ "grafana/app/core/core_module");
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/scf/query_def.ts");
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};




var SCFQueryCtrl =
/** @class */
function () {
  SCFQueryCtrl.$inject = ["$scope", "$rootScope"];

  /** @ngInject */
  function SCFQueryCtrl($scope, $rootScope) {
    var _this = this;

    $scope.init = function () {
      $scope.SCFQueryDescriptor = _query_def__WEBPACK_IMPORTED_MODULE_1__["SCFQueryDescriptor"];
    };

    $scope.getInstanceId = function () {
      var instance = $scope.target.instance;
      instance = $scope.datasource.getServiceFn('scf', 'getVariable')(instance);

      if (!instance) {
        return '';
      }

      try {
        instance = JSON.parse(instance).FunctionName;
      } catch (error) {// console.log();
      }

      return instance;
    };

    $scope.getVersions = function (target) {
      return __awaiter(_this, void 0, void 0, function () {
        var FunctionName, region, fetcher;
        return __generator(this, function (_a) {
          FunctionName = $scope.getInstanceId();
          region = $scope.datasource.getServiceFn('scf', 'getVariable')(target.region);
          if (!FunctionName || !region) return [2
          /*return*/
          , []];
          fetcher = $scope.datasource.getServiceFn('scf', 'getVersions');
          return [2
          /*return*/
          , fetcher(region, {
            FunctionName: FunctionName
          }).then(function (res) {
            // console.log(res, 'res');
            var result = res.map(function (o) {
              o._InstanceAliasValue = o[_query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"].version];
              return {
                text: o[_query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"].version],
                value: JSON.stringify(o)
              };
            });
            return result;
          })];
        });
      });
    }; // $scope.onChecked = (srcField, dstField) => {
    //   if ($scope.target.queries[srcField] === true) {
    //     $scope.target.queries[dstField] = false;
    //   }
    //   $scope.onChange();
    // };
    // $scope.getDropdown = (field) => {
    //   switch (field) {
    //     case 'zone':
    //       return $scope.getZones();
    //     default:
    //       return [];
    //   }
    // };
    // $scope.getZones = () => {
    //   if (!$scope.region) {
    //     return [];
    //   }
    //   return $scope.datasource.getZones('cvm', $scope.region);
    // };


    $scope.init();
  }

  return SCFQueryCtrl;
}();


var template = "\n<div>\n\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/583/18582\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in SCFQueryDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- version\u90E8\u5206 -->\n<div class=\"gf-form-inline\" ng-if=\"target.instance\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label query-keyword width-9\">Version</label>\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n      <gf-form-dropdown model=\"target.version\" allow-custom=\"false\" get-options=\"getVersions(target)\"\n        on-change=\"onRefresh()\" css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n  </div>\n</div>\n\n  </div>\n";
function scfQuery() {
  return {
    template: template,
    controller: SCFQueryCtrl,
    restrict: 'E',
    scope: {
      target: '=',
      showDetail: '=',
      region: '=',
      datasource: '=',
      getDropdownOptions: '&',
      onChange: '&',
      onRefresh: '&'
    }
  };
}
grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default.a.directive('scfQuery', scfQuery);

/***/ }),

/***/ "./datasource/tc_monitor/scf/query_def.ts":
/*!************************************************!*\
  !*** ./datasource/tc_monitor/scf/query_def.ts ***!
  \************************************************/
/*! exports provided: SCFQueryDescriptor, default, SCFInstanceAliasList, SCFInvalidDemensions, queryMonitorExtraConfg, regionSupported, templateQueryIdMap, keyInStorage, SCFGetInstanceQueryParams, SCFDefaultDimensionList */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SCFQueryDescriptor", function() { return SCFQueryDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SCFInstanceAliasList", function() { return SCFInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SCFInvalidDemensions", function() { return SCFInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryMonitorExtraConfg", function() { return queryMonitorExtraConfg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "regionSupported", function() { return regionSupported; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keyInStorage", function() { return keyInStorage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SCFGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SCFDefaultDimensionList", function() { return SCFDefaultDimensionList; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);

var SCFQueryDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputnumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputnumber',
  min: 1,
  max: 100
}, {
  key: 'SearchKey',
  enDescriptor: 'SearchKey',
  cnDescriptor: '支持FunctionName模糊匹配',
  link: '',
  type: 'input'
}, {
  key: 'Namespace',
  enDescriptor: 'Namespace',
  cnDescriptor: '云函数命名空间',
  link: '',
  type: 'input'
}, {
  key: 'Description',
  enDescriptor: 'Description',
  cnDescriptor: '函数描述，支持模糊搜索',
  link: '',
  type: 'input'
}, {
  key: 'OrderBy',
  enDescriptor: 'OrderBy',
  cnDescriptor: '排序字段',
  link: '',
  type: 'select',
  list: [{
    text: 'AddTime',
    value: 'AddTime'
  }, {
    text: 'ModTime',
    value: 'ModTime'
  }, {
    text: 'FunctionName',
    value: 'FunctionName'
  }]
}, {
  key: 'Order',
  enDescriptor: 'Order Direction',
  cnDescriptor: '排序方式',
  link: '',
  type: 'select',
  list: [{
    text: 'ASC',
    value: 'ASC'
  }, {
    text: 'DESC',
    value: 'DESC'
  }]
} // {
//   key: 'Filters',
//   enDescriptor: 'Filters',
//   cnDescriptor: '按照标签键值对进行过滤',
//   link: '',
//   type: 'dropdownmulti',
// },
];
var SCF_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'FunctionName',
  version: '',
  queries: {
    Offset: 0,
    Limit: 20,
    OrderBy: {},
    Order: {},
    SearchKey: '',
    Namespace: '',
    Description: '' // Filters:  {},

  }
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  var params = {};

  if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(queries)) {
    params.Limit = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Limit', 20) || 20;
    params.Offset = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Offset', 0) || 0;
    queries = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.omit(queries, ['Offset', 'Limit']);

    lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(queries, function (item, key) {
      if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(item)) {
        item = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(item);

        if (item.length > 0) {
          params[key] = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(item);
        }
      } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(item)) {
        if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNumber(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', undefined)) || !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', undefined))) {
          params[key] = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value');
        }
      } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNumber(item) || !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(item)) {
        params[key] = item;
      }
    });
  }

  return params;
}

var SCFInstanceAliasList = ['FunctionId', 'FunctionName']; // 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key

var SCFInvalidDemensions = {
  functionName: 'FunctionName',
  namespace: 'Namespace',
  version: 'Version'
};
var templateQueryIdMap = {
  instance: 'FunctionName',
  version: 'Version'
};
var regionSupported = [{
  value: 'ap-beijing'
}, {
  value: 'ap-chengdu'
}, {
  value: 'ap-chongqing'
}, {
  value: 'ap-guangzhou'
}, {
  value: 'ap-hongkong'
}, {
  value: 'ap-mumbai'
}, {
  value: 'ap-shanghai'
}, {
  value: 'ap-shanghai-fsi'
}, {
  value: 'ap-shenzhen-fsi'
}, {
  value: 'ap-singapore'
}, {
  value: 'ap-tokyo'
}, {
  value: 'eu-frankfurt'
}, {
  value: 'na-siliconvalley'
}, {
  value: 'na-toronto'
}]; // 需要缓存到storage的内容的key列表

var keyInStorage = {
  version: 'version'
};
/*
如果有InstanceId额外的维度，原则上都需要传入此map结构配置
key的含义：
  经过InvalidDemensions处理后的string。topicId =》TopicId。
  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId
value的含义：
  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、
  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。
                    默认取通过InvalidDemsion处理后的key
  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。
                    即：templateQueryIdMap中内容。
                    联合上面2的内容筛选出原始sourceMap
*/

var queryMonitorExtraConfg = {
  Version: {
    dim_KeyInStorage: keyInStorage.version,
    dim_KeyInTarget: 'version',
    dim_KeyInMap: templateQueryIdMap.version
  }
};
/* harmony default export */ __webpack_exports__["default"] = (SCF_STATE);
 // monitor监控数据默认支持的维度

var SCFDefaultDimensionList = ['functionName', 'namespace', 'version'];

/***/ }),

/***/ "./datasource/tc_monitor/sqlserver/datasource.ts":
/*!*******************************************************!*\
  !*** ./datasource/tc_monitor/sqlserver/datasource.ts ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/sqlserver/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../locale */ "./locale/index.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};







var DCDatasource =
/** @class */
function (_super) {
  __extends(DCDatasource, _super);

  function DCDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = _query_def__WEBPACK_IMPORTED_MODULE_0__["namespace"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["SQLSERVERInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["SQLSERVERInvalidDemensions"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_0__["templateQueryIdMap"]; // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致

    _this.InstanceReqConfig = {
      service: 'sqlserver',
      action: 'DescribeDBInstances',
      responseField: 'DBInstances'
    };
    return _this;
  }

  DCDatasource.prototype.getMetrics = function (region) {
    if (region === void 0) {
      region = 'ap-guangzhou';
    }

    return __awaiter(this, void 0, void 0, function () {
      var rawSet;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , _super.prototype.getMetrics.call(this, region)];

          case 1:
            rawSet = _a.sent();
            return [2
            /*return*/
            , lodash__WEBPACK_IMPORTED_MODULE_3___default.a.compact(rawSet.map(function (item) {
              return Object(_query_def__WEBPACK_IMPORTED_MODULE_0__["modifyDimensons"])(item);
            }))];
        }
      });
    });
  };

  DCDatasource.prototype.getRegions = function () {
    return Promise.resolve(_query_def__WEBPACK_IMPORTED_MODULE_0__["regionSupported"].map(function (_a) {
      var value = _a.value;
      return {
        value: value,
        text: Object(_locale__WEBPACK_IMPORTED_MODULE_4__["t"])(value)
      };
    }));
  };

  DCDatasource.prototype.getFilterDropdown = function (_a) {
    var field = _a.field,
        region = _a.region;

    if (field === 'Zone') {
      var serviceInfo = Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["GetServiceAPIInfo"])(region, 'cvm');
      return this.doRequest({
        url: this.url + serviceInfo.path
      }, serviceInfo.service, {
        region: region,
        action: 'DescribeZones'
      }).then(function (response) {
        return lodash__WEBPACK_IMPORTED_MODULE_3___default.a.filter(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.map(response.ZoneSet || [], function (item) {
          return {
            text: item.ZoneName,
            value: item.Zone,
            ZoneState: item.ZoneState,
            Zone: item.Zone
          };
        }), function (item) {
          return item.ZoneState === 'AVAILABLE';
        });
      });
    }

    return [];
  };

  return DCDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (DCDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/sqlserver/query.ts":
/*!**************************************************!*\
  !*** ./datasource/tc_monitor/sqlserver/query.ts ***!
  \**************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _base_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_base/query */ "./datasource/tc_monitor/_base/query.ts");
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/sqlserver/query_def.ts");


Object(_base_query__WEBPACK_IMPORTED_MODULE_0__["default"])(_query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorName"], _query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorConfig"]);

/***/ }),

/***/ "./datasource/tc_monitor/sqlserver/query_def.ts":
/*!******************************************************!*\
  !*** ./datasource/tc_monitor/sqlserver/query_def.ts ***!
  \******************************************************/
/*! exports provided: default, SQLSERVERNETFilterFieldsDescriptor, templateQueryIdMap, SQLSERVERInstanceAliasList, SQLSERVERInvalidDemensions, namespace, queryEditorName, queryEditorConfig, regionSupported, modifyDimensons, SQLSERVERGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SQLSERVERNETFilterFieldsDescriptor", function() { return SQLSERVERNETFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SQLSERVERInstanceAliasList", function() { return SQLSERVERInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SQLSERVERInvalidDemensions", function() { return SQLSERVERInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorName", function() { return queryEditorName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorConfig", function() { return queryEditorConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "regionSupported", function() { return regionSupported; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modifyDimensons", function() { return modifyDimensons; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SQLSERVERGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);


var namespace = 'QCE/SQLSERVER'; // 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称

var queryEditorName = 'sqlserverQuery';
var SQLSERVERInvalidDemensions = {
  resourceId: 'InstanceId'
};
var SQLSERVERInstanceAliasList = ['InstanceId', 'Name'];
var templateQueryIdMap = {
  instance: 'InstanceId'
}; // select类型需要注意是{},multi后缀是[]

var SQLSERVERNETFilterFields = {
  Limit: 20,
  Offset: 0,
  ProjectId: null,
  Status: {},
  InstanceIdSet: [],
  PayMode: {},
  VpcId: '',
  SubnetId: '',
  VipSet: [],
  InstanceNameSet: [],
  VersionSet: [],
  Zone: ''
};
var SQLSERVERNETFilterFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputNumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputNumber',
  min: 1,
  max: 100
}, {
  key: 'ProjectId',
  enDescriptor: 'ProjectId',
  cnDescriptor: '项目ID',
  link: '',
  type: 'inputNumber'
}, {
  key: 'Status',
  enDescriptor: 'Status',
  cnDescriptor: '实例状态',
  link: '',
  type: 'select',
  list: [{
    text: '申请中',
    value: 1
  }, {
    text: '运行中',
    value: 2
  }, {
    text: '受限运行中 (主备切换中)',
    value: 3
  }, {
    text: '已隔离',
    value: 4
  }, {
    text: '回收中',
    value: 5
  }, {
    text: '已回收',
    value: 6
  }, {
    text: '任务执行中',
    value: 7
  }, {
    text: '已下线',
    value: 8
  }, {
    text: '实例扩容中',
    value: 9
  }, {
    text: '实例迁移中',
    value: 10
  }, {
    text: '只读',
    value: 11
  }, {
    text: '重启中',
    value: 12
  }]
}, {
  key: 'InstanceIdSet',
  enDescriptor: 'InstanceIdSet',
  cnDescriptor: '实例ID',
  link: '',
  type: 'inputMulti'
}, {
  key: 'PayMode',
  enDescriptor: 'PayMode',
  cnDescriptor: '子网实例ID',
  link: '',
  type: 'select',
  list: [{
    text: '包年包月',
    value: 1
  }, {
    text: '按量计费',
    value: 0
  }]
}, {
  key: 'VpcId',
  enDescriptor: 'VpcId',
  cnDescriptor: '实例所属VPC的唯一字符串ID',
  link: '',
  type: 'input'
}, {
  key: 'SubnetId',
  enDescriptor: 'SubnetId',
  cnDescriptor: '实例所属子网的唯一字符串ID',
  link: '',
  type: 'input'
}, {
  key: 'VipSet',
  enDescriptor: 'VipSet',
  cnDescriptor: '实例内网地址列表',
  link: '',
  type: 'inputMulti'
}, {
  key: 'InstanceNameSet',
  enDescriptor: 'InstanceNameSet',
  cnDescriptor: '实例名称列表, 模糊查询',
  link: '',
  type: 'inputMulti'
}, {
  key: 'VersionSet',
  enDescriptor: 'VersionSet',
  cnDescriptor: '实例版本代号列表',
  link: '',
  type: 'inputMulti'
}, {
  key: 'Zone',
  enDescriptor: 'Zone',
  cnDescriptor: '实例可用区',
  link: '',
  type: 'dropdown'
}]; // 各产品实例列表detail配置

var queryEditorConfig = {
  instanceDocUrl: 'https://cloud.tencent.com/document/api/238/19969',
  namespace: namespace,
  fieldDescriptor: SQLSERVERNETFilterFieldsDescriptor
}; // regions for dropdown

var regionSupported = [{
  value: 'ap-beijing'
}, {
  value: 'ap-chengdu'
}, {
  value: 'ap-chongqing'
}, {
  value: 'ap-guangzhou'
}, {
  value: 'ap-hongkong'
}, {
  value: 'ap-nanjing'
}, {
  value: 'ap-seoul'
}, {
  value: 'ap-shanghai'
}, {
  value: 'ap-shanghai-fsi'
}, {
  value: 'ap-shenzhen-fsi'
}, {
  value: 'ap-singapore'
}, {
  value: 'ap-tokyo'
}, {
  value: 'eu-moscow'
}, {
  value: 'na-siliconvalley'
}];
var SQLSERVER_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'InstanceId',
  queries: SQLSERVERNETFilterFields
};

function modifyDimensons(metricItem) {
  var metricTmp = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.cloneDeep(metricItem);

  metricTmp.Dimensions.forEach(function (item) {
    item.Dimensions = ['resourceId'];
  });
  return metricTmp;
}

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  return Object(_common_utils__WEBPACK_IMPORTED_MODULE_0__["instanceQueryParamsBaseParse"])(queries, false);
}

/* harmony default export */ __webpack_exports__["default"] = (SQLSERVER_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/tcaplus/datasource.ts":
/*!*****************************************************!*\
  !*** ./datasource/tc_monitor/tcaplus/datasource.ts ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/tcaplus/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../locale */ "./locale/index.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();






var DCDatasource =
/** @class */
function (_super) {
  __extends(DCDatasource, _super);

  function DCDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = _query_def__WEBPACK_IMPORTED_MODULE_0__["namespace"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["TCAPLUSInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["TCAPLUSInvalidDemensions"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_0__["templateQueryIdMap"]; // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致

    _this.InstanceReqConfig = {
      service: 'tcaplusdb',
      action: 'DescribeTables',
      responseField: 'TableInfos'
    };
    return _this;
  } // 重写getRegion


  DCDatasource.prototype.getRegions = function () {
    return this.doRequest({
      url: this.url + '/tcaplusdb'
    }, 'tcaplusdb', {
      action: 'DescribeRegions',
      region: 'ap-guangzhou'
    }).then(function (response) {
      return lodash__WEBPACK_IMPORTED_MODULE_2___default.a.map(response.RegionInfos || [], function (item) {
        return {
          text: Object(_locale__WEBPACK_IMPORTED_MODULE_3__["t"])(item.RegionName),
          value: item.RegionName
        };
      });
    });
  };

  return DCDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (DCDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/tcaplus/query.ts":
/*!************************************************!*\
  !*** ./datasource/tc_monitor/tcaplus/query.ts ***!
  \************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _base_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_base/query */ "./datasource/tc_monitor/_base/query.ts");
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/tcaplus/query_def.ts");


Object(_base_query__WEBPACK_IMPORTED_MODULE_0__["default"])(_query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorName"], _query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorConfig"]);

/***/ }),

/***/ "./datasource/tc_monitor/tcaplus/query_def.ts":
/*!****************************************************!*\
  !*** ./datasource/tc_monitor/tcaplus/query_def.ts ***!
  \****************************************************/
/*! exports provided: default, TCAPLUSFilterFieldsDescriptor, templateQueryIdMap, TCAPLUSInstanceAliasList, TCAPLUSInvalidDemensions, namespace, queryEditorName, queryEditorConfig, regonsMap, TCAPLUSGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TCAPLUSFilterFieldsDescriptor", function() { return TCAPLUSFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TCAPLUSInstanceAliasList", function() { return TCAPLUSInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TCAPLUSInvalidDemensions", function() { return TCAPLUSInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorName", function() { return queryEditorName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorConfig", function() { return queryEditorConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "regonsMap", function() { return regonsMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TCAPLUSGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);

var namespace = 'QCE/TCAPLUS'; // 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称

var queryEditorName = 'tcaplusQuery';
var TCAPLUSInvalidDemensions = {// TableInstanceId: 'TableInstanceId',
  // ClusterId: 'ClusterId',
}; // 需和文件名对应

var TCAPLUSInstanceAliasList = ['TableInstanceId', 'TableName'];
var templateQueryIdMap = {
  instance: 'TableInstanceId'
}; // select类型需要注意是{},multi后缀是[],dropdown是类型

var TCAPLUSFilterFields = {
  Limit: 20,
  Offset: 0,
  ClusterId: '',
  TableGroupIds: [],
  TableName: '',
  TableInstanceId: '',
  TableIdlType: {},
  TableType: {},
  ListElementNum: null,
  ReservedVolume: null,
  ReservedReadQps: null,
  ReservedWriteQps: null,
  Memo: '',
  FileName: '',
  FileExtType: '',
  FileSize: null,
  FileContent: ''
};
var TCAPLUSFilterFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputNumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputNumber',
  min: 1,
  max: 100
}, {
  key: 'ClusterId',
  enDescriptor: 'ClusterId',
  cnDescriptor: '表格所属集群ID',
  link: '',
  type: 'input'
}, {
  key: 'TableGroupIds',
  enDescriptor: 'TableGroupIds',
  cnDescriptor: '表格组ID列表',
  link: '',
  type: 'inputMulti'
}, {
  key: 'TableName',
  enDescriptor: 'TableName',
  cnDescriptor: '表格名称',
  link: '',
  type: 'input'
}, {
  key: 'TableInstanceId',
  enDescriptor: 'TableInstanceId',
  cnDescriptor: '表实例ID',
  link: '',
  type: 'input'
}, {
  key: 'TableIdlType',
  enDescriptor: 'TableIdlType',
  cnDescriptor: '表格描述语言类型',
  link: '',
  type: 'select',
  list: [{
    text: 'PROTO',
    value: 'PROTO'
  }, {
    text: 'TDR',
    value: 'TDR'
  }]
}, {
  key: 'TableType',
  enDescriptor: 'TableType',
  cnDescriptor: '表格数据结构类型',
  link: '',
  type: 'select',
  list: [{
    text: 'GENERIC',
    value: 'GENERIC'
  }, {
    text: 'LIST',
    value: 'LIST'
  }]
}, {
  key: 'ListElementNum',
  enDescriptor: 'ListElementNum',
  cnDescriptor: 'LIST表元素个数',
  link: '',
  type: 'inputNumber'
}, {
  key: 'ReservedVolume',
  enDescriptor: 'ReservedVolume',
  cnDescriptor: '表格预留容量（GB）',
  link: '',
  type: 'inputNumber'
}, {
  key: 'ReservedReadQps',
  enDescriptor: 'ReservedReadQps',
  cnDescriptor: '表格预留读CU',
  link: '',
  type: 'inputNumber'
}, {
  key: 'ReservedWriteQps',
  enDescriptor: 'ReservedWriteQps',
  cnDescriptor: '表格预留写CU',
  link: '',
  type: 'inputNumber'
}, {
  key: 'Memo',
  enDescriptor: 'Memo',
  cnDescriptor: '表格备注信息',
  link: '',
  type: 'input'
}, {
  key: 'FileName',
  enDescriptor: 'FileName',
  cnDescriptor: 'Key回档文件名，回档专用',
  link: '',
  type: 'input'
}, {
  key: 'FileExtType',
  enDescriptor: 'FileExtType',
  cnDescriptor: 'Key回档文件扩展名，回档专用',
  link: '',
  type: 'input'
}, {
  key: 'FileSize',
  enDescriptor: 'FileSize',
  cnDescriptor: 'Key回档文件大小，回档专用',
  link: '',
  type: 'inputNumber'
}, {
  key: 'FileContent',
  enDescriptor: 'FileContent',
  cnDescriptor: 'Key回档文件内容，回档专用',
  link: '',
  type: 'input'
}]; // 各产品实例列表detail配置

var queryEditorConfig = {
  instanceDocUrl: 'https://cloud.tencent.com/document/api/596/39664',
  namespace: namespace,
  fieldDescriptor: TCAPLUSFilterFieldsDescriptor
};
var TCAPLUS_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'TableInstanceId',
  queries: TCAPLUSFilterFields
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  var params = {};
  params.Limit = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Limit', 20) || 20;
  params.Offset = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Offset', 0) || 0;
  params.ClusterId = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'ClusterId', '') || '';
  params.TableGroupIds = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'TableGroupIds', []) || [];
  queries = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.omit(queries, ['Offset', 'Limit', 'TableGroupIds', 'ClusterId']);
  var SelectedTables = [];

  lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(queries, function (item, key) {
    if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(item)) {
      item = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(item);

      if (item.length > 0) {
        SelectedTables[key] = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(item);
      }
    } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(item)) {
      if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNumber(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', undefined)) || !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', undefined))) {
        SelectedTables[key] = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value');
      }
    } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNumber(item) || !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(item)) {
      SelectedTables[key] = item;
    }
  });

  params.SelectedTables = SelectedTables;
  return params;
} // 和其他产品的展示保持一致


var regonsMap = {
  'ap-beijing': '华北地区(北京)',
  'ap-guangzhou': '华南地区(广州)',
  'ap-hongkong': '港澳台地区(中国香港)',
  'ap-seoul': '亚太东北(首尔)',
  'ap-shanghai': '华东地区(上海)',
  'ap-singapore': '亚太东南(新加坡)',
  'ap-tokyo': '亚太东北(东京)',
  'eu-frankfurt': '欧洲地区(法兰克福)',
  'na-ashburn': '美国东部(弗吉尼亚)',
  'na-siliconvalley': '美国西部(硅谷)'
};
/* harmony default export */ __webpack_exports__["default"] = (TCAPLUS_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/tdmq/datasource.ts":
/*!**************************************************!*\
  !*** ./datasource/tc_monitor/tdmq/datasource.ts ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/tdmq/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");
/* harmony import */ var _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/datasourceStorage */ "./datasource/common/datasourceStorage.ts");
/* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../locale */ "./locale/index.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};









var TDMQDatasource =
/** @class */
function (_super) {
  __extends(TDMQDatasource, _super);

  function TDMQDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = _query_def__WEBPACK_IMPORTED_MODULE_0__["namespace"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["TDMQInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["TDMQInvalidDemensions"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_0__["templateQueryIdMap"];
    _this.queryMonitorExtraConfg = _query_def__WEBPACK_IMPORTED_MODULE_0__["queryMonitorExtraConfg"];
    _this.keyInStorage = _query_def__WEBPACK_IMPORTED_MODULE_0__["keyInStorage"]; // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致

    _this.InstanceReqConfig = {
      service: 'tdmq',
      action: 'DescribeClusters',
      responseField: 'ClusterSet'
    };
    _this.extraActionMap = {
      DescribeTopics: {
        service: 'tdmq',
        action: 'DescribeTopics',
        responseField: 'TopicSets',
        pickKey: 'TopicName'
      },
      DescribeEnvironments: {
        service: 'tdmq',
        action: 'DescribeEnvironments',
        responseField: 'EnvironmentSet',
        pickKey: 'EnvironmentId'
      }
    };
    return _this;
  } // getFilterDropdown({ field }) {
  //   return super.getRegions();
  // }


  TDMQDatasource.prototype.getRegions = function () {
    return Promise.resolve(_query_def__WEBPACK_IMPORTED_MODULE_0__["regionSupported"].map(function (_a) {
      var value = _a.value;
      return {
        value: value,
        text: Object(_locale__WEBPACK_IMPORTED_MODULE_6__["t"])(value)
      };
    }));
  };

  TDMQDatasource.prototype.getMetrics = function (region) {
    if (region === void 0) {
      region = 'ap-guangzhou';
    }

    return __awaiter(this, void 0, void 0, function () {
      var rawSet;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , _super.prototype.getMetrics.call(this, region)];

          case 1:
            rawSet = _a.sent();
            return [2
            /*return*/
            , lodash__WEBPACK_IMPORTED_MODULE_2___default.a.compact(rawSet.map(function (item) {
              return Object(_query_def__WEBPACK_IMPORTED_MODULE_0__["modifyDimensons"])(item);
            }))];
        }
      });
    });
  };

  TDMQDatasource.prototype.getConsumerList = function (params) {
    return __awaiter(this, void 0, void 0, function () {
      var region, act, payload, _a, service, action, responseField, serviceInfo, rs;

      var _this = this;

      return __generator(this, function (_b) {
        switch (_b.label) {
          case 0:
            region = params.region, act = params.action, payload = params.payload;
            _a = this.extraActionMap[act], service = _a.service, action = _a.action, responseField = _a.responseField;
            serviceInfo = Object(_common_constants__WEBPACK_IMPORTED_MODULE_3__["GetServiceAPIInfo"])(region, service);
            return [4
            /*yield*/
            , Object(_common_utils__WEBPACK_IMPORTED_MODULE_4__["fetchAllFactory"])(function (data) {
              return _this.doRequest({
                url: _this.url + serviceInfo.path,
                data: data
              }, serviceInfo.service, {
                region: region,
                action: action
              });
            }, payload, responseField)];

          case 1:
            rs = _b.sent(); // console.log({ rs });

            return [2
            /*return*/
            , rs[0]];
        }
      });
    });
  };

  TDMQDatasource.prototype.fetchMetricData = function (action, region, instance, query) {
    return __awaiter(this, void 0, void 0, function () {
      var payload, rs, pickKey_1, result;

      var _this = this;

      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            payload = {
              Limit: 100,
              ClusterId: instance[this.templateQueryIdMap.instance]
            };
            if (!(Object.keys(this.extraActionMap).indexOf(action) !== -1)) return [3
            /*break*/
            , 3];

            if (action === 'DescribeTopics') {
              payload.EnvironmentId = this.getVariable(query['environmentid']);
            }

            return [4
            /*yield*/
            , this.getConsumerList({
              region: region,
              action: action,
              payload: payload
            })];

          case 1:
            rs = _a.sent();
            pickKey_1 = this.extraActionMap[action].pickKey;
            result = rs.map(function (o) {
              o._InstanceAliasValue = o[_this.templateQueryIdMap[pickKey_1]];
              return {
                text: o[_this.templateQueryIdMap[pickKey_1]],
                value: o[_this.templateQueryIdMap[pickKey_1]]
              };
            });
            return [4
            /*yield*/
            , _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_5__["default"].setExtraStorage(this.service, this.keyInStorage[pickKey_1], rs)];

          case 2:
            _a.sent();

            return [2
            /*return*/
            , result];

          case 3:
            return [2
            /*return*/
            , []];
        }
      });
    });
  };

  return TDMQDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (TDMQDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/tdmq/query.ts":
/*!*********************************************!*\
  !*** ./datasource/tc_monitor/tdmq/query.ts ***!
  \*********************************************/
/*! exports provided: QueryCtrl, sQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QueryCtrl", function() { return QueryCtrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sQuery", function() { return sQuery; });
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grafana/app/core/core_module */ "grafana/app/core/core_module");
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/tdmq/query_def.ts");
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};




var ExtraFields = [{
  label: 'environmentId',
  field: 'environmentId',
  action: 'DescribeEnvironments'
}, {
  label: 'topicName',
  field: 'topicName',
  action: 'DescribeTopics'
}];
var dropdownTextConfig = {
  DescribeTopics: 'topicName',
  DescribeEnvironments: 'environmentId'
};

var QueryCtrl =
/** @class */
function () {
  QueryCtrl.$inject = ["$scope", "$rootScope"];

  /** @ngInject */
  function QueryCtrl($scope, $rootScope) {
    var _this = this;

    $scope.init = function () {
      $scope.TDMQFilterFieldsDescriptor = _query_def__WEBPACK_IMPORTED_MODULE_1__["TDMQFilterFieldsDescriptor"];
      $scope.ExtraFields = ExtraFields;
      $scope.namespace = _query_def__WEBPACK_IMPORTED_MODULE_1__["namespace"];
    };

    $scope.getInstanceId = function () {
      var instance = $scope.target.instance;
      var service = Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["GetServiceFromNamespace"])($scope.namespace);
      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);

      if (!instance) {
        return '';
      }

      try {
        instance = JSON.parse(instance)[_query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"].instance];
      } catch (error) {// console.log();
      }

      return instance;
    };

    $scope.getExtraFields = function () {
      return ExtraFields.filter(function (item) {
        var _a, _b;

        return item.field in ((_a = $scope.dims) !== null && _a !== void 0 ? _a : {}) || item.label in ((_b = $scope.dims) !== null && _b !== void 0 ? _b : {});
      });
    };

    $scope.getExtraDropdown = function (target, action) {
      return __awaiter(_this, void 0, void 0, function () {
        var service, region, payload, evId, rs, result;
        return __generator(this, function (_a) {
          switch (_a.label) {
            case 0:
              service = Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["GetServiceFromNamespace"])($scope.namespace);
              region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);
              payload = {
                Limit: 100,
                ClusterId: $scope.getInstanceId()
              };

              if (action === 'DescribeTopics') {
                evId = $scope.target.environmentId;

                try {
                  evId = JSON.parse(evId);
                  evId = evId[_query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"].environmentId];
                } catch (e) {}

                payload.EnvironmentId = evId;
              }

              return [4
              /*yield*/
              , $scope.datasource.getServiceFn(service, 'getConsumerList')({
                region: region,
                action: action,
                payload: payload
              })];

            case 1:
              rs = _a.sent();
              result = rs.map(function (o) {
                o._InstanceAliasValue = o[_query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"][dropdownTextConfig[action]]];
                return {
                  text: o[_query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"][dropdownTextConfig[action]]],
                  label: o[_query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"][dropdownTextConfig[action]]],
                  value: JSON.stringify(o)
                };
              });
              return [2
              /*return*/
              , result];
          }
        });
      });
    };

    $scope.init();
  }

  return QueryCtrl;
}();


var template = "\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Functions are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/50388\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\" ng-repeat=\"field in TDMQFilterFieldsDescriptor\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <input\n          ng-if=\"field.type === 'inputNumber'\"\n          style=\"margin-right:2px\"\n          type=\"number\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n          ng-min=\"field.min\"\n          ng-max=\"field.max\"\n        />\n        <input\n          ng-if=\"field.type === 'input'\"\n          style=\"margin-right:2px\"\n          type=\"text\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n        />    \n        <multi-condition\n          ng-if=\"field.type === 'inputNumberMulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputMulti'\"\n          type=\"'input'\"\n          value=\"target.queries[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries[field.key]\"\n          options=\"field.list\"\n          multiple=\"field.multiple || false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n\n<!-- \u8D77\u59CB\u533A\u57DF \u76EE\u7684\u533A\u57DF\u7B49 -->\n  <div>\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(target, extra.action)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n";
function sQuery() {
  return {
    template: template,
    controller: QueryCtrl,
    restrict: 'E',
    scope: {
      target: '=',
      showDetail: '=',
      region: '=',
      datasource: '=',
      getDropdownOptions: '&',
      onChange: '&',
      onRefresh: '&',
      dims: '='
    }
  };
}
grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default.a.directive(_query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorName"], sQuery);

/***/ }),

/***/ "./datasource/tc_monitor/tdmq/query_def.ts":
/*!*************************************************!*\
  !*** ./datasource/tc_monitor/tdmq/query_def.ts ***!
  \*************************************************/
/*! exports provided: default, TDMQFilterFieldsDescriptor, templateQueryIdMap, TDMQInstanceAliasList, TDMQInvalidDemensions, namespace, queryEditorName, queryMonitorExtraConfg, keyInStorage, modifyDimensons, regionSupported, TDMQGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TDMQFilterFieldsDescriptor", function() { return TDMQFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TDMQInstanceAliasList", function() { return TDMQInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TDMQInvalidDemensions", function() { return TDMQInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorName", function() { return queryEditorName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryMonitorExtraConfg", function() { return queryMonitorExtraConfg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keyInStorage", function() { return keyInStorage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modifyDimensons", function() { return modifyDimensons; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "regionSupported", function() { return regionSupported; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TDMQGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);


var namespace = 'QCE/TDMQ'; // 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称

var queryEditorName = 'tdmqQuery';
var TDMQInvalidDemensions = {
  tenantId: 'ClusterId',
  tenant: 'ClusterId',
  topicName: 'TopicName',
  environmentId: 'EnvironmentId'
}; // 需和文件名对应

var TDMQInstanceAliasList = ['ClusterId', 'ClusterName'];
var templateQueryIdMap = {
  instance: 'ClusterId',
  topicName: 'TopicName',
  environmentId: 'EnvironmentId'
}; // select类型需要注意是{},multi后缀是[],dropdown是''

var TDMQFilterFields = {
  Limit: 20,
  Offset: 0
};
var TDMQFilterFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputNumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputNumber',
  min: 1,
  max: 100
}];
var CDNPROVINCE_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'ClusterId',
  // 此处key应该是经过TDMQInvalidDemensions处理后的
  topicName: '',
  environmentId: '',
  queries: TDMQFilterFields
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  return Object(_common_utils__WEBPACK_IMPORTED_MODULE_0__["instanceQueryParamsBaseParse"])(queries, true);
}

var regionSupported = [{
  value: 'ap-beijing'
}, {
  value: 'ap-chengdu'
}, {
  value: 'ap-chongqing'
}, {
  value: 'ap-guangzhou'
}, {
  value: 'ap-shenzhen-fsi'
}, {
  value: 'ap-shanghai'
}, {
  value: 'ap-shanghai-fsi'
}, {
  value: 'ap-nanjing'
}, {
  value: 'ap-hongkong'
}, {
  value: 'ap-tokyo'
}, {
  value: 'ap-seoul'
}, {
  value: 'ap-singapore'
}, {
  value: 'ap-bangkok'
}, {
  value: 'ap-jakarta'
}, {
  value: 'ap-mumbai'
}, {
  value: 'eu-frankfurt'
}, {
  value: 'eu-moscow'
}, {
  value: 'na-ashburn'
}, {
  value: 'na-siliconvalley'
}, {
  value: 'na-toronto'
}];

function modifyDimensons(metricItem) {
  var metricTmp = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.cloneDeep(metricItem);

  metricTmp.Dimensions.forEach(function (item) {
    if (item.Dimensions.indexOf('topicName') !== -1 && item.Dimensions.indexOf('environmentId') === -1) {
      item.Dimensions.push('environmentId');
    }
  });
  return metricTmp;
} // 需要缓存到storage的内容的key列表


var keyInStorage = {
  topicName: 'topicName',
  environmentId: 'environmentId'
};
/*
如果有InstanceId额外的维度，原则上都需要传入此map结构配置
key的含义：
  经过InvalidDemensions处理后的string。topicId =》TopicId。
  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId
value的含义：
  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、
  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。
                    默认取通过InvalidDemsion处理后的key
  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。
                    即：templateQueryIdMap中内容。
                    联合上面2的内容筛选出原始sourceMap
*/

var queryMonitorExtraConfg = {
  TopicName: {
    dim_KeyInStorage: keyInStorage.topicName,
    dim_KeyInTarget: 'topicName',
    dim_KeyInMap: templateQueryIdMap.topicName
  },
  EnvironmentId: {
    dim_KeyInStorage: keyInStorage.environmentId,
    dim_KeyInTarget: 'environmentId',
    dim_KeyInMap: templateQueryIdMap.environmentId
  }
};
/* harmony default export */ __webpack_exports__["default"] = (CDNPROVINCE_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/tdmq_rabbitmq/datasource.ts":
/*!***********************************************************!*\
  !*** ./datasource/tc_monitor/tdmq_rabbitmq/datasource.ts ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/tdmq_rabbitmq/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");
/* harmony import */ var _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/datasourceStorage */ "./datasource/common/datasourceStorage.ts");
/* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../locale */ "./locale/index.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};








var TDMQDatasource =
/** @class */
function (_super) {
  __extends(TDMQDatasource, _super);

  function TDMQDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = _query_def__WEBPACK_IMPORTED_MODULE_0__["namespace"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["TDMQRABBITMQInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["TDMQInvalidDemensions"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_0__["templateQueryIdMap"];
    _this.queryMonitorExtraConfg = _query_def__WEBPACK_IMPORTED_MODULE_0__["queryMonitorExtraConfg"];
    _this.keyInStorage = _query_def__WEBPACK_IMPORTED_MODULE_0__["keyInStorage"]; // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致

    _this.InstanceReqConfig = {
      service: 'tdmq',
      action: 'DescribeRabbitMQVipInstances',
      responseField: 'Instances'
    };
    _this.extraActionMap = {
      DescribeRabbitMQNodeList: {
        service: 'tdmq',
        action: 'DescribeRabbitMQNodeList',
        responseField: 'NodeList',
        pickKey: 'node'
      }
    };
    return _this;
  }

  TDMQDatasource.prototype.getRegions = function () {
    return Promise.resolve(_query_def__WEBPACK_IMPORTED_MODULE_0__["regionSupported"].map(function (_a) {
      var value = _a.value;
      return {
        value: value,
        text: Object(_locale__WEBPACK_IMPORTED_MODULE_5__["t"])(value)
      };
    }));
  };

  TDMQDatasource.prototype.getConsumerList = function (params) {
    return __awaiter(this, void 0, void 0, function () {
      var region, act, payload, _a, service, action, responseField, serviceInfo, rs;

      var _this = this;

      return __generator(this, function (_b) {
        switch (_b.label) {
          case 0:
            region = params.region, act = params.action, payload = params.payload;
            _a = this.extraActionMap[act], service = _a.service, action = _a.action, responseField = _a.responseField;
            serviceInfo = Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["GetServiceAPIInfo"])(region, service);
            return [4
            /*yield*/
            , Object(_common_utils__WEBPACK_IMPORTED_MODULE_3__["fetchAllFactory"])(function (data) {
              return _this.doRequest({
                url: _this.url + serviceInfo.path,
                data: data
              }, serviceInfo.service, {
                region: region,
                action: action
              });
            }, payload, responseField)];

          case 1:
            rs = _b.sent();
            return [2
            /*return*/
            , rs[0]];
        }
      });
    });
  };

  TDMQDatasource.prototype.fetchMetricData = function (action, region, instance, query) {
    return __awaiter(this, void 0, void 0, function () {
      var payload, rs, pickKey_1, result;

      var _this = this;

      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            payload = {
              Limit: 100,
              InstanceId: instance[this.templateQueryIdMap.instance]
            };
            if (!(Object.keys(this.extraActionMap).indexOf(action) !== -1)) return [3
            /*break*/
            , 3];
            return [4
            /*yield*/
            , this.getConsumerList({
              region: region,
              action: action,
              payload: payload
            })];

          case 1:
            rs = _a.sent();
            pickKey_1 = this.extraActionMap[action].pickKey;
            result = rs.map(function (o) {
              o._InstanceAliasValue = o[_this.templateQueryIdMap[pickKey_1]];
              return {
                text: o[_this.templateQueryIdMap[pickKey_1]],
                value: o[_this.templateQueryIdMap[pickKey_1]]
              };
            });
            return [4
            /*yield*/
            , _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_4__["default"].setExtraStorage(this.service, this.keyInStorage[pickKey_1], rs)];

          case 2:
            _a.sent();

            return [2
            /*return*/
            , result];

          case 3:
            return [2
            /*return*/
            , []];
        }
      });
    });
  };

  return TDMQDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (TDMQDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/tdmq_rabbitmq/query.ts":
/*!******************************************************!*\
  !*** ./datasource/tc_monitor/tdmq_rabbitmq/query.ts ***!
  \******************************************************/
/*! exports provided: QueryCtrl, sQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QueryCtrl", function() { return QueryCtrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sQuery", function() { return sQuery; });
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grafana/app/core/core_module */ "grafana/app/core/core_module");
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/tdmq_rabbitmq/query_def.ts");
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};




var ExtraFields = [{
  label: 'Node',
  field: 'node',
  action: 'DescribeRabbitMQNodeList'
}];
var dropdownTextConfig = {
  DescribeRabbitMQNodeList: 'node'
};

var QueryCtrl =
/** @class */
function () {
  QueryCtrl.$inject = ["$scope", "$rootScope"];

  /** @ngInject */
  function QueryCtrl($scope, $rootScope) {
    var _this = this;

    $scope.init = function () {
      $scope.TDMQFilterFieldsDescriptor = _query_def__WEBPACK_IMPORTED_MODULE_1__["TDMQFilterFieldsDescriptor"];
      $scope.ExtraFields = ExtraFields;
      $scope.namespace = _query_def__WEBPACK_IMPORTED_MODULE_1__["namespace"];
    };

    $scope.clearExtrasAlias = function () {
      $scope.target.node = '';
    };

    $scope.getInstanceId = function () {
      var instance = $scope.target.instance;
      var service = Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["GetServiceFromNamespace"])($scope.namespace);
      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);

      if (!instance) {
        return '';
      }

      try {
        instance = JSON.parse(instance)[_query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"].instance];
      } catch (error) {// console.log();
      }

      return instance;
    };

    $scope.getExtraFields = function () {
      return ExtraFields.filter(function (item) {
        var _a, _b;

        return item.field in ((_a = $scope.dims) !== null && _a !== void 0 ? _a : {}) || item.label in ((_b = $scope.dims) !== null && _b !== void 0 ? _b : {});
      });
    };

    $scope.getExtraDropdown = function (target, action) {
      return __awaiter(_this, void 0, void 0, function () {
        var service, region, payload, rs, result;
        return __generator(this, function (_a) {
          switch (_a.label) {
            case 0:
              service = Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["GetServiceFromNamespace"])($scope.namespace);
              region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);
              payload = {
                Limit: 100,
                InstanceId: $scope.getInstanceId()
              };
              return [4
              /*yield*/
              , $scope.datasource.getServiceFn(service, 'getConsumerList')({
                region: region,
                action: action,
                payload: payload
              })];

            case 1:
              rs = _a.sent();
              result = rs.map(function (o) {
                o._InstanceAliasValue = o[_query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"][dropdownTextConfig[action]]];
                return {
                  text: o[_query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"][dropdownTextConfig[action]]],
                  label: o[_query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"][dropdownTextConfig[action]]],
                  value: JSON.stringify(o)
                };
              });
              return [2
              /*return*/
              , result];
          }
        });
      });
    };

    $scope.init();
  }

  return QueryCtrl;
}();


var template = "\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Functions are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/50388\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\" ng-repeat=\"field in TDMQFilterFieldsDescriptor\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <input\n          ng-if=\"field.type === 'inputNumber'\"\n          style=\"margin-right:2px\"\n          type=\"number\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n          ng-min=\"field.min\"\n          ng-max=\"field.max\"\n        />\n        <input\n          ng-if=\"field.type === 'input'\"\n          style=\"margin-right:2px\"\n          type=\"text\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n        />    \n        <multi-condition\n          ng-if=\"field.type === 'inputNumberMulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputMulti'\"\n          type=\"'input'\"\n          value=\"target.queries[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries[field.key]\"\n          options=\"field.list\"\n          multiple=\"field.multiple || false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n\n<!-- \u8D77\u59CB\u533A\u57DF \u76EE\u7684\u533A\u57DF\u7B49 -->\n  <div>\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" get-options=\"getExtraDropdown(target, extra.action)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n";
function sQuery() {
  return {
    template: template,
    controller: QueryCtrl,
    restrict: 'E',
    scope: {
      target: '=',
      showDetail: '=',
      region: '=',
      datasource: '=',
      getDropdownOptions: '&',
      onChange: '&',
      onRefresh: '&',
      dims: '='
    },
    link: function link(scope, element, attrs) {
      scope.$watch('target.instance', function () {
        var _a;

        (_a = scope.clearExtrasAlias) === null || _a === void 0 ? void 0 : _a.call(scope);
      });
      scope.$watch('target.metricName', function () {
        var _a;

        (_a = scope.clearExtrasAlias) === null || _a === void 0 ? void 0 : _a.call(scope);
      });
    }
  };
}
grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default.a.directive('tdmqRabbitmqQuery', sQuery);

/***/ }),

/***/ "./datasource/tc_monitor/tdmq_rabbitmq/query_def.ts":
/*!**********************************************************!*\
  !*** ./datasource/tc_monitor/tdmq_rabbitmq/query_def.ts ***!
  \**********************************************************/
/*! exports provided: default, TDMQFilterFieldsDescriptor, templateQueryIdMap, TDMQRABBITMQInstanceAliasList, TDMQInvalidDemensions, namespace, queryEditorName, queryMonitorExtraConfg, keyInStorage, regionSupported, TDMQGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TDMQFilterFieldsDescriptor", function() { return TDMQFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TDMQRABBITMQInstanceAliasList", function() { return TDMQRABBITMQInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TDMQInvalidDemensions", function() { return TDMQInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorName", function() { return queryEditorName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryMonitorExtraConfg", function() { return queryMonitorExtraConfg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keyInStorage", function() { return keyInStorage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "regionSupported", function() { return regionSupported; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TDMQGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");

var namespace = 'QCE/RABBITMQ'; // 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称

var queryEditorName = 'tdmqQuery';
var TDMQInvalidDemensions = {
  instanceid: 'InstanceId',
  node: 'NodeName'
}; // 需和文件名对应

var TDMQRABBITMQInstanceAliasList = ['InstanceId', 'InstanceName'];
var templateQueryIdMap = {
  instance: 'InstanceId',
  node: 'NodeName'
}; // select类型需要注意是{},multi后缀是[],dropdown是''

var TDMQFilterFields = {
  Limit: 20,
  Offset: 0
};
var TDMQFilterFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputNumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputNumber',
  min: 1,
  max: 100
}];
var TDMQ_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'InstanceId',
  // 此处key应该是经过TDMQInvalidDemensions处理后的
  node: '',
  queries: TDMQFilterFields
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  return Object(_common_utils__WEBPACK_IMPORTED_MODULE_0__["instanceQueryParamsBaseParse"])(queries, true);
}

var regionSupported = [{
  value: 'ap-beijing'
}, {
  value: 'ap-chengdu'
}, {
  value: 'ap-chongqing'
}, {
  value: 'ap-guangzhou'
}, {
  value: 'ap-shenzhen-fsi'
}, {
  value: 'ap-shanghai'
}, {
  value: 'ap-shanghai-fsi'
}, {
  value: 'ap-nanjing'
}, {
  value: 'ap-hongkong'
}, {
  value: 'ap-tokyo'
}, {
  value: 'ap-seoul'
}, {
  value: 'ap-singapore'
}, {
  value: 'ap-bangkok'
}, {
  value: 'ap-jakarta'
}, {
  value: 'ap-mumbai'
}, {
  value: 'eu-frankfurt'
}, {
  value: 'eu-moscow'
}, {
  value: 'na-ashburn'
}, {
  value: 'na-siliconvalley'
}, {
  value: 'na-toronto'
}]; // 需要缓存到storage的内容的key列表

var keyInStorage = {
  node: 'NodeName'
};
/*
如果有InstanceId额外的维度，原则上都需要传入此map结构配置
key的含义：
  经过InvalidDemensions处理后的string。topicId =》TopicId。
  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId
value的含义：
  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、
  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。
                    默认取通过InvalidDemsion处理后的key
  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。
                    即：templateQueryIdMap中内容。
                    联合上面2的内容筛选出原始sourceMap
*/

var queryMonitorExtraConfg = {
  NodeName: {
    dim_KeyInStorage: keyInStorage.node,
    dim_KeyInTarget: 'node',
    dim_KeyInMap: templateQueryIdMap.node
  }
};
/* harmony default export */ __webpack_exports__["default"] = (TDMQ_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/tdmq_rocketmq/datasource.ts":
/*!***********************************************************!*\
  !*** ./datasource/tc_monitor/tdmq_rocketmq/datasource.ts ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/tdmq_rocketmq/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");
/* harmony import */ var _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/datasourceStorage */ "./datasource/common/datasourceStorage.ts");
/* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../locale */ "./locale/index.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};









var TDMQDatasource =
/** @class */
function (_super) {
  __extends(TDMQDatasource, _super);

  function TDMQDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = _query_def__WEBPACK_IMPORTED_MODULE_0__["namespace"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["TDMQROCKETMQInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["TDMQInvalidDemensions"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_0__["templateQueryIdMap"];
    _this.queryMonitorExtraConfg = _query_def__WEBPACK_IMPORTED_MODULE_0__["queryMonitorExtraConfg"];
    _this.keyInStorage = _query_def__WEBPACK_IMPORTED_MODULE_0__["keyInStorage"]; // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致

    _this.InstanceReqConfig = {
      service: 'tdmq',
      action: 'DescribeRocketMQClusters',
      responseField: 'ClusterList',
      interceptor: {
        response: function response(result) {
          return lodash__WEBPACK_IMPORTED_MODULE_2___default.a.map(result, function (item) {
            return __assign(__assign({}, item), {
              ClusterId: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(item, 'Info.ClusterId', ''),
              ClusterName: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(item, 'Info.ClusterName', '')
            });
          });
        }
      }
    };
    _this.extraActionMap = {
      DescribeRocketMQNamespaces: {
        service: 'tdmq',
        action: 'DescribeRocketMQNamespaces',
        responseField: 'Namespaces',
        pickKey: 'namespace'
      },
      DescribeRocketMQGroups: {
        service: 'tdmq',
        action: 'DescribeRocketMQGroups',
        responseField: 'Groups',
        pickKey: 'group'
      }
    };
    return _this;
  }

  TDMQDatasource.prototype.getMetrics = function (region) {
    if (region === void 0) {
      region = 'ap-guangzhou';
    }

    return __awaiter(this, void 0, void 0, function () {
      var rawSet;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , _super.prototype.getMetrics.call(this, region)];

          case 1:
            rawSet = _a.sent();
            return [2
            /*return*/
            , rawSet.filter(function (item) {
              var _a, _b, _c;

              return !((_c = (_b = (_a = item.Dimensions) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.Dimensions) === null || _c === void 0 ? void 0 : _c.includes('rmqcluster'));
            })];
        }
      });
    });
  };

  TDMQDatasource.prototype.getRegions = function () {
    return Promise.resolve(_query_def__WEBPACK_IMPORTED_MODULE_0__["regionSupported"].map(function (_a) {
      var value = _a.value;
      return {
        value: value,
        text: Object(_locale__WEBPACK_IMPORTED_MODULE_6__["t"])(value)
      };
    }));
  };

  TDMQDatasource.prototype.getConsumerList = function (params) {
    return __awaiter(this, void 0, void 0, function () {
      var region, act, payload, _a, service, action, responseField, serviceInfo, rs;

      var _this = this;

      return __generator(this, function (_b) {
        switch (_b.label) {
          case 0:
            region = params.region, act = params.action, payload = params.payload;
            _a = this.extraActionMap[act], service = _a.service, action = _a.action, responseField = _a.responseField;
            serviceInfo = Object(_common_constants__WEBPACK_IMPORTED_MODULE_3__["GetServiceAPIInfo"])(region, service);
            return [4
            /*yield*/
            , Object(_common_utils__WEBPACK_IMPORTED_MODULE_4__["fetchAllFactory"])(function (data) {
              return _this.doRequest({
                url: _this.url + serviceInfo.path,
                data: data
              }, serviceInfo.service, {
                region: region,
                action: action
              });
            }, payload, responseField)];

          case 1:
            rs = _b.sent();
            return [2
            /*return*/
            , rs[0]];
        }
      });
    });
  };

  TDMQDatasource.prototype.fetchMetricData = function (action, region, instance, query) {
    return __awaiter(this, void 0, void 0, function () {
      var payload, rs, pickKey_1, result;

      var _this = this;

      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            payload = {
              Limit: 100,
              ClusterId: instance[this.templateQueryIdMap.instance]
            };
            if (!(Object.keys(this.extraActionMap).indexOf(action) !== -1)) return [3
            /*break*/
            , 3];

            if (action === 'DescribeRocketMQGroups') {
              payload.NamespaceId = this.getVariable(query['clusternamespace']);
            }

            return [4
            /*yield*/
            , this.getConsumerList({
              region: region,
              action: action,
              payload: payload
            })];

          case 1:
            rs = _a.sent();
            pickKey_1 = this.extraActionMap[action].pickKey;
            result = rs.map(function (o) {
              o._InstanceAliasValue = o[_this.templateQueryIdMap[pickKey_1]];
              return {
                text: o[_this.templateQueryIdMap[pickKey_1]],
                value: o[_this.templateQueryIdMap[pickKey_1]]
              };
            });
            return [4
            /*yield*/
            , _common_datasourceStorage__WEBPACK_IMPORTED_MODULE_5__["default"].setExtraStorage(this.service, this.keyInStorage[pickKey_1], rs)];

          case 2:
            _a.sent();

            return [2
            /*return*/
            , result];

          case 3:
            return [2
            /*return*/
            , []];
        }
      });
    });
  };

  return TDMQDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (TDMQDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/tdmq_rocketmq/query.ts":
/*!******************************************************!*\
  !*** ./datasource/tc_monitor/tdmq_rocketmq/query.ts ***!
  \******************************************************/
/*! exports provided: TdmqRocketmqQueryCtrl, tdmqRocketmqQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TdmqRocketmqQueryCtrl", function() { return TdmqRocketmqQueryCtrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tdmqRocketmqQuery", function() { return tdmqRocketmqQuery; });
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grafana/app/core/core_module */ "grafana/app/core/core_module");
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/tdmq_rocketmq/query_def.ts");
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};




var ExtraFields = [{
  label: 'Namespace',
  field: 'namespace',
  action: 'DescribeRocketMQNamespaces'
}, {
  label: 'Group',
  field: 'group',
  action: 'DescribeRocketMQGroups'
}];
var dropdownTextConfig = {
  DescribeRocketMQNamespaces: 'namespace',
  DescribeRocketMQGroups: 'group'
};

var TdmqRocketmqQueryCtrl =
/** @class */
function () {
  TdmqRocketmqQueryCtrl.$inject = ["$scope", "$rootScope"];

  /** @ngInject */
  function TdmqRocketmqQueryCtrl($scope, $rootScope) {
    var _this = this;

    $scope.init = function () {
      $scope.TDMQFilterFieldsDescriptor = _query_def__WEBPACK_IMPORTED_MODULE_1__["TDMQFilterFieldsDescriptor"];
      $scope.ExtraFields = ExtraFields;
      $scope.namespace = _query_def__WEBPACK_IMPORTED_MODULE_1__["namespace"];
    };

    $scope.clearExtrasAlias = function () {
      $scope.target.namespace = '';
      $scope.target.group = '';
    };

    $scope.onChecked = function (srcField, dstField) {
      if ($scope.target.queries[srcField] === true) {
        $scope.target.queries[dstField] = false;
      }

      $scope.onChange();
    };

    $scope.getInstanceId = function () {
      var instance = $scope.target.instance;
      var service = Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["GetServiceFromNamespace"])($scope.namespace);
      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);

      if (!instance) {
        return '';
      }

      try {
        instance = JSON.parse(instance)[_query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"].instance];
      } catch (error) {// console.log();
      }

      return instance;
    };

    $scope.getExtraFields = function () {
      return ExtraFields.filter(function (item) {
        var _a, _b;

        return item.field in ((_a = $scope.dims) !== null && _a !== void 0 ? _a : {}) || item.label in ((_b = $scope.dims) !== null && _b !== void 0 ? _b : {});
      });
    };

    $scope.getExtraDropdown = function (target, action) {
      return __awaiter(_this, void 0, void 0, function () {
        var service, region, payload, namespace_1, rs, result;
        return __generator(this, function (_a) {
          switch (_a.label) {
            case 0:
              service = Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["GetServiceFromNamespace"])($scope.namespace);
              region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);
              payload = {
                Limit: 100,
                ClusterId: $scope.getInstanceId()
              };

              if (action === 'DescribeRocketMQGroups') {
                namespace_1 = $scope.target.namespace;

                try {
                  namespace_1 = JSON.parse(namespace_1)[_query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"].namespace];
                } catch (e) {}

                payload.NamespaceId = $scope.datasource.getServiceFn(service, 'getVariable')(namespace_1);
              }

              return [4
              /*yield*/
              , $scope.datasource.getServiceFn(service, 'getConsumerList')({
                region: region,
                action: action,
                payload: payload
              })];

            case 1:
              rs = _a.sent();
              result = rs.map(function (o) {
                o._InstanceAliasValue = o[_query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"][dropdownTextConfig[action]]];
                return {
                  text: o[_query_def__WEBPACK_IMPORTED_MODULE_1__["templateQueryIdMap"][dropdownTextConfig[action]]],
                  value: JSON.stringify(o)
                };
              });
              return [2
              /*return*/
              , result];
          }
        });
      });
    };

    $scope.init();
  }

  return TdmqRocketmqQueryCtrl;
}();


var template = "\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Functions are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/50388\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          Offset\n          <info-popover mode=\"right-normal\">\n            \u504F\u79FB\u91CF, \u4F8B\u5982Offset=20&Limit=20 \u8FD4\u56DE\u7B2C 20 \u5230 40 \u9879\n          </info-popover>\n        </label>\n        <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n      </div>\n    </div>\n    <div class=\"gf-form-inline\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          Limit\n          <info-popover mode=\"right-normal\">\n            \u5355\u6B21\u8BF7\u6C42\u8FD4\u56DE\u7684\u6570\u91CF\uFF0C\u9ED8\u8BA4\u4E3A20\uFF0C\u6700\u5C0F\u503C\u4E3A1\uFF0C\u6700\u5927\u503C\u4E3A100\n          </info-popover>\n        </label>\n        <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n      </div>\n    </div>\n    <div class=\"gf-form-inline\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-9\">\n          ClusterIdList\n          <info-popover mode=\"right-normal\">\n            \u5B9E\u4F8B ID\uFF0C\u6BCF\u6B21\u8BF7\u6C42\u7684\u5B9E\u4F8B\u7684\u4E0A\u9650\u4E3A100\uFF0C\u53C2\u6570\u4E0D\u652F\u6301\u540C\u65F6\u6307\u5B9A ClusterIdList \u548C Filters\n          </info-popover>\n        </label>\n        <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n          switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n      </div>\n    </div>\n    <div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n      <multi-condition type=\"'input'\" max-cond=\"100\" value=\"target.queries.ClusterIdList\" on-change=\"onChange()\">\n      </multi-condition>\n    </div>\n    <div class=\"gf-form-inline\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-9\">\n          Filters\n          <info-popover mode=\"right-normal\">\n            \u8FC7\u6EE4\u6761\u4EF6\uFF0C\u6BCF\u6B21\u8BF7\u6C42\u7684 Filters \u7684\u4E0A\u9650\u4E3A10\uFF0CFilter.Values \u7684\u4E0A\u9650\u4E3A5\u3002\u53C2\u6570\u4E0D\u652F\u6301\u540C\u65F6\u6307\u5B9A ClusterIdList \u548C Filters\n          </info-popover>\n        </label>\n        <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n          on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n      </div>\n    </div>\n    <div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n      <div class=\"gf-form-inline\" ng-repeat=\"field in TDMQFilterFieldsDescriptor\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <multi-condition\n          ng-if=\"field.type === 'dropdownmulti'\"\n          type=\"'dropdown'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          get-options=\"getDropdown(field.key)\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputNumbermulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputmulti'\"\n          type=\"'input'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries.Filters[field.key]\"\n          options=\"field.list\"\n          multiple=\"false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n\n<!-- \u8D77\u59CB\u533A\u57DF \u76EE\u7684\u533A\u57DF\u7B49 -->\n  <div>\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"true\" get-options=\"getExtraDropdown(target, extra.action)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n";
function tdmqRocketmqQuery() {
  return {
    template: template,
    controller: TdmqRocketmqQueryCtrl,
    restrict: 'E',
    scope: {
      target: '=',
      showDetail: '=',
      region: '=',
      datasource: '=',
      getDropdownOptions: '&',
      onChange: '&',
      onRefresh: '&',
      dims: '='
    },
    link: function link(scope, element, attrs) {
      scope.$watch('target.instance', function () {
        var _a;

        (_a = scope.clearExtrasAlias) === null || _a === void 0 ? void 0 : _a.call(scope);
      });
      scope.$watch('target.metricName', function () {
        var _a;

        (_a = scope.clearExtrasAlias) === null || _a === void 0 ? void 0 : _a.call(scope);
      });
    }
  };
}
grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default.a.directive('tdmqRocketmqQuery', tdmqRocketmqQuery);

/***/ }),

/***/ "./datasource/tc_monitor/tdmq_rocketmq/query_def.ts":
/*!**********************************************************!*\
  !*** ./datasource/tc_monitor/tdmq_rocketmq/query_def.ts ***!
  \**********************************************************/
/*! exports provided: default, TDMQFilterFieldsDescriptor, templateQueryIdMap, TDMQROCKETMQInstanceAliasList, TDMQInvalidDemensions, namespace, queryMonitorExtraConfg, keyInStorage, regionSupported, TDMQROCKETMQGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TDMQFilterFieldsDescriptor", function() { return TDMQFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TDMQROCKETMQInstanceAliasList", function() { return TDMQROCKETMQInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TDMQInvalidDemensions", function() { return TDMQInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryMonitorExtraConfg", function() { return queryMonitorExtraConfg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keyInStorage", function() { return keyInStorage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "regionSupported", function() { return regionSupported; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TDMQROCKETMQGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);

var namespace = 'QCE/ROCKETMQ';
var TDMQInvalidDemensions = {
  tenant: 'ClusterId',
  namespace: 'NamespaceId',
  group: 'Name'
}; // 需和文件名对应

var TDMQROCKETMQInstanceAliasList = ['ClusterId', 'ClusterName'];
var templateQueryIdMap = {
  instance: 'ClusterId',
  namespace: 'NamespaceId',
  group: 'Name'
}; // select类型需要注意是{},multi后缀是[],dropdown是''

var TDMQFilterFields = {
  Limit: 20,
  Offset: 0,
  instanceIdsChecked: false,
  filtersChecked: true,
  ClusterIdList: [''],
  Filters: {
    includeVip: {
      text: '是',
      value: 'true'
    }
  }
};
var TDMQFilterFieldsDescriptor = [{
  key: 'includeVip',
  enDescriptor: 'includeVip',
  cnDescriptor: '包含专享集群',
  link: '',
  type: 'select',
  list: [{
    text: '是',
    value: 'true'
  }, {
    text: '否',
    value: 'false'
  }]
}];
var TDMQ_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'ClusterId',
  // 此处key应该是经过TDMQInvalidDemensions处理后的
  namespace: '',
  group: '',
  queries: TDMQFilterFields
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  var params = {};

  if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(queries)) {
    params.Limit = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Limit', 20) || 20;
    params.Offset = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Offset', 0) || 0;

    if (queries.instanceIdsChecked) {
      if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(queries.ClusterIdList)) {
        var ClusterIdList = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(queries.ClusterIdList);

        if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(ClusterIdList).length > 0) {
          params.ClusterIdList = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(ClusterIdList).slice(0, 100);
        }
      }
    } else if (queries.filtersChecked) {
      var Filters_1 = [];

      lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(queries.Filters, function (item, key) {
        if (Filters_1.length > 9) {
          return;
        }

        if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(item)) {
          item = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(item);

          if (item.length > 0) {
            Filters_1.push({
              Name: key,
              Values: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(item).slice(0, 5)
            });
          }
        } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(item)) {
          if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', []))) {
            Filters_1.push({
              Name: key,
              Values: [lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', [])].slice(0, 5)
            });
          }
        }
      });

      if (Filters_1.length > 0) {
        params.Filters = Filters_1;
      }
    }
  }

  return params;
}

var regionSupported = [{
  value: 'ap-beijing'
}, {
  value: 'ap-chengdu'
}, {
  value: 'ap-chongqing'
}, {
  value: 'ap-guangzhou'
}, {
  value: 'ap-shenzhen-fsi'
}, {
  value: 'ap-shanghai'
}, {
  value: 'ap-shanghai-fsi'
}, {
  value: 'ap-nanjing'
}, {
  value: 'ap-hongkong'
}, {
  value: 'ap-tokyo'
}, {
  value: 'ap-seoul'
}, {
  value: 'ap-singapore'
}, {
  value: 'ap-bangkok'
}, {
  value: 'ap-jakarta'
}, {
  value: 'ap-mumbai'
}, {
  value: 'eu-frankfurt'
}, {
  value: 'eu-moscow'
}, {
  value: 'na-ashburn'
}, {
  value: 'na-siliconvalley'
}, {
  value: 'na-toronto'
}]; // 需要缓存到storage的内容的key列表

var keyInStorage = {
  namespace: 'NamespaceId',
  group: 'Name'
};
/*
如果有InstanceId额外的维度，原则上都需要传入此map结构配置
key的含义：
  经过InvalidDemensions处理后的string。topicId =》TopicId。
  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId
value的含义：
  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、
  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。
                    默认取通过InvalidDemsion处理后的key
  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。
                    即：templateQueryIdMap中内容。
                    联合上面2的内容筛选出原始sourceMap
*/

var queryMonitorExtraConfg = {
  NamespaceId: {
    dim_KeyInStorage: keyInStorage.namespace,
    dim_KeyInTarget: 'namespace',
    dim_KeyInMap: templateQueryIdMap.namespace
  },
  Name: {
    dim_KeyInStorage: keyInStorage.group,
    dim_KeyInTarget: 'group',
    dim_KeyInMap: templateQueryIdMap.group
  }
};
/* harmony default export */ __webpack_exports__["default"] = (TDMQ_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/tke/datasource.ts":
/*!*************************************************!*\
  !*** ./datasource/tc_monitor/tke/datasource.ts ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __spreadArray = undefined && undefined.__spreadArray || function (to, from, pack) {
  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
    if (ar || !(i in from)) {
      if (!ar) ar = Array.prototype.slice.call(from, 0, i);
      ar[i] = from[i];
    }
  }
  return to.concat(ar || Array.prototype.slice.call(from));
};






var variableToArray = function variableToArray(variable) {
  if (Object(lodash__WEBPACK_IMPORTED_MODULE_0__["isEmpty"])(variable)) {
    return [];
  }

  if (Object(lodash__WEBPACK_IMPORTED_MODULE_0__["isArray"])(variable)) {
    return variable;
  }

  if (Object(lodash__WEBPACK_IMPORTED_MODULE_0__["isString"])(variable)) {
    return Object(lodash__WEBPACK_IMPORTED_MODULE_0__["split"])(variable, ',').map(function (item) {
      return Object(lodash__WEBPACK_IMPORTED_MODULE_0__["trim"])(item);
    });
  }

  return [];
};

var TKEDatasource =
/** @class */
function (_super) {
  __extends(TKEDatasource, _super);

  function TKEDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.InstanceAliasList = ['ClusterId', 'ClusterName'];
    _this.templateQueryIdMap = {
      instance: 'ClusterId'
    };
    _this.InvalidDimensions = {
      tke_cluster_instance_id: 'ClusterId'
    };
    _this.InstanceReqConfig = {
      service: 'tke',
      action: 'DescribeClusters',
      responseField: 'Clusters'
    };
    return _this;
  }

  TKEDatasource.prototype.getMonitorData = function (params, region, instances, target, options) {
    var _this = this;

    var serviceInfo = Object(_common_constants__WEBPACK_IMPORTED_MODULE_1__["GetServiceAPIInfo"])(region, 'monitor');
    var timeshift = Object(_common_utils__WEBPACK_IMPORTED_MODULE_2__["getTimeShiftInMs"])(target.timeshift);
    var conditions = Object(lodash__WEBPACK_IMPORTED_MODULE_0__["reduce"])(target.conditions, function (prev, item) {
      if (Object(lodash__WEBPACK_IMPORTED_MODULE_0__["isEmpty"])(item.Key) || Object(lodash__WEBPACK_IMPORTED_MODULE_0__["isEmpty"])(item.Operator) || Object(lodash__WEBPACK_IMPORTED_MODULE_0__["isEmpty"])(item.Value)) {
        return prev;
      }

      return __spreadArray(__spreadArray([], Object(lodash__WEBPACK_IMPORTED_MODULE_0__["filter"])(prev, function (e) {
        return e.Key !== item.Key;
      }), true), [{
        Key: Object(_common_constants__WEBPACK_IMPORTED_MODULE_1__["ReplaceVariable"])(_this.templateSrv, options.scopedVars, item.Key, false),
        Operator: Object(_common_constants__WEBPACK_IMPORTED_MODULE_1__["ReplaceVariable"])(_this.templateSrv, options.scopedVars, item.Operator, false),
        Value: variableToArray(Object(_common_constants__WEBPACK_IMPORTED_MODULE_1__["ReplaceVariable"])(_this.templateSrv, options.scopedVars, item.Value, true))
      }], false);
    }, [{
      Key: 'tke_cluster_instance_id',
      Operator: '=',
      Value: instances.map(function (item) {
        return item['ClusterId'];
      })
    }]);
    return this.doRequest({
      url: this.url + serviceInfo.path,
      data: {
        Period: params.Period,
        MetricNames: [params.MetricName],
        Module: 'monitor',
        Namespace: 'QCE/TKE',
        EndTime: params.EndTime,
        StartTime: params.StartTime,
        Conditions: conditions,
        GroupBys: variableToArray(Object(_common_constants__WEBPACK_IMPORTED_MODULE_1__["ReplaceVariable"])(this.templateSrv, options.scopedVars, target.groupBys, true))
      }
    }, serviceInfo.service, {
      action: 'DescribeStatisticData',
      region: region
    }).then(function (response) {
      return Object(lodash__WEBPACK_IMPORTED_MODULE_0__["flatten"])(Object(lodash__WEBPACK_IMPORTED_MODULE_0__["map"])(response.Data, function (data) {
        return Object(lodash__WEBPACK_IMPORTED_MODULE_0__["map"])(data.Points, function (point) {
          var dimensionSort = Object(lodash__WEBPACK_IMPORTED_MODULE_0__["sortBy"])(point.Dimensions, ['Name']);

          var dimensionString = __spreadArray(__spreadArray([], dimensionSort.splice(Object(lodash__WEBPACK_IMPORTED_MODULE_0__["findIndex"])(dimensionSort, {
            Name: 'tke_cluster_instance_id'
          }), 1), true), dimensionSort, true).map(function (dimension) {
            return dimension.Value;
          }).join(' - ');

          var timeshiftString = timeshift > 0 ? "_".concat(target.timeshift) : '';
          return {
            target: "".concat(data.MetricName, " - ").concat(dimensionString).concat(timeshiftString),
            datapoints: Object(lodash__WEBPACK_IMPORTED_MODULE_0__["map"])(point.Values, function (value) {
              return [value.Value, value.Timestamp * 1000 + timeshift];
            })
          };
        });
      }));
    });
  };

  return TKEDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_3__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (TKEDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/tke/query.ts":
/*!********************************************!*\
  !*** ./datasource/tc_monitor/tke/query.ts ***!
  \********************************************/
/*! exports provided: QueryCtrl, sQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QueryCtrl", function() { return QueryCtrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sQuery", function() { return sQuery; });
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grafana/app/core/core_module */ "grafana/app/core/core_module");
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/tke/query_def.ts");




var QueryCtrl =
/** @class */
function () {
  QueryCtrl.$inject = ["$scope", "$rootScope"];

  /** @ngInject */
  function QueryCtrl($scope, $rootScope) {
    $scope.init = function () {
      $scope.TKEFilterFieldsDescriptor = _query_def__WEBPACK_IMPORTED_MODULE_2__["TKEFilterFieldsDescriptor"];
    };

    $scope.onChecked = function (srcField, dstField) {
      if ($scope.target.queries[srcField] === true) {
        $scope.target.queries[dstField] = false;
      }

      $scope.onChange();
    };

    $scope.addCondition = function () {
      $scope.target.conditions.push({
        Key: '',
        Operator: '=',
        Value: ''
      });
    };

    $scope.deleteCondition = function (index) {
      var targetCondition = $scope.target.conditions[index];

      if (Object(lodash__WEBPACK_IMPORTED_MODULE_1__["isEmpty"])(targetCondition.Key) || Object(lodash__WEBPACK_IMPORTED_MODULE_1__["isEmpty"])(targetCondition.Operator) || Object(lodash__WEBPACK_IMPORTED_MODULE_1__["isEmpty"])(targetCondition.Value)) {
        $scope.target.conditions.splice(index, 1);
      } else {
        $scope.target.conditions.splice(index, 1);
        $scope.onRefresh();
      }
    };

    $scope.getOperator = function () {
      return Promise.resolve([{
        text: '=',
        value: '='
      }, {
        text: 'in',
        value: 'in'
      }]);
    };

    $scope.init();
  }

  return QueryCtrl;
}();


var template = "\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Functions are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/50388\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          Offset\n          <info-popover mode=\"right-normal\">\n            \u504F\u79FB\u91CF, \u4F8B\u5982Offset=20&Limit=20 \u8FD4\u56DE\u7B2C 20 \u5230 40 \u9879\n          </info-popover>\n        </label>\n        <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n      </div>\n    </div>\n    <div class=\"gf-form-inline\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          Limit\n          <info-popover mode=\"right-normal\">\n            \u5355\u6B21\u8BF7\u6C42\u8FD4\u56DE\u7684\u6570\u91CF\uFF0C\u9ED8\u8BA4\u4E3A20\uFF0C\u6700\u5C0F\u503C\u4E3A1\uFF0C\u6700\u5927\u503C\u4E3A100\n          </info-popover>\n        </label>\n        <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n      </div>\n    </div>\n    <div class=\"gf-form-inline\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-9\">\n          ClusterIdList\n          <info-popover mode=\"right-normal\">\n            \u5B9E\u4F8B ID\uFF0C\u6BCF\u6B21\u8BF7\u6C42\u7684\u5B9E\u4F8B\u7684\u4E0A\u9650\u4E3A100\uFF0C\u53C2\u6570\u4E0D\u652F\u6301\u540C\u65F6\u6307\u5B9A ClusterIdList \u548C Filters\n          </info-popover>\n        </label>\n        <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n          switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n      </div>\n    </div>\n    <div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n      <multi-condition type=\"'input'\" max-cond=\"100\" value=\"target.queries.ClusterIdList\" on-change=\"onChange()\">\n      </multi-condition>\n    </div>\n    <div class=\"gf-form-inline\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-9\">\n          Filters\n          <info-popover mode=\"right-normal\">\n            \u8FC7\u6EE4\u6761\u4EF6\uFF0C\u6BCF\u6B21\u8BF7\u6C42\u7684 Filters \u7684\u4E0A\u9650\u4E3A10\uFF0CFilter.Values \u7684\u4E0A\u9650\u4E3A5\u3002\u53C2\u6570\u4E0D\u652F\u6301\u540C\u65F6\u6307\u5B9A ClusterIdList \u548C Filters\n          </info-popover>\n        </label>\n        <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n          on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n      </div>\n    </div>\n    <div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n      <div class=\"gf-form-inline\" ng-repeat=\"field in TKEFilterFieldsDescriptor\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <input\n          ng-if=\"field.type === 'input'\"\n          style=\"margin-right:2px\"\n          type=\"text\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n        />   \n        <multi-condition\n          ng-if=\"field.type === 'dropdownmulti'\"\n          type=\"'dropdown'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          get-options=\"getDropdown(field.key)\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputNumbermulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputmulti'\"\n          type=\"'input'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries.Filters[field.key]\"\n          options=\"field.list\"\n          multiple=\"false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"gf-form-inline\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label query-keyword width-9\">Conditions</label>\n      <div>\n        <div class=\"gf-form\" ng-repeat=\"condition in target.conditions\">\n          <input class=\"gf-form-input width-10 tc-condition-input\" type=\"text\" ng-model=\"target.conditions[$index].Key\" ng-blur=\"onRefresh()\"></input>\n          <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n            <gf-form-dropdown model=\"target.conditions[$index].Operator\" get-options=\"getOperator()\" on-change=\"onRefresh()\" allow-custom=\"true\" css-class=\"min-width-5\">\n            </gf-form-dropdown>\n          </div>\n          <input class=\"gf-form-input width-10 tc-condition-input\" type=\"text\" ng-model=\"target.conditions[$index].Value\" ng-blur=\"onRefresh()\"></input>\n          <label class=\"gf-form-label pointer\" ng-click=\"deleteCondition($index)\">\n            <i class=\"fa fa-minus\"></i>\n          </label>\n          <label class=\"gf-form-label pointer\" ng-click=\"addCondition()\" ng-if=\"$last\">\n            <i class=\"fa fa-plus\"></i>\n          </label>\n        </div>\n        <div class=\"gf-form\" ng-if=\"target.conditions.length === 0\">\n          <label class=\"gf-form-label pointer\" ng-click=\"addCondition()\">\n            <i class=\"fa fa-plus\"></i>\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"gf-form-inline\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label query-keyword width-9\">GroupBy</label>\n      <input class=\"gf-form-input width-15\" type=\"text\" ng-model=\"target.groupBys\" ng-blur=\"onRefresh()\"></input>\n    </div>\n  </div>\n</div>\n";
function sQuery() {
  return {
    template: template,
    controller: QueryCtrl,
    restrict: 'E',
    scope: {
      target: '=',
      showDetail: '=',
      region: '=',
      datasource: '=',
      getDropdownOptions: '&',
      onChange: '&',
      onRefresh: '&',
      dims: '='
    }
  };
}
grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default.a.directive('tkeQuery', sQuery);

/***/ }),

/***/ "./datasource/tc_monitor/tke/query_def.ts":
/*!************************************************!*\
  !*** ./datasource/tc_monitor/tke/query_def.ts ***!
  \************************************************/
/*! exports provided: default, TKEFilterFieldsDescriptor, TKEInstanceAliasList, TKEGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TKEFilterFieldsDescriptor", function() { return TKEFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TKEInstanceAliasList", function() { return TKEInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TKEGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);

var TKE_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'ClusterId',
  conditions: [],
  groupBys: '',
  queries: {
    Limit: 20,
    Offset: 0,
    instanceIdsChecked: false,
    filtersChecked: true,
    ClusterIds: [''],
    Filters: {
      ClusterName: [],
      ClusterType: [],
      ClusterStatus: [],
      'tag-key': []
    }
  }
};
var TKEFilterFieldsDescriptor = [{
  key: 'ClusterName',
  enDescriptor: 'Cluster Name',
  cnDescriptor: '集群名',
  link: '',
  type: 'input'
}, {
  key: 'ClusterType',
  enDescriptor: 'Cluster Type',
  cnDescriptor: '集群类型',
  link: '',
  type: 'inputmulti'
}, {
  key: 'ClusterStatus',
  enDescriptor: 'Cluster Status',
  cnDescriptor: '集群状态',
  link: '',
  type: 'inputmulti'
}, {
  key: 'Tags',
  enDescriptor: 'Tags',
  cnDescriptor: '标签键值对',
  link: '',
  type: 'inputmulti'
}, {
  key: 'vpc-id',
  enDescriptor: 'VPC',
  cnDescriptor: 'VPC',
  link: '',
  type: 'input'
}, {
  key: 'tag-key',
  enDescriptor: 'Tag Key',
  cnDescriptor: '标签键',
  link: '',
  type: 'inputmulti'
}, {
  key: 'tag-value',
  enDescriptor: 'Tag Value',
  cnDescriptor: '标签值',
  link: '',
  type: 'inputmulti'
}];
var TKEInstanceAliasList = ['ClusterId', 'ClusterName'];

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  var params = {};

  if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(queries)) {
    params.Limit = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Limit', 20) || 20;
    params.Offset = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(queries, 'Offset', 0) || 0;

    if (queries.instanceIdsChecked) {
      if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(queries.InstanceIds)) {
        var InstanceIds = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(queries.InstanceIds);

        if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(InstanceIds).length > 0) {
          params.InstanceIds = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(InstanceIds).slice(0, 100);
        }
      }
    } else if (queries.filtersChecked) {
      var Filters_1 = [];

      lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(queries.Filters, function (item, key) {
        if (Filters_1.length > 9) {
          return;
        }

        if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(item)) {
          item = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(item);

          if (item.length > 0) {
            Filters_1.push({
              Name: key,
              Values: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniq(item).slice(0, 5)
            });
          }
        } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(item)) {
          if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', []))) {
            Filters_1.push({
              Name: key,
              Values: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'value', []).slice(0, 5)
            });
          }
        }
      });

      if (Filters_1.length > 0) {
        params.Filters = Filters_1;
      }
    }
  }

  return params;
}

/* harmony default export */ __webpack_exports__["default"] = (TKE_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/tsf/datasource.ts":
/*!*************************************************!*\
  !*** ./datasource/tc_monitor/tsf/datasource.ts ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/tsf/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();




var TSFDatasource =
/** @class */
function (_super) {
  __extends(TSFDatasource, _super);

  function TSFDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = 'QCE/TSF';
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["TSFInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["TSFInvalidDemensions"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_0__["templateQueryIdMap"];
    _this.InstanceReqConfig = {
      service: 'tsf',
      action: 'DescribeApplications',
      responseField: 'Content'
    };
    return _this;
  }

  return TSFDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (TSFDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/tsf/query.ts":
/*!********************************************!*\
  !*** ./datasource/tc_monitor/tsf/query.ts ***!
  \********************************************/
/*! exports provided: TSFQueryCtrl, tsfQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TSFQueryCtrl", function() { return TSFQueryCtrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tsfQuery", function() { return tsfQuery; });
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grafana/app/core/core_module */ "grafana/app/core/core_module");
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/tsf/query_def.ts");



var TSFQueryCtrl =
/** @class */
function () {
  TSFQueryCtrl.$inject = ["$scope", "$rootScope"];

  /** @ngInject */
  function TSFQueryCtrl($scope, $rootScope) {
    $scope.init = function () {
      $scope.TSFFieldsDescriptor = _query_def__WEBPACK_IMPORTED_MODULE_1__["TSFFieldsDescriptor"];
    };

    $scope.init();
  }

  return TSFQueryCtrl;
}();


var template = "\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/649/36090\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in TSFFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n\n</div>\n";
function tsfQuery() {
  return {
    template: template,
    controller: TSFQueryCtrl,
    restrict: 'E',
    scope: {
      target: '=',
      showDetail: '=',
      region: '=',
      datasource: '=',
      onChange: '&'
    }
  };
}
grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default.a.directive('tsfQuery', tsfQuery);

/***/ }),

/***/ "./datasource/tc_monitor/tsf/query_def.ts":
/*!************************************************!*\
  !*** ./datasource/tc_monitor/tsf/query_def.ts ***!
  \************************************************/
/*! exports provided: default, TSFInvalidDemensions, templateQueryIdMap, TSFInstanceAliasList, TSFFieldsDescriptor, TSFGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TSFInvalidDemensions", function() { return TSFInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TSFInstanceAliasList", function() { return TSFInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TSFFieldsDescriptor", function() { return TSFFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TSFGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");

var ApplicationType = [{
  text: '所有',
  value: ''
}, {
  text: '容器应用',
  value: 'C'
}, {
  text: '普通应用/虚拟机应用',
  value: 'V'
}];
var MicroserviceType = [{
  text: '所有',
  value: ''
}, {
  text: '普通应用',
  value: 'N'
}, {
  text: 'Mesh应用',
  value: 'M'
}, {
  text: '微服务网关应用',
  value: 'G'
}, {
  text: '原生应用',
  value: 'NATIVE'
}];
var ApplicationResourceType = [{
  text: '默认资源类型',
  value: 'DEF'
}, {
  text: '微服务网关资源',
  value: 'GW'
}];
var TSFFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputnumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputnumber',
  min: 1,
  max: 100
}, {
  key: 'SearchWord',
  enDescriptor: 'SearchWord',
  cnDescriptor: '搜索关键字',
  link: '',
  type: 'input'
}, {
  key: 'ApplicationIdList',
  enDescriptor: 'ApplicationIdList',
  cnDescriptor: '应用ID 组成的数组',
  link: '',
  type: 'inputmulti'
}, {
  key: 'ApplicationType',
  enDescriptor: 'ApplicationType',
  cnDescriptor: '应用类型',
  link: '',
  type: 'select',
  list: ApplicationType
}, {
  key: 'MicroserviceType',
  enDescriptor: 'MicroserviceType',
  cnDescriptor: '应用的微服务类型',
  link: '',
  type: 'select',
  list: MicroserviceType
}, {
  key: 'ApplicationResourceTypeList',
  enDescriptor: 'ApplicationResourceTypeList',
  cnDescriptor: '应用资源类型数组',
  link: '',
  type: 'select',
  multiple: true,
  list: ApplicationResourceType
}];
var TSF_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'ApplicationId',
  queries: {
    Limit: 20,
    Offset: 0,
    SearchWord: '',
    OrderBy: '',
    OrderType: null,
    ApplicationType: '',
    MicroserviceType: '',
    ApplicationResourceTypeList: [],
    ApplicationIdList: []
  }
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  return Object(_common_utils__WEBPACK_IMPORTED_MODULE_0__["instanceQueryParamsBaseParse"])(queries, false);
}

var TSFInstanceAliasList = ['ApplicationId', 'ApplicationName'];
var TSFInvalidDemensions = {
  applicationid: 'ApplicationId'
};
var templateQueryIdMap = {
  instance: 'ApplicationId'
};
/* harmony default export */ __webpack_exports__["default"] = (TSF_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/v_clb/datasource.ts":
/*!***************************************************!*\
  !*** ./datasource/tc_monitor/v_clb/datasource.ts ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/v_clb/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");
/* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../locale */ "./locale/index.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};







var DCDatasource =
/** @class */
function (_super) {
  __extends(DCDatasource, _super);

  function DCDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = _query_def__WEBPACK_IMPORTED_MODULE_0__["namespace"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["VCLBInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["VCLBInvalidDemensions"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_0__["templateQueryIdMap"]; // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致

    _this.InstanceReqConfig = {
      service: 'clb',
      action: 'DescribeLoadBalancers',
      responseField: 'LoadBalancerSet'
    };
    return _this;
  }

  DCDatasource.prototype.getRegions = function () {
    return Promise.resolve(_query_def__WEBPACK_IMPORTED_MODULE_0__["regionSupported"].map(function (_a) {
      var value = _a.value;
      return {
        value: value,
        text: Object(_locale__WEBPACK_IMPORTED_MODULE_4__["t"])(value)
      };
    }));
  };

  DCDatasource.prototype.getAllMetrics = function (region) {
    return __awaiter(this, void 0, void 0, function () {
      var serviceInfo, public_metrics, private_metrics, res;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            serviceInfo = Object(_common_constants__WEBPACK_IMPORTED_MODULE_3__["GetServiceAPIInfo"])(region, 'monitor');
            return [4
            /*yield*/
            , this.doRequest({
              url: this.url + serviceInfo.path,
              data: {
                Namespace: _query_def__WEBPACK_IMPORTED_MODULE_0__["clbNamespaceMap"]["public"]
              }
            }, serviceInfo.service, {
              region: region,
              action: 'DescribeBaseMetrics'
            })];

          case 1:
            public_metrics = _a.sent().MetricSet;
            return [4
            /*yield*/
            , this.doRequest({
              url: this.url + serviceInfo.path,
              data: {
                Namespace: _query_def__WEBPACK_IMPORTED_MODULE_0__["clbNamespaceMap"]["private"]
              }
            }, serviceInfo.service, {
              region: region,
              action: 'DescribeBaseMetrics'
            })];

          case 2:
            private_metrics = _a.sent().MetricSet;
            res = Object.values(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.keyBy(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.concat(private_metrics, public_metrics), 'MetricName'));
            return [2
            /*return*/
            , res.map(function (t) {
              return Object(_query_def__WEBPACK_IMPORTED_MODULE_0__["modifyDimensons"])(t);
            })];
        }
      });
    });
  };

  DCDatasource.prototype.getMetrics = function (region) {
    if (region === void 0) {
      region = 'ap-guangzhou';
    }

    return __awaiter(this, void 0, void 0, function () {
      var rawSet;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , this.getAllMetrics(region)];

          case 1:
            rawSet = _a.sent();
            return [2
            /*return*/
            , lodash__WEBPACK_IMPORTED_MODULE_2___default.a.compact(rawSet)];
        }
      });
    });
  };

  return DCDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (DCDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/v_clb/query.ts":
/*!**********************************************!*\
  !*** ./datasource/tc_monitor/v_clb/query.ts ***!
  \**********************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _base_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_base/query */ "./datasource/tc_monitor/_base/query.ts");
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/v_clb/query_def.ts");


Object(_base_query__WEBPACK_IMPORTED_MODULE_0__["default"])(_query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorName"], _query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorConfig"]);

/***/ }),

/***/ "./datasource/tc_monitor/v_clb/query_def.ts":
/*!**************************************************!*\
  !*** ./datasource/tc_monitor/v_clb/query_def.ts ***!
  \**************************************************/
/*! exports provided: default, VCLBFilterFieldsDescriptor, templateQueryIdMap, VCLBInstanceAliasList, VCLBInvalidDemensions, namespace, queryEditorName, queryEditorConfig, clbNamespaceMap, modifyDimensons, regionSupported, BMLBGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VCLBFilterFieldsDescriptor", function() { return VCLBFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VCLBInstanceAliasList", function() { return VCLBInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VCLBInvalidDemensions", function() { return VCLBInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorName", function() { return queryEditorName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorConfig", function() { return queryEditorConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clbNamespaceMap", function() { return clbNamespaceMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modifyDimensons", function() { return modifyDimensons; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "regionSupported", function() { return regionSupported; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BMLBGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);


var namespace = 'QCE/V_CLB'; // 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称

var queryEditorName = 'vClbQuery';
var VCLBInvalidDemensions = {
  InstanceId: 'LoadBalancerId' // vip: 'LoadBalancerVips',
  // loadBalancerPort: 'Port',
  // protocol: 'Protocol',

}; // 要和文件名方式一致，ceip_summary=>CEIPSUMMARY

var VCLBInstanceAliasList = ['LoadBalancerId', 'LoadBalancerVips', 'LoadBalancerName'];
var templateQueryIdMap = {
  instance: 'LoadBalancerId'
};
var ForwardTypes = [{
  text: '通用的负载均衡',
  value: 1
}, {
  text: '传统的负载均衡',
  value: 0
}];
var OrderBy = [{
  text: 'LoadBalancerName',
  value: 'LoadBalancerName'
}, {
  text: 'CreateTime',
  value: 'CreateTime'
}, {
  text: 'Domain',
  value: 'Domain'
}, {
  text: 'LoadBalancerType',
  value: 'LoadBalancerType'
}];
var OrderType = [{
  text: '升序',
  value: 0
}, {
  text: '降序',
  value: 1
}];
var WithRs = [{
  text: '没有绑定后端服务',
  value: 0
}, {
  text: '绑定后端服务',
  value: 1
}, {
  text: '查询全部',
  value: -1
}];
var VCLBFilterFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputNumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1',
  link: '',
  type: 'inputNumber',
  min: 1
}, {
  key: 'LoadBalancerIds',
  enDescriptor: 'LoadBalancer ID',
  cnDescriptor: '实例ID',
  link: '',
  type: 'inputMulti'
}, {
  key: 'LoadBalancerName',
  enDescriptor: 'LoadBalancer Name',
  cnDescriptor: '实例名称',
  link: '',
  type: 'input'
}, {
  key: 'Forward',
  enDescriptor: 'Forward',
  cnDescriptor: '负载均衡实例类型',
  link: '',
  type: 'select',
  list: ForwardTypes
}, {
  key: 'Domain',
  enDescriptor: 'Domain',
  cnDescriptor: '域名，腾讯云为负载均衡实例分配的域名，本参数仅对传统型公网负载均衡才有意义',
  link: '',
  type: 'input'
}, {
  key: 'LoadBalancerVips',
  enDescriptor: 'LoadBalancer Vips',
  cnDescriptor: '负载均衡实例的 VIP 地址',
  link: '',
  type: 'inputMulti'
}, {
  key: 'BackendPrivateIps',
  enDescriptor: 'BackendPrivate Ips',
  cnDescriptor: '负载均衡绑定的后端服务的内网 IP',
  link: '',
  type: 'inputMulti'
}, {
  key: 'BackendPublicIps',
  enDescriptor: 'BackendPublic Ips',
  cnDescriptor: '负载均衡绑定的后端服务的外网 IP',
  link: '',
  type: 'inputMulti'
}, {
  key: 'ProjectId',
  enDescriptor: 'Project ID',
  cnDescriptor: '负载均衡实例所属的项目 ID',
  link: '',
  type: 'inputNumber'
}, {
  key: 'VpcId',
  enDescriptor: 'Vpc ID',
  cnDescriptor: '负载均衡实例所属私有网络',
  link: '',
  type: 'input'
}, {
  key: 'SecurityGroup',
  enDescriptor: 'Security Group',
  cnDescriptor: '安全组ID',
  link: '',
  type: 'input'
}, {
  key: 'MasterZone',
  enDescriptor: 'Master Zone',
  cnDescriptor: '主可用区ID',
  link: '',
  type: 'input'
}, {
  key: 'WithRs',
  enDescriptor: 'WithRs',
  cnDescriptor: '负载均衡是否绑定后端服务',
  link: '',
  type: 'select',
  list: WithRs
}, {
  key: 'OrderBy',
  enDescriptor: 'OrderBy',
  cnDescriptor: '排序字段',
  link: '',
  type: 'select',
  list: OrderBy
}, {
  key: 'OrderType',
  enDescriptor: 'OrderByType',
  cnDescriptor: '排序方式',
  link: '',
  type: 'select',
  list: OrderType
}]; // 各产品实例列表detail配置

var queryEditorConfig = {
  instanceDocUrl: 'https://cloud.tencent.com/document/api/214/30685',
  namespace: namespace,
  fieldDescriptor: VCLBFilterFieldsDescriptor
};
var LBFields = {
  LoadBalancerIds: [],
  Forward: undefined,
  LoadBalancerName: '',
  Domain: '',
  LoadBalancerVips: [],
  BackendPublicIps: [],
  BackendPrivateIps: [],
  Limit: 20,
  Offset: 0,
  ProjectId: undefined,
  WithRs: {},
  VpcId: '',
  SecurityGroup: '',
  MasterZone: '',
  OrderBy: {},
  OrderType: {}
};
var VCLB_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'LoadBalancerId',
  Port: '',
  Protocol: '',
  listener: '',
  // listenerAlias: 'ListenerId',
  queries: LBFields
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  return Object(_common_utils__WEBPACK_IMPORTED_MODULE_0__["instanceQueryParamsBaseParse"])(queries, false);
} // regions for dropdown


var regionSupported = [{
  value: 'ap-bangkok'
}, {
  value: 'ap-beijing'
}, {
  value: 'ap-chengdu'
}, {
  value: 'ap-chongqing'
}, {
  value: 'ap-guangzhou'
}, {
  value: 'ap-hongkong'
}, {
  value: 'ap-jakarta'
}, {
  value: 'ap-mumbai'
}, {
  value: 'ap-seoul'
}, {
  value: 'ap-nanjing'
}, {
  value: 'ap-shanghai'
}, {
  value: 'ap-shanghai-fsi'
}, {
  value: 'ap-shenzhen-fsi'
}, {
  value: 'ap-singapore'
}, {
  value: 'ap-tokyo'
}, {
  value: 'eu-frankfurt'
}, {
  value: 'eu-moscow'
}, {
  value: 'na-ashburn'
}, {
  value: 'na-siliconvalley'
}, {
  value: 'na-toronto'
}];
var clbNamespaceMap = {
  "public": 'QCE/LB_PUBLIC',
  "private": 'QCE/LB_PRIVATE'
};

function modifyDimensons(metricItem) {
  var metricTmp = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.cloneDeep(metricItem);

  metricTmp.Dimensions.forEach(function (item) {
    item.Dimensions = ['InstanceId'];
  });
  return metricTmp;
}

/* harmony default export */ __webpack_exports__["default"] = (VCLB_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/vbc/datasource.ts":
/*!*************************************************!*\
  !*** ./datasource/tc_monitor/vbc/datasource.ts ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/vbc/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();




var DCDatasource =
/** @class */
function (_super) {
  __extends(DCDatasource, _super);

  function DCDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = _query_def__WEBPACK_IMPORTED_MODULE_0__["namespace"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["VBCInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["VBCInvalidDemensions"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_0__["templateQueryIdMap"]; // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致

    _this.InstanceReqConfig = {
      service: 'vpc',
      action: 'DescribeCcns',
      responseField: 'CcnSet'
    };
    return _this;
  }

  DCDatasource.prototype.getFilterDropdown = function (_a) {
    var field = _a.field;
    return _super.prototype.getRegions.call(this);
  };

  return DCDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (DCDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/vbc/query.ts":
/*!********************************************!*\
  !*** ./datasource/tc_monitor/vbc/query.ts ***!
  \********************************************/
/*! exports provided: VBCQueryCtrl, scfQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VBCQueryCtrl", function() { return VBCQueryCtrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scfQuery", function() { return scfQuery; });
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grafana/app/core/core_module */ "grafana/app/core/core_module");
/* harmony import */ var grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/vbc/query_def.ts");
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");



var ExtraFields = [// {
  //   label: 'SRegion',
  //   field: 'SRegion',
  // },
  // {
  //   label: 'DRegion',
  //   field: 'DRegion',
  // },
];

var VBCQueryCtrl =
/** @class */
function () {
  VBCQueryCtrl.$inject = ["$scope", "$rootScope"];

  /** @ngInject */
  function VBCQueryCtrl($scope, $rootScope) {
    $scope.init = function () {
      $scope.VBCFilterFieldsDescriptor = _query_def__WEBPACK_IMPORTED_MODULE_1__["VBCFilterFieldsDescriptor"];
      $scope.namespace = _query_def__WEBPACK_IMPORTED_MODULE_1__["namespace"];
    };

    $scope.getExtraFields = function () {
      return ExtraFields.filter(function (item) {
        var _a;

        return item.field in ((_a = $scope.dims) !== null && _a !== void 0 ? _a : {});
      });
    };

    $scope.getExtraDropdown = function (field) {
      var service = Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["GetServiceFromNamespace"])($scope.namespace); // return $scope.datasource.getServiceFn(service, 'getFilterDropdown')({ field })

      return $scope.datasource.getFilterDropdown(service, {
        field: field
      });
    };

    $scope.init();
  }

  return VBCQueryCtrl;
}();


var template = "\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/45073\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in VBCFilterFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputNumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />    \n      <multi-condition\n        ng-if=\"field.type === 'inputNumberMulti'\"\n        type=\"'inputNumber'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        maxNum=\"field.max\"\n        minNum=\"field.min\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputMulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- \u8D77\u59CB\u533A\u57DF \u76EE\u7684\u533A\u57DF\u7B49 -->\n  <div>\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(extra.field)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n";
function scfQuery() {
  return {
    template: template,
    controller: VBCQueryCtrl,
    restrict: 'E',
    scope: {
      target: '=',
      showDetail: '=',
      region: '=',
      datasource: '=',
      getDropdownOptions: '&',
      onChange: '&',
      onRefresh: '&',
      dims: '='
    }
  };
}
grafana_app_core_core_module__WEBPACK_IMPORTED_MODULE_0___default.a.directive('vbcQuery', scfQuery);

/***/ }),

/***/ "./datasource/tc_monitor/vbc/query_def.ts":
/*!************************************************!*\
  !*** ./datasource/tc_monitor/vbc/query_def.ts ***!
  \************************************************/
/*! exports provided: default, VBCFilterFieldsDescriptor, templateQueryIdMap, VBCInstanceAliasList, VBCInvalidDemensions, namespace, queryEditorName, queryEditorConfig, VBCGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VBCFilterFieldsDescriptor", function() { return VBCFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VBCInstanceAliasList", function() { return VBCInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VBCInvalidDemensions", function() { return VBCInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorName", function() { return queryEditorName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorConfig", function() { return queryEditorConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VBCGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");

var namespace = 'QCE/VBC'; // 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称

var queryEditorName = 'vbcQuery';
var VBCInvalidDemensions = {// CcnId: 'CcnId',
}; // 需和文件名对应

var VBCInstanceAliasList = ['CcnId', 'CcnName'];
var templateQueryIdMap = {
  instance: 'CcnId'
}; // select类型需要注意是{},multi后缀是[],dropdown是''

var VBCFilterFields = {
  Limit: 20,
  Offset: 0,
  'ccn-id': [],
  'ccn-name': [],
  'ccn-description': [],
  state: {}
};
var VBCFilterFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputNumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputNumber',
  min: 1,
  max: 100
}, {
  key: 'ccn-id',
  enDescriptor: 'ccn-id',
  cnDescriptor: 'CCN实例ID',
  link: '',
  type: 'inputMulti'
}, {
  key: 'ccn-name',
  enDescriptor: 'ccn-name',
  cnDescriptor: 'CCN名称',
  link: '',
  type: 'inputMulti'
}, {
  key: 'ccn-description',
  enDescriptor: 'ccn-description',
  cnDescriptor: 'CCN描述',
  link: '',
  type: 'inputMulti'
}, {
  key: 'state',
  enDescriptor: 'state',
  cnDescriptor: '实例状态',
  link: '',
  type: 'select',
  multiple: true,
  list: [{
    text: '隔离中',
    value: 'ISOLATED'
  }, {
    text: '运行中',
    value: 'AVAILABLE'
  }]
}]; // 各产品实例列表detail配置

var queryEditorConfig = {
  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/19199',
  namespace: namespace,
  fieldDescriptor: VBCFilterFieldsDescriptor
};
var VBC_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'CcnId',
  DRegion: '',
  SRegion: '',
  queries: VBCFilterFields
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  return Object(_common_utils__WEBPACK_IMPORTED_MODULE_0__["instanceQueryParamsBaseParse"])(queries, false);
} // const regionSupported = [
//   { text: '华北地区(北京)', value: 'ap-beijing' },
//   { text: '西南地区(成都)', value: 'ap-chengdu' },
//   { text: '西南地区(重庆)', value: 'ap-chongqing' },
//   { text: '华南地区(广州)', value: 'ap-guangzhou' },
//   { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },
//   { text: '亚太南部(孟买)', value: 'ap-mumbai' },
//   { text: '华东地区(南京)', value: 'ap-nanjing' },
//   { text: '华东地区(上海)', value: 'ap-shanghai' },
//   { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },
//   { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },
//   { text: '亚太东南(新加坡)', value: 'ap-singapore' },
//   { text: '亚太东北(东京)', value: 'ap-tokyo' },
//   { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },
//   { text: '美国东部(弗吉尼亚)', value: 'na-ashburn' },
//   { text: '美国西部(硅谷)', value: 'na-siliconvalley' },
//   { text: '北美地区(多伦多)', value: 'na-toronto' },
// ];


/* harmony default export */ __webpack_exports__["default"] = (VBC_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/vpc_net_detect/datasource.ts":
/*!************************************************************!*\
  !*** ./datasource/tc_monitor/vpc_net_detect/datasource.ts ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/vpc_net_detect/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();




var DCDatasource =
/** @class */
function (_super) {
  __extends(DCDatasource, _super);

  function DCDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = _query_def__WEBPACK_IMPORTED_MODULE_0__["namespace"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["VPCNETDETECTInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["VPCNETInvalidDemensions"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_0__["templateQueryIdMap"]; // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致

    _this.InstanceReqConfig = {
      service: 'vpc',
      action: 'DescribeNetDetects',
      responseField: 'NetDetectSet',
      interceptor: {// response: (data: unknown[]) =>[
        //   {
        //     "NetDetectId": "netd-12345678",
        //   },
        // ],
      }
    };
    _this.MetricReqConfig = {
      resultFilter: _query_def__WEBPACK_IMPORTED_MODULE_0__["modifyDimensons"]
    };
    return _this;
  }

  return DCDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (DCDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/vpc_net_detect/query.ts":
/*!*******************************************************!*\
  !*** ./datasource/tc_monitor/vpc_net_detect/query.ts ***!
  \*******************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _base_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_base/query */ "./datasource/tc_monitor/_base/query.ts");
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/vpc_net_detect/query_def.ts");


Object(_base_query__WEBPACK_IMPORTED_MODULE_0__["default"])(_query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorName"], _query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorConfig"]);

/***/ }),

/***/ "./datasource/tc_monitor/vpc_net_detect/query_def.ts":
/*!***********************************************************!*\
  !*** ./datasource/tc_monitor/vpc_net_detect/query_def.ts ***!
  \***********************************************************/
/*! exports provided: default, VPCNETFilterFieldsDescriptor, templateQueryIdMap, VPCNETDETECTInstanceAliasList, VPCNETInvalidDemensions, namespace, queryEditorName, queryEditorConfig, modifyDimensons, VPCNETDETECTGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VPCNETFilterFieldsDescriptor", function() { return VPCNETFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VPCNETDETECTInstanceAliasList", function() { return VPCNETDETECTInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VPCNETInvalidDemensions", function() { return VPCNETInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorName", function() { return queryEditorName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorConfig", function() { return queryEditorConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modifyDimensons", function() { return modifyDimensons; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VPCNETDETECTGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");


var namespace = 'QCE/VPC_NET_DETECT'; // 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称

var queryEditorName = 'vpcNetDetectQuery';
var VPCNETInvalidDemensions = {
  netdetectid: 'NetDetectId',
  netDetectId: 'NetDetectId'
};
var VPCNETDETECTInstanceAliasList = ['NetDetectId', 'NetDetectName'];
var templateQueryIdMap = {
  instance: 'NetDetectId'
}; // select类型需要注意是{},multi后缀是[]

var VPCNETFilterFields = {
  Limit: 20,
  Offset: 0,
  'vpc-id': [],
  'net-detect-id': [],
  'subnet-id': [],
  'net-detect-name': []
};
var VPCNETFilterFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputNumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputNumber',
  min: 1,
  max: 100
}, {
  key: 'vpc-id',
  enDescriptor: 'vpc-id',
  cnDescriptor: 'VPC实例ID',
  link: '',
  type: 'inputMulti'
}, {
  key: 'net-detect-id',
  enDescriptor: 'net-detect-id',
  cnDescriptor: '网络探测实例ID',
  link: '',
  type: 'inputMulti'
}, {
  key: 'subnet-id',
  enDescriptor: 'subnet-id',
  cnDescriptor: '子网实例ID',
  link: '',
  type: 'inputMulti'
}, {
  key: 'net-detect-name',
  enDescriptor: 'net-detect-name',
  cnDescriptor: '网络探测名称',
  link: '',
  type: 'inputMulti'
}]; // 各产品实例列表detail配置

var queryEditorConfig = {
  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/38696',
  namespace: namespace,
  fieldDescriptor: VPCNETFilterFieldsDescriptor
};
var VPCNET_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'NetDetectId',
  queries: VPCNETFilterFields
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  return Object(_common_utils__WEBPACK_IMPORTED_MODULE_1__["instanceQueryParamsBaseParse"])(queries, true);
}

function modifyDimensons(metricItem) {
  var metricTmp = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.cloneDeep(metricItem);

  metricTmp.Dimensions.forEach(function (item) {
    item.Dimensions = ['netDetectId'];
  });
  return metricTmp;
}

/* harmony default export */ __webpack_exports__["default"] = (VPCNET_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/vpngw/datasource.ts":
/*!***************************************************!*\
  !*** ./datasource/tc_monitor/vpngw/datasource.ts ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/vpngw/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/constants */ "./datasource/common/constants.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_3__);
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();






var DCDatasource =
/** @class */
function (_super) {
  __extends(DCDatasource, _super);

  function DCDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = _query_def__WEBPACK_IMPORTED_MODULE_0__["namespace"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["VPNGWInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["VPNGWInvalidDemensions"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_0__["templateQueryIdMap"]; // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致

    _this.InstanceReqConfig = {
      service: 'vpc',
      action: 'DescribeVpnGateways',
      responseField: 'VpnGatewaySet'
    };
    return _this;
  }

  DCDatasource.prototype.getFilterDropdown = function (_a) {
    var field = _a.field,
        region = _a.region;

    if (field === 'zone') {
      var serviceInfo = Object(_common_constants__WEBPACK_IMPORTED_MODULE_2__["GetServiceAPIInfo"])(region, 'cvm');
      return this.doRequest({
        url: this.url + serviceInfo.path
      }, serviceInfo.service, {
        region: region,
        action: 'DescribeZones'
      }).then(function (response) {
        return lodash__WEBPACK_IMPORTED_MODULE_3___default.a.filter(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.map(response.ZoneSet || [], function (item) {
          return {
            text: item.ZoneName,
            value: item.Zone,
            ZoneState: item.ZoneState,
            Zone: item.Zone
          };
        }), function (item) {
          return item.ZoneState === 'AVAILABLE';
        });
      });
    }

    return [];
  };

  return DCDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (DCDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/vpngw/query.ts":
/*!**********************************************!*\
  !*** ./datasource/tc_monitor/vpngw/query.ts ***!
  \**********************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _base_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_base/query */ "./datasource/tc_monitor/_base/query.ts");
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/vpngw/query_def.ts");


Object(_base_query__WEBPACK_IMPORTED_MODULE_0__["default"])(_query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorName"], _query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorConfig"]);

/***/ }),

/***/ "./datasource/tc_monitor/vpngw/query_def.ts":
/*!**************************************************!*\
  !*** ./datasource/tc_monitor/vpngw/query_def.ts ***!
  \**************************************************/
/*! exports provided: default, VPNGWFilterFieldsDescriptor, templateQueryIdMap, VPNGWInstanceAliasList, VPNGWInvalidDemensions, namespace, queryEditorName, queryEditorConfig, VPNGWGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VPNGWFilterFieldsDescriptor", function() { return VPNGWFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VPNGWInstanceAliasList", function() { return VPNGWInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VPNGWInvalidDemensions", function() { return VPNGWInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorName", function() { return queryEditorName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorConfig", function() { return queryEditorConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VPNGWGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");

var namespace = 'QCE/VPNGW';
var queryEditorName = 'vpngwQuery';
var VPNGWInvalidDemensions = {
  vpnGwId: 'VpnGatewayId'
};
var VPNGWInstanceAliasList = ['VpnGatewayId', 'VpnGatewayName'];
var templateQueryIdMap = {
  instance: 'VpnGatewayId'
}; // select类型需要注意是{},multi后缀是[]

var VPNGWFilterFields = {
  Limit: 20,
  Offset: 0,
  'vpc-id': [],
  'vpn-gateway-id': [],
  'vpn-gateway-name': [],
  type: {},
  'public-ip-address': [],
  'renew-flag': {},
  zone: []
};
var VPNGWFilterFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputNumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputNumber',
  min: 1,
  max: 100
}, {
  key: 'vpc-id',
  enDescriptor: 'vpc-id',
  cnDescriptor: 'VPC实例ID',
  link: '',
  type: 'inputMulti'
}, {
  key: 'vpn-gateway-id',
  enDescriptor: 'vpn-gateway-id',
  cnDescriptor: 'VPN实例ID',
  link: '',
  type: 'inputMulti'
}, {
  key: 'vpn-gateway-name',
  enDescriptor: 'vpn-gateway-name',
  cnDescriptor: 'VPN实例名称',
  link: '',
  type: 'inputMulti'
}, {
  key: 'type',
  enDescriptor: 'type',
  cnDescriptor: 'VPN网关类型',
  link: '',
  type: 'select',
  multiple: true,
  list: [{
    text: 'IPSEC',
    value: 'IPSEC'
  }, {
    text: 'SSL',
    value: 'SSL'
  }]
}, {
  key: 'public-ip-address',
  enDescriptor: 'public-ip-address',
  cnDescriptor: '公网IP',
  link: '',
  type: 'inputMulti'
}, {
  key: 'renew-flag',
  enDescriptor: 'renew-flag',
  cnDescriptor: '网关续费类型',
  link: '',
  type: 'select',
  multiple: true,
  list: [{
    text: '手动续费',
    value: 'NOTIFY_AND_MANUAL_RENEW'
  }, {
    text: '自动续费',
    value: 'NOTIFY_AND_AUTO_RENEW'
  }]
}, {
  key: 'zone',
  enDescriptor: 'zone',
  cnDescriptor: 'VPN所在可用区',
  link: '',
  type: 'dropdownMulti'
}];
var queryEditorConfig = {
  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/17514',
  namespace: namespace,
  fieldDescriptor: VPNGWFilterFieldsDescriptor
};
var VPNGW_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'VpnGatewayId',
  queries: VPNGWFilterFields
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  return Object(_common_utils__WEBPACK_IMPORTED_MODULE_0__["instanceQueryParamsBaseParse"])(queries, true);
}

/* harmony default export */ __webpack_exports__["default"] = (VPNGW_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/vpnx/datasource.ts":
/*!**************************************************!*\
  !*** ./datasource/tc_monitor/vpnx/datasource.ts ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/vpnx/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();




var DCDatasource =
/** @class */
function (_super) {
  __extends(DCDatasource, _super);

  function DCDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = _query_def__WEBPACK_IMPORTED_MODULE_0__["namespace"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["VPNXInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["VPNXInvalidDemensions"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_0__["templateQueryIdMap"]; // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致

    _this.InstanceReqConfig = {
      service: 'vpc',
      action: 'DescribeVpnConnections',
      responseField: 'VpnConnectionSet'
    };
    return _this;
  }

  return DCDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (DCDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/vpnx/query.ts":
/*!*********************************************!*\
  !*** ./datasource/tc_monitor/vpnx/query.ts ***!
  \*********************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _base_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_base/query */ "./datasource/tc_monitor/_base/query.ts");
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/vpnx/query_def.ts");


Object(_base_query__WEBPACK_IMPORTED_MODULE_0__["default"])(_query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorName"], _query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorConfig"]);

/***/ }),

/***/ "./datasource/tc_monitor/vpnx/query_def.ts":
/*!*************************************************!*\
  !*** ./datasource/tc_monitor/vpnx/query_def.ts ***!
  \*************************************************/
/*! exports provided: default, VPNXFilterFieldsDescriptor, templateQueryIdMap, VPNXInstanceAliasList, VPNXInvalidDemensions, namespace, queryEditorName, queryEditorConfig, VPNXGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VPNXFilterFieldsDescriptor", function() { return VPNXFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VPNXInstanceAliasList", function() { return VPNXInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VPNXInvalidDemensions", function() { return VPNXInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorName", function() { return queryEditorName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorConfig", function() { return queryEditorConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VPNXGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");

var namespace = 'QCE/VPNX';
var queryEditorName = 'vpnxQuery';
var VPNXInvalidDemensions = {
  vpnConnId: 'VpnConnectionId'
};
var VPNXInstanceAliasList = ['VpnConnectionId', 'VpnConnectionName'];
var templateQueryIdMap = {
  instance: 'VpnConnectionId'
}; // select类型需要注意是{},multi后缀是[]

var VPNXFilterFields = {
  Limit: 20,
  Offset: 0,
  'vpc-id': [],
  'vpn-gateway-id': [],
  'customer-gateway-id': [],
  'vpn-connection-name': [],
  'vpn-connection-id': []
};
var VPNXFilterFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputNumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputNumber',
  min: 1,
  max: 100
}, {
  key: 'vpc-id',
  enDescriptor: 'vpc-id',
  cnDescriptor: 'VPC实例ID',
  link: '',
  type: 'inputMulti'
}, {
  key: 'vpn-gateway-id',
  enDescriptor: 'vpn-gateway-id',
  cnDescriptor: 'VPN实例ID',
  link: '',
  type: 'inputMulti'
}, {
  key: 'customer-gateway-id ',
  enDescriptor: 'customer-gateway-id ',
  cnDescriptor: '对端网关实例ID',
  link: '',
  type: 'inputMulti'
}, {
  key: 'vpn-connection-name',
  enDescriptor: 'vpn-connection-name',
  cnDescriptor: '通道名称',
  link: '',
  type: 'inputMulti'
}, {
  key: 'vpn-connection-id',
  enDescriptor: 'vpn-connection-id',
  cnDescriptor: '通道实例ID',
  link: '',
  type: 'inputMulti'
}]; // 各产品实例列表detail配置

var queryEditorConfig = {
  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/17515',
  namespace: namespace,
  fieldDescriptor: VPNXFilterFieldsDescriptor
};
var VPNX_STATE = {
  region: '',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'VpnConnectionId',
  queries: VPNXFilterFields
};

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  return Object(_common_utils__WEBPACK_IMPORTED_MODULE_0__["instanceQueryParamsBaseParse"])(queries, true);
}

/* harmony default export */ __webpack_exports__["default"] = (VPNX_STATE);


/***/ }),

/***/ "./datasource/tc_monitor/waf/datasource.ts":
/*!*************************************************!*\
  !*** ./datasource/tc_monitor/waf/datasource.ts ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/waf/query_def.ts");
/* harmony import */ var _base_datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_base/datasource */ "./datasource/tc_monitor/_base/datasource.ts");
/* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../locale */ "./locale/index.ts");
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};





var CDNDatasource =
/** @class */
function (_super) {
  __extends(CDNDatasource, _super);

  function CDNDatasource(instanceSettings, backendSrv, templateSrv) {
    var _this = _super.call(this, instanceSettings, backendSrv, templateSrv) || this;

    _this.Namespace = _query_def__WEBPACK_IMPORTED_MODULE_0__["namespace"];
    _this.InstanceAliasList = _query_def__WEBPACK_IMPORTED_MODULE_0__["WAFInstanceAliasList"];
    _this.InvalidDimensions = _query_def__WEBPACK_IMPORTED_MODULE_0__["WAFInvalidDemensions"];
    _this.templateQueryIdMap = _query_def__WEBPACK_IMPORTED_MODULE_0__["templateQueryIdMap"];
    _this.InstanceReqConfig = {
      // service: 'waf',
      action: 'DescribeDomains',
      responseField: 'Domains'
    };
    return _this;
  }

  CDNDatasource.prototype.getRegions = function () {
    return Promise.resolve(_query_def__WEBPACK_IMPORTED_MODULE_0__["regionSupported"].map(function (_a) {
      var value = _a.value;
      return {
        value: value,
        text: Object(_locale__WEBPACK_IMPORTED_MODULE_2__["t"])(value)
      };
    }));
  };

  CDNDatasource.prototype.metricFindQuery = function (query, regex) {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function (_a) {
        return [2
        /*return*/
        , _super.prototype.metricFindQuery.call(this, __assign(__assign({}, query), {
          region: 'ap-guangzhou'
        }), regex)];
      });
    });
  };

  return CDNDatasource;
}(_base_datasource__WEBPACK_IMPORTED_MODULE_1__["BaseDatasource"]);

/* harmony default export */ __webpack_exports__["default"] = (CDNDatasource);

/***/ }),

/***/ "./datasource/tc_monitor/waf/query.ts":
/*!********************************************!*\
  !*** ./datasource/tc_monitor/waf/query.ts ***!
  \********************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _base_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_base/query */ "./datasource/tc_monitor/_base/query.ts");
/* harmony import */ var _query_def__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query_def */ "./datasource/tc_monitor/waf/query_def.ts");


Object(_base_query__WEBPACK_IMPORTED_MODULE_0__["default"])(_query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorName"], _query_def__WEBPACK_IMPORTED_MODULE_1__["queryEditorConfig"]);

/***/ }),

/***/ "./datasource/tc_monitor/waf/query_def.ts":
/*!************************************************!*\
  !*** ./datasource/tc_monitor/waf/query_def.ts ***!
  \************************************************/
/*! exports provided: default, WAFFilterFieldsDescriptor, templateQueryIdMap, WAFInstanceAliasList, WAFInvalidDemensions, namespace, regionSupported, queryEditorName, queryEditorConfig, WAFGetInstanceQueryParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WAFFilterFieldsDescriptor", function() { return WAFFilterFieldsDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateQueryIdMap", function() { return templateQueryIdMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WAFInstanceAliasList", function() { return WAFInstanceAliasList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WAFInvalidDemensions", function() { return WAFInvalidDemensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "regionSupported", function() { return regionSupported; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorName", function() { return queryEditorName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryEditorConfig", function() { return queryEditorConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WAFGetInstanceQueryParams", function() { return GetInstanceQueryParams; });
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/utils */ "./datasource/common/utils.ts");

var namespace = 'QCE/WAF';
var queryEditorName = 'wafQuery';
var WAFFilterFields = {
  Limit: 20,
  Offset: 0,
  origin: [],
  domain: [],
  resourceId: [],
  status: {},
  serviceType: {},
  projectId: [],
  domainType: {},
  fullUrlCache: {},
  https: {},
  originPullProtocol: {},
  tagKey: []
};
var WAFFilterFieldsDescriptor = [{
  key: 'Offset',
  enDescriptor: 'Offset',
  cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',
  link: '',
  type: 'inputNumber',
  min: 0
}, {
  key: 'Limit',
  enDescriptor: 'Limit',
  cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',
  link: '',
  type: 'inputNumber',
  min: 1,
  max: 100
}, {
  key: 'origin',
  enDescriptor: 'origin',
  cnDescriptor: '主源站',
  link: '',
  type: 'inputMulti'
}, {
  key: 'domain',
  enDescriptor: 'domain',
  cnDescriptor: '域名',
  link: '',
  type: 'inputMulti'
}, {
  key: 'resourceId',
  enDescriptor: 'resourceId',
  cnDescriptor: '域名id',
  link: '',
  type: 'inputMulti'
}, {
  key: 'status',
  enDescriptor: 'status',
  cnDescriptor: '域名状态',
  link: '',
  type: 'select',
  list: [{
    text: 'online',
    value: 'online'
  }, {
    text: 'offline',
    value: 'offline'
  }, {
    text: 'processing',
    value: 'processing'
  }]
}, {
  key: 'serviceType',
  enDescriptor: 'serviceType',
  cnDescriptor: '业务类型',
  link: '',
  type: 'select',
  list: [{
    text: 'web',
    value: 'web'
  }, {
    text: 'download',
    value: 'download'
  }, {
    text: 'media',
    value: 'media'
  }]
}, {
  key: 'projectId',
  enDescriptor: 'projectId',
  cnDescriptor: '项目ID',
  link: '',
  type: 'inputNumberMulti'
}, {
  key: 'domainType',
  enDescriptor: 'domainType',
  cnDescriptor: '主源站类型',
  link: '',
  type: 'select',
  list: [{
    text: '自有源',
    value: 'cname'
  }, {
    text: 'cos接入',
    value: 'cos'
  }]
}, {
  key: 'fullUrlCache',
  enDescriptor: 'fullUrlCache',
  cnDescriptor: '全路径缓存',
  link: '',
  type: 'select',
  list: [{
    text: '打开',
    value: 'on'
  }, {
    text: '关闭',
    value: 'off'
  }]
}, {
  key: 'https',
  enDescriptor: 'https',
  cnDescriptor: '是否配置https',
  link: '',
  type: 'select',
  list: [{
    text: 'on',
    value: 'on'
  }, {
    text: 'off',
    value: 'off'
  }, {
    text: 'processing',
    value: 'processing'
  }]
}, {
  key: 'originPullProtocol',
  enDescriptor: 'originPullProtocol',
  cnDescriptor: '回源协议类型',
  link: '',
  type: 'select',
  list: [{
    text: 'http',
    value: 'http'
  }, {
    text: 'follow',
    value: 'follow'
  }, {
    text: 'https',
    value: 'https'
  }]
}, {
  key: 'tagKey',
  enDescriptor: 'tagKey',
  cnDescriptor: '标签键',
  link: '',
  type: 'inputMulti'
}]; // 各产品实例列表detail配置

var queryEditorConfig = {
  instanceDocUrl: 'https://cloud.tencent.com/document/api/228/41118',
  namespace: namespace,
  fieldDescriptor: WAFFilterFieldsDescriptor
};
var WAF_STATE = {
  region: 'ap-guangzhou',
  metricName: '',
  metricUnit: '',
  period: undefined,
  dimensionObject: null,
  instance: '',
  instanceAlias: 'Domain',
  queries: WAFFilterFields
};
var regionSupported = [{
  value: 'ap-beijing'
}, {
  value: 'ap-chengdu'
}, {
  value: 'ap-chongqing'
}, {
  value: 'ap-guangzhou'
}, {
  value: 'ap-hongkong'
}, {
  value: 'ap-nanjing'
}, {
  value: 'ap-shanghai'
}, {
  value: 'ap-shanghai-fsi'
}, {
  value: 'ap-seoul'
}, {
  value: 'ap-singapore'
}];

function GetInstanceQueryParams(queries) {
  if (queries === void 0) {
    queries = {};
  }

  return Object(_common_utils__WEBPACK_IMPORTED_MODULE_0__["instanceQueryParamsBaseParse"])(queries, true);
}

var WAFInstanceAliasList = ['Domain', 'ProjectId'];
var WAFInvalidDemensions = {
  projectId: 'ProjectId',
  domain: 'Domain'
};
var templateQueryIdMap = {
  instance: 'Domain'
};
/* harmony default export */ __webpack_exports__["default"] = (WAF_STATE);


/***/ }),

/***/ "./locale/en_US.ts":
/*!*************************!*\
  !*** ./locale/en_US.ts ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var en_US = {
  language: 'Language',
  enable_intranet_API_mode: 'Enable Intranet API Mode',
  cloud_database: 'Cloud Database',
  cloud_load_balancer: 'Cloud Load Balancer',
  virtual_private_cloud: 'Virtual Private Cloud',
  content_delivery_network: 'Content Delivery Network',
  message_queue: 'Message Queue',
  direct_connect: 'Direct Connect',
  cloud_physical_machine: 'Cloud Physical Machine',
  elastic_mapReduce: 'Elastic MapReduce',
  edge_computing_machine: 'Edge Computing Machine',
  // namespace
  RUM: 'Real User Monitoring(RUM)',
  CLS: 'Cloud Log Service(CLS)',
  CVM: 'Cloud Virtual Machine(CVM)',
  CDB: 'TencentDB for MySQL(CDB)',
  CMONGO: 'TencentDB for MongoDB(CMONGO)',
  POSTGRES: 'TencentDB for PostgreSQL(POSTGRES)',
  REDIS: 'TencentDB for Redis(REDIS)',
  REDIS_MEM: 'TencentDB for Redis(Memory Edition, 5-Second)(REDIS_MEM)',
  SQLSERVER: 'TencentDB for SQL Server(SQLSERVER)',
  CYNOSDB_MYSQL: 'TencentDB for CYNOSDB_MYSQL(CYNOSDB_MYSQL)',
  TCAPLUS: 'TencentDB for TcaplusDB(TCAPLUS)',
  TDMYSQL: 'TDSQL for MySQL(TDMYSQL)',
  PCX: 'Peering Connection(PCX)',
  BWP: 'Bandwidth Packet(BWP)',
  NAT_GATEWAY: 'NAT Gateway(NAT_GATEWAY)',
  VPNGW: 'VPN Gateway(VPNGW)',
  VPNX: 'VPN Tunnel(VPNX)',
  DCG: 'Direct Connect Gateway(DCG)',
  CEIP_SUMMARY: 'Anycast EIP(CEIP_SUMMARY)',
  VPC_NET_DETECT: 'Network Detection(VPC_NET_DETECT)',
  VBC: 'Cloud Connect Network(VBC)',
  LB: 'Elastic IP(LB)',
  LB_PUBLIC: 'Public Network CLB(LB_PUBLIC)',
  LB_PRIVATE: 'Private Network CLB Layer-4 Protocol(LB_PRIVATE)',
  LOADBALANCE: 'Private Network CLB Layer-7 Protocol(LOADBALANCE)',
  CDN: 'Chinese Mainland Domain(CDN)',
  CDN_LOG_DATA: 'Province(CDN_LOG_DATA)',
  OV_CDN: 'Overseas Domain(OV_CDN)',
  SCF_V2: 'Serverless Cloud Function(SCF)',
  CFS: 'Cloud File Storage(CFS)',
  COS: 'Cloud Object Storage(COS)',
  CKAFKA: 'Message Queue CKafka(CKAFKA)',
  CMQ: 'Message Queue for Queue Service(CMQ)',
  CMQTOPIC: 'Message Queue for Topic Subscription(CMQTOPIC)',
  TDMQ: 'Tencent Distributed Message Queue for Pulsar(TDMQ)',
  TDMQ_ROCKETMQ: 'Tencent Distributed Message Queue for RocketMQ(ROCKETMQ)',
  TDMQ_RABBITMQ: 'Tencent Distributed Message Queue for RabbitMQ(RABBITMQ)',
  DCX: 'Direct Connect for Dedicated Tunnel(DCX)',
  DC: 'Direct Connect for Connection(DC)',
  CPM: 'Cloud Physical Machine(CPM)',
  BM_PCX: 'Cloud Physical Machine for Peering Connection(BM_PCX)',
  BM_LB: 'Cloud Physical Machine for Public Network CLB(BM_LB)',
  BM_INTRA_LB: 'Cloud Physical Machine for Private Network CLB(BM_INTRA_LB)',
  CES: 'Elasticsearch Service(CES)',
  BLOCK_STORAGE: 'Cloud Block Storage(BLOCK_STORAGE)',
  APIGATEWAY: 'API Gateway(APIGATEWAY)',
  QAAP: 'Global Application Acceleration Platform(GAAP)',
  ECM: 'Edge Computing Machine for Computation and Networking(ECM)',
  ECM_BLOCK_STORAGE: 'Edge Computing Machine for Block Storage(ECM_BLOCK_STORAGE)',
  ECM_LB: 'Edge Computing Machine for Layer-4 CLB(ECM_LB)',
  GSE: 'Game Server Elastic-scaling(GSE)',
  TKE: 'Tencent Kubernetes Engine(TKE)',
  ECDN: 'Enterprise Content Delivery Network(ECDN)',
  WAF: 'Web Application Firewall(WAF)',
  // others
  multi_scene: 'Multi-Scene',
  lite: 'Lite',
  cloud_monitor: 'Cloud Monitor',
  cloud_log_service: 'Cloud Log Service',
  real_user_monitoring: 'Real User Monitoring',
  apm_monitoring: 'Application Monitoring',
  region: 'Region',
  log_topic: 'Log Topic',
  syntax_rule: 'Syntax Rule',
  max_result_num: 'Maximum result number',
  search_statement: 'Search Statement',
  time_unit: 'Time unit',
  seconds: 'seconds',
  search_description: 'Search for instances according to specific query conditions, and pull the first 20 instances by default',
  // region
  'ap-guangzhou': 'South China(Guangzhou)',
  'ap-shenzhen-fsi': 'South China(Shenzhen Finance)',
  'ap-guangzhou-open': 'South China(Guangzhou OPEN)',
  'ap-shenzhen': 'South China(Shenzhen)',
  'ap-qingyuan': 'South China(Qingyuan)',
  'ap-shanghai': 'East China(Shanghai)',
  'ap-shanghai-fsi': 'East China(Shanghai Finance)',
  'ap-jinan-ec': 'East China(Jinan)',
  'ap-hangzhou-ec': 'East China(Hangzhou)',
  'ap-nanjing': 'East China(Nanjing)',
  'ap-fuzhou-ec': 'East China(Fuzhou)',
  'ap-hefei-ec': 'East China(Hefei)',
  'ap-beijing': 'North China region(Beijing)',
  'ap-tianjin': 'North China region(Tianjin)',
  'ap-beijing-fsi': 'North China region(Beijing Finance)',
  'ap-shijiazhuang-ec': 'North China region(Shijiazhuang)',
  'ap-wuhan-ec': 'Central China(Wuhan)',
  'ap-changsha-ec': 'Central China(Changsha)',
  'ap-zhengzhou-ec': 'Central China(Zhengzhou)',
  'ap-chengdu': 'Southwest China(Chengdu)',
  'ap-chongqing': 'Southwest China(Chongqing)',
  'ap-xian-ec': "Northwest region(Xi'an)",
  'ap-shenyang-ec': 'Northeast China(Shenyang)',
  'ap-taipei': 'Hong Kong, Macau and Taiwan (China)(Taipei, China)',
  'ap-hongkong': 'Hong Kong, Macau and Taiwan (China)(Hong Kong, China)',
  'ap-seoul': 'Northeast Asia(Seoul)',
  'ap-tokyo': 'Northeast Asia(Tokyo)',
  'ap-singapore': 'Southeast Asia(Singapore)',
  'ap-bangkok': 'Southeast Asia(Bangkok)',
  'ap-jakarta': 'Southeast Asia(Jakarta)',
  'na-siliconvalley': 'US West(Silicon Valley)',
  'eu-frankfurt': 'Europe(Frankfurt)',
  'eu-moscow': 'Europe(Northeastern Europe)',
  'ap-mumbai': 'South Asia(Mumbai)',
  'na-ashburn': 'US East(Virginia)',
  'sa-saopaulo': 'South America(São Paulo)',
  'na-toronto': 'North America(Toronto)'
};
/* harmony default export */ __webpack_exports__["default"] = (en_US);

/***/ }),

/***/ "./locale/index.ts":
/*!*************************!*\
  !*** ./locale/index.ts ***!
  \*************************/
/*! exports provided: Language, t, setLanguage, getLanguage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Language", function() { return Language; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "t", function() { return t; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setLanguage", function() { return setLanguage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLanguage", function() { return getLanguage; });
/* harmony import */ var _zh_CN__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./zh_CN */ "./locale/zh_CN.ts");
/* harmony import */ var _en_US__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./en_US */ "./locale/en_US.ts");


var locale_language = 'zh-CN';
var Language;

(function (Language) {
  Language["Chinese"] = "zh-CN";
  Language["English"] = "en-US";
})(Language || (Language = {}));

var t = function t(key) {
  if (locale_language === Language.Chinese) {
    return _zh_CN__WEBPACK_IMPORTED_MODULE_0__["default"][key];
  }

  return _en_US__WEBPACK_IMPORTED_MODULE_1__["default"][key];
};
var setLanguage = function setLanguage(language) {
  locale_language = language;
};
var getLanguage = function getLanguage() {
  return locale_language;
};

/***/ }),

/***/ "./locale/zh_CN.ts":
/*!*************************!*\
  !*** ./locale/zh_CN.ts ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var zh_CN = {
  language: '语言',
  enable_intranet_API_mode: '开启内网API模式',
  cloud_database: '云数据库',
  cloud_load_balancer: '负载均衡',
  virtual_private_cloud: '私有网络',
  content_delivery_network: '内容分发网络',
  message_queue: '消息队列',
  direct_connect: '专线接入',
  cloud_physical_machine: '黑石物理服务器',
  elastic_mapReduce: '弹性 MapReduce',
  edge_computing_machine: '边缘计算机器',
  // namespace
  RUM: '前端性能监控(RUM)',
  APM: '应用性能监控(APM)',
  CLS: '日志服务(CLS)',
  CVM: '云服务器(CVM)',
  CDB: '云数据库 MySQL(CDB)',
  CMONGO: '云数据库 MongoDB(CMONGO)',
  POSTGRES: '云数据库 PostgreSQL(POSTGRES)',
  REDIS: '云数据库 Redis(REDIS)',
  REDIS_MEM: '云数据库 Redis内存版(5s)(REDIS_MEM)',
  SQLSERVER: '云数据库 SQL Server(SQLSERVER)',
  CYNOSDB_MYSQL: '云数据库 CYNOSDB_MYSQL(CYNOSDB_MYSQL)',
  TCAPLUS: '云数据库 TcaplusDB(TCAPLUS)',
  TDMYSQL: '分布式数据库 TDSQL MySQL(TDMYSQL)',
  PCX: '私有网络-对等连接(PCX)',
  BWP: '私有网络-带宽包(BWP)',
  NAT_GATEWAY: '私有网络-NAT 网关(NAT_GATEWAY)',
  VPNGW: '私有网络-VPN 网关(VPNGW)',
  VPNX: '私有网络-VPN 通道(VPNX)',
  DCG: '私有网络-专线网关(DCG)',
  CEIP_SUMMARY: '私有网络-Anycast 弹性公网IP(CEIP_SUMMARY)',
  VPC_NET_DETECT: '私有网络-网络探测(VPC_NET_DETECT)',
  VBC: '私有网络-云联网(VBC)',
  LB: '私有网络-弹性公网IP(LB)',
  LB_PUBLIC: '公网负载均衡监控指标(LB_PUBLIC)',
  LB_PRIVATE: '内网负载均衡四层协议监控指标(LB_PRIVATE)',
  LOADBALANCE: '内网负载均衡七层协议监控指标(LOADBALANCE)',
  CDN: '国内域名(CDN)',
  CDN_LOG_DATA: '省份域名(CDN_LOG_DATA)',
  OV_CDN: '国外域名(OV_CDN)',
  SCF_V2: '云函数(SCF)',
  CFS: '文件存储(CFS)',
  COS: '对象存储(COS)',
  CKAFKA: '消息队列 CKafka(CKAFKA)',
  CMQ: '消息队列-队列服务监控(CMQ)',
  CMQTOPIC: '消息队列-主题订阅监控(CMQTOPIC)',
  TDMQ: '消息队列 Pulsar 版(TDMQ)',
  TDMQ_ROCKETMQ: '消息队列 RocketMQ 版(ROCKETMQ)',
  TDMQ_RABBITMQ: '消息队列 RabbitMQ 版(RABBITMQ)',
  DCX: '专线接入-专用通道(DCX)',
  DC: '专线接入-物理专线(DC)',
  CPM: '黑石物理服务器(CPM)',
  BM_PCX: '黑石对等连接(BM_PCX)',
  BM_LB: '黑石外网负载均衡(BM_LB)',
  BM_INTRA_LB: '黑石内网负载均衡(BM_INTRA_LB)',
  CES: 'Elasticsearch指标(CES)',
  BLOCK_STORAGE: '云硬盘(BLOCK_STORAGE)',
  APIGATEWAY: 'API 网关(APIGATEWAY)',
  QAAP: '全球应用加速(GAAP)',
  ECM: '边缘计算和网络监控(ECM)',
  ECM_BLOCK_STORAGE: '边缘计算存储监控(ECM_BLOCK_STORAGE)',
  ECM_LB: '边缘计算负载均衡(ECM_LB)',
  GSE: '游戏服务器伸缩(GSE)',
  TKE: '容器服务(TKE)',
  ECDN: '全站加速网络(ECDN)',
  WAF: 'Web 应用防火墙(WAF)',
  // others
  multi_scene: '多场景版',
  lite: '精简版',
  cloud_monitor: '云监控',
  cloud_log_service: '日志服务',
  real_user_monitoring: '前端性能监控',
  apm_monitoring: '应用性能监控',
  region: '地域',
  log_topic: '日志主题',
  syntax_rule: '语法规则',
  max_result_num: '最大结果条数',
  search_statement: '检索语句',
  time_unit: 'Time unit',
  seconds: 'seconds',
  search_description: '按照具体的查询条件搜索实例，默认拉取前 20 条实例',
  // region
  'ap-guangzhou': '华南地区(广州)',
  'ap-shenzhen-fsi': '华南地区(深圳金融)',
  'ap-guangzhou-open': '华南地区(广州OPEN)',
  'ap-shenzhen': '华南地区(深圳)',
  'ap-qingyuan': '华南地区(清远)',
  'ap-shanghai': '华东地区(上海)',
  'ap-shanghai-fsi': '华东地区(上海金融)',
  'ap-jinan-ec': '华东地区(济南)',
  'ap-hangzhou-ec': '华东地区(杭州)',
  'ap-nanjing': '华东地区(南京)',
  'ap-fuzhou-ec': '华东地区(福州)',
  'ap-hefei-ec': '华东地区(合肥)',
  'ap-beijing': '华北地区(北京)',
  'ap-tianjin': '华北地区(天津)',
  'ap-beijing-fsi': '华北地区(北京金融)',
  'ap-shijiazhuang-ec': '华北地区(石家庄)',
  'ap-wuhan-ec': '华中地区(武汉)',
  'ap-changsha-ec': '华中地区(长沙)',
  'ap-zhengzhou-ec': '华中地区(郑州)',
  'ap-chengdu': '西南地区(成都)',
  'ap-chongqing': '西南地区(重庆)',
  'ap-xian-ec': '西北地区(西安)',
  'ap-shenyang-ec': '东北地区(沈阳)',
  'ap-taipei': '港澳台地区(中国台北)',
  'ap-hongkong': '港澳台地区(中国香港)',
  'ap-seoul': '亚太东北(首尔)',
  'ap-tokyo': '亚太东北(东京)',
  'ap-singapore': '亚太东南(新加坡)',
  'ap-bangkok': '亚太东南(曼谷)',
  'ap-jakarta': '亚太东南(雅加达)',
  'na-siliconvalley': '美国西部(硅谷)',
  'eu-frankfurt': '欧洲地区(法兰克福)',
  'eu-moscow': '欧洲地区(莫斯科)',
  'ap-mumbai': '亚太南部(孟买)',
  'na-ashburn': '美国东部(弗吉尼亚)',
  'sa-saopaulo': '南美地区(圣保罗)',
  'na-toronto': '北美地区(多伦多)'
};
/* harmony default export */ __webpack_exports__["default"] = (zh_CN);

/***/ }),

/***/ "@grafana/data":
/*!********************************!*\
  !*** external "@grafana/data" ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE__grafana_data__;

/***/ }),

/***/ "@grafana/runtime":
/*!***********************************!*\
  !*** external "@grafana/runtime" ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE__grafana_runtime__;

/***/ }),

/***/ "grafana/app/core/core_module":
/*!***************************************!*\
  !*** external "app/core/core_module" ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_grafana_app_core_core_module__;

/***/ }),

/***/ "lodash":
/*!*************************!*\
  !*** external "lodash" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_lodash__;

/***/ }),

/***/ "moment":
/*!*************************!*\
  !*** external "moment" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_moment__;

/***/ })

/******/ })});;
//# sourceMappingURL=config.js.map