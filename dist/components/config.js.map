{"version":3,"sources":["webpack://TencentCloudMonitorGrafanaApp/webpack/bootstrap","webpack://TencentCloudMonitorGrafanaApp/external \"lodash\"","webpack://TencentCloudMonitorGrafanaApp/./locale/zh_CN.ts","webpack://TencentCloudMonitorGrafanaApp/./locale/en_US.ts","webpack://TencentCloudMonitorGrafanaApp/./locale/index.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/common/sign.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/common/signV2.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/common/constants.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/_base/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/common/utils.ts","webpack://TencentCloudMonitorGrafanaApp/external \"app/core/core_module\"","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/_base/query.ts","webpack://TencentCloudMonitorGrafanaApp/external \"@grafana/data\"","webpack://TencentCloudMonitorGrafanaApp/./datasource/common/indexedDB.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/common/datasourceStorage.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ckafka/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/clb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tdmq/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/gse/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcdb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/redis_mem/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tdmq_rabbitmq/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tdmq_rocketmq/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/index.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm_block_storage/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/external \"@grafana/runtime\"","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/apigateway/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/mr/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/v_clb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cynosdb_mysql/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/scf/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cls/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/sqlserver/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bmIntraLb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bm_lb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bm_pcx/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cbs/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdn_province/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ceip_summary/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cmq_topic/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cpm/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecdn/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/postgresql/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpc_net_detect/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/waf/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ces/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dc/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcg/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcx/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm_lb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/mongodb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/qaap/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tcaplus/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vbc/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpngw/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpnx/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/lighthouse/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cfs/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cmq/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cvm/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/pcx/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/redis/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tsf/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bwp/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdn/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/lb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/nat_gateway/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ov_cdn/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/external \"moment\"","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tke/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/apigateway/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bmIntraLb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bm_lb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bm_pcx/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bwp/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cbs/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdn/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdn_province/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ceip_summary/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ces/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cfs/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ckafka/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/clb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cls/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cmq/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cmq_topic/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cos/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cpm/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cvm/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cynosdb_mysql/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dc/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcdb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcg/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcx/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecdn/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm_block_storage/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm_lb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/gse/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/lb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/lighthouse/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/mongodb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/mr/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/nat_gateway/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ov_cdn/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/pcx/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/postgresql/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/qaap/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/redis/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/redis_mem/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/scf/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/sqlserver/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tcaplus/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tdmq/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tdmq_rabbitmq/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tdmq_rocketmq/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tke/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tsf/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/v_clb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vbc/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpc_net_detect/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpngw/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpnx/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/waf/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/apigateway/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bmIntraLb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bm_lb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bm_pcx/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bwp/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cbs/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdn/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdn_province/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ceip_summary/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ces/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cfs/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ckafka/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/clb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cls/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cmq/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cmq_topic/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cos/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cpm/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cvm/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cynosdb_mysql/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dc/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcdb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcg/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcx/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecdn/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm_block_storage/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm_lb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/gse/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/lb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/lighthouse/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/mongodb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/mr/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/nat_gateway/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ov_cdn/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/pcx/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/postgresql/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/qaap/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/redis/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/redis_mem/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/scf/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/sqlserver/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tcaplus/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tdmq/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tdmq_rabbitmq/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tdmq_rocketmq/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tke/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tsf/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/v_clb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vbc/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpc_net_detect/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpngw/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpnx/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/waf/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor sync ^.*$","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/MonitorDatasource.ts","webpack://TencentCloudMonitorGrafanaApp/../node_modules/qs/lib/utils.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/qs/lib/formats.js","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/_base/query_filter.ts","webpack://TencentCloudMonitorGrafanaApp/../node_modules/qs/lib/index.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/qs/lib/stringify.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/qs/lib/parse.js","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor sync ^\\.\\/[a-zA-Z]\\w+\\/(datasource)|(query(_def)","webpack://TencentCloudMonitorGrafanaApp/./components/config.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","language","enable_intranet_API_mode","cloud_database","cloud_load_balancer","virtual_private_cloud","content_delivery_network","message_queue","direct_connect","cloud_physical_machine","elastic_mapReduce","edge_computing_machine","RUM","APM","CLS","CVM","CDB","CMONGO","POSTGRES","REDIS","REDIS_MEM","SQLSERVER","CYNOSDB_MYSQL","TCAPLUS","TDMYSQL","PCX","BWP","NAT_GATEWAY","VPNGW","VPNX","DCG","CEIP_SUMMARY","VPC_NET_DETECT","VBC","LB","LB_PUBLIC","LB_PRIVATE","LOADBALANCE","CDN","CDN_LOG_DATA","OV_CDN","SCF_V2","CFS","COS","CKAFKA","CMQ","CMQTOPIC","TDMQ","TDMQ_ROCKETMQ","TDMQ_RABBITMQ","DCX","DC","CPM","BM_PCX","BM_LB","BM_INTRA_LB","CES","BLOCK_STORAGE","APIGATEWAY","QAAP","ECM","ECM_BLOCK_STORAGE","ECM_LB","GSE","TKE","ECDN","WAF","multi_scene","lite","cloud_monitor","cloud_log_service","real_user_monitoring","apm_monitoring","region","log_topic","syntax_rule","max_result_num","search_statement","time_unit","seconds","search_description","Language","locale_language","Chinese","setLanguage","getLanguage","options","secretId","service","action","host","version","payload","backendSrv","datasourceId","this","JSON","stringify","nowDate","utc","timestamp","unix","date","format","getHeader","getResourceHeader","res","datasourceRequest","url","method","headers","data","Host","Service","Version","Action","Region","Timestamp","Method","Uri","Query","Body","Headers","resp","authorization","token","intranet","grafanaVersion","window","grafanaBootData","settings","buildInfo","Authorization","toString","defaults","path","generateQueryString","getResourceQueryString","assign","secretKey","querystring","queryString","TcDataSourceId","id","FINACE_REGIONS","SERVICES_API_INFO","api","monitor","cls","cvm","cdb","pcx","vpc","mongodb","clb","postgres","cdn","redis","scf","cfs","ckafka","dc","cynosdb","sqlserver","bm","bmeip","bmvpc","bmlb","es","emr","cmq","cbs","tcaplusdb","dcdb","apigateway","tdmq","tdmq_rabbitmq","tdmq_rocketmq","gaap","ecm","gse","lighthouse","tsf","rum","tke","ecdn","waf","apm","FINACE_HOST","GetServiceAPIInfo","indexOf","find","__","getHostAndPath","GetServiceFromNamespace","namespace","ParseMetricQuery","query","result","queries","split","forEach","item","str","trim","val","parse","e","toLower","ReplaceVariable","templateSrv","scopedVars","field","multiple","varname","varFlag","regResult1","String","match","regResult2","parseVariableFormat","replaceVar","replace","error","isArray","GetDimensions","obj","isEmpty","dimensions","Value","undefined","push","Name","ParseQueryResult","response","instances","timeshift","instanceList","cloneDeep","dataPoints","map","dataPoint","instanceAliasValue","length","isInstanceMatch","_InstanceAliasValue","splice","target","MetricName","datapoints","parseDataPoint","timestamps","values","index","instance","isVariable","GetRequestParams","signObj","signParams","pick","headerSigned","GetRequestParamsV2","sign","SliceLength","total","len","num","Math","ceil","Offset","CoreApp","IS_DEVELOPMENT_ENVIRONMENT","instanceSettings","instanceListCache","extraMetricDims","checkKeys","MetricReqConfig","extrasAlias","queryMonitorExtraConfg","CandiateDimensions","jsonData","Namespace","getOtherAlias","alias","extra","extraAlia","getVariable","getAliasValue","Array","join","formatVarDisplay","displayTpl","instanceAlias","a","b","InstanceAliasList","includes","metricFindQuery","regex","display","instancealias","templateQueryIdMap","isObject","isString","getRegions","getVariableInstances","flatMap","insAlias","text","setInstance","getInstance","instanceCache","fetchMetricData","Promise","resolve","dimensionsFormat","dimKeys","ins","dimensionObject","keyTmp","invalidDim","InvalidDimensions","getInvalidDimensions","extraDimValue","dim_KeyInStorage","dim_KeyInTarget","dim_KeyInMap","dim_KeyInIns","extraSourceMap","getExtraStorage","extraStorage","isStringOrNumber","isNumber","otherAlias","getDimensionsVal","Ekey","tt","getOwnDimension","dimVal","filter","targets","hide","metricName","reduce","prev","cloneTarget","concat","inst","getDefaultInsObj","insInReq","keys","dimResult","Dimensions","StartTime","range","from","subtract","EndTime","to","Period","period","Instances","getMonitorData","all","then","responses","flatten","getInstanceReqConfig","selfIns","metric","rs","valStr","params","serviceInfo","doRequest","RegionSet","RegionName","RegionState","getMetrics","MetricSet","resFilterFn","resultFilter","getInstances","InstanceReqConfig","interceptor","Limit","Edition","request","Error","TotalCount","TotalCnt","TotalNumber","param","isValidConfigField","testDatasource","cvmErr","monitorErr","serviceErr","cvmAuthFail","monitorAuthFail","serviceAuthFail","messages","message","compact","uniq","status","title","statusText","code","getFieldsValue","fields","fetchAllFactory","fetcher","_params","omit","Result","firstLists","delta","batchCount","pmList","fill","_","isOffsetPage","acc","cur","lists","list","instanceQueryParamsBaseParse","isFilter","Values","slice","Filters","getNamesapceFromService","serviceName","serviceGroupBy","services","label","groupName","existedGroup","items","isTargetEqual","newTargetString","oldTargetString","newTarget","oldTarget","getTimeShiftInMs","timeShift","parts","exec","amount","parseInt","__WEBPACK_EXTERNAL_MODULE__6__","config","detailConfig","QueryCtrl","newQueryIns","$scope","$rootScope","getDropdown","datasource","getFilterDropdown","directive","template","controller","restrict","scope","showDetail","getDropdownOptions","onChange","__WEBPACK_EXTERNAL_MODULE__8__","store","promisify","type","reject","onsuccess","event","returnMap","msg","onerror","props","initDB","indexedDB","webkitIndexedDB","mozIndexedDB","msIndexedDB","open","onupgradeneeded","db","objectStoreNames","contains","createObjectStore","keyPath","openDB","insertData","storeName","transaction","objectStore","add","oncomplete","addData","isCover","getData","oldData","getObjectStore","newData","requestUpdate","put","seviceName","getAllData","getAll","insKey","cacheWay","setStorage","getStorage","setExtraStorage","EValue","serviceKey","storage","CKAFKAQueryDescriptor","enDescriptor","cnDescriptor","link","min","max","CKAFKA_STATE","metricUnit","topicId","topicName","consumerGroup","partition","Status","InstanceId","SearchWord","TagKey","GetInstanceQueryParams","CKAFKAInstanceAliasList","CKAFKATopicAliasList","CKAFKAInvalidDemensions","Proxy","prop","toLocaleLowerCase","keyInStorage","TopicList","GroupList","PartitionList","TopicId","TopicName","GroupName","PartitionId","queryEditorName","LOADBALANCEFieldsDescriptor","queryEditorConfig","instanceDocUrl","fieldDescriptor","LOADBALANCE_STATE","Port","Protocol","listener","servers","serverPort","LoadBalancerIds","Forward","LoadBalancerName","Domain","LoadBalancerVips","BackendPublicIps","BackendPrivateIps","ProjectId","WithRs","VpcId","SecurityGroup","MasterZone","OrderBy","OrderType","LOADBALANCEListenerAliasList","LOADBALANCEServerAliasList","LOADBALANCEVALIDDIMENSIONS","vip","loadBalancerPort","protocol","lanIp","port","CANDIATEDIMENSIONS","PrivateIpAddresses","ServerPort","TDMQInvalidDemensions","tenantId","tenant","environmentId","TDMQInstanceAliasList","TDMQFilterFieldsDescriptor","CDNPROVINCE_STATE","regionSupported","modifyDimensons","metricItem","metricTmp","EnvironmentId","fleetId","GSEInvalidDemensions","instanceid","fleetid","queuename","GSEInstanceAliasList","FleetId","fleet","queue","GSEFilterFieldsDescriptor","GSE_STATE","v","DCDBInvalidDemensions","nodeid","shardid","ShardId","DCDBInstanceAliasList","NodeId","ShardInstanceId","DCDBFilterFieldsDescriptor","DCDB_STATE","InstanceIds","SearchName","SearchKey","ProjectIds","SubnetId","OrderByType","ExclusterType","ExclusterIds","FilterInstanceType","modifyMetricConf","IsFilterVpc","IsFilterExcluster","RedisMemFieldsDescriptor","REDISMEM_STATE","VpcIds","SubnetIds","InstanceName","UniqVpcIds","UniqSubnetIds","TypeVersion","EngineName","AutoRenew","BillingMode","Type","rnodeid","pnodeid","REDISMEMInstanceAliasList","RedisMemInvalidDemensions","NodeType","node","TDMQRABBITMQInstanceAliasList","TDMQ_STATE","NodeName","group","TDMQROCKETMQInstanceAliasList","instanceIdsChecked","filtersChecked","ClusterIdList","includeVip","NamespaceId","SERVICES","href","hideRegion","Datasources","InitStates","hackModuleName","postgresql","mr","filePath","moduleName","fileName","prefix","toUpperCase","getParams","ECMBLOCKSTORAGEInvalidDemensions","uuid","diskId","ECMBLOCKSTORAGEInstanceAliasList","ECMBLOCKSTORAGEFilterFieldsDescriptor","ECMBLOCKSTORAGE_STATE","DiskId","__WEBPACK_EXTERNAL_MODULE__22__","APIGATEWAYInvalidDemensions","serviceId","environmentName","apiid","apiId","APIGATEWAYInstanceAliasList","environmentList","EnvironmentName","APIGATEWAYFilterFieldsDescriptor","APIGATEWAY_STATE","ServiceId","ServiceName","NotUsagePlanId","Environment","IpVersion","InstanceQueryDescriptor","InvalidDemensions","k","receiver","startsWith","Reflect","has","propKey","Ip","nodeIP","DisplayStrategy","Order","OrderField","Asc","VCLBInvalidDemensions","VCLBInstanceAliasList","VCLBFilterFieldsDescriptor","VCLB_STATE","clbNamespaceMap","public","private","cynosdbMysqlFilterFieldsDescriptor","CYNOSDB_STATE","DbType","CYNOSDBMYSQLInstanceAliasList","CYNOSDBInvalidDemensions","instanceId","SCFQueryDescriptor","SCF_STATE","Description","SCFInstanceAliasList","SCFInvalidDemensions","functionName","SCFDefaultDimensionList","CLSInvalidDemensions","CLSInstanceAliasList","CLSFilterFieldsDescriptor","CLS_STATE","uin","logsetName","logsetId","tagKey","storageType","SQLSERVERInvalidDemensions","resourceId","SQLSERVERInstanceAliasList","SQLSERVERNETFilterFieldsDescriptor","SQLSERVER_STATE","InstanceIdSet","PayMode","VipSet","InstanceNameSet","VersionSet","Zone","BMINTRALBInvalidDemensions","vpcId","BMINTRALBInstanceAliasList","BMINTRALBFilterFieldsDescriptor","BMINTRALB_STATE","BMLBValidMetricsT","isValidMetric","validMetrics","toUpper","CPMInvalidDemensions","BMLBInstanceAliasList","CPMFilterFieldsDescriptor","CPM_STATE","BMPCXInvalidDemensions","peeringConnectionId","BMPCXInstanceAliasList","BMPCXFilterFieldsDescriptor","BMPCX_STATE","VpcPeerConnectionIds","CBSInvalidDemensions","diskname","unInstanceId","CBSInstanceAliasList","CBSFilterFieldsDescriptor","CBS_STATE","DiskIds","ReturnBindAutoSnapshotPolicy","metricObj","dimension","CDNPROVINCEInvalidDemensions","domain","projectid","province","appid","CDNPROVINCEInstanceAliasList","CDNPROVINCEFilterFieldsDescriptor","isp","district","origin","serviceType","projectId","domainType","fullUrlCache","https","originPullProtocol","CEIPInvalidDemensions","eip","CEIPSUMMARYInstanceAliasList","CEIPFilterFieldsDescriptor","CEIP_STATE","subscription","subscriptionId","CPMInstanceAliasList","DeviceClassCode","WanIps","LanIps","Alias","VagueIp","AutoRenewFlag","DeviceType","IsLuckyDevice","ECDNInstanceAliasList","ECDNInvalidDemensions","ECDN_STATE","disable","area","ECDNFilterFieldsDescriptor","_queries","Fuzzy","ECMInvalidDemensions","ECMInstanceAliasList","ECMFilterFieldsDescriptor","ECM_STATE","zone","PostgresFieldsDescriptor","POSTGRESInstanceAliasList","POSTGRES_STATE","PostgreInvalidDemensions","uid","VPCNETInvalidDemensions","netdetectid","netDetectId","VPCNETDETECTInstanceAliasList","VPCNETFilterFieldsDescriptor","VPCNET_STATE","WAFFilterFieldsDescriptor","WAF_STATE","WAFInstanceAliasList","WAFInvalidDemensions","CDBFieldsDescriptor","CDB_STATE","InstanceTypes","Vips","SecurityGroupId","PayTypes","InstanceNames","TaskStatus","EngineVersions","ZoneIds","CdbErrors","OrderDirection","InitFlag","CDBInstanceAliasList","CDBInvalidDemensions","insttype","CESInvalidDemensions","uInstanceId","CESInstanceAliasList","CESFilterFieldsDescriptor","CES_STATE","OrderByKey","IpList","DCFilterFieldsDescriptor","DC_STATE","DirectConnectIds","DCInstanceAliasList","DCInvalidDemensions","directConnectId","directconnectid","DCGInvalidDemensions","directConnectGatewayId","DCGInstanceAliasList","DCGFilterFieldsDescriptor","DCG_STATE","DCXFilterFieldsDescriptor","DCX_STATE","DCXInstanceAliasList","DCXInvalidDemensions","directconnectconnid","directConnectConnId","ECMLBInvalidDemensions","ECMLBInstanceAliasList","ECMLBFilterFieldsDescriptor","MONGODBFieldsDescriptor","MONGODB_STATE","InstanceType","ClusterType","MONGODBInstanceAliasList","MONGODBInvalidDemensions","replica","Replica","Node","QAAPInvalidDemensions","channelId","QAAPInstanceAliasList","QAAPFilterFieldsDescriptor","QAAP_STATE","AccessRegion","RealServerRegion","GroupId","TCAPLUSInvalidDemensions","TCAPLUSInstanceAliasList","TCAPLUSFilterFieldsDescriptor","TCAPLUS_STATE","ClusterId","TableGroupIds","TableName","TableInstanceId","TableIdlType","TableType","ListElementNum","ReservedVolume","ReservedReadQps","ReservedWriteQps","Memo","FileName","FileExtType","FileSize","FileContent","SelectedTables","regonsMap","VBCInvalidDemensions","VBCInstanceAliasList","VBCFilterFieldsDescriptor","VBC_STATE","DRegion","SRegion","state","VPNGWInvalidDemensions","vpnGwId","VPNGWInstanceAliasList","VPNGWFilterFieldsDescriptor","VPNGW_STATE","VPNXInvalidDemensions","vpnConnId","VPNXInstanceAliasList","VPNXFilterFieldsDescriptor","VPNX_STATE","LighthouseFilterFieldsDescriptor","LIGHTHOUSE_STATE","LIGHTHOUSEInstanceAliasList","LighthouseInvalidDemensions","CFSQueryDescriptor","CFS_STATE","FileSystemId","CFSInstanceAliasList","CFSInvalidDemensions","queueId","queueName","QueueName","CVMFilterFieldsDescriptor","CVM_STATE","CVMInstanceAliasList","CVMValidMetricsT","CVMValidMetrics","PCX_STATE","limit","offset","peeringConnectionName","PCXFieldsDescriptor","PCXInstanceAliasList","RedisFieldsDescriptor","REDIS_STATE","REDISInstanceAliasList","RedisInvalidDemensions","redis_uuid","TSFFieldsDescriptor","TSF_STATE","ApplicationType","MicroserviceType","ApplicationResourceTypeList","ApplicationIdList","TSFInstanceAliasList","TSFInvalidDemensions","applicationid","BWPFilterFieldsDescriptor","BWP_STATE","BandwidthPackageIds","BWPInstanceAliasList","BWPInvalidDemensions","bandwidthPackageId","CDNFilterFieldsDescriptor","CDN_STATE","CDNInstanceAliasList","CDNInvalidDemensions","LBFilterDescriptor","LB_STATE","LBInstanceAliasList","LBInvalidDemensions","NATGATEWAYInstanceAliasList","NATGatewayFilterFieldsDescriptor","NATGATEWAY_STATE","NatGatewayIds","NATInvalidDemensions","natId","OVCDNFilterFieldsDescriptor","OVCDN_STATE","OVCDNInstanceAliasList","OVCDNInvalidDemensions","__WEBPACK_EXTERNAL_MODULE__69__","TKE_STATE","conditions","groupBys","ClusterIds","ClusterName","ClusterStatus","TKEFilterFieldsDescriptor","TKEInstanceAliasList","responseField","getEnvironmentNameList","LoadBalancerType","RegionMap","keyBy","RegionInfoSet","rawSet","getZones","ZoneSet","ZoneName","ZoneId","ZoneState","getConsumerList","MapInfoList","TopicAliasList","consumerGroupCache","getConsumerGroups","groupname","topicid","consumerGoup","topicList","GroupDetailList","uniqBy","SubscribedInfos","ConsumerGroupName","SubscribedInfo","partitions","sub","Partition","formatTopicVarDisplay","topic","topicAlias","topicalias","par","ListenerAliasList","ServerAliasList","tagret","getListenerList","LoadBalancerId","formatVariableDisplay","aliasList","getServerList","listenerId","ListenerIds","Listeners","Rules","Targets","elem","listenAlias","lisId","listenerid","serverprivateip","serveralias","serversList","chain","dims","Set","fetchAllSubscription","SubscriptionId","cosURL","Buckets","BucketName","bucket","DeviceClassSet","Product","extraActionMap","DescribeDCDBShards","pickKey","DescribeDCDBInstanceNodeInfo","RegionList","act","getDiskList","instanceObj","getQueueNameList","getFleetList","ReplicaAliasList","replicaAlias","ReplicaSetId","replicasetid","times","SecondaryNum","nodeId","fetchAllNodes","NodeFlag","resultT","doRequestV2","totalCount","getVpcId","VpcSet","getVpcIds","MonitorVersion","getInstanceNodeInfo","nodetype","ndoeTypeIndex","getVersions","Versions","FunctionName","RegionInfos","DescribeTopics","DescribeEnvironments","DescribeRabbitMQNodeList","DescribeRocketMQNamespaces","DescribeRocketMQGroups","variableToArray","variable","tke_cluster_instance_id","Key","Operator","MetricNames","Module","Conditions","GroupBys","Data","Points","point","dimensionSort","dimensionString","timeshiftString","getAllMetrics","public_metrics","private_metrics","edition","init","getInstanceId","getServiceFn","getExtraDropdown","sQuery","onRefresh","onChecked","srcField","dstField","bwpQuery","BWPQueryCtrl","cdbQuery","CDBQueryCtrl","cdnQuery","CDNQueryCtrl","ExtraFields","scfQuery","SCFQueryCtrl","onInstanceChange","getExtraFields","CKAFKAQueryCtrl","element","attrs","$watch","newValue","oldValue","onFieldChange","getVariableId","variableData","getServersDropdown","getServerPortDropdown","serverPortList","cacheMap","getTopicName","onExtraFieldChange","datas","CmqTopicQueryCtrl","cvmQuery","CVMQueryCtrl","dropdownTextConfig","actionMaps","lbQuery","LBQueryCtrl","lighthouseQuery","LighthouseQueryCtrl","replicaId","mongodbQuery","MongoDBQueryCtrl","some","dataT","mrQuery","MrQueryCtrl","natGatewayQuery","NatGatewayQueryCtrl","ovCdnQuery","OVCDNQueryCtrl","pcxQuery","PCXQueryCtrl","redisQuery","RedisQueryCtrl","clearExtrasAlias","redisMemQuery","RedisMemQueryCtrl","evId","tdmqRocketmqQuery","TdmqRocketmqQueryCtrl","addCondition","deleteCondition","targetCondition","getOperator","tsfQuery","TSFQueryCtrl","VBCQueryCtrl","webpackContext","req","webpackContextResolve","_class","getNamespaces","namespaces","getCascaderNamespaces","validServices","getSelectedServices","promises","optionsTemp","promiseTemp","Done","results","getListeners","errorMsg","upperFirst","fnName","argu","hexTable","array","arrayToObject","source","plainObjects","refs","j","pop","compacted","compactQueue","decode","decodeURIComponent","encode","string","out","charCodeAt","charAt","isBuffer","constructor","isRegExp","merge","allowPrototypes","mergeTarget","percentTwenties","formatters","RFC1738","RFC3986","SPQueryCtrl","_config","queryDDO","formats","utils","arrayPrefixGenerators","brackets","indices","repeat","toISO","Date","toISOString","delimiter","encoder","encodeValuesOnly","serializeDate","skipNulls","strictNullHandling","generateArrayPrefix","sort","allowDots","formatter","objKeys","opts","TypeError","arrayFormat","joined","addQueryPrefix","arrayLimit","decoder","depth","parameterLimit","parseKeys","givenKey","child","segment","parent","leaf","root","cleanRoot","isNaN","parseArrays","parseObject","ignoreQueryPrefix","tempObj","cleanStr","Infinity","part","bracketEqualsPos","pos","parseValues","newObj","tcFolder","folderId","tcFolder_EN","getFolderId","folders","folderEnId","post","folder","folderEn","oldPost","pluginId","location","pathname","endsWith","backendInterceptor","$injector","$q","appEditCtrl","setPostUpdateHook","postUpdate","appModel","configured","enabled","datasources","ds","moveToFolder","dashbaordUid","dashboard","overwrite","reviseDashboard","pmlist","importedUrl","templateUrl"],"mappings":"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CACXhO,iBAAkByN,EAAaG,cAC/B3N,gBAAiB,YACjBC,aAAczB,EAAmBoO,YAGtB,a,6BCtKf,gsBAEM9U,EAAY,kBAGZkW,EAAkB,mBAwBlBC,EAAkD,CACtD,CACE/iB,IAAK,SACLghB,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEnhB,IAAK,QACLghB,aAAc,QACdC,aAAc,wBACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEnhB,IAAK,kBACLghB,aAAc,kBACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACEje,IAAK,mBACLghB,aAAc,oBACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SAER,CACEje,IAAK,UACLghB,aAAc,UACdC,aAAc,WACdC,KAAM,GACNjD,KAAM,SACN9C,KA3DiB,CACnB,CAAEtH,KAAM,UAAWnU,MAAO,GAC1B,CAAEmU,KAAM,UAAWnU,MAAO,KA2D1B,CACEM,IAAK,SACLghB,aAAc,SACdC,aAAc,wCACdC,KAAM,GACNjD,KAAM,SAER,CACEje,IAAK,mBACLghB,aAAc,oBACdC,aAAc,iBACdC,KAAM,GACNjD,KAAM,cAER,CACEje,IAAK,oBACLghB,aAAc,qBACdC,aAAc,oBACdC,KAAM,GACNjD,KAAM,cAER,CACEje,IAAK,mBACLghB,aAAc,oBACdC,aAAc,oBACdC,KAAM,GACNjD,KAAM,cAER,CACEje,IAAK,YACLghB,aAAc,aACdC,aAAc,iBACdC,KAAM,GACNjD,KAAM,eAER,CACEje,IAAK,QACLghB,aAAc,SACdC,aAAc,eACdC,KAAM,GACNjD,KAAM,SAER,CACEje,IAAK,gBACLghB,aAAc,iBACdC,aAAc,QACdC,KAAM,GACNjD,KAAM,SAER,CACEje,IAAK,aACLghB,aAAc,cACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,SAER,CACEje,IAAK,SACLghB,aAAc,SACdC,aAAc,eACdC,KAAM,GACNjD,KAAM,SACN9C,KA1GW,CACb,CAAEtH,KAAM,WAAYnU,MAAO,GAC3B,CAAEmU,KAAM,SAAUn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NjD,KAAM,cACNkD,IAAK,GAEP,CACEnhB,IAAK,QACLghB,aAAc,QACdC,aAAc,wBACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEnhB,IAAK,kBACLghB,aAAc,kBACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACEje,IAAK,mBACLghB,aAAc,oBACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SAER,CACEje,IAAK,UACLghB,aAAc,UACdC,aAAc,WACdC,KAAM,GACNjD,KAAM,SACN9C,KA3DiB,CACnB,CAAEtH,KAAM,UAAWnU,MAAO,GAC1B,CAAEmU,KAAM,UAAWnU,MAAO,KA2D1B,CACEM,IAAK,SACLghB,aAAc,SACdC,aAAc,wCACdC,KAAM,GACNjD,KAAM,SAER,CACEje,IAAK,mBACLghB,aAAc,oBACdC,aAAc,iBACdC,KAAM,GACNjD,KAAM,cAER,CACEje,IAAK,oBACLghB,aAAc,qBACdC,aAAc,oBACdC,KAAM,GACNjD,KAAM,cAER,CACEje,IAAK,mBACLghB,aAAc,oBACdC,aAAc,oBACdC,KAAM,GACNjD,KAAM,cAER,CACEje,IAAK,YACLghB,aAAc,aACdC,aAAc,iBACdC,KAAM,GACNjD,KAAM,eAER,CACEje,IAAK,QACLghB,aAAc,SACdC,aAAc,eACdC,KAAM,GACNjD,KAAM,SAER,CACEje,IAAK,gBACLghB,aAAc,iBACdC,aAAc,QACdC,KAAM,GACNjD,KAAM,SAER,CACEje,IAAK,aACLghB,aAAc,cACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,SAER,CACEje,IAAK,SACLghB,aAAc,SACdC,aAAc,eACdC,KAAM,GACNjD,KAAM,SACN9C,KA1GW,CACb,CAAEtH,KAAM,WAAYnU,MAAO,GAC3B,CAAEmU,KAAM,SAAUnU,MAAO,GACzB,CAAEmU,KAAM,OAAQnU,OAAQ,KAyGxB,CACEM,IAAK,UACLghB,aAAc,UACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACN9C,KA9HY,CACd,CAAEtH,KAAM,mBAAoBnU,MAAO,oBACnC,CAAEmU,KAAM,aAAcnU,MAA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oB,CAC/B0P,QAAS,UACTC,UAAW,aAGAtoB,EAAqB,CAChC/C,SAAU,aAINyC,EAAoB,CAAC,YAAa,WAIzB,WACb9N,OAAQ,GACR6Q,WAAY,GACZuL,WAAY,GACZrK,YAAQlI,EACRwF,gBAAiB,KACjBhE,SAAU,GACVsC,cAAe,YACf7F,QAAS,CACPsE,OAAQ,EACRoH,MAAO,GACPmjB,UAAW,GACX/Z,OAAQ,M,ikBClENga,EAA4B,CAChC,CACE97B,IAAK,OACLghB,aAAc,OACdC,aAAc,MACdC,KAAM,GACNjD,KAAM,iBAER,CACEje,IAAK,aACLghB,aAAc,aACdC,aAAc,OACdC,KAAM,kDACNjD,KAAM,oBAER,CACEje,IAAK,UACLghB,aAAc,SACdC,aAAc,SACdC,KAAM,uDACNjD,KAAM,cAER,CACEje,IAAK,SACLghB,aAAc,SACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,cAER,CACEje,IAAK,YACLghB,aAAc,YACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACEje,IAAK,cACLghB,aAAc,cACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACEje,IAAK,oBACLghB,aAAc,oBACdC,aAAc,QACdC,KAAM,GACNjD,KAAM,cAER,CACEje,IAAK,gBACLghB,aAAc,gBACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACEje,IAAK,UACLghB,aAAc,MACdC,aAAc,MACdC,KAAM,GACNjD,KAAM,cAER,CACEje,IAAK,uBACLghB,aAAc,uBACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,SACN9C,KA3FwB,CAC1B,CAAEtH,KAAM,MAAOnU,MAAO,WACtB,CAAEmU,KAAM,MAAOnU,MAAO,oBACtB,CAAEmU,KAAM,QAASnU,MAAO,aA0FxB,CACEM,IAAK,qBACLghB,aAAc,qBACdC,aAAc,aACdC,KAAM,GACNjD,KAAM,cAER,CACEje,IAAK,oBACLghB,aAAc,oBACdC,aAAc,2CACdC,KAAM,GACNjD,KAAM,eAIJ8d,EAAY,CAChB72B,OAAQ,GACR6Q,WAAY,GACZuL,WAAY,GACZrK,Y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","file":"components/config.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 212);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","const zh_CN = {\n  language: '语言',\n  enable_intranet_API_mode: '开启内网API模式',\n  cloud_database: '云数据库',\n  cloud_load_balancer: '负载均衡',\n  virtual_private_cloud: '私有网络',\n  content_delivery_network: '内容分发网络',\n  message_queue: '消息队列',\n  direct_connect: '专线接入',\n  cloud_physical_machine: '黑石物理服务器',\n  elastic_mapReduce: '弹性 MapReduce',\n  edge_computing_machine: '边缘计算机器',\n  // namespace\n  RUM: '前端性能监控(RUM)',\n  APM: '应用性能监控(APM)',\n  CLS: '日志服务(CLS)',\n  CVM: '云服务器(CVM)',\n  CDB: '云数据库 MySQL(CDB)',\n  CMONGO: '云数据库 MongoDB(CMONGO)',\n  POSTGRES: '云数据库 PostgreSQL(POSTGRES)',\n  REDIS: '云数据库 Redis(REDIS)',\n  REDIS_MEM: '云数据库 Redis内存版(5s)(REDIS_MEM)',\n  SQLSERVER: '云数据库 SQL Server(SQLSERVER)',\n  CYNOSDB_MYSQL: '云数据库 CYNOSDB_MYSQL(CYNOSDB_MYSQL)',\n  TCAPLUS: '云数据库 TcaplusDB(TCAPLUS)',\n  TDMYSQL: '分布式数据库 TDSQL MySQL(TDMYSQL)',\n  PCX: '私有网络-对等连接(PCX)',\n  BWP: '私有网络-带宽包(BWP)',\n  NAT_GATEWAY: '私有网络-NAT 网关(NAT_GATEWAY)',\n  VPNGW: '私有网络-VPN 网关(VPNGW)',\n  VPNX: '私有网络-VPN 通道(VPNX)',\n  DCG: '私有网络-专线网关(DCG)',\n  CEIP_SUMMARY: '私有网络-Anycast 弹性公网IP(CEIP_SUMMARY)',\n  VPC_NET_DETECT: '私有网络-网络探测(VPC_NET_DETECT)',\n  VBC: '私有网络-云联网(VBC)',\n  LB: '私有网络-弹性公网IP(LB)',\n  LB_PUBLIC: '公网负载均衡监控指标(LB_PUBLIC)',\n  LB_PRIVATE: '内网负载均衡四层协议监控指标(LB_PRIVATE)',\n  LOADBALANCE: '内网负载均衡七层协议监控指标(LOADBALANCE)',\n  CDN: '国内域名(CDN)',\n  CDN_LOG_DATA: '省份域名(CDN_LOG_DATA)',\n  OV_CDN: '国外域名(OV_CDN)',\n  SCF_V2: '云函数(SCF)',\n  CFS: '文件存储(CFS)',\n  COS: '对象存储(COS)',\n  CKAFKA: '消息队列 CKafka(CKAFKA)',\n  CMQ: '消息队列-队列服务监控(CMQ)',\n  CMQTOPIC: '消息队列-主题订阅监控(CMQTOPIC)',\n  TDMQ: '消息队列 Pulsar 版(TDMQ)',\n  TDMQ_ROCKETMQ: '消息队列 RocketMQ 版(ROCKETMQ)',\n  TDMQ_RABBITMQ: '消息队列 RabbitMQ 版(RABBITMQ)',\n  DCX: '专线接入-专用通道(DCX)',\n  DC: '专线接入-物理专线(DC)',\n  CPM: '黑石物理服务器(CPM)',\n  BM_PCX: '黑石对等连接(BM_PCX)',\n  BM_LB: '黑石外网负载均衡(BM_LB)',\n  BM_INTRA_LB: '黑石内网负载均衡(BM_INTRA_LB)',\n  CES: 'Elasticsearch指标(CES)',\n  BLOCK_STORAGE: '云硬盘(BLOCK_STORAGE)',\n  APIGATEWAY: 'API 网关(APIGATEWAY)',\n  QAAP: '全球应用加速(GAAP)',\n  ECM: '边缘计算和网络监控(ECM)',\n  ECM_BLOCK_STORAGE: '边缘计算存储监控(ECM_BLOCK_STORAGE)',\n  ECM_LB: '边缘计算负载均衡(ECM_LB)',\n  GSE: '游戏服务器伸缩(GSE)',\n  TKE: '容器服务(TKE)',\n  ECDN: '全站加速网络(ECDN)',\n  WAF: 'Web 应用防火墙(WAF)',\n  // others\n  multi_scene: '多场景版',\n  lite: '精简版',\n  cloud_monitor: '云监控',\n  cloud_log_service: '日志服务',\n  real_user_monitoring: '前端性能监控',\n  apm_monitoring: '应用性能监控',\n  region: '地域',\n  log_topic: '日志主题',\n  syntax_rule: '语法规则',\n  max_result_num: '最大结果条数',\n  search_statement: '检索语句',\n  time_unit: 'Time unit',\n  seconds: 'seconds',\n  search_description: '按照具体的查询条件搜索实例，默认拉取前 20 条实例',\n  // region\n  'ap-guangzhou': '华南地区(广州)',\n  'ap-shenzhen-fsi': '华南地区(深圳金融)',\n  'ap-guangzhou-open': '华南地区(广州OPEN)',\n  'ap-shenzhen': '华南地区(深圳)',\n  'ap-qingyuan': '华南地区(清远)',\n  'ap-shanghai': '华东地区(上海)',\n  'ap-shanghai-fsi': '华东地区(上海金融)',\n  'ap-jinan-ec': '华东地区(济南)',\n  'ap-hangzhou-ec': '华东地区(杭州)',\n  'ap-nanjing': '华东地区(南京)',\n  'ap-fuzhou-ec': '华东地区(福州)',\n  'ap-hefei-ec': '华东地区(合肥)',\n  'ap-beijing': '华北地区(北京)',\n  'ap-tianjin': '华北地区(天津)',\n  'ap-beijing-fsi': '华北地区(北京金融)',\n  'ap-shijiazhuang-ec': '华北地区(石家庄)',\n  'ap-wuhan-ec': '华中地区(武汉)',\n  'ap-changsha-ec': '华中地区(长沙)',\n  'ap-zhengzhou-ec': '华中地区(郑州)',\n  'ap-chengdu': '西南地区(成都)',\n  'ap-chongqing': '西南地区(重庆)',\n  'ap-xian-ec': '西北地区(西安)',\n  'ap-shenyang-ec': '东北地区(沈阳)',\n  'ap-taipei': '港澳台地区(中国台北)',\n  'ap-hongkong': '港澳台地区(中国香港)',\n  'ap-seoul': '亚太东北(首尔)',\n  'ap-tokyo': '亚太东北(东京)',\n  'ap-singapore': '亚太东南(新加坡)',\n  'ap-bangkok': '亚太东南(曼谷)',\n  'ap-jakarta': '亚太东南(雅加达)',\n  'na-siliconvalley': '美国西部(硅谷)',\n  'eu-frankfurt': '欧洲地区(法兰克福)',\n  'eu-moscow': '欧洲地区(莫斯科)',\n  'ap-mumbai': '亚太南部(孟买)',\n  'na-ashburn': '美国东部(弗吉尼亚)',\n  'sa-saopaulo': '南美地区(圣保罗)',\n  'na-toronto': '北美地区(多伦多)',\n};\nexport default zh_CN;\n","const en_US = {\n  language: 'Language',\n  enable_intranet_API_mode: 'Enable Intranet API Mode',\n  cloud_database: 'Cloud Database',\n  cloud_load_balancer: 'Cloud Load Balancer',\n  virtual_private_cloud: 'Virtual Private Cloud',\n  content_delivery_network: 'Content Delivery Network',\n  message_queue: 'Message Queue',\n  direct_connect: 'Direct Connect',\n  cloud_physical_machine: 'Cloud Physical Machine',\n  elastic_mapReduce: 'Elastic MapReduce',\n  edge_computing_machine: 'Edge Computing Machine',\n  // namespace\n  RUM: 'Real User Monitoring(RUM)',\n  CLS: 'Cloud Log Service(CLS)',\n  CVM: 'Cloud Virtual Machine(CVM)',\n  CDB: 'TencentDB for MySQL(CDB)',\n  CMONGO: 'TencentDB for MongoDB(CMONGO)',\n  POSTGRES: 'TencentDB for PostgreSQL(POSTGRES)',\n  REDIS: 'TencentDB for Redis(REDIS)',\n  REDIS_MEM: 'TencentDB for Redis(Memory Edition, 5-Second)(REDIS_MEM)',\n  SQLSERVER: 'TencentDB for SQL Server(SQLSERVER)',\n  CYNOSDB_MYSQL: 'TencentDB for CYNOSDB_MYSQL(CYNOSDB_MYSQL)',\n  TCAPLUS: 'TencentDB for TcaplusDB(TCAPLUS)',\n  TDMYSQL: 'TDSQL for MySQL(TDMYSQL)',\n  PCX: 'Peering Connection(PCX)',\n  BWP: 'Bandwidth Packet(BWP)',\n  NAT_GATEWAY: 'NAT Gateway(NAT_GATEWAY)',\n  VPNGW: 'VPN Gateway(VPNGW)',\n  VPNX: 'VPN Tunnel(VPNX)',\n  DCG: 'Direct Connect Gateway(DCG)',\n  CEIP_SUMMARY: 'Anycast EIP(CEIP_SUMMARY)',\n  VPC_NET_DETECT: 'Network Detection(VPC_NET_DETECT)',\n  VBC: 'Cloud Connect Network(VBC)',\n  LB: 'Elastic IP(LB)',\n  LB_PUBLIC: 'Public Network CLB(LB_PUBLIC)',\n  LB_PRIVATE: 'Private Network CLB Layer-4 Protocol(LB_PRIVATE)',\n  LOADBALANCE: 'Private Network CLB Layer-7 Protocol(LOADBALANCE)',\n  CDN: 'Chinese Mainland Domain(CDN)',\n  CDN_LOG_DATA: 'Province(CDN_LOG_DATA)',\n  OV_CDN: 'Overseas Domain(OV_CDN)',\n  SCF_V2: 'Serverless Cloud Function(SCF)',\n  CFS: 'Cloud File Storage(CFS)',\n  COS: 'Cloud Object Storage(COS)',\n  CKAFKA: 'Message Queue CKafka(CKAFKA)',\n  CMQ: 'Message Queue for Queue Service(CMQ)',\n  CMQTOPIC: 'Message Queue for Topic Subscription(CMQTOPIC)',\n  TDMQ: 'Tencent Distributed Message Queue for Pulsar(TDMQ)',\n  TDMQ_ROCKETMQ: 'Tencent Distributed Message Queue for RocketMQ(ROCKETMQ)',\n  TDMQ_RABBITMQ: 'Tencent Distributed Message Queue for RabbitMQ(RABBITMQ)',\n  DCX: 'Direct Connect for Dedicated Tunnel(DCX)',\n  DC: 'Direct Connect for Connection(DC)',\n  CPM: 'Cloud Physical Machine(CPM)',\n  BM_PCX: 'Cloud Physical Machine for Peering Connection(BM_PCX)',\n  BM_LB: 'Cloud Physical Machine for Public Network CLB(BM_LB)',\n  BM_INTRA_LB: 'Cloud Physical Machine for Private Network CLB(BM_INTRA_LB)',\n  CES: 'Elasticsearch Service(CES)',\n  BLOCK_STORAGE: 'Cloud Block Storage(BLOCK_STORAGE)',\n  APIGATEWAY: 'API Gateway(APIGATEWAY)',\n  QAAP: 'Global Application Acceleration Platform(GAAP)',\n  ECM: 'Edge Computing Machine for Computation and Networking(ECM)',\n  ECM_BLOCK_STORAGE: 'Edge Computing Machine for Block Storage(ECM_BLOCK_STORAGE)',\n  ECM_LB: 'Edge Computing Machine for Layer-4 CLB(ECM_LB)',\n  GSE: 'Game Server Elastic-scaling(GSE)',\n  TKE: 'Tencent Kubernetes Engine(TKE)',\n  ECDN: 'Enterprise Content Delivery Network(ECDN)',\n  WAF: 'Web Application Firewall(WAF)',\n  // others\n  multi_scene: 'Multi-Scene',\n  lite: 'Lite',\n  cloud_monitor: 'Cloud Monitor',\n  cloud_log_service: 'Cloud Log Service',\n  real_user_monitoring: 'Real User Monitoring',\n  apm_monitoring: 'Application Monitoring',\n  region: 'Region',\n  log_topic: 'Log Topic',\n  syntax_rule: 'Syntax Rule',\n  max_result_num: 'Maximum result number',\n  search_statement: 'Search Statement',\n  time_unit: 'Time unit',\n  seconds: 'seconds',\n  search_description:\n    'Search for instances according to specific query conditions, and pull the first 20 instances by default',\n  // region\n  'ap-guangzhou': 'South China(Guangzhou)',\n  'ap-shenzhen-fsi': 'South China(Shenzhen Finance)',\n  'ap-guangzhou-open': 'South China(Guangzhou OPEN)',\n  'ap-shenzhen': 'South China(Shenzhen)',\n  'ap-qingyuan': 'South China(Qingyuan)',\n  'ap-shanghai': 'East China(Shanghai)',\n  'ap-shanghai-fsi': 'East China(Shanghai Finance)',\n  'ap-jinan-ec': 'East China(Jinan)',\n  'ap-hangzhou-ec': 'East China(Hangzhou)',\n  'ap-nanjing': 'East China(Nanjing)',\n  'ap-fuzhou-ec': 'East China(Fuzhou)',\n  'ap-hefei-ec': 'East China(Hefei)',\n  'ap-beijing': 'North China region(Beijing)',\n  'ap-tianjin': 'North China region(Tianjin)',\n  'ap-beijing-fsi': 'North China region(Beijing Finance)',\n  'ap-shijiazhuang-ec': 'North China region(Shijiazhuang)',\n  'ap-wuhan-ec': 'Central China(Wuhan)',\n  'ap-changsha-ec': 'Central China(Changsha)',\n  'ap-zhengzhou-ec': 'Central China(Zhengzhou)',\n  'ap-chengdu': 'Southwest China(Chengdu)',\n  'ap-chongqing': 'Southwest China(Chongqing)',\n  'ap-xian-ec': \"Northwest region(Xi'an)\",\n  'ap-shenyang-ec': 'Northeast China(Shenyang)',\n  'ap-taipei': 'Hong Kong, Macau and Taiwan (China)(Taipei, China)',\n  'ap-hongkong': 'Hong Kong, Macau and Taiwan (China)(Hong Kong, China)',\n  'ap-seoul': 'Northeast Asia(Seoul)',\n  'ap-tokyo': 'Northeast Asia(Tokyo)',\n  'ap-singapore': 'Southeast Asia(Singapore)',\n  'ap-bangkok': 'Southeast Asia(Bangkok)',\n  'ap-jakarta': 'Southeast Asia(Jakarta)',\n  'na-siliconvalley': 'US West(Silicon Valley)',\n  'eu-frankfurt': 'Europe(Frankfurt)',\n  'eu-moscow': 'Europe(Northeastern Europe)',\n  'ap-mumbai': 'South Asia(Mumbai)',\n  'na-ashburn': 'US East(Virginia)',\n  'sa-saopaulo': 'South America(São Paulo)',\n  'na-toronto': 'North America(Toronto)',\n};\nexport default en_US;\n","import zh_CN from './zh_CN';\nimport en_US from './en_US';\n\nlet locale_language = 'zh-CN';\n\nexport enum Language {\n  Chinese = 'zh-CN',\n  English = 'en-US',\n}\n\nexport const t = (key: string) => {\n  if (locale_language === Language.Chinese) {\n    return zh_CN[key];\n  }\n  return en_US[key];\n};\n\nexport const setLanguage = (language: Language) => {\n  locale_language = language;\n};\n\nexport const getLanguage = () => locale_language;\n","import moment from 'moment';\n\nconst HttpRequestMethod = 'POST';\nconst CanonicalUri = '/';\nconst CanonicalQueryString = '';\nconst ContentType = 'application/json';\n\nexport default class Sign {\n  /**\n   * Tencent Cloud API Signature v3 reference: https://cloud.tencent.com/document/api/213/30654\n   * secretId: SecretId for identifying identity that is applied for on Cloud API Key.\n   * A SecretId corresponds to a unique SecretKey, which is used to generate the request Signature.\n   * secretKey: SecretKey is used to encrypt the signature string and verify the signature string on the server\n   * service: the name of service, which must be consistent with the request domain, such as cvm\n   * action: The name of the API for the desired operation\n   * host: the domain of service，which must be consistent with the request domain, such as cvm.tencentcloudapi.com\n   * version:  PI version, such as 2017-03-12\n   * payload: The request parameters\n   */\n\n  secretId: string;\n\n  service: string;\n  action: string;\n  host: string;\n  version: string;\n  payload: Record<string, any> | string;\n  region: string;\n  timestamp: number;\n  date: string;\n  backendSrv: any;\n  datasourceId: Number;\n  constructor(options) {\n    const { secretId, service, action, host, version, payload = '', region, backendSrv, datasourceId } = options;\n    this.secretId = secretId;\n    // this.secretKey = secretKey;\n    this.service = service;\n    this.action = action;\n    this.host = host;\n    this.version = version;\n    this.payload = typeof payload === 'string' ? payload : JSON.stringify(payload);\n    this.region = region;\n    const nowDate = moment().utc();\n    this.timestamp = nowDate.unix();\n    this.date = nowDate.format('YYYY-MM-DD');\n    this.backendSrv = backendSrv;\n    this.datasourceId = datasourceId;\n  }\n\n  async getHeader() {\n    return this.getResourceHeader();\n  }\n\n  async getResourceHeader() {\n    let res: { authorization?: string; token?: string; intranet?: boolean } = {};\n    try {\n      const resp = await this.backendSrv.datasourceRequest({\n        url: `/api/datasources/${this.datasourceId}/resources/sign_v3`,\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        data: {\n          Host: this.host,\n          Service: this.service,\n          Version: this.version,\n          Action: this.action,\n          Region: this.region,\n          Timestamp: this.timestamp,\n          Method: HttpRequestMethod,\n          Uri: CanonicalUri,\n          Query: CanonicalQueryString,\n          Body: this.payload,\n          Headers: {\n            'content-type': ContentType,\n            host: this.host,\n          },\n        },\n      });\n      res = resp.data;\n    } catch (err) {}\n    const { authorization, token, intranet } = res;\n    const grafanaVersion = (window as any).grafanaBootData?.settings?.buildInfo?.version || '0.0.0';\n    const headers = {\n      Authorization: authorization,\n      'Content-Type': ContentType,\n      'X-TC-Action': this.action,\n      'X-TC-Timestamp': this.timestamp.toString(),\n      'X-TC-Version': this.version,\n      'X-TC-RequestClient': `GF_${grafanaVersion}_PL_CM_${process.env.TENCENT_CLOUD_MONITOR_GRAFANA_PLUGIN_VERSION}`,\n      ...(this.region && {\n        'X-TC-Region': this.region,\n      }),\n      ...(token && {\n        'X-TC-Token': token,\n      }),\n      intranet: intranet,\n    };\n    return headers;\n  }\n}\n","/**\n *\n * @param defaults 为对象\n * secretId\n * secretKey\n * action\n * region\n * host\n */\n\nexport default class SignV2 {\n  defaults: any = {\n    path: '/v2/index.php',\n    method: 'POST',\n  };\n  backendSrv: any;\n  datasourceId: Number;\n  constructor(defaults: any = {}) {\n    this.defaults = Object.assign(this.defaults, defaults);\n    this.defaults.secretKey = '';\n    this.backendSrv = defaults.backendSrv;\n    this.datasourceId = defaults.datasourceId;\n  }\n\n  generateQueryString = async () => {\n    return this.getResourceQueryString();\n  };\n\n  async getResourceQueryString() {\n    let res: { path?: string; querystring?: any; host?: string; intranet?: boolean } = {};\n    try {\n      const { data } = this.defaults;\n      const payload = typeof data === 'string' ? data : JSON.stringify(data);\n      const resp = await this.backendSrv.datasourceRequest({\n        url: `/api/datasources/${this.datasourceId}/resources/sign_v2`,\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        data: {\n          Host: this.defaults.host,\n          Action: this.defaults.action,\n          Version: this.defaults.version,\n          Region: this.defaults.region,\n          Method: this.defaults.method,\n          Uri: this.defaults.path,\n          Query: '',\n          Body: payload,\n        },\n      });\n      res = resp.data;\n    } catch (err) {}\n    const { path, querystring, host, intranet } = res;\n    return { queryString: querystring, path: path, host: host, intranet: intranet };\n  }\n}\n","import _ from 'lodash';\nimport qs from 'qs';\nimport { SERVICES } from '../tc_monitor';\nimport Sign from './sign';\nimport SignV2 from './signV2';\nimport { toDataQueryResponse } from '@grafana/runtime';\nimport { getLanguage } from '../../locale';\n\nimport packageInfo from '../plugin.json';\nexport const TcDataSourceId = packageInfo.id;\n\n// the services of tencentcloud monitor api\nconst FINACE_REGIONS = ['ap-shanghai-fsi', 'ap-shenzhen-fsi'];\nconst SERVICES_API_INFO = {\n  api: {\n    service: 'api',\n    version: '2020-11-06',\n    path: '/api',\n    host: 'api.tencentcloudapi.com',\n  },\n  // monitor api info\n  monitor: {\n    service: 'monitor',\n    version: '2018-07-24',\n    path: '/monitor',\n    host: 'monitor.tencentcloudapi.com',\n  },\n  // cls api info\n  cls: {\n    service: 'cls',\n    version: '2020-10-16',\n    path: '/cls',\n    host: 'cls.tencentcloudapi.com',\n  },\n  // cvm api info\n  cvm: {\n    service: 'cvm',\n    version: '2017-03-12',\n    path: '/cvm',\n    host: 'cvm.tencentcloudapi.com',\n  },\n  // cdb api info\n  cdb: {\n    service: 'cdb',\n    version: '2017-03-20',\n    path: '/cdb',\n    host: 'cdb.tencentcloudapi.com',\n  },\n  // pcx api info\n  pcx: {\n    service: 'pcx',\n    version: '',\n    path: '/pcx',\n    host: 'vpc.api.qcloud.com',\n  },\n  // vpc api info\n  vpc: {\n    service: 'vpc',\n    version: '2017-03-12',\n    path: '/vpc',\n    host: 'vpc.tencentcloudapi.com',\n  },\n  // mongodb api info\n  mongodb: {\n    service: 'mongodb',\n    version: '2019-07-25',\n    path: '/mongodb',\n    host: 'mongodb.tencentcloudapi.com',\n  },\n  // 负载均衡 clb\n  clb: {\n    service: 'clb',\n    version: '2018-03-17',\n    path: '/clb',\n    host: 'clb.tencentcloudapi.com',\n  },\n  // postgresql api info\n  postgres: {\n    service: 'postgres',\n    version: '2017-03-12',\n    path: '/postgres',\n    host: 'postgres.tencentcloudapi.com',\n  },\n  // cdn info\n  cdn: {\n    service: 'cdn',\n    version: '2018-06-06',\n    path: '/cdn',\n    host: 'cdn.tencentcloudapi.com',\n  },\n  // redis info\n  redis: {\n    service: 'redis',\n    version: '2018-04-12',\n    path: '/redis',\n    host: 'redis.tencentcloudapi.com',\n  },\n  scf: {\n    service: 'scf',\n    version: '2018-04-16',\n    path: '/scf',\n    host: 'scf.tencentcloudapi.com',\n  },\n  cfs: {\n    service: 'cfs',\n    version: '2019-07-19',\n    path: '/cfs',\n    host: 'cfs.tencentcloudapi.com',\n  },\n  ckafka: {\n    service: 'ckafka',\n    version: '2019-08-19',\n    path: '/ckafka',\n    host: 'ckafka.tencentcloudapi.com',\n  },\n  // 专线接入实例列表\n  dc: {\n    service: 'dc',\n    version: '2018-04-10',\n    path: '/dc',\n    host: 'dc.tencentcloudapi.com',\n  },\n  // cynosdb实例列表\n  cynosdb: {\n    service: 'cynosdb',\n    version: '2019-01-07',\n    path: '/cynosdb',\n    host: 'cynosdb.tencentcloudapi.com',\n  },\n  // sqlserver实例列表\n  sqlserver: {\n    service: 'sqlserver',\n    version: '2018-03-28',\n    path: '/sqlserver',\n    host: 'sqlserver.tencentcloudapi.com',\n  },\n  // bm实例列表\n  bm: {\n    service: 'bm',\n    version: '2018-04-23',\n    path: '/bm',\n    host: 'bm.tencentcloudapi.com',\n  },\n  bmeip: {\n    service: 'bmeip',\n    version: '2018-06-25',\n    path: '/bmeip',\n    host: 'bmeip.tencentcloudapi.com',\n  },\n  bmvpc: {\n    service: 'bmvpc',\n    version: '2018-06-25',\n    path: '/bmvpc',\n    host: 'bmvpc.tencentcloudapi.com',\n  },\n  bmlb: {\n    service: 'bmlb',\n    version: '2018-06-25',\n    path: '/bmlb',\n    host: 'bmlb.tencentcloudapi.com',\n  },\n  // ES集群实例\n  es: {\n    service: 'es',\n    version: '2018-04-16',\n    path: '/es',\n    host: 'es.tencentcloudapi.com',\n  },\n  // MapReduce\n  emr: {\n    service: 'emr',\n    version: '2019-01-03',\n    path: '/emr',\n    host: 'emr.tencentcloudapi.com',\n  },\n  // CMQ消息队列\n  cmq: {\n    service: 'cmq',\n    version: '2019-03-04',\n    path: '/cmq',\n    host: 'cmq.tencentcloudapi.com',\n  },\n  cbs: {\n    service: 'cbs',\n    version: '2017-03-12',\n    path: '/cbs',\n    host: 'cbs.tencentcloudapi.com',\n  },\n  // tcaplus实例\n  tcaplusdb: {\n    service: 'tcaplusdb',\n    version: '2019-08-23',\n    path: '/tcaplusdb',\n    host: 'tcaplusdb.tencentcloudapi.com',\n  },\n  // tcaplus实例\n  dcdb: {\n    service: 'dcdb',\n    version: '2018-04-11',\n    path: '/dcdb',\n    host: 'dcdb.tencentcloudapi.com',\n  },\n  // apigateway实例\n  apigateway: {\n    service: 'apigateway',\n    version: '2018-08-08',\n    path: '/apigateway',\n    host: 'apigateway.tencentcloudapi.com',\n  },\n  tdmq: {\n    service: 'tdmq',\n    version: '2020-02-17',\n    path: '/tdmq',\n    host: 'tdmq.tencentcloudapi.com',\n  },\n  tdmq_rabbitmq: {\n    service: 'tdmq',\n    version: '2020-02-17',\n    path: '/tdmq',\n    host: 'tdmq.tencentcloudapi.com',\n  },\n  tdmq_rocketmq: {\n    service: 'tdmq',\n    version: '2020-02-17',\n    path: '/tdmq',\n    host: 'tdmq.tencentcloudapi.com',\n  },\n  gaap: {\n    service: 'gaap',\n    version: '2018-05-29',\n    path: '/gaap',\n    host: 'gaap.tencentcloudapi.com',\n  },\n  ecm: {\n    service: 'ecm',\n    version: '2019-07-19',\n    path: '/ecm',\n    host: 'ecm.tencentcloudapi.com',\n  },\n  gse: {\n    service: 'gse',\n    version: '2019-11-12',\n    path: '/gse',\n    host: 'gse.tencentcloudapi.com',\n  },\n  lighthouse: {\n    service: 'lighthouse',\n    version: '2020-03-24',\n    path: '/lighthouse',\n    host: 'lighthouse.tencentcloudapi.com',\n  },\n  tsf: {\n    service: 'tsf',\n    version: '2018-03-26',\n    path: '/tsf',\n    host: 'tsf.tencentcloudapi.com',\n  },\n  rum: {\n    service: 'rum',\n    version: '2021-06-22',\n    path: '/rum',\n    host: 'rum.tencentcloudapi.com',\n  },\n  tke: {\n    service: 'tke',\n    version: '2018-05-25',\n    path: '/tke',\n    host: 'tke.tencentcloudapi.com',\n  },\n  ecdn: {\n    service: 'ecdn',\n    version: '2019-10-12',\n    path: '/ecdn',\n    host: 'ecdn.tencentcloudapi.com',\n  },\n  waf: {\n    service: 'waf',\n    version: '2018-01-25',\n    path: '/waf',\n    host: 'waf.tencentcloudapi.com',\n  },\n  region: {\n    service: 'region',\n    version: '2022-06-27',\n    path: '/region',\n    host: 'region.tencentcloudapi.com',\n  },\n  apm: {\n    service: 'apm',\n    version: '2021-06-22',\n    path: '/apm',\n    host: 'apm.tencentcloudapi.com',\n  },\n  // 不单独定义lb，因为lb同样用的是vpc的配置，同上\n  // lb: {\n  //   service: 'lb',\n  //   version: '2017-03-12',\n  //   path: '/lb',\n  //   host: 'vpc.tencentcloudapi.com'\n  // }\n  // 负载均衡四层协议 lbPrivate\n  // lbPrivate: {\n  //   service: 'lbPrivate',\n  //   version: '2018-03-17',\n  //   path: '/clb',\n  //   host: 'clb.tencentcloudapi.com',\n  // },\n};\n\nconst FINACE_HOST = {\n  scf: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/scf/shanghai',\n      host: 'scf.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/scf/shenzhen',\n      host: 'scf.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  cfs: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/cfs/shanghai',\n      host: 'cfs.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/cfs/shenzhen',\n      host: 'cfs.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  ckafka: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/ckafka/shanghai',\n      host: 'ckafka.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/ckafka/shenzhen',\n      host: 'ckafka.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  clb: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/clb/shanghai',\n      host: 'clb.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/clb/shenzhen',\n      host: 'clb.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  mongodb: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/mongodb/shanghai',\n      host: 'mongodb.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/mongodb/shenzhen',\n      host: 'mongodb.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  vpc: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/vpc/shanghai',\n      host: 'vpc.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/vpc/shenzhen',\n      host: 'vpc.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  cvm: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/cvm/shanghai',\n      host: 'cvm.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/cvm/shenzhen',\n      host: 'cvm.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  cdb: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/cdb/shanghai',\n      host: 'cdb.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/cdb/shenzhen',\n      host: 'cdb.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  monitor: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/monitor/shanghai',\n      host: 'monitor.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/monitor/shenzhen',\n      host: 'monitor.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  postgres: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/postgres/shanghai',\n      host: 'postgres.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/postgres/shenzhen',\n      host: 'postgres.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  emr: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/emr/shanghai',\n      host: 'emr.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/emr/shenzhen',\n      host: 'emr.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  cmq: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/cmq/shanghai',\n      host: 'cmq.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/cmq/shenzhen',\n      host: 'cmq.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  cls: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/cls/shanghai',\n      host: 'cls.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/cls/shenzhen',\n      host: 'cls.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n};\n\n// 获取对应业务的 API 接口信息\nexport function GetServiceAPIInfo(region, service) {\n  return { ...(SERVICES_API_INFO[service] || {}), ...getHostAndPath(region, service) };\n}\n\n// get host and path for finance regions\nfunction getHostAndPath(region, service) {\n  if (_.indexOf(FINACE_REGIONS, region) === -1) {\n    return {};\n  }\n  return (\n    _.find(\n      _.find(FINACE_HOST, (__, key) => key === service),\n      (__, key) => key === region\n    ) || {}\n  );\n}\n\n// 变量替换指定实例按照那个字段展示\nexport const VARIABLE_ALIAS = 'instancealias';\n\nexport function GetServiceFromNamespace(namespace) {\n  return _.get(\n    _.find(SERVICES, (service) => service.namespace === namespace),\n    'service'\n  );\n}\n// 处理存量target中保存的qce/cvm\nexport function GetLabelFromNamespace(namespace) {\n  return _.get(\n    _.find(SERVICES, (service) => service.namespace === namespace || service.label === namespace),\n    'label'\n  );\n}\n// parse template variable query params\nexport function ParseMetricQuery(query = '') {\n  if (!query) {\n    return {};\n  }\n  const result = {};\n  const queries = _.split(query, '&');\n  _.forEach(queries, (item) => {\n    const str = _.split(item, '=');\n    if (_.trim(_.get(str, '0', ''))) {\n      let val = _.trim(_.get(str, '1', ''));\n      try {\n        val = JSON.parse(val);\n      } catch (e) {\n        // console.log({ val });\n      }\n      result[_.toLower(_.trim(_.get(str, '0', '')))] = val;\n    }\n  });\n  return result;\n}\n\n// parse template variable regex params\nexport function ParseMetricRegex(regex = '') {\n  if (!regex) {\n    return [];\n  }\n  regex = regex.replace(/：/g, ':');\n  regex = regex.replace(/，/g, ',');\n  const regexParams = ParseMetricQuery(regex);\n  const result: any[] = [];\n  _.forEach(regexParams, (value, key) => {\n    if (key === 'tag:tag-key') {\n      const valuesArr = _.split(value, ',');\n      _.forEach(valuesArr, (item) => {\n        const temp = _.split(item, ':');\n        if (temp.length === 2) {\n          result.push({ Name: `tag:${temp[0]}`, Values: temp.slice(1) });\n        }\n      });\n    } else {\n      result.push({ Name: key, Values: _.split(value, ',') });\n    }\n  });\n  return result;\n}\n\n// get the actual value of template variable\nfunction parseVariableFormat(varname: string) {\n  varname = String(varname || '');\n  // $varname\n  let varFlag = false;\n  const regResult1 = varname.match(/^\\${?(\\w+)}?/);\n  if (regResult1) {\n    varFlag = true;\n    varname = `\\$\\{${regResult1[1]}\\:json\\}`;\n  }\n  // [[varname]]\n  const regResult2 = varname.match(/^\\[\\[(\\w+)(\\:\\w+)?\\]\\]/);\n  if (regResult2) {\n    varFlag = true;\n    varname = `\\$\\{${regResult2[1]}\\:json\\}`;\n  }\n  return { varname, varFlag };\n}\n\nexport function ReplaceVariable(templateSrv, scopedVars, field, multiple = false) {\n  const { varname, varFlag } = parseVariableFormat(field);\n  let replaceVar = templateSrv.replace(varname, scopedVars);\n  if (varFlag) {\n    try {\n      replaceVar = JSON.parse(replaceVar);\n    } catch (error) {}\n  }\n  if (!multiple && _.isArray(replaceVar)) {\n    replaceVar = _.get(replaceVar, '0', '');\n  }\n  return replaceVar;\n}\n\n// get dimensions for instance query param\nexport function GetDimensions(obj) {\n  if (_.isEmpty(obj)) {\n    return [];\n  }\n  const dimensions: any[] = [];\n  _.forEach(obj, (item) => {\n    if (item.Value !== null && item.Value !== undefined && item.Value !== '') {\n      dimensions.push({ Name: item.Name, Value: typeof item.Value === 'string' ? item.Value : `${item.Value}` });\n    }\n  });\n  return dimensions;\n}\n\n// parse query data result for panel\nexport function ParseQueryResult(response, instances: any[] = [], timeshift = 0) {\n  const instanceList = _.cloneDeep(instances);\n\n  const dataPoints = _.get(response, 'DataPoints', []);\n  return _.map(dataPoints, (dataPoint) => {\n    let instanceAliasValue = _.get(dataPoint, 'Dimensions[0].Value');\n    for (let i = 0; i < instanceList.length; i++) {\n      if (isInstanceMatch(instanceList[i], _.get(dataPoint, 'Dimensions', []))) {\n        instanceAliasValue = instanceList[i]._InstanceAliasValue;\n        instanceList.splice(i, 1);\n        break;\n      }\n    }\n    return {\n      target: `${response.MetricName} - ${instanceAliasValue}`,\n      datapoints: parseDataPoint(dataPoint, timeshift),\n    };\n  });\n}\n\n// parse tencent cloud monitor response data to grafana panel data\nfunction parseDataPoint(dataPoint, timeshift = 0) {\n  const timestamps = _.get(dataPoint, 'Timestamps', []);\n  const values = _.get(dataPoint, 'Values', []);\n  const result = timestamps.map((timestamp, index) => {\n    return [values[index], timestamp * 1000 + timeshift];\n  });\n\n  return result;\n}\n\n// check whether instance is match or not\nfunction isInstanceMatch(instance, dimensions) {\n  let match = true;\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < dimensions.length; i++) {\n    if (_.get(instance, dimensions[i].Name, '').toString() !== dimensions[i].Value.toString()) {\n      match = false;\n      break;\n    }\n  }\n  return match;\n}\n\n/**\n * 检查某个变量是否模板变量，即是否匹配 ${varnam} 或 [[varname]]\n *\n * @param field 变量字段名\n */\nexport function isVariable(value) {\n  if (value && (value.match(/^\\${?(\\w+)}?/) || value.match(/^\\[\\[(\\w+)(\\:\\w+)?\\]\\]/))) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * 腾讯云 API 3.0 接口协议\n * @param options 接口请求对象 { url: string, data?: object }\n * @param service 产品名字 'cvm'\n * @param signObj 接口请求相关信息 { region?: string, action: string }\n * @param secretId\n * @param secretKey\n */\nexport async function GetRequestParams(options, service, signObj: any = {}, secretId, datasourceId, backendSrv) {\n  const signParams = {\n    region: 'ap-guangzhou', // apm参数覆盖，这里先做兼容处理，后期重写apm时公共函数不写死值\n    secretId,\n    payload: options.data || '',\n    ...signObj,\n    ...(_.pick(GetServiceAPIInfo(signObj.region || '', service), ['service', 'host', 'version']) || {}),\n    backendSrv,\n    datasourceId,\n  };\n  const sign = new Sign(signParams);\n  const { intranet, ...headerSigned } = await sign.getHeader();\n  // 传入x-tc-language实现国际化\n  // zh-CN en-US ko-KR ja-JP\n  options.headers = Object.assign(options.headers || {}, { ...headerSigned }, { 'x-tc-language': getLanguage() });\n  options.method = 'POST';\n  if (intranet) {\n    options.url += '-internal';\n  }\n  return options;\n}\n\n/**\n *  腾讯云 API 2.0 接口协议\n * @param options 接口请求对象 { url: string, data?: object }\n * @param service 产品名字 'cvm'\n * @param signObj 接口请求相关信息 { region?: string, action: string }\n * @param secretId\n * @param secretKey\n */\nexport async function GetRequestParamsV2(\n  options: any = {},\n  service,\n  signObj: any = {},\n  secretId,\n  datasourceId,\n  backendSrv\n) {\n  const data = options.data || {};\n  const signParams = {\n    secretId,\n    data,\n    ...signObj,\n    ...(_.pick(GetServiceAPIInfo(signObj.region || '', service), ['host', 'version']) || {}),\n    backendSrv,\n    datasourceId,\n  };\n  options.method = 'POST';\n  const sign = new SignV2(signParams);\n  options.headers = Object.assign(options.headers || {}, { 'Content-Type': 'application/x-www-form-urlencoded' });\n  const { queryString, path, host, intranet } = await sign.generateQueryString();\n  options.data = qs.stringify({\n    ...options.data,\n    ...queryString,\n    ...(host && { host: host }),\n  });\n  if (intranet) {\n    // TODO: qcloud.com intranet host\n    console.log('got intranet for sign v2');\n  }\n  options.url += path;\n  return options;\n}\n\nexport function SliceLength(total = 0, len = 1) {\n  const result: any[] = [];\n  const num = Math.ceil(total / len);\n  for (let i = 1; i < num; i++) {\n    result.push({ Offset: len * i });\n  }\n  return result;\n}\n\nexport const FilterKeys = ['Namespace', 'Offset', 'Limit', 'SearchKey', 'Description', 'OrderBy', 'Order'];\n\nexport function parseDataFromBackendPlugin(res) {\n  const { data } = toDataQueryResponse(res);\n  return {\n    authorization: _.get(data, '[0].meta.custom', ''),\n  };\n}\n\n/** 当前环境是否为非生产环境 */\nexport const IS_DEVELOPMENT_ENVIRONMENT = !(process.env.NODE_ENV === 'production');\n\n/**\n * @link https://github.com/grafana/grafana/blob/3c6e0e8ef85048af952367751e478c08342e17b4/packages/grafana-data/src/types/app.ts#L12\n */\nexport enum CoreApp {\n  CloudAlerting = 'cloud-alerting',\n  UnifiedAlerting = 'unified-alerting',\n  Dashboard = 'dashboard',\n  Explore = 'explore',\n  Unknown = 'unknown',\n  PanelEditor = 'panel-editor',\n  PanelViewer = 'panel-viewer',\n}\n","import _ from 'lodash';\nimport moment from 'moment';\nimport DatasourceInterface from '../MonitorDatasource';\nimport {\n  GetRequestParams,\n  GetServiceAPIInfo,\n  ReplaceVariable,\n  GetDimensions,\n  ParseQueryResult,\n  SliceLength,\n} from '../../common/constants';\nimport instanceStorage from '../../common/datasourceStorage';\nimport { MetricQuery } from './types';\nimport { getNamesapceFromService, getTimeShiftInMs } from '../../common/utils';\nimport { Language, setLanguage } from '../../../locale';\n\nexport interface TemplateQueryIdType {\n  instance: string;\n  listener?: string;\n}\n\ninterface queryConfigType {\n  dim_KeyInStorage: string;\n  dim_KeyInTarget?: string;\n  dim_KeyInIns?: string;\n  dim_KeyInMap: string;\n}\n\nexport abstract class BaseDatasource implements DatasourceInterface {\n  Namespace?: string;\n  service: string;\n  instanceListCache: any[] = [];\n  extraMetricDims: string[] = [];\n  url: string;\n  instanceSettings: any;\n  backendSrv: any;\n  templateSrv: any;\n  secretId: string;\n  checkKeys: string[] = [];\n  MetricReqConfig: {\n    resultFilter?: Function;\n  } = {};\n  extrasAlias?: string[] = [];\n  /*\n  一个配置：(用于处理除了InstanceId之外的)(Record中的key是指标修正之后的维度，即通过InvalidDemsion处理后)\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget 通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。为空则取即通过InvalidDemsion处理后的key\n  3 dim_KeyInMap 保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。即：templateQueryIdMap中内容。联合上面2的内容筛选出原始sourceMap\n  4 通过这个dim和sourceMap获取维度值。即sourceMap[dim]\n  */\n  queryMonitorExtraConfg: Record<string, queryConfigType> = {};\n  CandiateDimensions?: Record<string, string> = {};\n\n  InstanceReqConfig?: {\n    service?: string;\n    action: string;\n    responseField: string;\n    interceptor?: {\n      request?: (params: unknown) => unknown;\n      response?: (data: unknown) => unknown;\n    };\n  };\n  InvalidDimensions?: Record<string, string>;\n\n  abstract InstanceAliasList: string[];\n  abstract templateQueryIdMap: TemplateQueryIdType; // 必须为标识\n\n  /** @ngInject */\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    this.instanceSettings = instanceSettings;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.url = instanceSettings.url;\n    this.secretId = (instanceSettings.jsonData || {}).secretId || '';\n    setLanguage(instanceSettings.jsonData.language || Language.Chinese);\n  }\n\n  get namespace() {\n    // 需要注意的是this.service来自于原型上，在实例中导入时注入\n    return this.Namespace || getNamesapceFromService(this.service);\n  }\n\n  // 获取额外要显示到图例里的内容\n  getOtherAlias(instance: any, target: any): string {\n    let result = '';\n    const alias = instance._InstanceAliasValue;\n    this.extrasAlias?.forEach((extra) => {\n      const extraAlia = this.getVariable(target[extra]);\n      if (extraAlia && alias.indexOf(extraAlia) === -1) {\n        result += ` - ${extraAlia}`;\n      }\n    });\n    return result;\n  }\n\n  /* 格式化模板变量上的显示 */\n  getAliasValue(instance: Record<string, any>, alias: string) {\n    const result = instance[alias];\n    return Array.isArray(result) ? result.join() : result;\n  }\n\n  formatVarDisplay(instance: Record<string, any>, displayTpl: string | undefined, instanceAlias: string) {\n    // 获取display=aaa${InstanceName}bbb${InstanceId}ccc\n    if (displayTpl) {\n      return displayTpl.replace(/\\$\\{(\\w+)\\}/g, (a, b) => {\n        if (!b || !this.InstanceAliasList.includes(b)) {\n          return '';\n        }\n        return this.getAliasValue(instance, b);\n      });\n    }\n    return this.getAliasValue(instance, instanceAlias);\n  }\n  /**\n   * @param query 模板变量配置填写的 Query 参数对象，由顶层将字符串转换为了对象\n   */\n  async metricFindQuery(query: MetricQuery, regex?: string) {\n    const { action, namespace, display, payload = {} } = query;\n    let { region, instancealias = this.templateQueryIdMap.instance } = query;\n    if (!action || !namespace) {\n      return [];\n    }\n    // 支持payload里传入模板变量\n    if (_.isObject(payload)) {\n      _.forEach(payload, (value, key) => {\n        payload[key] = _.isString(value) ? this.getVariable(value) : value;\n      });\n    }\n\n    // 查询地域列表\n    const regionQuery = action.match(/^DescribeRegions$/i);\n    if (regionQuery) {\n      return this.getRegions();\n    }\n\n    region = this.getVariable(region); // 将模板region转换为真实值\n\n    // 查询实例列表\n    if (region && action.match(/^DescribeInstances/i)) {\n      const result = await this.getVariableInstances(region, payload);\n      instancealias = this.InstanceAliasList.includes(instancealias) ? instancealias : this.templateQueryIdMap.instance;\n\n      const res = result.flatMap((item) => {\n        const insAlias = this.formatVarDisplay(item, display, instancealias);\n\n        item._InstanceAliasValue = insAlias; // FIXME:\n\n        if (!item[instancealias]) return [];\n        return [\n          {\n            text: insAlias,\n            value: item[this.templateQueryIdMap.instance],\n          },\n        ];\n      });\n\n      // 缓存全量实例列表\n      await instanceStorage.setInstance(this.service, result);\n      return res;\n    }\n\n    // 在instance实例的基础上查询其他数据\n    let instance = this.getVariable(query['instance']);\n    if (_.isArray(instance)) instance = instance[0]; // 有额外维度，仅支持实例单选情况\n    if (region && action && instance) {\n      try {\n        // instance = JSON.parse(instance);\n        const instanceCache = await instanceStorage.getInstance(this.service);\n\n        instance = _.cloneDeep(instanceCache.find((item) => item[this.templateQueryIdMap.instance] === instance)) ?? {};\n        // eslint-disable-next-line no-empty\n      } catch (error) {}\n      return this.fetchMetricData(action, region, instance, query);\n    }\n\n    return Promise.resolve([]);\n  }\n  // 获取指标数据\n  async fetchMetricData(action: string, region: string, instance: any, query?: any) {\n    return [];\n  }\n\n  /**\n   * 根据 Panel 的配置项，获取相应的监控数据\n   *\n   * @param options Panel 的配置参数\n   * @return 返回数据数组，示例如下\n   * [\n   *   {\n   *     \"target\": \"AccOuttraffic - ins-123\",\n   *     \"datapoints\": [\n   *       [861, 1450754160000],\n   *       [767, 1450754220000]\n   *     ]\n   *   }\n   * ]\n   */\n  async dimensionsFormat(dimKeys, ins, dimensionObject, target, service, options) {\n    for (let key of dimKeys) {\n      let keyTmp = key;\n      const invalidDim = this.InvalidDimensions || this.getInvalidDimensions(this, target[service]);\n      if (invalidDim[key]) {\n        // 从【维度中】的字段到【实例中】字段的映射。 { functionName: FunctionName }\n        keyTmp = invalidDim[key];\n        ins[key] = ins[keyTmp];\n      }\n\n      let extraDimValue = this.getVariable(target[service][keyTmp]);\n      if (this.queryMonitorExtraConfg[keyTmp]) {\n        const {\n          dim_KeyInStorage,\n          dim_KeyInTarget = keyTmp,\n          dim_KeyInMap,\n          dim_KeyInIns,\n        } = this.queryMonitorExtraConfg[keyTmp];\n        let extraIns = ReplaceVariable(this.templateSrv, options.scopedVars, target[service][dim_KeyInTarget], true);\n        let extraSourceMap: any = {};\n        try {\n          extraSourceMap = JSON.parse(extraIns); // 兼容json字符串的 形式\n        } catch (error) {\n          if (_.isArray(extraIns)) extraIns = extraIns[0]; // 如果多个，取第一个。除了实例ID 暂不支持其他纬度多选\n          const extraStorage = await instanceStorage.getExtraStorage(this.service, dim_KeyInStorage);\n\n          extraSourceMap =\n            extraStorage?.find((item) => {\n              if (_.isArray(item[dim_KeyInMap])) {\n                return item[dim_KeyInMap][0] === extraIns;\n              }\n              return item[dim_KeyInMap] === extraIns;\n            }) ?? {};\n        }\n        const isStringOrNumber = _.isString(extraSourceMap) || _.isNumber(extraSourceMap);\n        // 增加ins实例之外的alias，填入到ins._InstanceAliasValue\n        const insAlias = ins._InstanceAliasValue;\n        const otherAlias = isStringOrNumber ? extraSourceMap : extraSourceMap._InstanceAliasValue;\n        if (otherAlias && insAlias.indexOf(otherAlias) === -1) {\n          ins._InstanceAliasValue += ` - ${otherAlias}`;\n        }\n\n        extraDimValue = isStringOrNumber ? extraSourceMap : extraSourceMap?.[dim_KeyInIns || keyTmp];\n      } else {\n        ins._InstanceAliasValue += this.getOtherAlias(ins, target[service]);\n      }\n\n      if (\n        getTimeShiftInMs(target[service].timeshift) > 0 &&\n        ins._InstanceAliasValue.indexOf(target[service].timeshift) === -1\n      ) {\n        ins._InstanceAliasValue += `_${target[service].timeshift}`;\n      }\n      // 设置instance，针对额外的维度，需要注意模板变量的值\n      // ins[key] = ins[keyTmp] ?? extraDimValue;\n      ins[key] = this.getDimensionsVal(ins, keyTmp, extraDimValue);\n      // cynosdb产品接口返回维度和入参不一致\n      if (this.checkKeys.length > 0) {\n        this.checkKeys.forEach((Ekey) => {\n          ins[Ekey] = ins[key];\n        });\n      }\n      dimensionObject[key] = { Name: key, Value: ins[key] };\n    }\n    // 处理waf逻辑\n    const tt = this.getOwnDimension(dimensionObject, ins);\n    if (tt) {\n      return tt;\n    }\n    return dimensionObject;\n  }\n  getOwnDimension(dimensionObject: any, ins: any) {\n    return null;\n  }\n  getDimensionsVal(ins: Record<string, any>, key: string, extraDimValue: string) {\n    let dimVal = ins[key];\n    if (_.isEmpty(dimVal) && this.CandiateDimensions[key]) {\n      dimVal = ins[this.CandiateDimensions[key]];\n    }\n    return dimVal ?? extraDimValue;\n  }\n  query(options: any) {\n    const service = this.service!; // 强制声明非空\n\n    const queries = _.filter(options.targets, (item) => {\n      // 过滤无效的查询 target\n      return (\n        item.hide !== true &&\n        !!item.namespace &&\n        !!item[service].metricName &&\n        !_.isEmpty(ReplaceVariable(this.templateSrv, options.scopedVars, item[service].region, false)) &&\n        !_.isEmpty(ReplaceVariable(this.templateSrv, options.scopedVars, item[service].instance, true))\n      );\n    })\n      .reduce((prev, target) => {\n        if (getTimeShiftInMs(target[service].timeshift) > 0) {\n          const cloneTarget = _.cloneDeep(target);\n          cloneTarget[service].timeshift = '';\n          return [...prev, cloneTarget, target];\n        }\n        return [...prev, target];\n      }, [])\n      .map(async (target) => {\n        // 实例 instances 可能为模板变量，需先获取实际值\n        // 针对JSON字符串和id的形式，分开做处理\n        let instances = ReplaceVariable(this.templateSrv, options.scopedVars, target[service].instance, true);\n        const instanceCache = await instanceStorage.getInstance(this.service);\n        const timeshift = getTimeShiftInMs(target[service].timeshift);\n\n        instances = [].concat(instances).map((inst) => {\n          try {\n            return JSON.parse(inst); // 兼容json字符串的 形式\n          } catch (error) {\n            // 如果没拿到缓存，取默认实例组\n            if (!instanceCache) return this.getDefaultInsObj?.(inst);\n            return _.cloneDeep(instanceCache.find((item) => item[this.templateQueryIdMap.instance] === inst)) ?? {};\n          }\n        });\n        const region = ReplaceVariable(this.templateSrv, options.scopedVars, target[service].region, false);\n        const insInReq: any = [];\n        for (let ins of instances) {\n          const dimensionObject = target[service].dimensionObject;\n          // 处理dimensions的值\n          const dimKeys = Object.keys(dimensionObject);\n          const dimResult = await this.dimensionsFormat(dimKeys, ins, dimensionObject, target, service, options);\n\n          insInReq.push([{ Dimensions: GetDimensions(dimResult) }]);\n        }\n        const data = {\n          StartTime: moment(options.range.from).subtract(timeshift).format(),\n          EndTime: moment(options.range.to).subtract(timeshift).format(),\n          Period: target[service].period || 300,\n          Instances: _.flatMap(insInReq),\n          Namespace: target.namespace,\n          MetricName: target[service].metricName,\n        };\n        return this.getMonitorData(data, region, instances, target[service], options);\n      });\n\n    if (queries.length === 0) {\n      return [];\n    }\n\n    return Promise.all(queries)\n      .then((responses) => {\n        return _.flatten(responses);\n      })\n      .catch((error) => {\n        return [];\n      });\n  }\n  getDefaultInsObj(ins: string) {\n    return {} as any;\n  }\n  getInstanceReqConfig(selfIns: any) {\n    return {} as any;\n  }\n  getInvalidDimensions(selfIns: any, target?: any) {\n    return {} as any;\n  }\n  // 获取某个变量的实际值，this.templateSrv.replace() 函数返回实际值的字符串\n  getVariable(metric?: string) {\n    const rs = this.templateSrv.replace((metric || '').trim());\n    const valStr = rs.match(/\\{([\\w-,]+)\\}/);\n    // 判断是否为多选\n    if (valStr) {\n      return valStr[1].split(',');\n    }\n    return rs;\n  }\n\n  /**\n   * 获取 监控数据\n   * @param params 获取监控数据的请求参数\n   * @param region 地域信息\n   * @param instances 实例列表，用于对返回结果的匹配解析\n   */\n  getMonitorData(params, region, instances, target, options) {\n    const serviceInfo = GetServiceAPIInfo(region, 'monitor');\n    const timeshift = getTimeShiftInMs(target.timeshift);\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: params,\n      },\n      serviceInfo.service,\n      { action: 'GetMonitorData', region }\n    ).then((response) => {\n      return ParseQueryResult(response, instances, timeshift);\n    });\n  }\n\n  getRegions(): any {\n    return this.doRequest(\n      {\n        url: this.url + '/cvm',\n      },\n      'cvm',\n      { action: 'DescribeRegions' }\n    ).then((response) => {\n      return _.filter(\n        _.map(response.RegionSet || [], (item) => {\n          return {\n            text: item.RegionName,\n            value: item.Region,\n            RegionState: item.RegionState,\n          };\n        }),\n        (item) => item.RegionState === 'AVAILABLE'\n      );\n    });\n  }\n\n  getMetrics(region = 'ap-guangzhou'): Promise<any> {\n    const serviceInfo = GetServiceAPIInfo(region, 'monitor');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: {\n          Namespace: this.namespace,\n        },\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeBaseMetrics' }\n    ).then((response) => {\n      const res = _.filter(\n        _.filter(response.MetricSet || [], (item) => !(item.Namespace !== this.namespace || !item.MetricName))\n      );\n      const resFilterFn = this.MetricReqConfig.resultFilter;\n      if (resFilterFn) {\n        return res.map((item) => resFilterFn(item));\n      }\n      return res;\n    });\n  }\n\n  getInstances(region, params = {}) {\n    const {\n      service = this.service,\n      action,\n      responseField: field,\n      interceptor,\n    } = this.InstanceReqConfig || this.getInstanceReqConfig(this);\n    params =\n      service === 'waf'\n        ? { Offset: 0, Limit: 100, Edition: 'sparta-waf', ...params }\n        : { Offset: 0, Limit: 100, ...params };\n    const serviceInfo = GetServiceAPIInfo(region, service);\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: interceptor?.request ? interceptor.request(params) : params,\n      },\n      serviceInfo.service,\n      { region, action }\n    ).then((response) => {\n      // 处理异常，则不按正常的情况处理，直接抛出错误\n      if (response?.Error) {\n        console.error(response.Error);\n        return response;\n      }\n\n      let result;\n      // 先，field处理\n      if (field) {\n        result = _.get(response, field) ?? _.get(response, `Result.${field}`) ?? [];\n      }\n\n      // 后，拦截器处理\n      if (interceptor?.response) {\n        result = interceptor.response(result);\n      }\n      return result;\n    });\n  }\n\n  getVariableInstances(region, query = {}): Promise<any[]> {\n    let result: any[] = [];\n    const params = { ...{ Offset: 0, Limit: 100 }, ...query };\n\n    const {\n      service = this.service,\n      action,\n      responseField: field,\n      interceptor,\n    } = this.InstanceReqConfig || this.getInstanceReqConfig(this);\n\n    const serviceInfo = GetServiceAPIInfo(region, service);\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: interceptor?.request ? interceptor.request(params) : params,\n      },\n      serviceInfo.service,\n      { region, action }\n    ).then((response) => {\n      result = _.get(response, field) ?? _.get(response, `Result.${field}`) ?? [];\n      const total =\n        response.TotalCount ?? response.TotalCnt ?? response.TotalNumber ?? _.get(response, `Result.TotalCount`) ?? 0;\n      if (result.length >= total) {\n        return interceptor?.response ? interceptor.response(result) : result;\n      } else {\n        const param = SliceLength(total, params?.Limit || 100);\n        const promises: any[] = [];\n        _.forEach(param, (item) => {\n          promises.push(this.getInstances(region, { ...item, ...query }));\n        });\n        return Promise.all(promises)\n          .then((responses) => {\n            _.forEach(responses, (item) => {\n              result = _.concat(result, item);\n            });\n            return interceptor?.response ? interceptor.response(result) : result;\n          })\n          .catch((error) => {\n            return interceptor?.response ? interceptor.response(result) : result;\n          });\n      }\n    });\n  }\n\n  // 检查某变量字段是否有值\n  isValidConfigField(field: string) {\n    return field && field.length > 0;\n  }\n\n  testDatasource() {\n    // const { service = this.service, action } = this.InstanceReqConfig;\n    // const serviceInfo = GetServiceAPIInfo('ap-guangzhou', service);\n\n    if (!this.isValidConfigField(this.secretId)) {\n      return {\n        service: this.service,\n        status: 'error',\n        message: 'The SecretId/SecretKey field is required.',\n      };\n    }\n\n    return Promise.all([\n      this.getRegions(),\n      this.getMetrics(),\n      // this.doRequest(\n      //   {\n      //     url: this.url + serviceInfo.path,\n      //     data: {\n      //       Offset: 0,\n      //       Limit: 1,\n      //     },\n      //   },\n      //   service,\n      //   { region: 'ap-guangzhou', action },\n      // ),\n      this.getInstances('ap-guangzhou', {\n        Offset: 0,\n        Limit: 1,\n      }),\n    ])\n      .then((responses) => {\n        const cvmErr = _.get(responses, '[0].Error', {});\n        const monitorErr = _.get(responses, '[1].Error', {});\n        const serviceErr = _.get(responses, '[2].Error', {});\n        // const cvmAuthFail = _.get(cvmErr, 'Code', '').indexOf('AuthFailure') !== -1;\n        // const monitorAuthFail = _.get(monitorErr, 'Code', '').indexOf('AuthFailure') !== -1;\n        // const serviceAuthFail = _.get(serviceErr, 'Code', '').indexOf('AuthFailure') !== -1;\n        const cvmAuthFail = _.get(cvmErr, 'Code', '');\n        const monitorAuthFail = _.get(monitorErr, 'Code', '');\n        const serviceAuthFail = _.get(serviceErr, 'Code', '');\n        if (cvmAuthFail || monitorAuthFail || serviceAuthFail) {\n          const messages: any[] = [];\n          if (cvmAuthFail) {\n            messages.push(_.get(cvmErr, 'Code'));\n          }\n          if (monitorAuthFail) {\n            messages.push(_.get(monitorErr, 'Code'));\n          }\n          if (serviceAuthFail) {\n            messages.push(_.get(serviceErr, 'Code'));\n          }\n          const message = _.join(_.compact(_.uniq(messages)), '; ');\n          return {\n            service: this.service,\n            status: 'error',\n            message,\n          };\n        } else {\n          return {\n            namespace: this.namespace,\n            service: this.service,\n            status: 'success',\n            message: `Successfully queried the ${this.service} service.`,\n            title: 'Success',\n          };\n        }\n      })\n      .catch((error) => {\n        let message = `${this.service} service:`;\n        message += error.statusText ? error.statusText + '; ' : '';\n        if (_.get(error, 'data.error.code', '')) {\n          message += error.data.error.code + '. ' + error.data.error.message;\n        } else if (_.get(error, 'data.error', '')) {\n          message += error.data.error;\n        } else if (_.get(error, 'data', '')) {\n          message += error.data;\n        } else {\n          message += `Cannot connect to ${this.service} service.`;\n        }\n        return {\n          service: this.service,\n          status: 'error',\n          message: message,\n        };\n      });\n  }\n\n  async doRequest(options, service, signObj: any = {}) {\n    options = await GetRequestParams(\n      options,\n      service,\n      signObj,\n      this.secretId,\n      this.instanceSettings.id,\n      this.backendSrv\n    );\n    return this.backendSrv\n      .datasourceRequest(options)\n      .then((response) => {\n        return _.get(response, 'data.Response', {});\n      })\n      .catch((error) => {\n        throw error;\n      });\n  }\n}\n","import _ from 'lodash';\nimport { SERVICES } from '../tc_monitor';\n\n/* 从分页数据获取全量数据 */\nconst PageSize = 50;\nfunction getFieldsValue(value, fields) {\n  return fields.map((item) => _.get(value, item, _.get(value, `Result.${item}`, [])));\n}\n\nexport async function fetchAllFactory(fetcher: (args: any) => Promise<any>, _params: any, field: string | string[]) {\n  const params = { ..._.omit(_params, ['isOffsetPage']) };\n  params.Limit = params.Limit || PageSize; // 默认给个Limit大小为50\n  params.Offset = params.Offset ?? 0; // 默认给个Offset为0\n\n  // 第一次请求，获取总数\n  const rs = (await fetcher(params)) ?? {};\n  const fields = Array.isArray(field) ? field : [field];\n\n  // rs.TotalCount = rs.TotalCount ?? rs.Result.TotalCount ?? [];\n  // const { TotalCount } = rs;\n  const TotalCount = rs.TotalCount ?? rs.Result?.TotalCount ?? rs.TotalCnt ?? rs.Result?.TotalCnt ?? 0;\n  const firstLists = getFieldsValue(rs, fields);\n\n  if (TotalCount === 0 || firstLists[0].length === TotalCount) {\n    // 只有一页，结束\n    return firstLists;\n  }\n\n  // 批量请求\n  const delta = TotalCount - firstLists[0].length;\n  const batchCount = Math.ceil(delta / PageSize);\n  const pmList = new Array(batchCount).fill(0).map((_, index) => {\n    params.Offset = _params.isOffsetPage ? 1 + index : (1 + index) * params.Limit;\n    return fetcher(params);\n  });\n\n  // 合并\n  const resultList = await Promise.all(pmList); // [ {a: [], b[] }, { a: [], b:[] }]\n\n  return resultList.reduce((acc, cur) => {\n    const lists = getFieldsValue(cur, fields);\n    // [[], [], []] + [[], [], []]\n    acc.forEach((list, index) => list.push(...lists[index]));\n    return acc;\n  }, firstLists);\n}\n\n/**\n * 实例列表接口入参处理\n *\n * @param queries 表单键入内容\n * @param isFilter 是否需要设置为Filters格式\n */\nexport function instanceQueryParamsBaseParse(queries: any, isFilter: boolean) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    const Filters: any[] = [];\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          if (isFilter) {\n            Filters.push({ Name: key, Values: _.uniq(item).slice(0, 5) });\n          } else {\n            params[key] = _.uniq(item);\n          }\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          if (isFilter) {\n            Filters.push({ Name: key, Values: _.get(item, 'value', []).slice(0, 5) });\n          } else {\n            params[key] = _.get(item, 'value');\n          }\n        }\n      } else if (item !== null && item !== undefined && item !== '') {\n        if (isFilter) {\n          Filters.push({ Name: key, Values: item });\n        } else {\n          params[key] = item;\n        }\n      }\n    });\n    if (isFilter && Filters.length > 0) {\n      params.Filters = Filters;\n      return params;\n    }\n  }\n  return params;\n}\n\nexport function getNamesapceFromService(serviceName: string) {\n  return _.get(\n    _.find(SERVICES, (service) => service.service === serviceName),\n    'namespace'\n  );\n}\n\nexport function serviceGroupBy(\n  services: { service: string; label: string; namespace: string; href: string; groupName?: string }[]\n) {\n  const result = services.reduce((acc, cur) => {\n    const { namespace, label, groupName = label } = cur;\n\n    const existedGroup = acc.find((item) => item.label === groupName);\n    if (!existedGroup) {\n      acc.push({ label: groupName, value: groupName, items: [{ label, value: namespace }] });\n      return acc;\n    }\n\n    existedGroup.items.push({ label, value: namespace });\n    return acc;\n  }, [] as any[]);\n\n  // 将只有一个子元素的项目进行特殊处理\n  const rs = result.map((item) =>\n    item.items.length === 1 ? { label: item.items[0].label, value: item.items[0].value } : item\n  );\n  return rs;\n}\n\nexport const isTargetEqual = (newTargetString: string, oldTargetString: string, key: string) => {\n  try {\n    const newTarget = JSON.parse(newTargetString);\n    const oldTarget = JSON.parse(oldTargetString);\n    return newTarget[key] === oldTarget[key];\n  } catch (e) {\n    return newTargetString === oldTargetString;\n  }\n};\n\nexport const getTimeShiftInMs = (timeShift: any) => {\n  const parts = /^(\\d+)([d|h|m|s])$/.exec(timeShift);\n  if (!parts) {\n    return 0;\n  }\n  const amount = parseInt(parts[1], 10);\n  const unit = parts[2];\n  switch (unit) {\n    case 'd':\n      return amount * 86400 * 1000;\n    case 'h':\n      return amount * 3600 * 1000;\n    case 'm':\n      return amount * 60 * 1000;\n    case 's':\n      return amount * 1000;\n  }\n  return 0;\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","import coreModule from 'grafana/app/core/core_module';\nimport { DetailQueryConfig } from './types';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nfunction classFactory(detailConfig) {\n  return class QueryCtrl {\n    static _config: DetailQueryConfig;\n\n    /** @ngInject */\n    constructor($scope, $rootScope) {\n      Object.assign($scope, detailConfig);\n\n      $scope.getDropdown = (field) => {\n        const service = GetServiceFromNamespace($scope.namespace);\n        return $scope.datasource.getFilterDropdown(service, { field, region: $scope.region });\n      };\n    }\n  };\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"{{instanceDocUrl}}\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in fieldDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputNumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />    \n      <multi-condition\n        ng-if=\"field.type === 'inputNumberMulti'\"\n        type=\"'inputNumber'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        maxNum=\"field.max\"\n        minNum=\"field.min\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputMulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownMulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <gf-form-dropdown \n        ng-if=\"field.type === 'dropdown'\"\n        model=\"target.queries[field.key]\" \n        allow-custom=\"true\" \n        lookup-text=\"true\" \n        get-options=\"getDropdown(field.key)\" \n        css-class=\"min-width-10\"\n        on-change=\"onChange()\">\n      </gf-form-dropdown>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n      <gf-form-switch \n        ng-if=\"field.type === 'switch'\"\n        class=\"gf-form tc-switch\" \n        label-class=\"width-7\" \n        checked=\"target.queries[field.key]\" \n        switch-class=\"max-width-5\"\n      ></gf-form-switch>\n    </div>\n  </div>\n</div>\n  </div>\n`;\nfunction queryDDOFactory(QueryCtrl) {\n  return function queryDDO() {\n    return {\n      template: template,\n      controller: QueryCtrl,\n      restrict: 'E',\n      scope: {\n        target: '=',\n        showDetail: '=',\n        region: '=',\n        datasource: '=',\n        getDropdownOptions: '&',\n        onChange: '&',\n      },\n    };\n  };\n}\n\nexport default (name: string, config: DetailQueryConfig) => {\n  // QueryCtrl._config = config;\n  const newQueryIns = classFactory(config);\n  coreModule.directive(name, queryDDOFactory(newQueryIns));\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__8__;","interface DBEvent {\n  target: { result: any; error: any };\n}\n// 数据库结构\ninterface DBTypes {\n  store: StoreType;\n  name?: string;\n  version?: number;\n}\n// store表结构\ninterface StoreType {\n  name: string; // 表名\n  key: string; // 主键名\n  cursorIndex?: { name: string; unique: boolean }[]; // 索引列表\n}\n\n// 数据结构\n// {service: 'cvm', instance: [{ins: 23}]}\ninterface DataType {\n  service: string;\n  [x: string]: any; // 有产品需缓存其他列表\n}\n\n// interface UpdateProps {\n//   storeName: string;\n//   cursorKey: string;\n//   cursorValue?: any;\n//   data: any;\n// }\n\nconst store: StoreType = {\n  name: 'grafanaInstanceList',\n  key: 'service',\n};\nconst promisify = (request: any, type?: string) => {\n  return new Promise<any>((resolve, reject) => {\n    request.onsuccess = (event: DBEvent) => {\n      const returnMap: any = {\n        event: event.target.result,\n        request: request.result,\n        msg: '操作成功',\n      };\n      resolve(returnMap[type || 'msg']);\n    };\n    request.onerror = (event: DBEvent) => reject(event.target.error || '操作失败');\n  });\n};\n// 固定表名和数据库名\nclass IndexedDB {\n  name = 'grafanaDatabase';\n  version = 1;\n\n  constructor(props: DBTypes) {\n    const { name = 'database', version = 1, store } = props;\n    this.name = name;\n    this.version = version;\n\n    this.initDB(store);\n  }\n\n  /**\n   * 初始化数据库\n   * @param store 库表的结构\n   */\n  initDB(store: StoreType) {\n    const indexeddb = window.indexedDB || window.webkitIndexedDB || window.mozIndexedDB || window.msIndexedDB;\n    const request = indexeddb.open(this.name, this.version);\n\n    request.onupgradeneeded = (event: IDBVersionChangeEvent) => {\n      const db = (event.target as IDBOpenDBRequest).result;\n      if (db.objectStoreNames.contains(store.name)) {\n        // 存在表store\n      }\n\n      //  遍历store，设置数据表结构\n      db.createObjectStore(store.name, {\n        keyPath: store.key,\n      });\n    };\n    request.onerror = () => Promise.reject(new Error('初始化数据库失败'));\n    request.onsuccess = () => Promise.resolve('初始化数据库成功');\n  }\n\n  openDB() {\n    const indexeddb = window.indexedDB || window.webkitIndexedDB || window.mozIndexedDB || window.msIndexedDB;\n    const request = indexeddb.open(this.name, this.version);\n\n    return promisify(request, 'event');\n  }\n\n  /**\n   * 新增数据\n   * @param storeName 表名\n   * @param data 添加的数据\n   */\n  async insertData(storeName: string, data: any) {\n    try {\n      // console.time('insertData');\n      const db = await this.openDB();\n      const transaction = db.transaction(storeName, 'readwrite');\n      const objectStore = transaction.objectStore(storeName);\n\n      objectStore.add(data);\n      // console.timeEnd('insertData');\n\n      return new Promise((resolve, reject) => {\n        transaction.oncomplete = function () {\n          // console.timeEnd('insertData');\n          resolve('所有数据插入成功');\n        };\n\n        transaction.onerror = function (event) {\n          reject(event);\n        };\n      });\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n\n  /**\n   * 更新数据\n   * @param props 查询数据的参数以及要修改的值的参数\n   */\n  async addData(data: DataType, isCover?: boolean) {\n    try {\n      // console.log('addData');\n      const storeName = store.name; // 表名\n      const oldData = await this.getData(data.service);\n      const objectStore = await this.getObjectStore(storeName, 'readwrite');\n\n      if (!oldData) {\n        // 不存在则新建\n        this.insertData(storeName, data);\n      }\n      // 存在则更新\n      let newData: any = { ...oldData, ...data };\n      if (isCover) newData = data; // 需要覆盖之前内容\n      // 把更新过的对象放回数据库\n      const requestUpdate = objectStore.put(newData);\n      // console.timeEnd('updateData');\n      return promisify(requestUpdate);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n\n  /**\n   * 获取数据库的值，返回查询到的第一项\n   * @param storeName 表名/存储对象的键\n   * @param cursorKey key\n   * @param cursorValue 要查询索引的值\n   */\n  async getData(seviceName: string) {\n    try {\n      // console.time('getData');\n      const storeName = store.name;\n      const objectStore = await this.getObjectStore(storeName);\n      const request = objectStore.get(seviceName);\n      // console.timeEnd('getData');\n      return promisify(request, 'request');\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n  async getAllData(storeName: string) {\n    try {\n      // console.time('getAllData');\n      const objectStore = await this.getObjectStore(storeName);\n      const request = objectStore.getAll();\n      const result = await promisify(request, 'request');\n      // console.timeEnd('getAllData');\n      return result ? result : [];\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n  /**\n   * 获取对象仓库\n   * @param storeName 表名\n   * @param type readonly 或者 readwrite等\n   */\n  private async getObjectStore(storeName: string, type?: any): Promise<IDBObjectStore> {\n    try {\n      const db = await this.openDB();\n      return db.transaction(storeName, type).objectStore(storeName);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n}\n// console.log('testDDB')\n// const indexDB = new IndexedDB({store});\n// indexDB.addData({service: 'cvm', instance: [{ins: 23}]}).then(e=>{\n//   indexDB.getData('cvm').then(dd=>{console.log({dd})})\n// })\nexport default new IndexedDB({ store });\n","import indexedDB from './indexedDB';\nclass InstanceStorage {\n  // prefix = 'Datasource';\n  // storageKey = 'grafanaInstanceCache';\n  insKey = 'Instances';\n  cacheWay = '';\n  constructor() {}\n  setInstance(service: string, value: Record<string, any>) {\n    return this.setStorage(service, this.insKey, value, true);\n  }\n  async getInstance(service: string) {\n    return this.getStorage(service, this.insKey);\n  }\n  setExtraStorage(service: string, Ekey: string, EValue: Record<string, any>) {\n    return this.setStorage(service, Ekey, EValue, false);\n  }\n  async getExtraStorage(service: string, Ekey: string) {\n    return this.getStorage(service, Ekey);\n  }\n  private setStorage(serviceKey: string, key: string, value: Record<string, any>, isCover = false) {\n    // console.log('set', serviceKey, key, value);\n    return indexedDB.addData(\n      {\n        service: serviceKey,\n        [key]: value,\n      },\n      isCover\n    );\n  }\n  // 获取到模版变量信息\n  private async getStorage(service: string, key?: string) {\n    const storage = await indexedDB.getData(service);\n    // console.log('get', key, storage);\n    return key ? storage?.[key] : storage;\n  }\n}\nexport default new InstanceStorage();\n","import _ from 'lodash';\n\nexport const CKAFKAQueryDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为10，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceId',\n    enDescriptor: 'InstanceId',\n    cnDescriptor: '按照实例ID过滤',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SearchWord',\n    enDescriptor: 'SearchWord',\n    cnDescriptor: '按照实例名称过滤，支持模糊查询',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'TagKey',\n    enDescriptor: 'TagKey',\n    cnDescriptor: '匹配标签key值',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'Status',\n    enDescriptor: 'Status',\n    cnDescriptor: '实例的状态，不填默认返回全部',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '创建中', value: 0 },\n      { text: '运行中', value: 1 },\n      { text: '删除中', value: 2 },\n    ],\n  },\n];\n\nconst CKAFKA_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  topicId: '',\n  topicName: '',\n  consumerGroup: '',\n  partition: '',\n  queries: {\n    Offset: 0,\n    Limit: 10,\n    Status: [],\n    InstanceId: '',\n    SearchWord: '',\n    TagKey: '',\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\nconst CKAFKAInstanceAliasList = ['InstanceId', 'InstanceName'];\nconst CKAFKATopicAliasList = ['TopicId', 'TopicName'];\n// 保存在模板变量value中的key\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n  topicId: 'TopicId',\n  groupName: 'GroupName',\n  partition: 'PartitionId',\n};\n// 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key\nconst CKAFKAInvalidDemensions = new Proxy(\n  {\n    topicId: 'TopicId',\n    topicName: 'TopicName',\n    consumerGroup: 'GroupName',\n    partition: 'PartitionId',\n  },\n  {\n    get: (obj, prop) => {\n      if (String(prop).toLocaleLowerCase() === 'instanceid') return 'InstanceId';\n      return obj[prop];\n    },\n  }\n);\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  TopicList: 'TopicList',\n  GroupList: 'GroupList',\n  PartitionList: 'PartitionList',\n};\n\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  TopicId: {\n    dim_KeyInStorage: keyInStorage.TopicList,\n    dim_KeyInTarget: 'topicId',\n    dim_KeyInMap: templateQueryIdMap.topicId,\n  },\n  // topicName和topicId是同一个storage中的source，所以根据topicId帅选\n  TopicName: {\n    dim_KeyInStorage: keyInStorage.TopicList,\n    dim_KeyInTarget: 'topicId',\n    dim_KeyInMap: templateQueryIdMap.topicId,\n  },\n  GroupName: {\n    dim_KeyInStorage: keyInStorage.GroupList,\n    dim_KeyInTarget: 'consumerGroup',\n    dim_KeyInMap: templateQueryIdMap.groupName,\n  },\n  PartitionId: {\n    dim_KeyInStorage: keyInStorage.PartitionList,\n    dim_KeyInTarget: 'partition',\n    dim_KeyInMap: templateQueryIdMap.partition,\n  },\n};\nexport default CKAFKA_STATE;\nexport {\n  CKAFKAInstanceAliasList,\n  CKAFKATopicAliasList,\n  CKAFKAInvalidDemensions,\n  templateQueryIdMap,\n  keyInStorage,\n  queryMonitorExtraConfg,\n  GetInstanceQueryParams as CKAFKAGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/LOADBALANCE';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'loadBalanceQuery';\n\nconst ForwardTypes = [\n  { text: '通用的负载均衡', value: 1 },\n  { text: '传统的负载均衡', value: 0 },\n];\n\nconst OrderBy = [\n  { text: 'LoadBalancerName', value: 'LoadBalancerName' },\n  { text: 'CreateTime', value: 'CreateTime' },\n  { text: 'Domain', value: 'Domain' },\n  { text: 'LoadBalancerType', value: 'LoadBalancerType' },\n];\n\nconst OrderType = [\n  { text: '升序', value: 0 },\n  { text: '降序', value: 1 },\n];\n\nconst WithRs = [\n  { text: '没有绑定后端服务', value: 0 },\n  { text: '绑定后端服务', value: 1 },\n  { text: '查询全部', value: -1 },\n];\nconst LOADBALANCEFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n  },\n  {\n    key: 'LoadBalancerIds',\n    enDescriptor: 'LoadBalancer ID',\n    cnDescriptor: '实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerName',\n    enDescriptor: 'LoadBalancer Name',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'Forward',\n    enDescriptor: 'Forward',\n    cnDescriptor: '负载均衡实例类型',\n    link: '',\n    type: 'select',\n    list: ForwardTypes,\n  },\n  {\n    key: 'Domain',\n    enDescriptor: 'Domain',\n    cnDescriptor: '域名，腾讯云为负载均衡实例分配的域名，本参数仅对传统型公网负载均衡才有意义',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'LoadBalancerVips',\n    enDescriptor: 'LoadBalancer Vips',\n    cnDescriptor: '负载均衡实例的 VIP 地址',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'BackendPrivateIps',\n    enDescriptor: 'BackendPrivate Ips',\n    cnDescriptor: '负载均衡绑定的后端服务的内网 IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'BackendPublicIps',\n    enDescriptor: 'BackendPublic Ips',\n    cnDescriptor: '负载均衡绑定的后端服务的外网 IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'ProjectId',\n    enDescriptor: 'Project ID',\n    cnDescriptor: '负载均衡实例所属的项目 ID',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'Vpc ID',\n    cnDescriptor: '负载均衡实例所属私有网络',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SecurityGroup',\n    enDescriptor: 'Security Group',\n    cnDescriptor: '安全组ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'MasterZone',\n    enDescriptor: 'Master Zone',\n    cnDescriptor: '主可用区ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'WithRs',\n    enDescriptor: 'WithRs',\n    cnDescriptor: '负载均衡是否绑定后端服务',\n    link: '',\n    type: 'select',\n    list: WithRs,\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderBy,\n  },\n  {\n    key: 'OrderType',\n    enDescriptor: 'OrderByType',\n    cnDescriptor: '排序方式',\n    link: '',\n    type: 'select',\n    list: OrderType,\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/214/30685',\n  namespace,\n  fieldDescriptor: LOADBALANCEFieldsDescriptor,\n};\nconst LBFields = {\n  LoadBalancerIds: [],\n  Forward: undefined,\n  LoadBalancerName: '',\n  Domain: '',\n  LoadBalancerVips: [],\n  BackendPublicIps: [],\n  BackendPrivateIps: [],\n  Limit: 20,\n  Offset: 0,\n  ProjectId: undefined,\n  WithRs: {},\n  VpcId: '',\n  SecurityGroup: '',\n  MasterZone: '',\n  OrderBy: {},\n  OrderType: {},\n};\n\nconst LOADBALANCE_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'LoadBalancerId',\n  Port: '',\n  Protocol: '',\n  listener: '',\n  servers: '',\n  serverPort: '',\n  // listenerAlias: 'ListenerId',\n  queries: LBFields,\n};\n\n// function GetInstanceQueryParams(queries: any = {}) {\n//   const params: any = {};\n//   if (!_.isEmpty(queries)) {\n//     params.Limit = _.get(queries, 'Limit', 20) || 20;\n//     params.Offset = _.get(queries, 'Offset', 0) || 0;\n//     queries = _.omit(queries, ['Offset', 'Limit']);\n//     _.forEach(queries, (item: any, key) => {\n//       if (_.isArray(item)) {\n//         item = _.compact(item);\n//         if (item.length > 0) {\n//           params[key] = _.uniq(item);\n//         }\n//       } else if (_.isObject(item)) {\n//         if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n//           params[key] = _.get(item, 'value');\n//         }\n//       } else if (_.isNumber(item) || !_.isEmpty(item)) {\n//         params[key] = item;\n//       }\n//     });\n//   }\n//   return params;\n// }\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\nconst InstanceAliasList = ['LoadBalancerId', 'LoadBalancerName', 'LoadBalancerVips'];\nconst LOADBALANCEListenerAliasList = ['ListenerId', 'ListenerName', 'Port'];\nconst LOADBALANCEServerAliasList = ['PrivateIpAddresses', 'InstanceId'];\nconst LOADBALANCEVALIDDIMENSIONS = {\n  vip: 'LoadBalancerVips',\n  // vpcId: 'NumericalVpcId',\n  loadBalancerPort: 'Port',\n  protocol: 'Protocol',\n  lanIp: 'PrivateIpAddresses',\n  port: 'ServerPort',\n};\n// 对于ipv6类型，vip应该取AddressIPv6。\nconst CANDIATEDIMENSIONS = {\n  LoadBalancerVips: 'AddressIPv6',\n};\n// dimensionObject[item] = { Name: item, Value: '' };\n// const LOADBALANCE_INSTANCE_DIMENSIONOBJECTS = {\n//   vip: { Name: 'vip', Value: '' },\n// };\n// const LOADBALANCE_LISTENER_DIMENSIONOBJECTS = {\n//   vip: { Name: 'vip', Value: '' },\n//   loadBalancerPort: { Name: 'loadBalancerPort', Value: '' },\n//   protocol: { Name: 'protocol', Value: '' },\n// };\nconst templateQueryIdMap = {\n  instance: 'LoadBalancerId',\n  listener: 'ListenerId',\n  servers: 'PrivateIpAddresses',\n  port: 'Port',\n};\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  listener: 'ListenerList',\n  servers: 'ServersList',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  Port: {\n    dim_KeyInStorage: keyInStorage.listener,\n    dim_KeyInTarget: 'listener',\n    dim_KeyInMap: templateQueryIdMap.listener,\n  },\n  Protocol: {\n    dim_KeyInStorage: keyInStorage.listener,\n    dim_KeyInTarget: 'listener',\n    dim_KeyInMap: templateQueryIdMap.listener,\n  },\n  PrivateIpAddresses: {\n    dim_KeyInStorage: keyInStorage.servers,\n    dim_KeyInTarget: 'servers',\n    dim_KeyInMap: templateQueryIdMap.servers,\n  },\n  ServerPort: {\n    dim_KeyInStorage: keyInStorage.servers,\n    dim_KeyInTarget: 'serverPort',\n    dim_KeyInIns: 'Port',\n    dim_KeyInMap: templateQueryIdMap.port,\n  },\n};\nexport default LOADBALANCE_STATE;\nexport {\n  LOADBALANCEFieldsDescriptor,\n  InstanceAliasList,\n  LOADBALANCEListenerAliasList,\n  LOADBALANCEServerAliasList,\n  LOADBALANCEVALIDDIMENSIONS,\n  templateQueryIdMap,\n  CANDIATEDIMENSIONS,\n  // LOADBALANCE_LISTENER_DIMENSIONOBJECTS,\n  // LOADBALANCE_INSTANCE_DIMENSIONOBJECTS,\n  queryMonitorExtraConfg,\n  keyInStorage,\n  queryEditorConfig,\n  namespace,\n  queryEditorName,\n  GetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/TDMQ';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'tdmqQuery';\n\nconst TDMQInvalidDemensions = {\n  tenantId: 'ClusterId',\n  tenant: 'ClusterId',\n  topicName: 'TopicName',\n  environmentId: 'EnvironmentId',\n};\n\n// 需和文件名对应\nconst TDMQInstanceAliasList = ['ClusterId', 'ClusterName'];\n\nconst templateQueryIdMap = {\n  instance: 'ClusterId',\n  topicName: 'TopicName',\n  environmentId: 'EnvironmentId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst TDMQFilterFields = {\n  Limit: 20,\n  Offset: 0,\n};\n\nconst TDMQFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n];\n\nconst CDNPROVINCE_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'ClusterId',\n  // 此处key应该是经过TDMQInvalidDemensions处理后的\n  topicName: '',\n  environmentId: '',\n  queries: TDMQFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nconst regionSupported = [\n  { value: 'ap-beijing' },\n  { value: 'ap-chengdu' },\n  { value: 'ap-chongqing' },\n  { value: 'ap-guangzhou' },\n  { value: 'ap-shenzhen-fsi' },\n  { value: 'ap-shanghai' },\n  { value: 'ap-shanghai-fsi' },\n  { value: 'ap-nanjing' },\n  { value: 'ap-hongkong' },\n  { value: 'ap-tokyo' },\n  { value: 'ap-seoul' },\n  { value: 'ap-singapore' },\n  { value: 'ap-bangkok' },\n  { value: 'ap-jakarta' },\n  { value: 'ap-mumbai' },\n  { value: 'eu-frankfurt' },\n  { value: 'eu-moscow' },\n  { value: 'na-ashburn' },\n  { value: 'na-siliconvalley' },\n  { value: 'na-toronto' },\n];\nfunction modifyDimensons(metricItem) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    if (item.Dimensions.indexOf('topicName') !== -1 && item.Dimensions.indexOf('environmentId') === -1) {\n      item.Dimensions.push('environmentId');\n    }\n  });\n  return metricTmp;\n}\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  topicName: 'topicName',\n  environmentId: 'environmentId',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  TopicName: {\n    dim_KeyInStorage: keyInStorage.topicName,\n    dim_KeyInTarget: 'topicName',\n    dim_KeyInMap: templateQueryIdMap.topicName,\n  },\n  EnvironmentId: {\n    dim_KeyInStorage: keyInStorage.environmentId,\n    dim_KeyInTarget: 'environmentId',\n    dim_KeyInMap: templateQueryIdMap.environmentId,\n  },\n};\nexport default CDNPROVINCE_STATE;\nexport {\n  TDMQFilterFieldsDescriptor,\n  templateQueryIdMap,\n  TDMQInstanceAliasList,\n  TDMQInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryMonitorExtraConfg,\n  keyInStorage,\n  modifyDimensons,\n  regionSupported,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as TDMQGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/GSE';\nconst fleetId = 'FleetId'; // 为和cvm其他产品保持一致，即将string[]改为Array<{fleetid: xxx}>,在此声明key\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'gseQuery';\n\nconst GSEInvalidDemensions = {\n  instanceid: 'InstanceId',\n  fleetid: 'FleetId',\n  queuename: 'Name',\n};\n\n// 需和文件名对应\nconst GSEInstanceAliasList = ['InstanceId', 'PrivateIpAddress', 'IpAddress'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n  Name: 'Name',\n  FleetId: fleetId,\n};\n\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  fleet: 'fleet', // 实例队列\n  queue: 'queueName', // 会话队列\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  FleetId: {\n    dim_KeyInStorage: keyInStorage.fleet,\n    dim_KeyInTarget: 'FleetId',\n    dim_KeyInMap: templateQueryIdMap.FleetId,\n  },\n  Name: {\n    dim_KeyInStorage: keyInStorage.queue,\n    dim_KeyInTarget: 'Name',\n    dim_KeyInMap: templateQueryIdMap.Name,\n  },\n};\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst GSEFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  InstanceId: '',\n  FleetId: '',\n};\n\nconst GSEFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceId',\n    enDescriptor: 'resourceName',\n    cnDescriptor: '资源名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'FleetId',\n    enDescriptor: 'tagKey',\n    cnDescriptor: '标签键',\n    link: '',\n    type: 'input',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/1165/42604',\n  namespace,\n  fieldDescriptor: GSEFilterFieldsDescriptor,\n};\n\nconst GSE_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  FleetId: '', //  服务器实例\n  Name: '', // 队列名称\n  queries: GSEFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\n// regions for dropdown\nconst regionSupported = [\n  { value: 'ap-bangkok' },\n  { value: 'ap-beijing' },\n  { value: 'ap-chengdu' },\n  // { value: 'ap-chongqing' },\n  { value: 'ap-guangzhou' },\n  { value: 'ap-hongkong' },\n  { value: 'ap-mumbai' },\n  { value: 'ap-seoul' },\n  { value: 'ap-nanjing' },\n  { value: 'ap-shanghai' },\n  // { value: 'ap-shanghai-fsi' },\n  // { value: 'ap-shenzhen-fsi' },\n  { value: 'ap-singapore' },\n  { value: 'ap-tokyo' },\n  { value: 'eu-frankfurt' },\n  { value: 'na-ashburn' },\n  { value: 'na-siliconvalley' },\n  // { value: 'na-toronto' },\n];\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = item.Dimensions.map((v) => GSEInvalidDemensions[v] || v);\n  });\n  return metricTmp;\n}\nexport default GSE_STATE;\nexport {\n  GSEFilterFieldsDescriptor,\n  templateQueryIdMap,\n  GSEInstanceAliasList,\n  GSEInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  regionSupported,\n  modifyDimensons,\n  queryMonitorExtraConfg,\n  fleetId,\n  keyInStorage,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as GSEGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { isArray, cloneDeep } from 'lodash';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/TDMYSQL';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'dcdbQuery';\n\nconst DCDBInvalidDemensions = {\n  nodeid: 'NodeId',\n  instanceid: 'InstanceId',\n  shardid: 'ShardInstanceId',\n  ShardId: 'ShardInstanceId',\n};\n\n// 需和文件名对应\nconst DCDBInstanceAliasList = ['InstanceId', 'InstanceName'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n  NodeId: 'NodeId',\n  ShardInstanceId: 'ShardInstanceId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst DCDBFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  InstanceIds: [],\n  SearchName: '',\n  SearchKey: '',\n  ProjectIds: [],\n  // IsFilterVpc\n  VpcId: '',\n  SubnetId: '',\n\n  OrderBy: {},\n  OrderByType: {},\n  // IsFilterExcluster: {},\n  ExclusterType: {},\n\n  ExclusterIds: [],\n  FilterInstanceType: {},\n};\n\nconst DCDBFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceIds',\n    enDescriptor: 'InstanceIds',\n    cnDescriptor: '实例 ID 查询',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'SearchName',\n    enDescriptor: 'SearchName',\n    cnDescriptor: '搜索的字段名,当前支持的值有：instancename、vip、all',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SearchKey',\n    enDescriptor: 'SearchKey',\n    cnDescriptor: '搜索的关键字',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'ProjectIds',\n    enDescriptor: 'ProjectIds',\n    cnDescriptor: '按项目 ID 查询',\n    link: '',\n    type: 'inputNumberMulti',\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'VpcId',\n    cnDescriptor: '私有网络 ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SubnetId',\n    enDescriptor: 'SubnetId',\n    cnDescriptor: '私有网络的子网 ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'projectId', value: 'projectId' },\n      { text: 'createtime', value: 'createtime' },\n      { text: 'instancename', value: 'instancename' },\n    ],\n  },\n  {\n    key: 'OrderByType',\n    enDescriptor: 'OrderByType',\n    cnDescriptor: '私有网络 ID',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'desc', value: 'desc' },\n      { text: 'asc', value: 'asc' },\n    ],\n  },\n  {\n    key: 'ExclusterType',\n    enDescriptor: 'ExclusterType',\n    cnDescriptor: '集群类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '非独享集群', value: 1 },\n      { text: '独享集群', value: 2 },\n      { text: '全部', value: 0 },\n      { text: 'asc', value: 'asc' },\n    ],\n  },\n  {\n    key: 'ExclusterIds',\n    enDescriptor: 'ExclusterIds',\n    cnDescriptor: '独享集群ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'FilterInstanceType',\n    enDescriptor: 'FilterInstanceType',\n    cnDescriptor: '实例类型过滤',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '独享实例', value: 1 },\n      { text: '主实例', value: 2 },\n      { text: '灾备实例', value: 3 },\n    ],\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/557/16140',\n  namespace,\n  fieldDescriptor: DCDBFilterFieldsDescriptor,\n};\n\nconst DCDB_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  ShardId: '',\n  NodeId: '',\n  queries: DCDBFilterFields,\n};\nconst modifyMetricConf = {\n  shardid: 'ShardId',\n  instanceid: 'InstanceId',\n  nodeid: 'NodeId',\n};\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = item.Dimensions.map((v) => modifyMetricConf[v] || v);\n  });\n  return metricTmp;\n}\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params = instanceQueryParamsBaseParse(queries, false);\n  // 特殊处理\n  params.IsFilterVpc = false;\n  params.IsFilterExcluster = false;\n  if (params.VpcId || params.SubnetId) params.IsFilterVpc = true;\n  if (params.ExclusterType) params.IsFilterExcluster = true;\n  if (isArray(params.FilterInstanceType)) params.FilterInstanceType = params.FilterInstanceType.join(',');\n  return params;\n}\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  NodeId: 'NodeId',\n  ShardInstanceId: 'ShardId',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  NodeId: {\n    dim_KeyInStorage: keyInStorage.NodeId,\n    dim_KeyInTarget: 'NodeId',\n    dim_KeyInMap: templateQueryIdMap.NodeId,\n  },\n  ShardInstanceId: {\n    dim_KeyInStorage: keyInStorage.ShardInstanceId,\n    dim_KeyInTarget: 'ShardId',\n    dim_KeyInMap: templateQueryIdMap.ShardInstanceId,\n  },\n};\n// 和其他产品的展示保持一致\nconst regionSupported = [\n  { text: '华北地区(北京)', value: 'ap-beijing' },\n  { text: '西南地区(成都)', value: 'ap-chengdu' },\n  { text: '西南地区(重庆)', value: 'ap-chongqing' },\n  { text: '华南地区(广州)', value: 'ap-guangzhou' },\n  { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n  { text: '亚太南部(孟买)', value: 'ap-mumbai' },\n  { text: '华东地区(南京)', value: 'ap-nanjing' },\n  { text: '华东地区(上海)', value: 'ap-shanghai' },\n  { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },\n  { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n  { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n  { text: '亚太东北(东京)', value: 'ap-tokyo' },\n  { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },\n  { text: '美国东部(弗吉尼亚)', value: 'na-ashburn' },\n  { text: '美国西部(硅谷)', value: 'na-siliconvalley' },\n  { text: '北美地区(多伦多)', value: 'na-toronto' },\n];\nexport default DCDB_STATE;\nexport {\n  DCDBFilterFieldsDescriptor,\n  templateQueryIdMap,\n  DCDBInstanceAliasList,\n  DCDBInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  regionSupported,\n  keyInStorage,\n  modifyDimensons,\n  queryMonitorExtraConfg,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as DCDBGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\nconst namespace = 'QCE/REDIS_MEM';\nconst BillingMode = [\n  { text: '按量计费', value: 'postpaid' },\n  { text: '包年包月', value: 'prepaid' },\n];\n\nconst AutoRenew = [\n  { text: '手动续费', value: 0 },\n  { text: '自动续费', value: 1 },\n  { text: '明确不自动续费', value: 2 },\n];\n\nconst Status = [\n  { text: '待初始化', value: 0 },\n  { text: '流程执行中', value: 1 },\n  { text: '运行中', value: 2 },\n  { text: '已隔离', value: -2 },\n  { text: '待删除', value: -3 },\n];\n\nconst TypeVersion = [\n  { text: '单机版', value: 1 },\n  { text: '主从版', value: 2 },\n  { text: '集群版', value: 3 },\n];\n\nconst OrderBy = [\n  { text: 'projectId', value: 'projectId' },\n  { text: 'instancename', value: 'instancename' },\n  { text: 'createtime', value: 'createtime' },\n  { text: 'type', value: 'type' },\n  { text: 'curDeadline', value: 'curDeadline' },\n];\n\nconst OrderType = [\n  { text: '升序', value: 0 },\n  { text: '降序', value: 1 },\n];\nconst Type = [\n  { text: 'Redis老集群版', value: 1 },\n  { text: 'Redis 2.8主从版', value: 2 },\n  { text: 'CKV主从版', value: 3 },\n  { text: 'CKV集群版', value: 4 },\n  { text: 'Redis 2.8单机版', value: 5 },\n  { text: 'Redis 4.0主从版', value: 6 },\n  { text: 'Redis 4.0集群版', value: 7 },\n  { text: 'Redis5.0主从版', value: 8 },\n  { text: 'Redis5.0集群版', value: 9 },\n];\n\nconst RedisFields = {\n  InstanceId: '',\n  OrderBy: '',\n  OrderType: null,\n  VpcIds: [],\n  SubnetIds: [],\n  ProjectIds: [],\n  SearchKey: '',\n  InstanceName: '',\n  UniqVpcIds: [],\n  UniqSubnetIds: [],\n  Status: [],\n  TypeVersion: null,\n  EngineName: '',\n  AutoRenew: null,\n  BillingMode: '',\n  Type: null,\n};\n\nconst RedisMemFieldsDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceId',\n    enDescriptor: 'InstancesId',\n    cnDescriptor: '实例id',\n    type: 'input',\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderBy,\n  },\n  {\n    key: 'OrderType',\n    enDescriptor: 'OrderType',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderType,\n  },\n  {\n    key: 'VpcIds',\n    enDescriptor: 'VpcIds',\n    cnDescriptor: '私有网络ID数组，数组下标从0开始，如果不传则默认选择基础网络，如：47525',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'SubnetIds',\n    enDescriptor: 'SubnetIds',\n    cnDescriptor: '子网ID数组，数组下标从0开始，如：56854',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'ProjectIds',\n    enDescriptor: 'ProjectIds',\n    cnDescriptor: '项目ID 组成的数组',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'SearchKey',\n    enDescriptor: 'SearchKey',\n    cnDescriptor: '查找实例的ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'InstanceName',\n    enDescriptor: 'InstanceName',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'UniqVpcIds',\n    enDescriptor: 'UniqVpcIds',\n    cnDescriptor: '私有网络ID数组，数组下标从0开始，如果不传则默认选择基础网络，如：vpc-sad23jfdfk',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'UniqSubnetIds',\n    enDescriptor: 'UniqSubnetIds',\n    cnDescriptor: '子网ID数组，数组下标从0开始，如：subnet-fdj24n34j2',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'Status',\n    enDescriptor: 'Status',\n    cnDescriptor: '实例状态',\n    multiple: true,\n    type: 'select',\n    list: Status,\n  },\n  {\n    key: 'TypeVersion',\n    enDescriptor: 'TypeVersion',\n    cnDescriptor: '类型版本',\n    link: '',\n    type: 'select',\n    list: TypeVersion,\n  },\n  {\n    key: 'EngineName',\n    enDescriptor: 'EngineName',\n    cnDescriptor: '引擎信息：Redis-2.8，Redis-4.0，CKV',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'AutoRenew',\n    enDescriptor: 'AutoRenew',\n    cnDescriptor: '续费模式',\n    multiple: true,\n    type: 'select',\n    list: AutoRenew,\n  },\n  {\n    key: 'BillingMode',\n    enDescriptor: 'BillingMode',\n    cnDescriptor: '计费模式：postpaid-按量计费；prepaid-包年包月',\n    link: '',\n    type: 'select',\n    list: BillingMode,\n  },\n  {\n    key: 'Type',\n    enDescriptor: 'Type',\n    cnDescriptor: '实例类型',\n    link: '',\n    type: 'select',\n    list: Type,\n  },\n];\n\nconst REDISMEM_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: { ...RedisFields },\n  rnodeid: '',\n  pnodeid: '',\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        // select 单选\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\nconst REDISMEMInstanceAliasList = ['InstanceId', 'InstanceName', 'WanIp'];\n\nconst RedisMemInvalidDemensions = {\n  instanceid: 'InstanceId',\n  rnodeid: 'rnodeid',\n  pnodeid: 'pnodeid',\n};\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n  rnodeid: 'rnodeid',\n  pnodeid: 'pnodeid',\n};\n\nconst NodeType = ['Redis', 'Proxy'];\n\nexport default REDISMEM_STATE;\nexport {\n  RedisMemFieldsDescriptor,\n  RedisMemInvalidDemensions,\n  REDISMEMInstanceAliasList,\n  templateQueryIdMap,\n  namespace,\n  NodeType,\n  GetInstanceQueryParams as REDISMEMGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/RABBITMQ';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'tdmqQuery';\n\nconst TDMQInvalidDemensions = {\n  instanceid: 'InstanceId',\n  node: 'NodeName',\n};\n\n// 需和文件名对应\nconst TDMQRABBITMQInstanceAliasList = ['InstanceId', 'InstanceName'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n  node: 'NodeName',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst TDMQFilterFields = {\n  Limit: 20,\n  Offset: 0,\n};\n\nconst TDMQFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n];\n\nconst TDMQ_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  // 此处key应该是经过TDMQInvalidDemensions处理后的\n  node: '',\n  queries: TDMQFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nconst regionSupported = [\n  { value: 'ap-beijing' },\n  { value: 'ap-chengdu' },\n  { value: 'ap-chongqing' },\n  { value: 'ap-guangzhou' },\n  { value: 'ap-shenzhen-fsi' },\n  { value: 'ap-shanghai' },\n  { value: 'ap-shanghai-fsi' },\n  { value: 'ap-nanjing' },\n  { value: 'ap-hongkong' },\n  { value: 'ap-tokyo' },\n  { value: 'ap-seoul' },\n  { value: 'ap-singapore' },\n  { value: 'ap-bangkok' },\n  { value: 'ap-jakarta' },\n  { value: 'ap-mumbai' },\n  { value: 'eu-frankfurt' },\n  { value: 'eu-moscow' },\n  { value: 'na-ashburn' },\n  { value: 'na-siliconvalley' },\n  { value: 'na-toronto' },\n];\n\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  node: 'NodeName',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  NodeName: {\n    dim_KeyInStorage: keyInStorage.node,\n    dim_KeyInTarget: 'node',\n    dim_KeyInMap: templateQueryIdMap.node,\n  },\n};\nexport default TDMQ_STATE;\nexport {\n  TDMQFilterFieldsDescriptor,\n  templateQueryIdMap,\n  TDMQRABBITMQInstanceAliasList,\n  TDMQInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryMonitorExtraConfg,\n  keyInStorage,\n  regionSupported,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as TDMQGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { FildDescriptorType } from '../_base/types';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/ROCKETMQ';\n\nconst TDMQInvalidDemensions = {\n  tenant: 'ClusterId',\n  namespace: 'NamespaceId',\n  group: 'Name',\n};\n\n// 需和文件名对应\nconst TDMQROCKETMQInstanceAliasList = ['ClusterId', 'ClusterName'];\n\nconst templateQueryIdMap = {\n  instance: 'ClusterId',\n  namespace: 'NamespaceId',\n  group: 'Name',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst TDMQFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  instanceIdsChecked: false,\n  filtersChecked: true,\n  ClusterIdList: [''],\n  Filters: {\n    includeVip: { text: '是', value: 'true' },\n  },\n};\n\nconst TDMQFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'includeVip',\n    enDescriptor: 'includeVip',\n    cnDescriptor: '包含专享集群',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '是', value: 'true' },\n      { text: '否', value: 'false' },\n    ],\n  },\n];\n\nconst TDMQ_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'ClusterId',\n  // 此处key应该是经过TDMQInvalidDemensions处理后的\n  namespace: '',\n  group: '',\n  queries: TDMQFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    if (queries.instanceIdsChecked) {\n      if (_.isArray(queries.ClusterIdList)) {\n        const ClusterIdList = _.compact(queries.ClusterIdList);\n        if (_.uniq(ClusterIdList).length > 0) {\n          params.ClusterIdList = _.uniq(ClusterIdList).slice(0, 100);\n        }\n      }\n    } else if (queries.filtersChecked) {\n      const Filters: any[] = [];\n      _.forEach(queries.Filters, (item: any, key) => {\n        if (Filters.length > 9) {\n          return;\n        }\n        if (_.isArray(item)) {\n          item = _.compact(item);\n          if (item.length > 0) {\n            Filters.push({ Name: key, Values: _.uniq(item).slice(0, 5) });\n          }\n        } else if (_.isObject(item)) {\n          if (!_.isEmpty(_.get(item, 'value', []))) {\n            Filters.push({ Name: key, Values: [_.get(item, 'value', [])].slice(0, 5) });\n          }\n        }\n      });\n      if (Filters.length > 0) {\n        params.Filters = Filters;\n      }\n    }\n  }\n  return params;\n}\nconst regionSupported = [\n  { value: 'ap-beijing' },\n  { value: 'ap-chengdu' },\n  { value: 'ap-chongqing' },\n  { value: 'ap-guangzhou' },\n  { value: 'ap-shenzhen-fsi' },\n  { value: 'ap-shanghai' },\n  { value: 'ap-shanghai-fsi' },\n  { value: 'ap-nanjing' },\n  { value: 'ap-hongkong' },\n  { value: 'ap-tokyo' },\n  { value: 'ap-seoul' },\n  { value: 'ap-singapore' },\n  { value: 'ap-bangkok' },\n  { value: 'ap-jakarta' },\n  { value: 'ap-mumbai' },\n  { value: 'eu-frankfurt' },\n  { value: 'eu-moscow' },\n  { value: 'na-ashburn' },\n  { value: 'na-siliconvalley' },\n  { value: 'na-toronto' },\n];\n\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  namespace: 'NamespaceId',\n  group: 'Name',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  NamespaceId: {\n    dim_KeyInStorage: keyInStorage.namespace,\n    dim_KeyInTarget: 'namespace',\n    dim_KeyInMap: templateQueryIdMap.namespace,\n  },\n  Name: {\n    dim_KeyInStorage: keyInStorage.group,\n    dim_KeyInTarget: 'group',\n    dim_KeyInMap: templateQueryIdMap.group,\n  },\n};\nexport default TDMQ_STATE;\nexport {\n  TDMQFilterFieldsDescriptor,\n  templateQueryIdMap,\n  TDMQROCKETMQInstanceAliasList,\n  TDMQInvalidDemensions,\n  namespace,\n  queryMonitorExtraConfg,\n  keyInStorage,\n  regionSupported,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as TDMQROCKETMQGetInstanceQueryParams,\n};\n","import { t } from '../../locale';\n// name (产品名称), service（对应的真实service）\ninterface ServiceType {\n  service: string;\n  label: string;\n  namespace: string;\n  href: string;\n  groupName?: string;\n  hideRegion?: boolean;\n}\nconst SERVICES: ServiceType[] = [\n  {\n    service: 'cvm',\n    get label() {\n      return t('CVM');\n    },\n    namespace: 'QCE/CVM',\n    href: 'https://cloud.tencent.com/document/api/213/15688',\n  },\n  {\n    service: 'cdb',\n    get label() {\n      return t('CDB');\n    },\n    namespace: 'QCE/CDB',\n    href: 'https://cloud.tencent.com/document/api/236/15829',\n    get groupName() {\n      return t('cloud_database');\n    },\n  },\n  {\n    service: 'mongoDB',\n    get label() {\n      return t('CMONGO');\n    },\n    namespace: 'QCE/CMONGO',\n    href: 'https://cloud.tencent.com/document/api/240/38568',\n    get groupName() {\n      return t('cloud_database');\n    },\n  },\n  {\n    service: 'postgres',\n    get label() {\n      return t('POSTGRES');\n    },\n    namespace: 'QCE/POSTGRES',\n    href: 'https://cloud.tencent.com/document/product/248/45105',\n    get groupName() {\n      return t('cloud_database');\n    },\n  },\n  {\n    service: 'redis',\n    get label() {\n      return t('REDIS');\n    },\n    namespace: 'QCE/REDIS',\n    href: 'https://cloud.tencent.com/document/product/248/45110',\n    get groupName() {\n      return t('cloud_database');\n    },\n  },\n  {\n    service: 'redisMem',\n    get label() {\n      return t('REDIS_MEM');\n    },\n    namespace: 'QCE/REDIS_MEM',\n    href: 'https://cloud.tencent.com/document/product/248/49729',\n    get groupName() {\n      return t('cloud_database');\n    },\n  },\n  {\n    service: 'sqlserver',\n    get label() {\n      return t('SQLSERVER');\n    },\n    namespace: 'QCE/SQLSERVER',\n    href: 'https://cloud.tencent.com/document/product/248/45146',\n    get groupName() {\n      return t('cloud_database');\n    },\n  },\n  {\n    service: 'cynosdbMysql',\n    get label() {\n      return t('CYNOSDB_MYSQL');\n    },\n    namespace: 'QCE/CYNOSDB_MYSQL',\n    href: 'https://cloud.tencent.com/document/product/248/45106',\n    get groupName() {\n      return t('cloud_database');\n    },\n  },\n  {\n    service: 'tcaplus',\n    get label() {\n      return t('TCAPLUS');\n    },\n    namespace: 'QCE/TCAPLUS',\n    href: 'https://cloud.tencent.com/document/product/248/45107',\n    get groupName() {\n      return t('cloud_database');\n    },\n  },\n  {\n    service: 'dcdb',\n    get label() {\n      return t('TDMYSQL');\n    },\n    namespace: 'QCE/TDMYSQL',\n    href: 'https://cloud.tencent.com/document/product/248/45108',\n  },\n  {\n    service: 'pcx',\n    get label() {\n      return t('PCX');\n    },\n    namespace: 'QCE/PCX',\n    href: 'https://cloud.tencent.com/document/product/215/5181',\n    get groupName() {\n      return t('virtual_private_cloud');\n    },\n  },\n  {\n    service: 'bwp',\n    get label() {\n      return t('BWP');\n    },\n    namespace: 'QCE/BWP',\n    href: 'https://cloud.tencent.com/document/api/215/19209',\n    get groupName() {\n      return t('virtual_private_cloud');\n    },\n  },\n  {\n    service: 'natGateway',\n    get label() {\n      return t('NAT_GATEWAY');\n    },\n    namespace: 'QCE/NAT_GATEWAY',\n    href: 'https://cloud.tencent.com/document/api/215/36034',\n    get groupName() {\n      return t('virtual_private_cloud');\n    },\n  },\n  {\n    service: 'vpngw',\n    get label() {\n      return t('VPNGW');\n    },\n    namespace: 'QCE/VPNGW',\n    href: 'https://cloud.tencent.com/document/product/248/45070',\n    get groupName() {\n      return t('virtual_private_cloud');\n    },\n  },\n  {\n    service: 'vpnx',\n    get label() {\n      return t('VPNX');\n    },\n    namespace: 'QCE/VPNX',\n    href: 'https://cloud.tencent.com/document/product/248/45071',\n    get groupName() {\n      return t('virtual_private_cloud');\n    },\n  },\n  {\n    service: 'dcg',\n    get label() {\n      return t('DCG');\n    },\n    namespace: 'QCE/DCG',\n    href: 'https://cloud.tencent.com/document/product/248/45072',\n    get groupName() {\n      return t('virtual_private_cloud');\n    },\n  },\n  {\n    service: 'ceipSummary',\n    get label() {\n      return t('CEIP_SUMMARY');\n    },\n    namespace: 'QCE/CEIP_SUMMARY',\n    href: 'https://cloud.tencent.com/document/product/248/50381',\n    get groupName() {\n      return t('virtual_private_cloud');\n    },\n  },\n  {\n    service: 'vpcNetDetect',\n    get label() {\n      return t('VPC_NET_DETECT');\n    },\n    namespace: 'QCE/VPC_NET_DETECT',\n    href: 'https://cloud.tencent.com/document/product/248/50384',\n    get groupName() {\n      return t('virtual_private_cloud');\n    },\n  },\n  {\n    service: 'vbc',\n    get label() {\n      return t('VBC');\n    },\n    namespace: 'QCE/VBC',\n    href: 'https://cloud.tencent.com/document/product/248/45073',\n    get groupName() {\n      return t('virtual_private_cloud');\n    },\n  },\n  {\n    service: 'lb',\n    get label() {\n      return t('LB');\n    },\n    namespace: 'QCE/LB',\n    href: 'https://cloud.tencent.com/document/product/248/45099',\n    get groupName() {\n      return t('virtual_private_cloud');\n    },\n  },\n  {\n    service: 'lbPublic',\n    get label() {\n      return t('LB_PUBLIC');\n    },\n    namespace: 'QCE/LB_PUBLIC',\n    href: 'https://cloud.tencent.com/document/product/248/51898',\n    get groupName() {\n      return `${t('cloud_load_balancer')}(${t('multi_scene')})`;\n    },\n  },\n  {\n    service: 'lbPrivate',\n    get label() {\n      return t('LB_PRIVATE');\n    },\n    namespace: 'QCE/LB_PRIVATE',\n    href: 'https://cloud.tencent.com/document/product/248/51899',\n    get groupName() {\n      return `${t('cloud_load_balancer')}(${t('multi_scene')})`;\n    },\n  },\n  {\n    service: 'loadBalance',\n    get label() {\n      return t('LOADBALANCE');\n    },\n    namespace: 'QCE/LOADBALANCE',\n    href: 'https://cloud.tencent.com/document/product/248/51901',\n    get groupName() {\n      return `${t('cloud_load_balancer')}(${t('multi_scene')})`;\n    },\n  },\n  {\n    service: 'vClb',\n    get label() {\n      return `${t('cloud_load_balancer')}(${t('lite')})`;\n    },\n    namespace: 'QCE/V_CLB',\n    href: 'https://cloud.tencent.com/document/product/248/51901',\n    get groupName() {\n      return `${t('cloud_load_balancer')}(${t('lite')})`;\n    },\n  },\n  {\n    service: 'cdn',\n    get label() {\n      return t('CDN');\n    },\n    namespace: 'QCE/CDN',\n    hideRegion: true,\n    href: 'https://cloud.tencent.com/document/product/248/50386',\n    get groupName() {\n      return t('content_delivery_network');\n    },\n  },\n  {\n    service: 'cdnProvince',\n    get label() {\n      return t('CDN_LOG_DATA');\n    },\n    namespace: 'QCE/CDN_LOG_DATA',\n    hideRegion: true,\n    href: 'https://cloud.tencent.com/document/product/248/50388',\n    get groupName() {\n      return t('content_delivery_network');\n    },\n  },\n  {\n    service: 'ovCdn',\n    get label() {\n      return t('OV_CDN');\n    },\n    namespace: 'QCE/OV_CDN',\n    hideRegion: true,\n    href: 'https://cloud.tencent.com/document/product/248/50387',\n    get groupName() {\n      return t('content_delivery_network');\n    },\n  },\n  {\n    service: 'scf',\n    get label() {\n      return t('SCF_V2');\n    },\n    namespace: 'QCE/SCF_V2',\n    href: 'https://cloud.tencent.com/document/product/248/45130',\n  },\n  {\n    service: 'cfs',\n    get label() {\n      return t('CFS');\n    },\n    namespace: 'QCE/CFS',\n    href: 'https://cloud.tencent.com/document/product/248/45143',\n  },\n  {\n    service: 'cos',\n    get label() {\n      return t('COS');\n    },\n    namespace: 'QCE/COS',\n    href: 'https://cloud.tencent.com/document/product/248/45140',\n  },\n  {\n    service: 'ckafka',\n    get label() {\n      return t('CKAFKA');\n    },\n    namespace: 'QCE/CKAFKA',\n    href: 'https://cloud.tencent.com/document/product/248/45121',\n    get groupName() {\n      return t('message_queue');\n    },\n  },\n  {\n    service: 'cmq',\n    get label() {\n      return t('CMQ');\n    },\n    namespace: 'QCE/CMQ',\n    href: 'https://cloud.tencent.com/document/product/248/45114',\n    get groupName() {\n      return t('message_queue');\n    },\n  },\n  {\n    service: 'cmqTopic',\n    get label() {\n      return t('CMQTOPIC');\n    },\n    namespace: 'QCE/CMQTOPIC',\n    href: 'https://cloud.tencent.com/document/product/248/45113',\n    get groupName() {\n      return t('message_queue');\n    },\n  },\n  {\n    service: 'tdmq',\n    get label() {\n      return t('TDMQ');\n    },\n    namespace: 'QCE/TDMQ',\n    href: 'https://cloud.tencent.com/document/product/248/51450',\n    get groupName() {\n      return t('message_queue');\n    },\n  },\n  {\n    service: 'tdmqRocketmq',\n    get label() {\n      return t('TDMQ_ROCKETMQ');\n    },\n    namespace: 'QCE/ROCKETMQ',\n    href: 'https://cloud.tencent.com/document/product/248/51450',\n    get groupName() {\n      return t('message_queue');\n    },\n  },\n  {\n    service: 'tdmqRabbitmq',\n    get label() {\n      return t('TDMQ_RABBITMQ');\n    },\n    namespace: 'QCE/RABBITMQ',\n    href: 'https://cloud.tencent.com/document/product/248/51450',\n    get groupName() {\n      return t('message_queue');\n    },\n  },\n  {\n    service: 'dcx',\n    get label() {\n      return t('DCX');\n    },\n    namespace: 'QCE/DCX',\n    href: 'https://cloud.tencent.com/document/product/248/45101',\n    get groupName() {\n      return t('direct_connect');\n    },\n  },\n  {\n    service: 'dc',\n    get label() {\n      return t('DC');\n    },\n    namespace: 'QCE/DC',\n    href: 'https://cloud.tencent.com/document/product/248/45102',\n    get groupName() {\n      return t('direct_connect');\n    },\n  },\n  {\n    service: 'cpm',\n    get label() {\n      return t('CPM');\n    },\n    namespace: 'QCE/CPM',\n    href: 'https://cloud.tencent.com/document/product/248/45881',\n    get groupName() {\n      return t('cloud_physical_machine');\n    },\n  },\n  {\n    service: 'bmPcx',\n    get label() {\n      return t('BM_PCX');\n    },\n    namespace: 'QCE/BM_PCX',\n    href: 'https://cloud.tencent.com/document/product/248/45884',\n    get groupName() {\n      return t('cloud_physical_machine');\n    },\n  },\n  {\n    service: 'bmLb',\n    get label() {\n      return t('BM_LB');\n    },\n    namespace: 'QCE/BM_LB',\n    href: 'https://cloud.tencent.com/document/product/248/45886',\n    get groupName() {\n      return t('cloud_physical_machine');\n    },\n  },\n  {\n    service: 'bmIntraLb',\n    get label() {\n      return t('BM_INTRA_LB');\n    },\n    namespace: 'QCE/BM_INTRA_LB',\n    href: 'https://cloud.tencent.com/document/product/248/45885',\n    get groupName() {\n      return t('cloud_physical_machine');\n    },\n  },\n  {\n    service: 'ces',\n    get label() {\n      return t('CES');\n    },\n    namespace: 'QCE/CES',\n    href: 'https://cloud.tencent.com/document/product/248/45129',\n  },\n  {\n    service: 'mrHDFS',\n    get label() {\n      return `${t('elastic_mapReduce')}(HDFS)`;\n    },\n    namespace: 'QCE/TXMR_HDFS',\n    href: 'https://cloud.tencent.com/document/product/248/44797',\n    get groupName() {\n      return t('elastic_mapReduce');\n    },\n  },\n  {\n    service: 'mrHBASE',\n    get label() {\n      return `${t('elastic_mapReduce')}(HBASE)`;\n    },\n    namespace: 'QCE/TXMR_HBASE',\n    href: 'https://cloud.tencent.com/document/product/248/45567',\n    get groupName() {\n      return t('elastic_mapReduce');\n    },\n  },\n  {\n    service: 'mrHIVE',\n    get label() {\n      return `${t('elastic_mapReduce')}(HIVE)`;\n    },\n    namespace: 'QCE/TXMR_HIVE',\n    href: 'https://cloud.tencent.com/document/product/248/45569',\n    get groupName() {\n      return t('elastic_mapReduce');\n    },\n  },\n  {\n    service: 'mrNODE',\n    get label() {\n      return `${t('elastic_mapReduce')}(NODE)`;\n    },\n    namespace: 'QCE/TXMR_NODE',\n    href: 'https://cloud.tencent.com/document/product/248/45570',\n    get groupName() {\n      return t('elastic_mapReduce');\n    },\n  },\n  {\n    service: 'mrPRESTO',\n    get label() {\n      return `${t('elastic_mapReduce')}(PRESTO)`;\n    },\n    namespace: 'QCE/TXMR_PRESTO',\n    href: 'https://cloud.tencent.com/document/product/248/45571',\n    get groupName() {\n      return t('elastic_mapReduce');\n    },\n  },\n  {\n    service: 'mrSPARK',\n    get label() {\n      return `${t('elastic_mapReduce')}(SPARK)`;\n    },\n    namespace: 'QCE/TXMR_SPARK',\n    href: 'https://cloud.tencent.com/document/product/248/45572',\n    get groupName() {\n      return t('elastic_mapReduce');\n    },\n  },\n  {\n    service: 'mrYARN',\n    get label() {\n      return `${t('elastic_mapReduce')}(YARN)`;\n    },\n    namespace: 'QCE/TXMR_YARN',\n    href: 'https://cloud.tencent.com/document/product/248/45573',\n    get groupName() {\n      return t('elastic_mapReduce');\n    },\n  },\n  {\n    service: 'mrZOOKEEPER',\n    get label() {\n      return `${t('elastic_mapReduce')}(ZOOKEEPER)`;\n    },\n    namespace: 'QCE/TXMR_ZOOKEEPER',\n    href: 'https://cloud.tencent.com/document/product/248/45574',\n    get groupName() {\n      return t('elastic_mapReduce');\n    },\n  },\n  {\n    service: 'cbs',\n    get label() {\n      return t('BLOCK_STORAGE');\n    },\n    namespace: 'QCE/BLOCK_STORAGE',\n    href: 'https://cloud.tencent.com/document/product/362/2345',\n  },\n  {\n    service: 'apigateway',\n    get label() {\n      return t('APIGATEWAY');\n    },\n    namespace: 'QCE/APIGATEWAY',\n    href: 'https://cloud.tencent.com/document/product/248/45127',\n  },\n  {\n    service: 'qaap',\n    get label() {\n      return t('QAAP');\n    },\n    namespace: 'QCE/QAAP',\n    href: 'https://cloud.tencent.com/document/product/608',\n  },\n  {\n    service: 'ecm',\n    get label() {\n      return t('ECM');\n    },\n    hideRegion: true,\n    namespace: 'QCE/ECM',\n    href: 'https://cloud.tencent.com/document/product/1108',\n    get groupName() {\n      return t('edge_computing_machine');\n    },\n  },\n  {\n    service: 'ecmBlockStorage',\n    get label() {\n      return t('ECM_BLOCK_STORAGE');\n    },\n    hideRegion: true,\n    namespace: 'QCE/ECM_BLOCK_STORAGE',\n    href: 'https://cloud.tencent.com/document/product/1108',\n    get groupName() {\n      return t('edge_computing_machine');\n    },\n  },\n  {\n    service: 'ecmLb',\n    get label() {\n      return t('ECM_LB');\n    },\n    hideRegion: true,\n    namespace: 'QCE/ECM_LB',\n    href: 'https://cloud.tencent.com/document/product/1108',\n    get groupName() {\n      return t('edge_computing_machine');\n    },\n  },\n  {\n    service: 'gse',\n    get label() {\n      return t('GSE');\n    },\n    namespace: 'QCE/GSE',\n    href: 'https://cloud.tencent.com/document/product/1165',\n  },\n  {\n    service: 'cls',\n    get label() {\n      return t('CLS');\n    },\n    namespace: 'QCE/CLS',\n    href: 'https://cloud.tencent.com/document/product/614',\n  },\n  {\n    service: 'tke',\n    get label() {\n      return t('TKE');\n    },\n    namespace: 'QCE/TKE2',\n    href: 'https://cloud.tencent.com/document/product/457',\n  },\n  {\n    service: 'ecdn',\n    get label() {\n      return t('ECDN');\n    },\n    namespace: 'QCE/DSA',\n    href: 'https://cloud.tencent.com/document/product/570',\n  },\n  // {\n  //   service: 'lighthouse',\n  //   label: '轻量应用服务器(LIGHTHOUSE)',\n  //   namespace: 'QCE/LIGHTHOUSE',\n  //   href: 'https://cloud.tencent.com/document/product/1207',\n  // },\n  // {\n  //   service: 'tsf',\n  //   label: ' 微服务平台(TSF)',\n  //   namespace: 'QCE/TSF',\n  //   href: 'https://cloud.tencent.com/document/product/649',\n  // },\n  {\n    service: 'waf',\n    get label() {\n      return t('WAF');\n    },\n    // hideRegion: true,\n    namespace: 'QCE/WAF',\n    href: 'https://cloud.tencent.com/document/product/627',\n  },\n];\nconst Datasources = {};\nconst InitStates = {};\nconst InstanceAliasList = {};\nconst GetInstanceQueryParams = {};\n\n/**\n * 由于目录命名不规范，导致需要使用额外逻辑保证正确性。从目录到具体service的映射\n */\nconst hackModuleName = {\n  // lb_loadBalance: 'loadBalance',\n  postgresql: 'postgres',\n  mongodb: 'mongoDB',\n  clb: ['lbPrivate', 'lbPublic', 'loadBalance'],\n  mr: ['mrHDFS', 'mrHBASE', 'mrHIVE', 'mrNODE', 'mrPRESTO', 'mrSPARK', 'mrYARN', 'mrZOOKEEPER'],\n};\n\nconst requireModule = (require as any).context('./', true, /^\\.\\/[a-zA-Z]\\w+\\/(datasource)|(query(_def)?)\\.ts$/);\n\nrequireModule.keys().forEach((filePath) => {\n  let [, moduleName, fileName] = filePath.split('/');\n\n  // hack： 这里是由于产品目录命名不规范,所以才会多这么一段代码\n  moduleName = hackModuleName[moduleName] ?? moduleName;\n\n  // 目录与模块的映射关系，不管是一对一还是一对多，均按数组进行统一处理\n  [].concat(moduleName).forEach((module: string) => {\n    // 这个service就是产品配置中的service，需要注意这里的service是根据目录名称算出来的，因此目录名称一定要和service对应\n    const service = module.replace(/_([a-zA-Z])/g, (_, b) => b.toUpperCase());\n    const prefix = service.toUpperCase(); // 命名规则\n\n    // datasource\n    if (fileName === 'datasource.ts') {\n      const Cls = require(`${filePath}`).default;\n\n      // 想办法为实例注入service，不能为prototype或则类本身注入，因为会造成互相污染，详尽mrDatasource\n      Datasources[`${prefix}Datasource`] = class {\n        constructor(...params) {\n          const target = new Cls(...params, service);\n          target.service = service;\n          // eslint-disable-next-line no-constructor-return\n          return target;\n        }\n      };\n    }\n    // query\n    if (fileName === 'query.ts') {\n      require(`${filePath}`);\n    }\n    // query_def\n    if (fileName === 'query_def.ts') {\n      const alias = `${prefix}InstanceAliasList`;\n      const getParams = `${prefix}GetInstanceQueryParams`;\n\n      const target = require(`${filePath}`);\n\n      InitStates[service] = target.default; // FIXME: 这里需不需要深拷贝？\n      InstanceAliasList[alias] = target[alias] ?? target['InstanceAliasList'];\n      GetInstanceQueryParams[getParams] = target[getParams] ?? target['GetInstanceQueryParams'];\n    }\n  });\n});\n\nexport {\n  InitStates as InitServiceState,\n  SERVICES,\n  Datasources,\n  InstanceAliasList,\n  GetInstanceQueryParams,\n  // DefaultDimensions\n};\n\n// console.log(Datasources, InitStates, InstanceAliasList, GetInstanceQueryParams);\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/ECM_BLOCK_STORAGE';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'ecmBlockStorageQuery';\n\nconst ECMBLOCKSTORAGEInvalidDemensions = {\n  uuid: 'UUID',\n  diskId: 'DiskId',\n};\n\n// 需和文件名对应\nconst ECMBLOCKSTORAGEInstanceAliasList = ['InstanceId', 'InstanceName'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n  diskId: 'DiskId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst ECMBLOCKSTORAGEFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  'zone-name': [],\n  'module-id': [],\n  'module-name': [],\n  'instance-id': [],\n  'instance-name': [],\n  'ip-address': [],\n  'instance-uuid': [],\n  'instance-state': {},\n  'internet-service-provider': [],\n  'instance-family': [],\n  'image-id': [],\n  'vpc-id': [],\n  'subnet-id': [],\n};\n\nconst ECMBLOCKSTORAGEFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'zone-name',\n    enDescriptor: 'zone-name',\n    cnDescriptor: '排列顺序',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'module-id',\n    enDescriptor: 'module-id',\n    cnDescriptor: '模块ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'module-name',\n    enDescriptor: 'module-name',\n    cnDescriptor: '模块名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-id',\n    enDescriptor: 'instance-id',\n    cnDescriptor: '实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-name',\n    enDescriptor: 'instance-name',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'ip-address',\n    enDescriptor: 'ip-address',\n    cnDescriptor: '内网/公网IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-uuid',\n    enDescriptor: 'instance-uuid',\n    cnDescriptor: '实例uuid',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-state',\n    enDescriptor: 'instance-state',\n    cnDescriptor: '实例状态',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '创建中', value: 'PENDING' },\n      { text: '创建失败', value: 'LAUNCH_FAILED' },\n      { text: '运行中', value: 'RUNNING' },\n      { text: '关机', value: 'STOPPED' },\n      { text: '开机中', value: 'STARTING' },\n      { text: '关机中', value: 'STOPPING' },\n      { text: '重启中', value: 'REBOOTING' },\n      { text: '停止待销毁', value: 'SHUTDOWN' },\n      { text: '销毁中', value: 'TERMINATING' },\n    ],\n  },\n  {\n    key: 'internet-service-provider',\n    enDescriptor: 'internet-service-provider',\n    cnDescriptor: '公网IP所属的运营商',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-family',\n    enDescriptor: 'instance-family',\n    cnDescriptor: '机型family',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'image-id',\n    enDescriptor: 'image-id',\n    cnDescriptor: '镜像ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'vpc-id',\n    cnDescriptor: '实例的vpc id',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'subnet-id',\n    enDescriptor: 'subnet-id',\n    cnDescriptor: '实例的subnet id',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/1108/42565',\n  namespace,\n  fieldDescriptor: ECMBLOCKSTORAGEFilterFieldsDescriptor,\n};\n\nconst ECMBLOCKSTORAGE_STATE = {\n  region: 'ap-guangzhou',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  diskId: '',\n  queries: ECMBLOCKSTORAGEFilterFields,\n};\n\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  diskId: 'diskId',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  DiskId: {\n    dim_KeyInStorage: keyInStorage.diskId,\n    dim_KeyInTarget: 'diskId',\n    dim_KeyInMap: templateQueryIdMap.diskId,\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nexport default ECMBLOCKSTORAGE_STATE;\nexport {\n  ECMBLOCKSTORAGEFilterFieldsDescriptor,\n  templateQueryIdMap,\n  ECMBLOCKSTORAGEInstanceAliasList,\n  ECMBLOCKSTORAGEInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  keyInStorage,\n  queryMonitorExtraConfg,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as ECMBLOCKSTORAGEGetInstanceQueryParams,\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__22__;","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/APIGATEWAY';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'apigatewayQuery';\n\nconst APIGATEWAYInvalidDemensions = {\n  serviceId: 'ServiceId',\n  environmentName: 'EnvironmentName',\n  apiid: 'Apiid',\n  apiId: 'Apiid',\n};\n\n// 需和文件名对应\nconst APIGATEWAYInstanceAliasList = ['ServiceId', 'ServiceName'];\n\nconst templateQueryIdMap = {\n  instance: 'ServiceId',\n  environmentName: 'EnvironmentName',\n};\n\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  environmentList: 'EnvironmentList',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  EnvironmentName: {\n    dim_KeyInStorage: keyInStorage.environmentList,\n    dim_KeyInTarget: 'EnvironmentName',\n    dim_KeyInMap: templateQueryIdMap.environmentName,\n  },\n};\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst APIGATEWAYFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  ServiceId: [],\n  ServiceName: [],\n  NotUsagePlanId: [],\n  Environment: [],\n  IpVersion: [],\n};\n\nconst APIGATEWAYFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'ServiceId',\n    enDescriptor: 'ServiceId',\n    cnDescriptor: '服务id',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'ServiceName',\n    enDescriptor: 'ServiceName',\n    cnDescriptor: '服务名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'NotUsagePlanId',\n    enDescriptor: 'NotUsagePlanId',\n    cnDescriptor: 'NotUsagePlanId',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'Environment',\n    enDescriptor: 'Environment',\n    cnDescriptor: '环境名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'IpVersion',\n    enDescriptor: 'IpVersion',\n    cnDescriptor: 'IP版本',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/628/45198',\n  namespace,\n  fieldDescriptor: APIGATEWAYFilterFieldsDescriptor,\n};\n\nconst APIGATEWAY_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'ServiceId',\n  EnvironmentName: '',\n  queries: APIGATEWAYFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\n// regions for dropdown\nconst regionSupported = [\n  { value: 'ap-beijing' },\n  { value: 'ap-chengdu' },\n  { value: 'ap-chongqing' },\n  { value: 'ap-guangzhou' },\n  { value: 'ap-hongkong' },\n  { value: 'ap-mumbai' },\n  { value: 'ap-nanjing' },\n  { value: 'ap-shanghai' },\n  { value: 'ap-shanghai-fsi' },\n  { value: 'ap-shenzhen-fsi' },\n  { value: 'ap-singapore' },\n  { value: 'ap-tokyo' },\n  { value: 'eu-frankfurt' },\n  { value: 'na-ashburn' },\n  { value: 'na-siliconvalley' },\n  { value: 'na-toronto' },\n];\nexport default APIGATEWAY_STATE;\nexport {\n  APIGATEWAYFilterFieldsDescriptor,\n  templateQueryIdMap,\n  APIGATEWAYInstanceAliasList,\n  APIGATEWAYInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  regionSupported,\n  queryMonitorExtraConfg,\n  keyInStorage,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as APIGATEWAYGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\nexport const InstanceQueryDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为10，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceIds',\n    enDescriptor: 'InstanceIds',\n    cnDescriptor: '按照一个或者多个实例ID查询。实例ID形如: emr-xxxxxxxx ',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'OrderField',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '实例ID', value: 'clusterId' },\n      { text: '创建时间', value: 'addTime' },\n      { text: '状态', value: 'status' },\n    ],\n  },\n  {\n    key: 'Asc',\n    enDescriptor: 'Order Direction',\n    cnDescriptor: '排序方式',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '降序', value: 0 },\n      { text: '升序', value: 1 },\n    ],\n  },\n  {\n    key: 'ProjectId',\n    enDescriptor: 'ProjectId',\n    cnDescriptor: '实例所属项目ID',\n    link: '',\n    type: 'inputnumber',\n  },\n  {\n    key: 'DisplayStrategy',\n    enDescriptor: 'DisplayStrategy',\n    cnDescriptor: '集群筛选策略',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '未销毁的实例', value: 'clusterList' },\n      { text: '正常运行的实例', value: 'monitorManage' },\n    ],\n  },\n];\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\n// 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key\nexport const InvalidDemensions = new Proxy(\n  {},\n  {\n    get(target, k, receiver) {\n      if (typeof k === 'string') {\n        if (k.startsWith('id4')) return 'ClusterId'; // id4****\n        if (k.startsWith('host4')) return 'Ip'; // host4***\n      }\n      return Reflect.get(target, k, receiver);\n    },\n    has(target, propKey) {\n      return true;\n    },\n  }\n);\n\nexport const templateQueryIdMap = {\n  instance: 'ClusterId',\n  node: 'Ip',\n};\n\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  node: 'nodeIP',\n};\n\n/**\n * 如果有InstanceId额外的维度，原则上都需要传入此map结构配置\n *\n * `key` 的含义：\n *   经过InvalidDemensions处理后的string。topicId => TopicId。\n *   否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\n *\n * `value` 的含义：\n *   @param {1} dim_KeyInStorage  指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n *   @param {2} dim_KeyInTarget   通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n *                                  默认取通过InvalidDemsion处理后的key\n *   @param {3} dim_KeyInMap      保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n *                                  即：templateQueryIdMap中内容。\n *                                  联合上面 2 的内容筛选出原始sourceMap\n */\nconst queryMonitorExtraConfg = {\n  Ip: {\n    dim_KeyInStorage: keyInStorage.node,\n    dim_KeyInTarget: 'nodeIP',\n    dim_KeyInMap: templateQueryIdMap.node,\n  },\n};\n\n// 与名称挂钩的变量\nconst InstanceAliasList = ['ClusterId', 'ClusterName'];\nexport { InstanceAliasList, GetInstanceQueryParams, queryMonitorExtraConfg, keyInStorage };\n\n// 界面状态模型，default\nexport default {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'ClusterId',\n  nodeIP: '',\n  queries: {\n    Offset: 0,\n    Limit: 10,\n    DisplayStrategy: '',\n    OrderBy: {},\n    Order: {},\n    InstanceIds: [],\n    ProjectId: -1,\n    OrderField: '',\n    Asc: '',\n  },\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/V_CLB';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'vClbQuery';\n\nconst VCLBInvalidDemensions = {\n  InstanceId: 'LoadBalancerId',\n  // vip: 'LoadBalancerVips',\n  // loadBalancerPort: 'Port',\n  // protocol: 'Protocol',\n};\n\n// 要和文件名方式一致，ceip_summary=>CEIPSUMMARY\nconst VCLBInstanceAliasList = ['LoadBalancerId', 'LoadBalancerVips', 'LoadBalancerName'];\n\nconst templateQueryIdMap = {\n  instance: 'LoadBalancerId',\n};\nconst ForwardTypes = [\n  { text: '通用的负载均衡', value: 1 },\n  { text: '传统的负载均衡', value: 0 },\n];\n\nconst OrderBy = [\n  { text: 'LoadBalancerName', value: 'LoadBalancerName' },\n  { text: 'CreateTime', value: 'CreateTime' },\n  { text: 'Domain', value: 'Domain' },\n  { text: 'LoadBalancerType', value: 'LoadBalancerType' },\n];\n\nconst OrderType = [\n  { text: '升序', value: 0 },\n  { text: '降序', value: 1 },\n];\n\nconst WithRs = [\n  { text: '没有绑定后端服务', value: 0 },\n  { text: '绑定后端服务', value: 1 },\n  { text: '查询全部', value: -1 },\n];\nconst VCLBFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n  },\n  {\n    key: 'LoadBalancerIds',\n    enDescriptor: 'LoadBalancer ID',\n    cnDescriptor: '实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerName',\n    enDescriptor: 'LoadBalancer Name',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'Forward',\n    enDescriptor: 'Forward',\n    cnDescriptor: '负载均衡实例类型',\n    link: '',\n    type: 'select',\n    list: ForwardTypes,\n  },\n  {\n    key: 'Domain',\n    enDescriptor: 'Domain',\n    cnDescriptor: '域名，腾讯云为负载均衡实例分配的域名，本参数仅对传统型公网负载均衡才有意义',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'LoadBalancerVips',\n    enDescriptor: 'LoadBalancer Vips',\n    cnDescriptor: '负载均衡实例的 VIP 地址',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'BackendPrivateIps',\n    enDescriptor: 'BackendPrivate Ips',\n    cnDescriptor: '负载均衡绑定的后端服务的内网 IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'BackendPublicIps',\n    enDescriptor: 'BackendPublic Ips',\n    cnDescriptor: '负载均衡绑定的后端服务的外网 IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'ProjectId',\n    enDescriptor: 'Project ID',\n    cnDescriptor: '负载均衡实例所属的项目 ID',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'Vpc ID',\n    cnDescriptor: '负载均衡实例所属私有网络',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SecurityGroup',\n    enDescriptor: 'Security Group',\n    cnDescriptor: '安全组ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'MasterZone',\n    enDescriptor: 'Master Zone',\n    cnDescriptor: '主可用区ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'WithRs',\n    enDescriptor: 'WithRs',\n    cnDescriptor: '负载均衡是否绑定后端服务',\n    link: '',\n    type: 'select',\n    list: WithRs,\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderBy,\n  },\n  {\n    key: 'OrderType',\n    enDescriptor: 'OrderByType',\n    cnDescriptor: '排序方式',\n    link: '',\n    type: 'select',\n    list: OrderType,\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/214/30685',\n  namespace,\n  fieldDescriptor: VCLBFilterFieldsDescriptor,\n};\nconst LBFields = {\n  LoadBalancerIds: [],\n  Forward: undefined,\n  LoadBalancerName: '',\n  Domain: '',\n  LoadBalancerVips: [],\n  BackendPublicIps: [],\n  BackendPrivateIps: [],\n  Limit: 20,\n  Offset: 0,\n  ProjectId: undefined,\n  WithRs: {},\n  VpcId: '',\n  SecurityGroup: '',\n  MasterZone: '',\n  OrderBy: {},\n  OrderType: {},\n};\n\nconst VCLB_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'LoadBalancerId',\n  Port: '',\n  Protocol: '',\n  listener: '',\n  // listenerAlias: 'ListenerId',\n  queries: LBFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\n\n// regions for dropdown\nconst regionSupported = [\n  { value: 'ap-bangkok' },\n  { value: 'ap-beijing' },\n  { value: 'ap-chengdu' },\n  { value: 'ap-chongqing' },\n  { value: 'ap-guangzhou' },\n  { value: 'ap-hongkong' },\n  { value: 'ap-jakarta' },\n  { value: 'ap-mumbai' },\n  { value: 'ap-seoul' },\n  { value: 'ap-nanjing' },\n  { value: 'ap-shanghai' },\n  { value: 'ap-shanghai-fsi' },\n  { value: 'ap-shenzhen-fsi' },\n  { value: 'ap-singapore' },\n  { value: 'ap-tokyo' },\n  { value: 'eu-frankfurt' },\n  { value: 'eu-moscow' },\n  { value: 'na-ashburn' },\n  { value: 'na-siliconvalley' },\n  { value: 'na-toronto' },\n];\nconst clbNamespaceMap = {\n  public: 'QCE/LB_PUBLIC',\n  private: 'QCE/LB_PRIVATE',\n};\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['InstanceId'];\n  });\n  return metricTmp;\n}\nexport default VCLB_STATE;\nexport {\n  VCLBFilterFieldsDescriptor,\n  templateQueryIdMap,\n  VCLBInstanceAliasList,\n  VCLBInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  clbNamespaceMap,\n  modifyDimensons,\n  regionSupported,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as BMLBGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/CYNOSDB_MYSQL';\n\n// 按照驼峰方式命名，和SERVICES保持一致，abcDeF会成为angular组件名字<abc-de-f-query />\nconst queryEditorName = 'cynosdbMysqlQuery';\n\nconst cynosdbMysqlFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  OrderBy: {},\n  OrderByType: {},\n  InstanceIds: [],\n  DbType: {},\n  // Status: '',\n};\n\nconst cynosdbMysqlFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 1000,\n  },\n  {\n    key: 'InstanceIds',\n    enDescriptor: 'InstanceIds',\n    cnDescriptor: '实例id列表',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '创建时间', value: 'CREATETIME' },\n      { text: '过期时间', value: 'PERIODENDTIME' },\n    ],\n  },\n  {\n    key: 'OrderByType',\n    enDescriptor: 'OrderByType',\n    cnDescriptor: '排序类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '升序', value: 'ASC' },\n      { text: '降序', value: 'DESC' },\n    ],\n  },\n  {\n    key: 'DbType',\n    enDescriptor: 'DbType',\n    cnDescriptor: '引擎类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'MYSQL', value: 'MYSQL' },\n      { text: 'POSTGRESQL', value: 'POSTGRESQL' },\n    ],\n  },\n  // {\n  //   key: 'Status',\n  //   enDescriptor: 'Status',\n  //   cnDescriptor: '实例状态',\n  //   link: '',\n  //   type: 'input',\n  // },\n];\n// regions for dropdown\nconst regionSupported = [\n  { value: 'ap-beijing' },\n  { value: 'ap-guangzhou' },\n  { value: 'ap-nanjing' },\n  { value: 'ap-shanghai' },\n];\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/1003/48334',\n  namespace,\n  fieldDescriptor: cynosdbMysqlFilterFieldsDescriptor,\n};\n\nconst CYNOSDB_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: cynosdbMysqlFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\n// 和文件名字一样CYNOSDBMYSQL\nconst CYNOSDBMYSQLInstanceAliasList = ['InstanceId', 'InstanceName'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\n\nconst CYNOSDBInvalidDemensions = {\n  instanceid: 'InstanceId',\n  instanceId: 'InstanceId',\n};\nconst checkKeys = ['instanceId'];\nfunction modifyDimensons(metricItem) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['InstanceId'];\n  });\n  return metricTmp;\n}\n\nexport default CYNOSDB_STATE;\nexport {\n  cynosdbMysqlFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CYNOSDBMYSQLInstanceAliasList,\n  CYNOSDBInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  regionSupported,\n  modifyDimensons,\n  checkKeys,\n  // params前缀为service的全大写\n  GetInstanceQueryParams as CYNOSDBMYSQLGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\nexport const SCFQueryDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'SearchKey',\n    enDescriptor: 'SearchKey',\n    cnDescriptor: '支持FunctionName模糊匹配',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'Namespace',\n    enDescriptor: 'Namespace',\n    cnDescriptor: '云函数命名空间',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'Description',\n    enDescriptor: 'Description',\n    cnDescriptor: '函数描述，支持模糊搜索',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'AddTime', value: 'AddTime' },\n      { text: 'ModTime', value: 'ModTime' },\n      { text: 'FunctionName', value: 'FunctionName' },\n    ],\n  },\n  {\n    key: 'Order',\n    enDescriptor: 'Order Direction',\n    cnDescriptor: '排序方式',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'ASC', value: 'ASC' },\n      { text: 'DESC', value: 'DESC' },\n    ],\n  },\n  // {\n  //   key: 'Filters',\n  //   enDescriptor: 'Filters',\n  //   cnDescriptor: '按照标签键值对进行过滤',\n  //   link: '',\n  //   type: 'dropdownmulti',\n  // },\n];\n\nconst SCF_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'FunctionName',\n  version: '',\n  queries: {\n    Offset: 0,\n    Limit: 20,\n    OrderBy: {},\n    Order: {},\n    SearchKey: '',\n    Namespace: '',\n    Description: '',\n    // Filters:  {},\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\nconst SCFInstanceAliasList = ['FunctionId', 'FunctionName'];\n\n// 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key\nconst SCFInvalidDemensions = {\n  functionName: 'FunctionName',\n  namespace: 'Namespace',\n  version: 'Version',\n};\n\nconst templateQueryIdMap = {\n  instance: 'FunctionName',\n  version: 'Version',\n};\nconst regionSupported = [\n  { value: 'ap-beijing' },\n  { value: 'ap-chengdu' },\n  { value: 'ap-chongqing' },\n  { value: 'ap-guangzhou' },\n  { value: 'ap-hongkong' },\n  { value: 'ap-mumbai' },\n  { value: 'ap-shanghai' },\n  { value: 'ap-shanghai-fsi' },\n  { value: 'ap-shenzhen-fsi' },\n  { value: 'ap-singapore' },\n  { value: 'ap-tokyo' },\n  { value: 'eu-frankfurt' },\n  { value: 'na-siliconvalley' },\n  { value: 'na-toronto' },\n];\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  version: 'version',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  Version: {\n    dim_KeyInStorage: keyInStorage.version,\n    dim_KeyInTarget: 'version',\n    dim_KeyInMap: templateQueryIdMap.version,\n  },\n};\nexport default SCF_STATE;\nexport {\n  SCFInstanceAliasList,\n  SCFInvalidDemensions,\n  queryMonitorExtraConfg,\n  regionSupported,\n  templateQueryIdMap,\n  keyInStorage,\n  GetInstanceQueryParams as SCFGetInstanceQueryParams,\n};\n\n// monitor监控数据默认支持的维度\nexport const SCFDefaultDimensionList = ['functionName', 'namespace', 'version'];\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/CLS';\nconst queryEditorName = 'clsQuery';\n\nconst CLSInvalidDemensions = {\n  // instanceid: 'TopicId',\n};\n\n// 需和文件名对应\nconst CLSInstanceAliasList = ['TopicId', 'TopicName'];\n\nconst templateQueryIdMap = {\n  instance: 'TopicId',\n};\n\n// 需要缓存到storage的内容的key列表\n// const keyInStorage = {\n//   fleet: 'fleet', // 实例队列\n//   queue: 'queueName', // 会话队列\n// };\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\n// const queryMonitorExtraConfg = {\n//   FleetId: {\n//     dim_KeyInStorage: keyInStorage.fleet,\n//     dim_KeyInTarget: 'FleetId',\n//     dim_KeyInMap: templateQueryIdMap.FleetId,\n//   },\n//   Name: {\n//     dim_KeyInStorage: keyInStorage.queue,\n//     dim_KeyInTarget: 'Name',\n//     dim_KeyInMap: templateQueryIdMap.Name,\n//   },\n// };\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst CLSFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  topicName: [],\n  topicId: [],\n  logsetName: [],\n  logsetId: [],\n  tagKey: [],\n  'tag:tagKey': [],\n  storageType: {},\n};\n\nconst CLSFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'topicName',\n    enDescriptor: 'topicName',\n    cnDescriptor: '日志主题名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'topicId',\n    enDescriptor: 'topicId',\n    cnDescriptor: '日志主题ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'logsetName',\n    enDescriptor: 'logsetName',\n    cnDescriptor: '日志集名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'logsetId',\n    enDescriptor: 'logsetId',\n    cnDescriptor: '日志集ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'tagKey',\n    enDescriptor: 'tagKey',\n    cnDescriptor: '标签键',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'tag:tagKey',\n    enDescriptor: 'tag - tagKey',\n    cnDescriptor: '标签键值对',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'storageType',\n    enDescriptor: 'storageType',\n    cnDescriptor: '日志主题的存储类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '实时存储', value: 'hot' },\n      { text: '离线存储', value: 'cold' },\n    ],\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/614/56454',\n  namespace,\n  fieldDescriptor: CLSFilterFieldsDescriptor,\n};\n\nconst CLS_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'TopicId',\n  uin: '',\n  queries: CLSFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\n// regions for dropdown\nconst regionSupported = [\n  { value: 'ap-bangkok' },\n  { value: 'ap-beijing' },\n  { value: 'ap-chengdu' },\n  { value: 'ap-chongqing' },\n  { value: 'ap-guangzhou' },\n  { value: 'ap-hongkong' },\n  { value: 'ap-jakarta' },\n  { value: 'ap-mumbai' },\n  { value: 'ap-seoul' },\n  { value: 'ap-nanjing' },\n  { value: 'ap-shanghai' },\n  { value: 'ap-shanghai-fsi' },\n  { value: 'ap-shenzhen-fsi' },\n  { value: 'ap-singapore' },\n  { value: 'ap-tokyo' },\n  { value: 'eu-frankfurt' },\n  { value: 'eu-moscow' },\n  { value: 'na-ashburn' },\n  { value: 'na-siliconvalley' },\n  { value: 'na-toronto' },\n];\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    // item.Dimensions = item.Dimensions.map((v) => CLSInvalidDemensions[v] || v);\n    item.Dimensions = ['uin', 'TopicId'];\n  });\n  return metricTmp;\n}\nexport default CLS_STATE;\nexport {\n  CLSFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CLSInstanceAliasList,\n  CLSInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  regionSupported,\n  modifyDimensons,\n  // queryMonitorExtraConfg,\n  // fleetId,\n  // keyInStorage,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as CLSGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/SQLSERVER';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'sqlserverQuery';\n\nconst SQLSERVERInvalidDemensions = {\n  resourceId: 'InstanceId',\n};\n\nconst SQLSERVERInstanceAliasList = ['InstanceId', 'Name'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst SQLSERVERNETFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  ProjectId: null,\n  Status: {},\n  InstanceIdSet: [],\n  PayMode: {},\n  VpcId: '',\n  SubnetId: '',\n  VipSet: [],\n  InstanceNameSet: [],\n  VersionSet: [],\n  Zone: '',\n};\n\nconst SQLSERVERNETFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'ProjectId',\n    enDescriptor: 'ProjectId',\n    cnDescriptor: '项目ID',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'Status',\n    enDescriptor: 'Status',\n    cnDescriptor: '实例状态',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '申请中', value: 1 },\n      { text: '运行中', value: 2 },\n      { text: '受限运行中 (主备切换中)', value: 3 },\n      { text: '已隔离', value: 4 },\n      { text: '回收中', value: 5 },\n      { text: '已回收', value: 6 },\n      { text: '任务执行中', value: 7 },\n      { text: '已下线', value: 8 },\n      { text: '实例扩容中', value: 9 },\n      { text: '实例迁移中', value: 10 },\n      { text: '只读', value: 11 },\n      { text: '重启中', value: 12 },\n    ],\n  },\n  {\n    key: 'InstanceIdSet',\n    enDescriptor: 'InstanceIdSet',\n    cnDescriptor: '实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'PayMode',\n    enDescriptor: 'PayMode',\n    cnDescriptor: '子网实例ID',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '包年包月', value: 1 },\n      { text: '按量计费', value: 0 },\n    ],\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'VpcId',\n    cnDescriptor: '实例所属VPC的唯一字符串ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SubnetId',\n    enDescriptor: 'SubnetId',\n    cnDescriptor: '实例所属子网的唯一字符串ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'VipSet',\n    enDescriptor: 'VipSet',\n    cnDescriptor: '实例内网地址列表',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'InstanceNameSet',\n    enDescriptor: 'InstanceNameSet',\n    cnDescriptor: '实例名称列表, 模糊查询',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'VersionSet',\n    enDescriptor: 'VersionSet',\n    cnDescriptor: '实例版本代号列表',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'Zone',\n    enDescriptor: 'Zone',\n    cnDescriptor: '实例可用区',\n    link: '',\n    type: 'dropdown',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/238/19969',\n  namespace,\n  fieldDescriptor: SQLSERVERNETFilterFieldsDescriptor,\n};\n\n// regions for dropdown\nconst regionSupported = [\n  { value: 'ap-beijing' },\n  { value: 'ap-chengdu' },\n  { value: 'ap-chongqing' },\n  { value: 'ap-guangzhou' },\n  { value: 'ap-hongkong' },\n  { value: 'ap-nanjing' },\n  { value: 'ap-seoul' },\n  { value: 'ap-shanghai' },\n  { value: 'ap-shanghai-fsi' },\n  { value: 'ap-shenzhen-fsi' },\n  { value: 'ap-singapore' },\n  { value: 'ap-tokyo' },\n  { value: 'eu-moscow' },\n  { value: 'na-siliconvalley' },\n];\nconst SQLSERVER_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: SQLSERVERNETFilterFields,\n};\n\nfunction modifyDimensons(metricItem) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['resourceId'];\n  });\n  return metricTmp;\n}\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\nexport default SQLSERVER_STATE;\nexport {\n  SQLSERVERNETFilterFieldsDescriptor,\n  templateQueryIdMap,\n  SQLSERVERInstanceAliasList,\n  SQLSERVERInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  regionSupported,\n  modifyDimensons,\n  // 对应产品的service的全大写拼接InstanceQueryParams\n  GetInstanceQueryParams as SQLSERVERGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/BM_INTRA_LB';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'bmIntraLbQuery';\n\nconst BMINTRALBInvalidDemensions = {\n  vip: 'LoadBalancerVips',\n  vpcId: 'VpcId',\n};\n\n// 要和文件名方式一致，ceip_summary=>CEIPSUMMARY\nconst BMINTRALBInstanceAliasList = ['LoadBalancerId', 'LoadBalancerVips', 'LoadBalancerName'];\n\nconst templateQueryIdMap = {\n  instance: 'LoadBalancerId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是类型\nconst BMINTRALBFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  LoadBalancerIds: [],\n  LoadBalancerName: [],\n  LoadBalancerVips: [],\n};\n\nconst BMINTRALBFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'LoadBalancerIds',\n    enDescriptor: 'LoadBalancerIds',\n    cnDescriptor: '负载均衡器ID数组',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerName',\n    enDescriptor: 'LoadBalancerName',\n    cnDescriptor: '负载均衡器名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerVips',\n    enDescriptor: 'LoadBalancerVips',\n    cnDescriptor: '负载均衡获得的公网IP地址',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/1027/33280',\n  namespace,\n  fieldDescriptor: BMINTRALBFilterFieldsDescriptor,\n};\n\nconst BMINTRALB_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'LoadBalancerId',\n  queries: BMINTRALBFilterFields,\n};\nconst BMLBValidMetricsT = ['Inpkg', 'Outpkg', 'Intraffic', 'Outtraffic', 'Connum', 'Req'];\nfunction isValidMetric(metric) {\n  const validMetrics = _.map(BMLBValidMetricsT, _.toUpper);\n  return _.indexOf(validMetrics, _.toUpper(metric.MetricName)) !== -1;\n}\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\nexport default BMINTRALB_STATE;\nexport {\n  BMINTRALBFilterFieldsDescriptor,\n  templateQueryIdMap,\n  BMINTRALBInstanceAliasList,\n  BMINTRALBInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  isValidMetric,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as BMINTRALBGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/BM_LB';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'bmLbQuery';\n\nconst CPMInvalidDemensions = {\n  vip: 'LoadBalancerVips',\n};\n\n// 要和文件名方式一致，ceip_summary=>CEIPSUMMARY\nconst BMLBInstanceAliasList = ['LoadBalancerId', 'LoadBalancerVips', 'LoadBalancerName'];\n\nconst templateQueryIdMap = {\n  instance: 'LoadBalancerId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是类型\nconst CPMFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  LoadBalancerIds: [],\n  LoadBalancerName: [],\n  LoadBalancerVips: [],\n};\n\nconst CPMFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'LoadBalancerIds',\n    enDescriptor: 'LoadBalancerIds',\n    cnDescriptor: '负载均衡器ID数组',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerName',\n    enDescriptor: 'LoadBalancerName',\n    cnDescriptor: '负载均衡器名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerVips',\n    enDescriptor: 'LoadBalancerVips',\n    cnDescriptor: '负载均衡获得的公网IP地址',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/1027/33280',\n  namespace,\n  fieldDescriptor: CPMFilterFieldsDescriptor,\n};\n\nconst CPM_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'LoadBalancerId',\n  queries: CPMFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\nconst BMLBValidMetricsT = ['Inpkg', 'Outpkg', 'Intraffic', 'Outtraffic', 'Connum', 'Req'];\nfunction isValidMetric(metric) {\n  const validMetrics = _.map(BMLBValidMetricsT, _.toUpper);\n  return _.indexOf(validMetrics, _.toUpper(metric.MetricName)) !== -1;\n}\nexport default CPM_STATE;\nexport {\n  CPMFilterFieldsDescriptor,\n  templateQueryIdMap,\n  BMLBInstanceAliasList,\n  CPMInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  isValidMetric,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as BMLBGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/BM_PCX';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'bmPcxQuery';\n\nconst BMPCXInvalidDemensions = {\n  peeringConnectionId: 'VpcPeerConnectionId',\n};\n\n// 要和文件名方式一致，ceip_summary=>CEIPSUMMARY\nconst BMPCXInstanceAliasList = ['VpcPeerConnectionId', 'VpcPeerConnectionName'];\n\nconst templateQueryIdMap = {\n  instance: 'VpcPeerConnectionId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是类型\nconst BMPCXFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  VpcPeerConnectionIds: [],\n};\n\nconst BMPCXFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'VpcPeerConnectionIds',\n    enDescriptor: 'VpcPeerConnectionIds',\n    cnDescriptor: '对等连接实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/product/1024/36903',\n  namespace,\n  fieldDescriptor: BMPCXFilterFieldsDescriptor,\n};\n\nconst BMPCX_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'VpcPeerConnectionId',\n  queries: BMPCXFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['peeringConnectionId'];\n  });\n  return metricTmp;\n}\nexport default BMPCX_STATE;\nexport {\n  BMPCXFilterFieldsDescriptor,\n  templateQueryIdMap,\n  BMPCXInstanceAliasList,\n  BMPCXInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as BMPCXGetInstanceQueryParams,\n};\n","import * as _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/BLOCK_STORAGE';\nconst queryEditorName = 'cbsQuery';\n\nconst CBSInvalidDemensions = {\n  diskId: 'DiskId',\n  InstanceId: 'InstanceId',\n  diskname: 'DiskName',\n  unInstanceId: 'InstanceId',\n};\n\nconst CBSInstanceAliasList = ['DiskId', 'DiskName'];\n\nconst templateQueryIdMap = {\n  instance: 'DiskId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst CBSFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  DiskIds: [],\n  OrderField: [],\n  Order: [],\n  ReturnBindAutoSnapshotPolicy: false,\n};\n\nconst CBSFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'DiskIds',\n    enDescriptor: 'DiskIds',\n    cnDescriptor: '云硬盘ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'Order',\n    enDescriptor: 'Order',\n    cnDescriptor: '排列顺序',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '升序排列', value: 'ASC' },\n      { text: '降序排列', value: 'DESC' },\n    ],\n  },\n  {\n    key: 'OrderField',\n    enDescriptor: 'OrderField',\n    cnDescriptor: '排序的依据字段',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '云盘的创建时间排序', value: 'CREATE_TIME' },\n      { text: '云盘的到期时间排序', value: 'DEADLINE' },\n    ],\n  },\n  {\n    key: 'ReturnBindAutoSnapshotPolicy',\n    enDescriptor: 'ReturnBindAutoSnapshotPolicy',\n    cnDescriptor: '否需要返回云盘绑定的定期快照策略ID',\n    link: '',\n    type: 'switch',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/362/16315',\n  namespace,\n  fieldDescriptor: CBSFilterFieldsDescriptor,\n};\n\nconst CBS_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'DiskId',\n  queries: CBSFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\nfunction isValidMetric(metricObj: any = {}) {\n  const dimension = _.get(metricObj, 'Dimensions[0].Dimensions');\n  // console.log('dimension', dimension, dimension.length === 1 && _.indexOf(dimension, 'diskId') !== -1);\n  return dimension.length === 1 && _.indexOf(dimension, 'diskId') !== -1;\n}\nexport default CBS_STATE;\nexport {\n  CBSFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CBSInstanceAliasList,\n  CBSInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  isValidMetric,\n  GetInstanceQueryParams as CBSGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/CDN_LOG_DATA';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'cdnProvinceQuery';\n\nconst CDNPROVINCEInvalidDemensions = {\n  domain: 'Domain',\n  // isp: 'Isp',\n  projectid: 'ProjectId',\n  province: 'district',\n  appid: 'AppId',\n};\n\n// 需和文件名对应\nconst CDNPROVINCEInstanceAliasList = ['Domain', 'ProjectId'];\n\nconst templateQueryIdMap = {\n  instance: 'Domain',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst CDNPROVINCEFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  origin: [],\n  domain: [],\n  resourceId: [],\n  status: {},\n  serviceType: {},\n  projectId: [],\n  domainType: {},\n  fullUrlCache: {},\n  https: {},\n  originPullProtocol: {},\n  tagKey: [],\n};\n\nconst CDNPROVINCEFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'origin',\n    enDescriptor: 'origin',\n    cnDescriptor: '主源站',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'domain',\n    enDescriptor: 'domain',\n    cnDescriptor: '域名',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'resourceId',\n    enDescriptor: 'resourceId',\n    cnDescriptor: '域名id',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'status',\n    enDescriptor: 'status',\n    cnDescriptor: '域名状态',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'online', value: 'online' },\n      { text: 'offline', value: 'offline' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'serviceType',\n    enDescriptor: 'serviceType',\n    cnDescriptor: '业务类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'web', value: 'web' },\n      { text: 'download', value: 'download' },\n      { text: 'media', value: 'media' },\n    ],\n  },\n  {\n    key: 'projectId',\n    enDescriptor: 'projectId',\n    cnDescriptor: '项目ID',\n    link: '',\n    type: 'inputNumberMulti',\n  },\n  {\n    key: 'domainType',\n    enDescriptor: 'domainType',\n    cnDescriptor: '主源站类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '自有源', value: 'cname' },\n      { text: 'cos接入', value: 'cos' },\n    ],\n  },\n  {\n    key: 'fullUrlCache',\n    enDescriptor: 'fullUrlCache',\n    cnDescriptor: '全路径缓存',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '打开', value: 'on' },\n      { text: '关闭', value: 'off' },\n    ],\n  },\n  {\n    key: 'https',\n    enDescriptor: 'https',\n    cnDescriptor: '是否配置https',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'on', value: 'on' },\n      { text: 'off', value: 'off' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'originPullProtocol',\n    enDescriptor: 'originPullProtocol',\n    cnDescriptor: '回源协议类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'http', value: 'http' },\n      { text: 'follow', value: 'follow' },\n      { text: 'https', value: 'https' },\n    ],\n  },\n  {\n    key: 'tagKey',\n    enDescriptor: 'tagKey',\n    cnDescriptor: '标签键',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\nconst CDNPROVINCE_STATE = {\n  region: 'ap-guangzhou',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'Domain',\n  // Isp Province分别在两个接口，单独保存在state\n  isp: '',\n  district: '',\n  queries: CDNPROVINCEFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\n// const regionSupported = [\n//   { text: '华北地区(北京)', value: 'ap-beijing' },\n//   { text: '西南地区(成都)', value: 'ap-chengdu' },\n//   { text: '西南地区(重庆)', value: 'ap-chongqing' },\n//   { text: '华南地区(广州)', value: 'ap-guangzhou' },\n//   { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n//   { text: '亚太南部(孟买)', value: 'ap-mumbai' },\n//   { text: '华东地区(南京)', value: 'ap-nanjing' },\n//   { text: '华东地区(上海)', value: 'ap-shanghai' },\n//   { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },\n//   { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n//   { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n//   { text: '亚太东北(东京)', value: 'ap-tokyo' },\n//   { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },\n//   { text: '美国东部(弗吉尼亚)', value: 'na-ashburn' },\n//   { text: '美国西部(硅谷)', value: 'na-siliconvalley' },\n//   { text: '北美地区(多伦多)', value: 'na-toronto' },\n// ];\nexport default CDNPROVINCE_STATE;\nexport {\n  CDNPROVINCEFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CDNPROVINCEInstanceAliasList,\n  CDNPROVINCEInvalidDemensions,\n  namespace,\n  queryEditorName,\n  // regionSupported,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as CDNPROVINCEGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/CEIP_SUMMARY';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'ceipSummaryQuery';\n\nconst CEIPInvalidDemensions = {\n  vip: 'AddressIp',\n  eip: 'AddressIp',\n};\n\n// 要和文件名方式一致，ceip_summary=>CEIPSUMMARY\nconst CEIPSUMMARYInstanceAliasList = ['AddressId', 'AddressName', 'AddressIp'];\n\nconst templateQueryIdMap = {\n  instance: 'AddressId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst CEIPFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  'address-id': [],\n  'address-name': [],\n  'address-ip': [],\n  'address-status': {},\n  'is-arrears': {},\n  'address-isp': {},\n  'instance-id': [],\n  'private-ip-address': [],\n  'network-interface-id': [],\n};\n\nconst CEIPFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'address-id',\n    enDescriptor: 'address-id',\n    cnDescriptor: ' EIP 的唯一 ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'address-name',\n    enDescriptor: 'address-name',\n    cnDescriptor: 'EIP 名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'address-ip',\n    enDescriptor: 'address-ip',\n    cnDescriptor: 'EIP 的 IP 地址',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'address-status',\n    enDescriptor: 'address-status',\n    cnDescriptor: 'EIP 的状态',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: 'CREATING', value: 'CREATING' },\n      { text: 'BINDING', value: 'BINDING' },\n      { text: 'BIND', value: 'BIND' },\n      { text: 'UNBINDING', value: 'UNBINDING' },\n      { text: 'UNBIND', value: 'UNBIND' },\n      { text: 'OFFLINING', value: 'OFFLINING' },\n      { text: 'BIND_ENI', value: 'BIND_ENI' },\n    ],\n  },\n  {\n    key: 'instance-id',\n    enDescriptor: 'instance-id',\n    cnDescriptor: 'EIP 绑定的实例 ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'private-ip-address',\n    enDescriptor: 'private-ip-address',\n    cnDescriptor: 'EIP 绑定的内网 IP ',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'network-interface-id',\n    enDescriptor: 'network-interface-id',\n    cnDescriptor: ' EIP 绑定的弹性网卡 ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'is-arrears',\n    enDescriptor: 'is-arrears',\n    cnDescriptor: 'EIP 是否欠费',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '欠费状态', value: 'TRUE' },\n      { text: '费用状态正常', value: 'FALSE' },\n    ],\n  },\n  {\n    key: 'address-isp',\n    enDescriptor: 'address-isp',\n    cnDescriptor: '运营商类型',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: 'BGP', value: 'BGP' },\n      { text: 'CMCC', value: 'CMCC' },\n      { text: 'CUCC', value: 'CUCC' },\n      { text: 'CTCC', value: 'CTCC' },\n    ],\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/16702',\n  namespace,\n  fieldDescriptor: CEIPFilterFieldsDescriptor,\n};\n\nconst CEIP_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'AddressId',\n  queries: CEIPFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['eip'];\n  });\n  return metricTmp;\n}\nexport default CEIP_STATE;\nexport {\n  CEIPFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CEIPSUMMARYInstanceAliasList,\n  CEIPInvalidDemensions,\n  namespace,\n  queryEditorName,\n  modifyDimensons,\n  queryEditorConfig,\n  GetInstanceQueryParams as CEIPSUMMARYGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { FildDescriptorType } from '../_base/types';\n\nexport const InstanceQueryDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为10，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 50,\n  },\n  {\n    key: 'TopicName',\n    enDescriptor: 'TopicName',\n    cnDescriptor: '精确匹配TopicName',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'TagKey',\n    enDescriptor: 'TagKey',\n    cnDescriptor: '标签搜索',\n    link: '',\n    type: 'input',\n  },\n];\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\n// 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key\nexport const InvalidDemensions = {\n  topicId: 'TopicId',\n};\n\n// 因为cmq那边，以TopciName为主键\nexport const templateQueryIdMap = {\n  instance: 'TopicName',\n  subscription: 'SubscriptionId',\n};\n\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  subscriptionId: 'subscriptionId',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  subscriptionId: {\n    dim_KeyInStorage: keyInStorage.subscriptionId,\n    dim_KeyInTarget: 'subscriptionId',\n    dim_KeyInMap: templateQueryIdMap.subscription,\n  },\n};\n// 与名称挂钩的变量\nconst InstanceAliasList = ['TopicName', 'TopicId'];\nexport { InstanceAliasList, GetInstanceQueryParams, queryMonitorExtraConfg, keyInStorage };\n\n// 界面状态模型，default\nexport default {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'TopicName',\n  subscriptionId: '',\n  queries: {\n    Offset: 0,\n    Limit: 20,\n    TopicName: '',\n    TagKey: '',\n  },\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/CPM';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'cpmQuery';\n\nconst CPMInvalidDemensions = {\n  instanceId: 'InstanceId',\n  // uniqid: 'InstanceId',\n};\n\nconst CPMInstanceAliasList = ['InstanceId', 'Name'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst CPMFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  DeviceClassCode: '',\n  InstanceIds: [],\n  WanIps: [],\n  LanIps: [],\n  Alias: '',\n  VagueIp: '',\n  AutoRenewFlag: {},\n  VpcId: '',\n  SubnetId: '',\n  DeviceType: {},\n  IsLuckyDevice: {},\n};\n\nconst CPMFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'DeviceClassCode',\n    enDescriptor: 'DeviceClassCode',\n    cnDescriptor: '机型ID',\n    link: '',\n    type: 'dropdown',\n  },\n  {\n    key: 'InstanceIds',\n    enDescriptor: 'InstanceIds',\n    cnDescriptor: '设备ID数组',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'WanIps',\n    enDescriptor: 'WanIps',\n    cnDescriptor: '外网IP数组',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LanIps',\n    enDescriptor: 'LanIps',\n    cnDescriptor: '内网IP数组',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'Alias',\n    enDescriptor: 'Alias',\n    cnDescriptor: '设备名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'VagueIp',\n    enDescriptor: 'VagueIp',\n    cnDescriptor: '模糊IP查询',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'AutoRenewFlag',\n    enDescriptor: 'AutoRenewFlag',\n    cnDescriptor: '自动续费标志',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '不自动续费', value: 0 },\n      { text: '自动续费', value: 1 },\n    ],\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'VpcId',\n    cnDescriptor: '私有网络唯一ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SubnetId',\n    enDescriptor: 'SubnetId',\n    cnDescriptor: '子网唯一ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'DeviceType',\n    enDescriptor: 'DeviceType',\n    cnDescriptor: '子网实例ID',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '计算型', value: 'compute' },\n      { text: '标准型', value: 'standard' },\n      { text: '存储型', value: 'storage' },\n    ],\n  },\n  {\n    key: 'IsLuckyDevice',\n    enDescriptor: 'IsLuckyDevice',\n    cnDescriptor: '竞价实例机器过滤',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '非竞价实例机器', value: 0 },\n      { text: '竞价实例的机器', value: 1 },\n    ],\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/386/32904',\n  namespace,\n  fieldDescriptor: CPMFilterFieldsDescriptor,\n};\n\nconst CPM_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: CPMFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\n\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['instanceId'];\n  });\n  return metricTmp;\n}\nexport default CPM_STATE;\nexport {\n  CPMFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CPMInstanceAliasList,\n  CPMInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as CPMGetInstanceQueryParams,\n};\n","import { cloneDeep, compact, forEach, get, isArray, isEmpty, isObject, omit, uniq } from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\n\nconst namespace = 'QCE/DSA';\nconst queryEditorName = 'ecdnQuery';\n\nconst ECDNInstanceAliasList = ['Domain'];\n\nconst templateQueryIdMap = {\n  instance: 'Domain',\n};\n\nconst ECDNInvalidDemensions = {\n  domain: 'Domain',\n  projectid: 'ProjectId',\n};\n\nconst ECDN_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'Domain',\n  queries: {\n    Limit: 100,\n    Offset: 0,\n    origin: [],\n    domain: [],\n    resourceId: [],\n    status: [],\n    disable: [],\n    projectId: [],\n    fullUrlCache: [],\n    https: [],\n    originPullProtocol: [],\n    area: [],\n    tagKey: [],\n  },\n};\n\nconst ECDNFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'origin',\n    enDescriptor: 'Origin',\n    cnDescriptor: '主源站',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'domain',\n    enDescriptor: 'Domain',\n    cnDescriptor: '域名',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'resourceId',\n    enDescriptor: 'ResourceId',\n    cnDescriptor: '域名id',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'status',\n    enDescriptor: 'Status',\n    cnDescriptor: '域名状态',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'online', value: 'online' },\n      { text: 'offline', value: 'offline' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'disable',\n    enDescriptor: 'Disable',\n    cnDescriptor: '域名封禁状态',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'normal', value: 'normal' },\n      { text: 'unlicensed', value: 'unlicensed' },\n    ],\n  },\n  {\n    key: 'projectId',\n    enDescriptor: 'ProjectId',\n    cnDescriptor: '项目ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'fullUrlCache',\n    enDescriptor: 'FullUrlCache',\n    cnDescriptor: '全路径缓存',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'on', value: 'on' },\n      { text: 'off', value: 'off' },\n    ],\n  },\n  {\n    key: 'https',\n    enDescriptor: 'Https',\n    cnDescriptor: '是否配置https',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'on', value: 'on' },\n      { text: 'off', value: 'off' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'originPullProtocol',\n    enDescriptor: 'OriginPullProtocol',\n    cnDescriptor: '回源协议类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'http', value: 'http' },\n      { text: 'https', value: 'https' },\n      { text: 'follow', value: 'follow' },\n    ],\n  },\n  {\n    key: 'area',\n    enDescriptor: 'Area',\n    cnDescriptor: '加速区域',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'mainland', value: 'mainland' },\n      { text: 'overseas', value: 'overseas' },\n      { text: 'global', value: 'global' },\n    ],\n  },\n  {\n    key: 'tagKey',\n    enDescriptor: 'TagKey',\n    cnDescriptor: '标签键',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/570/42462',\n  namespace,\n  fieldDescriptor: ECDNFilterFieldsDescriptor,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!isEmpty(queries)) {\n    params.Limit = get(queries, 'Limit', 20) || 20;\n    params.Offset = get(queries, 'Offset', 0) || 0;\n    const _queries = omit(queries, ['Offset', 'Limit']);\n    const Filters: any[] = [];\n    forEach(_queries, (item: any, key) => {\n      if (isArray(item)) {\n        item = compact(item);\n        if (item.length > 0) {\n          Filters.push({ Name: key, Value: uniq(item).slice(0, 5) });\n        }\n      } else if (isObject(item)) {\n        if (!isEmpty(get(item, 'value', []))) {\n          Filters.push({ Name: key, Value: [get(item, 'value', [])].slice(0, 5) });\n        }\n      }\n    });\n    if (Filters.length > 0) {\n      params.Filters = Filters.map((item) => {\n        if (item.Name === 'domain') {\n          return { ...item, Fuzzy: true };\n        }\n        return item;\n      });\n      return params;\n    }\n  }\n  return params;\n}\n\nfunction modifyDimensons(metricItem) {\n  const metricTmp = cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['domain', 'projectid'];\n  });\n  return metricTmp;\n}\n\nexport default ECDN_STATE;\n\nexport {\n  ECDNFilterFieldsDescriptor,\n  templateQueryIdMap,\n  ECDNInstanceAliasList,\n  ECDNInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  GetInstanceQueryParams as ECDNGetInstanceQueryParams,\n};\n","import * as _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/ECM';\nconst queryEditorName = 'ecmQuery';\n\nconst ECMInvalidDemensions = {\n  // diskId: 'InstanceId',\n  uuid: 'UUID',\n  // unInstanceId: 'InstanceId',\n};\n\nconst ECMInstanceAliasList = ['InstanceId', 'InstanceName'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst ECMFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  zone: [],\n  'zone-name': [],\n  'module-id': [],\n  'module-name': [],\n  'instance-id': [],\n  'instance-name': [],\n  'ip-address': [],\n  'instance-uuid': [],\n  'instance-state': {},\n  'internet-service-provider': [],\n  'instance-family': [],\n  'image-id': [],\n  'vpc-id': [],\n  'subnet-id': [],\n};\n\nconst ECMFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'zone',\n    enDescriptor: 'zone',\n    cnDescriptor: '可用区英文标识',\n    link: '',\n    type: 'dropdownMulti',\n  },\n  {\n    key: 'zone-name',\n    enDescriptor: 'zone-name',\n    cnDescriptor: '排列顺序',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'module-id',\n    enDescriptor: 'module-id',\n    cnDescriptor: '模块ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'module-name',\n    enDescriptor: 'module-name',\n    cnDescriptor: '模块名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-id',\n    enDescriptor: 'instance-id',\n    cnDescriptor: '实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-name',\n    enDescriptor: 'instance-name',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'ip-address',\n    enDescriptor: 'ip-address',\n    cnDescriptor: '内网/公网IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-uuid',\n    enDescriptor: 'instance-uuid',\n    cnDescriptor: '实例uuid',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-state',\n    enDescriptor: 'instance-state',\n    cnDescriptor: '实例状态',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '创建中', value: 'PENDING' },\n      { text: '创建失败', value: 'LAUNCH_FAILED' },\n      { text: '运行中', value: 'RUNNING' },\n      { text: '关机', value: 'STOPPED' },\n      { text: '开机中', value: 'STARTING' },\n      { text: '关机中', value: 'STOPPING' },\n      { text: '重启中', value: 'REBOOTING' },\n      { text: '停止待销毁', value: 'SHUTDOWN' },\n      { text: '销毁中', value: 'TERMINATING' },\n    ],\n  },\n  {\n    key: 'internet-service-provider',\n    enDescriptor: 'internet-service-provider',\n    cnDescriptor: '公网IP所属的运营商',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-family',\n    enDescriptor: 'instance-family',\n    cnDescriptor: '机型family',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'image-id',\n    enDescriptor: 'image-id',\n    cnDescriptor: '镜像ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'vpc-id',\n    cnDescriptor: '实例的vpc id',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'subnet-id',\n    enDescriptor: 'subnet-id',\n    cnDescriptor: '实例的subnet id',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/1108/42565',\n  namespace,\n  fieldDescriptor: ECMFilterFieldsDescriptor,\n};\n\nconst ECM_STATE = {\n  region: 'ap-guangzhou',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: ECMFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\n// function isValidMetric(metricObj: any = {}) {\n//   const dimension = _.get(metricObj, 'Dimensions[0].Dimensions');\n//   // console.log('dimension', dimension, dimension.length === 1 && _.indexOf(dimension, 'diskId') !== -1);\n//   return dimension.length === 1 &&( _.indexOf(dimension, 'UUID') !== -1 || _.indexOf(dimension, 'uuid') !== -1);\n// }\n\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['UUID'];\n  });\n  return metricTmp;\n}\nexport default ECM_STATE;\nexport {\n  ECMFilterFieldsDescriptor,\n  templateQueryIdMap,\n  ECMInstanceAliasList,\n  ECMInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  GetInstanceQueryParams as ECMGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nconst namespace = 'QCE/POSTGRES';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'postgresQuery';\n\nconst PostgresFields = {\n  'db-instance-id': [],\n  'db-instance-name': [],\n};\n\nconst PostgresFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'db-instance-id',\n    enDescriptor: 'DB Instance ID',\n    cnDescriptor: 'DB 实例ID',\n    link: '',\n    type: 'inputMulti',\n    min: 0,\n  },\n  {\n    key: 'db-instance-name',\n    enDescriptor: 'DB Instance Name',\n    cnDescriptor: 'DB 实例名称',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/409/16773',\n  namespace,\n  fieldDescriptor: PostgresFieldsDescriptor,\n};\nconst POSTGRESInstanceAliasList = ['DBInstanceId', 'DBInstanceName'];\n\nconst POSTGRES_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'DBInstanceId',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    Filters: { ...PostgresFields },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['resourceId'];\n  });\n  return metricTmp;\n}\nconst PostgreInvalidDemensions = {\n  uid: 'DBInstanceId',\n  resourceId: 'DBInstanceId',\n};\nconst templateQueryIdMap = {\n  instance: 'DBInstanceId',\n};\nexport default POSTGRES_STATE;\n\nexport {\n  PostgresFieldsDescriptor,\n  POSTGRESInstanceAliasList,\n  templateQueryIdMap,\n  modifyDimensons,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  PostgreInvalidDemensions,\n  GetInstanceQueryParams as POSTGRESGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/VPC_NET_DETECT';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'vpcNetDetectQuery';\n\nconst VPCNETInvalidDemensions = {\n  netdetectid: 'NetDetectId',\n  netDetectId: 'NetDetectId',\n};\n\nconst VPCNETDETECTInstanceAliasList = ['NetDetectId', 'NetDetectName'];\n\nconst templateQueryIdMap = {\n  instance: 'NetDetectId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst VPCNETFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  'vpc-id': [],\n  'net-detect-id': [],\n  'subnet-id': [],\n  'net-detect-name': [],\n};\n\nconst VPCNETFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'vpc-id',\n    cnDescriptor: 'VPC实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'net-detect-id',\n    enDescriptor: 'net-detect-id',\n    cnDescriptor: '网络探测实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'subnet-id',\n    enDescriptor: 'subnet-id',\n    cnDescriptor: '子网实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'net-detect-name',\n    enDescriptor: 'net-detect-name',\n    cnDescriptor: '网络探测名称',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/38696',\n  namespace,\n  fieldDescriptor: VPCNETFilterFieldsDescriptor,\n};\n\nconst VPCNET_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'NetDetectId',\n  queries: VPCNETFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['netDetectId'];\n  });\n  return metricTmp;\n}\nexport default VPCNET_STATE;\nexport {\n  VPCNETFilterFieldsDescriptor,\n  templateQueryIdMap,\n  VPCNETDETECTInstanceAliasList,\n  VPCNETInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  GetInstanceQueryParams as VPCNETDETECTGetInstanceQueryParams,\n};\n","import * as _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/WAF';\nconst queryEditorName = 'wafQuery';\nconst WAFFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  origin: [],\n  domain: [],\n  resourceId: [],\n  status: {},\n  serviceType: {},\n  projectId: [],\n  domainType: {},\n  fullUrlCache: {},\n  https: {},\n  originPullProtocol: {},\n  tagKey: [],\n};\n\nconst WAFFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'origin',\n    enDescriptor: 'origin',\n    cnDescriptor: '主源站',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'domain',\n    enDescriptor: 'domain',\n    cnDescriptor: '域名',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'resourceId',\n    enDescriptor: 'resourceId',\n    cnDescriptor: '域名id',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'status',\n    enDescriptor: 'status',\n    cnDescriptor: '域名状态',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'online', value: 'online' },\n      { text: 'offline', value: 'offline' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'serviceType',\n    enDescriptor: 'serviceType',\n    cnDescriptor: '业务类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'web', value: 'web' },\n      { text: 'download', value: 'download' },\n      { text: 'media', value: 'media' },\n    ],\n  },\n  {\n    key: 'projectId',\n    enDescriptor: 'projectId',\n    cnDescriptor: '项目ID',\n    link: '',\n    type: 'inputNumberMulti',\n  },\n  {\n    key: 'domainType',\n    enDescriptor: 'domainType',\n    cnDescriptor: '主源站类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '自有源', value: 'cname' },\n      { text: 'cos接入', value: 'cos' },\n    ],\n  },\n  {\n    key: 'fullUrlCache',\n    enDescriptor: 'fullUrlCache',\n    cnDescriptor: '全路径缓存',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '打开', value: 'on' },\n      { text: '关闭', value: 'off' },\n    ],\n  },\n  {\n    key: 'https',\n    enDescriptor: 'https',\n    cnDescriptor: '是否配置https',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'on', value: 'on' },\n      { text: 'off', value: 'off' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'originPullProtocol',\n    enDescriptor: 'originPullProtocol',\n    cnDescriptor: '回源协议类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'http', value: 'http' },\n      { text: 'follow', value: 'follow' },\n      { text: 'https', value: 'https' },\n    ],\n  },\n  {\n    key: 'tagKey',\n    enDescriptor: 'tagKey',\n    cnDescriptor: '标签键',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/228/41118',\n  namespace,\n  fieldDescriptor: WAFFilterFieldsDescriptor,\n};\nconst WAF_STATE = {\n  region: 'ap-guangzhou',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'Domain',\n  queries: WAFFilterFields,\n};\nconst regionSupported = [\n  { value: 'ap-beijing' },\n  { value: 'ap-chengdu' },\n  { value: 'ap-chongqing' },\n  { value: 'ap-guangzhou' },\n  { value: 'ap-hongkong' },\n  { value: 'ap-nanjing' },\n  { value: 'ap-shanghai' },\n  { value: 'ap-shanghai-fsi' },\n  { value: 'ap-seoul' },\n  { value: 'ap-singapore' },\n];\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\n\nconst WAFInstanceAliasList = ['Domain', 'ProjectId'];\n\nconst WAFInvalidDemensions = {\n  projectId: 'ProjectId',\n  domain: 'Domain',\n};\nconst templateQueryIdMap = {\n  instance: 'Domain',\n};\nexport default WAF_STATE;\nexport {\n  WAFFilterFieldsDescriptor,\n  templateQueryIdMap,\n  WAFInstanceAliasList,\n  WAFInvalidDemensions,\n  namespace,\n  regionSupported,\n  queryEditorName,\n  queryEditorConfig,\n  GetInstanceQueryParams as WAFGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\nconst InstanceTypes = [\n  { text: '主实例', value: 1 },\n  { text: '备灾实例', value: 2 },\n  { text: '只读实例', value: 3 },\n];\n\nconst Status = [\n  { text: '创建中', value: 0 },\n  { text: '运行中', value: 1 },\n  { text: '隔离中', value: 4 },\n  { text: '已隔离', value: 5 },\n];\n\nconst PayTypes = [\n  { text: '包年包月', value: 0 },\n  { text: '小时计费', value: 1 },\n];\n\nconst TaskStatus = [\n  { text: '没有任务', value: 0 },\n  { text: '升级中', value: 1 },\n  { text: '数据导入中', value: 2 },\n  { text: '开放Slave中', value: 3 },\n  { text: '外网访问开通中', value: 4 },\n  { text: '批量操作执行中', value: 5 },\n  { text: '回档中', value: 6 },\n  { text: '外网访问关闭中', value: 7 },\n  { text: '密码修改中', value: 8 },\n  { text: '实例名修改中', value: 9 },\n  { text: '重启中', value: 10 },\n  { text: '自建迁移中', value: 12 },\n  { text: '删除库表中', value: 13 },\n  { text: '灾备实例创建同步中', value: 14 },\n  { text: '升级待切换', value: 15 },\n  { text: '升级切换中', value: 16 },\n  { text: '升级切换完成', value: 17 },\n];\n\nconst EngineVersions = [\n  { text: '5.1', value: '5.1' },\n  { text: '5.5', value: '5.5' },\n  { text: '5.6', value: '5.6' },\n  { text: '5.7', value: '5.7' },\n];\n\nconst OrderBy = [\n  { text: 'InstanceId', value: 'InstanceId' },\n  { text: 'InstanceName', value: 'InstanceName' },\n  { text: 'CreateTime', value: 'CreateTime' },\n  { text: 'DeadlineTime', value: 'DeadlineTime' },\n];\n\nconst OrderDirection = [\n  { text: 'ASC', value: 'ASC' },\n  { text: 'DESC', value: 'DESC' },\n];\n\nconst InitFlag = [\n  { text: '未初始化', value: 0 },\n  { text: '初始化', value: 1 },\n];\n\nconst CdbErrors = [\n  { text: '未锁定', value: 0 },\n  { text: '锁定', value: 1 },\n];\n\nconst CDBFields = {\n  ProjectId: '',\n  InstanceTypes: {},\n  Vips: [],\n  Status: {},\n  Offset: 0,\n  Limit: 20,\n  SecurityGroupId: '',\n  PayTypes: {},\n  InstanceNames: [],\n  TaskStatus: {},\n  EngineVersions: {},\n  VpcIds: [],\n  ZoneIds: [],\n  SubnetIds: [],\n  CdbErrors: {},\n  OrderBy: {},\n  OrderDirection: {},\n  InstanceIds: [],\n  InitFlag: {},\n};\n\nconst CDBFieldsDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceNames',\n    enDescriptor: 'Instance Name',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'InstanceIds',\n    enDescriptor: 'Instance ID',\n    cnDescriptor: '实例ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'ZoneIds',\n    enDescriptor: 'Zone ID',\n    cnDescriptor: '可用区的ID',\n    link: '',\n    type: 'dropdownmulti',\n  },\n  {\n    key: 'InstanceTypes',\n    enDescriptor: 'Instance Type',\n    cnDescriptor: '实例类型',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: InstanceTypes,\n  },\n  {\n    key: 'EngineVersions',\n    enDescriptor: 'Engine Version',\n    cnDescriptor: '实例数据库引擎版本',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: EngineVersions,\n  },\n  {\n    key: 'TaskStatus',\n    enDescriptor: 'Task Status',\n    cnDescriptor: '实例任务',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: TaskStatus,\n  },\n  {\n    key: 'InitFlag',\n    enDescriptor: 'Init Flag',\n    cnDescriptor: '实例初始化状态',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: InitFlag,\n  },\n  {\n    key: 'PayTypes',\n    enDescriptor: 'Pay Type',\n    cnDescriptor: '付费类型',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: PayTypes,\n  },\n  {\n    key: 'CdbErrors',\n    enDescriptor: 'CDB Errors',\n    cnDescriptor: '实例锁定标记',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: CdbErrors,\n  },\n  {\n    key: 'Status',\n    enDescriptor: 'Status',\n    cnDescriptor: '实例状态',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: Status,\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderBy,\n  },\n  {\n    key: 'OrderDirection',\n    enDescriptor: 'Order Direction',\n    cnDescriptor: '排序方式',\n    link: '',\n    type: 'select',\n    list: OrderDirection,\n  },\n  {\n    key: 'Vips',\n    enDescriptor: 'Vip',\n    cnDescriptor: '实例内网IP地址',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'VpcIds',\n    enDescriptor: 'Vpc ID',\n    cnDescriptor: '私有网络ID',\n    link: 'https://cloud.tencent.com/document/api/215/15778',\n    type: 'inputmulti',\n  },\n  {\n    key: 'SubnetIds',\n    enDescriptor: 'Subnet ID',\n    cnDescriptor: '子网ID',\n    link: 'https://cloud.tencent.com/document/api/215/15784',\n    type: 'inputmulti',\n  },\n  {\n    key: 'ProjectId',\n    enDescriptor: 'Project ID',\n    cnDescriptor: '项目ID',\n    link: 'https://cloud.tencent.com/document/product/378/4400',\n    type: 'input',\n  },\n  {\n    key: 'SecurityGroupId',\n    enDescriptor: 'Security Group ID',\n    cnDescriptor: '安全组ID',\n    link: 'https://cloud.tencent.com/document/api/236/15854',\n    type: 'input',\n  },\n];\n\nconst CDB_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: { ...CDBFields },\n};\n\nconst CDBInstanceAliasList = ['InstanceId', 'InstanceName', 'Vip'];\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\nfunction isValidMetric(metricObj: any = {}) {\n  const dimension = _.get(metricObj, 'Dimensions[0].Dimensions');\n  return (\n    dimension.length === 2 &&\n    ((_.indexOf(dimension, 'instanceid') !== -1 && _.indexOf(dimension, 'insttype') !== -1) ||\n      (_.indexOf(dimension, 'InstanceId') !== -1 && _.indexOf(dimension, 'InstanceType') !== -1))\n  );\n}\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = item.Dimensions.map((i) => CDBInvalidDemensions[i] || i);\n  });\n  return metricTmp;\n}\nconst CDBInvalidDemensions = {\n  instanceid: 'InstanceId',\n  insttype: 'InstanceType',\n  region: 'Region',\n};\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\nexport default CDB_STATE;\n\nexport {\n  CDBFieldsDescriptor,\n  CDBInstanceAliasList,\n  templateQueryIdMap,\n  CDBInvalidDemensions,\n  isValidMetric,\n  modifyDimensons,\n  GetInstanceQueryParams as CDBGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/CES';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'cesQuery';\n\nconst CESInvalidDemensions = {\n  uInstanceId: 'InstanceId',\n};\n\nconst CESInstanceAliasList = ['InstanceId', 'InstanceName'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是类型\nconst CESFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  InstanceIds: [],\n  InstanceNames: [],\n  OrderByKey: {},\n  OrderByType: {},\n  IpList: [],\n};\n\nconst CESFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceIds',\n    enDescriptor: 'InstanceIds',\n    cnDescriptor: '集群实例ID列表',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'InstanceNames',\n    enDescriptor: 'InstanceNames',\n    cnDescriptor: '集群实例名称列表',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'OrderByKey',\n    enDescriptor: 'OrderByKey',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '实例ID', value: 1 },\n      { text: '实例名称', value: 2 },\n      { text: '可用区', value: 3 },\n      { text: '创建时间', value: 4 },\n    ],\n  },\n  {\n    key: 'OrderByType',\n    enDescriptor: 'OrderByType',\n    cnDescriptor: '排序方式',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '升序', value: 0 },\n      { text: '降序', value: 1 },\n    ],\n  },\n  {\n    key: 'IpList',\n    enDescriptor: 'IpList',\n    cnDescriptor: '私有网络vip列表',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/845/30631',\n  namespace,\n  fieldDescriptor: CESFilterFieldsDescriptor,\n};\n\nconst CES_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: CESFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\nexport default CES_STATE;\nexport {\n  CESFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CESInstanceAliasList,\n  CESInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as CESGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/DC';\nconst queryEditorName = 'dcQuery';\n\nconst DCFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  DirectConnectIds: [],\n};\n\nconst DCFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'DirectConnectIds',\n    enDescriptor: 'DirectConnectIds',\n    cnDescriptor: '物理专线 ID',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/216/34826',\n  namespace,\n  fieldDescriptor: DCFilterFieldsDescriptor,\n};\n\nconst DC_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'DirectConnectId',\n  queries: DCFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\n\nconst DCInstanceAliasList = ['DirectConnectId', 'DirectConnectName'];\n\nconst templateQueryIdMap = {\n  instance: 'DirectConnectId',\n};\n\nconst DCInvalidDemensions = {\n  directConnectId: 'DirectConnectId',\n  directconnectid: 'DirectConnectId',\n};\nfunction modifyDimensons(metricItem) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['directConnectId'];\n  });\n  return metricTmp;\n}\nexport default DC_STATE;\nexport {\n  DCFilterFieldsDescriptor,\n  templateQueryIdMap,\n  DCInstanceAliasList,\n  DCInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  GetInstanceQueryParams as DCGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/DCG';\nconst queryEditorName = 'dcgQuery';\n\nconst DCGInvalidDemensions = {\n  directConnectGatewayId: 'DirectConnectGatewayId',\n};\n\nconst DCGInstanceAliasList = ['DirectConnectGatewayId', 'DirectConnectGatewayName'];\n\nconst templateQueryIdMap = {\n  instance: 'DirectConnectGatewayId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst DCGFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  'direct-connect-gateway-id': [],\n  'direct-connect-gateway-name': [],\n  'direct-connect-gateway-ip': [],\n  'gateway-type': {},\n  'network-type': {},\n  'ccn-id': [],\n  'vpc-id': [],\n};\n\nconst DCGFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'direct-connect-gateway-id',\n    enDescriptor: 'direct-connect-gateway-id',\n    cnDescriptor: '专线网关唯一ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'direct-connect-gateway-name',\n    enDescriptor: 'direct-connect-gateway-name',\n    cnDescriptor: '专线网关名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'direct-connect-gateway-ip',\n    enDescriptor: 'direct-connect-gateway-ip',\n    cnDescriptor: '专线网关IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'gateway-type',\n    enDescriptor: 'gateway-type',\n    cnDescriptor: '网关类型',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '普通型', value: 'NORMAL' },\n      { text: 'NAT型', value: 'NAT' },\n    ],\n  },\n  {\n    key: 'network-type',\n    enDescriptor: 'network-type',\n    cnDescriptor: '网络类型',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '私有网络类型', value: 'VPC' },\n      { text: '云联网类型', value: 'CCN' },\n    ],\n  },\n  {\n    key: 'ccn-id',\n    enDescriptor: 'ccn-id',\n    cnDescriptor: '专线网关所在云联网ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'vpc-id',\n    cnDescriptor: '专线网关所在私有网络ID',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/30644',\n  namespace,\n  fieldDescriptor: DCGFilterFieldsDescriptor,\n};\n\nconst DCG_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'DirectConnectGatewayId',\n  queries: DCGFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nexport default DCG_STATE;\nexport {\n  DCGFilterFieldsDescriptor,\n  templateQueryIdMap,\n  DCGInstanceAliasList,\n  DCGInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  GetInstanceQueryParams as DCGGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/DCX';\nconst queryEditorName = 'dcxQuery';\n\nconst DCXFilterFields = {\n  'direct-connect-tunnel-name': [],\n  'direct-connect-tunnel-id': [],\n  'direct-connect-id': [],\n};\n\nconst DCXFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'direct-connect-tunnel-name',\n    enDescriptor: 'direct-connect-tunnel-name',\n    cnDescriptor: '专用通道名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'direct-connect-tunnel-id',\n    enDescriptor: 'direct-connect-tunnel-id',\n    cnDescriptor: '专用通道实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'direct-connect-id',\n    enDescriptor: 'direct-connect-id',\n    cnDescriptor: '物理专线实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/216/19819',\n  namespace,\n  fieldDescriptor: DCXFilterFieldsDescriptor,\n};\n\nconst DCX_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'DirectConnectTunnelId',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    ...DCXFilterFields,\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\n\nconst DCXInstanceAliasList = ['DirectConnectTunnelId', 'DirectConnectTunnelName'];\n\nconst templateQueryIdMap = {\n  instance: 'DirectConnectTunnelId',\n};\n\nconst DCXInvalidDemensions = {\n  directconnectconnid: 'DirectConnectTunnelId',\n  directConnectConnId: 'DirectConnectTunnelId',\n};\nfunction modifyDimensons(metricItem) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['directConnectConnId'];\n  });\n  return metricTmp;\n}\nexport default DCX_STATE;\nexport {\n  DCXFilterFieldsDescriptor,\n  templateQueryIdMap,\n  DCXInstanceAliasList,\n  DCXInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  GetInstanceQueryParams as DCXGetInstanceQueryParams,\n};\n","import * as _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/ECM_LB';\nconst queryEditorName = 'ecmLbQuery';\n\nconst ECMLBInvalidDemensions = {\n  vip: 'LoadBalancerVips',\n};\n\nconst ECMLBInstanceAliasList = ['LoadBalancerId', 'LoadBalancerName'];\n\nconst templateQueryIdMap = {\n  instance: 'LoadBalancerId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst ECMLBFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  LoadBalancerIds: [],\n  LoadBalancerName: [],\n  LoadBalancerVips: [],\n  BackendPrivateIps: [],\n  VpcId: '',\n};\n\nconst ECMLBFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'LoadBalancerIds',\n    enDescriptor: 'LoadBalancerIds',\n    cnDescriptor: '负载均衡器ID数组',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerName',\n    enDescriptor: 'LoadBalancerName',\n    cnDescriptor: '负载均衡器名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerVips',\n    enDescriptor: 'LoadBalancerVips',\n    cnDescriptor: '负载均衡获得的公网IP地址',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'BackendPrivateIps',\n    enDescriptor: 'BackendPrivateIps',\n    cnDescriptor: '绑定的后端服务的内网 IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'VpcId',\n    cnDescriptor: '实例所属私有网络唯一ID',\n    link: '',\n    type: 'input',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/1108/48459',\n  namespace,\n  fieldDescriptor: ECMLBFilterFieldsDescriptor,\n};\n\nconst ECM_STATE = {\n  region: 'ap-guangzhou',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'LoadBalancerId',\n  queries: ECMLBFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\n// function isValidMetric(metricObj: any = {}) {\n//   const dimension = _.get(metricObj, 'Dimensions[0].Dimensions');\n//   // console.log('dimension', dimension, dimension.length === 1 && _.indexOf(dimension, 'diskId') !== -1);\n//   return dimension.length === 1 &&( _.indexOf(dimension, 'UUID') !== -1 || _.indexOf(dimension, 'uuid') !== -1);\n// }\n\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    // item.Dimensions = ['UUID'];\n  });\n  return metricTmp;\n}\nexport default ECM_STATE;\nexport {\n  ECMLBFilterFieldsDescriptor,\n  templateQueryIdMap,\n  ECMLBInstanceAliasList,\n  ECMLBInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  GetInstanceQueryParams as ECMLBGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nconst InstanceTypes = [\n  { text: '所有实例', value: 0 },\n  { text: '正式实例', value: 1 },\n  { text: '临时实例', value: 2 },\n  { text: '只读实例', value: 3 },\n  { text: '正式，只读，灾备实例', value: -1 },\n];\n\nconst ClusterTypes = [\n  { text: '副本集实例', value: 0 },\n  { text: '分片实例', value: 1 },\n  { text: '所有实例', value: -1 },\n];\n\nconst Status = [\n  { text: '待初始化', value: 0 },\n  { text: '流程执行中', value: 1 },\n  { text: '实例有效', value: 2 },\n  { text: '实例已过期', value: -2 },\n];\n\nconst PayMode = [\n  { text: '按量计费', value: 0 },\n  { text: '包年包月', value: 1 },\n  { text: '按量包年包月计费', value: -1 },\n];\n\nconst OrderBy = [\n  { text: 'ProjectId', value: 'ProjectId' },\n  { text: 'InstanceName', value: 'InstanceName' },\n  { text: 'CreateTime', value: 'CreateTime' },\n];\n\nconst OrderByType = [\n  { text: '升序', value: 'ASC' },\n  { text: '降序', value: 'DESC' },\n];\n\nconst MongoDBFields = {\n  InstanceIds: [],\n  InstanceType: {},\n  ClusterType: {},\n  Status: [],\n  VpcId: '',\n  SubnetId: '',\n  PayMode: {},\n  Limit: 20,\n  Offset: 0,\n  OrderBy: '',\n  OrderByType: '',\n};\n\nconst MONGODBFieldsDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceIds',\n    enDescriptor: 'InstancesIds',\n    cnDescriptor: '实例名称',\n    type: 'inputmulti',\n  },\n  {\n    key: 'InstanceType',\n    enDescriptor: 'InstanceType',\n    cnDescriptor: '实例类型',\n    link: '',\n    type: 'select',\n    list: InstanceTypes,\n  },\n  {\n    key: 'ClusterType',\n    enDescriptor: 'ClusterType',\n    cnDescriptor: '集群类型',\n    link: '',\n    type: 'select',\n    list: ClusterTypes,\n  },\n  {\n    key: 'Status',\n    enDescriptor: 'Status',\n    cnDescriptor: '实例状态',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: Status,\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'VpcId',\n    cnDescriptor: '私有网络的ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SubnetId',\n    enDescriptor: 'SubnetId',\n    cnDescriptor: '私有网络的子网ID，基础网络则不传该参数。入参设置该参数的同时，必须设置相应的VpcId',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'PayMode',\n    enDescriptor: 'PayMode',\n    cnDescriptor: '付费类型',\n    link: '',\n    type: 'select',\n    list: PayMode,\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderBy,\n  },\n  {\n    key: 'OrderByType',\n    enDescriptor: 'OrderByType',\n    cnDescriptor: '排序方式',\n    link: '',\n    type: 'select',\n    list: OrderByType,\n  },\n];\n\nconst MONGODB_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: { ...MongoDBFields },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        // select 单选\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\nconst MONGODBInstanceAliasList = ['InstanceId', 'InstanceName'];\n\nconst MONGODBInvalidDemensions = {\n  target: 'InstanceId',\n};\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n  replica: 'ReplicaSetId',\n};\n\nconst queryMonitorExtraConfg = {\n  Replica: {\n    dim_KeyInStorage: 'ReplicaSets',\n    dim_KeyInTarget: 'replica',\n    dim_KeyInMap: 'ReplicaSetId',\n    dim_KeyInIns: 'ReplicaSetId',\n  },\n  Node: {\n    dim_KeyInStorage: 'ReplicaNodeSets',\n    dim_KeyInTarget: 'node',\n    dim_KeyInMap: 'NodeId',\n    dim_KeyInIns: 'NodeId',\n  },\n};\nexport default MONGODB_STATE;\nexport {\n  MONGODBFieldsDescriptor,\n  MONGODBInvalidDemensions,\n  MONGODBInstanceAliasList,\n  templateQueryIdMap,\n  queryMonitorExtraConfg,\n  GetInstanceQueryParams as MONGODBGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/QAAP';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'qaapQuery';\n\nconst QAAPInvalidDemensions = {\n  channelId: 'InstanceId',\n};\n\nconst QAAPInstanceAliasList = ['InstanceId'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst QAAPFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  ProjectId: [],\n  AccessRegion: [],\n  RealServerRegion: [],\n  GroupId: [],\n};\n\nconst QAAPFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'ProjectId',\n    enDescriptor: 'ProjectId',\n    cnDescriptor: '项目ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'AccessRegion',\n    enDescriptor: 'AccessRegion',\n    cnDescriptor: '接入地域',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'RealServerRegion',\n    enDescriptor: 'RealServerRegion',\n    cnDescriptor: '源站地域',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'GroupId',\n    enDescriptor: 'GroupId',\n    cnDescriptor: '通道组ID',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/608/36963',\n  namespace,\n  fieldDescriptor: QAAPFilterFieldsDescriptor,\n};\n\nconst QAAP_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: QAAPFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  // metricTmp.Dimensions.forEach((item) => {\n  //   item.Dimensions = ['netDetectId'];\n  // });\n  return metricTmp;\n}\nexport default QAAP_STATE;\nexport {\n  QAAPFilterFieldsDescriptor,\n  templateQueryIdMap,\n  QAAPInstanceAliasList,\n  QAAPInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  GetInstanceQueryParams as QAAPGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/TCAPLUS';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'tcaplusQuery';\n\nconst TCAPLUSInvalidDemensions = {\n  // TableInstanceId: 'TableInstanceId',\n  // ClusterId: 'ClusterId',\n};\n\n// 需和文件名对应\nconst TCAPLUSInstanceAliasList = ['TableInstanceId', 'TableName'];\n\nconst templateQueryIdMap = {\n  instance: 'TableInstanceId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是类型\nconst TCAPLUSFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  ClusterId: '',\n  TableGroupIds: [],\n\n  TableName: '',\n  TableInstanceId: '',\n  TableIdlType: {},\n  TableType: {},\n  ListElementNum: null,\n  ReservedVolume: null,\n  ReservedReadQps: null,\n  ReservedWriteQps: null,\n  Memo: '',\n  FileName: '',\n  FileExtType: '',\n  FileSize: null,\n  FileContent: '',\n};\n\nconst TCAPLUSFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'ClusterId',\n    enDescriptor: 'ClusterId',\n    cnDescriptor: '表格所属集群ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'TableGroupIds',\n    enDescriptor: 'TableGroupIds',\n    cnDescriptor: '表格组ID列表',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'TableName',\n    enDescriptor: 'TableName',\n    cnDescriptor: '表格名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'TableInstanceId',\n    enDescriptor: 'TableInstanceId',\n    cnDescriptor: '表实例ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'TableIdlType',\n    enDescriptor: 'TableIdlType',\n    cnDescriptor: '表格描述语言类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'PROTO', value: 'PROTO' },\n      { text: 'TDR', value: 'TDR' },\n    ],\n  },\n  {\n    key: 'TableType',\n    enDescriptor: 'TableType',\n    cnDescriptor: '表格数据结构类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'GENERIC', value: 'GENERIC' },\n      { text: 'LIST', value: 'LIST' },\n    ],\n  },\n  {\n    key: 'ListElementNum',\n    enDescriptor: 'ListElementNum',\n    cnDescriptor: 'LIST表元素个数',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'ReservedVolume',\n    enDescriptor: 'ReservedVolume',\n    cnDescriptor: '表格预留容量（GB）',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'ReservedReadQps',\n    enDescriptor: 'ReservedReadQps',\n    cnDescriptor: '表格预留读CU',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'ReservedWriteQps',\n    enDescriptor: 'ReservedWriteQps',\n    cnDescriptor: '表格预留写CU',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'Memo',\n    enDescriptor: 'Memo',\n    cnDescriptor: '表格备注信息',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'FileName',\n    enDescriptor: 'FileName',\n    cnDescriptor: 'Key回档文件名，回档专用',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'FileExtType',\n    enDescriptor: 'FileExtType',\n    cnDescriptor: 'Key回档文件扩展名，回档专用',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'FileSize',\n    enDescriptor: 'FileSize',\n    cnDescriptor: 'Key回档文件大小，回档专用',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'FileContent',\n    enDescriptor: 'FileContent',\n    cnDescriptor: 'Key回档文件内容，回档专用',\n    link: '',\n    type: 'input',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/596/39664',\n  namespace,\n  fieldDescriptor: TCAPLUSFilterFieldsDescriptor,\n};\n\nconst TCAPLUS_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'TableInstanceId',\n  queries: TCAPLUSFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  params.Limit = _.get(queries, 'Limit', 20) || 20;\n  params.Offset = _.get(queries, 'Offset', 0) || 0;\n  params.ClusterId = _.get(queries, 'ClusterId', '') || '';\n  params.TableGroupIds = _.get(queries, 'TableGroupIds', []) || [];\n  queries = _.omit(queries, ['Offset', 'Limit', 'TableGroupIds', 'ClusterId']);\n  const SelectedTables: any[] = [];\n  _.forEach(queries, (item: any, key) => {\n    if (_.isArray(item)) {\n      item = _.compact(item);\n      if (item.length > 0) {\n        SelectedTables[key] = _.uniq(item);\n      }\n    } else if (_.isObject(item)) {\n      if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n        SelectedTables[key] = _.get(item, 'value');\n      }\n    } else if (_.isNumber(item) || !_.isEmpty(item)) {\n      SelectedTables[key] = item;\n    }\n  });\n  params.SelectedTables = SelectedTables;\n  return params;\n}\n// 和其他产品的展示保持一致\nconst regonsMap = {\n  'ap-beijing': '华北地区(北京)',\n  'ap-guangzhou': '华南地区(广州)',\n  'ap-hongkong': '港澳台地区(中国香港)',\n  'ap-seoul': '亚太东北(首尔)',\n  'ap-shanghai': '华东地区(上海)',\n  'ap-singapore': '亚太东南(新加坡)',\n  'ap-tokyo': '亚太东北(东京)',\n  'eu-frankfurt': '欧洲地区(法兰克福)',\n  'na-ashburn': '美国东部(弗吉尼亚)',\n  'na-siliconvalley': '美国西部(硅谷)',\n};\nexport default TCAPLUS_STATE;\nexport {\n  TCAPLUSFilterFieldsDescriptor,\n  templateQueryIdMap,\n  TCAPLUSInstanceAliasList,\n  TCAPLUSInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  regonsMap,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as TCAPLUSGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/VBC';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'vbcQuery';\n\nconst VBCInvalidDemensions = {\n  // CcnId: 'CcnId',\n};\n\n// 需和文件名对应\nconst VBCInstanceAliasList = ['CcnId', 'CcnName'];\n\nconst templateQueryIdMap = {\n  instance: 'CcnId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst VBCFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  'ccn-id': [],\n  'ccn-name': [],\n  'ccn-description': [],\n  state: {},\n};\n\nconst VBCFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'ccn-id',\n    enDescriptor: 'ccn-id',\n    cnDescriptor: 'CCN实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'ccn-name',\n    enDescriptor: 'ccn-name',\n    cnDescriptor: 'CCN名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'ccn-description',\n    enDescriptor: 'ccn-description',\n    cnDescriptor: 'CCN描述',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'state',\n    enDescriptor: 'state',\n    cnDescriptor: '实例状态',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '隔离中', value: 'ISOLATED' },\n      { text: '运行中', value: 'AVAILABLE' },\n    ],\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/19199',\n  namespace,\n  fieldDescriptor: VBCFilterFieldsDescriptor,\n};\n\nconst VBC_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'CcnId',\n  DRegion: '',\n  SRegion: '',\n  queries: VBCFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\n// const regionSupported = [\n//   { text: '华北地区(北京)', value: 'ap-beijing' },\n//   { text: '西南地区(成都)', value: 'ap-chengdu' },\n//   { text: '西南地区(重庆)', value: 'ap-chongqing' },\n//   { text: '华南地区(广州)', value: 'ap-guangzhou' },\n//   { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n//   { text: '亚太南部(孟买)', value: 'ap-mumbai' },\n//   { text: '华东地区(南京)', value: 'ap-nanjing' },\n//   { text: '华东地区(上海)', value: 'ap-shanghai' },\n//   { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },\n//   { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n//   { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n//   { text: '亚太东北(东京)', value: 'ap-tokyo' },\n//   { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },\n//   { text: '美国东部(弗吉尼亚)', value: 'na-ashburn' },\n//   { text: '美国西部(硅谷)', value: 'na-siliconvalley' },\n//   { text: '北美地区(多伦多)', value: 'na-toronto' },\n// ];\nexport default VBC_STATE;\nexport {\n  VBCFilterFieldsDescriptor,\n  templateQueryIdMap,\n  VBCInstanceAliasList,\n  VBCInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  // regionSupported,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as VBCGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/VPNGW';\nconst queryEditorName = 'vpngwQuery';\n\nconst VPNGWInvalidDemensions = {\n  vpnGwId: 'VpnGatewayId',\n};\n\nconst VPNGWInstanceAliasList = ['VpnGatewayId', 'VpnGatewayName'];\n\nconst templateQueryIdMap = {\n  instance: 'VpnGatewayId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst VPNGWFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  'vpc-id': [],\n  'vpn-gateway-id': [],\n  'vpn-gateway-name': [],\n  type: {},\n  'public-ip-address': [],\n  'renew-flag': {},\n  zone: [],\n};\n\nconst VPNGWFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'vpc-id',\n    cnDescriptor: 'VPC实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpn-gateway-id',\n    enDescriptor: 'vpn-gateway-id',\n    cnDescriptor: 'VPN实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpn-gateway-name',\n    enDescriptor: 'vpn-gateway-name',\n    cnDescriptor: 'VPN实例名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'type',\n    enDescriptor: 'type',\n    cnDescriptor: 'VPN网关类型',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: 'IPSEC', value: 'IPSEC' },\n      { text: 'SSL', value: 'SSL' },\n    ],\n  },\n  {\n    key: 'public-ip-address',\n    enDescriptor: 'public-ip-address',\n    cnDescriptor: '公网IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'renew-flag',\n    enDescriptor: 'renew-flag',\n    cnDescriptor: '网关续费类型',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '手动续费', value: 'NOTIFY_AND_MANUAL_RENEW' },\n      { text: '自动续费', value: 'NOTIFY_AND_AUTO_RENEW' },\n    ],\n  },\n  {\n    key: 'zone',\n    enDescriptor: 'zone',\n    cnDescriptor: 'VPN所在可用区',\n    link: '',\n    type: 'dropdownMulti',\n  },\n];\n\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/17514',\n  namespace,\n  fieldDescriptor: VPNGWFilterFieldsDescriptor,\n};\n\nconst VPNGW_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'VpnGatewayId',\n  queries: VPNGWFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nexport default VPNGW_STATE;\nexport {\n  VPNGWFilterFieldsDescriptor,\n  templateQueryIdMap,\n  VPNGWInstanceAliasList,\n  VPNGWInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  GetInstanceQueryParams as VPNGWGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/VPNX';\nconst queryEditorName = 'vpnxQuery';\n\nconst VPNXInvalidDemensions = {\n  vpnConnId: 'VpnConnectionId',\n};\n\nconst VPNXInstanceAliasList = ['VpnConnectionId', 'VpnConnectionName'];\n\nconst templateQueryIdMap = {\n  instance: 'VpnConnectionId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst VPNXFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  'vpc-id': [],\n  'vpn-gateway-id': [],\n  'customer-gateway-id': [],\n  'vpn-connection-name': [],\n  'vpn-connection-id': [],\n};\n\nconst VPNXFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'vpc-id',\n    cnDescriptor: 'VPC实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpn-gateway-id',\n    enDescriptor: 'vpn-gateway-id',\n    cnDescriptor: 'VPN实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'customer-gateway-id ',\n    enDescriptor: 'customer-gateway-id ',\n    cnDescriptor: '对端网关实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpn-connection-name',\n    enDescriptor: 'vpn-connection-name',\n    cnDescriptor: '通道名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpn-connection-id',\n    enDescriptor: 'vpn-connection-id',\n    cnDescriptor: '通道实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/17515',\n  namespace,\n  fieldDescriptor: VPNXFilterFieldsDescriptor,\n};\n\nconst VPNX_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'VpnConnectionId',\n  queries: VPNXFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nexport default VPNX_STATE;\nexport {\n  VPNXFilterFieldsDescriptor,\n  templateQueryIdMap,\n  VPNXInstanceAliasList,\n  VPNXInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  GetInstanceQueryParams as VPNXGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\nconst LighthouseStateType = [\n  { text: '创建中', value: 'PENDING' },\n  { text: '创建失败', value: 'LAUNCH_FAILED' },\n  { text: '运行中', value: 'RUNNING' },\n  { text: '关机', value: 'STOPPED' },\n  { text: '开机中', value: 'STARTING' },\n  { text: '关机中', value: 'STOPPING' },\n  { text: '重启中', value: 'REBOOTING' },\n  { text: '停止待销毁', value: 'SHUTDOWN' },\n  { text: '销毁中', value: 'TERMINATING' },\n];\n\nconst LighthouseFilterFields = {\n  zone: [],\n  'instance-name': [],\n  'instance-state': {},\n  'private-ip-address': [],\n  'public-ip-address': [],\n};\n\nconst LighthouseFilterFieldsDescriptor = [\n  {\n    key: 'instance-name',\n    enDescriptor: 'Instance Name',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'private-ip-address',\n    enDescriptor: 'Private IP Address',\n    cnDescriptor: '实例主网卡的内网IP',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'public-ip-address',\n    enDescriptor: 'Public IP Address',\n    cnDescriptor: '实例主网卡的公网IP',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'zone',\n    enDescriptor: 'Zone',\n    cnDescriptor: '可用区',\n    link: '',\n    type: 'dropdownmulti',\n  },\n  {\n    key: 'instance-state',\n    enDescriptor: 'Instance State',\n    cnDescriptor: '实例状态',\n    link: '',\n    type: 'select',\n    list: LighthouseStateType,\n  },\n];\n\nconst LIGHTHOUSE_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    instanceIdsChecked: false,\n    filtersChecked: false,\n    InstanceIds: [''],\n    Filters: { ...LighthouseFilterFields },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    if (queries.instanceIdsChecked) {\n      if (_.isArray(queries.InstanceIds)) {\n        const InstanceIds = _.compact(queries.InstanceIds);\n        if (_.uniq(InstanceIds).length > 0) {\n          params.InstanceIds = _.uniq(InstanceIds).slice(0, 100);\n        }\n      }\n    } else if (queries.filtersChecked) {\n      const Filters: any[] = [];\n      _.forEach(queries.Filters, (item: any, key) => {\n        if (Filters.length > 9) {\n          return;\n        }\n        if (_.isArray(item)) {\n          item = _.compact(item);\n          if (item.length > 0) {\n            Filters.push({ Name: key, Values: _.uniq(item).slice(0, 5) });\n          }\n        } else if (_.isObject(item)) {\n          if (!_.isEmpty(_.get(item, 'value', []))) {\n            Filters.push({ Name: key, Values: _.get(item, 'value', []).slice(0, 5) });\n          }\n        }\n      });\n      if (Filters.length > 0) {\n        params.Filters = Filters;\n      }\n    }\n  }\n  return params;\n}\n\nconst LIGHTHOUSEInstanceAliasList = ['InstanceId', 'InstanceName', 'PrivateIpAddresses', 'PublicIpAddresses'];\n\nconst LighthouseInvalidDemensions = {\n  instanceid: 'InstanceId',\n};\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\n\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['InstanceId'];\n  });\n  return metricTmp;\n}\n\nexport default LIGHTHOUSE_STATE;\n\nexport {\n  LighthouseFilterFieldsDescriptor,\n  LIGHTHOUSEInstanceAliasList,\n  LighthouseInvalidDemensions,\n  templateQueryIdMap,\n  modifyDimensons,\n  GetInstanceQueryParams as LIGHTHOUSEGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\nexport const CFSQueryDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'FileSystemId',\n    enDescriptor: 'File System Id',\n    cnDescriptor: '文件系统 ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'VpcId',\n    cnDescriptor: '私有网络（VPC） ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SubnetId',\n    enDescriptor: 'SubnetId',\n    cnDescriptor: '子网 ID',\n    link: '',\n    type: 'input',\n  },\n];\n\nconst CFS_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'FileSystemId',\n  version: '',\n  queries: {\n    Offset: 0,\n    Limit: 20,\n    FileSystemId: '',\n    VpcId: '',\n    SubnetId: '',\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\nconst CFSInstanceAliasList = ['FileSystemId', 'FsName'];\n\n// 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key\nconst CFSInvalidDemensions = {\n  // functionName: 'FunctionName',\n  // namespace: 'Namespace'\n};\n\nconst regionSupported = [\n  { value: 'ap-beijing' },\n  { value: 'ap-chengdu' },\n  { value: 'ap-chongqing' },\n  { value: 'ap-guangzhou' },\n  { value: 'ap-hongkong' },\n  { value: 'ap-mumbai' },\n  { value: 'ap-nanjing' },\n  { value: 'ap-seoul' },\n  { value: 'ap-shanghai' },\n  { value: 'ap-shanghai-fsi' },\n  { value: 'ap-shenzhen-fsi' },\n  { value: 'ap-singapore' },\n  { value: 'ap-tokyo' },\n  { value: 'eu-frankfurt' },\n  { value: 'na-siliconvalley' },\n  { value: 'na-toronto' },\n];\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\nexport default CFS_STATE;\nexport {\n  CFSInstanceAliasList,\n  CFSInvalidDemensions,\n  templateQueryIdMap,\n  regionSupported,\n  GetInstanceQueryParams as CFSGetInstanceQueryParams,\n};\n\n// monitor监控数据默认支持的维度\n// export const SCFDefaultDimensionList = ['functionName', 'namespace', 'version'];\n","import _ from 'lodash';\nimport { FildDescriptorType } from '../_base/types';\n\nexport const InstanceQueryDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为10，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 50,\n  },\n  {\n    key: 'QueueName',\n    enDescriptor: 'QueueName',\n    cnDescriptor: '精确匹配QueueName',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'TagKey',\n    enDescriptor: 'TagKey',\n    cnDescriptor: '标签搜索',\n    link: '',\n    type: 'input',\n  },\n];\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\n// 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key\nexport const InvalidDemensions = {\n  queueId: 'QueueId',\n  queueName: 'QueueName',\n};\n\nexport const templateQueryIdMap = {\n  instance: 'QueueName',\n};\n\n// 与名称挂钩的变量\nconst InstanceAliasList = ['QueueName', 'QueueId'];\nexport { InstanceAliasList, GetInstanceQueryParams };\n\n// 界面状态模型，default\nexport default {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'QueueName',\n  queries: {\n    Offset: 0,\n    Limit: 20,\n    QueueName: '',\n    TagKey: '',\n  },\n};\n","import _ from 'lodash';\nconst instanceChargeTypes = [\n  { text: '预付费', value: 'PREPAID' },\n  { text: '后付费', value: 'POSTPAID_BY_HOUR' },\n  { text: 'CDH付费', value: 'CDHPAID' },\n];\n\nconst CVMFilterFields = {\n  zone: [],\n  'project-id': [],\n  'host-id': [],\n  'vpc-id': [],\n  'subnet-id': [],\n  'instance-id': [],\n  'security-group-id': [],\n  'instance-name': [],\n  'instance-charge-type': {},\n  'private-ip-address': [],\n  'public-ip-address': [],\n  'tag-key': [],\n};\n\nconst CVMFilterFieldsDescriptor = [\n  {\n    key: 'zone',\n    enDescriptor: 'Zone',\n    cnDescriptor: '可用区',\n    link: '',\n    type: 'dropdownmulti',\n  },\n  {\n    key: 'project-id',\n    enDescriptor: 'Project ID',\n    cnDescriptor: '项目ID',\n    link: 'https://cloud.tencent.com/document/api/378/4400',\n    type: 'inputNumbermulti',\n  },\n  {\n    key: 'host-id',\n    enDescriptor: 'CDH ID',\n    cnDescriptor: 'CDH ID',\n    link: 'https://cloud.tencent.com/document/product/416/19730',\n    type: 'inputmulti',\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'VPC ID',\n    cnDescriptor: 'VPC ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'subnet-id',\n    enDescriptor: 'Subnet ID',\n    cnDescriptor: '子网ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'instance-id',\n    enDescriptor: 'Instance ID',\n    cnDescriptor: '实例ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'security-group-id',\n    enDescriptor: 'Security Group ID',\n    cnDescriptor: '安全组ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'instance-name',\n    enDescriptor: 'Instance Name',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'tag-key',\n    enDescriptor: '标签简',\n    cnDescriptor: '标签简',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'instance-charge-type',\n    enDescriptor: 'Instance Charge Type',\n    cnDescriptor: '实例计费模式',\n    link: '',\n    type: 'select',\n    list: instanceChargeTypes,\n  },\n  {\n    key: 'private-ip-address',\n    enDescriptor: 'Private IP Address',\n    cnDescriptor: '实例主网卡的内网IP',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'public-ip-address',\n    enDescriptor: 'Public IP Address',\n    cnDescriptor: '实例主网卡的公网IP，包含实例创建时自动分配的IP和实例创建后手动绑定的弹性IP',\n    link: '',\n    type: 'inputmulti',\n  },\n];\n\nconst CVM_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    instanceIdsChecked: false,\n    filtersChecked: false,\n    InstanceIds: [''],\n    Filters: { ...CVMFilterFields },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    if (queries.instanceIdsChecked) {\n      if (_.isArray(queries.InstanceIds)) {\n        const InstanceIds = _.compact(queries.InstanceIds);\n        if (_.uniq(InstanceIds).length > 0) {\n          params.InstanceIds = _.uniq(InstanceIds).slice(0, 100);\n        }\n      }\n    } else if (queries.filtersChecked) {\n      const Filters: any[] = [];\n      _.forEach(queries.Filters, (item: any, key) => {\n        if (Filters.length > 9) {\n          return;\n        }\n        if (_.isArray(item)) {\n          item = _.compact(item);\n          if (item.length > 0) {\n            Filters.push({ Name: key, Values: _.uniq(item).slice(0, 5) });\n          }\n        } else if (_.isObject(item)) {\n          if (!_.isEmpty(_.get(item, 'value', []))) {\n            Filters.push({ Name: key, Values: _.get(item, 'value', []).slice(0, 5) });\n          }\n        }\n      });\n      if (Filters.length > 0) {\n        params.Filters = Filters;\n      }\n    }\n  }\n  return params;\n}\n\nconst CVMInstanceAliasList = ['InstanceId', 'InstanceName', 'PrivateIpAddresses', 'PublicIpAddresses'];\n\nconst CVMValidMetricsT = [\n  'CPUUsage',\n  'CpuLoadavg',\n  'Cpuloadavg5m',\n  'Cpuloadavg15m',\n  'BaseCpuUsage',\n  'GpuMemTotal',\n  'GpuMemUsage',\n  'GpuMemUsed',\n  'GpuPowDraw',\n  'GpuPowLimit',\n  'GpuPowUsage',\n  'GpuTemp',\n  'GpuUtil',\n  'LanOuttraffic',\n  'LanIntraffic',\n  'LanOutpkg',\n  'LanInpkg',\n  'WanOuttraffic',\n  'WanIntraffic',\n  'WanOutpkg',\n  'WanInpkg',\n  'AccOuttraffic',\n  'TcpCurrEstab',\n  'TimeOffset',\n  'MemUsed',\n  'MemUsage',\n  'CvmDiskUsage',\n  'BaseCpuUsage',\n  'VmDiskReadIops',\n];\n// const CVMInvalidDemensions = {\n//   'vm_uuid': 'InstanceId',\n//   'vmUuid': 'InstanceId',\n// };\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\nfunction isValidMetric(metric) {\n  const CVMValidMetrics = _.map(CVMValidMetricsT, _.toUpper);\n  return _.indexOf(CVMValidMetrics, _.toUpper(metric.MetricName)) !== -1;\n}\nfunction modifyDimensons(metricItem) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['InstanceId'];\n  });\n  return metricTmp;\n}\nexport default CVM_STATE;\nexport {\n  CVMFilterFieldsDescriptor,\n  CVMInstanceAliasList,\n  isValidMetric,\n  modifyDimensons,\n  templateQueryIdMap,\n  // CVMInvalidDemensions,\n  GetInstanceQueryParams as CVMGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nconst namespace = 'QCE/PCX';\n\nconst PCXFields = {\n  limit: 20,\n  offset: 0,\n  peeringConnectionId: '',\n  peeringConnectionName: '',\n  vpcId: '',\n  state: undefined,\n};\n\nconst PCX_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'peeringConnectionId',\n  queries: { ...PCXFields },\n};\n\nconst StateTypes = [\n  { text: '申请中', value: 0 },\n  { text: '连接成功', value: 1 },\n  { text: '已过期', value: 2 },\n  { text: '对端已拒绝', value: 3 },\n  { text: '对端已删除', value: 4 },\n];\n\nconst PCXFieldsDescriptor = [\n  {\n    key: 'offset',\n    enDescriptor: 'offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'limit',\n    enDescriptor: 'limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为50',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 50,\n  },\n  {\n    key: 'peeringConnectionId',\n    enDescriptor: 'PeeringConnection Id',\n    cnDescriptor: '私有网络对等连接 ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'peeringConnectionName',\n    enDescriptor: 'PeeringConnection Name',\n    cnDescriptor: '对等连接名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'vpcId',\n    enDescriptor: 'vpcId',\n    cnDescriptor: '发起方私有网络 ID 值',\n    link: 'https://cloud.tencent.com/document/api/215/1372',\n    type: 'dropdown',\n  },\n  {\n    key: 'state',\n    enDescriptor: 'state',\n    cnDescriptor: '连接状态',\n    link: '',\n    type: 'select',\n    list: StateTypes,\n  },\n];\n\nconst PCXInstanceAliasList = ['peeringConnectionId', 'peeringConnectionName'];\n\nconst templateQueryIdMap = {\n  instance: 'peeringConnectionId',\n};\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.limit = _.get(queries, 'limit', 20) || 20;\n    params.offset = _.get(queries, 'offset', 0) || 0;\n    queries = _.omit(queries, ['offset', 'limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\nexport default PCX_STATE;\n\nexport {\n  PCXInstanceAliasList,\n  PCXFieldsDescriptor,\n  templateQueryIdMap,\n  namespace,\n  GetInstanceQueryParams as PCXGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nconst BillingMode = [\n  { text: '按量计费', value: 'postpaid' },\n  { text: '包年包月', value: 'prepaid' },\n];\n\nconst AutoRenew = [\n  { text: '手动续费', value: 0 },\n  { text: '自动续费', value: 1 },\n  { text: '明确不自动续费', value: 2 },\n];\n\nconst Status = [\n  { text: '待初始化', value: 0 },\n  { text: '流程执行中', value: 1 },\n  { text: '运行中', value: 2 },\n  { text: '已隔离', value: -2 },\n  { text: '待删除', value: -3 },\n];\n\nconst TypeVersion = [\n  { text: '单机版', value: 1 },\n  { text: '主从版', value: 2 },\n  { text: '集群版', value: 3 },\n];\n\nconst OrderBy = [\n  { text: 'projectId', value: 'projectId' },\n  { text: 'instancename', value: 'instancename' },\n  { text: 'createtime', value: 'createtime' },\n  { text: 'type', value: 'type' },\n  { text: 'curDeadline', value: 'curDeadline' },\n];\n\nconst OrderType = [\n  { text: '升序', value: 0 },\n  { text: '降序', value: 1 },\n];\nconst Type = [\n  { text: 'Redis老集群版', value: 1 },\n  { text: 'Redis 2.8主从版', value: 2 },\n  { text: 'CKV主从版', value: 3 },\n  { text: 'CKV集群版', value: 4 },\n  { text: 'Redis 2.8单机版', value: 5 },\n  { text: 'Redis 4.0主从版', value: 6 },\n  { text: 'Redis 4.0集群版', value: 7 },\n  { text: 'Redis5.0主从版', value: 8 },\n  { text: 'Redis5.0集群版', value: 9 },\n];\n\nconst RedisFields = {\n  InstanceId: '',\n  OrderBy: '',\n  OrderType: null,\n  VpcIds: [],\n  SubnetIds: [],\n  ProjectIds: [],\n  SearchKey: '',\n  InstanceName: '',\n  UniqVpcIds: [],\n  UniqSubnetIds: [],\n  Status: [],\n  TypeVersion: null,\n  EngineName: '',\n  AutoRenew: null,\n  BillingMode: '',\n  Type: null,\n};\n\nconst RedisFieldsDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceId',\n    enDescriptor: 'InstancesId',\n    cnDescriptor: '实例id',\n    type: 'input',\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderBy,\n  },\n  {\n    key: 'OrderType',\n    enDescriptor: 'OrderType',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderType,\n  },\n  {\n    key: 'VpcIds',\n    enDescriptor: 'VpcIds',\n    cnDescriptor: '私有网络ID数组，数组下标从0开始，如果不传则默认选择基础网络，如：47525',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'SubnetIds',\n    enDescriptor: 'SubnetIds',\n    cnDescriptor: '子网ID数组，数组下标从0开始，如：56854',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'ProjectIds',\n    enDescriptor: 'ProjectIds',\n    cnDescriptor: '项目ID 组成的数组',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'SearchKey',\n    enDescriptor: 'SearchKey',\n    cnDescriptor: '查找实例的ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'InstanceName',\n    enDescriptor: 'InstanceName',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'UniqVpcIds',\n    enDescriptor: 'UniqVpcIds',\n    cnDescriptor: '私有网络ID数组，数组下标从0开始，如果不传则默认选择基础网络，如：vpc-sad23jfdfk',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'UniqSubnetIds',\n    enDescriptor: 'UniqSubnetIds',\n    cnDescriptor: '子网ID数组，数组下标从0开始，如：subnet-fdj24n34j2',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'Status',\n    enDescriptor: 'Status',\n    cnDescriptor: '实例状态',\n    multiple: true,\n    type: 'select',\n    list: Status,\n  },\n  {\n    key: 'TypeVersion',\n    enDescriptor: 'TypeVersion',\n    cnDescriptor: '类型版本',\n    link: '',\n    type: 'select',\n    list: TypeVersion,\n  },\n  {\n    key: 'EngineName',\n    enDescriptor: 'EngineName',\n    cnDescriptor: '引擎信息：Redis-2.8，Redis-4.0，CKV',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'AutoRenew',\n    enDescriptor: 'AutoRenew',\n    cnDescriptor: '续费模式',\n    multiple: true,\n    type: 'select',\n    list: AutoRenew,\n  },\n  {\n    key: 'BillingMode',\n    enDescriptor: 'BillingMode',\n    cnDescriptor: '计费模式：postpaid-按量计费；prepaid-包年包月',\n    link: '',\n    type: 'select',\n    list: BillingMode,\n  },\n  {\n    key: 'Type',\n    enDescriptor: 'Type',\n    cnDescriptor: '实例类型',\n    link: '',\n    type: 'select',\n    list: Type,\n  },\n];\n\nconst REDIS_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: { ...RedisFields },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        // select 单选\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\nfunction isValidMetric(metricObj: any = {}) {\n  const dimension = _.get(metricObj, 'Dimensions[0].Dimensions');\n  return dimension.length === 1 && _.indexOf(dimension, 'instanceid') !== -1;\n}\n\nconst REDISInstanceAliasList = ['InstanceId', 'InstanceName', 'WanIp'];\n\nconst RedisInvalidDemensions = {\n  redis_uuid: 'InstanceId',\n  instanceid: 'InstanceId',\n};\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\nexport default REDIS_STATE;\nexport {\n  RedisFieldsDescriptor,\n  RedisInvalidDemensions,\n  templateQueryIdMap,\n  REDISInstanceAliasList,\n  isValidMetric,\n  GetInstanceQueryParams as REDISGetInstanceQueryParams,\n};\n","import { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst ApplicationType = [\n  { text: '所有', value: '' },\n  { text: '容器应用', value: 'C' },\n  { text: '普通应用/虚拟机应用', value: 'V' },\n];\n\nconst MicroserviceType = [\n  { text: '所有', value: '' },\n  { text: '普通应用', value: 'N' },\n  { text: 'Mesh应用', value: 'M' },\n  { text: '微服务网关应用', value: 'G' },\n  { text: '原生应用', value: 'NATIVE' },\n];\n\nconst ApplicationResourceType = [\n  { text: '默认资源类型', value: 'DEF' },\n  { text: '微服务网关资源', value: 'GW' },\n];\n\nconst TSFFieldsDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'SearchWord',\n    enDescriptor: 'SearchWord',\n    cnDescriptor: '搜索关键字',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'ApplicationIdList',\n    enDescriptor: 'ApplicationIdList',\n    cnDescriptor: '应用ID 组成的数组',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'ApplicationType',\n    enDescriptor: 'ApplicationType',\n    cnDescriptor: '应用类型',\n    link: '',\n    type: 'select',\n    list: ApplicationType,\n  },\n  {\n    key: 'MicroserviceType',\n    enDescriptor: 'MicroserviceType',\n    cnDescriptor: '应用的微服务类型',\n    link: '',\n    type: 'select',\n    list: MicroserviceType,\n  },\n  {\n    key: 'ApplicationResourceTypeList',\n    enDescriptor: 'ApplicationResourceTypeList',\n    cnDescriptor: '应用资源类型数组',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: ApplicationResourceType,\n  },\n];\n\nconst TSF_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'ApplicationId',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    SearchWord: '',\n    OrderBy: '',\n    OrderType: null,\n    ApplicationType: '',\n    MicroserviceType: '',\n    ApplicationResourceTypeList: [],\n    ApplicationIdList: [],\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\n\nconst TSFInstanceAliasList = ['ApplicationId', 'ApplicationName'];\n\nconst TSFInvalidDemensions = {\n  applicationid: 'ApplicationId',\n};\n\nconst templateQueryIdMap = {\n  instance: 'ApplicationId',\n};\n\nexport default TSF_STATE;\nexport {\n  TSFInvalidDemensions,\n  templateQueryIdMap,\n  TSFInstanceAliasList,\n  TSFFieldsDescriptor,\n  GetInstanceQueryParams as TSFGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nconst networkTypes = [\n  { text: 'BGP', value: 'BGP' },\n  { text: 'SINGLEISP', value: 'SINGLEISP' },\n  { text: 'ANYCAST', value: 'ANYCAST' },\n];\n\nconst chargeTypes = [\n  { text: 'top5计费', value: 'TOP5_POSTPAID_BY_MONTH' },\n  { text: '月95计费', value: 'PERCENT95_POSTPAID_BY_MONTH' },\n];\nconst BWPFilterFields = {\n  'bandwidth-package_id': [],\n  'bandwidth-package-name': [],\n  'network-type': [],\n  'charge-type': [],\n};\n\nconst BWPFilterFieldsDescriptor = [\n  {\n    key: 'bandwidth-package_id',\n    enDescriptor: 'BandwidthPackage Id',\n    cnDescriptor: '带宽包ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'bandwidth-package-name',\n    enDescriptor: 'BandwidthPackage Name',\n    cnDescriptor: '带宽包名称',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'network-type',\n    enDescriptor: 'network type',\n    cnDescriptor: '带宽包类型',\n    link: '',\n    type: 'select',\n    list: networkTypes,\n  },\n  {\n    key: 'charge-type',\n    enDescriptor: 'charge type',\n    cnDescriptor: '带宽包计费类型',\n    link: '',\n    type: 'select',\n    list: chargeTypes,\n  },\n];\n\nconst BWP_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'BandwidthPackageId',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    instanceIdsChecked: false,\n    filtersChecked: false,\n    BandwidthPackageIds: [''],\n    Filters: { ...BWPFilterFields },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    if (queries.instanceIdsChecked) {\n      if (_.isArray(queries.BandwidthPackageIds)) {\n        const BandwidthPackageIds = _.compact(queries.BandwidthPackageIds);\n        if (_.uniq(BandwidthPackageIds).length > 0) {\n          params.BandwidthPackageIds = _.uniq(BandwidthPackageIds).slice(0, 100);\n        }\n      }\n    } else if (queries.filtersChecked) {\n      const Filters: any[] = [];\n      _.forEach(queries.Filters, (item: any, key) => {\n        if (Filters.length > 9) {\n          return;\n        }\n        if (_.isArray(item)) {\n          item = _.compact(item);\n          if (item.length > 0) {\n            Filters.push({ Name: key, Values: _.uniq(item).slice(0, 5) });\n          }\n        } else if (_.isObject(item)) {\n          if (!_.isEmpty(_.get(item, 'value', []))) {\n            Filters.push({ Name: key, Values: _.get(item, 'value', []).slice(0, 5) });\n          }\n        }\n      });\n      if (Filters.length > 0) {\n        params.Filters = Filters;\n      }\n    }\n  }\n  return params;\n}\n\nconst BWPInstanceAliasList = ['BandwidthPackageId', 'BandwidthPackageName'];\n\nconst templateQueryIdMap = {\n  instance: 'BandwidthPackageId',\n};\n\nconst BWPInvalidDemensions = {\n  bandwidthPackageId: 'BandwidthPackageId',\n};\nexport default BWP_STATE;\nexport {\n  BWPFilterFieldsDescriptor,\n  templateQueryIdMap,\n  BWPInstanceAliasList,\n  BWPInvalidDemensions,\n  GetInstanceQueryParams as BWPGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nconst CDNFilterFields = {\n  origin: [],\n  domain: [],\n  resourceId: [],\n  status: {},\n  serviceType: {},\n  projectId: [],\n  domainType: {},\n  fullUrlCache: {},\n  https: {},\n  originPullProtocol: {},\n  tagKey: [],\n};\n\nconst CDNFilterFieldsDescriptor = [\n  {\n    key: 'origin',\n    enDescriptor: 'origin',\n    cnDescriptor: '主源站',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'domain',\n    enDescriptor: 'domain',\n    cnDescriptor: '域名',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'resourceId',\n    enDescriptor: 'resourceId',\n    cnDescriptor: '域名id',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'status',\n    enDescriptor: 'status',\n    cnDescriptor: '域名状态',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'online', value: 'online' },\n      { text: 'offline', value: 'offline' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'serviceType',\n    enDescriptor: 'serviceType',\n    cnDescriptor: '业务类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'web', value: 'web' },\n      { text: 'download', value: 'download' },\n      { text: 'media', value: 'media' },\n    ],\n  },\n  {\n    key: 'projectId',\n    enDescriptor: 'projectId',\n    cnDescriptor: '项目ID',\n    link: '',\n    type: 'inputNumbermulti',\n  },\n  {\n    key: 'domainType',\n    enDescriptor: 'domainType',\n    cnDescriptor: '主源站类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '自有源', value: 'cname' },\n      { text: 'cos接入', value: 'cos' },\n    ],\n  },\n  {\n    key: 'fullUrlCache',\n    enDescriptor: 'fullUrlCache',\n    cnDescriptor: '全路径缓存',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '打开', value: 'on' },\n      { text: '关闭', value: 'off' },\n    ],\n  },\n  {\n    key: 'https',\n    enDescriptor: 'https',\n    cnDescriptor: '是否配置https',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'on', value: 'on' },\n      { text: 'off', value: 'off' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'originPullProtocol',\n    enDescriptor: 'originPullProtocol',\n    cnDescriptor: '回源协议类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'http', value: 'http' },\n      { text: 'follow', value: 'follow' },\n      { text: 'https', value: 'https' },\n    ],\n  },\n  {\n    key: 'tagKey',\n    enDescriptor: 'tagKey',\n    cnDescriptor: '标签键',\n    link: '',\n    type: 'inputmulti',\n  },\n];\n\nconst CDN_STATE = {\n  region: 'ap-guangzhou',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'Domain',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    Filters: { ...CDNFilterFields },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    const Filters: any[] = [];\n    _.forEach(queries.Filters, (item: any, key) => {\n      // console.log('item', item, queries);\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          Filters.push({ Name: key, Value: _.uniq(item).slice(0, 5) });\n        }\n      } else if (_.isObject(item)) {\n        if (!_.isEmpty(_.get(item, 'value', []))) {\n          Filters.push({ Name: key, Value: _.get(item, 'value', []).slice(0, 5) });\n        }\n      }\n    });\n    if (Filters.length > 0) {\n      params.Filters = Filters;\n    }\n  }\n  return params;\n}\n\nconst CDNInstanceAliasList = ['Domain', 'ProjectId'];\n\nconst CDNInvalidDemensions = {\n  projectId: 'ProjectId',\n  domain: 'Domain',\n};\nconst templateQueryIdMap = {\n  instance: 'Domain',\n};\nexport default CDN_STATE;\nexport {\n  CDNFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CDNInstanceAliasList,\n  CDNInvalidDemensions,\n  GetInstanceQueryParams as CDNGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\n// export const LBQueryDescriptor = [{\n//   key: 'Offset',\n//   enDescriptor: 'Offset',\n//   cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n//   link: '',\n//   type: 'inputnumber',\n//   min: 0,\n// },\n// {\n//   key: 'Limit',\n//   enDescriptor: 'Limit',\n//   cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为2000',\n//   link: '',\n//   type: 'inputnumber',\n//   min: 1,\n//   max: 2000,\n// },\n// {\n//   key: 'AddressId',\n//   enDescriptor: 'Address Id',\n//   cnDescriptor: '标识 EIP 的唯一 ID ',\n//   link: '',\n//   type: 'inputmulti',\n// }\n// ];\n\nexport const LBFilterDescriptor = [\n  {\n    key: 'address-id',\n    enDescriptor: 'Address ID',\n    cnDescriptor: 'EIP 的唯一 ID ',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'address-name',\n    enDescriptor: 'Address Name',\n    cnDescriptor: 'EIP 名称 ',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'address-ip',\n    enDescriptor: 'Address IP',\n    cnDescriptor: 'EIP 的 IP 地址 ',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'address-status',\n    enDescriptor: 'Address Status',\n    cnDescriptor: 'EIP 的状态',\n    link: '',\n    type: 'select',\n    list: [\n      { value: 'CREATING', text: 'CREATING' },\n      { value: 'BINDING', text: 'BINDING' },\n      { value: 'BIND', text: 'BIND' },\n      { value: 'UNBINDING', text: 'UNBINDING' },\n      { value: 'UNBIND', text: 'UNBIND' },\n      { value: 'OFFLINING', text: 'OFFLINING' },\n      { value: 'BIND_ENI', text: 'BIND_ENI' },\n    ],\n  },\n  {\n    key: 'instance-id',\n    enDescriptor: 'Instance ID',\n    cnDescriptor: '实例ID ',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'private-ip-address',\n    enDescriptor: 'Private IP Address',\n    cnDescriptor: 'EIP 绑定的内网 IP',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'network-interface-id',\n    enDescriptor: 'Network Interface ID',\n    cnDescriptor: 'EIP 绑定的弹性网卡 ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'is-arrears',\n    enDescriptor: 'Arrears',\n    cnDescriptor: 'EIP 是否欠费 ',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '正常', value: 'FALSE' },\n      { text: '欠费', value: 'TRUE' },\n    ],\n  },\n];\n\n// const LBFilterFields = {\n//   \"address-id\": [],\n//   \"address-name\": [],\n//   \"address-ip\": [],\n//   \"address-status \": [],\n//   \"instance-id \": [],\n//   \"private-ip-address\": [],\n//   \"network-interface-id \": [],\n//   \"is-arrears \": [],\n// };\n\nconst InstanceKey = 'AddressIds';\nconst LB_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'AddressId',\n  version: '',\n  queries: {\n    Offset: 0,\n    Limit: 20,\n    [InstanceKey]: [''],\n    Filters: {\n      'address-id': [],\n      'address-name': [],\n      'address-ip': [],\n      'address-status ': [],\n      'instance-id ': [],\n      'private-ip-address': [],\n      'network-interface-id ': [],\n      'is-arrears ': [],\n    },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    if (queries.instanceIdsChecked) {\n      if (_.isArray(queries[InstanceKey])) {\n        const InstanceIds = _.compact(queries[InstanceKey]);\n        if (_.uniq(InstanceIds).length > 0) {\n          params[InstanceKey] = _.uniq(InstanceIds).slice(0, 100);\n        }\n      }\n    } else if (queries.filtersChecked) {\n      const Filters: any[] = [];\n      _.forEach(queries.Filters, (item: any, key) => {\n        if (Filters.length > 9) {\n          return;\n        }\n        if (_.isArray(item)) {\n          item = _.compact(item);\n          if (item.length > 0) {\n            Filters.push({ Name: key, Values: _.uniq(item).slice(0, 5) });\n          }\n        } else if (_.isObject(item)) {\n          if (!_.isEmpty(_.get(item, 'value', []))) {\n            Filters.push({ Name: key, Values: _.get(item, 'value', []).slice(0, 5) });\n          }\n        }\n      });\n      if (Filters.length > 0) {\n        params.Filters = Filters;\n      }\n    }\n  }\n  return params;\n}\n\nconst LBInstanceAliasList = ['AddressId', 'AddressName', 'AddressIp'];\n\n// 维度eip对应于实例中的哪个字段？映射\nconst LBInvalidDemensions = {\n  eip: 'AddressIp',\n};\n\nconst templateQueryIdMap = {\n  instance: 'AddressId',\n};\n// 从monitor维度到LB实例对应字段的映射\n// export const metric2Instance = {\n//   functionName: 'FunctionName',\n//   namespace: 'Namespace'\n// };\n\nexport default LB_STATE;\nexport {\n  LBInstanceAliasList,\n  LBInvalidDemensions,\n  templateQueryIdMap,\n  GetInstanceQueryParams as LBGetInstanceQueryParams,\n};\n\n// monitor监控数据默认支持的维度\n// export const LBDefaultDimensionList = ['functionName', 'namespace', 'version'];\n","import _ from 'lodash';\n\nconst NATGATEWAYInstanceAliasList = ['NatGatewayId', 'NatGatewayName'];\n\nconst NATGatewayFilterFields = {\n  'nat-gateway-id': [],\n  'nat-gateway-name': [],\n  'vpc-id': [],\n};\n\nconst NATGatewayFilterFieldsDescriptor = [\n  {\n    key: 'nat-gateway-id',\n    enDescriptor: 'NatGateway ID',\n    cnDescriptor: 'NAT网关统一 ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'nat-gateway-name',\n    enDescriptor: 'NatGateway Name',\n    cnDescriptor: 'NatGateway Name',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'VPC ID',\n    cnDescriptor: '私有网络 ID',\n    link: '',\n    type: 'inputmulti',\n  },\n];\n\nconst NATGATEWAY_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'NatGatewayId',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    instanceIdsChecked: false,\n    filtersChecked: false,\n    NatGatewayIds: [''],\n    Filters: { ...NATGatewayFilterFields },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    if (queries.instanceIdsChecked) {\n      if (_.isArray(queries.NatGatewayIds)) {\n        const NatGatewayIds = _.compact(queries.NatGatewayIds);\n        if (_.uniq(NatGatewayIds).length > 0) {\n          params.InstanceIds = _.uniq(NatGatewayIds).slice(0, 100);\n        }\n      }\n    } else if (queries.filtersChecked) {\n      const Filters: any[] = [];\n      _.forEach(queries.Filters, (item: any, key) => {\n        if (Filters.length > 9) {\n          return;\n        }\n        if (_.isArray(item)) {\n          item = _.compact(item);\n          if (item.length > 0) {\n            Filters.push({ Name: key, Values: _.uniq(item).slice(0, 5) });\n          }\n        } else if (_.isObject(item)) {\n          if (!_.isEmpty(_.get(item, 'value', []))) {\n            Filters.push({ Name: key, Values: _.get(item, 'value', []).slice(0, 5) });\n          }\n        }\n      });\n      if (Filters.length > 0) {\n        params.Filters = Filters;\n      }\n    }\n  }\n  return params;\n}\n\nconst templateQueryIdMap = {\n  instance: 'NatGatewayId',\n};\n\nconst NATInvalidDemensions = {\n  natId: 'NatGatewayId',\n};\n\nexport default NATGATEWAY_STATE;\nexport {\n  NATGatewayFilterFieldsDescriptor,\n  NATGATEWAYInstanceAliasList,\n  templateQueryIdMap,\n  NATInvalidDemensions,\n  GetInstanceQueryParams as NATGATEWAYGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nconst CDNFilterFields = {\n  origin: [],\n  domain: [],\n  resourceId: [],\n  status: [],\n  serviceType: [],\n  projectId: [],\n  domainType: [],\n  fullUrlCache: [],\n  https: [],\n  originPullProtocol: [],\n  tagKey: [],\n};\n\nconst OVCDNFilterFieldsDescriptor = [\n  {\n    key: 'origin',\n    enDescriptor: 'origin',\n    cnDescriptor: '主源站',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'domain',\n    enDescriptor: 'domain',\n    cnDescriptor: '域名',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'resourceId',\n    enDescriptor: 'resourceId',\n    cnDescriptor: '域名id',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'status',\n    enDescriptor: 'status',\n    cnDescriptor: '域名状态',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'online', value: 'online' },\n      { text: 'offline', value: 'offline' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'serviceType',\n    enDescriptor: 'serviceType',\n    cnDescriptor: '业务类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'web', value: 'web' },\n      { text: 'download', value: 'download' },\n      { text: 'media', value: 'media' },\n    ],\n  },\n  {\n    key: 'projectId',\n    enDescriptor: 'projectId',\n    cnDescriptor: '项目ID',\n    link: '',\n    type: 'inputNumbermulti',\n  },\n  {\n    key: 'domainType',\n    enDescriptor: 'domainType',\n    cnDescriptor: '主源站类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '自有源', value: 'cname' },\n      { text: 'cos接入', value: 'cos' },\n    ],\n  },\n  {\n    key: 'fullUrlCache',\n    enDescriptor: 'fullUrlCache',\n    cnDescriptor: '全路径缓存',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '打开', value: 'on' },\n      { text: '关闭', value: 'off' },\n    ],\n  },\n  {\n    key: 'https',\n    enDescriptor: 'https',\n    cnDescriptor: '是否配置https',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'on', value: 'on' },\n      { text: 'off', value: 'off' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'originPullProtocol',\n    enDescriptor: 'originPullProtocol',\n    cnDescriptor: '回源协议类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'http', value: 'http' },\n      { text: 'follow', value: 'follow' },\n      { text: 'https', value: 'https' },\n    ],\n  },\n  {\n    key: 'tagKey',\n    enDescriptor: 'tagKey',\n    cnDescriptor: '标签键',\n    link: '',\n    type: 'inputmulti',\n  },\n];\n\nconst OVCDN_STATE = {\n  region: 'ap-guangzhou',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'Domain',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    Filters: { ...CDNFilterFields },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    const Filters: any[] = [];\n    _.forEach(queries.Filters, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          Filters.push({ Name: key, Value: _.uniq(item).slice(0, 5) });\n        }\n      } else if (_.isObject(item)) {\n        if (!_.isEmpty(_.get(item, 'value', []))) {\n          Filters.push({ Name: key, Value: _.get(item, 'value', []).slice(0, 5) });\n        }\n      }\n    });\n    if (Filters.length > 0) {\n      params.Filters = Filters;\n    }\n  }\n  return params;\n}\n\nconst OVCDNInstanceAliasList = ['Domain', 'ResourceId'];\n\nconst OVCDNInvalidDemensions = {\n  projectId: 'ProjectId',\n  domain: 'Domain',\n};\nconst templateQueryIdMap = {\n  instance: 'Domain',\n};\nexport default OVCDN_STATE;\nexport {\n  OVCDNFilterFieldsDescriptor,\n  OVCDNInstanceAliasList,\n  templateQueryIdMap,\n  OVCDNInvalidDemensions,\n  GetInstanceQueryParams as OVCDNGetInstanceQueryParams,\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__69__;","import _ from 'lodash';\n\nconst TKE_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'ClusterId',\n  conditions: [],\n  groupBys: '',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    instanceIdsChecked: false,\n    filtersChecked: true,\n    ClusterIds: [''],\n    Filters: {\n      ClusterName: [],\n      ClusterType: [],\n      ClusterStatus: [],\n      'tag-key': [],\n    },\n  },\n};\n\nconst TKEFilterFieldsDescriptor = [\n  {\n    key: 'ClusterName',\n    enDescriptor: 'Cluster Name',\n    cnDescriptor: '集群名',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'ClusterType',\n    enDescriptor: 'Cluster Type',\n    cnDescriptor: '集群类型',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'ClusterStatus',\n    enDescriptor: 'Cluster Status',\n    cnDescriptor: '集群状态',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'Tags',\n    enDescriptor: 'Tags',\n    cnDescriptor: '标签键值对',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'VPC',\n    cnDescriptor: 'VPC',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'tag-key',\n    enDescriptor: 'Tag Key',\n    cnDescriptor: '标签键',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'tag-value',\n    enDescriptor: 'Tag Value',\n    cnDescriptor: '标签值',\n    link: '',\n    type: 'inputmulti',\n  },\n];\n\nconst TKEInstanceAliasList = ['ClusterId', 'ClusterName'];\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    if (queries.instanceIdsChecked) {\n      if (_.isArray(queries.InstanceIds)) {\n        const InstanceIds = _.compact(queries.InstanceIds);\n        if (_.uniq(InstanceIds).length > 0) {\n          params.InstanceIds = _.uniq(InstanceIds).slice(0, 100);\n        }\n      }\n    } else if (queries.filtersChecked) {\n      const Filters: any[] = [];\n      _.forEach(queries.Filters, (item: any, key) => {\n        if (Filters.length > 9) {\n          return;\n        }\n        if (_.isArray(item)) {\n          item = _.compact(item);\n          if (item.length > 0) {\n            Filters.push({ Name: key, Values: _.uniq(item).slice(0, 5) });\n          }\n        } else if (_.isObject(item)) {\n          if (!_.isEmpty(_.get(item, 'value', []))) {\n            Filters.push({ Name: key, Values: _.get(item, 'value', []).slice(0, 5) });\n          }\n        }\n      });\n      if (Filters.length > 0) {\n        params.Filters = Filters;\n      }\n    }\n  }\n  return params;\n}\n\nexport default TKE_STATE;\n\nexport { TKEFilterFieldsDescriptor, TKEInstanceAliasList, GetInstanceQueryParams as TKEGetInstanceQueryParams };\n","import {\n  APIGATEWAYInstanceAliasList,\n  APIGATEWAYInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  regionSupported,\n  keyInStorage,\n  queryMonitorExtraConfg,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport instanceStorage from '../../common/datasourceStorage';\nimport { t } from '../../../locale';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = APIGATEWAYInstanceAliasList;\n  InvalidDimensions = APIGATEWAYInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'apigateway',\n    action: 'DescribeServicesStatus',\n    responseField: 'ServiceSet',\n  };\n\n  keyInStorage = keyInStorage;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // getFilterDropdown({ field }) {\n  //   return super.getRegions();\n  // }\n  getRegions() {\n    return Promise.resolve(regionSupported.map(({ value }) => ({ value, text: t(value) })));\n  }\n  async getEnvironmentNameList(params: any) {\n    const { region, instanceId } = params;\n    const serviceInfo = GetServiceAPIInfo(region, this.service);\n\n    // 从分页数据，获取全量数据\n    const res = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action: 'DescribeServiceEnvironmentList' }\n        );\n      },\n      {\n        ServiceId: instanceId,\n      },\n      'EnvironmentList'\n    );\n    const [rs] = res;\n    return rs;\n  }\n  async fetchMetricData(action: string, region: string, instance: any) {\n    // console.log({ action, region, instance });\n    if (action === 'DescribeServiceEnvironmentList') {\n      const rs = await this.getEnvironmentNameList({ region, instanceId: instance[this.templateQueryIdMap.instance] });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[this.templateQueryIdMap.environmentName];\n        return {\n          text: o[this.templateQueryIdMap.environmentName],\n          value: o[this.templateQueryIdMap.environmentName],\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage.environmentList, rs);\n      return result;\n    }\n    return [];\n  }\n}\n","import {\n  BMINTRALBInstanceAliasList,\n  BMINTRALBInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  isValidMetric,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { t } from '../../../locale';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = BMINTRALBInstanceAliasList;\n  InvalidDimensions = BMINTRALBInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'bmlb',\n    action: 'DescribeLoadBalancers',\n    responseField: 'LoadBalancerSet',\n    interceptor: {\n      request: (params) => ({\n        ...params,\n        LoadBalancerType: 'internal',\n      }), // 设置一些请求参数的 默认值\n    },\n  };\n  RegionMap = {};\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // 重写getRegion\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/bm',\n      },\n      'bm',\n      { action: 'DescribeRegions', region: 'ap-guangzhou' }\n    ).then((response) => {\n      // 缓存，后面获取可用区zone\n      this.RegionMap = _.keyBy(response.RegionInfoSet, 'Region');\n      return _.map(response.RegionInfoSet || [], (item) => {\n        return {\n          text: t(item.Region),\n          value: item.Region,\n        };\n      });\n    });\n  }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        if (isValidMetric(item)) {\n          return item;\n        }\n        return null;\n      })\n    );\n  }\n}\n","import { BMLBInstanceAliasList, CPMInvalidDemensions, namespace, templateQueryIdMap, isValidMetric } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { t } from '../../../locale';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = BMLBInstanceAliasList;\n  InvalidDimensions = CPMInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'bmlb',\n    action: 'DescribeLoadBalancers',\n    responseField: 'LoadBalancerSet',\n    interceptor: {\n      request: (params) => ({\n        ...params,\n        LoadBalancerType: 'open',\n      }), // 设置一些请求参数的 默认值\n    },\n  };\n  RegionMap = {};\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        if (isValidMetric(item)) {\n          return item;\n        }\n        return null;\n      })\n    );\n  }\n  // 重写getRegion\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/bm',\n      },\n      'bm',\n      { action: 'DescribeRegions', region: 'ap-guangzhou' }\n    ).then((response) => {\n      // 缓存，后面获取可用区zone\n      this.RegionMap = _.keyBy(response.RegionInfoSet, 'Region');\n      return _.map(response.RegionInfoSet || [], (item) => {\n        return {\n          text: t(item.Region),\n          value: item.Region,\n        };\n      });\n    });\n  }\n}\n","import {\n  BMPCXInstanceAliasList,\n  BMPCXInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { t } from '../../../locale';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = BMPCXInstanceAliasList;\n  InvalidDimensions = BMPCXInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'bmvpc',\n    action: 'DescribeVpcPeerConnections',\n    responseField: 'VpcPeerConnectionSet',\n  };\n  MetricReqConfig = {\n    resultFilter: modifyDimensons,\n  };\n  RegionMap = {};\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // 重写getRegion\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/bm',\n      },\n      'bm',\n      { action: 'DescribeRegions', region: 'ap-guangzhou' }\n    ).then((response) => {\n      // 缓存，后面获取可用区zone\n      this.RegionMap = _.keyBy(response.RegionInfoSet, 'Region');\n      return _.map(response.RegionInfoSet || [], (item) => {\n        return {\n          text: t(item.Region),\n          value: item.Region,\n        };\n      });\n    });\n  }\n}\n","import { BWPInstanceAliasList, BWPInvalidDemensions } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class BWPDatasource extends BaseDatasource {\n  Namespace = 'QCE/BWP';\n  InstanceAliasList = BWPInstanceAliasList;\n  InvalidDimensions = BWPInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'BandwidthPackageId',\n  };\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeBandwidthPackages',\n    responseField: 'BandwidthPackageSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import { CBSInstanceAliasList, CBSInvalidDemensions, namespace, templateQueryIdMap, isValidMetric } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = CBSInstanceAliasList;\n  InvalidDimensions = CBSInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'cbs',\n    action: 'DescribeDisks',\n    responseField: 'DiskSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.filter(rawSet, isValidMetric);\n  }\n}\n","import _ from 'lodash';\nimport {\n  CDBInstanceAliasList,\n  CDBInvalidDemensions,\n  isValidMetric,\n  modifyDimensons,\n  templateQueryIdMap,\n} from './query_def';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class CDBDatasource extends BaseDatasource {\n  Namespace = 'QCE/CDB';\n  InstanceAliasList = CDBInstanceAliasList;\n  InvalidDimensions = CDBInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'InstanceId',\n  };\n  InstanceReqConfig = {\n    service: 'cdb',\n    action: 'DescribeDBInstances',\n    responseField: 'Items',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        if (isValidMetric(item)) {\n          return modifyDimensons(item);\n        }\n        return null;\n      })\n    );\n  }\n  /**\n   * 获取 可用区\n   * @param region 地域信息\n   */\n  getZones(region) {\n    const serviceInfo = GetServiceAPIInfo(region, 'cvm');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeZones' }\n    ).then((response) => {\n      return _.filter(\n        _.map(response.ZoneSet || [], (item) => {\n          return { text: item.ZoneName, value: item.ZoneId, ZoneState: item.ZoneState, Zone: item.Zone };\n        }),\n        (item) => item.ZoneState === 'AVAILABLE'\n      );\n    });\n  }\n  // 仅对维度组合是InstanceId和InstanceType的指标，其他指标不支持\n  getDefaultInsObj(ins: string) {\n    return {\n      [templateQueryIdMap.instance]: ins,\n      InstanceType: 1,\n    };\n  }\n}\n","import _ from 'lodash';\nimport { CDNInstanceAliasList, CDNInvalidDemensions } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class CDNDatasource extends BaseDatasource {\n  Namespace = 'QCE/CDN';\n  InstanceAliasList = CDNInstanceAliasList;\n  InvalidDimensions = CDNInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'Domain',\n  };\n  InstanceReqConfig = {\n    service: 'cdn',\n    action: 'DescribeDomains',\n    responseField: 'Domains',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async metricFindQuery(query: any, regex?: string) {\n    return super.metricFindQuery({ ...query, ...{ region: 'ap-guangzhou' } }, regex);\n  }\n}\n","import { CDNPROVINCEInstanceAliasList, CDNPROVINCEInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = CDNPROVINCEInstanceAliasList;\n  InvalidDimensions = CDNPROVINCEInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'cdn',\n    action: 'DescribeDomains',\n    responseField: 'Domains',\n  };\n  extrasAlias = ['isp', 'district'];\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // getFilterDropdown({ field }) {\n  //   return super.getRegions();\n  // }\n  async metricFindQuery(query: any, regex?: string) {\n    return super.metricFindQuery({ ...query, ...{ region: 'ap-guangzhou' } }, regex);\n  }\n  async getConsumerList(params: any) {\n    const { region, field } = params;\n    const serviceInfo = GetServiceAPIInfo(region, 'cdn');\n\n    // 从分页数据，获取全量数据\n    const rs = await this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: {\n          Name: field,\n        },\n      },\n      serviceInfo.service,\n      { action: 'DescribeMapInfo' }\n    );\n    return (rs.MapInfoList || []).map((o) => {\n      return {\n        text: o.Name,\n        value: o.Name,\n      };\n    });\n  }\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    if (action === 'DescribeMapInfo') {\n      const { name: field } = query;\n      const rs = await this.getConsumerList({ region, field });\n      return rs;\n    }\n    return [];\n  }\n}\n","import {\n  CEIPSUMMARYInstanceAliasList,\n  CEIPInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = CEIPSUMMARYInstanceAliasList;\n  InvalidDimensions = CEIPInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeAddresses',\n    responseField: 'AddressSet',\n    interceptor: {\n      request: (params) => {\n        const { Filters } = params;\n        if (!Filters) {\n          params.Filters = [];\n        }\n        params.Filters.push({\n          Name: 'address-type',\n          Values: ['AnycastEIP'],\n        });\n        return params;\n      }, // 设置一些请求参数的 默认值\n      // response: (data: unknown[]) =>[\n      //   {\n      //     AddressId: 'AddressId',\n      //     AddressIp: '111.22.3.4'\n      //   },\n      // ],\n    },\n  };\n  MetricReqConfig = {\n    resultFilter: modifyDimensons,\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  // async getInstances(region, params = {}) {\n  //   const rawSet = await super.getInstances(region, params);\n  //   return rawSet.filter((item) => item.AddressType === 'AnycastEIP');\n  // }\n\n  // async getVariableInstances(region, query = {}) {\n  //   const rawSet = await super.getVariableInstances(region, query);\n  //   return rawSet.filter((item) => item.AddressType === 'AnycastEIP');\n  // }\n}\n","import { CESInstanceAliasList, CESInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = CESInstanceAliasList;\n  InvalidDimensions = CESInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'es',\n    action: 'DescribeInstances',\n    responseField: 'InstanceList',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import _ from 'lodash';\nimport { BaseDatasource } from '../_base/datasource';\nimport { CFSInstanceAliasList, CFSInvalidDemensions, regionSupported } from './query_def';\nimport { t } from '../../../locale';\nexport default class CFSDatasource extends BaseDatasource {\n  InstanceKey: string;\n  Namespace: string;\n  InstanceAliasList: string[];\n  InvalidDimensions: Record<string, string>;\n  templateQueryIdMap = {\n    instance: 'FileSystemId',\n  };\n  extrasAlias = ['version'];\n  InstanceReqConfig: { service?: string | undefined; action: string; responseField: string };\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n\n    this.Namespace = 'QCE/CFS';\n    this.InstanceAliasList = CFSInstanceAliasList;\n    this.InvalidDimensions = CFSInvalidDemensions;\n    this.InstanceReqConfig = {\n      service: 'cfs',\n      action: 'DescribeCfsFileSystems',\n      responseField: 'FileSystems',\n    };\n  }\n  getRegions() {\n    return Promise.resolve(regionSupported.map(({ value }) => ({ value, text: t(value) })));\n  }\n}\n","import _, { flattenDeep } from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport { BaseDatasource } from '../_base/datasource';\nimport {\n  CKAFKAInstanceAliasList,\n  CKAFKATopicAliasList,\n  CKAFKAInvalidDemensions,\n  templateQueryIdMap,\n  keyInStorage,\n  queryMonitorExtraConfg,\n} from './query_def';\n\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class CKFKADatasource extends BaseDatasource {\n  Namespace = 'QCE/CKAFKA';\n  InstanceAliasList = CKAFKAInstanceAliasList;\n  TopicAliasList = CKAFKATopicAliasList;\n  InvalidDimensions = CKAFKAInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'ckafka',\n    action: 'DescribeInstances',\n    responseField: 'InstanceList',\n  };\n  extraMetricDims = ['topicId'];\n  // extrasAlias = ['topicId', 'consumerGroup', 'partition'];\n  keyInStorage = keyInStorage;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  consumerGroupCache = {};\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getConsumerGroups(region, params) {\n    const serviceInfo = GetServiceAPIInfo(region, 'ckafka');\n    let { InstanceId, groupname = '', topicid = '' } = params;\n    groupname = this.getVariable(groupname); // 将模板转换为真实值\n    topicid = this.getVariable(topicid); // 将模板转换为真实值\n    try {\n      groupname = JSON.parse(groupname)[templateQueryIdMap.groupName];\n      topicid = JSON.parse(topicid)[templateQueryIdMap.topicId];\n    } catch (e) {}\n    let consumerGoup = this.consumerGroupCache[InstanceId];\n    if (!consumerGoup) {\n      // 从分页数据，获取全量数据\n      consumerGoup = await fetchAllFactory(\n        (data) => {\n          return this.doRequest(\n            {\n              url: this.url + serviceInfo.path,\n              data,\n            },\n            serviceInfo.service,\n            { region, action: 'DescribeConsumerGroup' }\n          );\n        },\n        _.pick(params, 'InstanceId'),\n        ['GroupListForMonitor', 'TopicListForMonitor', 'PartitionListForMonitor', 'GroupList']\n      );\n      // topick数据从DescribeTopic\n      const topicList = await fetchAllFactory(\n        (data) => {\n          return this.doRequest(\n            {\n              url: this.url + serviceInfo.path,\n              data,\n            },\n            serviceInfo.service,\n            { region, action: 'DescribeTopic' }\n          );\n        },\n        _.pick(params, 'InstanceId'),\n        ['TopicList']\n      );\n      consumerGoup[1] = flattenDeep(topicList);\n      console.log({ consumerGoup, topicList });\n      this.consumerGroupCache[InstanceId] = consumerGoup;\n    }\n\n    let [GroupList, TopicList, PartitionList, GroupDetailList] = consumerGoup;\n    // 无重复数组\n    TopicList = _.uniqBy(TopicList, (item) => (item as any).TopicId);\n    GroupList = _.uniqBy(GroupList, (item) => (item as any).GroupName);\n    PartitionList = _.uniqBy(PartitionList, (item) => (item as any).PartitionId);\n    GroupDetailList = _.uniqBy(GroupDetailList, (item) => (item as any).ConsumerGroupName);\n    // 如果传入消费者信息，consumergroupname，获取该用户的订阅信息列表\n    const SubscribedInfos = GroupDetailList.find((d) => d.ConsumerGroupName === groupname)?.SubscribedInfo || [];\n    // 这里为了兼容PartitonList格式，最后转化为数组对象的方式\n    const partitions =\n      SubscribedInfos.find((sub) => sub.TopicId === topicid)?.Partition?.map((p) => ({\n        [templateQueryIdMap.partition]: p,\n      })) || [];\n    return {\n      GroupList,\n      TopicList:\n        SubscribedInfos.length > 0\n          ? SubscribedInfos.map(({ TopicId, TopicName }) => ({ TopicId, TopicName }))\n          : TopicList,\n      PartitionList: partitions.length > 0 ? partitions : PartitionList,\n    };\n  }\n  formatTopicVarDisplay(topic: Record<string, any>, displayTpl: string | undefined, topicAlias: string) {\n    if (displayTpl) {\n      return displayTpl.replace(/\\$\\{(\\w+)\\}/g, (a, b) => {\n        if (!b || !this.TopicAliasList.includes(b)) {\n          return '';\n        }\n        return this.getAliasValue(topic, b);\n      });\n    }\n    return this.getAliasValue(topic, topicAlias);\n  }\n  // 查询指标下的数据\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    let { topicalias, groupname, topicid } = query;\n    const result = await this.getConsumerGroups(region, {\n      InstanceId: instance.InstanceId,\n      groupname,\n      topicid,\n    });\n    let { display } = query;\n    const { TopicList, GroupList, PartitionList } = result;\n    topicalias = this.TopicAliasList.includes(topicalias) ? topicalias : this.templateQueryIdMap.topicId;\n\n    const rs = {\n      GroupList: GroupList.map((group) => {\n        group._InstanceAliasValue = group.GroupName;\n        return {\n          text: group.GroupName,\n          value: group[templateQueryIdMap.groupName],\n        };\n      }),\n      TopicList: TopicList.map((topic) => {\n        const topicAlias = this.formatTopicVarDisplay(topic, display, topicalias);\n        topic._InstanceAliasValue = topicAlias || topic[templateQueryIdMap.topicId];\n        return {\n          text: topicAlias || topic[templateQueryIdMap.topicId],\n          value: topic[templateQueryIdMap.topicId], // 为了获取多维度的值，这里完全可以使用JSON.stringify()将整个对象放进去\n          TopicName: topic.TopicName,\n        };\n      }),\n      PartitionList: PartitionList.map((par) => {\n        par._InstanceAliasValue = par[templateQueryIdMap.partition];\n        return {\n          text: par[templateQueryIdMap.partition],\n          value: par[templateQueryIdMap.partition],\n        };\n      }),\n    };\n    await instanceStorage.setExtraStorage(this.service, this.keyInStorage.TopicList, TopicList);\n    await instanceStorage.setExtraStorage(this.service, this.keyInStorage.GroupList, GroupList);\n    await instanceStorage.setExtraStorage(this.service, this.keyInStorage.PartitionList, PartitionList);\n    // console.log({ res1, res2, res3 });\n    // console.log({rs});\n    // 根据action返回指定的维度数据列表\n    switch (action) {\n      case 'DescribeTopicList':\n        return rs.TopicList;\n      case 'DescribeGroup':\n        return rs.GroupList;\n      case 'DescribePartion':\n        return rs.PartitionList;\n      default:\n        return [];\n    }\n  }\n\n  // async getOtherAlias(datapoints) {\n  //   let dimension;\n  //   for(let j = 0; j < datapoints.Dimensions.length; j++){\n  //     if(datapoints.Dimensions[j] !== 'InstanceName'){\n  //       dimension.push(datapoints.Dimensions[j])\n  //     }\n  //   }\n  //   console.log(dimension);\n\n  //   return dimension\n  // }\n}\n","import {\n  InstanceAliasList,\n  LOADBALANCEListenerAliasList,\n  LOADBALANCEServerAliasList,\n  LOADBALANCEVALIDDIMENSIONS,\n  templateQueryIdMap,\n  keyInStorage,\n  CANDIATEDIMENSIONS,\n  queryMonitorExtraConfg,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class DCDatasource extends BaseDatasource {\n  // Namespace = namespace;\n  InstanceAliasList = InstanceAliasList;\n  ListenerAliasList = LOADBALANCEListenerAliasList;\n  ServerAliasList = LOADBALANCEServerAliasList;\n  CandiateDimensions = CANDIATEDIMENSIONS;\n  // InvalidDimensions = LOADBALANCEVALIDDIMENSIONS;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  // InstanceReqConfig = {\n  //   service: 'clb',\n  //   action: 'DescribeLoadBalancers',\n  //   responseField: 'LoadBalancerSet',\n  // };\n  keyInStorage = keyInStorage;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // getFilterDropdown({ field }) {\n  //   return super.getRegions();\n  // }\n  getInvalidDimensions(selfIns: any, tagret: any) {\n    if (selfIns.service === 'lbPrivate' || (selfIns.service === 'lbPublic' && tagret.servers))\n      return { ...LOADBALANCEVALIDDIMENSIONS, vpcId: 'NumericalVpcId' };\n    return LOADBALANCEVALIDDIMENSIONS;\n  }\n  getInstanceReqConfig(selfIns: any) {\n    const res: any = {\n      service: 'clb',\n      action: 'DescribeLoadBalancers',\n      responseField: 'LoadBalancerSet',\n    };\n    if (selfIns.service === 'lbPrivate' || selfIns.service === 'loadBalance') {\n      res.interceptor = {\n        request: (param) => ({ ...param, LoadBalancerType: 'INTERNAL' }),\n      };\n    }\n    if (selfIns.service === 'lbPublic') {\n      res.interceptor = {\n        request: (param) => ({ ...param, LoadBalancerType: 'OPEN' }),\n      };\n    }\n    return res;\n  }\n  async getListenerList(params: any) {\n    const { region, instanceId } = params;\n    const serviceInfo = GetServiceAPIInfo(region, 'clb');\n\n    // 从分页数据，获取全量数据\n    const res = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action: 'DescribeListeners' }\n        );\n      },\n      {\n        LoadBalancerId: instanceId,\n      },\n      'Listeners'\n    );\n    const [rs] = res;\n    return rs;\n  }\n  formatVariableDisplay(data: Record<string, any>, displayTpl: string | undefined, alias: string, aliasList: string[]) {\n    if (displayTpl) {\n      return displayTpl.replace(/\\$\\{(\\w+)\\}/g, (a, b) => {\n        if (!b || !aliasList.includes(b)) {\n          return '';\n        }\n        return this.getAliasValue(data, b);\n      });\n    }\n    return this.getAliasValue(data, alias);\n  }\n  async getServerList(params: any) {\n    const { region, instanceId, listenerId } = params;\n    const serviceInfo = GetServiceAPIInfo(region, 'clb');\n\n    const res = await this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: { LoadBalancerId: instanceId, ListenerIds: [listenerId] },\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeTargets' }\n    );\n    const { Listeners } = res;\n    const serversList = _.reduce(\n      Listeners,\n      (prev, item) => {\n        const { Rules, Targets } = item;\n        if (!_.isEmpty(Rules)) {\n          return _.concat(prev, _.flatten(_.map(Rules, (elem) => (_.isEmpty(elem.Targets) ? [] : elem.Targets))));\n        }\n        if (!_.isEmpty(Targets)) {\n          return _.concat(prev, Targets);\n        }\n        return prev;\n      },\n      []\n    );\n    return serversList;\n  }\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    const { display } = query;\n    if (action === 'DescribeListeners') {\n      const rs = await this.getListenerList({ region, instanceId: instance[this.templateQueryIdMap.instance] });\n      let { listeneralias } = query;\n      listeneralias = this.ListenerAliasList.includes(listeneralias) ? listeneralias : this.templateQueryIdMap.listener;\n      const result = rs.flatMap((o) => {\n        const listenAlias = this.formatVariableDisplay(o, display, listeneralias, this.ListenerAliasList);\n        const lisId = o[this.templateQueryIdMap.listener];\n        o._InstanceAliasValue = listenAlias || lisId;\n        // if (!o[listeneralias]) return [];\n        return {\n          text: listenAlias || lisId,\n          value: lisId,\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage.listener, rs);\n      return result;\n    }\n    if (action === 'DescribeServer' || action === 'DescribeServerPort') {\n      const { listenerid, serverprivateip, serveralias } = query;\n      const serverPrivateIp = this.getVariable(serverprivateip);\n      const serversList = await this.getServerList({\n        region,\n        instanceId: instance[this.templateQueryIdMap.instance],\n        listenerId: this.getVariable(listenerid),\n      });\n      const serverAlias = this.ServerAliasList.includes(serveralias) ? serveralias : this.templateQueryIdMap.servers;\n      const result = _.chain(serversList)\n        .filter((item) => {\n          if (action === 'DescribeServer') {\n            return true;\n          }\n          return serverPrivateIp === _.get(item, 'PrivateIpAddresses.0');\n        })\n        .map((item) => {\n          const alias = this.formatVariableDisplay(item, display, serverAlias, this.ServerAliasList);\n          const id = item[this.templateQueryIdMap.servers][0];\n          item._InstanceAliasValue = alias || id;\n          return action === 'DescribeServer'\n            ? {\n                text: alias || id,\n                value: id,\n              }\n            : {\n                text: `${_.get(item, 'Port')}`,\n                value: _.get(item, 'Port'),\n              };\n        })\n        .value();\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage.servers, serversList);\n      return action === 'DescribeServer' ? result : _.uniqBy(result, 'text');\n    }\n    return [];\n  }\n}\n","import {\n  CLSInstanceAliasList,\n  CLSInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  regionSupported,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { t } from '../../../locale';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = CLSInstanceAliasList;\n  InvalidDimensions = CLSInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'cls',\n    action: 'DescribeTopics',\n    responseField: 'Topics',\n  };\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // getFilterDropdown({ field }) {\n  //   return super.getRegions();\n  // }\n  getRegions() {\n    return Promise.resolve(regionSupported.map(({ value }) => ({ value, text: t(value) })));\n  }\n  // async getInstances(region, params = {}) {\n  //   const superRes = await super.getInstances(region, params);\n  //   console.log({ superRes });\n  // }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        return modifyDimensons(item);\n      })\n    );\n  }\n}\n","import { BaseDatasource } from '../_base/datasource';\nimport { InvalidDemensions, InstanceAliasList, templateQueryIdMap } from './query_def';\n\nexport default class CmqDatasource extends BaseDatasource {\n  InvalidDimensions: Record<string, string> = InvalidDemensions;\n  InstanceAliasList: string[] = InstanceAliasList;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'cmq',\n    action: 'DescribeQueueDetail',\n    responseField: 'QueueSet',\n  };\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawMetric = await super.getMetrics(region);\n    return rawMetric.map((metric) => {\n      let dims = metric.Dimensions[0].Dimensions;\n      dims = Array.from(new Set([...dims, 'queueId', 'queueName']));\n      metric.Dimensions[0].Dimensions = dims;\n      return metric;\n    });\n  }\n}\n","import { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport { BaseDatasource } from '../_base/datasource';\nimport {\n  InvalidDemensions,\n  InstanceAliasList,\n  templateQueryIdMap,\n  keyInStorage,\n  queryMonitorExtraConfg,\n} from './query_def';\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class CmqTopicDatasource extends BaseDatasource {\n  Namespace = 'QCE/CMQTOPIC';\n  InvalidDimensions: Record<string, string> = InvalidDemensions;\n  InstanceAliasList: string[] = InstanceAliasList;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'cmq',\n    action: 'DescribeTopicDetail',\n    responseField: 'TopicSet',\n  };\n  keyInStorage = keyInStorage;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  extraMetricDims = ['subscriptionId']; // 多选\n\n  async fetchAllSubscription(region: string, params: any) {\n    const serviceInfo = GetServiceAPIInfo(region, 'cmq');\n    // console.log(serviceInfo, 'serviceinfo');\n\n    // 从分页数据，获取全量数据\n    const rs = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action: 'DescribeSubscriptionDetail' }\n        );\n      },\n      params,\n      'SubscriptionSet'\n    );\n\n    return rs[0];\n  }\n\n  async fetchMetricData(action: string, region: string, instance: any) {\n    let result;\n    switch (action) {\n      case 'DescribeSubscriptionDetail':\n        result = await this.fetchAllSubscription(region, { TopicName: instance.TopicName });\n        // eslint-disable-next-line no-case-declarations\n        const rs = result.map((item) => {\n          item._InstanceAliasValue = item.SubscriptionId;\n          return { text: item.SubscriptionId, value: item[templateQueryIdMap.subscription] };\n        });\n        await instanceStorage.setExtraStorage(this.service, this.keyInStorage.subscriptionId, result);\n        return rs;\n      default:\n        return [];\n    }\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawMetric = await super.getMetrics(region);\n    return rawMetric.map((metric) => {\n      let dims = metric.Dimensions[0].Dimensions;\n      dims.push('topicId');\n      if (['NumOfNotify', 'NumOfSuccNotify'].includes(metric.MetricName)) {\n        dims.push('subscriptionId');\n      }\n\n      dims = Array.from(new Set(dims));\n      metric.Dimensions[0].Dimensions = dims;\n      return metric;\n    });\n  }\n}\n","import { BaseDatasource } from '../_base/datasource';\n\ninterface BucketListResult {\n  Owner: { ID: 'string'; DisplayName: 'string' };\n  Buckets: { Name: string; Region: string }[];\n}\n\nexport default class CosDatasource extends BaseDatasource {\n  InvalidDimensions: Record<string, string> = {};\n  InstanceAliasList: string[] = ['BucketName'];\n  templateQueryIdMap = {\n    instance: 'BucketName',\n  };\n  InstanceReqConfig = {} as any; // 不必要的配置\n  cosURL: string;\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n    this.cosURL = `/api/datasources/${this.instanceSettings.id}/resources/tc_cos_list`;\n  }\n  async getInstances(region: string) {\n    return this.backendSrv\n      .datasourceRequest({\n        url: this.cosURL,\n        method: 'GET',\n        params: { region },\n        headers: { 'Content-Type': 'application/json' },\n      })\n      .then((res) => {\n        let { data }: { data: BucketListResult } = res;\n        data = data || ({} as any);\n        let { Buckets } = data;\n        Buckets = Buckets || [];\n\n        // name contains appid，see detail https://cloud.tencent.com/document/product/436/8291\n        return Buckets.map((item) => ({\n          ...item,\n          BucketName: item.Name,\n          bucket: item.Name,\n          appid: item.Name.split('-').slice(-1)[0],\n        }));\n      });\n  }\n\n  async getVariableInstances(region) {\n    return this.getInstances(region);\n  }\n}\n","import {\n  CPMInstanceAliasList,\n  CPMInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport _ from 'lodash';\nimport { t } from '../../../locale';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = CPMInstanceAliasList;\n  InvalidDimensions = CPMInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'bm',\n    action: 'DescribeDevices',\n    responseField: 'DeviceInfoSet',\n  };\n  RegionMap = {};\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // 重写getRegion\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/bm',\n      },\n      'bm',\n      { action: 'DescribeRegions', region: 'ap-guangzhou' }\n    ).then((response) => {\n      // 缓存，后面获取可用区zone\n      this.RegionMap = _.keyBy(response.RegionInfoSet, 'Region');\n      return _.map(response.RegionInfoSet || [], (item) => {\n        return {\n          text: t(item.Region),\n          value: item.Region,\n        };\n      });\n    });\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.map((item) => modifyDimensons(item));\n  }\n\n  getFilterDropdown({ field, region }) {\n    if (field === 'DeviceClassCode') {\n      const serviceInfo = GetServiceAPIInfo(region, 'bm');\n      return this.doRequest(\n        {\n          url: this.url + serviceInfo.path,\n        },\n        'bm',\n        { region, action: 'DescribeDeviceClass' }\n      ).then((response) => {\n        return _.map(response.DeviceClassSet || [], (item) => {\n          return { text: item.DeviceClassCode, value: item.DeviceClassCode };\n        });\n      });\n    }\n    return [];\n  }\n}\n","import _ from 'lodash';\nimport { CVMInstanceAliasList, isValidMetric, modifyDimensons } from './query_def';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class CVMDatasource extends BaseDatasource {\n  Namespace = 'QCE/CVM';\n  InstanceAliasList = CVMInstanceAliasList;\n  InvalidDimensions = {};\n  templateQueryIdMap = {\n    instance: 'InstanceId',\n  };\n  InstanceReqConfig = {\n    service: 'cvm',\n    action: 'DescribeInstances',\n    responseField: 'InstanceSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        if (isValidMetric(item)) {\n          return modifyDimensons(item);\n        }\n        return null;\n      })\n    );\n  }\n\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/api',\n        data: { Product: 'cvm' },\n      },\n      'api',\n      { action: 'DescribeRegions' }\n    ).then((response) => {\n      return _.filter(\n        _.map(response.RegionSet || [], (item) => {\n          return {\n            text: item.RegionName,\n            value: item.Region,\n            RegionState: item.RegionState,\n          };\n        }),\n        (item) => item.RegionState === 'AVAILABLE'\n      );\n    });\n  }\n\n  getZones(region) {\n    const serviceInfo = GetServiceAPIInfo(region, 'api');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: { Product: 'cvm' },\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeZones' }\n    ).then((response) => {\n      return _.filter(\n        _.map(response.ZoneSet || [], (item) => {\n          return { text: item.ZoneName, value: item.Zone, ZoneState: item.ZoneState, Zone: item.Zone };\n        }),\n        (item) => item.ZoneState === 'AVAILABLE'\n      );\n    });\n  }\n}\n","import {\n  CYNOSDBMYSQLInstanceAliasList,\n  CYNOSDBInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  modifyDimensons,\n  checkKeys,\n} from './query_def';\nimport _ from 'lodash';\nimport { BaseDatasource } from '../_base/datasource';\n// import { t } from '../../../locale';\n\nexport default class CYNOSDBMYSQLDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = CYNOSDBMYSQLInstanceAliasList;\n  InvalidDimensions = CYNOSDBInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  checkKeys = checkKeys;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'cynosdb',\n    action: 'DescribeInstances',\n    responseField: 'InstanceSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.map((item) => modifyDimensons(item));\n  }\n  // getRegions() {\n  //   return Promise.resolve(regionSupported.map(({ value }) => ({ value, text: t(value) })));\n  // }\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/api',\n        data: { Product: 'cynosdbmysql' },\n      },\n      'api',\n      { action: 'DescribeRegions' }\n    ).then((response) => {\n      return _.filter(\n        _.map(response.RegionSet || [], (item) => {\n          return {\n            text: item.RegionName,\n            value: item.Region,\n            RegionState: item.RegionState,\n          };\n        }),\n        (item) => item.RegionState === 'AVAILABLE'\n      );\n    });\n  }\n  // 仅对维度组合是InstanceId的指标，其他指标不支持\n  getDefaultInsObj(ins: string) {\n    return {\n      [templateQueryIdMap.instance]: ins,\n    };\n  }\n}\n","import { DCInstanceAliasList, DCInvalidDemensions, namespace, modifyDimensons } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = DCInstanceAliasList;\n  InvalidDimensions = DCInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'DirectConnectId',\n  };\n  InstanceReqConfig = {\n    service: 'dc',\n    action: 'DescribeDirectConnects',\n    responseField: 'DirectConnectSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.map((item) => modifyDimensons(item));\n  }\n}\n","import {\n  DCDBInstanceAliasList,\n  DCDBInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  modifyDimensons,\n  keyInStorage,\n  queryMonitorExtraConfg,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport instanceStorage from '../../common/datasourceStorage';\nimport { t } from '../../../locale';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = DCDBInstanceAliasList;\n  InvalidDimensions = DCDBInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'dcdb',\n    action: 'DescribeDCDBInstances',\n    responseField: 'Instances',\n  };\n  keyInStorage = keyInStorage;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  extraActionMap = {\n    DescribeDCDBShards: {\n      service: 'dcdb',\n      action: 'DescribeDCDBShards',\n      responseField: 'Shards',\n      pickKey: 'ShardInstanceId',\n    },\n    DescribeDCDBInstanceNodeInfo: {\n      service: 'dcdb',\n      action: 'DescribeDCDBInstanceNodeInfo',\n      responseField: 'NodesInfo',\n      pickKey: 'NodeId',\n    },\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // 重写getRegion, 入参的region用广州\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/dcdb',\n      },\n      'dcdb',\n      { action: 'DescribeDCDBSaleInfo', region: 'ap-guangzhou' }\n    ).then((response) => {\n      return _.map(response.RegionList || [], (item) => {\n        return {\n          text: t(item.Region),\n          value: item.Region,\n          RegionState: item.RegionState,\n        };\n      });\n    });\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        return modifyDimensons(item);\n      })\n    );\n  }\n  async getConsumerList(params: any) {\n    const { region, action: act, payload } = params;\n    const { service, action, responseField } = this.extraActionMap[act];\n\n    const serviceInfo = GetServiceAPIInfo(region, service);\n\n    // 从分页数据，获取全量数据\n    const rs = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action }\n        );\n      },\n      payload,\n      responseField\n    );\n    return rs[0];\n  }\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    const payload: any = {\n      InstanceId: instance[this.templateQueryIdMap.instance],\n      Limit: 100,\n    };\n    if (Object.keys(this.extraActionMap).indexOf(action) !== -1) {\n      const rs = await this.getConsumerList({ region, action, payload });\n      const { pickKey } = this.extraActionMap[action];\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[this.templateQueryIdMap[pickKey]];\n        return {\n          text: o[this.templateQueryIdMap[pickKey]],\n          value: o[this.templateQueryIdMap[pickKey]],\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage[pickKey], rs);\n      return result;\n    }\n    return [];\n  }\n}\n","import { DCGInstanceAliasList, DCGInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = DCGInstanceAliasList;\n  InvalidDimensions = DCGInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeDirectConnectGateways',\n    responseField: 'DirectConnectGatewaySet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import { DCXInstanceAliasList, DCXInvalidDemensions, namespace, modifyDimensons } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class DCXDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = DCXInstanceAliasList;\n  InvalidDimensions = DCXInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'DirectConnectTunnelId',\n  };\n  InstanceReqConfig = {\n    service: 'dc',\n    action: 'DescribeDirectConnectTunnels',\n    responseField: 'DirectConnectTunnelSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.map((item) => modifyDimensons(item));\n  }\n}\n","import { BaseDatasource } from '../_base/datasource';\nimport {\n  ECDNInstanceAliasList,\n  ECDNInvalidDemensions,\n  modifyDimensons,\n  namespace,\n  templateQueryIdMap,\n} from './query_def';\n\nexport default class ECDNDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = ECDNInstanceAliasList;\n  InvalidDimensions = ECDNInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'ecdn',\n    action: 'DescribeDomains',\n    responseField: 'Domains',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.map((item) => modifyDimensons(item));\n  }\n}\n","import {\n  ECMInstanceAliasList,\n  ECMInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = ECMInstanceAliasList;\n  InvalidDimensions = ECMInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'ecm',\n    action: 'DescribeInstances',\n    responseField: 'InstanceSet',\n  };\n  MetricReqConfig = {\n    resultFilter: modifyDimensons,\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async metricFindQuery(query: any, regex?: string) {\n    return super.metricFindQuery({ ...query, ...{ region: 'ap-guangzhou' } }, regex);\n  }\n}\n","import {\n  ECMBLOCKSTORAGEInstanceAliasList,\n  ECMBLOCKSTORAGEInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  queryMonitorExtraConfg,\n  keyInStorage,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = ECMBLOCKSTORAGEInstanceAliasList;\n  InvalidDimensions = ECMBLOCKSTORAGEInvalidDemensions;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  templateQueryIdMap = templateQueryIdMap;\n  keyInStorage = keyInStorage;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'ecm',\n    action: 'DescribeInstances',\n    responseField: 'InstanceSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async getDiskList(params: any) {\n    const { payload } = params;\n    const { InstanceId } = payload;\n    const instanceCache = await instanceStorage.getInstance(this.service);\n    const instanceObj: any =\n      _.cloneDeep(instanceCache.find((item) => item[this.templateQueryIdMap.instance] === InstanceId)) ?? {};\n    const { DataDisks: dataDisks } = instanceObj;\n    return dataDisks;\n  }\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    const payload: any = {\n      InstanceId: instance,\n      Limit: 100,\n    };\n    const rs = await this.getDiskList({ region, action, payload });\n    const result = rs.map((o) => {\n      o._InstanceAliasValue = o[this.templateQueryIdMap.diskId];\n      return {\n        text: o[this.templateQueryIdMap.diskId],\n        value: o[this.templateQueryIdMap.diskId],\n      };\n    });\n    await instanceStorage.setExtraStorage(this.service, this.keyInStorage.diskId, rs);\n    return result;\n  }\n}\n","import { ECMLBInstanceAliasList, ECMLBInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = ECMLBInstanceAliasList;\n  InvalidDimensions = ECMLBInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'ecm',\n    action: 'DescribeLoadBalancers',\n    responseField: 'LoadBalancerSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async metricFindQuery(query: any, regex?: string) {\n    return super.metricFindQuery({ ...query, ...{ region: 'ap-guangzhou' } }, regex);\n  }\n}\n","import {\n  GSEInstanceAliasList,\n  GSEInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  regionSupported,\n  keyInStorage,\n  queryMonitorExtraConfg,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport instanceStorage from '../../common/datasourceStorage';\nimport { t } from '../../../locale';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = GSEInstanceAliasList;\n  InvalidDimensions = GSEInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'gse',\n    action: 'DescribeInstances',\n    responseField: 'Instances',\n  };\n\n  keyInStorage = keyInStorage;\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // getFilterDropdown({ field }) {\n  //   return super.getRegions();\n  // }\n  getRegions() {\n    return Promise.resolve(regionSupported.map(({ value }) => ({ value, text: t(value) })));\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        return modifyDimensons(item);\n      })\n    );\n  }\n  async getQueueNameList(params: any) {\n    const { region } = params;\n    const serviceInfo = GetServiceAPIInfo(region, this.service);\n\n    // 从分页数据，获取全量数据\n    const res = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action: 'DescribeGameServerSessionQueues' }\n        );\n      },\n      {},\n      'GameServerSessionQueues'\n    );\n    const [rs] = res;\n    return rs;\n  }\n  async getFleetList(params: any) {\n    const { region } = params;\n    const serviceInfo = GetServiceAPIInfo(region, this.service);\n\n    // 从分页数据，获取全量数据\n    const res = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action: 'ListFleets' }\n        );\n      },\n      {},\n      'FleetIds'\n    );\n    const [rs] = res;\n    return rs.map((r) => ({ [this.templateQueryIdMap.FleetId]: r }));\n  }\n  async fetchMetricData(action: string, region: string, instance: any) {\n    // console.log({ action, region, instance });\n    if (action === 'DescribeGameServerSessionQueues') {\n      const rs = await this.getQueueNameList({ region, instanceId: instance[this.templateQueryIdMap.instance] });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[this.templateQueryIdMap.Name];\n        return {\n          text: o[this.templateQueryIdMap.Name],\n          value: o[this.templateQueryIdMap.Name],\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage.queue, rs);\n      return result;\n    }\n    if (action === 'ListFleets') {\n      const rs = await this.getFleetList({ region, instanceId: instance[this.templateQueryIdMap.instance] });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[this.templateQueryIdMap.FleetId];\n        return {\n          text: o[this.templateQueryIdMap.FleetId],\n          value: o[this.templateQueryIdMap.FleetId],\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage.fleet, rs);\n      return result;\n    }\n    return [];\n  }\n}\n","import _ from 'lodash';\nimport { BaseDatasource } from '../_base/datasource';\nimport { LBInstanceAliasList, LBInvalidDemensions } from './query_def';\n\nexport default class SCFDatasource extends BaseDatasource {\n  Namespace = 'QCE/LB';\n  InstanceAliasList = LBInstanceAliasList;\n  InvalidDimensions = LBInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'AddressId',\n  };\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeAddresses',\n    responseField: 'AddressSet',\n    interceptor: {\n      request: (params) => {\n        const { Filters } = params;\n        if (!Filters) {\n          params.Filters = [];\n        }\n        params.Filters.push({\n          Name: 'address-type',\n          Values: ['EIP'],\n        });\n        return params;\n      }, // 设置一些请求参数的 默认值\n    },\n  };\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.filter((item) =>\n      /* hack：这里多加了筛选条件，是因为后端数据不准确，坑啊！ 只拿取包含eip的指标 */\n      item.Dimensions?.[0]?.Dimensions?.includes('eip')\n    );\n  }\n\n  // async getInstances(region, params = {}) {\n  //   const rawSet = await super.getInstances(region, params);\n  //   /* hack：这里多加了筛选条件，是因为后端数据不准确，坑啊！ 只拿取包含eip的指标 */\n  //   return rawSet.filter((item) => item.AddressType === 'EIP');\n  // }\n\n  // async getVariableInstances(region, query = {}) {\n  //   const rawSet = await super.getVariableInstances(region, query);\n  //   return rawSet.filter((item) => item.AddressType === 'EIP');\n  // }\n}\n","import _ from 'lodash';\nimport {\n  LIGHTHOUSEInstanceAliasList,\n  templateQueryIdMap,\n  LighthouseInvalidDemensions,\n  modifyDimensons,\n} from './query_def';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class LighthouseDatasource extends BaseDatasource {\n  Namespace = 'QCE/LIGHTHOUSE';\n  InstanceAliasList = LIGHTHOUSEInstanceAliasList;\n  InvalidDimensions = LighthouseInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'lighthouse',\n    action: 'DescribeInstances',\n    responseField: 'InstanceSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/api',\n        data: { Product: 'lighthouse' },\n      },\n      'api',\n      { action: 'DescribeRegions' }\n    ).then((response) => {\n      return _.filter(\n        _.map(response.RegionSet || [], (item) => {\n          return {\n            text: item.RegionName,\n            value: item.Region,\n            RegionState: item.RegionState,\n          };\n        }),\n        (item) => item.RegionState === 'AVAILABLE'\n      );\n    });\n  }\n\n  getZones(region) {\n    const serviceInfo = GetServiceAPIInfo(region, 'api');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: { Product: 'lighthouse' },\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeZones' }\n    ).then((response) => {\n      return _.filter(\n        _.map(response.ZoneSet || [], (item) => {\n          return { text: item.ZoneName, value: item.Zone, ZoneState: item.ZoneState, Zone: item.Zone };\n        }),\n        (item) => item.ZoneState === 'AVAILABLE'\n      );\n    });\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        return modifyDimensons(item);\n      })\n    );\n  }\n}\n","import _ from 'lodash';\nimport {\n  MONGODBInstanceAliasList,\n  MONGODBInvalidDemensions,\n  templateQueryIdMap,\n  queryMonitorExtraConfg,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class MONGODBDatasource extends BaseDatasource {\n  Namespace = 'QCE/CMONGO';\n  InstanceAliasList = MONGODBInstanceAliasList;\n  ReplicaAliasList = ['ReplicaSetId', 'ReplicaSetName'];\n  templateQueryIdMap = templateQueryIdMap;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n\n  InstanceReqConfig = {\n    service: 'mongodb',\n    action: 'DescribeDBInstances',\n    responseField: 'InstanceDetails',\n  };\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  getInvalidDimensions(selfIns: any, target: any) {\n    if (target.node && target.node !== '') {\n      return { target: 'Node' };\n    }\n    if (target.replica && target.replica !== '') {\n      return { target: 'Replica' };\n    }\n    return MONGODBInvalidDemensions;\n  }\n  formatVariableDisplay(data: Record<string, any>, displayTpl: string | undefined, alias: string, aliasList: string[]) {\n    if (displayTpl) {\n      return displayTpl.replace(/\\$\\{(\\w+)\\}/g, (a, b) => {\n        if (!b || !aliasList.includes(b)) {\n          return '';\n        }\n        return this.getAliasValue(data, b);\n      });\n    }\n    return this.getAliasValue(data, alias);\n  }\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    const { display } = query;\n    if (action === 'DescribeReplicas') {\n      const [res] = await this.getInstances(region, { InstanceIds: [instance[this.templateQueryIdMap.instance]] });\n      let { replicaalias } = query;\n      replicaalias = this.ReplicaAliasList.includes(replicaalias) ? replicaalias : this.templateQueryIdMap.replica;\n      const result = _.map(_.get(res, 'ReplicaSets', []), (item) => {\n        const replicaAlias = this.formatVariableDisplay(item, display, replicaalias, this.ReplicaAliasList);\n        item._InstanceAliasValue = replicaAlias || item[this.templateQueryIdMap.replica];\n        return { text: item.ReplicaSetId, value: item.ReplicaSetId };\n      });\n      await instanceStorage.setExtraStorage(\n        this.service,\n        this.queryMonitorExtraConfg.Replica.dim_KeyInStorage,\n        _.get(res, 'ReplicaSets', [])\n      );\n      return result;\n    }\n    if (action === 'DescribeReplicaNodes') {\n      const [res] = await this.getInstances(region, { InstanceIds: [instance[this.templateQueryIdMap.instance]] });\n      const { replicasetid } = query;\n      const targetReplica = _.find(_.get(res, 'ReplicaSets', []), { ReplicaSetId: this.getVariable(replicasetid) });\n      let result = _.times(targetReplica.SecondaryNum, (index) => {\n        const nodeId = `${targetReplica.ReplicaSetId}-node-slave${index}`;\n        return { text: nodeId, value: nodeId };\n      });\n      if (targetReplica) {\n        result = [\n          { text: `${targetReplica.ReplicaSetId}-node-primary`, value: `${targetReplica.ReplicaSetId}-node-primary` },\n          ...result,\n        ];\n      }\n      await instanceStorage.setExtraStorage(\n        this.service,\n        this.queryMonitorExtraConfg.Node.dim_KeyInStorage,\n        result.map((item) => ({ NodeId: item.value, _InstanceAliasValue: item.value }))\n      );\n      return result;\n    }\n\n    return [];\n  }\n}\n","import { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport { BaseDatasource } from '../_base/datasource';\nimport {\n  InvalidDemensions,\n  InstanceAliasList,\n  templateQueryIdMap,\n  keyInStorage,\n  queryMonitorExtraConfg,\n} from './query_def';\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class MrHdfsDatasource extends BaseDatasource {\n  InvalidDimensions: Record<string, string> = InvalidDemensions;\n  InstanceAliasList: string[] = InstanceAliasList;\n  templateQueryIdMap = templateQueryIdMap;\n  extrasAlias = [];\n  keyInStorage = keyInStorage;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  InstanceReqConfig = {\n    service: 'emr',\n    action: 'DescribeInstances',\n    responseField: 'ClusterList',\n    interceptor: {\n      request: (params) => ({\n        ...params,\n        DisplayStrategy: params.DisplayStrategy || 'monitorManage',\n        ProjectId: params.ProjectId || -1,\n      }), // 设置一些请求参数的 默认值\n      response: (data: any[]) => data.map(({ ClusterId, ClusterName }) => ({ ClusterId, ClusterName })),\n    },\n  };\n\n  async fetchAllNodes(region: string, params: any) {\n    const serviceInfo = GetServiceAPIInfo(region, 'emr');\n\n    // 从分页数据，获取全量数据\n    const rs = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action: 'DescribeClusterNodes' }\n        );\n      },\n      { ...params, isOffsetPage: true },\n      'NodeList'\n    );\n\n    // return rs[0].map((item) => ({ text: item.Ip, value: item.Ip }));\n    return rs[0];\n  }\n\n  async fetchMetricData(action: string, region: string, instance: any) {\n    let result;\n    switch (action) {\n      case 'DescribeClusterNodes': {\n        const resultT = await this.fetchAllNodes(region, { InstanceId: instance.ClusterId, NodeFlag: 'all' });\n        result = resultT.map((item) => {\n          item._InstanceAliasValue = item[templateQueryIdMap.node];\n          return { text: item[templateQueryIdMap.node], value: item[templateQueryIdMap.node] };\n        });\n        await instanceStorage.setExtraStorage(this.service, this.keyInStorage.node, resultT);\n\n        return result;\n      }\n      default:\n        return [];\n    }\n  }\n}\n","import _ from 'lodash';\nimport { NATGATEWAYInstanceAliasList, NATInvalidDemensions } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class NATGATEWAYDatasource extends BaseDatasource {\n  Namespace = 'QCE/NAT_GATEWAY';\n  InstanceAliasList = NATGATEWAYInstanceAliasList;\n  InvalidDimensions = NATInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'NatGatewayId',\n  };\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeNatGateways',\n    responseField: 'NatGatewaySet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import _ from 'lodash';\nimport { OVCDNInstanceAliasList, OVCDNInvalidDemensions } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class OVCDNDatasource extends BaseDatasource {\n  Namespace = 'QCE/OV_CDN';\n  InstanceAliasList = OVCDNInstanceAliasList;\n  InvalidDimensions = OVCDNInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'Domain',\n  };\n  InstanceReqConfig = {\n    service: 'cdn',\n    action: 'DescribeDomains',\n    responseField: 'Domains',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async metricFindQuery(query: any, regex?: string) {\n    return super.metricFindQuery({ ...query, ...{ region: 'ap-guangzhou' } }, regex);\n  }\n}\n","import { PCXInstanceAliasList, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo, GetRequestParamsV2, SliceLength } from '../../common/constants';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = PCXInstanceAliasList;\n  InvalidDimensions = {};\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'xx',\n    action: 'xx',\n    responseField: 'xx',\n  };\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  getInstances(region = 'ap-guangzhou', params = {}) {\n    params = { offset: 0, limit: 50, ...params };\n    const serviceInfo = GetServiceAPIInfo(region, 'pcx');\n    return this.doRequestV2(\n      {\n        url: this.url + serviceInfo.path,\n        data: params,\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeVpcPeeringConnections' }\n    ).then((response) => {\n      return response.data || [];\n    });\n  }\n\n  /**\n   * 模板变量中获取全量的 PCX 实例列表\n   * @param region 地域信息\n   */\n  getVariableInstances(region, query) {\n    let result: any[] = [];\n    const params = { Offset: 0, Limit: 50, ...query };\n    const serviceInfo = GetServiceAPIInfo(region, 'pcx');\n    return this.doRequestV2(\n      {\n        url: this.url + serviceInfo.path,\n        data: params,\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeVpcPeeringConnections' }\n    ).then((response) => {\n      result = response.data || [];\n      const total = response.totalCount || 0;\n      if (result.length >= total) {\n        return result;\n      } else {\n        const param = SliceLength(total, 50);\n        const promises: any[] = [];\n        _.forEach(param, (item) => {\n          promises.push(this.getInstances(region, item));\n        });\n        return Promise.all(promises)\n          .then((responses) => {\n            _.forEach(responses, (item) => {\n              result = _.concat(result, item);\n            });\n            return result;\n          })\n          .catch((error) => {\n            return result;\n          });\n      }\n    });\n  }\n\n  getVpcId(region, params: any = {}) {\n    params = { Offset: 0, Limit: 20, ...params };\n    // TODO 等待腾讯云接口查问题\n    params.Offset = String(params.Offset);\n    params.Limit = String(params.Limit);\n    const serviceInfo = GetServiceAPIInfo(region, 'vpc');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: params,\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeVpcs' }\n    ).then((response) => {\n      return _.map(response.VpcSet || [], (item) => ({ text: item.VpcId, value: item.VpcId }));\n    });\n  }\n\n  getVpcIds(region) {\n    let result: any[] = [];\n    const params: any = { Offset: 0, Limit: 100 };\n    // TODO 等待腾讯云接口查问题\n    params.Offset = String(params.Offset);\n    params.Limit = String(params.Limit);\n    const serviceInfo = GetServiceAPIInfo(region, 'vpc');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: params,\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeVpcs' }\n    ).then((response) => {\n      result = _.map(response.VpcSet || [], (item) => ({ text: item.VpcId, value: item.VpcId }));\n      const total = response.TotalCount || 0;\n      if (result.length >= total) {\n        return result;\n      } else {\n        const param = SliceLength(total, 100);\n        const promises: any[] = [];\n        _.forEach(param, (item) => {\n          promises.push(this.getVpcId(region, item));\n        });\n        return Promise.all(promises)\n          .then((responses) => {\n            _.forEach(responses, (item) => {\n              result = _.concat(result, item);\n            });\n            return result;\n          })\n          .catch((error) => {\n            return result;\n          });\n      }\n    });\n  }\n\n  /**\n   * 腾讯云 API 2.0 请求接口\n   * @param options\n   * @param service\n   * @param signObj\n   */\n  async doRequestV2(options, service, signObj: any = {}) {\n    options = await GetRequestParamsV2(\n      options,\n      service,\n      signObj,\n      this.secretId,\n      this.instanceSettings.id,\n      this.backendSrv\n    );\n    return this.backendSrv\n      .datasourceRequest(options)\n      .then((response) => {\n        return _.get(response, 'data', {});\n      })\n      .catch((error) => {\n        throw error;\n      });\n  }\n}\n","import _ from 'lodash';\nimport {\n  POSTGRESInstanceAliasList,\n  PostgreInvalidDemensions,\n  namespace,\n  modifyDimensons,\n  templateQueryIdMap,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class CDBDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = POSTGRESInstanceAliasList;\n  InvalidDimensions = PostgreInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'postgres',\n    action: 'DescribeDBInstances',\n    responseField: 'DBInstanceSet',\n  };\n\n  MetricReqConfig = {\n    resultFilter: modifyDimensons,\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import { get } from 'lodash';\nimport { QAAPInstanceAliasList, QAAPInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class QAAPDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = QAAPInstanceAliasList;\n  InvalidDimensions = QAAPInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'gaap',\n    action: 'DescribeProxies',\n    responseField: 'ProxySet',\n    interceptor: {\n      // response: (data: unknown[]) =>[\n      //   {\n      //     \"NetDetectId\": \"netd-12345678\",\n      //   },\n      // ],\n    },\n  };\n  // MetricReqConfig = {\n  //   resultFilter: modifyDimensons,\n  // };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.filter(\n      (item) =>\n        get(item, 'Dimensions.length') === 1 &&\n        get(item, 'Dimensions[0].Dimensions.length') === 1 &&\n        get(item, 'Dimensions[0].Dimensions[0]') === 'channelId'\n    );\n  }\n}\n","import _ from 'lodash';\nimport { REDISInstanceAliasList, RedisInvalidDemensions, isValidMetric } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class REDISDatasource extends BaseDatasource {\n  Namespace = 'QCE/REDIS';\n  InstanceAliasList = REDISInstanceAliasList;\n  InvalidDimensions = RedisInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'InstanceId',\n  };\n  InstanceReqConfig = {\n    service: 'redis',\n    action: 'DescribeInstances',\n    responseField: 'InstanceSet',\n    interceptor: {\n      request: (params) => ({ ...params, MonitorVersion: '1m' }),\n    },\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.filter((item) => isValidMetric(item));\n  }\n}\n","import _ from 'lodash';\nimport {\n  REDISMEMInstanceAliasList,\n  namespace,\n  RedisMemInvalidDemensions,\n  templateQueryIdMap,\n  NodeType,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\n\nexport default class REDISDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = REDISMEMInstanceAliasList;\n  InvalidDimensions = RedisMemInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  extrasAlias = [RedisMemInvalidDemensions.pnodeid, RedisMemInvalidDemensions.rnodeid];\n  InstanceReqConfig = {\n    service: 'redis',\n    action: 'DescribeInstances',\n    responseField: 'InstanceSet',\n    interceptor: {\n      request: (params) => ({ ...params, MonitorVersion: '5s' }),\n    },\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getInstanceNodeInfo(params: any) {\n    const { region, instanceId } = params;\n    const serviceInfo = GetServiceAPIInfo(region, 'redis');\n\n    const res = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action: 'DescribeInstanceNodeInfo' }\n        );\n      },\n      {\n        InstanceId: instanceId,\n      },\n      NodeType\n    );\n\n    return res;\n  }\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    if (action === 'DescribeInstanceNodeInfo') {\n      const rs = await this.getInstanceNodeInfo({ region, instanceId: instance[this.templateQueryIdMap.instance] });\n      const { nodetype } = query;\n      const ndoeTypeIndex = NodeType.indexOf(nodetype);\n      return ndoeTypeIndex === -1\n        ? []\n        : _.map(rs[ndoeTypeIndex], (item) => ({ text: item.NodeId, value: item.NodeId }));\n    }\n    return [];\n  }\n}\n","import _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { BaseDatasource } from '../_base/datasource';\nimport {\n  SCFInstanceAliasList,\n  SCFInvalidDemensions,\n  regionSupported,\n  queryMonitorExtraConfg,\n  keyInStorage,\n  templateQueryIdMap,\n} from './query_def';\nimport instanceStorage from '../../common/datasourceStorage';\nimport { t } from '../../../locale';\n\nexport default class SCFDatasource extends BaseDatasource {\n  InstanceKey: string;\n  Namespace: string;\n  InstanceAliasList: string[];\n  InvalidDimensions: Record<string, string>;\n  templateQueryIdMap = templateQueryIdMap;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  keyInStorage = keyInStorage;\n  InstanceReqConfig: { service?: string | undefined; action: string; responseField: string };\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n\n    this.Namespace = 'QCE/SCF_V2';\n    this.InstanceAliasList = SCFInstanceAliasList;\n    this.InvalidDimensions = SCFInvalidDemensions;\n    this.InstanceReqConfig = {\n      service: 'scf',\n      action: 'ListFunctions',\n      responseField: 'Functions',\n    };\n  }\n\n  getRegions() {\n    return Promise.resolve(regionSupported.map(({ value }) => ({ value, text: t(value) })));\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.filter(\n      (item) =>\n        /* hack：这里多加了筛选条件，是因为后端数据不准确，坑啊！ 只拿取包含functionName的指标 */\n        item.Dimensions?.[0]?.Dimensions?.includes('functionName') &&\n        item.Dimensions?.[0]?.Dimensions?.includes('namespace') &&\n        !item.MetricName.startsWith('Name')\n    );\n  }\n\n  getVersions(region, params) {\n    const serviceInfo = GetServiceAPIInfo(region, 'scf');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: params,\n      },\n      serviceInfo.service,\n      { region, action: 'ListVersionByFunction' }\n    ).then((response) => {\n      return response.Versions;\n    });\n  }\n\n  async fetchMetricData(action: string, region: string, instance: any) {\n    // console.log({ action, region, instance });\n    if (action === 'ListVersionByFunction') {\n      const rs = await this.getVersions(region, { FunctionName: instance[this.templateQueryIdMap.instance] });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[this.templateQueryIdMap.version];\n        return {\n          text: o[this.templateQueryIdMap.version],\n          value: o[this.templateQueryIdMap.version],\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage.version, rs);\n      return result;\n    }\n    return [];\n  }\n}\n","import {\n  SQLSERVERInstanceAliasList,\n  SQLSERVERInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  regionSupported,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport _ from 'lodash';\nimport { t } from '../../../locale';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = SQLSERVERInstanceAliasList;\n  InvalidDimensions = SQLSERVERInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'sqlserver',\n    action: 'DescribeDBInstances',\n    responseField: 'DBInstances',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(rawSet.map((item) => modifyDimensons(item)));\n  }\n  getRegions() {\n    return Promise.resolve(regionSupported.map(({ value }) => ({ value, text: t(value) })));\n  }\n  getFilterDropdown({ field, region }) {\n    if (field === 'Zone') {\n      const serviceInfo = GetServiceAPIInfo(region, 'cvm');\n      return this.doRequest(\n        {\n          url: this.url + serviceInfo.path,\n        },\n        serviceInfo.service,\n        { region, action: 'DescribeZones' }\n      ).then((response) => {\n        return _.filter(\n          _.map(response.ZoneSet || [], (item) => {\n            return { text: item.ZoneName, value: item.Zone, ZoneState: item.ZoneState, Zone: item.Zone };\n          }),\n          (item) => item.ZoneState === 'AVAILABLE'\n        );\n      });\n    }\n    return [];\n  }\n}\n","import { TCAPLUSInstanceAliasList, TCAPLUSInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { t } from '../../../locale';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = TCAPLUSInstanceAliasList;\n  InvalidDimensions = TCAPLUSInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'tcaplusdb',\n    action: 'DescribeTables',\n    responseField: 'TableInfos',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // 重写getRegion\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/tcaplusdb',\n      },\n      'tcaplusdb',\n      { action: 'DescribeRegions', region: 'ap-guangzhou' }\n    ).then((response) => {\n      return _.map(response.RegionInfos || [], (item) => {\n        return {\n          text: t(item.RegionName),\n          value: item.RegionName,\n        };\n      });\n    });\n  }\n}\n","import {\n  TDMQInstanceAliasList,\n  TDMQInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  regionSupported,\n  modifyDimensons,\n  queryMonitorExtraConfg,\n  keyInStorage,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport instanceStorage from '../../common/datasourceStorage';\nimport { t } from '../../../locale';\n\nexport default class TDMQDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = TDMQInstanceAliasList;\n  InvalidDimensions = TDMQInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  keyInStorage = keyInStorage;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'tdmq',\n    action: 'DescribeClusters',\n    responseField: 'ClusterSet',\n  };\n  extraActionMap = {\n    DescribeTopics: {\n      service: 'tdmq',\n      action: 'DescribeTopics',\n      responseField: 'TopicSets',\n      pickKey: 'TopicName',\n    },\n    DescribeEnvironments: {\n      service: 'tdmq',\n      action: 'DescribeEnvironments',\n      responseField: 'EnvironmentSet',\n      pickKey: 'EnvironmentId',\n    },\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // getFilterDropdown({ field }) {\n  //   return super.getRegions();\n  // }\n  getRegions() {\n    return Promise.resolve(regionSupported.map(({ value }) => ({ value, text: t(value) })));\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(rawSet.map((item) => modifyDimensons(item)));\n  }\n\n  async getConsumerList(params: any) {\n    const { region, action: act, payload } = params;\n    const { service, action, responseField } = this.extraActionMap[act];\n\n    const serviceInfo = GetServiceAPIInfo(region, service);\n\n    // 从分页数据，获取全量数据\n    const rs = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action }\n        );\n      },\n      payload,\n      responseField\n    );\n    // console.log({ rs });\n    return rs[0];\n  }\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    const payload: any = {\n      Limit: 100,\n      ClusterId: instance[this.templateQueryIdMap.instance],\n    };\n    if (Object.keys(this.extraActionMap).indexOf(action) !== -1) {\n      if (action === 'DescribeTopics') {\n        payload.EnvironmentId = this.getVariable(query['environmentid']);\n      }\n      const rs = await this.getConsumerList({ region, action, payload });\n      const { pickKey } = this.extraActionMap[action];\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[this.templateQueryIdMap[pickKey]];\n        return {\n          text: o[this.templateQueryIdMap[pickKey]],\n          value: o[this.templateQueryIdMap[pickKey]],\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage[pickKey], rs);\n      return result;\n    }\n    return [];\n  }\n}\n","import {\n  TDMQRABBITMQInstanceAliasList,\n  TDMQInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  regionSupported,\n  queryMonitorExtraConfg,\n  keyInStorage,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport instanceStorage from '../../common/datasourceStorage';\nimport { t } from '../../../locale';\n\nexport default class TDMQDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = TDMQRABBITMQInstanceAliasList;\n  InvalidDimensions = TDMQInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  keyInStorage = keyInStorage;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'tdmq',\n    action: 'DescribeRabbitMQVipInstances',\n    responseField: 'Instances',\n  };\n  extraActionMap = {\n    DescribeRabbitMQNodeList: {\n      service: 'tdmq',\n      action: 'DescribeRabbitMQNodeList',\n      responseField: 'NodeList',\n      pickKey: 'node',\n    },\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  getRegions() {\n    return Promise.resolve(regionSupported.map(({ value }) => ({ value, text: t(value) })));\n  }\n\n  async getConsumerList(params: any) {\n    const { region, action: act, payload } = params;\n    const { service, action, responseField } = this.extraActionMap[act];\n\n    const serviceInfo = GetServiceAPIInfo(region, service);\n\n    // 从分页数据，获取全量数据\n    const rs = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action }\n        );\n      },\n      payload,\n      responseField\n    );\n    return rs[0];\n  }\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    const payload: any = {\n      Limit: 100,\n      InstanceId: instance[this.templateQueryIdMap.instance],\n    };\n    if (Object.keys(this.extraActionMap).indexOf(action) !== -1) {\n      const rs = await this.getConsumerList({ region, action, payload });\n      const { pickKey } = this.extraActionMap[action];\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[this.templateQueryIdMap[pickKey]];\n        return {\n          text: o[this.templateQueryIdMap[pickKey]],\n          value: o[this.templateQueryIdMap[pickKey]],\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage[pickKey], rs);\n      return result;\n    }\n    return [];\n  }\n}\n","import {\n  TDMQROCKETMQInstanceAliasList,\n  TDMQInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  regionSupported,\n  queryMonitorExtraConfg,\n  keyInStorage,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport instanceStorage from '../../common/datasourceStorage';\nimport { t } from '../../../locale';\n\nexport default class TDMQDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = TDMQROCKETMQInstanceAliasList;\n  InvalidDimensions = TDMQInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  keyInStorage = keyInStorage;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'tdmq',\n    action: 'DescribeRocketMQClusters',\n    responseField: 'ClusterList',\n    interceptor: {\n      response: (result) =>\n        _.map(result, (item) => ({\n          ...item,\n          ClusterId: _.get(item, 'Info.ClusterId', ''),\n          ClusterName: _.get(item, 'Info.ClusterName', ''),\n        })),\n    },\n  };\n  extraActionMap = {\n    DescribeRocketMQNamespaces: {\n      service: 'tdmq',\n      action: 'DescribeRocketMQNamespaces',\n      responseField: 'Namespaces',\n      pickKey: 'namespace',\n    },\n    DescribeRocketMQGroups: {\n      service: 'tdmq',\n      action: 'DescribeRocketMQGroups',\n      responseField: 'Groups',\n      pickKey: 'group',\n    },\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.filter((item) => !item.Dimensions?.[0]?.Dimensions?.includes('rmqcluster'));\n  }\n\n  getRegions() {\n    return Promise.resolve(regionSupported.map(({ value }) => ({ value, text: t(value) })));\n  }\n\n  async getConsumerList(params: any) {\n    const { region, action: act, payload } = params;\n    const { service, action, responseField } = this.extraActionMap[act];\n\n    const serviceInfo = GetServiceAPIInfo(region, service);\n\n    // 从分页数据，获取全量数据\n    const rs = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action }\n        );\n      },\n      payload,\n      responseField\n    );\n    return rs[0];\n  }\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    const payload: any = {\n      Limit: 100,\n      ClusterId: instance[this.templateQueryIdMap.instance],\n    };\n    if (Object.keys(this.extraActionMap).indexOf(action) !== -1) {\n      if (action === 'DescribeRocketMQGroups') {\n        payload.NamespaceId = this.getVariable(query['clusternamespace']);\n      }\n      const rs = await this.getConsumerList({ region, action, payload });\n      const { pickKey } = this.extraActionMap[action];\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[this.templateQueryIdMap[pickKey]];\n        return {\n          text: o[this.templateQueryIdMap[pickKey]],\n          value: o[this.templateQueryIdMap[pickKey]],\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage[pickKey], rs);\n      return result;\n    }\n    return [];\n  }\n}\n","import { map, flatten, reduce, isEmpty, filter, split, sortBy, findIndex, trim, isArray, isString } from 'lodash';\nimport { GetServiceAPIInfo, ReplaceVariable } from '../../common/constants';\nimport { getTimeShiftInMs } from '../../common/utils';\nimport { BaseDatasource } from '../_base/datasource';\n\nconst variableToArray = (variable) => {\n  if (isEmpty(variable)) {\n    return [];\n  }\n  if (isArray(variable)) {\n    return variable;\n  }\n  if (isString(variable)) {\n    return split(variable, ',').map((item) => trim(item));\n  }\n  return [];\n};\n\nexport default class TKEDatasource extends BaseDatasource {\n  InstanceAliasList = ['ClusterId', 'ClusterName'];\n  templateQueryIdMap = {\n    instance: 'ClusterId',\n  };\n  InvalidDimensions = {\n    tke_cluster_instance_id: 'ClusterId',\n  };\n  InstanceReqConfig = {\n    service: 'tke',\n    action: 'DescribeClusters',\n    responseField: 'Clusters',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  getMonitorData(params: any, region: any, instances: any, target: any, options: any) {\n    const serviceInfo = GetServiceAPIInfo(region, 'monitor');\n    const timeshift = getTimeShiftInMs(target.timeshift);\n    const conditions = reduce(\n      target.conditions,\n      (prev, item) => {\n        if (isEmpty(item.Key) || isEmpty(item.Operator) || isEmpty(item.Value)) {\n          return prev;\n        }\n        return [\n          ...filter(prev, (e) => e.Key !== item.Key),\n          {\n            Key: ReplaceVariable(this.templateSrv, options.scopedVars, item.Key, false),\n            Operator: ReplaceVariable(this.templateSrv, options.scopedVars, item.Operator, false),\n            Value: variableToArray(ReplaceVariable(this.templateSrv, options.scopedVars, item.Value, true)),\n          },\n        ];\n      },\n      [{ Key: 'tke_cluster_instance_id', Operator: '=', Value: instances.map((item) => item['ClusterId']) }]\n    );\n\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: {\n          Period: params.Period,\n          MetricNames: [params.MetricName],\n          Module: 'monitor',\n          Namespace: 'QCE/TKE',\n          EndTime: params.EndTime,\n          StartTime: params.StartTime,\n          Conditions: conditions,\n          GroupBys: variableToArray(ReplaceVariable(this.templateSrv, options.scopedVars, target.groupBys, true)),\n        },\n      },\n      serviceInfo.service,\n      { action: 'DescribeStatisticData', region }\n    ).then((response) => {\n      return flatten(\n        map(response.Data, (data) => {\n          return map(data.Points, (point) => {\n            const dimensionSort = sortBy(point.Dimensions, ['Name']);\n            const dimensionString = [\n              ...dimensionSort.splice(findIndex(dimensionSort, { Name: 'tke_cluster_instance_id' }), 1),\n              ...dimensionSort,\n            ]\n              .map((dimension) => dimension.Value)\n              .join(' - ');\n            const timeshiftString = timeshift > 0 ? `_${target.timeshift}` : '';\n            return {\n              target: `${data.MetricName} - ${dimensionString}${timeshiftString}`,\n              datapoints: map(point.Values, (value) => [value.Value, value.Timestamp * 1000 + timeshift]),\n            };\n          });\n        })\n      );\n    });\n  }\n}\n","import _ from 'lodash';\nimport { TSFInvalidDemensions, TSFInstanceAliasList, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class TSFDatasource extends BaseDatasource {\n  Namespace = 'QCE/TSF';\n  InstanceAliasList = TSFInstanceAliasList;\n  InvalidDimensions = TSFInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'tsf',\n    action: 'DescribeApplications',\n    responseField: 'Content',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import {\n  VCLBInstanceAliasList,\n  VCLBInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  clbNamespaceMap,\n  regionSupported,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { t } from '../../../locale';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = VCLBInstanceAliasList;\n  InvalidDimensions = VCLBInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'clb',\n    action: 'DescribeLoadBalancers',\n    responseField: 'LoadBalancerSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  getRegions() {\n    return Promise.resolve(regionSupported.map(({ value }) => ({ value, text: t(value) })));\n  }\n  async getAllMetrics(region: string) {\n    const serviceInfo = GetServiceAPIInfo(region, 'monitor');\n    const { MetricSet: public_metrics } = await this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: {\n          Namespace: clbNamespaceMap.public,\n        },\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeBaseMetrics' }\n    );\n    const { MetricSet: private_metrics } = await this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: {\n          Namespace: clbNamespaceMap.private,\n        },\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeBaseMetrics' }\n    );\n    const res = Object.values(_.keyBy(_.concat(private_metrics, public_metrics), 'MetricName'));\n    return res.map((t) => modifyDimensons(t));\n  }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await this.getAllMetrics(region);\n    return _.compact(rawSet);\n  }\n}\n","import { VBCInstanceAliasList, VBCInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = VBCInstanceAliasList;\n  InvalidDimensions = VBCInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeCcns',\n    responseField: 'CcnSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  getFilterDropdown({ field }) {\n    return super.getRegions();\n  }\n}\n","import {\n  VPCNETDETECTInstanceAliasList,\n  VPCNETInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = VPCNETDETECTInstanceAliasList;\n  InvalidDimensions = VPCNETInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeNetDetects',\n    responseField: 'NetDetectSet',\n    interceptor: {\n      // response: (data: unknown[]) =>[\n      //   {\n      //     \"NetDetectId\": \"netd-12345678\",\n      //   },\n      // ],\n    },\n  };\n  MetricReqConfig = {\n    resultFilter: modifyDimensons,\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import { VPNGWInstanceAliasList, VPNGWInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = VPNGWInstanceAliasList;\n  InvalidDimensions = VPNGWInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeVpnGateways',\n    responseField: 'VpnGatewaySet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  getFilterDropdown({ field, region }) {\n    if (field === 'zone') {\n      const serviceInfo = GetServiceAPIInfo(region, 'cvm');\n      return this.doRequest(\n        {\n          url: this.url + serviceInfo.path,\n        },\n        serviceInfo.service,\n        { region, action: 'DescribeZones' }\n      ).then((response) => {\n        return _.filter(\n          _.map(response.ZoneSet || [], (item) => {\n            return { text: item.ZoneName, value: item.Zone, ZoneState: item.ZoneState, Zone: item.Zone };\n          }),\n          (item) => item.ZoneState === 'AVAILABLE'\n        );\n      });\n    }\n    return [];\n  }\n}\n","import { VPNXInstanceAliasList, VPNXInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = VPNXInstanceAliasList;\n  InvalidDimensions = VPNXInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeVpnConnections',\n    responseField: 'VpnConnectionSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import _ from 'lodash';\nimport {\n  WAFInstanceAliasList,\n  WAFInvalidDemensions,\n  templateQueryIdMap,\n  namespace,\n  regionSupported,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport { t } from '../../../locale';\n\nexport default class CDNDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = WAFInstanceAliasList;\n  InvalidDimensions = WAFInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'waf',\n    // action: 'DescribeDomains', // DescribeMonitorDomains\n    action: 'DescribeMonitorDomains', //\n    responseField: 'Domains',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  getRegions() {\n    return Promise.resolve(regionSupported.map(({ value }) => ({ value, text: t(value) })));\n  }\n  async metricFindQuery(query: any, regex?: string) {\n    return super.metricFindQuery({ ...query, ...{ region: 'ap-guangzhou' } }, regex);\n  }\n\n  getOwnDimension(dimensionObject: any, ins: any) {\n    const { Edition = '' } = ins;\n    return {\n      ...dimensionObject,\n      edition: {\n        Name: 'edition',\n        Value: Edition,\n      },\n    };\n  }\n}\n","import coreModule from 'grafana/app/core/core_module';\nimport { APIGATEWAYFilterFieldsDescriptor, templateQueryIdMap, queryEditorName, namespace } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.APIGATEWAYFilterFieldsDescriptor = APIGATEWAYFilterFieldsDescriptor;\n      $scope.namespace = namespace;\n    };\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      const service = GetServiceFromNamespace($scope.namespace);\n      // console.log({namespace, service});\n      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance)[templateQueryIdMap.instance];\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n    $scope.getExtraDropdown = async (target) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      const instanceId = $scope.getInstanceId();\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const rs = await $scope.datasource.getServiceFn(service, 'getEnvironmentNameList')({ region, instanceId });\n\n      const result = rs.map((o) => {\n        return {\n          text: o.EnvironmentName,\n          value: JSON.stringify(o),\n        };\n      });\n      return result;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/45073\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in APIGATEWAYFilterFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputNumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />    \n      <multi-condition\n        ng-if=\"field.type === 'inputNumberMulti'\"\n        type=\"'inputNumber'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        maxNum=\"field.max\"\n        minNum=\"field.min\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputMulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- 起始区域 目的区域等 -->\n  <div>\n    <div class=\"gf-form-inline\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">EnvironmentName</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target.EnvironmentName\" allow-custom=\"true\" lookup-text=\"true\"  get-options=\"getExtraDropdown(target)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive(queryEditorName, sQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { BWPFilterFieldsDescriptor } from './query_def';\n\nexport class BWPQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.BWPFilterFieldsDescriptor = BWPFilterFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        case 'zone':\n          return $scope.getZones();\n        default:\n          return [];\n      }\n    };\n\n    $scope.getZones = () => {\n      if (!$scope.region) {\n        return [];\n      }\n      return $scope.datasource.getZones('cvm', $scope.region);\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/213/15728\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        单次请求返回的数量，默认为20，最小值为1，最大值为100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      BandwidthPackageIds\n      <info-popover mode=\"right-normal\">\n        带宽包唯一ID列表，参数不支持同时指定 BandwidthPackageIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n      switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n  <multi-condition type=\"'input'\" max-cond=\"100\" value=\"target.queries.BandwidthPackageIds\" on-change=\"onChange()\">\n  </multi-condition>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      Filters\n      <info-popover mode=\"right-normal\">\n        过滤条件，每次请求的 Filters 的上限为10，Filter.Values 的上限为5。参数不支持同时指定 BandwidthPackageIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n      on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n  <div class=\"gf-form-inline\" ng-repeat=\"field in BWPFilterFieldsDescriptor\">\n    <label class=\"gf-form-label width-14\">\n      {{ field.key }}\n      <info-popover mode=\"right-normal\">\n        {{ field.cnDescriptor }}\n        <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n      </info-popover>\n    </label>\n    <multi-condition\n      ng-if=\"field.type === 'dropdownmulti'\"\n      type=\"'dropdown'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      get-options=\"getDropdown(field.key)\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputNumbermulti'\"\n      type=\"'inputNumber'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      maxNum=\"field.max\"\n      minNum=\"field.min\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputmulti'\"\n      type=\"'input'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <custom-select-dropdown\n      ng-if=\"field.type === 'select'\"\n      value=\"target.queries.Filters[field.key]\"\n      options=\"field.list\"\n      multiple=\"true\"\n      on-change=\"onChange()\"\n    ></custom-select-dropdown>\n  </div>\n</div>\n\n</div>\n`;\n\nexport function bwpQuery() {\n  return {\n    template: template,\n    controller: BWPQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('bwpQuery', bwpQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { CDBFieldsDescriptor } from './query_def';\n\nexport class CDBQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.CDBFieldsDescriptor = CDBFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        case 'ZoneIds':\n          return $scope.getZones();\n        default:\n          return [];\n      }\n    };\n\n    $scope.getZones = () => {\n      if (!$scope.region) {\n        return [];\n      }\n      return $scope.datasource.getZones('cdb', $scope.region);\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/236/15872\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in CDBFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n`;\n\nexport function cdbQuery() {\n  return {\n    template: template,\n    controller: CDBQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('cdbQuery', cdbQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { CDNFilterFieldsDescriptor } from './query_def';\n\nexport class CDNQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.CDNFilterFieldsDescriptor = CDNFilterFieldsDescriptor;\n    };\n\n    // $scope.onChecked = (srcField, dstField) => {\n    //   if ($scope.target.queries[srcField] === true) {\n    //     $scope.target.queries[dstField] = false;\n    //   }\n    //   $scope.onChange();\n    // };\n\n    // $scope.getDropdown = (field) => {\n    //   switch (field) {\n    //     case 'zone':\n    //       return $scope.getZones();\n    //     default:\n    //       return [];\n    //   }\n    // };\n\n    // $scope.getZones = () => {\n    //   if (!$scope.region) {\n    //     return [];\n    //   }\n    //   return $scope.datasource.getZones('cvm', $scope.region);\n    // };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/228/41118\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        单次请求返回的数量，默认为20，最小值为1，最大值为100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\" ng-repeat=\"field in CDNFilterFieldsDescriptor\">\n<label class=\"gf-form-label width-14\">\n  {{ field.key }}\n  <info-popover mode=\"right-normal\">\n    {{ field.cnDescriptor }}\n    <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n  </info-popover>\n</label>\n<multi-condition\n  ng-if=\"field.type === 'inputNumbermulti'\"\n  type=\"'inputNumber'\"\n  max-cond=\"5\"\n  value=\"target.queries.Filters[field.key]\"\n  maxNum=\"field.max\"\n  minNum=\"field.min\"\n  on-change=\"onChange()\"\n></multi-condition>\n<multi-condition\n  ng-if=\"field.type === 'inputmulti'\"\n  type=\"'input'\"\n  max-cond=\"5\"\n  value=\"target.queries.Filters[field.key]\"\n  on-change=\"onChange()\"\n></multi-condition>\n<custom-select-dropdown\n  ng-if=\"field.type === 'select'\"\n  value=\"target.queries.Filters[field.key]\"\n  options=\"field.list\"\n  multiple=\"true\"\n  on-change=\"onChange()\"\n></custom-select-dropdown>\n</div>\n\n</div>\n`;\n\nexport function cdnQuery() {\n  return {\n    template: template,\n    controller: CDNQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('cdnQuery', cdnQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { CDNPROVINCEFilterFieldsDescriptor, queryEditorName, namespace } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nconst ExtraFields = [\n  {\n    label: 'Isp',\n    field: 'isp',\n  },\n  {\n    label: 'Province',\n    field: 'district',\n  },\n];\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.CDNPROVINCEFilterFieldsDescriptor = CDNPROVINCEFilterFieldsDescriptor;\n      $scope.ExtraFields = ExtraFields;\n      $scope.namespace = namespace;\n    };\n\n    $scope.getExtraDropdown = async (target, field) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const rs = await $scope.datasource.getServiceFn(service, 'getConsumerList')({ region, field });\n      return rs;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Domains are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/228/41118\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\" ng-repeat=\"field in CDNPROVINCEFilterFieldsDescriptor\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <input\n          ng-if=\"field.type === 'inputNumber'\"\n          style=\"margin-right:2px\"\n          type=\"number\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n          ng-min=\"field.min\"\n          ng-max=\"field.max\"\n        />\n        <input\n          ng-if=\"field.type === 'input'\"\n          style=\"margin-right:2px\"\n          type=\"text\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n        />    \n        <multi-condition\n          ng-if=\"field.type === 'inputNumberMulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputMulti'\"\n          type=\"'input'\"\n          value=\"target.queries[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries[field.key]\"\n          options=\"field.list\"\n          multiple=\"field.multiple || false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n\n<!-- 起始区域 目的区域等 -->\n  <div>\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in ExtraFields\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(target, extra.field)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive(queryEditorName, sQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { CFSQueryDescriptor } from './query_def';\n\nexport class SCFQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.CFSQueryDescriptor = CFSQueryDescriptor;\n    };\n\n    $scope.getVersions = async (target) => {\n      // console.log(2222);\n\n      // return [{ text: 1, value: 1 }];\n      // console.log(target, 'target');\n      const { instance, region } = target;\n      const fetcher = $scope.datasource.getServiceFn('scf', 'getVersions');\n      if (!instance || !region) return [];\n\n      return fetcher(region, { FunctionName: JSON.parse(instance).FunctionName }).then((res) => {\n        // console.log(res, 'res');\n\n        return res;\n      });\n    };\n    // $scope.onChecked = (srcField, dstField) => {\n    //   if ($scope.target.queries[srcField] === true) {\n    //     $scope.target.queries[dstField] = false;\n    //   }\n    //   $scope.onChange();\n    // };\n\n    // $scope.getDropdown = (field) => {\n    //   switch (field) {\n    //     case 'zone':\n    //       return $scope.getZones();\n    //     default:\n    //       return [];\n    //   }\n    // };\n\n    // $scope.getZones = () => {\n    //   if (!$scope.region) {\n    //     return [];\n    //   }\n    //   return $scope.datasource.getZones('cvm', $scope.region);\n    // };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n  FileSystems are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/582/38170\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in CFSQueryDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n  </div>\n`;\n\nexport function scfQuery() {\n  return {\n    template: template,\n    controller: SCFQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\ncoreModule.directive('cfsQuery', scfQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { CKAFKAQueryDescriptor, templateQueryIdMap } from './query_def';\nimport { isTargetEqual } from '../../common/utils';\n\nconst ExtraFields = [\n  {\n    label: 'ConsumerGroup',\n    field: 'consumerGroup',\n  },\n  {\n    label: 'TopicId',\n    field: 'topicId',\n  },\n  {\n    label: 'Partition',\n    field: 'partition',\n  },\n];\n\nexport class CKAFKAQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.CKAFKAQueryDescriptor = CKAFKAQueryDescriptor;\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        default:\n          return [];\n      }\n    };\n    $scope.onInstanceChange = (n, o) => {\n      if (isTargetEqual(n, o, 'LoadBalancerId')) return;\n      $scope.target.consumerGroup = '';\n      $scope.target.topicId = '';\n      $scope.target.topicName = '';\n      $scope.target.partition = '';\n    };\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}));\n    };\n\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      instance = $scope.datasource.getServiceFn('ckafka', 'getVariable')(instance);\n      if (Array.isArray(instance)) instance = instance[0];\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance).InstanceId;\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n\n    $scope.getExtraDropdown = async (target, field) => {\n      const InstanceId = $scope.getInstanceId();\n      const fetcher = $scope.datasource.getServiceFn('ckafka', 'getConsumerGroups');\n      const region = $scope.datasource.getServiceFn('ckafka', 'getVariable')(target.region);\n      const res = await fetcher(region, { InstanceId, groupname: target.consumerGroup, topicid: target.topicId });\n\n      const { TopicList, GroupList, PartitionList } = res;\n      const data = {\n        GroupList: GroupList.map((group) => {\n          group._InstanceAliasValue = group.GroupName;\n          return {\n            text: group.GroupName,\n            value: JSON.stringify(group),\n          };\n        }),\n        TopicList: TopicList.map((topic) => {\n          topic._InstanceAliasValue = topic[templateQueryIdMap.topicId];\n          return {\n            text: topic[templateQueryIdMap.topicId],\n            value: JSON.stringify(topic), // 为了获取多维度的值，这里完全可以使用JSON.stringify()将整个对象放进去\n          };\n        }),\n        PartitionList: PartitionList.map((par) => {\n          par._InstanceAliasValue = par[templateQueryIdMap.partition];\n          return {\n            text: String(par[templateQueryIdMap.partition]),\n            value: JSON.stringify(par),\n          };\n        }),\n      };\n\n      switch (field) {\n        case 'consumerGroup':\n          return data.GroupList;\n        case 'topicId':\n          return data.TopicList;\n        case 'partition':\n          return data.PartitionList;\n      }\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/583/18582\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in CKAFKAQueryDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- 主题，消费分组，分区 -->\n  <div ng-if=\"target.instance\">\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getExtraDropdown(target, extra.field)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  </div>\n`;\n\nexport function scfQuery() {\n  return {\n    template: template,\n    controller: CKAFKAQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n      instance: '=',\n    },\n    link: (scope, element, attrs) => {\n      scope.$watch('target.instance', (newValue, oldValue) => {\n        scope.onInstanceChange?.(newValue, oldValue);\n      });\n    },\n  };\n}\ncoreModule.directive('ckafkaQuery', scfQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { get, chain } from 'lodash';\nimport { LOADBALANCEFieldsDescriptor, templateQueryIdMap, namespace } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\nimport { isTargetEqual } from '../../common/utils';\n\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.LOADBALANCEFieldsDescriptor = LOADBALANCEFieldsDescriptor;\n      $scope.serversList = [];\n    };\n    $scope.onFieldChange = (field) => {\n      $scope.onRefresh();\n    };\n    $scope.onInstanceChange = (n, o) => {\n      if (isTargetEqual(n, o, 'InstanceId')) return;\n      $scope.target.listener = '';\n      $scope.target.servers = '';\n      $scope.target.serverPort = '';\n    };\n    $scope.getVariableId = (data, type) => {\n      let variableData = data;\n      const service = GetServiceFromNamespace(namespace);\n\n      variableData = $scope.datasource.getServiceFn(service, 'getVariable')(variableData);\n      if (!variableData) {\n        return '';\n      }\n      try {\n        variableData = JSON.parse(variableData)[templateQueryIdMap[type]];\n      } catch (error) {\n        // console.log();\n      }\n      return variableData;\n    };\n    $scope.getExtraDropdown = async (target) => {\n      const { instance } = $scope.target;\n      const service = GetServiceFromNamespace(namespace);\n      const instanceId = $scope.getVariableId(instance, 'instance');\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const rs = await $scope.datasource.getServiceFn(service, 'getListenerList')({ region, instanceId });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[templateQueryIdMap.listener];\n        return {\n          text: o[templateQueryIdMap.listener],\n          value: JSON.stringify(o),\n        };\n      });\n      return result;\n    };\n    $scope.getServersDropdown = async (target) => {\n      const { instance, listener } = $scope.target;\n      const service = GetServiceFromNamespace(namespace);\n      const instanceId = $scope.getVariableId(instance, 'instance');\n      const listenerId = $scope.getVariableId(listener, 'listener');\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const serversList = await $scope.datasource.getServiceFn(\n        service,\n        'getServerList'\n      )({ region, instanceId, listenerId });\n      $scope.serversList = serversList;\n      const res = chain(serversList)\n        .map((item) => {\n          item._InstanceAliasValue = get(item, 'PrivateIpAddresses.0');\n          return {\n            text: get(item, 'PrivateIpAddresses.0'),\n            value: JSON.stringify(item),\n          };\n        })\n        .uniqBy('text')\n        .value();\n      return res;\n    };\n    $scope.getServerPortDropdown = async (target) => {\n      const { servers } = $scope.target;\n      let serverPortList: any[] = [];\n      try {\n        const serversSource = JSON.parse(servers);\n        serverPortList = chain($scope.serversList)\n          .filter((item) => get(serversSource, 'PrivateIpAddresses.0') === get(item, 'PrivateIpAddresses.0'))\n          .map((item) => {\n            item._InstanceAliasValue = get(item, 'Port');\n            return {\n              text: `${get(item, 'Port')}`,\n              value: JSON.stringify(item),\n            };\n          })\n          .value();\n      } catch (error) {}\n      return serverPortList;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Functions are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/214/30685\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\" ng-repeat=\"field in LOADBALANCEFieldsDescriptor\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <input\n          ng-if=\"field.type === 'inputNumber'\"\n          style=\"margin-right:2px\"\n          type=\"number\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n          ng-min=\"field.min\"\n          ng-max=\"field.max\"\n        />\n        <input\n          ng-if=\"field.type === 'input'\"\n          style=\"margin-right:2px\"\n          type=\"text\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n        />\n        <multi-condition\n          ng-if=\"field.type === 'inputNumberMulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputMulti'\"\n          type=\"'input'\"\n          value=\"target.queries[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries[field.key]\"\n          options=\"field.list\"\n          multiple=\"field.multiple || false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!--Listener维度部分-->\n<div class=\"gf-form-inline\" ng-if=\"target.instance\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label query-keyword width-9\">\n      Listeners\n      <info-popover mode=\"right-normal\">\n        可不选择监听器，这时通过实例维度查询监控数据\n      </info-popover>\n    </label>\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n      <gf-form-dropdown model=\"target.listener\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getExtraDropdown(target)\"\n        on-change=\"onRefresh()\" css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n  </div>\n</div>\n<div class=\"gf-form-inline\" ng-if=\"target.listener && namespace !== '${namespace}'\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label query-keyword width-9\">Servers</label>\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n      <gf-form-dropdown model=\"target.servers\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getServersDropdown(target)\"\n        on-change=\"onRefresh()\" css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n  </div>\n</div>\n<div class=\"gf-form-inline\" ng-if=\"target.servers && namespace !== '${namespace}'\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label query-keyword width-9\">ServerPort</label>\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n      <gf-form-dropdown model=\"target.serverPort\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getServerPortDropdown(target)\"\n        on-change=\"onRefresh()\" css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n  </div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      namespace: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n    link: (scope, element, attrs) => {\n      scope.$watch('target.instance', (newValue, oldValue) => {\n        scope.onInstanceChange?.(newValue, oldValue);\n      });\n    },\n  };\n}\ncoreModule.directive('clbQuery', sQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { CLSFilterFieldsDescriptor, queryEditorName } from './query_def';\n\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.GSEFilterFieldsDescriptor = CLSFilterFieldsDescriptor;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/45073\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in GSEFilterFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputNumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />    \n      <multi-condition\n        ng-if=\"field.type === 'inputNumberMulti'\"\n        type=\"'inputNumber'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        maxNum=\"field.max\"\n        minNum=\"field.min\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputMulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- 起始区域 目的区域等 -->\n<div>\n  <div class=\"gf-form-inline\" >\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label query-keyword width-9\">uin</label>\n      <input\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.uin\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />    \n    </div>\n  </div>\n</div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive(queryEditorName, sQuery);\n","import createQuery from '../_base/query';\nimport { InstanceQueryDescriptor } from './query_def';\n\ncreateQuery('cmqQuery', {\n  fieldDescriptor: InstanceQueryDescriptor,\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/406/42624',\n  namespace: 'QCE/CMQ',\n});\n","import coreModule from 'grafana/app/core/core_module';\nimport { InstanceQueryDescriptor } from './query_def';\n\nconst ExtraFields = [\n  {\n    label: 'Subscription(订阅)',\n    field: 'subscriptionId',\n  },\n];\n\nexport class CmqTopicQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.InstanceQueryDescriptor = InstanceQueryDescriptor;\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        default:\n          return [];\n      }\n    };\n\n    // 各个实例下的订阅，由于不想每次都重复发请求，所以这里做了一层缓存，数据结构为{ [instanceId]: {   } }\n    $scope.cacheMap = {};\n\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}));\n    };\n\n    $scope.getTopicName = () => {\n      let { instance } = $scope.target;\n      instance = $scope.datasource.getServiceFn('cmqTopic', 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance).TopicName;\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n\n    $scope.onExtraFieldChange = (field) => {\n      $scope.onRefresh();\n    };\n\n    $scope.getExtraDropdown = async (target, field) => {\n      if (field === 'subscriptionId') {\n        const TopicName = $scope.getTopicName();\n        let data = $scope.cacheMap[TopicName];\n\n        if (!data) {\n          const region = $scope.datasource.getServiceFn('cmqTopic', 'getVariable')(target.region);\n          const fetcher = $scope.datasource.getServiceFn('cmqTopic', 'fetchAllSubscription');\n          const datas = await fetcher(region, { TopicName });\n          data = datas.map((item) => {\n            item._InstanceAliasValue = item.SubscriptionId;\n            return { text: item.SubscriptionId, value: JSON.stringify(item) };\n          });\n        }\n\n        // 缓存\n        $scope.cacheMap[TopicName] = data;\n        return data;\n      }\n      return [];\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/406/42637\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in InstanceQueryDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- 主题的ui -->\n  <div ng-if=\"target.instance\">\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"true\" get-options=\"getExtraDropdown(target, extra.field)\"\n            on-change=\"onExtraFieldChange(extra.field)\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  </div>\n`;\n\nexport function scfQuery() {\n  return {\n    template: template,\n    controller: CmqTopicQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive('cmqTopicQuery', scfQuery);\n","import _ from 'lodash';\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\n// 与名称挂钩的变量\nconst InstanceAliasList = ['BucketName'];\nexport { InstanceAliasList, GetInstanceQueryParams };\n\n// 界面状态模型，default\nexport default {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'BucketName',\n  queries: {},\n};\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { CVMFilterFieldsDescriptor } from './query_def';\n\nexport class CVMQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.CVMFilterFieldsDescriptor = CVMFilterFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        case 'zone':\n          return $scope.getZones();\n        default:\n          return [];\n      }\n    };\n\n    $scope.getZones = () => {\n      if (!$scope.region) {\n        return [];\n      }\n      return $scope.datasource.getZones('cvm', $scope.region);\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/213/15728\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        单次请求返回的数量，默认为20，最小值为1，最大值为100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      InstanceIds\n      <info-popover mode=\"right-normal\">\n        实例 ID，每次请求的实例的上限为100，参数不支持同时指定 InstanceIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n      switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n  <multi-condition type=\"'input'\" max-cond=\"100\" value=\"target.queries.InstanceIds\" on-change=\"onChange()\">\n  </multi-condition>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      Filters\n      <info-popover mode=\"right-normal\">\n        过滤条件，每次请求的 Filters 的上限为10，Filter.Values 的上限为5。参数不支持同时指定 InstanceIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n      on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n  <div class=\"gf-form-inline\" ng-repeat=\"field in CVMFilterFieldsDescriptor\">\n    <label class=\"gf-form-label width-14\">\n      {{ field.key }}\n      <info-popover mode=\"right-normal\">\n        {{ field.cnDescriptor }}\n        <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n      </info-popover>\n    </label>\n    <multi-condition\n      ng-if=\"field.type === 'dropdownmulti'\"\n      type=\"'dropdown'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      get-options=\"getDropdown(field.key)\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputNumbermulti'\"\n      type=\"'inputNumber'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      maxNum=\"field.max\"\n      minNum=\"field.min\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputmulti'\"\n      type=\"'input'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <custom-select-dropdown\n      ng-if=\"field.type === 'select'\"\n      value=\"target.queries.Filters[field.key]\"\n      options=\"field.list\"\n      multiple=\"true\"\n      on-change=\"onChange()\"\n    ></custom-select-dropdown>\n  </div>\n</div>\n\n</div>\n`;\n\nexport function cvmQuery() {\n  return {\n    template: template,\n    controller: CVMQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('cvmQuery', cvmQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { DCDBFilterFieldsDescriptor, queryEditorName, namespace, templateQueryIdMap } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nconst ExtraFields = [\n  {\n    label: 'nodeid',\n    field: 'NodeId',\n    action: 'DescribeDCDBInstanceNodeInfo',\n  },\n  {\n    label: 'shardid',\n    field: 'ShardId',\n    action: 'DescribeDCDBShards',\n  },\n];\nconst dropdownTextConfig = {\n  DescribeDCDBInstanceNodeInfo: 'NodeId',\n  DescribeDCDBShards: 'ShardInstanceId',\n};\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.DCDBFilterFieldsDescriptor = DCDBFilterFieldsDescriptor;\n      $scope.ExtraFields = ExtraFields;\n      $scope.namespace = namespace;\n    };\n\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      const service = GetServiceFromNamespace($scope.namespace);\n      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance)[templateQueryIdMap.instance];\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}) || item.label in ($scope.dims ?? {}));\n    };\n    $scope.getExtraDropdown = async (target, action) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const instanceId = $scope.getInstanceId();\n      const payload: any = {\n        InstanceId: instanceId,\n        Limit: 100,\n      };\n      const rs = await $scope.datasource.getServiceFn(service, 'getConsumerList')({ region, action, payload });\n\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[templateQueryIdMap[dropdownTextConfig[action]]];\n        return {\n          text: o[templateQueryIdMap[dropdownTextConfig[action]]],\n          value: JSON.stringify(o),\n        };\n      });\n      return result;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Functions are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/50388\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\" ng-repeat=\"field in DCDBFilterFieldsDescriptor\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <input\n          ng-if=\"field.type === 'inputNumber'\"\n          style=\"margin-right:2px\"\n          type=\"number\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n          ng-min=\"field.min\"\n          ng-max=\"field.max\"\n        />\n        <input\n          ng-if=\"field.type === 'input'\"\n          style=\"margin-right:2px\"\n          type=\"text\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n        />    \n        <multi-condition\n          ng-if=\"field.type === 'inputNumberMulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputMulti'\"\n          type=\"'input'\"\n          value=\"target.queries[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries[field.key]\"\n          options=\"field.list\"\n          multiple=\"field.multiple || false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n\n<!-- 起始区域 目的区域等 -->\n  <div>\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(target, extra.action)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive(queryEditorName, sQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { ECMBLOCKSTORAGEFilterFieldsDescriptor, queryEditorName, namespace, templateQueryIdMap } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nconst ExtraFields = [\n  // {\n  //   label: 'nodeid',\n  //   field: 'NodeId',\n  //   action: 'DescribeInstanceNodeInfo',\n  // },\n  {\n    label: 'diskId',\n    field: 'diskId',\n  },\n];\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.ECMBLOCKSTORAGEFilterFieldsDescriptor = ECMBLOCKSTORAGEFilterFieldsDescriptor;\n      $scope.ExtraFields = ExtraFields;\n      $scope.namespace = namespace;\n    };\n\n    // $scope.getInstanceId = () => {\n    //   let { instance } = $scope.target;\n    //   const service = GetServiceFromNamespace($scope.namespace);\n    //   instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n    //   if (!instance) {\n    //     return '';\n    //   }\n    //   try {\n    //     instance = JSON.parse(instance)[templateQueryIdMap.instance];\n    //   } catch (error) {\n    //     console.log();\n    //   }\n    //   return instance;\n    // };\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}) || item.label in ($scope.dims ?? {}));\n    };\n    $scope.getExtraDropdown = (target, action) => {\n      let { instance } = target;\n      const service = GetServiceFromNamespace($scope.namespace);\n      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n      try {\n        instance = JSON.parse(instance);\n        const { DataDisks: dataDisks } = instance;\n        return dataDisks.map((o) => {\n          o._InstanceAliasValue = o[templateQueryIdMap.diskId];\n          return {\n            text: o[templateQueryIdMap.diskId],\n            value: JSON.stringify(o),\n          };\n        });\n      } catch (error) {\n        // console.log('instance error', instance);\n        const payload: any = {\n          InstanceId: instance,\n        };\n        const rs = $scope.datasource.getServiceFn(service, 'getDiskList')({ payload });\n        const result = rs.map((o) => {\n          return {\n            text: o[templateQueryIdMap.diskId],\n            value: JSON.stringify(o),\n          };\n        });\n        return result;\n      }\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Functions are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/50388\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\" ng-repeat=\"field in ECMBLOCKSTORAGEFilterFieldsDescriptor\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <input\n          ng-if=\"field.type === 'inputNumber'\"\n          style=\"margin-right:2px\"\n          type=\"number\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n          ng-min=\"field.min\"\n          ng-max=\"field.max\"\n        />\n        <input\n          ng-if=\"field.type === 'input'\"\n          style=\"margin-right:2px\"\n          type=\"text\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n        />    \n        <multi-condition\n          ng-if=\"field.type === 'inputNumberMulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputMulti'\"\n          type=\"'input'\"\n          value=\"target.queries[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries[field.key]\"\n          options=\"field.list\"\n          multiple=\"field.multiple || false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n\n<!-- 起始区域 目的区域等 -->\n  <div>\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(target)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive(queryEditorName, sQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { GSEFilterFieldsDescriptor, templateQueryIdMap, queryEditorName, namespace } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nconst ExtraFields = [\n  {\n    label: 'fleetId',\n    field: 'FleetId',\n  },\n  {\n    label: 'queueName',\n    field: 'Name',\n  },\n];\nconst actionMaps = {\n  FleetId: 'getFleetList',\n  Name: 'getQueueNameList',\n};\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.GSEFilterFieldsDescriptor = GSEFilterFieldsDescriptor;\n      $scope.namespace = namespace;\n    };\n\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}));\n    };\n\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      const service = GetServiceFromNamespace($scope.namespace);\n      // console.log({namespace, service});\n      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance)[templateQueryIdMap.instance];\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n    $scope.getExtraDropdown = async (target, field) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      const instanceId = $scope.getInstanceId();\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      // const rs = await $scope.datasource.getServiceFn(service, 'getEnvironmentNameList')({ region, instanceId });\n      let rs = await $scope.datasource.getServiceFn(service, actionMaps[field])({ region, instanceId });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[templateQueryIdMap[field]];\n        return {\n          text: o[templateQueryIdMap[field]],\n          value: JSON.stringify(o),\n        };\n      });\n      return result;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/45073\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in GSEFilterFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputNumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />    \n      <multi-condition\n        ng-if=\"field.type === 'inputNumberMulti'\"\n        type=\"'inputNumber'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        maxNum=\"field.max\"\n        minNum=\"field.min\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputMulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- 起始区域 目的区域等 -->\n<div>\n  <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n      <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n        <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getExtraDropdown(target, extra.field)\"\n          on-change=\"onRefresh()\" css-class=\"min-width-10\">\n        </gf-form-dropdown>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive(queryEditorName, sQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { LBFilterDescriptor } from './query_def';\n\nexport class LBQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      // $scope.LBQueryDescriptor = LBQueryDescriptor;\n      $scope.LBFilterDescriptor = LBFilterDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        case 'zone':\n          return $scope.getZones();\n        default:\n          return [];\n      }\n    };\n\n    $scope.getZones = () => {\n      if (!$scope.region) {\n        return [];\n      }\n      return $scope.datasource.getZones('cvm', $scope.region);\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/215/16702\">Click here to get API doc.</a>\n</label>\n\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        单次请求返回的数量，默认为20，最小值为1，最大值为100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      AddressIds\n      <info-popover mode=\"right-normal\">\n        实例 ID，每次请求的实例的上限为100，参数不支持同时指定 AddressIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n      switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n  <multi-condition type=\"'input'\" max-cond=\"100\" value=\"target.queries.AddressIds\" on-change=\"onChange()\">\n  </multi-condition>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      Filters\n      <info-popover mode=\"right-normal\">\n        过滤条件，每次请求的 Filters 的上限为10，Filter.Values 的上限为5。参数不支持同时指定 AddressIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n      on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n  </div>\n</div>\n\n<!--Filters部分-->\n<div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n  <div class=\"gf-form-inline\" ng-repeat=\"field in LBFilterDescriptor\">\n    <label class=\"gf-form-label width-14\">\n      {{ field.key }}\n      <info-popover mode=\"right-normal\">\n        {{ field.cnDescriptor }}\n        <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n      </info-popover>\n    </label>\n    <multi-condition\n      ng-if=\"field.type === 'dropdownmulti'\"\n      type=\"'dropdown'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      get-options=\"getDropdown(field.key)\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputNumbermulti'\"\n      type=\"'inputNumber'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      maxNum=\"field.max\"\n      minNum=\"field.min\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputmulti'\"\n      type=\"'input'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <custom-select-dropdown\n      ng-if=\"field.type === 'select'\"\n      value=\"target.queries.Filters[field.key]\"\n      options=\"field.list\"\n      multiple=\"true\"\n      on-change=\"onChange()\"\n    ></custom-select-dropdown>\n  </div>\n</div>\n\n</div>\n`;\n\nexport function lbQuery() {\n  return {\n    template: template,\n    controller: LBQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('lbQuery', lbQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { LighthouseFilterFieldsDescriptor } from './query_def';\n\nexport class LighthouseQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.LighthouseFilterFieldsDescriptor = LighthouseFilterFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        case 'zone':\n          return $scope.getZones();\n        default:\n          return [];\n      }\n    };\n\n    $scope.getZones = () => {\n      if (!$scope.region) {\n        return [];\n      }\n      return $scope.datasource.getZones('lighthouse', $scope.region);\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/1207/47573\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        Offset\n        <info-popover mode=\"right-normal\">\n          偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n        </info-popover>\n      </label>\n      <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n    </div>\n  </div>\n  <div class=\"gf-form-inline\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        Limit\n        <info-popover mode=\"right-normal\">\n          单次请求返回的数量，默认为20，最小值为1，最大值为100\n        </info-popover>\n      </label>\n      <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n    </div>\n  </div>\n  <div class=\"gf-form-inline\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-9\">\n        InstanceIds\n        <info-popover mode=\"right-normal\">\n          实例 ID，每次请求的实例的上限为100，参数不支持同时指定 InstanceIds 和 Filters\n        </info-popover>\n      </label>\n      <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n        switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n    </div>\n  </div>\n  <div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n    <multi-condition type=\"'input'\" max-cond=\"100\" value=\"target.queries.InstanceIds\" on-change=\"onChange()\">\n    </multi-condition>\n  </div>\n  <div class=\"gf-form-inline\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-9\">\n        Filters\n        <info-popover mode=\"right-normal\">\n          过滤条件，每次请求的 Filters 的上限为10，Filter.Values 的上限为5。参数不支持同时指定 InstanceIds 和 Filters\n        </info-popover>\n      </label>\n      <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n        on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n    </div>\n  </div>\n  <div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n    <div class=\"gf-form-inline\" ng-repeat=\"field in LighthouseFilterFieldsDescriptor\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        get-options=\"getDropdown(field.key)\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputNumbermulti'\"\n        type=\"'inputNumber'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        maxNum=\"field.max\"\n        minNum=\"field.min\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries.Filters[field.key]\"\n        options=\"field.list\"\n        multiple=\"true\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n`;\n\nexport function lighthouseQuery() {\n  return {\n    template: template,\n    controller: LighthouseQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('lighthouseQuery', lighthouseQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { map, get, find, times } from 'lodash';\nimport { MONGODBFieldsDescriptor, templateQueryIdMap } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nexport class MongoDBQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.MONGODBFieldsDescriptor = MONGODBFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        default:\n          return [];\n      }\n    };\n\n    $scope.onInstanceChange = (n, o) => {\n      if (n === o) {\n        return;\n      }\n      $scope.target.replica = '';\n      $scope.target.node = '';\n    };\n\n    $scope.getVariableId = (data, type) => {\n      let variableData = data;\n      const service = GetServiceFromNamespace('QCE/CMONGO');\n\n      variableData = $scope.datasource.getServiceFn(service, 'getVariable')(variableData);\n      if (!variableData) {\n        return '';\n      }\n      try {\n        variableData = JSON.parse(variableData)[templateQueryIdMap[type]];\n      } catch (error) {\n        // console.log();\n      }\n      return variableData;\n    };\n\n    $scope.getExtraDropdown = async (target, type) => {\n      const { instance, replica } = $scope.target;\n      const service = GetServiceFromNamespace('QCE/CMONGO');\n      const instanceId = $scope.getVariableId(instance, 'instance');\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const [res] = await $scope.datasource.getServiceFn(service, 'getInstances')(region, {\n        InstanceIds: [instanceId],\n      });\n      if (type === 'replica') {\n        return map(get(res, 'ReplicaSets', []), (item) => {\n          item._InstanceAliasValue = item.ReplicaSetId;\n          return { text: item.ReplicaSetId, value: JSON.stringify(item) };\n        });\n      }\n      if (type === 'node' && replica !== '') {\n        const replicaId = $scope.getVariableId(replica, 'replica');\n        const targetReplica = find(get(res, 'ReplicaSets', []), { ReplicaSetId: replicaId });\n        const options = times(targetReplica.SecondaryNum, (index) => {\n          const nodeId = `${targetReplica.ReplicaSetId}-node-slave${index}`;\n          return {\n            text: nodeId,\n            value: JSON.stringify({ NodeId: nodeId, _InstanceAliasValue: `${targetReplica.ReplicaSetId} - ${nodeId}` }),\n          };\n        });\n        return [\n          {\n            text: `${targetReplica.ReplicaSetId}-node-primary`,\n            value: JSON.stringify({\n              NodeId: `${targetReplica.ReplicaSetId}-node-primary`,\n              _InstanceAliasValue: `${targetReplica.ReplicaSetId} - ${`${targetReplica.ReplicaSetId}-node-primary`}`,\n            }),\n          },\n          ...options,\n        ];\n      }\n      return [];\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/240/35769\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in MONGODBFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <gf-form-dropdown\n        ng-if=\"field.type === 'dropdown'\"\n        model=\"target.queries[field.key]\"\n        allow-custom=\"true\"\n        lookup-text=\"true\"\n        get-options=\"getDropdown(field.key)\"\n        on-change=\"onChange()\"\n        css-class=\"min-width-10\"\n      ></gf-form-dropdown>\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<div class=\"gf-form-inline\" ng-if=\"target.instance\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label query-keyword width-9\">\n      Replica\n    </label>\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n      <gf-form-dropdown model=\"target.replica\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getExtraDropdown(target, 'replica')\"\n        on-change=\"onRefresh()\" css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n  </div>\n</div>\n\n<div class=\"gf-form-inline\" ng-if=\"target.replica\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label query-keyword width-9\">\n      Node\n    </label>\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n      <gf-form-dropdown model=\"target.node\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getExtraDropdown(target, 'node')\"\n        on-change=\"onRefresh()\" css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n  </div>\n</div>\n`;\n\nexport function mongodbQuery() {\n  return {\n    template: template,\n    controller: MongoDBQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      onRefresh: '&',\n      onChange: '&',\n    },\n    link: (scope, element, attrs) => {\n      scope.$watch('target.instance', (newValue, oldValue) => {\n        scope.onInstanceChange?.(newValue, oldValue);\n      });\n    },\n  };\n}\n\ncoreModule.directive('mongodbQuery', mongodbQuery);\n","import { InstanceQueryDescriptor, templateQueryIdMap } from './query_def';\nimport coreModule from 'grafana/app/core/core_module';\n\nconst ExtraFields = [\n  {\n    label: 'NodeIP',\n    field: 'nodeIP',\n  },\n];\n\nexport class MrQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.InstanceQueryDescriptor = InstanceQueryDescriptor;\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        default:\n          return [];\n      }\n    };\n\n    // 各个实例下的订阅，由于不想每次都重复发请求，所以这里做了一层缓存，数据结构为{ [instanceId]: {   } }\n    $scope.cacheMap = {};\n\n    $scope.getExtraFields = () => {\n      return Object.keys($scope.dims ?? {}).some((item: string) => item.startsWith('host4')) ? ExtraFields : [];\n      // return ExtraFields;\n    };\n\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      instance = $scope.datasource.getServiceFn('mrHDFS', 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance).ClusterId;\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n\n    $scope.onExtraFieldChange = (field) => {\n      $scope.onRefresh();\n    };\n\n    $scope.getExtraDropdown = async (target, field) => {\n      if (field === 'nodeIP') {\n        const InstanceId = $scope.getInstanceId();\n        let data = $scope.cacheMap[InstanceId];\n\n        if (!data) {\n          const region = $scope.datasource.getServiceFn('mrHDFS', 'getVariable')(target.region);\n          const fetcher = $scope.datasource.getServiceFn('mrHDFS', 'fetchAllNodes');\n          const dataT = await fetcher(region, { InstanceId, NodeFlag: 'all' });\n          data = dataT.map((item) => {\n            item._InstanceAliasValue = item[templateQueryIdMap.node];\n            return {\n              text: item[templateQueryIdMap.node],\n              value: JSON.stringify(item),\n            };\n          });\n        }\n\n        // 缓存\n        $scope.cacheMap[InstanceId] = data;\n        return data;\n      }\n      return [];\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/589/34266\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in InstanceQueryDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n<!-- 主题的ui -->\n  <div ng-if=\"target.instance\">\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(target, extra.field)\"\n            on-change=\"onExtraFieldChange(extra.field)\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  </div>\n`;\n\nexport function mrQuery() {\n  return {\n    template: template,\n    controller: MrQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive('mrQuery', mrQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { NATGatewayFilterFieldsDescriptor } from './query_def';\n\nexport class NatGatewayQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.NATGatewayFilterFieldsDescriptor = NATGatewayFilterFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        default:\n          return [];\n      }\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/215/36034\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        单次请求返回的数量，默认为20，最小值为1，最大值为100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-10\">\n      NatGatewayIds\n      <info-popover mode=\"right-normal\">\n        NAT网关统一 ID，参数不支持同时指定 NatGatewayIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n      switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n  <multi-condition type=\"'input'\" value=\"target.queries.NatGatewayIds\" on-change=\"onChange()\">\n  </multi-condition>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-10\">\n      Filters\n      <info-popover mode=\"right-normal\">\n        过滤条件，参数不支持同时指定NatGatewayIds和Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n      on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n  <div class=\"gf-form-inline\" ng-repeat=\"field in NATGatewayFilterFieldsDescriptor\">\n    <label class=\"gf-form-label width-14\">\n      {{ field.key }}\n      <info-popover mode=\"right-normal\">\n        {{ field.cnDescriptor }}\n        <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n      </info-popover>\n    </label>\n    <multi-condition\n      ng-if=\"field.type === 'dropdownmulti'\"\n      type=\"'dropdown'\"\n      value=\"target.queries.Filters[field.key]\"\n      get-options=\"getDropdown(field.key)\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputNumbermulti'\"\n      type=\"'inputNumber'\"\n      value=\"target.queries.Filters[field.key]\"\n      maxNum=\"field.max\"\n      minNum=\"field.min\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputmulti'\"\n      type=\"'input'\"\n      value=\"target.queries.Filters[field.key]\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <custom-select-dropdown\n      ng-if=\"field.type === 'select'\"\n      value=\"target.queries.Filters[field.key]\"\n      options=\"field.list\"\n      multiple=\"true\"\n      on-change=\"onChange()\"\n    ></custom-select-dropdown>\n  </div>\n</div>\n\n</div>\n`;\n\nexport function natGatewayQuery() {\n  return {\n    template: template,\n    controller: NatGatewayQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('natGatewayQuery', natGatewayQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { OVCDNFilterFieldsDescriptor } from './query_def';\n\nexport class OVCDNQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.OVCDNFilterFieldsDescriptor = OVCDNFilterFieldsDescriptor;\n    };\n\n    // $scope.onChecked = (srcField, dstField) => {\n    //   if ($scope.target.queries[srcField] === true) {\n    //     $scope.target.queries[dstField] = false;\n    //   }\n    //   $scope.onChange();\n    // };\n\n    // $scope.getDropdown = (field) => {\n    //   switch (field) {\n    //     case 'zone':\n    //       return $scope.getZones();\n    //     default:\n    //       return [];\n    //   }\n    // };\n\n    // $scope.getZones = () => {\n    //   if (!$scope.region) {\n    //     return [];\n    //   }\n    //   return $scope.datasource.getZones('cvm', $scope.region);\n    // };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/213/15728\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        单次请求返回的数量，默认为20，最小值为1，最大值为100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\" ng-repeat=\"field in OVCDNFilterFieldsDescriptor\">\n<label class=\"gf-form-label width-14\">\n  {{ field.key }}\n  <info-popover mode=\"right-normal\">\n    {{ field.cnDescriptor }}\n    <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n  </info-popover>\n</label>\n<multi-condition\n  ng-if=\"field.type === 'inputNumbermulti'\"\n  type=\"'inputNumber'\"\n  max-cond=\"5\"\n  value=\"target.queries.Filters[field.key]\"\n  maxNum=\"field.max\"\n  minNum=\"field.min\"\n  on-change=\"onChange()\"\n></multi-condition>\n<multi-condition\n  ng-if=\"field.type === 'inputmulti'\"\n  type=\"'input'\"\n  max-cond=\"5\"\n  value=\"target.queries.Filters[field.key]\"\n  on-change=\"onChange()\"\n></multi-condition>\n<custom-select-dropdown\n  ng-if=\"field.type === 'select'\"\n  value=\"target.queries.Filters[field.key]\"\n  options=\"field.list\"\n  multiple=\"true\"\n  on-change=\"onChange()\"\n></custom-select-dropdown>\n</div>\n\n</div>\n`;\n\nexport function ovCdnQuery() {\n  return {\n    template: template,\n    controller: OVCDNQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('ovCdnQuery', ovCdnQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { PCXFieldsDescriptor } from './query_def';\n\nexport class PCXQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.PCXFieldsDescriptor = PCXFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        case 'vpcId':\n          return $scope.getVpcIds();\n        default:\n          return [];\n      }\n    };\n\n    $scope.getVpcIds = () => {\n      if (!$scope.region) {\n        return [];\n      }\n      return $scope.datasource.getVpcIds('pcx', $scope.region);\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/215/2101\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in PCXFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <gf-form-dropdown\n        ng-if=\"field.type === 'dropdown'\"\n        model=\"target.queries[field.key]\"\n        allow-custom=\"true\"\n        lookup-text=\"true\"\n        get-options=\"getDropdown(field.key)\"\n        on-change=\"onChange()\"\n        css-class=\"min-width-10\"\n      ></gf-form-dropdown>\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n\n</div>\n`;\n\nexport function pcxQuery() {\n  return {\n    template: template,\n    controller: PCXQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('pcxQuery', pcxQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { RedisFieldsDescriptor } from './query_def';\n\nexport class RedisQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.RedisFieldsDescriptor = RedisFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        default:\n          return [];\n      }\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/240/35769\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in RedisFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <gf-form-dropdown\n        ng-if=\"field.type === 'dropdown'\"\n        model=\"target.queries[field.key]\"\n        allow-custom=\"true\"\n        lookup-text=\"true\"\n        get-options=\"getDropdown(field.key)\"\n        on-change=\"onChange()\"\n        css-class=\"min-width-10\"\n      ></gf-form-dropdown>\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n\n</div>\n`;\n\nexport function redisQuery() {\n  return {\n    template: template,\n    controller: RedisQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('redisQuery', redisQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { map } from 'lodash';\nimport { RedisMemFieldsDescriptor, templateQueryIdMap, NodeType, namespace } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nexport class RedisMemQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.RedisMemFieldsDescriptor = RedisMemFieldsDescriptor;\n    };\n\n    $scope.clearExtrasAlias = () => {\n      $scope.target.rnodeid = '';\n      $scope.target.pnodeid = '';\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        default:\n          return [];\n      }\n    };\n\n    $scope.getVariableId = (data, type) => {\n      let variableData = data;\n      const service = GetServiceFromNamespace(namespace);\n\n      variableData = $scope.datasource.getServiceFn(service, 'getVariable')(variableData);\n      if (!variableData) {\n        return '';\n      }\n      try {\n        variableData = JSON.parse(variableData)[templateQueryIdMap[type]];\n      } catch (error) {}\n      return variableData;\n    };\n\n    $scope.getExtraDropdown = async (target, nodetype) => {\n      const { instance } = $scope.target;\n      const service = GetServiceFromNamespace(namespace);\n      const instanceId = $scope.getVariableId(instance, 'instance');\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const rs = await $scope.datasource.getServiceFn(service, 'getInstanceNodeInfo')({ region, instanceId });\n\n      const ndoeTypeIndex = NodeType.indexOf(nodetype);\n      return ndoeTypeIndex === -1 ? [] : map(rs[ndoeTypeIndex], (item) => ({ text: item.NodeId, value: item.NodeId }));\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/240/35769\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in RedisMemFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <gf-form-dropdown\n        ng-if=\"field.type === 'dropdown'\"\n        model=\"target.queries[field.key]\"\n        allow-custom=\"true\"\n        lookup-text=\"true\"\n        get-options=\"getDropdown(field.key)\"\n        on-change=\"onChange()\"\n        css-class=\"min-width-10\"\n      ></gf-form-dropdown>\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n\n</div>\n\n<div class=\"gf-form-inline\" ng-if=\"target.instance && dims.rnodeid\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label query-keyword width-9\">\n      RedisNode\n    </label>\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n      <gf-form-dropdown model=\"target.rnodeid\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getExtraDropdown(target, 'Redis')\"\n        on-change=\"onRefresh()\" css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n  </div>\n</div>\n<div class=\"gf-form-inline\" ng-if=\"target.instance && dims.pnodeid\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label query-keyword width-9\">\n      ProxyNode\n    </label>\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n      <gf-form-dropdown model=\"target.pnodeid\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getExtraDropdown(target, 'Proxy')\"\n        on-change=\"onRefresh()\" css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n  </div>\n</div>\n`;\n\nexport function redisMemQuery() {\n  return {\n    template: template,\n    controller: RedisMemQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n    link: (scope, element, attrs) => {\n      scope.$watch('target.instance', () => {\n        scope.clearExtrasAlias?.();\n      });\n      scope.$watch('target.metricName', () => {\n        scope.clearExtrasAlias?.();\n      });\n    },\n  };\n}\n\ncoreModule.directive('redisMemQuery', redisMemQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { SCFQueryDescriptor, templateQueryIdMap } from './query_def';\n\nexport class SCFQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.SCFQueryDescriptor = SCFQueryDescriptor;\n    };\n\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      instance = $scope.datasource.getServiceFn('scf', 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance).FunctionName;\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n\n    $scope.getVersions = async (target) => {\n      // console.log(2222);\n\n      // return [{ text: 1, value: 1 }];\n      // console.log(target, 'target');\n      // let { instance, region } = target;\n      const FunctionName = $scope.getInstanceId();\n      const region = $scope.datasource.getServiceFn('scf', 'getVariable')(target.region);\n      if (!FunctionName || !region) return [];\n\n      const fetcher = $scope.datasource.getServiceFn('scf', 'getVersions');\n\n      return fetcher(region, { FunctionName }).then((res) => {\n        // console.log(res, 'res');\n        const result = res.map((o) => {\n          o._InstanceAliasValue = o[templateQueryIdMap.version];\n          return {\n            text: o[templateQueryIdMap.version],\n            value: JSON.stringify(o),\n          };\n        });\n        return result;\n      });\n    };\n    // $scope.onChecked = (srcField, dstField) => {\n    //   if ($scope.target.queries[srcField] === true) {\n    //     $scope.target.queries[dstField] = false;\n    //   }\n    //   $scope.onChange();\n    // };\n\n    // $scope.getDropdown = (field) => {\n    //   switch (field) {\n    //     case 'zone':\n    //       return $scope.getZones();\n    //     default:\n    //       return [];\n    //   }\n    // };\n\n    // $scope.getZones = () => {\n    //   if (!$scope.region) {\n    //     return [];\n    //   }\n    //   return $scope.datasource.getZones('cvm', $scope.region);\n    // };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/583/18582\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in SCFQueryDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- version部分 -->\n<div class=\"gf-form-inline\" ng-if=\"target.instance\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label query-keyword width-9\">Version</label>\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n      <gf-form-dropdown model=\"target.version\" allow-custom=\"false\" get-options=\"getVersions(target)\"\n        on-change=\"onRefresh()\" css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n  </div>\n</div>\n\n  </div>\n`;\n\nexport function scfQuery() {\n  return {\n    template: template,\n    controller: SCFQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n    },\n  };\n}\ncoreModule.directive('scfQuery', scfQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { TDMQFilterFieldsDescriptor, queryEditorName, namespace, templateQueryIdMap } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nconst ExtraFields = [\n  {\n    label: 'environmentId',\n    field: 'environmentId',\n    action: 'DescribeEnvironments',\n  },\n  {\n    label: 'topicName',\n    field: 'topicName',\n    action: 'DescribeTopics',\n  },\n];\n\nconst dropdownTextConfig = {\n  DescribeTopics: 'topicName',\n  DescribeEnvironments: 'environmentId',\n};\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.TDMQFilterFieldsDescriptor = TDMQFilterFieldsDescriptor;\n      $scope.ExtraFields = ExtraFields;\n      $scope.namespace = namespace;\n    };\n\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      const service = GetServiceFromNamespace($scope.namespace);\n      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance)[templateQueryIdMap.instance];\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}) || item.label in ($scope.dims ?? {}));\n    };\n    $scope.getExtraDropdown = async (target, action) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const payload: any = {\n        Limit: 100,\n        ClusterId: $scope.getInstanceId(),\n      };\n      if (action === 'DescribeTopics') {\n        let evId = $scope.target.environmentId;\n        try {\n          evId = JSON.parse(evId);\n          evId = evId[templateQueryIdMap.environmentId];\n        } catch (e) {}\n        payload.EnvironmentId = evId;\n      }\n\n      const rs = await $scope.datasource.getServiceFn(service, 'getConsumerList')({ region, action, payload });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[templateQueryIdMap[dropdownTextConfig[action]]];\n        return {\n          text: o[templateQueryIdMap[dropdownTextConfig[action]]],\n          label: o[templateQueryIdMap[dropdownTextConfig[action]]],\n          value: JSON.stringify(o),\n        };\n      });\n      return result;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Functions are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/50388\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\" ng-repeat=\"field in TDMQFilterFieldsDescriptor\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <input\n          ng-if=\"field.type === 'inputNumber'\"\n          style=\"margin-right:2px\"\n          type=\"number\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n          ng-min=\"field.min\"\n          ng-max=\"field.max\"\n        />\n        <input\n          ng-if=\"field.type === 'input'\"\n          style=\"margin-right:2px\"\n          type=\"text\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n        />    \n        <multi-condition\n          ng-if=\"field.type === 'inputNumberMulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputMulti'\"\n          type=\"'input'\"\n          value=\"target.queries[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries[field.key]\"\n          options=\"field.list\"\n          multiple=\"field.multiple || false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n\n<!-- 起始区域 目的区域等 -->\n  <div>\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(target, extra.action)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive(queryEditorName, sQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { TDMQFilterFieldsDescriptor, namespace, templateQueryIdMap } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nconst ExtraFields = [\n  {\n    label: 'Node',\n    field: 'node',\n    action: 'DescribeRabbitMQNodeList',\n  },\n];\n\nconst dropdownTextConfig = {\n  DescribeRabbitMQNodeList: 'node',\n};\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.TDMQFilterFieldsDescriptor = TDMQFilterFieldsDescriptor;\n      $scope.ExtraFields = ExtraFields;\n      $scope.namespace = namespace;\n    };\n\n    $scope.clearExtrasAlias = () => {\n      $scope.target.node = '';\n    };\n\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      const service = GetServiceFromNamespace($scope.namespace);\n      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance)[templateQueryIdMap.instance];\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}) || item.label in ($scope.dims ?? {}));\n    };\n    $scope.getExtraDropdown = async (target, action) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const payload: any = {\n        Limit: 100,\n        InstanceId: $scope.getInstanceId(),\n      };\n\n      const rs = await $scope.datasource.getServiceFn(service, 'getConsumerList')({ region, action, payload });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[templateQueryIdMap[dropdownTextConfig[action]]];\n        return {\n          text: o[templateQueryIdMap[dropdownTextConfig[action]]],\n          label: o[templateQueryIdMap[dropdownTextConfig[action]]],\n          value: JSON.stringify(o),\n        };\n      });\n      return result;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Functions are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/50388\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\" ng-repeat=\"field in TDMQFilterFieldsDescriptor\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <input\n          ng-if=\"field.type === 'inputNumber'\"\n          style=\"margin-right:2px\"\n          type=\"number\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n          ng-min=\"field.min\"\n          ng-max=\"field.max\"\n        />\n        <input\n          ng-if=\"field.type === 'input'\"\n          style=\"margin-right:2px\"\n          type=\"text\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n        />    \n        <multi-condition\n          ng-if=\"field.type === 'inputNumberMulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputMulti'\"\n          type=\"'input'\"\n          value=\"target.queries[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries[field.key]\"\n          options=\"field.list\"\n          multiple=\"field.multiple || false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n\n<!-- 起始区域 目的区域等 -->\n  <div>\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" get-options=\"getExtraDropdown(target, extra.action)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n    link: (scope, element, attrs) => {\n      scope.$watch('target.instance', () => {\n        scope.clearExtrasAlias?.();\n      });\n      scope.$watch('target.metricName', () => {\n        scope.clearExtrasAlias?.();\n      });\n    },\n  };\n}\ncoreModule.directive('tdmqRabbitmqQuery', sQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { TDMQFilterFieldsDescriptor, namespace, templateQueryIdMap } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nconst ExtraFields = [\n  {\n    label: 'Namespace',\n    field: 'namespace',\n    action: 'DescribeRocketMQNamespaces',\n  },\n  {\n    label: 'Group',\n    field: 'group',\n    action: 'DescribeRocketMQGroups',\n  },\n];\n\nconst dropdownTextConfig = {\n  DescribeRocketMQNamespaces: 'namespace',\n  DescribeRocketMQGroups: 'group',\n};\nexport class TdmqRocketmqQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.TDMQFilterFieldsDescriptor = TDMQFilterFieldsDescriptor;\n      $scope.ExtraFields = ExtraFields;\n      $scope.namespace = namespace;\n    };\n\n    $scope.clearExtrasAlias = () => {\n      $scope.target.namespace = '';\n      $scope.target.group = '';\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      const service = GetServiceFromNamespace($scope.namespace);\n      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance)[templateQueryIdMap.instance];\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}) || item.label in ($scope.dims ?? {}));\n    };\n    $scope.getExtraDropdown = async (target, action) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const payload: any = {\n        Limit: 100,\n        ClusterId: $scope.getInstanceId(),\n      };\n      if (action === 'DescribeRocketMQGroups') {\n        let namespace = $scope.target.namespace;\n        try {\n          namespace = JSON.parse(namespace)[templateQueryIdMap.namespace];\n        } catch (e) {}\n        payload.NamespaceId = $scope.datasource.getServiceFn(service, 'getVariable')(namespace);\n      }\n\n      const rs = await $scope.datasource.getServiceFn(service, 'getConsumerList')({ region, action, payload });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[templateQueryIdMap[dropdownTextConfig[action]]];\n        return {\n          text: o[templateQueryIdMap[dropdownTextConfig[action]]],\n          value: JSON.stringify(o),\n        };\n      });\n      return result;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Functions are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/50388\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          Offset\n          <info-popover mode=\"right-normal\">\n            偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n          </info-popover>\n        </label>\n        <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n      </div>\n    </div>\n    <div class=\"gf-form-inline\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          Limit\n          <info-popover mode=\"right-normal\">\n            单次请求返回的数量，默认为20，最小值为1，最大值为100\n          </info-popover>\n        </label>\n        <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n      </div>\n    </div>\n    <div class=\"gf-form-inline\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-9\">\n          ClusterIdList\n          <info-popover mode=\"right-normal\">\n            实例 ID，每次请求的实例的上限为100，参数不支持同时指定 ClusterIdList 和 Filters\n          </info-popover>\n        </label>\n        <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n          switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n      </div>\n    </div>\n    <div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n      <multi-condition type=\"'input'\" max-cond=\"100\" value=\"target.queries.ClusterIdList\" on-change=\"onChange()\">\n      </multi-condition>\n    </div>\n    <div class=\"gf-form-inline\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-9\">\n          Filters\n          <info-popover mode=\"right-normal\">\n            过滤条件，每次请求的 Filters 的上限为10，Filter.Values 的上限为5。参数不支持同时指定 ClusterIdList 和 Filters\n          </info-popover>\n        </label>\n        <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n          on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n      </div>\n    </div>\n    <div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n      <div class=\"gf-form-inline\" ng-repeat=\"field in TDMQFilterFieldsDescriptor\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <multi-condition\n          ng-if=\"field.type === 'dropdownmulti'\"\n          type=\"'dropdown'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          get-options=\"getDropdown(field.key)\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputNumbermulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputmulti'\"\n          type=\"'input'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries.Filters[field.key]\"\n          options=\"field.list\"\n          multiple=\"false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n\n<!-- 起始区域 目的区域等 -->\n  <div>\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"true\" get-options=\"getExtraDropdown(target, extra.action)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport function tdmqRocketmqQuery() {\n  return {\n    template: template,\n    controller: TdmqRocketmqQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n    link: (scope, element, attrs) => {\n      scope.$watch('target.instance', () => {\n        scope.clearExtrasAlias?.();\n      });\n      scope.$watch('target.metricName', () => {\n        scope.clearExtrasAlias?.();\n      });\n    },\n  };\n}\ncoreModule.directive('tdmqRocketmqQuery', tdmqRocketmqQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { isEmpty } from 'lodash';\nimport { TKEFilterFieldsDescriptor } from './query_def';\n\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.TKEFilterFieldsDescriptor = TKEFilterFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.addCondition = () => {\n      $scope.target.conditions.push({ Key: '', Operator: '=', Value: '' });\n    };\n\n    $scope.deleteCondition = (index) => {\n      const targetCondition = $scope.target.conditions[index];\n      if (isEmpty(targetCondition.Key) || isEmpty(targetCondition.Operator) || isEmpty(targetCondition.Value)) {\n        $scope.target.conditions.splice(index, 1);\n      } else {\n        $scope.target.conditions.splice(index, 1);\n        $scope.onRefresh();\n      }\n    };\n\n    $scope.getOperator = () => {\n      return Promise.resolve([\n        { text: '=', value: '=' },\n        { text: 'in', value: 'in' },\n      ]);\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Functions are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/50388\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          Offset\n          <info-popover mode=\"right-normal\">\n            偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n          </info-popover>\n        </label>\n        <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n      </div>\n    </div>\n    <div class=\"gf-form-inline\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          Limit\n          <info-popover mode=\"right-normal\">\n            单次请求返回的数量，默认为20，最小值为1，最大值为100\n          </info-popover>\n        </label>\n        <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n      </div>\n    </div>\n    <div class=\"gf-form-inline\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-9\">\n          ClusterIdList\n          <info-popover mode=\"right-normal\">\n            实例 ID，每次请求的实例的上限为100，参数不支持同时指定 ClusterIdList 和 Filters\n          </info-popover>\n        </label>\n        <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n          switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n      </div>\n    </div>\n    <div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n      <multi-condition type=\"'input'\" max-cond=\"100\" value=\"target.queries.ClusterIdList\" on-change=\"onChange()\">\n      </multi-condition>\n    </div>\n    <div class=\"gf-form-inline\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-9\">\n          Filters\n          <info-popover mode=\"right-normal\">\n            过滤条件，每次请求的 Filters 的上限为10，Filter.Values 的上限为5。参数不支持同时指定 ClusterIdList 和 Filters\n          </info-popover>\n        </label>\n        <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n          on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n      </div>\n    </div>\n    <div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n      <div class=\"gf-form-inline\" ng-repeat=\"field in TKEFilterFieldsDescriptor\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <input\n          ng-if=\"field.type === 'input'\"\n          style=\"margin-right:2px\"\n          type=\"text\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n        />   \n        <multi-condition\n          ng-if=\"field.type === 'dropdownmulti'\"\n          type=\"'dropdown'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          get-options=\"getDropdown(field.key)\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputNumbermulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputmulti'\"\n          type=\"'input'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries.Filters[field.key]\"\n          options=\"field.list\"\n          multiple=\"false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"gf-form-inline\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label query-keyword width-9\">Conditions</label>\n      <div>\n        <div class=\"gf-form\" ng-repeat=\"condition in target.conditions\">\n          <input class=\"gf-form-input width-10 tc-condition-input\" type=\"text\" ng-model=\"target.conditions[$index].Key\" ng-blur=\"onRefresh()\"></input>\n          <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n            <gf-form-dropdown model=\"target.conditions[$index].Operator\" get-options=\"getOperator()\" on-change=\"onRefresh()\" allow-custom=\"true\" css-class=\"min-width-5\">\n            </gf-form-dropdown>\n          </div>\n          <input class=\"gf-form-input width-10 tc-condition-input\" type=\"text\" ng-model=\"target.conditions[$index].Value\" ng-blur=\"onRefresh()\"></input>\n          <label class=\"gf-form-label pointer\" ng-click=\"deleteCondition($index)\">\n            <i class=\"fa fa-minus\"></i>\n          </label>\n          <label class=\"gf-form-label pointer\" ng-click=\"addCondition()\" ng-if=\"$last\">\n            <i class=\"fa fa-plus\"></i>\n          </label>\n        </div>\n        <div class=\"gf-form\" ng-if=\"target.conditions.length === 0\">\n          <label class=\"gf-form-label pointer\" ng-click=\"addCondition()\">\n            <i class=\"fa fa-plus\"></i>\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"gf-form-inline\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label query-keyword width-9\">GroupBy</label>\n      <input class=\"gf-form-input width-15\" type=\"text\" ng-model=\"target.groupBys\" ng-blur=\"onRefresh()\"></input>\n    </div>\n  </div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive('tkeQuery', sQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { TSFFieldsDescriptor } from './query_def';\n\nexport class TSFQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.TSFFieldsDescriptor = TSFFieldsDescriptor;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/649/36090\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in TSFFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n\n</div>\n`;\n\nexport function tsfQuery() {\n  return {\n    template: template,\n    controller: TSFQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('tsfQuery', tsfQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { VBCFilterFieldsDescriptor, namespace } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nconst ExtraFields: any = [\n  // {\n  //   label: 'SRegion',\n  //   field: 'SRegion',\n  // },\n  // {\n  //   label: 'DRegion',\n  //   field: 'DRegion',\n  // },\n];\n\nexport class VBCQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.VBCFilterFieldsDescriptor = VBCFilterFieldsDescriptor;\n      $scope.namespace = namespace;\n    };\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}));\n    };\n\n    $scope.getExtraDropdown = (field) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      // return $scope.datasource.getServiceFn(service, 'getFilterDropdown')({ field })\n      return $scope.datasource.getFilterDropdown(service, { field });\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/45073\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in VBCFilterFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputNumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />    \n      <multi-condition\n        ng-if=\"field.type === 'inputNumberMulti'\"\n        type=\"'inputNumber'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        maxNum=\"field.max\"\n        minNum=\"field.min\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputMulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- 起始区域 目的区域等 -->\n  <div>\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(extra.field)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport function scfQuery() {\n  return {\n    template: template,\n    controller: VBCQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive('vbcQuery', scfQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","var map = {\n\t\".\": 20,\n\t\"./\": 20,\n\t\"./MonitorDatasource\": 188,\n\t\"./MonitorDatasource.ts\": 188,\n\t\"./_base/datasource\": 3,\n\t\"./_base/datasource.ts\": 3,\n\t\"./_base/query\": 7,\n\t\"./_base/query.ts\": 7,\n\t\"./_base/query_filter\": 195,\n\t\"./_base/query_filter.ts\": 195,\n\t\"./_base/types\": 196,\n\t\"./_base/types.ts\": 196,\n\t\"./apigateway/datasource\": 75,\n\t\"./apigateway/datasource.ts\": 75,\n\t\"./apigateway/query\": 131,\n\t\"./apigateway/query.ts\": 131,\n\t\"./apigateway/query_def\": 23,\n\t\"./apigateway/query_def.ts\": 23,\n\t\"./bmIntraLb/datasource\": 76,\n\t\"./bmIntraLb/datasource.ts\": 76,\n\t\"./bmIntraLb/query\": 132,\n\t\"./bmIntraLb/query.ts\": 132,\n\t\"./bmIntraLb/query_def\": 31,\n\t\"./bmIntraLb/query_def.ts\": 31,\n\t\"./bm_lb/datasource\": 77,\n\t\"./bm_lb/datasource.ts\": 77,\n\t\"./bm_lb/query\": 133,\n\t\"./bm_lb/query.ts\": 133,\n\t\"./bm_lb/query_def\": 32,\n\t\"./bm_lb/query_def.ts\": 32,\n\t\"./bm_pcx/datasource\": 78,\n\t\"./bm_pcx/datasource.ts\": 78,\n\t\"./bm_pcx/query\": 134,\n\t\"./bm_pcx/query.ts\": 134,\n\t\"./bm_pcx/query_def\": 33,\n\t\"./bm_pcx/query_def.ts\": 33,\n\t\"./bwp/datasource\": 79,\n\t\"./bwp/datasource.ts\": 79,\n\t\"./bwp/query\": 135,\n\t\"./bwp/query.ts\": 135,\n\t\"./bwp/query_def\": 63,\n\t\"./bwp/query_def.ts\": 63,\n\t\"./cbs/datasource\": 80,\n\t\"./cbs/datasource.ts\": 80,\n\t\"./cbs/query\": 136,\n\t\"./cbs/query.ts\": 136,\n\t\"./cbs/query_def\": 34,\n\t\"./cbs/query_def.ts\": 34,\n\t\"./cdb/datasource\": 81,\n\t\"./cdb/datasource.ts\": 81,\n\t\"./cdb/query\": 137,\n\t\"./cdb/query.ts\": 137,\n\t\"./cdb/query_def\": 44,\n\t\"./cdb/query_def.ts\": 44,\n\t\"./cdn/datasource\": 82,\n\t\"./cdn/datasource.ts\": 82,\n\t\"./cdn/query\": 138,\n\t\"./cdn/query.ts\": 138,\n\t\"./cdn/query_def\": 64,\n\t\"./cdn/query_def.ts\": 64,\n\t\"./cdn_province/datasource\": 83,\n\t\"./cdn_province/datasource.ts\": 83,\n\t\"./cdn_province/query\": 139,\n\t\"./cdn_province/query.ts\": 139,\n\t\"./cdn_province/query_def\": 35,\n\t\"./cdn_province/query_def.ts\": 35,\n\t\"./ceip_summary/datasource\": 84,\n\t\"./ceip_summary/datasource.ts\": 84,\n\t\"./ceip_summary/query\": 140,\n\t\"./ceip_summary/query.ts\": 140,\n\t\"./ceip_summary/query_def\": 36,\n\t\"./ceip_summary/query_def.ts\": 36,\n\t\"./ces/datasource\": 85,\n\t\"./ces/datasource.ts\": 85,\n\t\"./ces/query\": 141,\n\t\"./ces/query.ts\": 141,\n\t\"./ces/query_def\": 45,\n\t\"./ces/query_def.ts\": 45,\n\t\"./cfs/datasource\": 86,\n\t\"./cfs/datasource.ts\": 86,\n\t\"./cfs/query\": 142,\n\t\"./cfs/query.ts\": 142,\n\t\"./cfs/query_def\": 57,\n\t\"./cfs/query_def.ts\": 57,\n\t\"./ckafka/datasource\": 87,\n\t\"./ckafka/datasource.ts\": 87,\n\t\"./ckafka/query\": 143,\n\t\"./ckafka/query.ts\": 143,\n\t\"./ckafka/query_def\": 11,\n\t\"./ckafka/query_def.ts\": 11,\n\t\"./clb/datasource\": 88,\n\t\"./clb/datasource.ts\": 88,\n\t\"./clb/query\": 144,\n\t\"./clb/query.ts\": 144,\n\t\"./clb/query_def\": 12,\n\t\"./clb/query_def.ts\": 12,\n\t\"./cls/datasource\": 89,\n\t\"./cls/datasource.ts\": 89,\n\t\"./cls/query\": 145,\n\t\"./cls/query.ts\": 145,\n\t\"./cls/query_def\": 29,\n\t\"./cls/query_def.ts\": 29,\n\t\"./cmq/datasource\": 90,\n\t\"./cmq/datasource.ts\": 90,\n\t\"./cmq/query\": 146,\n\t\"./cmq/query.ts\": 146,\n\t\"./cmq/query_def\": 58,\n\t\"./cmq/query_def.ts\": 58,\n\t\"./cmq_topic/datasource\": 91,\n\t\"./cmq_topic/datasource.ts\": 91,\n\t\"./cmq_topic/query\": 147,\n\t\"./cmq_topic/query.ts\": 147,\n\t\"./cmq_topic/query_def\": 37,\n\t\"./cmq_topic/query_def.ts\": 37,\n\t\"./cos/datasource\": 92,\n\t\"./cos/datasource.ts\": 92,\n\t\"./cos/query_def\": 148,\n\t\"./cos/query_def.ts\": 148,\n\t\"./cpm/datasource\": 93,\n\t\"./cpm/datasource.ts\": 93,\n\t\"./cpm/query\": 149,\n\t\"./cpm/query.ts\": 149,\n\t\"./cpm/query_def\": 38,\n\t\"./cpm/query_def.ts\": 38,\n\t\"./cvm/datasource\": 94,\n\t\"./cvm/datasource.ts\": 94,\n\t\"./cvm/query\": 150,\n\t\"./cvm/query.ts\": 150,\n\t\"./cvm/query_def\": 59,\n\t\"./cvm/query_def.ts\": 59,\n\t\"./cynosdb_mysql/datasource\": 95,\n\t\"./cynosdb_mysql/datasource.ts\": 95,\n\t\"./cynosdb_mysql/query\": 151,\n\t\"./cynosdb_mysql/query.ts\": 151,\n\t\"./cynosdb_mysql/query_def\": 27,\n\t\"./cynosdb_mysql/query_def.ts\": 27,\n\t\"./dc/datasource\": 96,\n\t\"./dc/datasource.ts\": 96,\n\t\"./dc/query\": 152,\n\t\"./dc/query.ts\": 152,\n\t\"./dc/query_def\": 46,\n\t\"./dc/query_def.ts\": 46,\n\t\"./dcdb/datasource\": 97,\n\t\"./dcdb/datasource.ts\": 97,\n\t\"./dcdb/query\": 153,\n\t\"./dcdb/query.ts\": 153,\n\t\"./dcdb/query_def\": 16,\n\t\"./dcdb/query_def.ts\": 16,\n\t\"./dcg/datasource\": 98,\n\t\"./dcg/datasource.ts\": 98,\n\t\"./dcg/query\": 154,\n\t\"./dcg/query.ts\": 154,\n\t\"./dcg/query_def\": 47,\n\t\"./dcg/query_def.ts\": 47,\n\t\"./dcx/datasource\": 99,\n\t\"./dcx/datasource.ts\": 99,\n\t\"./dcx/query\": 155,\n\t\"./dcx/query.ts\": 155,\n\t\"./dcx/query_def\": 48,\n\t\"./dcx/query_def.ts\": 48,\n\t\"./ecdn/datasource\": 100,\n\t\"./ecdn/datasource.ts\": 100,\n\t\"./ecdn/query\": 156,\n\t\"./ecdn/query.ts\": 156,\n\t\"./ecdn/query_def\": 39,\n\t\"./ecdn/query_def.ts\": 39,\n\t\"./ecm/datasource\": 101,\n\t\"./ecm/datasource.ts\": 101,\n\t\"./ecm/query\": 157,\n\t\"./ecm/query.ts\": 157,\n\t\"./ecm/query_def\": 40,\n\t\"./ecm/query_def.ts\": 40,\n\t\"./ecm_block_storage/datasource\": 102,\n\t\"./ecm_block_storage/datasource.ts\": 102,\n\t\"./ecm_block_storage/query\": 158,\n\t\"./ecm_block_storage/query.ts\": 158,\n\t\"./ecm_block_storage/query_def\": 21,\n\t\"./ecm_block_storage/query_def.ts\": 21,\n\t\"./ecm_lb/datasource\": 103,\n\t\"./ecm_lb/datasource.ts\": 103,\n\t\"./ecm_lb/query\": 159,\n\t\"./ecm_lb/query.ts\": 159,\n\t\"./ecm_lb/query_def\": 49,\n\t\"./ecm_lb/query_def.ts\": 49,\n\t\"./gse/datasource\": 104,\n\t\"./gse/datasource.ts\": 104,\n\t\"./gse/query\": 160,\n\t\"./gse/query.ts\": 160,\n\t\"./gse/query_def\": 15,\n\t\"./gse/query_def.ts\": 15,\n\t\"./index\": 20,\n\t\"./index.ts\": 20,\n\t\"./lb/datasource\": 105,\n\t\"./lb/datasource.ts\": 105,\n\t\"./lb/query\": 161,\n\t\"./lb/query.ts\": 161,\n\t\"./lb/query_def\": 65,\n\t\"./lb/query_def.ts\": 65,\n\t\"./lighthouse/datasource\": 106,\n\t\"./lighthouse/datasource.ts\": 106,\n\t\"./lighthouse/query\": 162,\n\t\"./lighthouse/query.ts\": 162,\n\t\"./lighthouse/query_def\": 56,\n\t\"./lighthouse/query_def.ts\": 56,\n\t\"./mongodb/datasource\": 107,\n\t\"./mongodb/datasource.ts\": 107,\n\t\"./mongodb/query\": 163,\n\t\"./mongodb/query.ts\": 163,\n\t\"./mongodb/query_def\": 50,\n\t\"./mongodb/query_def.ts\": 50,\n\t\"./mr/datasource\": 108,\n\t\"./mr/datasource.ts\": 108,\n\t\"./mr/query\": 164,\n\t\"./mr/query.ts\": 164,\n\t\"./mr/query_def\": 24,\n\t\"./mr/query_def.ts\": 24,\n\t\"./nat_gateway/datasource\": 109,\n\t\"./nat_gateway/datasource.ts\": 109,\n\t\"./nat_gateway/query\": 165,\n\t\"./nat_gateway/query.ts\": 165,\n\t\"./nat_gateway/query_def\": 66,\n\t\"./nat_gateway/query_def.ts\": 66,\n\t\"./ov_cdn/datasource\": 110,\n\t\"./ov_cdn/datasource.ts\": 110,\n\t\"./ov_cdn/query\": 166,\n\t\"./ov_cdn/query.ts\": 166,\n\t\"./ov_cdn/query_def\": 67,\n\t\"./ov_cdn/query_def.ts\": 67,\n\t\"./pcx/datasource\": 111,\n\t\"./pcx/datasource.ts\": 111,\n\t\"./pcx/query\": 167,\n\t\"./pcx/query.ts\": 167,\n\t\"./pcx/query_def\": 60,\n\t\"./pcx/query_def.ts\": 60,\n\t\"./postgresql/datasource\": 112,\n\t\"./postgresql/datasource.ts\": 112,\n\t\"./postgresql/query\": 168,\n\t\"./postgresql/query.ts\": 168,\n\t\"./postgresql/query_def\": 41,\n\t\"./postgresql/query_def.ts\": 41,\n\t\"./qaap/datasource\": 113,\n\t\"./qaap/datasource.ts\": 113,\n\t\"./qaap/query\": 169,\n\t\"./qaap/query.ts\": 169,\n\t\"./qaap/query_def\": 51,\n\t\"./qaap/query_def.ts\": 51,\n\t\"./redis/datasource\": 114,\n\t\"./redis/datasource.ts\": 114,\n\t\"./redis/query\": 170,\n\t\"./redis/query.ts\": 170,\n\t\"./redis/query_def\": 61,\n\t\"./redis/query_def.ts\": 61,\n\t\"./redis_mem/datasource\": 115,\n\t\"./redis_mem/datasource.ts\": 115,\n\t\"./redis_mem/query\": 171,\n\t\"./redis_mem/query.ts\": 171,\n\t\"./redis_mem/query_def\": 17,\n\t\"./redis_mem/query_def.ts\": 17,\n\t\"./scf/datasource\": 116,\n\t\"./scf/datasource.ts\": 116,\n\t\"./scf/query\": 172,\n\t\"./scf/query.ts\": 172,\n\t\"./scf/query_def\": 28,\n\t\"./scf/query_def.ts\": 28,\n\t\"./sqlserver/datasource\": 117,\n\t\"./sqlserver/datasource.ts\": 117,\n\t\"./sqlserver/query\": 173,\n\t\"./sqlserver/query.ts\": 173,\n\t\"./sqlserver/query_def\": 30,\n\t\"./sqlserver/query_def.ts\": 30,\n\t\"./tcaplus/datasource\": 118,\n\t\"./tcaplus/datasource.ts\": 118,\n\t\"./tcaplus/query\": 174,\n\t\"./tcaplus/query.ts\": 174,\n\t\"./tcaplus/query_def\": 52,\n\t\"./tcaplus/query_def.ts\": 52,\n\t\"./tdmq/datasource\": 119,\n\t\"./tdmq/datasource.ts\": 119,\n\t\"./tdmq/query\": 175,\n\t\"./tdmq/query.ts\": 175,\n\t\"./tdmq/query_def\": 13,\n\t\"./tdmq/query_def.ts\": 13,\n\t\"./tdmq_rabbitmq/datasource\": 120,\n\t\"./tdmq_rabbitmq/datasource.ts\": 120,\n\t\"./tdmq_rabbitmq/query\": 176,\n\t\"./tdmq_rabbitmq/query.ts\": 176,\n\t\"./tdmq_rabbitmq/query_def\": 18,\n\t\"./tdmq_rabbitmq/query_def.ts\": 18,\n\t\"./tdmq_rocketmq/datasource\": 121,\n\t\"./tdmq_rocketmq/datasource.ts\": 121,\n\t\"./tdmq_rocketmq/query\": 177,\n\t\"./tdmq_rocketmq/query.ts\": 177,\n\t\"./tdmq_rocketmq/query_def\": 19,\n\t\"./tdmq_rocketmq/query_def.ts\": 19,\n\t\"./tke/datasource\": 122,\n\t\"./tke/datasource.ts\": 122,\n\t\"./tke/query\": 178,\n\t\"./tke/query.ts\": 178,\n\t\"./tke/query_def\": 74,\n\t\"./tke/query_def.ts\": 74,\n\t\"./tsf/datasource\": 123,\n\t\"./tsf/datasource.ts\": 123,\n\t\"./tsf/query\": 179,\n\t\"./tsf/query.ts\": 179,\n\t\"./tsf/query_def\": 62,\n\t\"./tsf/query_def.ts\": 62,\n\t\"./v_clb/datasource\": 124,\n\t\"./v_clb/datasource.ts\": 124,\n\t\"./v_clb/query\": 180,\n\t\"./v_clb/query.ts\": 180,\n\t\"./v_clb/query_def\": 25,\n\t\"./v_clb/query_def.ts\": 25,\n\t\"./vbc/datasource\": 125,\n\t\"./vbc/datasource.ts\": 125,\n\t\"./vbc/query\": 181,\n\t\"./vbc/query.ts\": 181,\n\t\"./vbc/query_def\": 53,\n\t\"./vbc/query_def.ts\": 53,\n\t\"./vpc_net_detect/datasource\": 126,\n\t\"./vpc_net_detect/datasource.ts\": 126,\n\t\"./vpc_net_detect/query\": 182,\n\t\"./vpc_net_detect/query.ts\": 182,\n\t\"./vpc_net_detect/query_def\": 42,\n\t\"./vpc_net_detect/query_def.ts\": 42,\n\t\"./vpngw/datasource\": 127,\n\t\"./vpngw/datasource.ts\": 127,\n\t\"./vpngw/query\": 183,\n\t\"./vpngw/query.ts\": 183,\n\t\"./vpngw/query_def\": 54,\n\t\"./vpngw/query_def.ts\": 54,\n\t\"./vpnx/datasource\": 128,\n\t\"./vpnx/datasource.ts\": 128,\n\t\"./vpnx/query\": 184,\n\t\"./vpnx/query.ts\": 184,\n\t\"./vpnx/query_def\": 55,\n\t\"./vpnx/query_def.ts\": 55,\n\t\"./waf/datasource\": 129,\n\t\"./waf/datasource.ts\": 129,\n\t\"./waf/query\": 185,\n\t\"./waf/query.ts\": 185,\n\t\"./waf/query_def\": 43,\n\t\"./waf/query_def.ts\": 43\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 186;","import _ from 'lodash';\nimport { Datasources, SERVICES } from './index';\nimport { GetServiceFromNamespace, ParseMetricQuery } from '../common/constants';\nimport { serviceGroupBy } from '../common/utils';\nimport { LoadingState } from '@grafana/data';\n\nexport default interface DatasourceInterface {\n  instanceSettings: any;\n  backendSrv: any;\n  templateSrv: any;\n  query: (options: any) => any;\n  testDatasource: () => any;\n  metricFindQuery: (query: any) => any;\n  getRegions?: (service: string) => any;\n  getMetrics: (service: string, region: string) => any;\n  getInstances: (service: string, region: string, params: any) => any;\n  getZones?: (service: string, region: string) => any;\n}\n\nexport class TCMonitorDatasource implements DatasourceInterface {\n  instanceSettings: any;\n  backendSrv: any;\n  templateSrv: any;\n\n  /** @ngInject */\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    this.instanceSettings = instanceSettings;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    _.forEach(Datasources, (_class: any, key) => {\n      this[key] = new _class(this.instanceSettings, this.backendSrv, this.templateSrv);\n    });\n  }\n\n  // 根据 Datasource Config 配置时勾选的监控服务项，获取相应的命名空间\n  getNamespaces() {\n    const namespaces: any[] = [];\n    _.forEach(SERVICES, (service) => {\n      if (this.instanceSettings.jsonData[service.service] === true) {\n        // namespaces.push(service.namespace);\n        namespaces.push(service);\n      }\n    });\n    return namespaces;\n  }\n\n  getCascaderNamespaces() {\n    const validServices = SERVICES.filter((service) => this.instanceSettings.jsonData[service.service]);\n    return serviceGroupBy(validServices);\n  }\n\n  getSelectedServices() {\n    const namespaces = this.getNamespaces();\n    return _.map(namespaces, ({ namespace }) => {\n      return GetServiceFromNamespace(namespace);\n    });\n  }\n\n  /**\n   * 根据 Panel 的配置项，获取相应的监控数据\n   *\n   * @param options Panel 的配置参数，示例如下\n   *  {\n   *     cacheTimeout: undefined,\n   *     dashboardId: 41,\n   *     interval: \"30s\",\n   *     intervalMs: 30000,\n   *     maxDataPoints: 554,\n   *     panelId: 2,\n   *     range: {\n   *        from: Moment,\n   *        to: Moment,\n   *        raw: {from: \"now-6h\", to: \"now\"}\n   *     },\n   *     rangeRaw: {from: \"now-6h\", to: \"now\"},\n   *     scopedVars: {__interval: {…}, __interval_ms: {…}}\n   *     targets: [\n   *       {\n   *          namespace: \"QCE/CVM\",\n   *          refId: \"A\",\n   *          service: \"cvm\",\n   *          showInstanceDetails: false,\n   *          cvm: {\n   *            dimensionObject: {InstanceId: {…}}\n   *            instance: \"\",\n   *            instanceAlias: \"InstanceId\",\n   *            metricName: \"AccOuttraffic\",\n   *            metricUnit: \"MB\",\n   *            period: 10,\n   *            queries: {Filters: {…}, InstanceIds: Array(1), Limit: 20, Offset: 0, filtersChecked: false, …},\n   *            region: \"ap-beijing\"\n   *          },\n   *          cdb: {},\n   *       },\n   *     ],\n   *     timezone: \"browser\"\n   *   }\n   * @return 返回数据对象，示例如下\n   * {\n   *   data: [\n   *     {\n   *       \"target\": \"AccOuttraffic - ins-123\",\n   *       \"datapoints\": [\n   *         [861, 1450754160000],\n   *         [767, 1450754220000]\n   *       ]\n   *     }\n   *   ]\n   * }\n   */\n  query(options: any) {\n    const promises: any[] = [];\n    const services = this.getSelectedServices();\n    _.forEach(services, (service) => {\n      const optionsTemp = _.cloneDeep(options);\n      const targets = _.filter(optionsTemp.targets, (item) => item.service === service);\n      optionsTemp.targets = targets;\n      if (optionsTemp.targets.length > 0) {\n        const promiseTemp = this[`${_.toUpper(service)}Datasource`].query(optionsTemp);\n        if (promiseTemp) {\n          promises.push(promiseTemp);\n        }\n      }\n    });\n    if (promises.length === 0) {\n      return Promise.resolve({ data: [], state: LoadingState.Done });\n    }\n    return Promise.all(promises).then((results) => {\n      return { data: _.flatten(results), state: LoadingState.Done };\n    });\n  }\n\n  /**\n   * 获取模板变量的选择项列表\n   *\n   * @param query 模板变量配置填写的 Query 参数字符串\n   */\n  metricFindQuery(query: string, options?: any) {\n    const queries = ParseMetricQuery(query);\n    const service = GetServiceFromNamespace(queries['namespace'] || '');\n\n    if (_.isEmpty(queries) || !queries['namespace'] || !queries['action'] || !service) {\n      return Promise.resolve([]);\n    }\n    if (this[`${_.toUpper(service)}Datasource`].metricFindQuery) {\n      const result = this[`${_.toUpper(service)}Datasource`].metricFindQuery(\n        queries,\n        _.get(options, 'variable.regex', undefined)\n      );\n      if (result) {\n        return result;\n      }\n    }\n    return Promise.resolve([]);\n  }\n\n  /**\n   * 获取地域列表\n   * @param service\n   */\n  getRegions(service) {\n    if (this[`${_.toUpper(service)}Datasource`].getRegions) {\n      return this[`${_.toUpper(service)}Datasource`].getRegions();\n    }\n    return [];\n  }\n\n  /**\n   * 获取监控指标列表\n   * @param service\n   * @param region\n   */\n  getMetrics(service, region) {\n    return this[`${_.toUpper(service)}Datasource`].getMetrics(region);\n  }\n\n  /**\n   * 获取可用区列表\n   * @param service\n   * @param region\n   */\n  getZones(service, region) {\n    if (this[`${_.toUpper(service)}Datasource`].getZones) {\n      return this[`${_.toUpper(service)}Datasource`].getZones(region);\n    }\n    return [];\n  }\n\n  /**\n   * 获取filter中dropdown列表\n   * @param service\n   * @param param\n   */\n  getFilterDropdown(service, param) {\n    if (this[`${_.toUpper(service)}Datasource`].getFilterDropdown) {\n      return this[`${_.toUpper(service)}Datasource`].getFilterDropdown(param);\n    }\n    return [];\n  }\n\n  /**\n   * 获取实例列表\n   * @param service\n   * @param region\n   * @param params\n   */\n  getInstances(service, region, params) {\n    return this[`${_.toUpper(service)}Datasource`].getInstances(region, params);\n  }\n\n  /**\n   * 获取监听器列表\n   * @param service\n   * @param region\n   * @param params\n   */\n  getListeners(service, region, instance) {\n    if (!this[`${_.toUpper(service)}Datasource`].getListeners) {\n      return [];\n    }\n    return this[`${_.toUpper(service)}Datasource`].getListeners(region, instance);\n  }\n\n  /**\n   * 获取 私有网络列表\n   * @param service\n   */\n  getVpcIds(service, region) {\n    if (this[`${_.toUpper(service)}Datasource`].getVpcIds) {\n      return this[`${_.toUpper(service)}Datasource`].getVpcIds(region);\n    }\n  }\n\n  // 在 Datasource Config 配置时，验证 SerectId、SerectKey 的有效性，并测试勾选的监控服务项的对应 API 连通性\n  testDatasource() {\n    const promises: any[] = [];\n    const services = this.getSelectedServices();\n    _.forEach(services, (service) => {\n      promises.push(this[`${_.toUpper(service)}Datasource`].testDatasource());\n    });\n    if (promises.length === 0) {\n      return Promise.resolve(null);\n    }\n\n    return Promise.all(promises).then((results) => {\n      let status = 'success';\n      let message = 'DataSource Connection OK';\n\n      const errorMsg = _.reduce(\n        results,\n        (acc, cur) => {\n          if (cur.status === 'error') {\n            if (acc === '') acc += 'Oops! Found an error in: ';\n            acc += `${cur.service}: ${cur.message}; \\n`;\n          }\n          return acc;\n        },\n        ''\n      );\n\n      if (errorMsg) {\n        status = 'error';\n        message = errorMsg;\n      }\n\n      return {\n        status,\n        message,\n        title: _.upperFirst(status),\n      };\n    });\n  }\n\n  getServiceFn(service, fnName) {\n    return (...argu) => {\n      if (!this[`${_.toUpper(service)}Datasource`][fnName]) {\n        return [];\n      }\n      return this[`${_.toUpper(service)}Datasource`][fnName](...argu);\n    };\n  }\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    var obj;\n\n    while (queue.length) {\n        var item = queue.pop();\n        obj = item.obj[item.prop];\n\n        if (Array.isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n\n    return obj;\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (Array.isArray(target)) {\n            target.push(source);\n        } else if (typeof target === 'object') {\n            if (options.plainObjects || options.allowPrototypes || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (Array.isArray(target) && !Array.isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (Array.isArray(target) && Array.isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                if (target[i] && typeof target[i] === 'object') {\n                    target[i] = merge(target[i], item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str) {\n    try {\n        return decodeURIComponent(str.replace(/\\+/g, ' '));\n    } catch (e) {\n        return str;\n    }\n};\n\nvar encode = function encode(str) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = typeof str === 'string' ? str : String(str);\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    return compactQueue(queue);\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (obj === null || typeof obj === 'undefined') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    merge: merge\n};\n","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nmodule.exports = {\n    'default': 'RFC3986',\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return value;\n        }\n    },\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n","import coreModule from 'grafana/app/core/core_module';\nimport { DetailQueryConfig } from './types';\n\nclass SPQueryCtrl {\n  static _config: DetailQueryConfig;\n\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    Object.assign($scope, SPQueryCtrl._config);\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"{{instanceDocUrl}}\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        单次请求返回的数量，默认为20，最小值为1，最大值为100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      InstanceIds\n      <info-popover mode=\"right-normal\">\n        实例 ID，每次请求的实例的上限为100，参数不支持同时指定 InstanceIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n      switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n  <multi-condition type=\"'input'\" max-cond=\"100\" value=\"target.queries.InstanceIds\" on-change=\"onChange()\">\n  </multi-condition>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      Filters\n      <info-popover mode=\"right-normal\">\n        过滤条件，每次请求的 Filters 的上限为10，Filter.Values 的上限为5。参数不支持同时指定 InstanceIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n      on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n  <div class=\"gf-form-inline\" ng-repeat=\"field in CVMFilterFieldsDescriptor\">\n    <label class=\"gf-form-label width-14\">\n      {{ field.key }}\n      <info-popover mode=\"right-normal\">\n        {{ field.cnDescriptor }}\n        <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n      </info-popover>\n    </label>\n    <multi-condition\n      ng-if=\"field.type === 'dropdownmulti'\"\n      type=\"'dropdown'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      get-options=\"getDropdown(field.key)\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputNumbermulti'\"\n      type=\"'inputNumber'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      maxNum=\"field.max\"\n      minNum=\"field.min\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputmulti'\"\n      type=\"'input'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <custom-select-dropdown\n      ng-if=\"field.type === 'select'\"\n      value=\"target.queries.Filters[field.key]\"\n      options=\"field.list\"\n      multiple=\"true\"\n      on-change=\"onChange()\"\n    ></custom-select-dropdown>\n  </div>\n</div>\n</div>\n`;\n\nexport function queryDDO() {\n  return {\n    template: template,\n    controller: SPQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\nexport default (name: string, config: DetailQueryConfig) => {\n  SPQueryCtrl._config = config;\n  coreModule.directive(name, queryDDO);\n};\n","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching\n        return prefix + '[]';\n    },\n    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching\n        return prefix;\n    }\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaults = {\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar stringify = function stringify( // eslint-disable-line func-name-matching\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter,\n    encodeValuesOnly\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (Array.isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        if (Array.isArray(obj)) {\n            values = values.concat(stringify(\n                obj[key],\n                generateArrayPrefix(prefix, key),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly\n            ));\n        } else {\n            values = values.concat(stringify(\n                obj[key],\n                prefix + (allowDots ? '.' + key : '[' + key + ']'),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly\n            ));\n        }\n    }\n\n    return values;\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = opts ? utils.assign({}, opts) : {};\n\n    if (options.encoder !== null && options.encoder !== undefined && typeof options.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var delimiter = typeof options.delimiter === 'undefined' ? defaults.delimiter : options.delimiter;\n    var strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n    var skipNulls = typeof options.skipNulls === 'boolean' ? options.skipNulls : defaults.skipNulls;\n    var encode = typeof options.encode === 'boolean' ? options.encode : defaults.encode;\n    var encoder = typeof options.encoder === 'function' ? options.encoder : defaults.encoder;\n    var sort = typeof options.sort === 'function' ? options.sort : null;\n    var allowDots = typeof options.allowDots === 'undefined' ? false : options.allowDots;\n    var serializeDate = typeof options.serializeDate === 'function' ? options.serializeDate : defaults.serializeDate;\n    var encodeValuesOnly = typeof options.encodeValuesOnly === 'boolean' ? options.encodeValuesOnly : defaults.encodeValuesOnly;\n    if (typeof options.format === 'undefined') {\n        options.format = formats['default'];\n    } else if (!Object.prototype.hasOwnProperty.call(formats.formatters, options.format)) {\n        throw new TypeError('Unknown format option provided.');\n    }\n    var formatter = formats.formatters[options.format];\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (Array.isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (options.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = options.arrayFormat;\n    } else if ('indices' in options) {\n        arrayFormat = options.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (sort) {\n        objKeys.sort(sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        keys = keys.concat(stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            strictNullHandling,\n            skipNulls,\n            encode ? encoder : null,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            formatter,\n            encodeValuesOnly\n        ));\n    }\n\n    var joined = keys.join(delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    parameterLimit: 1000,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n\n    for (var i = 0; i < parts.length; ++i) {\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder);\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder);\n            val = options.decoder(part.slice(pos + 1), defaults.decoder);\n        }\n        if (has.call(obj, key)) {\n            obj[key] = [].concat(obj[key]).concat(val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options) {\n    var leaf = val;\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]') {\n            obj = [];\n            obj = obj.concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys\n        // that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while ((segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options);\n};\n\nmodule.exports = function (str, opts) {\n    var options = opts ? utils.assign({}, opts) : {};\n\n    if (options.decoder !== null && options.decoder !== undefined && typeof options.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    options.ignoreQueryPrefix = options.ignoreQueryPrefix === true;\n    options.delimiter = typeof options.delimiter === 'string' || utils.isRegExp(options.delimiter) ? options.delimiter : defaults.delimiter;\n    options.depth = typeof options.depth === 'number' ? options.depth : defaults.depth;\n    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : defaults.arrayLimit;\n    options.parseArrays = options.parseArrays !== false;\n    options.decoder = typeof options.decoder === 'function' ? options.decoder : defaults.decoder;\n    options.allowDots = typeof options.allowDots === 'boolean' ? options.allowDots : defaults.allowDots;\n    options.plainObjects = typeof options.plainObjects === 'boolean' ? options.plainObjects : defaults.plainObjects;\n    options.allowPrototypes = typeof options.allowPrototypes === 'boolean' ? options.allowPrototypes : defaults.allowPrototypes;\n    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : defaults.parameterLimit;\n    options.strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options);\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n","var map = {\n\t\"./_base/query.ts\": 7,\n\t\"./apigateway/datasource\": 75,\n\t\"./apigateway/datasource.ts\": 75,\n\t\"./apigateway/query.ts\": 131,\n\t\"./apigateway/query_def.ts\": 23,\n\t\"./bmIntraLb/datasource\": 76,\n\t\"./bmIntraLb/datasource.ts\": 76,\n\t\"./bmIntraLb/query.ts\": 132,\n\t\"./bmIntraLb/query_def.ts\": 31,\n\t\"./bm_lb/datasource\": 77,\n\t\"./bm_lb/datasource.ts\": 77,\n\t\"./bm_lb/query.ts\": 133,\n\t\"./bm_lb/query_def.ts\": 32,\n\t\"./bm_pcx/datasource\": 78,\n\t\"./bm_pcx/datasource.ts\": 78,\n\t\"./bm_pcx/query.ts\": 134,\n\t\"./bm_pcx/query_def.ts\": 33,\n\t\"./bwp/datasource\": 79,\n\t\"./bwp/datasource.ts\": 79,\n\t\"./bwp/query.ts\": 135,\n\t\"./bwp/query_def.ts\": 63,\n\t\"./cbs/datasource\": 80,\n\t\"./cbs/datasource.ts\": 80,\n\t\"./cbs/query.ts\": 136,\n\t\"./cbs/query_def.ts\": 34,\n\t\"./cdb/datasource\": 81,\n\t\"./cdb/datasource.ts\": 81,\n\t\"./cdb/query.ts\": 137,\n\t\"./cdb/query_def.ts\": 44,\n\t\"./cdn/datasource\": 82,\n\t\"./cdn/datasource.ts\": 82,\n\t\"./cdn/query.ts\": 138,\n\t\"./cdn/query_def.ts\": 64,\n\t\"./cdn_province/datasource\": 83,\n\t\"./cdn_province/datasource.ts\": 83,\n\t\"./cdn_province/query.ts\": 139,\n\t\"./cdn_province/query_def.ts\": 35,\n\t\"./ceip_summary/datasource\": 84,\n\t\"./ceip_summary/datasource.ts\": 84,\n\t\"./ceip_summary/query.ts\": 140,\n\t\"./ceip_summary/query_def.ts\": 36,\n\t\"./ces/datasource\": 85,\n\t\"./ces/datasource.ts\": 85,\n\t\"./ces/query.ts\": 141,\n\t\"./ces/query_def.ts\": 45,\n\t\"./cfs/datasource\": 86,\n\t\"./cfs/datasource.ts\": 86,\n\t\"./cfs/query.ts\": 142,\n\t\"./cfs/query_def.ts\": 57,\n\t\"./ckafka/datasource\": 87,\n\t\"./ckafka/datasource.ts\": 87,\n\t\"./ckafka/query.ts\": 143,\n\t\"./ckafka/query_def.ts\": 11,\n\t\"./clb/datasource\": 88,\n\t\"./clb/datasource.ts\": 88,\n\t\"./clb/query.ts\": 144,\n\t\"./clb/query_def.ts\": 12,\n\t\"./cls/datasource\": 89,\n\t\"./cls/datasource.ts\": 89,\n\t\"./cls/query.ts\": 145,\n\t\"./cls/query_def.ts\": 29,\n\t\"./cmq/datasource\": 90,\n\t\"./cmq/datasource.ts\": 90,\n\t\"./cmq/query.ts\": 146,\n\t\"./cmq/query_def.ts\": 58,\n\t\"./cmq_topic/datasource\": 91,\n\t\"./cmq_topic/datasource.ts\": 91,\n\t\"./cmq_topic/query.ts\": 147,\n\t\"./cmq_topic/query_def.ts\": 37,\n\t\"./cos/datasource\": 92,\n\t\"./cos/datasource.ts\": 92,\n\t\"./cos/query_def.ts\": 148,\n\t\"./cpm/datasource\": 93,\n\t\"./cpm/datasource.ts\": 93,\n\t\"./cpm/query.ts\": 149,\n\t\"./cpm/query_def.ts\": 38,\n\t\"./cvm/datasource\": 94,\n\t\"./cvm/datasource.ts\": 94,\n\t\"./cvm/query.ts\": 150,\n\t\"./cvm/query_def.ts\": 59,\n\t\"./cynosdb_mysql/datasource\": 95,\n\t\"./cynosdb_mysql/datasource.ts\": 95,\n\t\"./cynosdb_mysql/query.ts\": 151,\n\t\"./cynosdb_mysql/query_def.ts\": 27,\n\t\"./dc/datasource\": 96,\n\t\"./dc/datasource.ts\": 96,\n\t\"./dc/query.ts\": 152,\n\t\"./dc/query_def.ts\": 46,\n\t\"./dcdb/datasource\": 97,\n\t\"./dcdb/datasource.ts\": 97,\n\t\"./dcdb/query.ts\": 153,\n\t\"./dcdb/query_def.ts\": 16,\n\t\"./dcg/datasource\": 98,\n\t\"./dcg/datasource.ts\": 98,\n\t\"./dcg/query.ts\": 154,\n\t\"./dcg/query_def.ts\": 47,\n\t\"./dcx/datasource\": 99,\n\t\"./dcx/datasource.ts\": 99,\n\t\"./dcx/query.ts\": 155,\n\t\"./dcx/query_def.ts\": 48,\n\t\"./ecdn/datasource\": 100,\n\t\"./ecdn/datasource.ts\": 100,\n\t\"./ecdn/query.ts\": 156,\n\t\"./ecdn/query_def.ts\": 39,\n\t\"./ecm/datasource\": 101,\n\t\"./ecm/datasource.ts\": 101,\n\t\"./ecm/query.ts\": 157,\n\t\"./ecm/query_def.ts\": 40,\n\t\"./ecm_block_storage/datasource\": 102,\n\t\"./ecm_block_storage/datasource.ts\": 102,\n\t\"./ecm_block_storage/query.ts\": 158,\n\t\"./ecm_block_storage/query_def.ts\": 21,\n\t\"./ecm_lb/datasource\": 103,\n\t\"./ecm_lb/datasource.ts\": 103,\n\t\"./ecm_lb/query.ts\": 159,\n\t\"./ecm_lb/query_def.ts\": 49,\n\t\"./gse/datasource\": 104,\n\t\"./gse/datasource.ts\": 104,\n\t\"./gse/query.ts\": 160,\n\t\"./gse/query_def.ts\": 15,\n\t\"./lb/datasource\": 105,\n\t\"./lb/datasource.ts\": 105,\n\t\"./lb/query.ts\": 161,\n\t\"./lb/query_def.ts\": 65,\n\t\"./lighthouse/datasource\": 106,\n\t\"./lighthouse/datasource.ts\": 106,\n\t\"./lighthouse/query.ts\": 162,\n\t\"./lighthouse/query_def.ts\": 56,\n\t\"./mongodb/datasource\": 107,\n\t\"./mongodb/datasource.ts\": 107,\n\t\"./mongodb/query.ts\": 163,\n\t\"./mongodb/query_def.ts\": 50,\n\t\"./mr/datasource\": 108,\n\t\"./mr/datasource.ts\": 108,\n\t\"./mr/query.ts\": 164,\n\t\"./mr/query_def.ts\": 24,\n\t\"./nat_gateway/datasource\": 109,\n\t\"./nat_gateway/datasource.ts\": 109,\n\t\"./nat_gateway/query.ts\": 165,\n\t\"./nat_gateway/query_def.ts\": 66,\n\t\"./ov_cdn/datasource\": 110,\n\t\"./ov_cdn/datasource.ts\": 110,\n\t\"./ov_cdn/query.ts\": 166,\n\t\"./ov_cdn/query_def.ts\": 67,\n\t\"./pcx/datasource\": 111,\n\t\"./pcx/datasource.ts\": 111,\n\t\"./pcx/query.ts\": 167,\n\t\"./pcx/query_def.ts\": 60,\n\t\"./postgresql/datasource\": 112,\n\t\"./postgresql/datasource.ts\": 112,\n\t\"./postgresql/query.ts\": 168,\n\t\"./postgresql/query_def.ts\": 41,\n\t\"./qaap/datasource\": 113,\n\t\"./qaap/datasource.ts\": 113,\n\t\"./qaap/query.ts\": 169,\n\t\"./qaap/query_def.ts\": 51,\n\t\"./redis/datasource\": 114,\n\t\"./redis/datasource.ts\": 114,\n\t\"./redis/query.ts\": 170,\n\t\"./redis/query_def.ts\": 61,\n\t\"./redis_mem/datasource\": 115,\n\t\"./redis_mem/datasource.ts\": 115,\n\t\"./redis_mem/query.ts\": 171,\n\t\"./redis_mem/query_def.ts\": 17,\n\t\"./scf/datasource\": 116,\n\t\"./scf/datasource.ts\": 116,\n\t\"./scf/query.ts\": 172,\n\t\"./scf/query_def.ts\": 28,\n\t\"./sqlserver/datasource\": 117,\n\t\"./sqlserver/datasource.ts\": 117,\n\t\"./sqlserver/query.ts\": 173,\n\t\"./sqlserver/query_def.ts\": 30,\n\t\"./tcaplus/datasource\": 118,\n\t\"./tcaplus/datasource.ts\": 118,\n\t\"./tcaplus/query.ts\": 174,\n\t\"./tcaplus/query_def.ts\": 52,\n\t\"./tdmq/datasource\": 119,\n\t\"./tdmq/datasource.ts\": 119,\n\t\"./tdmq/query.ts\": 175,\n\t\"./tdmq/query_def.ts\": 13,\n\t\"./tdmq_rabbitmq/datasource\": 120,\n\t\"./tdmq_rabbitmq/datasource.ts\": 120,\n\t\"./tdmq_rabbitmq/query.ts\": 176,\n\t\"./tdmq_rabbitmq/query_def.ts\": 18,\n\t\"./tdmq_rocketmq/datasource\": 121,\n\t\"./tdmq_rocketmq/datasource.ts\": 121,\n\t\"./tdmq_rocketmq/query.ts\": 177,\n\t\"./tdmq_rocketmq/query_def.ts\": 19,\n\t\"./tke/datasource\": 122,\n\t\"./tke/datasource.ts\": 122,\n\t\"./tke/query.ts\": 178,\n\t\"./tke/query_def.ts\": 74,\n\t\"./tsf/datasource\": 123,\n\t\"./tsf/datasource.ts\": 123,\n\t\"./tsf/query.ts\": 179,\n\t\"./tsf/query_def.ts\": 62,\n\t\"./v_clb/datasource\": 124,\n\t\"./v_clb/datasource.ts\": 124,\n\t\"./v_clb/query.ts\": 180,\n\t\"./v_clb/query_def.ts\": 25,\n\t\"./vbc/datasource\": 125,\n\t\"./vbc/datasource.ts\": 125,\n\t\"./vbc/query.ts\": 181,\n\t\"./vbc/query_def.ts\": 53,\n\t\"./vpc_net_detect/datasource\": 126,\n\t\"./vpc_net_detect/datasource.ts\": 126,\n\t\"./vpc_net_detect/query.ts\": 182,\n\t\"./vpc_net_detect/query_def.ts\": 42,\n\t\"./vpngw/datasource\": 127,\n\t\"./vpngw/datasource.ts\": 127,\n\t\"./vpngw/query.ts\": 183,\n\t\"./vpngw/query_def.ts\": 54,\n\t\"./vpnx/datasource\": 128,\n\t\"./vpnx/datasource.ts\": 128,\n\t\"./vpnx/query.ts\": 184,\n\t\"./vpnx/query_def.ts\": 55,\n\t\"./waf/datasource\": 129,\n\t\"./waf/datasource.ts\": 129,\n\t\"./waf/query.ts\": 185,\n\t\"./waf/query_def.ts\": 43\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 209;","import { PluginMeta } from '@grafana/data';\nimport { config, getBackendSrv } from '@grafana/runtime';\nimport { TcDataSourceId } from '../datasource/common/constants';\n\nconst backendSrv = getBackendSrv();\n\nconst tcFolder = {\n  uid: 'tencent-cloud-monitor',\n  title: '腾讯云监控',\n  folderId: null,\n};\n\nconst tcFolder_EN = {\n  uid: 'tencent-cloud-monitor-english',\n  title: 'Tencent Cloud Monitor',\n  folderId: null,\n};\n\n/**\n * 生成腾讯云专用目录\n * @returns\n */\nasync function getFolderId() {\n  if (tcFolder.folderId && tcFolder_EN.folderId) {\n    return [tcFolder.folderId, tcFolder_EN.folderId];\n  }\n  const folders: any[] = await backendSrv.get('/api/folders');\n  let folderId = folders.find((item) => item.uid === tcFolder.uid)?.id;\n  let folderEnId = folders.find((item) => item.uid === tcFolder_EN.uid)?.id;\n  if (!folderId) {\n    const folder = await backendSrv.post('/api/folders', tcFolder);\n    folderId = folder?.id || 0;\n  }\n  if (!folderEnId) {\n    const folderEn = await backendSrv.post('/api/folders', tcFolder_EN);\n    folderEnId = folderEn?.id || 0;\n  }\n  tcFolder.folderId = folderId;\n  tcFolder_EN.folderId = folderEnId;\n  return [folderId, folderEnId];\n}\n\n/**\n * 请求拦截器，拦截导入按钮的接口请求\n */\nfunction backendInterceptor() {\n  const oldPost = backendSrv.post.bind(getBackendSrv());\n  const pluginId = window.location.pathname.split('/').filter((item) => item)[1];\n  backendSrv.post = async (url, data) => {\n    // 拦截判断：拦截指定接口\n    if (url === '/api/dashboards/import' && data.pluginId === pluginId) {\n      const [folderId, folderEnId] = await getFolderId();\n      data.folderId = data.path.endsWith('_en_dashboard.json') ? folderEnId : folderId;\n    }\n    return oldPost(url, data);\n  };\n}\n\nbackendInterceptor();\n\nexport class MonitorAppConfigCtrl {\n  static templateUrl = 'components/config.html';\n  appEditCtrl: any;\n  appModel?: PluginMeta;\n  $q: any;\n  configured: boolean;\n\n  /** @ngInject */\n  constructor($scope: any, $injector: any, $q: any) {\n    this.appEditCtrl.setPostUpdateHook(this.postUpdate.bind(this));\n    this.$q = $q;\n    // Make sure it has a JSON Data spot\n    if (!this.appModel) {\n      // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n      this.appModel = {} as PluginMeta;\n    }\n\n    // Required until we get the types sorted on appModel :(\n    const appModel = this.appModel as any;\n    if (!appModel.jsonData) {\n      appModel.jsonData = {};\n    }\n    this.configured = false;\n    if (this.appModel?.enabled) {\n      const datasources = Object.values(config.datasources).filter((ds) => {\n        return ds.type === TcDataSourceId;\n      });\n      if (datasources.length > 0) {\n        this.configured = true;\n      }\n    }\n  }\n\n  async moveToFolder(dashbaordUid: string, folderId: number) {\n    // 获取dashboard\n    const { dashboard } = await backendSrv.get(`/api/dashboards/uid/${dashbaordUid}`);\n    // 移动目录\n    await backendSrv.post('/api/dashboards/db/', {\n      dashboard,\n      folderId,\n      message: '',\n      overwrite: true,\n    });\n  }\n\n  async reviseDashboard() {\n    // 1. 生成腾讯云目录\n    const [folderId, folderEnId] = await getFolderId();\n    // 2. 获取所有腾讯云插件下的dashboard\n    const rs = await backendSrv.get(`/api/plugins/${this.appModel?.id}/dashboards`);\n\n    // 3. 调用api更新dashboard\n    const pmlist = rs.map((item) => {\n      const { importedUrl, path } = item;\n      const uid = importedUrl.split('/')[2];\n      if (uid) {\n        return this.moveToFolder(uid, path.endsWith('_en_dashboard.json') ? folderEnId : folderId);\n      } else {\n        return Promise.resolve();\n      }\n    });\n\n    return Promise.all(pmlist);\n  }\n\n  async postUpdate() {\n    if (!this.appModel?.enabled) {\n      return;\n    }\n    // enable或者update时，对预设dashboard进行修改\n    await this.reviseDashboard();\n    return this.$q.resolve(true);\n  }\n}\n"],"sourceRoot":""}