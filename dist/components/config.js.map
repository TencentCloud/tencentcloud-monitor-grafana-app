{"version":3,"sources":["webpack://TencentCloudMonitorGrafanaApp/webpack/bootstrap","webpack://TencentCloudMonitorGrafanaApp/external \"lodash\"","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/_base/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/common/sign.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/common/signV2.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/common/constants.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/common/utils.ts","webpack://TencentCloudMonitorGrafanaApp/external \"app/core/core_module\"","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/_base/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/common/indexedDB.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/common/datasourceStorage.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ckafka/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/external \"@grafana/data\"","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/clb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tdmq/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/gse/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcdb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/redis_mem/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/index.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm_block_storage/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/apigateway/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/mr/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/v_clb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cynosdb_mysql/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/scf/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cls/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/sqlserver/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bmIntraLb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bm_lb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bm_pcx/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cbs/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdn_province/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ceip_summary/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cmq_topic/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cpm/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/postgresql/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tcaplus/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpc_net_detect/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/external \"@grafana/runtime\"","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ces/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dc/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcg/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcx/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm_lb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/qaap/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vbc/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpngw/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpnx/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/waf/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/lighthouse/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cfs/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cmq/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cvm/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/pcx/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/redis/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tsf/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bwp/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdn/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/lb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/mongodb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/nat_gateway/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ov_cdn/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/external \"moment\"","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/apigateway/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bmIntraLb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bm_lb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bm_pcx/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bwp/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cbs/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdn/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdn_province/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ceip_summary/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ces/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cfs/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ckafka/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/clb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cls/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cmq/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cmq_topic/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cos/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cpm/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cvm/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cynosdb_mysql/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dc/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcdb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcg/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcx/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm_block_storage/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm_lb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/gse/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/lb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/lighthouse/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/mongodb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/mr/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/nat_gateway/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ov_cdn/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/pcx/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/postgresql/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/qaap/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/redis/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/redis_mem/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/scf/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/sqlserver/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tcaplus/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tdmq/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tsf/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/v_clb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vbc/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpc_net_detect/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpngw/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpnx/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/waf/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/apigateway/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bmIntraLb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bm_lb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bm_pcx/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bwp/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cbs/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdn/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdn_province/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ceip_summary/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ces/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cfs/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ckafka/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/clb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cls/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cmq/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cmq_topic/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cos/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cpm/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cvm/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cynosdb_mysql/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dc/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcdb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcg/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcx/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm_block_storage/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm_lb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/gse/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/lb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/lighthouse/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/mongodb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/mr/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/nat_gateway/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ov_cdn/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/pcx/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/postgresql/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/qaap/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/redis/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/redis_mem/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/scf/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/sqlserver/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tcaplus/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tdmq/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tsf/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/v_clb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vbc/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpc_net_detect/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpngw/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpnx/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/waf/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor sync ^.*$","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/MonitorDatasource.ts","webpack://TencentCloudMonitorGrafanaApp/../node_modules/qs/lib/utils.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/qs/lib/formats.js","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/_base/query_filter.ts","webpack://TencentCloudMonitorGrafanaApp/../node_modules/qs/lib/index.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/qs/lib/stringify.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/qs/lib/parse.js","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor sync ^\\.\\/[a-zA-Z]\\w+\\/(datasource)|(query(_def)","webpack://TencentCloudMonitorGrafanaApp/./components/config.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","instanceSettings","backendSrv","templateSrv","instanceListCache","extraMetricDims","checkKeys","MetricReqConfig","extrasAlias","queryMonitorExtraConfg","CandiateDimensions","this","url","secretId","jsonData","Namespace","service","getOtherAlias","instance","target","result","alias","_InstanceAliasValue","forEach","extra","extraAlia","getVariable","indexOf","getAliasValue","Array","isArray","join","formatVarDisplay","displayTpl","instanceAlias","replace","a","b","InstanceAliasList","includes","metricFindQuery","query","regex","action","namespace","display","payload","region","instancealias","templateQueryIdMap","match","getRegions","getVariableInstances","res","flatMap","item","insAlias","text","setInstance","getInstance","instanceCache","cloneDeep","find","fetchMetricData","Promise","resolve","dimensionsFormat","dimKeys","ins","dimensionObject","options","keyTmp","invalidDim","InvalidDimensions","getInvalidDimensions","extraDimValue","dim_KeyInStorage","dim_KeyInTarget","dim_KeyInMap","dim_KeyInIns","scopedVars","extraSourceMap","JSON","parse","getExtraStorage","extraStorage","isStringOrNumber","isString","isNumber","otherAlias","getDimensionsVal","length","Ekey","Name","Value","dimVal","isEmpty","queries","filter","targets","hide","metricName","map","instances","concat","inst","error","insInReq","keys","dimResult","push","Dimensions","data","StartTime","range","from","format","EndTime","to","Period","period","Instances","MetricName","getMonitorData","all","then","responses","flatten","getInstanceReqConfig","selfIns","metric","rs","trim","valStr","split","params","serviceInfo","doRequest","path","response","RegionSet","RegionName","Region","RegionState","getMetrics","MetricSet","resFilterFn","resultFilter","getInstances","InstanceReqConfig","field","interceptor","Offset","Limit","request","Error","total","TotalCount","TotalCnt","param","isValidConfigField","testDatasource","cvmErr","monitorErr","serviceErr","cvmAuthFail","monitorAuthFail","serviceAuthFail","messages","message","compact","uniq","status","title","statusText","code","signObj","id","datasourceRequest","host","version","datasourceId","stringify","nowDate","utc","timestamp","unix","date","getHeader","getResourceHeader","method","headers","Host","Service","Version","Action","Timestamp","Method","Uri","Query","Body","Headers","resp","authorization","token","intranet","grafanaVersion","window","grafanaBootData","settings","buildInfo","Authorization","toString","defaults","generateQueryString","getResourceQueryString","assign","secretKey","querystring","queryString","TcDataSourceId","FINACE_REGIONS","SERVICES_API_INFO","api","monitor","cls","cvm","cdb","pcx","vpc","mongodb","clb","postgres","cdn","redis","scf","cfs","ckafka","dc","cynosdb","sqlserver","bm","bmeip","bmvpc","bmlb","es","emr","cmq","cbs","tcaplusdb","dcdb","apigateway","tdmq","gaap","ecm","gse","lighthouse","tsf","FINACE_HOST","GetServiceAPIInfo","__","getHostAndPath","GetServiceFromNamespace","ParseMetricQuery","str","val","e","toLower","ReplaceVariable","multiple","varname","varFlag","regResult1","String","regResult2","parseVariableFormat","replaceVar","GetDimensions","obj","dimensions","undefined","ParseQueryResult","instanceList","dataPoints","dataPoint","instanceAliasValue","isInstanceMatch","splice","datapoints","parseDataPoint","timestamps","values","index","isVariable","GetRequestParams","signParams","pick","headerSigned","GetRequestParamsV2","sign","SliceLength","len","num","Math","ceil","IS_DEVELOPMENT_ENVIRONMENT","getFieldsValue","fields","fetchAllFactory","fetcher","_params","Result","firstLists","delta","batchCount","pmList","fill","_","reduce","acc","cur","lists","list","instanceQueryParamsBaseParse","isFilter","omit","Values","slice","isObject","Filters","getNamesapceFromService","serviceName","serviceGroupBy","services","label","groupName","existedGroup","items","__WEBPACK_EXTERNAL_MODULE__4__","config","detailConfig","QueryCtrl","newQueryIns","$scope","$rootScope","getDropdown","datasource","getFilterDropdown","directive","template","controller","restrict","scope","showDetail","getDropdownOptions","onChange","store","promisify","type","reject","onsuccess","event","returnMap","msg","onerror","props","initDB","indexedDB","webkitIndexedDB","mozIndexedDB","msIndexedDB","open","onupgradeneeded","db","objectStoreNames","contains","createObjectStore","keyPath","openDB","insertData","storeName","transaction","objectStore","add","oncomplete","addData","isCover","getData","oldData","getObjectStore","newData","requestUpdate","put","seviceName","getAllData","getAll","insKey","cacheWay","setStorage","getStorage","setExtraStorage","EValue","serviceKey","storage","CKAFKAQueryDescriptor","enDescriptor","cnDescriptor","link","min","max","CKAFKA_STATE","metricUnit","topicId","topicName","consumerGroup","partition","Status","InstanceId","SearchWord","TagKey","GetInstanceQueryParams","CKAFKAInstanceAliasList","CKAFKATopicAliasList","CKAFKAInvalidDemensions","Proxy","prop","toLocaleLowerCase","keyInStorage","TopicList","GroupList","PartitionList","TopicId","TopicName","GroupName","PartitionId","__WEBPACK_EXTERNAL_MODULE__9__","queryEditorName","LOADBALANCEFieldsDescriptor","queryEditorConfig","instanceDocUrl","fieldDescriptor","LOADBALANCE_STATE","Port","Protocol","listener","servers","serverPort","LoadBalancerIds","Forward","LoadBalancerName","Domain","LoadBalancerVips","BackendPublicIps","BackendPrivateIps","ProjectId","WithRs","VpcId","SecurityGroup","MasterZone","OrderBy","OrderType","LOADBALANCEListenerAliasList","LOADBALANCEServerAliasList","LOADBALANCEVALIDDIMENSIONS","vip","loadBalancerPort","protocol","lanIp","port","CANDIATEDIMENSIONS","PrivateIpAddresses","ServerPort","TDMQInvalidDemensions","tenantId","environmentId","TDMQInstanceAliasList","TDMQFilterFieldsDescriptor","CDNPROVINCE_STATE","regionSupported","modifyDimensons","metricItem","metricTmp","EnvironmentId","fleetId","GSEInvalidDemensions","instanceid","fleetid","queuename","GSEInstanceAliasList","FleetId","fleet","queue","GSEFilterFieldsDescriptor","GSE_STATE","v","DCDBInvalidDemensions","nodeid","shardid","ShardId","DCDBInstanceAliasList","NodeId","ShardInstanceId","DCDBFilterFieldsDescriptor","DCDB_STATE","InstanceIds","SearchName","SearchKey","ProjectIds","SubnetId","OrderByType","ExclusterType","ExclusterIds","FilterInstanceType","modifyMetricConf","IsFilterVpc","IsFilterExcluster","RedisMemFieldsDescriptor","REDISMEM_STATE","VpcIds","SubnetIds","InstanceName","UniqVpcIds","UniqSubnetIds","TypeVersion","EngineName","AutoRenew","BillingMode","Type","rnodeid","pnodeid","REDISMEMInstanceAliasList","RedisMemInvalidDemensions","NodeType","SERVICES","href","hideRegion","Datasources","InitStates","hackModuleName","postgresql","mr","filePath","moduleName","fileName","prefix","toUpperCase","getParams","ECMBLOCKSTORAGEInvalidDemensions","uuid","diskId","ECMBLOCKSTORAGEInstanceAliasList","ECMBLOCKSTORAGEFilterFieldsDescriptor","ECMBLOCKSTORAGE_STATE","DiskId","APIGATEWAYInvalidDemensions","serviceId","environmentName","apiid","apiId","APIGATEWAYInstanceAliasList","environmentList","EnvironmentName","APIGATEWAYFilterFieldsDescriptor","APIGATEWAY_STATE","ServiceId","ServiceName","NotUsagePlanId","Environment","IpVersion","InstanceQueryDescriptor","InvalidDemensions","k","receiver","startsWith","Reflect","has","propKey","node","Ip","nodeIP","DisplayStrategy","Order","OrderField","Asc","VCLBInvalidDemensions","VCLBInstanceAliasList","VCLBFilterFieldsDescriptor","VCLB_STATE","clbNamespaceMap","public","private","cynosdbMysqlFilterFieldsDescriptor","CYNOSDB_STATE","DbType","CYNOSDBMYSQLInstanceAliasList","CYNOSDBInvalidDemensions","instanceId","SCFQueryDescriptor","SCF_STATE","Description","SCFInstanceAliasList","SCFInvalidDemensions","functionName","SCFDefaultDimensionList","CLSInvalidDemensions","CLSInstanceAliasList","CLSFilterFieldsDescriptor","CLS_STATE","uin","logsetName","logsetId","tagKey","storageType","SQLSERVERInvalidDemensions","resourceId","SQLSERVERInstanceAliasList","SQLSERVERNETFilterFieldsDescriptor","SQLSERVER_STATE","InstanceIdSet","PayMode","VipSet","InstanceNameSet","VersionSet","Zone","BMINTRALBInvalidDemensions","vpcId","BMINTRALBInstanceAliasList","BMINTRALBFilterFieldsDescriptor","BMINTRALB_STATE","BMLBValidMetricsT","isValidMetric","validMetrics","toUpper","CPMInvalidDemensions","BMLBInstanceAliasList","CPMFilterFieldsDescriptor","CPM_STATE","BMPCXInvalidDemensions","peeringConnectionId","BMPCXInstanceAliasList","BMPCXFilterFieldsDescriptor","BMPCX_STATE","VpcPeerConnectionIds","CBSInvalidDemensions","diskname","unInstanceId","CBSInstanceAliasList","CBSFilterFieldsDescriptor","CBS_STATE","DiskIds","ReturnBindAutoSnapshotPolicy","metricObj","dimension","CDNPROVINCEInvalidDemensions","domain","projectid","province","appid","CDNPROVINCEInstanceAliasList","CDNPROVINCEFilterFieldsDescriptor","isp","district","origin","serviceType","projectId","domainType","fullUrlCache","https","originPullProtocol","CEIPInvalidDemensions","eip","CEIPSUMMARYInstanceAliasList","CEIPFilterFieldsDescriptor","CEIP_STATE","subscription","subscriptionId","CPMInstanceAliasList","DeviceClassCode","WanIps","LanIps","Alias","VagueIp","AutoRenewFlag","DeviceType","IsLuckyDevice","ECMInvalidDemensions","ECMInstanceAliasList","ECMFilterFieldsDescriptor","ECM_STATE","zone","PostgresFieldsDescriptor","POSTGRESInstanceAliasList","POSTGRES_STATE","PostgreInvalidDemensions","uid","TCAPLUSInvalidDemensions","TCAPLUSInstanceAliasList","TCAPLUSFilterFieldsDescriptor","TCAPLUS_STATE","ClusterId","TableGroupIds","TableName","TableInstanceId","TableIdlType","TableType","ListElementNum","ReservedVolume","ReservedReadQps","ReservedWriteQps","Memo","FileName","FileExtType","FileSize","FileContent","SelectedTables","regonsMap","VPCNETInvalidDemensions","netdetectid","netDetectId","VPCNETDETECTInstanceAliasList","VPCNETFilterFieldsDescriptor","VPCNET_STATE","__WEBPACK_EXTERNAL_MODULE__37__","CESInvalidDemensions","uInstanceId","CESInstanceAliasList","CESFilterFieldsDescriptor","CES_STATE","InstanceNames","OrderByKey","IpList","DCFilterFieldsDescriptor","DC_STATE","DirectConnectIds","DCInstanceAliasList","DCInvalidDemensions","directConnectId","directconnectid","DCGInvalidDemensions","directConnectGatewayId","DCGInstanceAliasList","DCGFilterFieldsDescriptor","DCG_STATE","DCXFilterFieldsDescriptor","DCX_STATE","DCXInstanceAliasList","DCXInvalidDemensions","directconnectconnid","directConnectConnId","ECMLBInvalidDemensions","ECMLBInstanceAliasList","ECMLBFilterFieldsDescriptor","QAAPInvalidDemensions","channelId","QAAPInstanceAliasList","QAAPFilterFieldsDescriptor","QAAP_STATE","AccessRegion","RealServerRegion","GroupId","VBCInvalidDemensions","VBCInstanceAliasList","VBCFilterFieldsDescriptor","VBC_STATE","DRegion","SRegion","state","VPNGWInvalidDemensions","vpnGwId","VPNGWInstanceAliasList","VPNGWFilterFieldsDescriptor","VPNGW_STATE","VPNXInvalidDemensions","vpnConnId","VPNXInstanceAliasList","VPNXFilterFieldsDescriptor","VPNX_STATE","WAFFilterFieldsDescriptor","WAF_STATE","WAFInstanceAliasList","WAFInvalidDemensions","CDBFieldsDescriptor","CDB_STATE","InstanceTypes","Vips","SecurityGroupId","PayTypes","TaskStatus","EngineVersions","ZoneIds","CdbErrors","OrderDirection","InitFlag","CDBInstanceAliasList","CDBInvalidDemensions","insttype","LighthouseFilterFieldsDescriptor","LIGHTHOUSE_STATE","instanceIdsChecked","filtersChecked","LIGHTHOUSEInstanceAliasList","LighthouseInvalidDemensions","CFSQueryDescriptor","CFS_STATE","FileSystemId","CFSInstanceAliasList","CFSInvalidDemensions","queueId","queueName","QueueName","CVMFilterFieldsDescriptor","CVM_STATE","CVMInstanceAliasList","CVMValidMetricsT","CVMValidMetrics","PCX_STATE","limit","offset","peeringConnectionName","PCXFieldsDescriptor","PCXInstanceAliasList","RedisFieldsDescriptor","REDIS_STATE","REDISInstanceAliasList","RedisInvalidDemensions","redis_uuid","TSFFieldsDescriptor","TSF_STATE","ApplicationType","MicroserviceType","ApplicationResourceTypeList","ApplicationIdList","TSFInstanceAliasList","TSFInvalidDemensions","applicationid","BWPFilterFieldsDescriptor","BWP_STATE","BandwidthPackageIds","BWPInstanceAliasList","BWPInvalidDemensions","bandwidthPackageId","CDNFilterFieldsDescriptor","CDN_STATE","CDNInstanceAliasList","CDNInvalidDemensions","LBFilterDescriptor","LB_STATE","LBInstanceAliasList","LBInvalidDemensions","MONGODBFieldsDescriptor","MONGODB_STATE","InstanceType","ClusterType","MONGODBInstanceAliasList","MONGODBInvalidDemensions","NATGATEWAYInstanceAliasList","NATGatewayFilterFieldsDescriptor","NATGATEWAY_STATE","NatGatewayIds","NATInvalidDemensions","natId","OVCDNFilterFieldsDescriptor","OVCDN_STATE","OVCDNInstanceAliasList","OVCDNInvalidDemensions","__WEBPACK_EXTERNAL_MODULE__62__","responseField","getEnvironmentNameList","LoadBalancerType","RegionMap","keyBy","RegionInfoSet","RegionDescription","rawSet","getZones","ZoneSet","ZoneName","ZoneId","ZoneState","getConsumerList","MapInfoList","TopicAliasList","consumerGroupCache","getConsumerGroups","groupname","topicid","consumerGoup","GroupDetailList","uniqBy","SubscribedInfos","ConsumerGroupName","SubscribedInfo","partitions","sub","Partition","formatTopicVarDisplay","topic","topicAlias","topicalias","group","par","ListenerAliasList","ServerAliasList","tagret","getListenerList","LoadBalancerId","formatVariableDisplay","aliasList","getServerList","listenerId","ListenerIds","Listeners","prev","Rules","Targets","elem","listenAlias","lisId","listenerid","serverprivateip","serveralias","serversList","chain","dims","Set","fetchAllSubscription","SubscriptionId","cosURL","Buckets","BucketName","bucket","regionList","DeviceClassSet","Product","extraActionMap","DescribeDCDBShards","pickKey","DescribeDCDBInstanceNodeInfo","RegionList","act","getDiskList","instanceObj","getQueueNameList","getFleetList","ClusterName","fetchAllNodes","NodeFlag","resultT","doRequestV2","totalCount","getVpcId","VpcSet","getVpcIds","MonitorVersion","getInstanceNodeInfo","nodetype","ndoeTypeIndex","getVersions","Versions","FunctionName","RegionInfos","DescribeTopics","DescribeEnvironments","getAllMetrics","public_metrics","private_metrics","init","getInstanceId","getServiceFn","getExtraDropdown","sQuery","onRefresh","onChecked","srcField","dstField","bwpQuery","BWPQueryCtrl","cdbQuery","CDBQueryCtrl","cdnQuery","CDNQueryCtrl","ExtraFields","scfQuery","SCFQueryCtrl","onInstanceChange","getExtraFields","CKAFKAQueryCtrl","element","attrs","$watch","newValue","oldValue","onFieldChange","getVariableId","variableData","getServersDropdown","getServerPortDropdown","serverPortList","cacheMap","getTopicName","onExtraFieldChange","datas","CmqTopicQueryCtrl","cvmQuery","CVMQueryCtrl","dropdownTextConfig","actionMaps","lbQuery","LBQueryCtrl","lighthouseQuery","LighthouseQueryCtrl","mongodbQuery","MongoDBQueryCtrl","some","dataT","mrQuery","MrQueryCtrl","natGatewayQuery","NatGatewayQueryCtrl","ovCdnQuery","OVCDNQueryCtrl","pcxQuery","PCXQueryCtrl","redisQuery","RedisQueryCtrl","clearExtrasAlias","redisMemQuery","RedisMemQueryCtrl","evId","tsfQuery","TSFQueryCtrl","VBCQueryCtrl","webpackContext","req","webpackContextResolve","_class","getNamespaces","namespaces","getCascaderNamespaces","validServices","getSelectedServices","promises","optionsTemp","promiseTemp","Done","results","getListeners","errorMsg","upperFirst","fnName","argu","hexTable","array","arrayToObject","source","plainObjects","refs","j","pop","compacted","compactQueue","decode","decodeURIComponent","encode","string","out","charCodeAt","charAt","isBuffer","constructor","isRegExp","merge","allowPrototypes","mergeTarget","percentTwenties","formatters","RFC1738","RFC3986","SPQueryCtrl","_config","queryDDO","formats","utils","arrayPrefixGenerators","brackets","indices","repeat","toISO","Date","toISOString","delimiter","encoder","encodeValuesOnly","serializeDate","skipNulls","strictNullHandling","generateArrayPrefix","sort","allowDots","formatter","objKeys","opts","TypeError","arrayFormat","joined","addQueryPrefix","arrayLimit","decoder","depth","parameterLimit","parseKeys","givenKey","child","segment","exec","parent","leaf","root","cleanRoot","parseInt","isNaN","parseArrays","parseObject","ignoreQueryPrefix","tempObj","cleanStr","Infinity","parts","part","bracketEqualsPos","pos","parseValues","newObj","tcFolder","folderId","getFolderId","folders","post","folder","oldPost","pluginId","location","pathname","backendInterceptor","$injector","$q","appEditCtrl","setPostUpdateHook","postUpdate","appModel","configured","enabled","datasources","ds","moveToFolder","dashbaordUid","dashboard","overwrite","reviseDashboard","pmlist","templateUrl"],"mappings":"6JACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QA0Df,OArDAF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,IAIjBlC,EAAoBA,EAAoBmC,EAAI,K,gBClFrDhC,EAAOD,QAAUkC,G,yqDC2BjB,aAyCE,WAAYC,EAAkBC,EAAYC,GAtC1C,KAAAC,kBAA2B,GAC3B,KAAAC,gBAA4B,GAM5B,KAAAC,UAAsB,GACtB,KAAAC,gBAEI,GACJ,KAAAC,YAAyB,GAQzB,KAAAC,uBAA0D,GAC1D,KAAAC,mBAA8C,GAmB5CC,KAAKV,iBAAmBA,EACxBU,KAAKT,WAAaA,EAClBS,KAAKR,YAAcA,EACnBQ,KAAKC,IAAMX,EAAiBW,IAC5BD,KAAKE,UAAYZ,EAAiBa,UAAY,IAAID,UAAY,GAsgBlE,OApjBA,0DAiDE,sBAAI,wBAAS,C,IAAb,WAEE,OAAOF,KAAKI,WAAa,YAAwBJ,KAAKK,U,gCAIxD,YAAAC,cAAA,SAAcC,EAAeC,GAA7B,I,EAAA,OACMC,EAAS,GACPC,EAAQH,EAASI,oBAOvB,OANgB,QAAhB,EAAAX,KAAKH,mBAAW,SAAEe,SAAQ,SAACC,GACzB,IAAMC,EAAY,EAAKC,YAAYP,EAAOK,IACtCC,IAA2C,IAA9BJ,EAAMM,QAAQF,KAC7BL,GAAU,aAAMK,OAGbL,GAIT,YAAAQ,cAAA,SAAcV,EAA+BG,GAC3C,IAAMD,EAASF,EAASG,GACxB,OAAOQ,MAAMC,QAAQV,GAAUA,EAAOW,OAASX,GAGjD,YAAAY,iBAAA,SAAiBd,EAA+Be,EAAgCC,GAAhF,WAEE,OAAID,EACKA,EAAWE,QAAQ,gBAAgB,SAACC,EAAGC,GAC5C,OAAKA,GAAM,EAAKC,kBAAkBC,SAASF,GAGpC,EAAKT,cAAcV,EAAUmB,GAF3B,MAKN1B,KAAKiB,cAAcV,EAAUgB,IAKhC,YAAAM,gBAAN,SAAsBC,EAAoBC,G,mIAGxC,OAFQC,EAA6CF,EAAvC,OAAEG,EAAqCH,EAA5B,UAAEI,EAA0BJ,EAAnB,QAAE,EAAiBA,EAAL,QAAZK,OAAO,IAAG,KAAE,EAC1CC,EAA6DN,EAAvD,OAAE,EAAqDA,EAAL,cAAhDO,OAAa,IAAG,EAAArC,KAAKsC,mBAAmB/B,SAAQ,EACzDyB,GAAWC,EAKID,EAAOO,MAAM,sBAE/B,GAAOvC,KAAKwC,eAGdJ,EAASpC,KAAKe,YAAYqB,KAGZJ,EAAOO,MAAM,uBACV,GAAMvC,KAAKyC,qBAAqBL,EAAQD,IADrD,MAZF,GAAO,I,OAgCP,OAnBM1B,EAAS,SACf4B,EAAgBrC,KAAK2B,kBAAkBC,SAASS,GAAiBA,EAAgBrC,KAAKsC,mBAAmB/B,SAEnGmC,EAAMjC,EAAOkC,SAAQ,SAACC,GAC1B,IAAMC,EAAW,EAAKxB,iBAAiBuB,EAAMV,EAASG,GAKtD,OAHAO,EAAKjC,oBAAsBkC,EAGtBD,EAAKP,GACH,CACL,CACES,KAAMD,EACNvE,MAAOsE,EAAK,EAAKN,mBAAmB/B,YAJP,MAUnC,GAAM,IAAgBwC,YAAY/C,KAAKK,QAASI,I,OAChD,OADA,SACA,GAAOiC,G,UAILnC,EAAWP,KAAKe,YAAYe,EAAK,UACjC,IAAEX,QAAQZ,KAAWA,EAAWA,EAAS,MACzC6B,GAAUJ,GAAUzB,GAApB,Y,iBAGsB,O,sBAAA,GAAM,IAAgByC,YAAYhD,KAAKK,U,cAAvD4C,EAAgB,SAGtB1C,EAAyG,QAA9F,MAAE2C,UAAUD,EAAcE,MAAK,SAACP,GAAS,OAAAA,EAAK,EAAKN,mBAAmB/B,YAA7B,aAAqD,QAAI,G,0CAG/G,SAAOP,KAAKoD,gBAAgBpB,EAAQI,EAAQ7B,EAAUuB,I,OAGxD,SAAOuB,QAAQC,QAAQ,aAGnB,YAAAF,gBAAN,SAAsBpB,EAAgBI,EAAgB7B,EAAeuB,G,mEACnE,SAAO,WAkBH,YAAAyB,iBAAN,SAAuBC,EAASC,EAAKC,EAAiBlD,EAAQH,EAASsD,G,yHAC5D/E,G,uFACHgF,EAAShF,GACPiF,EAAa,EAAKC,mBAAqB,EAAKC,qBAAoB,EAAOvD,EAAOH,KACrEzB,KAEbgF,EAASC,EAAWjF,GACpB6E,EAAI7E,GAAO6E,EAAIG,IAGbI,EAAgB,EAAKjD,YAAYP,EAAOH,GAASuD,KACjD,EAAK9D,uBAAuB8D,GAA5B,YACI,EAKF,EAAK9D,uBAAuB8D,GAJ9BK,EAAgB,mBAChB,IAAAC,uBAAe,IAAG,EAAAN,EAAM,EACxB,IAAAO,aACAC,EAAY,eAEV,EAAW,YAAgB,EAAK5E,YAAamE,EAAQU,WAAY7D,EAAOH,GAAS6D,IAAkB,GACnGI,EAAsB,G,8CAExBA,EAAiBC,KAAKC,MAAM,G,aAGP,O,SADjB,IAAErD,QAAQ,KAAW,EAAW,EAAS,IACxB,GAAM,IAAgBsD,gBAAgB,EAAKpE,QAAS4D,I,cAAnES,EAAe,SAErBJ,EAMI,QALF,EAAAI,aAAY,EAAZA,EAAcvB,MAAK,SAACP,GAClB,OAAI,IAAEzB,QAAQyB,EAAK,IACVA,EAAK,GAAc,KAAO,EAE5BA,EAAK,KAAkB,YAC9B,QAAI,G,oBAEJ+B,EAAmB,IAAEC,SAASN,IAAmB,IAAEO,SAASP,GAE5DzB,EAAWY,EAAI9C,qBACfmE,EAAaH,EAAmBL,EAAiBA,EAAe3D,uBAClB,IAAlCkC,EAAS7B,QAAQ8D,KACjCrB,EAAI9C,qBAAuB,aAAMmE,IAGnCd,EAAgBW,EAAmBL,EAAiBA,aAAc,EAAdA,EAAiBF,GAAgBR,G,aAErFH,EAAI9C,qBAAuB,EAAKL,cAAcmD,EAAKjD,EAAOH,I,wBAI5DoD,EAAI7E,GAAO,EAAKmG,iBAAiBtB,EAAKG,EAAQI,GAE1C,EAAKrE,UAAUqF,OAAS,GAC1B,EAAKrF,UAAUiB,SAAQ,SAACqE,GACtBxB,EAAIwB,GAAQxB,EAAI7E,MAGpB8E,EAAgB9E,GAAO,CAAEsG,KAAMtG,EAAKuG,MAAO1B,EAAI7E,I,kBAtD1B,EAAP,EAAA4E,E,wBAAA,YAAP5E,EAAG,K,KAAHA,KAAc,M,wCAAP,I,aAwDhB,SAAO8E,WAET,YAAAqB,iBAAA,SAAiBtB,EAA0B7E,EAAaoF,GACtD,IAAIoB,EAAS3B,EAAI7E,GAIjB,OAHI,IAAEyG,QAAQD,IAAWpF,KAAKD,mBAAmBnB,KAC/CwG,EAAS3B,EAAIzD,KAAKD,mBAAmBnB,KAEhCwG,UAAUpB,GAEnB,YAAAlC,MAAA,SAAM6B,GAAN,WACQtD,EAAUL,KAAKK,QAGfiF,EAAU,IAAEC,OAAO5B,EAAQ6B,SAAS,SAAC5C,GAEzC,SACgB,IAAdA,EAAK6C,OACH7C,EAAKX,YACLW,EAAKvC,GAASqF,YACf,IAAEL,QAAQ,YAAgB,EAAK7F,YAAamE,EAAQU,WAAYzB,EAAKvC,GAAS+B,QAAQ,KACtF,IAAEiD,QAAQ,YAAgB,EAAK7F,YAAamE,EAAQU,WAAYzB,EAAKvC,GAASE,UAAU,QAE1FoF,KAAI,SAAOnF,GAAM,qC,mFAII,OADlBoF,EAAY,YAAgB5F,KAAKR,YAAamE,EAAQU,WAAY7D,EAAOH,GAASE,UAAU,GAC1E,GAAM,IAAgByC,YAAYhD,KAAKK,U,OAAvD4C,EAAgB,SAEtB2C,EAAY,GAAGC,OAAOD,GAAWD,KAAI,SAACG,G,MACpC,IACE,OAAOvB,KAAKC,MAAMsB,GAClB,MAAOC,GACP,OAAiG,QAA1F,MAAE7C,UAAUD,EAAcE,MAAK,SAACP,GAAS,OAAAA,EAAK,EAAKN,mBAAmB/B,YAA7B,aAAiD,QAAI,OAGnG6B,EAAS,YAAgBpC,KAAKR,YAAamE,EAAQU,WAAY7D,EAAOH,GAAS+B,QAAQ,GACvF4D,EAAgB,G,EACG,EAAT,EAAAJ,E,wBAAA,YAAPnC,EAAG,KACJC,EAAkBlD,EAAOH,GAASqD,gBAElCF,EAAUzF,OAAOkI,KAAKvC,GACV,GAAM1D,KAAKuD,iBAAiBC,EAASC,EAAKC,EAAiBlD,EAAQH,EAASsD,KAJvE,M,OAIjBuC,EAAY,SAElBF,EAASG,KAAK,CAAC,CAAEC,WAAY,YAAcF,M,wBAN7B,I,aAgBhB,OARMG,EAAO,CACXC,UAAW,IAAO3C,EAAQ4C,MAAMC,MAAMC,SACtCC,QAAS,IAAO/C,EAAQ4C,MAAMI,IAAIF,SAClCG,OAAQpG,EAAOH,GAASwG,QAAU,IAClCC,UAAW,IAAEnE,QAAQqD,GACrB5F,UAAWI,EAAOyB,UAClB8E,WAAYvG,EAAOH,GAASqF,YAE9B,GAAO1F,KAAKgH,eAAeX,EAAMjE,EAAQwD,cAG3C,OAAuB,IAAnBN,EAAQN,OACH,GAGF3B,QAAQ4D,IAAI3B,GAChB4B,MAAK,SAACC,GACL,OAAO,IAAEC,QAAQD,MAFd,OAIE,SAACpB,GACN,MAAO,OAGb,YAAAsB,qBAAA,SAAqBC,GACnB,MAAO,IAET,YAAAvD,qBAAA,SAAqBuD,EAAc9G,GACjC,MAAO,IAGT,YAAAO,YAAA,SAAYwG,GACV,IAAMC,EAAKxH,KAAKR,YAAYgC,SAAS+F,GAAU,IAAIE,QAC7CC,EAASF,EAAGjF,MAAM,iBAExB,OAAImF,EACKA,EAAO,GAAGC,MAAM,KAElBH,GAST,YAAAR,eAAA,SAAeY,EAAQxF,EAAQwD,GAC7B,IAAMiC,EAAc,YAAkBzF,EAAQ,WAC9C,OAAOpC,KAAK8H,UACV,CACE7H,IAAKD,KAAKC,IAAM4H,EAAYE,KAC5B1B,KAAMuB,GAERC,EAAYxH,QACZ,CAAE2B,OAAQ,iBAAkBI,OAAM,IAClC8E,MAAK,SAACc,GACN,OAAO,YAAiBA,EAAUpC,OAKtC,YAAApD,WAAA,WACE,OAAOxC,KAAK8H,UACV,CACE7H,IAAKD,KAAKC,IAAM,QAElB,MACA,CAAE+B,OAAQ,oBACVkF,MAAK,SAACc,GACN,OAAO,IAAEzC,OACP,IAAEI,IAAIqC,EAASC,WAAa,IAAI,SAACrF,GAC/B,MAAO,CACLE,KAAMF,EAAKsF,WACX5J,MAAOsE,EAAKuF,OACZC,YAAaxF,EAAKwF,iBAGtB,SAACxF,GAAS,oBAAAA,EAAKwF,mBAKrB,YAAAC,WAAA,SAAWjG,GAAX,gBAAW,IAAAA,MAAA,gBACT,IAAMyF,EAAc,YAAkBzF,EAAQ,WAC9C,OAAOpC,KAAK8H,UACV,CACE7H,IAAKD,KAAKC,IAAM4H,EAAYE,KAC5B1B,KAAM,CACJjG,UAAWJ,KAAKiC,YAGpB4F,EAAYxH,QACZ,CAAE+B,OAAM,EAAEJ,OAAQ,wBAClBkF,MAAK,SAACc,GACN,IAAMtF,EAAM,IAAE6C,OACZ,IAAEA,OAAOyC,EAASM,WAAa,IAAI,SAAC1F,GAAS,QAAEA,EAAKxC,YAAc,EAAK6B,YAAcW,EAAxC,gBAEzC2F,EAAc,EAAK3I,gBAAgB4I,aACzC,OAAID,EACK7F,EAAIiD,KAAI,SAAC/C,GAAS,OAAA2F,EAAA,MAEpB7F,MAIX,YAAA+F,aAAA,SAAarG,EAAQwF,QAAA,IAAAA,MAAA,IACb,MAKF5H,KAAK0I,mBAAqB1I,KAAKqH,qBAAqBrH,MAJtD,IAAAK,eAAO,IAAG,EAAAL,KAAKK,QAAO,EACtB2B,EAAM,SACS2G,EAAK,gBACpBC,EAAW,cAEbhB,EAAS,EAAH,CAAKiB,OAAQ,EAAGC,MAAO,KAAQlB,GACrC,IAAMC,EAAc,YAAkBzF,EAAQ/B,GAC9C,OAAOL,KAAK8H,UACV,CACE7H,IAAKD,KAAKC,IAAM4H,EAAYE,KAC5B1B,MAAMuC,aAAW,EAAXA,EAAaG,SAAUH,EAAYG,QAAQnB,GAAUA,GAE7DC,EAAYxH,QACZ,CAAE+B,OAAM,EAAEJ,OAAM,IAChBkF,MAAK,SAACc,G,QAOFvH,EALJ,OAAIuH,aAAQ,EAARA,EAAUgB,OAELhB,GAKLW,IACFlI,EAAqE,QAA5D,EAAsB,QAAtB,MAAEvC,IAAI8J,EAAUW,UAAM,QAAI,IAAEzK,IAAI8J,EAAU,iBAAUW,WAAQ,QAAI,KAIvEC,aAAW,EAAXA,EAAaZ,YACfvH,EAASmI,EAAYZ,SAASvH,IAEzBA,OAIX,YAAAgC,qBAAA,SAAqBL,EAAQN,GAA7B,gBAA6B,IAAAA,MAAA,IAC3B,IAAIrB,EAAgB,GACdmH,EAAS,EAAH,KAAQ9F,GAAU,CAAE+G,OAAQ,EAAGC,MAAO,MAE5C,EAKF9I,KAAK0I,mBAAqB1I,KAAKqH,qBAAqBrH,MAJtD,IAAAK,eAAO,IAAG,EAAAL,KAAKK,QAAO,EACtB2B,EAAM,SACS2G,EAAK,gBACpBC,EAAW,cAGPf,EAAc,YAAkBzF,EAAQ/B,GAC9C,OAAOL,KAAK8H,UACV,CACE7H,IAAKD,KAAKC,IAAM4H,EAAYE,KAC5B1B,MAAMuC,aAAW,EAAXA,EAAaG,SAAUH,EAAYG,QAAQnB,GAAUA,GAE7DC,EAAYxH,QACZ,CAAE+B,OAAM,EAAEJ,OAAM,IAChBkF,MAAK,SAACc,G,cACNvH,EAAqE,QAA5D,EAAsB,QAAtB,MAAEvC,IAAI8J,EAAUW,UAAM,QAAI,IAAEzK,IAAI8J,EAAU,iBAAUW,WAAQ,QAAI,GACzE,IAAMM,EAAwF,QAAhF,EAAwC,QAAxC,EAAmB,QAAnB,EAAAjB,EAASkB,kBAAU,QAAIlB,EAASmB,gBAAQ,QAAI,IAAEjL,IAAI8J,EAAU,4BAAoB,QAAI,EAClG,GAAIvH,EAAOuE,QAAUiE,EACnB,OAAOxI,EAEP,IAAM2I,EAAQ,YAAYH,EAAO,KAC3B,EAAkB,GAIxB,OAHA,IAAErI,QAAQwI,GAAO,SAACxG,GAChB,EAASuD,KAAK,EAAKsC,aAAarG,EAAM,OAAOQ,GAASd,QAEjDuB,QAAQ4D,IAAI,GAChBC,MAAK,SAACC,GAIL,OAHA,IAAEvG,QAAQuG,GAAW,SAACvE,GACpBnC,EAAS,IAAEoF,OAAOpF,EAAQmC,MAErBnC,KALJ,OAOE,SAACsF,GACN,OAAOtF,SAOjB,YAAA4I,mBAAA,SAAmBV,GACjB,OAAOA,GAASA,EAAM3D,OAAS,GAGjC,YAAAsE,eAAA,sBAIE,OAAKtJ,KAAKqJ,mBAAmBrJ,KAAKE,UAQ3BmD,QAAQ4D,IAAI,CACjBjH,KAAKwC,aACLxC,KAAKqI,aAYLrI,KAAKyI,aAAa,eAAgB,CAChCI,OAAQ,EACRC,MAAO,MAGR5B,MAAK,SAACC,GACL,IAAMoC,EAAS,IAAErL,IAAIiJ,EAAW,YAAa,IACvCqC,EAAa,IAAEtL,IAAIiJ,EAAW,YAAa,IAC3CsC,EAAa,IAAEvL,IAAIiJ,EAAW,YAAa,IAI3CuC,EAAc,IAAExL,IAAIqL,EAAQ,OAAQ,IACpCI,EAAkB,IAAEzL,IAAIsL,EAAY,OAAQ,IAC5CI,EAAkB,IAAE1L,IAAIuL,EAAY,OAAQ,IAClD,GAAIC,GAAeC,GAAmBC,EAAiB,CACrD,IAAMC,EAAkB,GACpBH,GACFG,EAAS1D,KAAK,IAAEjI,IAAIqL,EAAQ,SAE1BI,GACFE,EAAS1D,KAAK,IAAEjI,IAAIsL,EAAY,SAE9BI,GACFC,EAAS1D,KAAK,IAAEjI,IAAIuL,EAAY,SAElC,IAAMK,EAAU,IAAE1I,KAAK,IAAE2I,QAAQ,IAAEC,KAAKH,IAAY,MACpD,MAAO,CACLxJ,QAAS,EAAKA,QACd4J,OAAQ,QACRH,QAAO,GAGT,MAAO,CACL7H,UAAW,EAAKA,UAChB5B,QAAS,EAAKA,QACd4J,OAAQ,UACRH,QAAS,mCAA4B,EAAKzJ,QAAO,aACjD6J,MAAO,cApDR,OAwDE,SAACnE,GACN,IAAI+D,EAAU,UAAG,EAAKzJ,QAAO,aAW7B,OAVAyJ,GAAW/D,EAAMoE,WAAapE,EAAMoE,WAAa,KAAO,GACpD,IAAEjM,IAAI6H,EAAO,kBAAmB,IAClC+D,GAAW/D,EAAMM,KAAKN,MAAMqE,KAAO,KAAOrE,EAAMM,KAAKN,MAAM+D,QAClD,IAAE5L,IAAI6H,EAAO,aAAc,IACpC+D,GAAW/D,EAAMM,KAAKN,MACb,IAAE7H,IAAI6H,EAAO,OAAQ,IAC9B+D,GAAW/D,EAAMM,KAEjByD,GAAW,4BAAqB,EAAKzJ,QAAO,aAEvC,CACLA,QAAS,EAAKA,QACd4J,OAAQ,QACRH,QAASA,MA9EN,CACLzJ,QAASL,KAAKK,QACd4J,OAAQ,QACRH,QAAS,8CAgFT,YAAAhC,UAAN,SAAgBnE,EAAStD,EAASgK,G,YAAA,IAAAA,MAAA,I,mFACtB,SAAM,YACd1G,EACAtD,EACAgK,EACArK,KAAKE,SACLF,KAAKV,iBAAiBgL,GACtBtK,KAAKT,a,OAEP,OARAoE,EAAU,SAQV,GAAO3D,KAAKT,WACTgL,kBAAkB5G,GAClBuD,MAAK,SAACc,GACL,OAAO,IAAE9J,IAAI8J,EAAU,gBAAiB,OAHrC,OAKE,SAACjC,GACN,MAAMA,cAGd,EApjBA,I,0nDCpBA,WAyBE,WAAYpC,GACF,IAAAzD,EAA6FyD,EAArF,SAAEtD,EAAmFsD,EAA5E,QAAE3B,EAA0E2B,EAApE,OAAE6G,EAAkE7G,EAA9D,KAAE8G,EAA4D9G,EAArD,QAAE,EAAmDA,EAAvC,QAAZxB,OAAO,IAAG,KAAE,EAAEC,EAAqCuB,EAA/B,OAAEpE,EAA6BoE,EAAnB,WAAE+G,EAAiB/G,EAAL,aAChG3D,KAAKE,SAAWA,EAEhBF,KAAKK,QAAUA,EACfL,KAAKgC,OAASA,EACdhC,KAAKwK,KAAOA,EACZxK,KAAKyK,QAAUA,EACfzK,KAAKmC,QAA6B,iBAAZA,EAAuBA,EAAUoC,KAAKoG,UAAUxI,GACtEnC,KAAKoC,OAASA,EACd,IAAMwI,EAAU,MAASC,MACzB7K,KAAK8K,UAAYF,EAAQG,OACzB/K,KAAKgL,KAAOJ,EAAQnE,OAAO,cAC3BzG,KAAKT,WAAaA,EAClBS,KAAK0K,aAAeA,EAoDxB,OAjDQ,YAAAO,UAAN,W,mEACE,SAAOjL,KAAKkL,4BAGR,YAAAA,kBAAN,W,oHACMxI,EAAsE,G,iBAE3D,O,sBAAA,GAAM1C,KAAKT,WAAWgL,kBAAkB,CACnDtK,IAAK,2BAAoBD,KAAK0K,aAAY,sBAC1CS,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B/E,KAAM,CACJgF,KAAMrL,KAAKwK,KACXc,QAAStL,KAAKK,QACdkL,QAASvL,KAAKyK,QACde,OAAQxL,KAAKgC,OACbmG,OAAQnI,KAAKoC,OACbqJ,UAAWzL,KAAK8K,UAChBY,OAjEgB,OAkEhBC,IAjEW,IAkEXC,MAjEmB,GAkEnBC,KAAM7L,KAAKmC,QACX2J,QAAS,CACP,eAnEQ,mBAoERtB,KAAMxK,KAAKwK,U,cAjBXuB,EAAO,SAqBbrJ,EAAMqJ,EAAK1F,K,0CAmBb,OAjBQ2F,EAAmCtJ,EAAtB,cAAEuJ,EAAoBvJ,EAAf,MAAEwJ,EAAaxJ,EAAL,SAChCyJ,GAAqE,QAApD,EAAyC,QAAzC,EAA+B,QAA/B,EAACC,OAAeC,uBAAe,eAAEC,gBAAQ,eAAEC,iBAAS,eAAE9B,UAAW,QAgBxF,GAfgB,EAAH,KACX+B,cAAeR,EACf,eA9Ec,mBA+Ed,cAAehM,KAAKgC,OACpB,iBAAkBhC,KAAK8K,UAAU2B,WACjC,eAAgBzM,KAAKyK,QACrB,qBAAsB,aAAM0B,EAAc,kBAAU,UAChDnM,KAAKoC,QAAU,CACjB,cAAepC,KAAKoC,SAElB6J,GAAS,CACX,aAAcA,IACd,CACFC,SAAUA,aAIhB,EA3FA,G,+0CCGA,WAOE,WAAYQ,GAAZ,gBAAY,IAAAA,MAAA,IANZ,KAAAA,SAAgB,CACd3E,KAAM,gBACNoD,OAAQ,QAWV,KAAAwB,oBAAsB,gD,2BACpB,SAAO3M,KAAK4M,iCAPZ5M,KAAK0M,SAAW3O,OAAO8O,OAAO7M,KAAK0M,SAAUA,GAC7C1M,KAAK0M,SAASI,UAAY,GAC1B9M,KAAKT,WAAamN,EAASnN,WAC3BS,KAAK0K,aAAegC,EAAShC,aAgCjC,OAzBQ,YAAAkC,uBAAN,W,8GACMlK,EAA+E,G,iBAIpE,O,sBAFL2D,EAASrG,KAAK0M,SAAV,KACNvK,EAA0B,iBAATkE,EAAoBA,EAAO9B,KAAKoG,UAAUtE,GACpD,GAAMrG,KAAKT,WAAWgL,kBAAkB,CACnDtK,IAAK,2BAAoBD,KAAK0K,aAAY,sBAC1CS,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B/E,KAAM,CACJgF,KAAMrL,KAAK0M,SAASlC,KACpBgB,OAAQxL,KAAK0M,SAAS1K,OACtBuJ,QAASvL,KAAK0M,SAASjC,QACvBtC,OAAQnI,KAAK0M,SAAStK,OACtBsJ,OAAQ1L,KAAK0M,SAASvB,OACtBQ,IAAK3L,KAAK0M,SAAS3E,KACnB6D,MAAO,GACPC,KAAM1J,M,cAZJ4J,EAAO,SAebrJ,EAAMqJ,EAAK1F,K,0CAGb,OADQ0B,EAAsCrF,EAAlC,KAAEqK,EAAgCrK,EAArB,YAAE8H,EAAmB9H,EAAf,KAAEwJ,EAAaxJ,EAAL,SACzC,GAAO,CAAEsK,YAAaD,EAAahF,KAAMA,EAAMyC,KAAMA,EAAM0B,SAAUA,YAEzE,EA3CA,G,qxECFae,EAAiB,EAAY3C,GAGpC4C,EAAiB,CAAC,kBAAmB,mBACrCC,EAAoB,CACxBC,IAAK,CACH/M,QAAS,MACToK,QAAS,aACT1C,KAAM,OACNyC,KAAM,2BAGR6C,QAAS,CACPhN,QAAS,UACToK,QAAS,aACT1C,KAAM,WACNyC,KAAM,+BAGR8C,IAAK,CACHjN,QAAS,MACToK,QAAS,aACT1C,KAAM,OACNyC,KAAM,2BAGR+C,IAAK,CACHlN,QAAS,MACToK,QAAS,aACT1C,KAAM,OACNyC,KAAM,2BAGRgD,IAAK,CACHnN,QAAS,MACToK,QAAS,aACT1C,KAAM,OACNyC,KAAM,2BAGRiD,IAAK,CACHpN,QAAS,MACToK,QAAS,GACT1C,KAAM,OACNyC,KAAM,sBAGRkD,IAAK,CACHrN,QAAS,MACToK,QAAS,aACT1C,KAAM,OACNyC,KAAM,2BAGRmD,QAAS,CACPtN,QAAS,UACToK,QAAS,aACT1C,KAAM,WACNyC,KAAM,+BAGRoD,IAAK,CACHvN,QAAS,MACToK,QAAS,aACT1C,KAAM,OACNyC,KAAM,2BAGRqD,SAAU,CACRxN,QAAS,WACToK,QAAS,aACT1C,KAAM,YACNyC,KAAM,gCAGRsD,IAAK,CACHzN,QAAS,MACToK,QAAS,aACT1C,KAAM,OACNyC,KAAM,2BAGRuD,MAAO,CACL1N,QAAS,QACToK,QAAS,aACT1C,KAAM,SACNyC,KAAM,6BAERwD,IAAK,CACH3N,QAAS,MACToK,QAAS,aACT1C,KAAM,OACNyC,KAAM,2BAERyD,IAAK,CACH5N,QAAS,MACToK,QAAS,aACT1C,KAAM,OACNyC,KAAM,2BAER0D,OAAQ,CACN7N,QAAS,SACToK,QAAS,aACT1C,KAAM,UACNyC,KAAM,8BAGR2D,GAAI,CACF9N,QAAS,KACToK,QAAS,aACT1C,KAAM,MACNyC,KAAM,0BAGR4D,QAAS,CACP/N,QAAS,UACToK,QAAS,aACT1C,KAAM,WACNyC,KAAM,+BAGR6D,UAAW,CACThO,QAAS,YACToK,QAAS,aACT1C,KAAM,aACNyC,KAAM,iCAGR8D,GAAI,CACFjO,QAAS,KACToK,QAAS,aACT1C,KAAM,MACNyC,KAAM,0BAER+D,MAAO,CACLlO,QAAS,QACToK,QAAS,aACT1C,KAAM,SACNyC,KAAM,6BAERgE,MAAO,CACLnO,QAAS,QACToK,QAAS,aACT1C,KAAM,SACNyC,KAAM,6BAERiE,KAAM,CACJpO,QAAS,OACToK,QAAS,aACT1C,KAAM,QACNyC,KAAM,4BAGRkE,GAAI,CACFrO,QAAS,KACToK,QAAS,aACT1C,KAAM,MACNyC,KAAM,0BAGRmE,IAAK,CACHtO,QAAS,MACToK,QAAS,aACT1C,KAAM,OACNyC,KAAM,2BAGRoE,IAAK,CACHvO,QAAS,MACToK,QAAS,aACT1C,KAAM,OACNyC,KAAM,2BAERqE,IAAK,CACHxO,QAAS,MACToK,QAAS,aACT1C,KAAM,OACNyC,KAAM,2BAGRsE,UAAW,CACTzO,QAAS,YACToK,QAAS,aACT1C,KAAM,aACNyC,KAAM,iCAGRuE,KAAM,CACJ1O,QAAS,OACToK,QAAS,aACT1C,KAAM,QACNyC,KAAM,4BAGRwE,WAAY,CACV3O,QAAS,aACToK,QAAS,aACT1C,KAAM,cACNyC,KAAM,kCAERyE,KAAM,CACJ5O,QAAS,OACToK,QAAS,aACT1C,KAAM,QACNyC,KAAM,4BAER0E,KAAM,CACJ7O,QAAS,OACToK,QAAS,aACT1C,KAAM,QACNyC,KAAM,4BAER2E,IAAK,CACH9O,QAAS,MACToK,QAAS,aACT1C,KAAM,OACNyC,KAAM,2BAER4E,IAAK,CACH/O,QAAS,MACToK,QAAS,aACT1C,KAAM,OACNyC,KAAM,2BAER6E,WAAY,CACVhP,QAAS,aACToK,QAAS,aACT1C,KAAM,cACNyC,KAAM,kCAER8E,IAAK,CACHjP,QAAS,MACToK,QAAS,aACT1C,KAAM,OACNyC,KAAM,4BAkBJ+E,EAAc,CAClBvB,IAAK,CACH,kBAAmB,CACjBjG,KAAM,oBACNyC,KAAM,2CAER,kBAAmB,CACjBzC,KAAM,oBACNyC,KAAM,4CAGVyD,IAAK,CACH,kBAAmB,CACjBlG,KAAM,oBACNyC,KAAM,2CAER,kBAAmB,CACjBzC,KAAM,oBACNyC,KAAM,4CAGV0D,OAAQ,CACN,kBAAmB,CACjBnG,KAAM,uBACNyC,KAAM,8CAER,kBAAmB,CACjBzC,KAAM,uBACNyC,KAAM,+CAGVoD,IAAK,CACH,kBAAmB,CACjB7F,KAAM,oBACNyC,KAAM,2CAER,kBAAmB,CACjBzC,KAAM,oBACNyC,KAAM,4CAGVmD,QAAS,CACP,kBAAmB,CACjB5F,KAAM,wBACNyC,KAAM,+CAER,kBAAmB,CACjBzC,KAAM,wBACNyC,KAAM,gDAGVkD,IAAK,CACH,kBAAmB,CACjB3F,KAAM,oBACNyC,KAAM,2CAER,kBAAmB,CACjBzC,KAAM,oBACNyC,KAAM,4CAGV+C,IAAK,CACH,kBAAmB,CACjBxF,KAAM,oBACNyC,KAAM,2CAER,kBAAmB,CACjBzC,KAAM,oBACNyC,KAAM,4CAGVgD,IAAK,CACH,kBAAmB,CACjBzF,KAAM,oBACNyC,KAAM,2CAER,kBAAmB,CACjBzC,KAAM,oBACNyC,KAAM,4CAGV6C,QAAS,CACP,kBAAmB,CACjBtF,KAAM,wBACNyC,KAAM,+CAER,kBAAmB,CACjBzC,KAAM,wBACNyC,KAAM,gDAGVqD,SAAU,CACR,kBAAmB,CACjB9F,KAAM,yBACNyC,KAAM,gDAER,kBAAmB,CACjBzC,KAAM,yBACNyC,KAAM,iDAGVmE,IAAK,CACH,kBAAmB,CACjB5G,KAAM,oBACNyC,KAAM,2CAER,kBAAmB,CACjBzC,KAAM,oBACNyC,KAAM,4CAGVoE,IAAK,CACH,kBAAmB,CACjB7G,KAAM,oBACNyC,KAAM,2CAER,kBAAmB,CACjBzC,KAAM,oBACNyC,KAAM,4CAGV8C,IAAK,CACH,kBAAmB,CACjBvF,KAAM,oBACNyC,KAAM,2CAER,kBAAmB,CACjBzC,KAAM,oBACNyC,KAAM,6CAMN,SAAUgF,EAAkBpN,EAAQ/B,GACxC,cAAa8M,EAAkB9M,IAAY,IAI7C,SAAwB+B,EAAQ/B,GAC9B,IAA2C,IAAvC,IAAEW,QAAQkM,EAAgB9K,GAC5B,MAAO,GAET,OACE,IAAEe,KACA,IAAEA,KAAKoM,GAAa,SAACE,EAAI7Q,GAAQ,OAAAA,IAAA,MACjC,SAAC6Q,EAAI7Q,GAAQ,OAAAA,IAAA,MACV,GAZ4C8Q,CAAetN,EAAQ/B,IAmBtE,SAAUsP,EAAwB1N,GACtC,OAAO,IAAE/D,IACP,IAAEiF,KAAK,YAAU,SAAC9C,GAAY,OAAAA,EAAQ4B,YAAR,KAC9B,WAWE,SAAU2N,EAAiB9N,GAC/B,QAD+B,IAAAA,MAAA,KAC1BA,EACH,MAAO,GAET,IAAMrB,EAAS,GACT6E,EAAU,IAAEqC,MAAM7F,EAAO,KAa/B,OAZA,IAAElB,QAAQ0E,GAAS,SAAC1C,GAClB,IAAMiN,EAAM,IAAElI,MAAM/E,EAAM,KAC1B,GAAI,IAAE6E,KAAK,IAAEvJ,IAAI2R,EAAK,IAAK,KAAM,CAC/B,IAAIC,EAAM,IAAErI,KAAK,IAAEvJ,IAAI2R,EAAK,IAAK,KACjC,IACEC,EAAMvL,KAAKC,MAAMsL,GACjB,MAAOC,IAGTtP,EAAO,IAAEuP,QAAQ,IAAEvI,KAAK,IAAEvJ,IAAI2R,EAAK,IAAK,OAASC,MAG9CrP,EA+CH,SAAUwP,EAAgBzQ,EAAa6E,EAAYsE,EAAOuH,QAAA,IAAAA,OAAA,GACxD,MAnBR,SAA6BC,GAG3B,IAAIC,GAAU,EACRC,GAHNF,EAAUG,OAAOH,GAAW,KAGD5N,MAAM,gBAC7B8N,IACFD,GAAU,EACVD,EAAU,YAAOE,EAAW,GAAE,WAGhC,IAAME,EAAaJ,EAAQ5N,MAAM,0BAKjC,OAJIgO,IACFH,GAAU,EACVD,EAAU,YAAOI,EAAW,GAAE,WAEzB,CAAEJ,QAAO,EAAEC,QAAO,GAIII,CAAoB7H,GAAzCwH,EAAO,UAAEC,EAAO,UACpBK,EAAajR,EAAYgC,QAAQ2O,EAAS9L,GAC9C,GAAI+L,EACF,IACEK,EAAalM,KAAKC,MAAMiM,GACxB,MAAO1K,IAKX,OAHKmK,GAAY,IAAE/O,QAAQsP,KACzBA,EAAa,IAAEvS,IAAIuS,EAAY,IAAK,KAE/BA,EAIH,SAAUC,EAAcC,GAC5B,GAAI,IAAEtL,QAAQsL,GACZ,MAAO,GAET,IAAMC,EAAoB,GAM1B,OALA,IAAEhQ,QAAQ+P,GAAK,SAAC/N,GACK,OAAfA,EAAKuC,YAAiC0L,IAAfjO,EAAKuC,OAAsC,KAAfvC,EAAKuC,OAC1DyL,EAAWzK,KAAK,CAAEjB,KAAMtC,EAAKsC,KAAMC,MAA6B,iBAAfvC,EAAKuC,MAAqBvC,EAAKuC,MAAQ,UAAGvC,EAAKuC,YAG7FyL,EAIH,SAAUE,EAAiB9I,EAAUpC,QAAA,IAAAA,MAAA,IACzC,IAAMmL,EAAe,IAAE7N,UAAU0C,GAE3BoL,EAAa,IAAE9S,IAAI8J,EAAU,aAAc,IACjD,OAAO,IAAErC,IAAIqL,GAAY,SAACC,GAExB,IADA,IAAIC,EAAqB,IAAEhT,IAAI+S,EAAW,uBACjC5T,EAAI,EAAGA,EAAI0T,EAAa/L,OAAQ3H,IACvC,GAAI8T,EAAgBJ,EAAa1T,GAAI,IAAEa,IAAI+S,EAAW,aAAc,KAAM,CACxEC,EAAqBH,EAAa1T,GAAGsD,oBACrCoQ,EAAaK,OAAO/T,EAAG,GACvB,MAGJ,MAAO,CACLmD,OAAQ,UAAGwH,EAASjB,WAAU,cAAMmK,GACpCG,WAAYC,EAAeL,OAMjC,SAASK,EAAeL,GACtB,IAAMM,EAAa,IAAErT,IAAI+S,EAAW,aAAc,IAC5CO,EAAS,IAAEtT,IAAI+S,EAAW,SAAU,IAK1C,OAJeM,EAAW5L,KAAI,SAACmF,EAAW2G,GACxC,MAAO,CAACD,EAAOC,GAAoB,IAAZ3G,MAO3B,SAASqG,EAAgB5Q,EAAUqQ,GAGjC,IAFA,IAAIrO,GAAQ,EAEHlF,EAAI,EAAGA,EAAIuT,EAAW5L,OAAQ3H,IACrC,GAAI,IAAEa,IAAIqC,EAAUqQ,EAAWvT,GAAG6H,MAAMuH,aAAemE,EAAWvT,GAAG8H,MAAMsH,WAAY,CACrFlK,GAAQ,EACR,MAGJ,OAAOA,EAQH,SAAUmP,EAAWpT,GACzB,SAAIA,IAAUA,EAAMiE,MAAM,kBAAmBjE,EAAMiE,MAAM,2BAcrD,SAAgBoP,EAAiBhO,EAAStD,EAASgK,EAAmBnK,EAAUwK,EAAcnL,G,YAA3C,IAAA8K,MAAA,I,+FAUjB,OAThCuH,EAAa,EAAH,KACd1R,SAAQ,EACRiC,QAASwB,EAAQ0C,MAAQ,IACtBgE,GACC,IAAEwH,KAAKrC,EAAkBnF,EAAQjI,QAAU,GAAI/B,GAAU,CAAC,UAAW,OAAQ,aAAe,IAAG,CACnGd,WAAU,EACVmL,aAAY,IAGwB,GADzB,IAAI,EAAKkH,GAC2B3G,a,OAMjD,OANM,EAAgC,SAA9BiB,EAAQ,WAAK4F,EAAY,IAA3B,cACNnO,EAAQyH,QAAUrN,OAAO8O,OAAOlJ,EAAQyH,SAAW,GAAE,KAAO0G,IAC5DnO,EAAQwH,OAAS,OACbe,IACFvI,EAAQ1D,KAAO,aAEjB,GAAO0D,UAWH,SAAgBoO,EACpBpO,EACAtD,EACAgK,EACAnK,EACAwK,EACAnL,G,YALA,IAAAoE,MAAA,SAEA,IAAA0G,MAAA,I,qGAiB8C,OAZxChE,EAAO1C,EAAQ0C,MAAQ,GACvBuL,EAAa,EAAH,KACd1R,SAAQ,EACRmG,KAAI,GACDgE,GACC,IAAEwH,KAAKrC,EAAkBnF,EAAQjI,QAAU,GAAI/B,GAAU,CAAC,OAAQ,aAAe,IAAG,CACxFd,WAAU,EACVmL,aAAY,IAEd/G,EAAQwH,OAAS,OACX6G,EAAO,IAAI,EAAOJ,GACxBjO,EAAQyH,QAAUrN,OAAO8O,OAAOlJ,EAAQyH,SAAW,GAAI,CAAE,eAAgB,sCAC3B,GAAM4G,EAAKrF,uB,OAWzD,OAXM,EAAwC,SAAtCK,EAAW,cAAEjF,EAAI,OAAEyC,EAAI,OAAU,WACzC7G,EAAQ0C,KAAO,IAAGsE,UAAS,SACtBhH,EAAQ0C,MACR2G,GACCxC,GAAQ,CAAEA,KAAMA,KAMtB7G,EAAQ1D,KAAO8H,EACf,GAAOpE,UAGH,SAAUsO,EAAYhJ,EAAWiJ,QAAX,IAAAjJ,MAAA,QAAW,IAAAiJ,MAAA,GAGrC,IAFA,IAAMzR,EAAgB,GAChB0R,EAAMC,KAAKC,KAAKpJ,EAAQiJ,GACrB7U,EAAI,EAAGA,EAAI8U,EAAK9U,IACvBoD,EAAO0F,KAAK,CAAE0C,OAAQqJ,EAAM7U,IAE9B,OAAOoD,EAaF,IAAM6R,GAA6B,G,6tDCrpB1C,SAASC,EAAejU,EAAOkU,GAC7B,OAAOA,EAAO7M,KAAI,SAAC/C,GAAS,WAAE1E,IAAII,EAAOsE,EAAM,IAAE1E,IAAII,EAAO,iBAAUsE,GAA1C,QAGxB,SAAgB6P,EAAgBC,EAAsCC,EAAchK,G,kIAM5E,OALNf,EAAS,EAAH,GAAQ+K,IACb7J,MAAQlB,EAAOkB,OAPP,GAQflB,EAAOiB,OAAsB,QAAb,EAAAjB,EAAOiB,cAAM,QAAI,EAGrB,GAAM6J,EAAQ9K,I,OAQ1B,OARMJ,EAA4B,QAAtB,kBAAsB,QAAI,GAChCgL,EAAStR,MAAMC,QAAQwH,GAASA,EAAQ,CAACA,GAIzCO,EAAyF,QAA5E,EAAqD,QAArD,EAAsC,QAAtC,EAAa,QAAb,EAAA1B,EAAG0B,kBAAU,QAAa,QAAT,EAAA1B,EAAGoL,cAAM,eAAE1J,kBAAU,QAAI1B,EAAG2B,gBAAQ,QAAa,QAAT,EAAA3B,EAAGoL,cAAM,eAAEzJ,gBAAQ,QAAI,EAC7F0J,EAAaN,EAAe/K,EAAIgL,GAEnB,IAAftJ,GAAoB2J,EAAW,GAAG7N,SAAWkE,EAE/C,GAAO2J,IAIHC,EAAQ5J,EAAa2J,EAAW,GAAG7N,OACnC+N,EAAaX,KAAKC,KAAKS,EA1Bd,IA2BTE,EAAS,IAAI9R,MAAM6R,GAAYE,KAAK,GAAGtN,KAAI,SAACuN,EAAGzB,GAEnD,OADA7J,EAAOiB,OAAS,EAAI4I,EACbiB,EAAQ9K,MAIE,GAAMvE,QAAQ4D,IAAI+L,K,OAErC,SAFmB,SAEDG,QAAO,SAACC,EAAKC,GAC7B,IAAMC,EAAQf,EAAec,EAAKb,GAGlC,OADAY,EAAIxS,SAAQ,SAAC2S,EAAM9B,GAAU,OAAA8B,EAAKpN,KAAI,MAAToN,EAAaD,EAAb,OACtBF,IACNP,WASC,SAAUW,EAA6BlO,EAAcmO,GACzD,IAAM7L,EAAc,GACpB,IAAK,IAAEvC,QAAQC,GAAU,CACvBsC,EAAOkB,MAAQ,IAAE5K,IAAIoH,EAAS,QAAS,KAAO,GAC9CsC,EAAOiB,OAAS,IAAE3K,IAAIoH,EAAS,SAAU,IAAM,EAC/CA,EAAU,IAAEoO,KAAKpO,EAAS,CAAC,SAAU,UACrC,IAAM,EAAiB,GA2BvB,GA1BA,IAAE1E,QAAQ0E,GAAS,SAAC1C,EAAWhE,GACzB,IAAEuC,QAAQyB,IACZA,EAAO,IAAEmH,QAAQnH,IACRoC,OAAS,IACZyO,EACF,EAAQtN,KAAK,CAAEjB,KAAMtG,EAAK+U,OAAQ,IAAE3J,KAAKpH,GAAMgR,MAAM,EAAG,KAExDhM,EAAOhJ,GAAO,IAAEoL,KAAKpH,IAGhB,IAAEiR,SAASjR,IAChB,IAAEiC,SAAS,IAAE3G,IAAI0E,EAAM,aAASiO,KAAgB,IAAExL,QAAQ,IAAEnH,IAAI0E,EAAM,aAASiO,MAC7E4C,EACF,EAAQtN,KAAK,CAAEjB,KAAMtG,EAAK+U,OAAQ,IAAEzV,IAAI0E,EAAM,QAAS,IAAIgR,MAAM,EAAG,KAEpEhM,EAAOhJ,GAAO,IAAEV,IAAI0E,EAAM,UAGrBA,SAAgD,KAATA,IAC5C6Q,EACF,EAAQtN,KAAK,CAAEjB,KAAMtG,EAAK+U,OAAQ/Q,IAElCgF,EAAOhJ,GAAOgE,MAIhB6Q,GAAY,EAAQzO,OAAS,EAE/B,OADA4C,EAAOkM,QAAU,EACVlM,EAGX,OAAOA,EAGH,SAAUmM,EAAwBC,GACtC,OAAO,IAAE9V,IACP,IAAEiF,KAAK,YAAU,SAAC9C,GAAY,OAAAA,EAAQA,UAAR,KAC9B,aAIE,SAAU4T,EACdC,GAmBA,OAjBeA,EAASf,QAAO,SAACC,EAAKC,GAC3B,IAAApR,EAAwCoR,EAA/B,UAAEc,EAA6Bd,EAAxB,MAAE,EAAsBA,EAAL,UAAjBe,OAAS,IAAG,EAAAD,EAAK,EAErCE,EAAejB,EAAIjQ,MAAK,SAACP,GAAS,OAAAA,EAAKuR,QAAL,KACxC,OAAKE,GAKLA,EAAaC,MAAMnO,KAAK,CAAEgO,MAAK,EAAE7V,MAAO2D,IACjCmR,IALLA,EAAIjN,KAAK,CAAEgO,MAAOC,EAAW9V,MAAO8V,EAAWE,MAAO,CAAC,CAAEH,MAAK,EAAE7V,MAAO2D,MAChEmR,KAKR,IAGezN,KAAI,SAAC/C,GACrB,OAAsB,IAAtBA,EAAK0R,MAAMtP,OAAe,CAAEmP,MAAOvR,EAAK0R,MAAM,GAAGH,MAAO7V,MAAOsE,EAAK0R,MAAM,GAAGhW,OAAUsE,O,cCvH3FxF,EAAOD,QAAUoX,G,6BCAjB,kCA0He,mBAAC3W,EAAc4W,GAE5B,IAxHoBC,EAoGGC,EAoBjBC,GAxHcF,EAwHaD,EAvHjC,WAIE,WAAYI,EAAQC,GAClB9W,OAAO8O,OAAO+H,EAAQH,GAEtBG,EAAOE,YAAc,SAACnM,GACpB,IAAMtI,EAAU,YAAwBuU,EAAO3S,WAC/C,OAAO2S,EAAOG,WAAWC,kBAAkB3U,EAAS,CAAEsI,MAAK,EAAEvG,OAAQwS,EAAOxS,UAGlF,OAZA,kCAYA,EAZA,IAwHA,IAAW6S,UAAUrX,GArBE8W,EAqBoBC,EApBpC,WACL,MAAO,CACLO,SAvFW,uyFAwFXC,WAAYT,EACZU,SAAU,IACVC,MAAO,CACL7U,OAAQ,IACR8U,WAAY,IACZlT,OAAQ,IACR2S,WAAY,IACZQ,mBAAoB,IACpBC,SAAU,W,8jDCtFZC,EAAmB,CACvB7X,KAAM,sBACNgB,IAAK,WAED8W,EAAY,SAAC3M,EAAc4M,GAC/B,OAAO,IAAItS,SAAa,SAACC,EAASsS,GAChC7M,EAAQ8M,UAAY,SAACC,GACnB,IAAMC,EAAiB,CACrBD,MAAOA,EAAMtV,OAAOC,OACpBsI,QAASA,EAAQtI,OACjBuV,IAAK,QAEP1S,EAAQyS,EAAUJ,GAAQ,SAE5B5M,EAAQkN,QAAU,SAACH,GAAmB,OAAAF,EAAOE,EAAMtV,OAAOuF,OAApB,aAwJ3B,MApJf,WAIE,WAAYmQ,GAHZ,KAAAtY,KAAO,kBACP,KAAA6M,QAAU,EAGA,MAA0CyL,EAAzB,KAAjBtY,OAAI,IAAG,aAAU,EAAE,EAAuBsY,EAAZ,QAAXzL,OAAO,IAAG,IAAC,EAAEgL,EAAUS,EAAL,MAC7ClW,KAAKpC,KAAOA,EACZoC,KAAKyK,QAAUA,EAEfzK,KAAKmW,OAAOV,GAqIhB,OA9HE,YAAAU,OAAA,SAAOV,GACL,IACM1M,GADYqD,OAAOgK,WAAahK,OAAOiK,iBAAmBjK,OAAOkK,cAAgBlK,OAAOmK,aACpEC,KAAKxW,KAAKpC,KAAMoC,KAAKyK,SAE/C1B,EAAQ0N,gBAAkB,SAACX,GACzB,IAAMY,EAAMZ,EAAMtV,OAA4BC,OAC1CiW,EAAGC,iBAAiBC,SAASnB,EAAM7X,MAKvC8Y,EAAGG,kBAAkBpB,EAAM7X,KAAM,CAC/BkZ,QAASrB,EAAM7W,OAGnBmK,EAAQkN,QAAU,WAAM,OAAA5S,QAAQuS,OAAO,IAAI5M,MAAnB,cACxBD,EAAQ8M,UAAY,WAAM,OAAAxS,QAAQC,QAAR,cAG5B,YAAAyT,OAAA,WACE,IACMhO,GADYqD,OAAOgK,WAAahK,OAAOiK,iBAAmBjK,OAAOkK,cAAgBlK,OAAOmK,aACpEC,KAAKxW,KAAKpC,KAAMoC,KAAKyK,SAE/C,OAAOiL,EAAU3M,EAAS,UAQtB,YAAAiO,WAAN,SAAiBC,EAAmB5Q,G,oGAGrB,O,sBAAA,GAAMrG,KAAK+W,U,OAOtB,OAPML,EAAK,SACL,EAAcA,EAAGQ,YAAYD,EAAW,aAC1B,EAAYE,YAAYF,GAEhCG,IAAI/Q,GAGhB,GAAO,IAAIhD,SAAQ,SAACC,EAASsS,GAC3B,EAAYyB,WAAa,WAEvB/T,EAAQ,aAGV,EAAY2S,QAAU,SAAUH,GAC9BF,EAAOE,Q,OAIX,O,WAAA,GAAOzS,QAAQuS,OAAO,I,yBAQpB,YAAA0B,QAAN,SAAcjR,EAAgBkR,G,0GAIV,O,sBADVN,EAAYxB,EAAM7X,KACR,GAAMoC,KAAKwX,QAAQnR,EAAKhG,U,OACpB,OADdoX,EAAU,SACI,GAAMzX,KAAK0X,eAAeT,EAAW,c,OAYzD,OAZME,EAAc,SAEfM,GAEHzX,KAAKgX,WAAWC,EAAW5Q,GAGzBsR,EAAO,OAAaF,GAAYpR,GAChCkR,IAASI,EAAUtR,GAEjBuR,EAAgBT,EAAYU,IAAIF,GAEtC,GAAOjC,EAAUkC,I,OAEjB,O,WAAA,GAAOvU,QAAQuS,OAAO,I,yBAUpB,YAAA4B,QAAN,SAAcM,G,sGAIU,O,sBADdb,EAAYxB,EAAM7X,KACJ,GAAMoC,KAAK0X,eAAeT,I,OAG9C,OAHME,EAAc,SACdpO,EAAUoO,EAAYjZ,IAAI4Z,GAEhC,GAAOpC,EAAU3M,EAAS,Y,OAE1B,O,WAAA,GAAO1F,QAAQuS,OAAO,I,yBAGpB,YAAAmC,WAAN,SAAiBd,G,oGAGO,O,sBAAA,GAAMjX,KAAK0X,eAAeT,I,OAE/B,OAFTE,EAAc,SACdpO,EAAUoO,EAAYa,SACb,GAAMtC,EAAU3M,EAAS,Y,OAExC,SAFe,UAEU,I,OAEzB,O,WAAA,GAAO1F,QAAQuS,OAAO,I,yBAQZ,YAAA8B,eAAd,SAA6BT,EAAmBtB,G,qBAAatS,SAAO,W,wDAErD,O,sBAAA,GAAMrD,KAAK+W,U,OACtB,SADW,SACDG,YAAYD,EAAWtB,GAAMwB,YAAYF,I,OAEnD,O,WAAA,GAAO5T,QAAQuS,OAAO,I,yBAG5B,EA9IA,GAoJe,CAAc,CAAEH,MAAK,I,60CCnMpC,aAKE,aAFA,KAAAwC,OAAS,YACT,KAAAC,SAAW,GA8Bb,OA5BE,YAAAnV,YAAA,SAAY1C,EAAiB/B,GAC3B,OAAO0B,KAAKmY,WAAW9X,EAASL,KAAKiY,OAAQ3Z,GAAO,IAEhD,YAAA0E,YAAN,SAAkB3C,G,mEAChB,SAAOL,KAAKoY,WAAW/X,EAASL,KAAKiY,gBAEvC,YAAAI,gBAAA,SAAgBhY,EAAiB4E,EAAcqT,GAC7C,OAAOtY,KAAKmY,WAAW9X,EAAS4E,EAAMqT,GAAQ,IAE1C,YAAA7T,gBAAN,SAAsBpE,EAAiB4E,G,mEACrC,SAAOjF,KAAKoY,WAAW/X,EAAS4E,WAE1B,YAAAkT,WAAR,SAAmBI,EAAoB3Z,EAAaN,EAA4BiZ,G,MAE9E,YAF8E,IAAAA,OAAA,GAEvEnB,EAAUkB,UAAO,GAEpBjX,QAASkY,IACR3Z,GAAMN,E,GAETiZ,IAIU,YAAAa,WAAd,SAAyB/X,EAAiBzB,G,gGACxB,SAAMwX,EAAUoB,QAAQnX,I,OAExC,OAFMmY,EAAU,SAEhB,GAAO5Z,EAAM4Z,aAAO,EAAPA,EAAU5Z,GAAO4Z,WAElC,EAlCA,GAmCe,QAAI,G,6BCpCnB,0cAEaC,EAAwB,CACnC,CACE7Z,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,KAEP,CACEla,IAAK,aACL8Z,aAAc,aACdC,aAAc,WACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,aACL8Z,aAAc,aACdC,aAAc,kBACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,SACL8Z,aAAc,SACdC,aAAc,WACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,SACL8Z,aAAc,SACdC,aAAc,iBACdC,KAAM,GACNjD,KAAM,SACNzF,UAAU,EACVqD,KAAM,CACJ,CAAEzQ,KAAM,MAAOxE,MAAO,GACtB,CAAEwE,KAAM,MAAOxE,MAAO,GACtB,CAAEwE,KAAM,MAAOxE,MAAO,MAKtBya,EAAe,CACnB3W,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,aACf0X,QAAS,GACTC,UAAW,GACXC,cAAe,GACfC,UAAW,GACX9T,QAAS,CACPuD,OAAQ,EACRC,MAAO,GACPuQ,OAAQ,GACRC,WAAY,GACZC,WAAY,GACZC,OAAQ,KAIZ,SAASC,EAAuBnU,QAAA,IAAAA,MAAA,IAC9B,IAAMsC,EAAc,GAoBpB,OAnBK,IAAEvC,QAAQC,KACbsC,EAAOkB,MAAQ,IAAE5K,IAAIoH,EAAS,QAAS,KAAO,GAC9CsC,EAAOiB,OAAS,IAAE3K,IAAIoH,EAAS,SAAU,IAAM,EAC/CA,EAAU,IAAEoO,KAAKpO,EAAS,CAAC,SAAU,UACrC,IAAE1E,QAAQ0E,GAAS,SAAC1C,EAAWhE,GACzB,IAAEuC,QAAQyB,IACZA,EAAO,IAAEmH,QAAQnH,IACRoC,OAAS,IAChB4C,EAAOhJ,GAAO,IAAEoL,KAAKpH,IAEd,IAAEiR,SAASjR,IAChB,IAAEiC,SAAS,IAAE3G,IAAI0E,EAAM,aAASiO,KAAgB,IAAExL,QAAQ,IAAEnH,IAAI0E,EAAM,aAASiO,MACjFjJ,EAAOhJ,GAAO,IAAEV,IAAI0E,EAAM,WAEnB,IAAEiC,SAASjC,IAAU,IAAEyC,QAAQzC,KACxCgF,EAAOhJ,GAAOgE,OAIbgF,EAGT,IAAM8R,EAA0B,CAAC,aAAc,gBACzCC,EAAuB,CAAC,UAAW,aAEnCrX,EAAqB,CACzB/B,SAAU,aACV0Y,QAAS,UACT7E,UAAW,YACXgF,UAAW,eAGPQ,EAA0B,IAAIC,MAClC,CACEZ,QAAS,UACTC,UAAW,YACXC,cAAe,YACfC,UAAW,eAEb,CACElb,IAAK,SAACyS,EAAKmJ,GACT,MAAyC,eAArCxJ,OAAOwJ,GAAMC,oBAA6C,aACvDpJ,EAAImJ,MAKXE,EAAe,CACnBC,UAAW,YACXC,UAAW,YACXC,cAAe,iBAgBXra,EAAyB,CAC7Bsa,QAAS,CACPnW,iBAAkB+V,EAAaC,UAC/B/V,gBAAiB,UACjBC,aAAc7B,EAAmB2W,SAGnCoB,UAAW,CACTpW,iBAAkB+V,EAAaC,UAC/B/V,gBAAiB,UACjBC,aAAc7B,EAAmB2W,SAEnCqB,UAAW,CACTrW,iBAAkB+V,EAAaE,UAC/BhW,gBAAiB,gBACjBC,aAAc7B,EAAmB8R,WAEnCmG,YAAa,CACXtW,iBAAkB+V,EAAaG,cAC/BjW,gBAAiB,YACjBC,aAAc7B,EAAmB8W,YAGtB,a,cCzKfhc,EAAOD,QAAUqd,G,6BCGjB,gsBAEMvY,EAAY,kBAGZwY,EAAkB,mBAwBlBC,EAAkD,CACtD,CACE9b,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,wBACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,kBACL8Z,aAAc,kBACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,mBACL8Z,aAAc,oBACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,UACL8Z,aAAc,UACdC,aAAc,WACdC,KAAM,GACNjD,KAAM,SACNpC,KA3DiB,CACnB,CAAEzQ,KAAM,UAAWxE,MAAO,GAC1B,CAAEwE,KAAM,UAAWxE,MAAO,KA2D1B,CACEM,IAAK,SACL8Z,aAAc,SACdC,aAAc,wCACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,mBACL8Z,aAAc,oBACdC,aAAc,iBACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,oBACL8Z,aAAc,qBACdC,aAAc,oBACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,mBACL8Z,aAAc,oBACdC,aAAc,oBACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,YACL8Z,aAAc,aACdC,aAAc,iBACdC,KAAM,GACNjD,KAAM,eAER,CACE/W,IAAK,QACL8Z,aAAc,SACdC,aAAc,eACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,gBACL8Z,aAAc,iBACdC,aAAc,QACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,aACL8Z,aAAc,cACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,SACL8Z,aAAc,SACdC,aAAc,eACdC,KAAM,GACNjD,KAAM,SACNpC,KA1GW,CACb,CAAEzQ,KAAM,WAAYxE,MAAO,GAC3B,CAAEwE,KAAM,SAAUxE,MAAO,GACzB,CAAEwE,KAAM,OAAQxE,OAAQ,KAyGxB,CACEM,IAAK,UACL8Z,aAAc,UACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KA9HY,CACd,CAAEzQ,KAAM,mBAAoBxE,MAAO,oBACnC,CAAEwE,KAAM,aAAcxE,MAAO,cAC7B,CAAEwE,KAAM,SAAUxE,MAAO,UACzB,CAAEwE,KAAM,mBAAoBxE,MAAO,sBA4HnC,CACEM,IAAK,YACL8Z,aAAc,cACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KA/Hc,CAChB,CAAEzQ,KAAM,KAAMxE,MAAO,GACrB,CAAEwE,KAAM,KAAMxE,MAAO,MAkIjBqc,EAAuC,CAC3CC,eAAgB,mDAChB3Y,UAAS,EACT4Y,gBAAiBH,GAqBbI,EAAoB,CACxB1Y,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,iBACfwZ,KAAM,GACNC,SAAU,GACVC,SAAU,GACVC,QAAS,GACTC,WAAY,GAEZ7V,QAjCe,CACf8V,gBAAiB,GACjBC,aAASxK,EACTyK,iBAAkB,GAClBC,OAAQ,GACRC,iBAAkB,GAClBC,iBAAkB,GAClBC,kBAAmB,GACnB5S,MAAO,GACPD,OAAQ,EACR8S,eAAW9K,EACX+K,OAAQ,GACRC,MAAO,GACPC,cAAe,GACfC,WAAY,GACZC,QAAS,GACTC,UAAW,KA4Cb,SAASxC,EAAuBnU,GAC9B,YAD8B,IAAAA,MAAA,IACvB,YAA6BA,GAAS,GAE/C,IAAM3D,EAAoB,CAAC,iBAAkB,mBAAoB,oBAC3Dua,EAA+B,CAAC,aAAc,eAAgB,QAC9DC,EAA6B,CAAC,qBAAsB,cACpDC,EAA6B,CACjCC,IAAK,mBAELC,iBAAkB,OAClBC,SAAU,WACVC,MAAO,qBACPC,KAAM,cAGFC,EAAqB,CACzBlB,iBAAkB,eAWdlZ,EAAqB,CACzB/B,SAAU,iBACV0a,SAAU,aACVC,QAAS,qBACTuB,KAAM,QAGFzC,EAAe,CACnBiB,SAAU,eACVC,QAAS,eAeLpb,EAAyB,CAC7Bib,KAAM,CACJ9W,iBAAkB+V,EAAaiB,SAC/B/W,gBAAiB,WACjBC,aAAc7B,EAAmB2Y,UAEnCD,SAAU,CACR/W,iBAAkB+V,EAAaiB,SAC/B/W,gBAAiB,WACjBC,aAAc7B,EAAmB2Y,UAEnC0B,mBAAoB,CAClB1Y,iBAAkB+V,EAAakB,QAC/BhX,gBAAiB,UACjBC,aAAc7B,EAAmB4Y,SAEnC0B,WAAY,CACV3Y,iBAAkB+V,EAAakB,QAC/BhX,gBAAiB,aACjBE,aAAc,OACdD,aAAc7B,EAAmBma,OAGtB,a,6BCnSf,qlBAGMxa,EAAY,WAGZwY,EAAkB,YAElBoC,EAAwB,CAC5BC,SAAU,YACV5D,UAAW,YACX6D,cAAe,iBAIXC,EAAwB,CAAC,YAAa,eAEtC1a,EAAqB,CACzB/B,SAAU,YACV2Y,UAAW,YACX6D,cAAe,iBASXE,EAAiD,CACrD,CACEre,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,MAIHoE,EAAoB,CACxB9a,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,YAEf2X,UAAW,GACX6D,cAAe,GACfzX,QApCuB,CACvBwD,MAAO,GACPD,OAAQ,IAqCV,SAAS4Q,EAAuBnU,GAC9B,YAD8B,IAAAA,MAAA,IACvB,YAA6BA,GAAS,GAE/C,IAAM6X,EAAkB,CACtB,CAAEra,KAAM,WAAYxE,MAAO,cAC3B,CAAEwE,KAAM,WAAYxE,MAAO,cAC3B,CAAEwE,KAAM,WAAYxE,MAAO,gBAC3B,CAAEwE,KAAM,cAAexE,MAAO,eAC9B,CAAEwE,KAAM,WAAYxE,MAAO,eAC3B,CAAEwE,KAAM,aAAcxE,MAAO,mBAC7B,CAAEwE,KAAM,YAAaxE,MAAO,gBAC5B,CAAEwE,KAAM,aAAcxE,MAAO,iBAE/B,SAAS8e,EAAgBC,GACvB,IAAMC,EAAY,IAAEpa,UAAUma,GAM9B,OALAC,EAAUlX,WAAWxF,SAAQ,SAACgC,IACkB,IAA1CA,EAAKwD,WAAWpF,QAAQ,eAAqE,IAA9C4B,EAAKwD,WAAWpF,QAAQ,kBACzE4B,EAAKwD,WAAWD,KAAK,oBAGlBmX,EAGT,IAAMtD,EAAe,CACnBd,UAAW,YACX6D,cAAe,iBAeXjd,EAAyB,CAC7Bua,UAAW,CACTpW,iBAAkB+V,EAAad,UAC/BhV,gBAAiB,YACjBC,aAAc7B,EAAmB4W,WAEnCqE,cAAe,CACbtZ,iBAAkB+V,EAAa+C,cAC/B7Y,gBAAiB,gBACjBC,aAAc7B,EAAmBya,gBAGtB,a,6BCnHf,2qBAGM9a,EAAY,UACZub,EAAU,UAEV/C,EAAkB,WAElBgD,EAAuB,CAC3BC,WAAY,aACZC,QAAS,UACTC,UAAW,QAIPC,EAAuB,CAAC,aAAc,mBAAoB,aAE1Dvb,EAAqB,CACzB/B,SAAU,aACV2E,KAAM,OACN4Y,QAASN,GAILxD,EAAe,CACnB+D,MAAO,QACPC,MAAO,aAeHle,EAAyB,CAC7Bge,QAAS,CACP7Z,iBAAkB+V,EAAa+D,MAC/B7Z,gBAAiB,UACjBC,aAAc7B,EAAmBwb,SAEnC5Y,KAAM,CACJjB,iBAAkB+V,EAAagE,MAC/B9Z,gBAAiB,OACjBC,aAAc7B,EAAmB4C,OAW/B+Y,EAAgD,CACpD,CACErf,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,KAEP,CACEla,IAAK,aACL8Z,aAAc,eACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,UACL8Z,aAAc,SACdC,aAAc,MACdC,KAAM,GACNjD,KAAM,UAKJgF,EAAuC,CAC3CC,eAAgB,oDAChB3Y,UAAS,EACT4Y,gBAAiBoD,GAGbC,EAAY,CAChB9b,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,aACfuc,QAAS,GACT5Y,KAAM,GACNI,QA1DsB,CACtBwD,MAAO,GACPD,OAAQ,EACRyQ,WAAY,GACZwE,QAAS,KAyDX,SAASrE,EAAuBnU,GAC9B,YAD8B,IAAAA,MAAA,IACvB,YAA6BA,GAAS,GAG/C,IAAM6X,EAAkB,CACtB,CAAEra,KAAM,WAAYxE,MAAO,cAC3B,CAAEwE,KAAM,WAAYxE,MAAO,cAC3B,CAAEwE,KAAM,WAAYxE,MAAO,cAE3B,CAAEwE,KAAM,WAAYxE,MAAO,gBAC3B,CAAEwE,KAAM,cAAexE,MAAO,eAC9B,CAAEwE,KAAM,WAAYxE,MAAO,aAC3B,CAAEwE,KAAM,WAAYxE,MAAO,YAC3B,CAAEwE,KAAM,WAAYxE,MAAO,cAC3B,CAAEwE,KAAM,WAAYxE,MAAO,eAG3B,CAAEwE,KAAM,YAAaxE,MAAO,gBAC5B,CAAEwE,KAAM,WAAYxE,MAAO,YAC3B,CAAEwE,KAAM,aAAcxE,MAAO,gBAC7B,CAAEwE,KAAM,aAAcxE,MAAO,cAC7B,CAAEwE,KAAM,WAAYxE,MAAO,qBAG7B,SAAS8e,EAAgBC,GACvB,IAAMC,EAAY,IAAEpa,UAAUma,GAI9B,OAHAC,EAAUlX,WAAWxF,SAAQ,SAACgC,GAC5BA,EAAKwD,WAAaxD,EAAKwD,WAAWT,KAAI,SAACwY,GAAM,OAAAV,EAAqBU,IAArB,QAExCb,EAEM,a,6BClJf,8nBAGMrb,EAAY,cAGZwY,EAAkB,YAElB2D,EAAwB,CAC5BC,OAAQ,SACRX,WAAY,aACZY,QAAS,kBACTC,QAAS,mBAILC,EAAwB,CAAC,aAAc,gBAEvClc,EAAqB,CACzB/B,SAAU,aACVke,OAAQ,SACRC,gBAAiB,mBAwBbC,EAAiD,CACrD,CACE/f,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,KAEP,CACEla,IAAK,cACL8Z,aAAc,cACdC,aAAc,WACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,aACL8Z,aAAc,aACdC,aAAc,sCACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,YACL8Z,aAAc,YACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,aACL8Z,aAAc,aACdC,aAAc,YACdC,KAAM,GACNjD,KAAM,oBAER,CACE/W,IAAK,QACL8Z,aAAc,QACdC,aAAc,UACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,WACL8Z,aAAc,WACdC,aAAc,aACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,UACL8Z,aAAc,UACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,YAAaxE,MAAO,aAC5B,CAAEwE,KAAM,aAAcxE,MAAO,cAC7B,CAAEwE,KAAM,eAAgBxE,MAAO,kBAGnC,CACEM,IAAK,cACL8Z,aAAc,cACdC,aAAc,UACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,OAAQxE,MAAO,QACvB,CAAEwE,KAAM,MAAOxE,MAAO,SAG1B,CACEM,IAAK,gBACL8Z,aAAc,gBACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,QAASxE,MAAO,GACxB,CAAEwE,KAAM,OAAQxE,MAAO,GACvB,CAAEwE,KAAM,KAAMxE,MAAO,GACrB,CAAEwE,KAAM,MAAOxE,MAAO,SAG1B,CACEM,IAAK,eACL8Z,aAAc,eACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,qBACL8Z,aAAc,qBACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,SACNzF,UAAU,EACVqD,KAAM,CACJ,CAAEzQ,KAAM,OAAQxE,MAAO,GACvB,CAAEwE,KAAM,MAAOxE,MAAO,GACtB,CAAEwE,KAAM,OAAQxE,MAAO,MAMvBqc,EAAuC,CAC3CC,eAAgB,mDAChB3Y,UAAS,EACT4Y,gBAAiB8D,GAGbC,EAAa,CACjBxc,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,aACfgd,QAAS,GACTE,OAAQ,GACRnZ,QA3JuB,CACvBwD,MAAO,GACPD,OAAQ,EACRgW,YAAa,GACbC,WAAY,GACZC,UAAW,GACXC,WAAY,GAEZnD,MAAO,GACPoD,SAAU,GAEVjD,QAAS,GACTkD,YAAa,GAEbC,cAAe,GAEfC,aAAc,GACdC,mBAAoB,KA4IhBC,EAAmB,CACvBhB,QAAS,UACTZ,WAAY,aACZW,OAAQ,UAEV,SAASjB,EAAgBC,GACvB,IAAMC,EAAY,oBAAUD,GAI5B,OAHAC,EAAUlX,WAAWxF,SAAQ,SAACgC,GAC5BA,EAAKwD,WAAaxD,EAAKwD,WAAWT,KAAI,SAACwY,GAAM,OAAAmB,EAAiBnB,IAAjB,QAExCb,EAGT,SAAS7D,EAAuBnU,QAAA,IAAAA,MAAA,IAC9B,IAAMsC,EAAS,YAA6BtC,GAAS,GAOrD,OALAsC,EAAO2X,aAAc,EACrB3X,EAAO4X,mBAAoB,GACvB5X,EAAOiU,OAASjU,EAAOqX,YAAUrX,EAAO2X,aAAc,GACtD3X,EAAOuX,gBAAevX,EAAO4X,mBAAoB,GACjD,kBAAQ5X,EAAOyX,sBAAqBzX,EAAOyX,mBAAqBzX,EAAOyX,mBAAmBje,KAAK,MAC5FwG,EAGT,IAAMoS,EAAe,CACnByE,OAAQ,SACRC,gBAAiB,WAeb5e,EAAyB,CAC7B2e,OAAQ,CACNxa,iBAAkB+V,EAAayE,OAC/Bva,gBAAiB,SACjBC,aAAc7B,EAAmBmc,QAEnCC,gBAAiB,CACfza,iBAAkB+V,EAAa0E,gBAC/Bxa,gBAAiB,UACjBC,aAAc7B,EAAmBoc,kBAI/BvB,EAAkB,CACtB,CAAEra,KAAM,WAAYxE,MAAO,cAC3B,CAAEwE,KAAM,WAAYxE,MAAO,cAC3B,CAAEwE,KAAM,WAAYxE,MAAO,gBAC3B,CAAEwE,KAAM,WAAYxE,MAAO,gBAC3B,CAAEwE,KAAM,cAAexE,MAAO,eAC9B,CAAEwE,KAAM,WAAYxE,MAAO,aAC3B,CAAEwE,KAAM,WAAYxE,MAAO,cAC3B,CAAEwE,KAAM,WAAYxE,MAAO,eAC3B,CAAEwE,KAAM,aAAcxE,MAAO,mBAC7B,CAAEwE,KAAM,aAAcxE,MAAO,mBAC7B,CAAEwE,KAAM,YAAaxE,MAAO,gBAC5B,CAAEwE,KAAM,WAAYxE,MAAO,YAC3B,CAAEwE,KAAM,aAAcxE,MAAO,gBAC7B,CAAEwE,KAAM,aAAcxE,MAAO,cAC7B,CAAEwE,KAAM,WAAYxE,MAAO,oBAC3B,CAAEwE,KAAM,YAAaxE,MAAO,eAEf,a,ynBC9PT2D,EAAY,gBAqEZwd,EAA2B,CAC/B,CACE7gB,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,KAEP,CACEla,IAAK,aACL8Z,aAAc,cACdC,aAAc,OACdhD,KAAM,SAER,CACE/W,IAAK,UACL8Z,aAAc,UACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KAzEY,CACd,CAAEzQ,KAAM,YAAaxE,MAAO,aAC5B,CAAEwE,KAAM,eAAgBxE,MAAO,gBAC/B,CAAEwE,KAAM,aAAcxE,MAAO,cAC7B,CAAEwE,KAAM,OAAQxE,MAAO,QACvB,CAAEwE,KAAM,cAAexE,MAAO,iBAsE9B,CACEM,IAAK,YACL8Z,aAAc,YACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KAzEc,CAChB,CAAEzQ,KAAM,KAAMxE,MAAO,GACrB,CAAEwE,KAAM,KAAMxE,MAAO,KAyErB,CACEM,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,YACL8Z,aAAc,YACdC,aAAc,0BACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,aACL8Z,aAAc,aACdC,aAAc,aACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,YACL8Z,aAAc,YACdC,aAAc,UACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,eACL8Z,aAAc,eACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,aACL8Z,aAAc,aACdC,aAAc,mDACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,gBACL8Z,aAAc,gBACdC,aAAc,sCACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,SACL8Z,aAAc,SACdC,aAAc,OACdzI,UAAU,EACVyF,KAAM,SACNpC,KAxJW,CACb,CAAEzQ,KAAM,OAAQxE,MAAO,GACvB,CAAEwE,KAAM,QAASxE,MAAO,GACxB,CAAEwE,KAAM,MAAOxE,MAAO,GACtB,CAAEwE,KAAM,MAAOxE,OAAQ,GACvB,CAAEwE,KAAM,MAAOxE,OAAQ,KAqJvB,CACEM,IAAK,cACL8Z,aAAc,cACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KAxJgB,CAClB,CAAEzQ,KAAM,MAAOxE,MAAO,GACtB,CAAEwE,KAAM,MAAOxE,MAAO,GACtB,CAAEwE,KAAM,MAAOxE,MAAO,KAuJtB,CACEM,IAAK,aACL8Z,aAAc,aACdC,aAAc,+BACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,YACL8Z,aAAc,YACdC,aAAc,OACdzI,UAAU,EACVyF,KAAM,SACNpC,KArLc,CAChB,CAAEzQ,KAAM,OAAQxE,MAAO,GACvB,CAAEwE,KAAM,OAAQxE,MAAO,GACvB,CAAEwE,KAAM,UAAWxE,MAAO,KAoL1B,CACEM,IAAK,cACL8Z,aAAc,cACdC,aAAc,kCACdC,KAAM,GACNjD,KAAM,SACNpC,KAlMgB,CAClB,CAAEzQ,KAAM,OAAQxE,MAAO,YACvB,CAAEwE,KAAM,OAAQxE,MAAO,aAkMvB,CACEM,IAAK,OACL8Z,aAAc,OACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KArKS,CACX,CAAEzQ,KAAM,YAAaxE,MAAO,GAC5B,CAAEwE,KAAM,eAAgBxE,MAAO,GAC/B,CAAEwE,KAAM,SAAUxE,MAAO,GACzB,CAAEwE,KAAM,SAAUxE,MAAO,GACzB,CAAEwE,KAAM,eAAgBxE,MAAO,GAC/B,CAAEwE,KAAM,eAAgBxE,MAAO,GAC/B,CAAEwE,KAAM,eAAgBxE,MAAO,GAC/B,CAAEwE,KAAM,cAAexE,MAAO,GAC9B,CAAEwE,KAAM,cAAexE,MAAO,MAgK1BohB,EAAiB,CACrBtd,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,aACf+D,QAAS,EAAF,GArKW,CAClBgU,WAAY,GACZ0C,QAAS,GACTC,UAAW,KACX0D,OAAQ,GACRC,UAAW,GACXZ,WAAY,GACZD,UAAW,GACXc,aAAc,GACdC,WAAY,GACZC,cAAe,GACf1G,OAAQ,GACR2G,YAAa,KACbC,WAAY,GACZC,UAAW,KACXC,YAAa,GACbC,KAAM,OAsJNC,QAAS,GACTC,QAAS,IAGX,SAAS7G,EAAuBnU,QAAA,IAAAA,MAAA,IAC9B,IAAMsC,EAAc,GAqBpB,OApBK,IAAEvC,QAAQC,KACbsC,EAAOkB,MAAQ,IAAE5K,IAAIoH,EAAS,QAAS,KAAO,GAC9CsC,EAAOiB,OAAS,IAAE3K,IAAIoH,EAAS,SAAU,IAAM,EAC/CA,EAAU,IAAEoO,KAAKpO,EAAS,CAAC,SAAU,UACrC,IAAE1E,QAAQ0E,GAAS,SAAC1C,EAAWhE,GACzB,IAAEuC,QAAQyB,IACZA,EAAO,IAAEmH,QAAQnH,IACRoC,OAAS,IAChB4C,EAAOhJ,GAAO,IAAEoL,KAAKpH,IAEd,IAAEiR,SAASjR,IAEhB,IAAEiC,SAAS,IAAE3G,IAAI0E,EAAM,aAASiO,KAAgB,IAAExL,QAAQ,IAAEnH,IAAI0E,EAAM,aAASiO,MACjFjJ,EAAOhJ,GAAO,IAAEV,IAAI0E,EAAM,WAEnB,IAAEiC,SAASjC,IAAU,IAAEyC,QAAQzC,KACxCgF,EAAOhJ,GAAOgE,OAIbgF,EAGT,IAAM2Y,EAA4B,CAAC,aAAc,eAAgB,SAE3DC,EAA4B,CAChC9C,WAAY,aACZ2C,QAAS,UACTC,QAAS,WAGLhe,EAAqB,CACzB/B,SAAU,aACV8f,QAAS,UACTC,QAAS,WAGLG,EAAW,CAAC,QAAS,SAEZ,a,ydC9PTC,EAA0B,CAC9B,CACErgB,QAAS,MACT8T,MAAO,YACPlS,UAAW,UACX0e,KAAM,oDAER,CACEtgB,QAAS,MACT8T,MAAO,kBACPlS,UAAW,UACX0e,KAAM,mDACNvM,UAAW,QAEb,CACE/T,QAAS,UACT8T,MAAO,uBACPlS,UAAW,aACX0e,KAAM,mDACNvM,UAAW,QAEb,CACE/T,QAAS,WACT8T,MAAO,kBACPlS,UAAW,eACX0e,KAAM,uDACNvM,UAAW,QAEb,CACE/T,QAAS,QACT8T,MAAO,oBACPlS,UAAW,YACX0e,KAAM,uDACNvM,UAAW,QAEb,CACE/T,QAAS,WACT8T,MAAO,8BACPlS,UAAW,gBACX0e,KAAM,uDACNvM,UAAW,QAEb,CACE/T,QAAS,YACT8T,MAAO,2BACPlS,UAAW,gBACX0e,KAAM,uDACNvM,UAAW,QAEb,CACE/T,QAAS,eACT8T,MAAO,8BACPlS,UAAW,oBACX0e,KAAM,uDACNvM,UAAW,QAEb,CACE/T,QAAS,UACT8T,MAAO,0BACPlS,UAAW,cACX0e,KAAM,uDACNvM,UAAW,QAEb,CACE/T,QAAS,OACT8T,MAAO,8BACPlS,UAAW,cACX0e,KAAM,wDAER,CACEtgB,QAAS,MACT8T,MAAO,gBACPlS,UAAW,UACX0e,KAAM,sDACNvM,UAAW,QAEb,CACE/T,QAAS,MACT8T,MAAO,eACPlS,UAAW,UACX0e,KAAM,mDACNvM,UAAW,QAEb,CACE/T,QAAS,aACT8T,MAAO,yBACPlS,UAAW,kBACX0e,KAAM,mDACNvM,UAAW,QAEb,CACE/T,QAAS,QACT8T,MAAO,qBACPlS,UAAW,YACX0e,KAAM,uDACNvM,UAAW,QAEb,CACE/T,QAAS,OACT8T,MAAO,oBACPlS,UAAW,WACX0e,KAAM,uDACNvM,UAAW,QAEb,CACE/T,QAAS,MACT8T,MAAO,iBACPlS,UAAW,UACX0e,KAAM,uDACNvM,UAAW,QAEb,CACE/T,QAAS,cACT8T,MAAO,mCACPlS,UAAW,mBACX0e,KAAM,uDACNvM,UAAW,QAEb,CACE/T,QAAS,eACT8T,MAAO,4BACPlS,UAAW,qBACX0e,KAAM,uDACNvM,UAAW,QAEb,CACE/T,QAAS,MACT8T,MAAO,eACPlS,UAAW,UACX0e,KAAM,uDACNvM,UAAW,QAEb,CACE/T,QAAS,KACT8T,MAAO,iBACPlS,UAAW,SACX0e,KAAM,uDACNvM,UAAW,QAEb,CACE/T,QAAS,WACT8T,MAAO,wBACPlS,UAAW,gBACX0e,KAAM,uDACNvM,UAAW,cAEb,CACE/T,QAAS,YACT8T,MAAO,6BACPlS,UAAW,iBACX0e,KAAM,uDACNvM,UAAW,cAEb,CACE/T,QAAS,cACT8T,MAAO,8BACPlS,UAAW,kBACX0e,KAAM,uDACNvM,UAAW,cAEb,CACE/T,QAAS,OACT8T,MAAO,YACPlS,UAAW,YACX0e,KAAM,uDACNvM,UAAW,aAEb,CACE/T,QAAS,MACT8T,MAAO,YACPlS,UAAW,UACX2e,YAAY,EACZD,KAAM,uDACNvM,UAAW,OAEb,CACE/T,QAAS,cACT8T,MAAO,qBACPlS,UAAW,mBACX2e,YAAY,EACZD,KAAM,uDACNvM,UAAW,OAEb,CACE/T,QAAS,QACT8T,MAAO,eACPlS,UAAW,aACX2e,YAAY,EACZD,KAAM,uDACNvM,UAAW,OAEb,CACE/T,QAAS,MACT8T,MAAO,WACPlS,UAAW,aACX0e,KAAM,wDAER,CACEtgB,QAAS,MACT8T,MAAO,YACPlS,UAAW,UACX0e,KAAM,wDAER,CACEtgB,QAAS,MACT8T,MAAO,YACPlS,UAAW,UACX0e,KAAM,wDAER,CACEtgB,QAAS,SACT8T,MAAO,eACPlS,UAAW,aACX0e,KAAM,uDACNvM,UAAW,QAEb,CACE/T,QAAS,MACT8T,MAAO,qBACPlS,UAAW,UACX0e,KAAM,uDACNvM,UAAW,QAEb,CACE/T,QAAS,WACT8T,MAAO,uBACPlS,UAAW,eACX0e,KAAM,uDACNvM,UAAW,QAEb,CACE/T,QAAS,OACT8T,MAAO,kBACPlS,UAAW,WACX0e,KAAM,uDACNvM,UAAW,QAEb,CACE/T,QAAS,MACT8T,MAAO,iBACPlS,UAAW,UACX0e,KAAM,uDACNvM,UAAW,QAEb,CACE/T,QAAS,KACT8T,MAAO,gBACPlS,UAAW,SACX0e,KAAM,uDACNvM,UAAW,QAEb,CACE/T,QAAS,MACT8T,MAAO,eACPlS,UAAW,UACX0e,KAAM,uDACNvM,UAAW,WAEb,CACE/T,QAAS,QACT8T,MAAO,iBACPlS,UAAW,aACX0e,KAAM,uDACNvM,UAAW,WAEb,CACE/T,QAAS,OACT8T,MAAO,kBACPlS,UAAW,YACX0e,KAAM,wDAER,CACEtgB,QAAS,YACT8T,MAAO,wBACPlS,UAAW,kBACX0e,KAAM,uDACNvM,UAAW,WAEb,CACE/T,QAAS,MACT8T,MAAO,uBACPlS,UAAW,UACX0e,KAAM,wDAER,CACEtgB,QAAS,SACT8T,MAAO,oBACPlS,UAAW,gBACX0e,KAAM,uDACNvM,UAAW,eAEb,CACE/T,QAAS,UACT8T,MAAO,qBACPlS,UAAW,iBACX0e,KAAM,uDACNvM,UAAW,eAEb,CACE/T,QAAS,SACT8T,MAAO,oBACPlS,UAAW,gBACX0e,KAAM,uDACNvM,UAAW,eAEb,CACE/T,QAAS,SACT8T,MAAO,oBACPlS,UAAW,gBACX0e,KAAM,uDACNvM,UAAW,eAEb,CACE/T,QAAS,WACT8T,MAAO,sBACPlS,UAAW,kBACX0e,KAAM,uDACNvM,UAAW,eAEb,CACE/T,QAAS,UACT8T,MAAO,qBACPlS,UAAW,iBACX0e,KAAM,uDACNvM,UAAW,eAEb,CACE/T,QAAS,SACT8T,MAAO,oBACPlS,UAAW,gBACX0e,KAAM,uDACNvM,UAAW,eAEb,CACE/T,QAAS,cACT8T,MAAO,yBACPlS,UAAW,qBACX0e,KAAM,uDACNvM,UAAW,eAEb,CACE/T,QAAS,MACT8T,MAAO,qBACPlS,UAAW,oBACX0e,KAAM,uDAER,CACEtgB,QAAS,aACT8T,MAAO,qBACPlS,UAAW,iBACX0e,KAAM,wDAER,CACEtgB,QAAS,OACT8T,MAAO,eACPlS,UAAW,WACX0e,KAAM,kDAER,CACEtgB,QAAS,MACT8T,MAAO,iBACPyM,YAAY,EACZ3e,UAAW,UACX0e,KAAM,kDACNvM,UAAW,UAEb,CACE/T,QAAS,kBACT8T,MAAO,8BACPyM,YAAY,EACZ3e,UAAW,wBACX0e,KAAM,kDACNvM,UAAW,UAEb,CACE/T,QAAS,QACT8T,MAAO,mBACPyM,YAAY,EACZ3e,UAAW,aACX0e,KAAM,kDACNvM,UAAW,UAEb,CACE/T,QAAS,MACT8T,MAAO,oBACPlS,UAAW,UACX0e,KAAM,mDAER,CACEtgB,QAAS,MACT8T,MAAO,gBACPlS,UAAW,UACX0e,KAAM,mDAsBJE,EAAc,GACdC,EAAa,GACbnf,EAAoB,GACpB8X,EAAyB,GAKzBsH,EAAiB,CAErBC,WAAY,WACZrT,QAAS,UACTC,IAAK,CAAC,YAAa,WAAY,eAC/BqT,GAAI,CAAC,SAAU,UAAW,SAAU,SAAU,WAAY,UAAW,SAAU,gBAG1D,OAEThb,OAAOrF,SAAQ,SAACsgB,G,MACxB,EAA2BA,EAASvZ,MAAM,KAAvCwZ,EAAU,KAAEC,EAAQ,KAG3BD,EAAuC,QAA1B,EAAAJ,EAAeI,UAAW,QAAIA,EAG3C,GAAGtb,OAAOsb,GAAYvgB,SAAQ,SAACxD,G,QAEvBiD,EAAUjD,EAAOoE,QAAQ,gBAAgB,SAAC0R,EAAGxR,GAAM,OAAAA,EAAA,iBACnD2f,EAAShhB,EAAQihB,cAGvB,GAAiB,kBAAbF,EAA8B,CAChC,IAAM,EAAM,OAAQ,UAAGF,IAAX,QAGZL,EAAY,UAAGQ,EAAM,eACnB,W,IAAY,sDACV,IAAM7gB,EAAS,IAAI,EAAG,WAAH,EAAG,aAAIoH,GAAM,IAAEvH,IAAO,KAGzC,OAFAG,EAAOH,QAAUA,EAEVG,GASb,GAJiB,aAAb4gB,GACF,OAAQ,UAAGF,IAGI,iBAAbE,EAA6B,CAC/B,IAAM1gB,EAAQ,UAAG2gB,EAAM,qBACjBE,EAAY,UAAGF,EAAM,0BAErB7gB,EAAS,OAAQ,UAAG0gB,IAE1BJ,EAAWzgB,GAAWG,EAAM,QAC5BmB,EAAkBjB,GAAsB,QAAb,EAAAF,EAAOE,UAAM,QAAIF,EAAM,kBAClDiZ,EAAuB8H,GAA8B,QAAjB,EAAA/gB,EAAO+gB,UAAU,QAAI/gB,EAAM,+B,6BC9drE,mkBAEMyB,EAAY,wBAGZwY,EAAkB,uBAElB+G,EAAmC,CACvCC,KAAM,OACNC,OAAQ,UAIJC,EAAmC,CAAC,aAAc,gBAElDrf,EAAqB,CACzB/B,SAAU,aACVmhB,OAAQ,UAsBJE,EAA4D,CAChE,CACEhjB,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,KAEP,CACEla,IAAK,YACL8Z,aAAc,YACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,YACL8Z,aAAc,YACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,cACL8Z,aAAc,cACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,cACL8Z,aAAc,cACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,gBACL8Z,aAAc,gBACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,aACL8Z,aAAc,aACdC,aAAc,UACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,gBACL8Z,aAAc,gBACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,iBACL8Z,aAAc,iBACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNzF,UAAU,EACVqD,KAAM,CACJ,CAAEzQ,KAAM,MAAOxE,MAAO,WACtB,CAAEwE,KAAM,OAAQxE,MAAO,iBACvB,CAAEwE,KAAM,MAAOxE,MAAO,WACtB,CAAEwE,KAAM,KAAMxE,MAAO,WACrB,CAAEwE,KAAM,MAAOxE,MAAO,YACtB,CAAEwE,KAAM,MAAOxE,MAAO,YACtB,CAAEwE,KAAM,MAAOxE,MAAO,aACtB,CAAEwE,KAAM,QAASxE,MAAO,YACxB,CAAEwE,KAAM,MAAOxE,MAAO,iBAG1B,CACEM,IAAK,4BACL8Z,aAAc,4BACdC,aAAc,aACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,kBACL8Z,aAAc,kBACdC,aAAc,WACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,WACL8Z,aAAc,WACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,SACL8Z,aAAc,SACdC,aAAc,YACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,YACL8Z,aAAc,YACdC,aAAc,eACdC,KAAM,GACNjD,KAAM,eAKJgF,EAAuC,CAC3CC,eAAgB,oDAChB3Y,UAAS,EACT4Y,gBAAiB+G,GAGbC,EAAwB,CAC5Bzf,OAAQ,eACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,aACfmgB,OAAQ,GACRpc,QA7JkC,CAClCwD,MAAO,GACPD,OAAQ,EACR,YAAa,GACb,YAAa,GACb,cAAe,GACf,cAAe,GACf,gBAAiB,GACjB,aAAc,GACd,gBAAiB,GACjB,iBAAkB,GAClB,4BAA6B,GAC7B,kBAAmB,GACnB,WAAY,GACZ,SAAU,GACV,YAAa,KAkJTmR,EAAe,CACnB0H,OAAQ,UAeJ5hB,EAAyB,CAC7BgiB,OAAQ,CACN7d,iBAAkB+V,EAAa0H,OAC/Bxd,gBAAiB,SACjBC,aAAc7B,EAAmBof,SAIrC,SAASjI,EAAuBnU,GAC9B,YAD8B,IAAAA,MAAA,IACvB,YAA6BA,GAAS,GAEhC,a,6BCjNf,+lBAEMrD,EAAY,iBAGZwY,EAAkB,kBAElBsH,EAA8B,CAClCC,UAAW,YACXC,gBAAiB,kBACjBC,MAAO,QACPC,MAAO,SAIHC,EAA8B,CAAC,YAAa,eAE5C9f,EAAqB,CACzB/B,SAAU,YACV0hB,gBAAiB,mBAIbjI,EAAe,CACnBqI,gBAAiB,mBAebviB,EAAyB,CAC7BwiB,gBAAiB,CACfre,iBAAkB+V,EAAaqI,gBAC/Bne,gBAAiB,kBACjBC,aAAc7B,EAAmB2f,kBAc/BM,EAAuD,CAC3D,CACE3jB,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,KAEP,CACEla,IAAK,YACL8Z,aAAc,YACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,cACL8Z,aAAc,cACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,iBACL8Z,aAAc,iBACdC,aAAc,iBACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,cACL8Z,aAAc,cACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,YACL8Z,aAAc,YACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,eAKJgF,EAAuC,CAC3CC,eAAgB,mDAChB3Y,UAAS,EACT4Y,gBAAiB0H,GAGbC,EAAmB,CACvBpgB,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,YACf+gB,gBAAiB,GACjBhd,QAjF6B,CAC7BwD,MAAO,GACPD,OAAQ,EACR4Z,UAAW,GACXC,YAAa,GACbC,eAAgB,GAChBC,YAAa,GACbC,UAAW,KA6Eb,SAASpJ,EAAuBnU,GAC9B,YAD8B,IAAAA,MAAA,IACvB,YAA6BA,GAAS,GAG/C,IAAM6X,EAAkB,CACtB,CAAEra,KAAM,WAAYxE,MAAO,cAC3B,CAAEwE,KAAM,WAAYxE,MAAO,cAC3B,CAAEwE,KAAM,WAAYxE,MAAO,gBAC3B,CAAEwE,KAAM,WAAYxE,MAAO,gBAC3B,CAAEwE,KAAM,cAAexE,MAAO,eAC9B,CAAEwE,KAAM,WAAYxE,MAAO,aAC3B,CAAEwE,KAAM,WAAYxE,MAAO,cAC3B,CAAEwE,KAAM,WAAYxE,MAAO,eAC3B,CAAEwE,KAAM,aAAcxE,MAAO,mBAC7B,CAAEwE,KAAM,aAAcxE,MAAO,mBAC7B,CAAEwE,KAAM,YAAaxE,MAAO,gBAC5B,CAAEwE,KAAM,WAAYxE,MAAO,YAC3B,CAAEwE,KAAM,aAAcxE,MAAO,gBAC7B,CAAEwE,KAAM,aAAcxE,MAAO,cAC7B,CAAEwE,KAAM,WAAYxE,MAAO,oBAC3B,CAAEwE,KAAM,YAAaxE,MAAO,eAEf,a,6BC3Jf,qYAEawkB,EAA0B,CACrC,CACElkB,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,KAEP,CACEla,IAAK,cACL8Z,aAAc,cACdC,aAAc,uCACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,aACL8Z,aAAc,UACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,OAAQxE,MAAO,aACvB,CAAEwE,KAAM,OAAQxE,MAAO,WACvB,CAAEwE,KAAM,KAAMxE,MAAO,YAGzB,CACEM,IAAK,MACL8Z,aAAc,kBACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,KAAMxE,MAAO,GACrB,CAAEwE,KAAM,KAAMxE,MAAO,KAGzB,CACEM,IAAK,YACL8Z,aAAc,YACdC,aAAc,WACdC,KAAM,GACNjD,KAAM,eAER,CACE/W,IAAK,kBACL8Z,aAAc,kBACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,SAAUxE,MAAO,eACzB,CAAEwE,KAAM,UAAWxE,MAAO,oBAKhC,SAASmb,EAAuBnU,QAAA,IAAAA,MAAA,IAC9B,IAAMsC,EAAc,GAoBpB,OAnBK,IAAEvC,QAAQC,KACbsC,EAAOkB,MAAQ,IAAE5K,IAAIoH,EAAS,QAAS,KAAO,GAC9CsC,EAAOiB,OAAS,IAAE3K,IAAIoH,EAAS,SAAU,IAAM,EAC/CA,EAAU,IAAEoO,KAAKpO,EAAS,CAAC,SAAU,UACrC,IAAE1E,QAAQ0E,GAAS,SAAC1C,EAAWhE,GACzB,IAAEuC,QAAQyB,IACZA,EAAO,IAAEmH,QAAQnH,IACRoC,OAAS,IAChB4C,EAAOhJ,GAAO,IAAEoL,KAAKpH,IAEd,IAAEiR,SAASjR,IAChB,IAAEiC,SAAS,IAAE3G,IAAI0E,EAAM,aAASiO,KAAgB,IAAExL,QAAQ,IAAEnH,IAAI0E,EAAM,aAASiO,MACjFjJ,EAAOhJ,GAAO,IAAEV,IAAI0E,EAAM,WAEnB,IAAEiC,SAASjC,IAAU,IAAEyC,QAAQzC,KACxCgF,EAAOhJ,GAAOgE,OAIbgF,EAIF,IAAMmb,EAAoB,IAAIlJ,MACnC,GACA,CACE3b,IAAG,SAACsC,EAAQwiB,EAAGC,GACb,GAAiB,iBAAND,EAAgB,CACzB,GAAIA,EAAEE,WAAW,OAAQ,MAAO,YAChC,GAAIF,EAAEE,WAAW,SAAU,MAAO,KAEpC,OAAOC,QAAQjlB,IAAIsC,EAAQwiB,EAAGC,IAEhCG,IAAG,SAAC5iB,EAAQ6iB,GACV,OAAO,KAKA/gB,EAAqB,CAChC/B,SAAU,YACV+iB,KAAM,MAIFtJ,EAAe,CACnBsJ,KAAM,UAkBFxjB,EAAyB,CAC7ByjB,GAAI,CACFtf,iBAAkB+V,EAAasJ,KAC/Bpf,gBAAiB,SACjBC,aAAc7B,EAAmBghB,OAK/B3hB,EAAoB,CAAC,YAAa,eAIzB,WACbS,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,YACfiiB,OAAQ,GACRle,QAAS,CACPuD,OAAQ,EACRC,MAAO,GACP2a,gBAAiB,GACjBzH,QAAS,GACT0H,MAAO,GACP7E,YAAa,GACblD,WAAY,EACZgI,WAAY,GACZC,IAAK,M,6BCrKT,mlBAGM3hB,EAAY,YAGZwY,EAAkB,YAElBoJ,EAAwB,CAC5BvK,WAAY,kBAORwK,EAAwB,CAAC,iBAAkB,mBAAoB,oBAE/DxhB,EAAqB,CACzB/B,SAAU,kBAwBNwjB,EAAiD,CACrD,CACEnlB,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,wBACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,kBACL8Z,aAAc,kBACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,mBACL8Z,aAAc,oBACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,UACL8Z,aAAc,UACdC,aAAc,WACdC,KAAM,GACNjD,KAAM,SACNpC,KA3DiB,CACnB,CAAEzQ,KAAM,UAAWxE,MAAO,GAC1B,CAAEwE,KAAM,UAAWxE,MAAO,KA2D1B,CACEM,IAAK,SACL8Z,aAAc,SACdC,aAAc,wCACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,mBACL8Z,aAAc,oBACdC,aAAc,iBACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,oBACL8Z,aAAc,qBACdC,aAAc,oBACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,mBACL8Z,aAAc,oBACdC,aAAc,oBACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,YACL8Z,aAAc,aACdC,aAAc,iBACdC,KAAM,GACNjD,KAAM,eAER,CACE/W,IAAK,QACL8Z,aAAc,SACdC,aAAc,eACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,gBACL8Z,aAAc,iBACdC,aAAc,QACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,aACL8Z,aAAc,cACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,SACL8Z,aAAc,SACdC,aAAc,eACdC,KAAM,GACNjD,KAAM,SACNpC,KA1GW,CACb,CAAEzQ,KAAM,WAAYxE,MAAO,GAC3B,CAAEwE,KAAM,SAAUxE,MAAO,GACzB,CAAEwE,KAAM,OAAQxE,OAAQ,KAyGxB,CACEM,IAAK,UACL8Z,aAAc,UACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KA9HY,CACd,CAAEzQ,KAAM,mBAAoBxE,MAAO,oBACnC,CAAEwE,KAAM,aAAcxE,MAAO,cAC7B,CAAEwE,KAAM,SAAUxE,MAAO,UACzB,CAAEwE,KAAM,mBAAoBxE,MAAO,sBA4HnC,CACEM,IAAK,YACL8Z,aAAc,cACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KA/Hc,CAChB,CAAEzQ,KAAM,KAAMxE,MAAO,GACrB,CAAEwE,KAAM,KAAMxE,MAAO,MAkIjBqc,EAAuC,CAC3CC,eAAgB,mDAChB3Y,UAAS,EACT4Y,gBAAiBkJ,GAqBbC,EAAa,CACjB5hB,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,iBACfwZ,KAAM,GACNC,SAAU,GACVC,SAAU,GAEV3V,QA/Be,CACf8V,gBAAiB,GACjBC,aAASxK,EACTyK,iBAAkB,GAClBC,OAAQ,GACRC,iBAAkB,GAClBC,iBAAkB,GAClBC,kBAAmB,GACnB5S,MAAO,GACPD,OAAQ,EACR8S,eAAW9K,EACX+K,OAAQ,GACRC,MAAO,GACPC,cAAe,GACfC,WAAY,GACZC,QAAS,GACTC,UAAW,KAkBb,SAASxC,EAAuBnU,GAC9B,YAD8B,IAAAA,MAAA,IACvB,YAA6BA,GAAS,GAI/C,IAAM6X,EAAkB,CACtB,CAAEra,KAAM,WAAYxE,MAAO,cAC3B,CAAEwE,KAAM,WAAYxE,MAAO,cAC3B,CAAEwE,KAAM,WAAYxE,MAAO,cAC3B,CAAEwE,KAAM,WAAYxE,MAAO,gBAC3B,CAAEwE,KAAM,WAAYxE,MAAO,gBAC3B,CAAEwE,KAAM,cAAexE,MAAO,eAC9B,CAAEwE,KAAM,YAAaxE,MAAO,cAC5B,CAAEwE,KAAM,WAAYxE,MAAO,aAC3B,CAAEwE,KAAM,WAAYxE,MAAO,YAC3B,CAAEwE,KAAM,WAAYxE,MAAO,cAC3B,CAAEwE,KAAM,WAAYxE,MAAO,eAC3B,CAAEwE,KAAM,aAAcxE,MAAO,mBAC7B,CAAEwE,KAAM,aAAcxE,MAAO,mBAC7B,CAAEwE,KAAM,YAAaxE,MAAO,gBAC5B,CAAEwE,KAAM,WAAYxE,MAAO,YAC3B,CAAEwE,KAAM,aAAcxE,MAAO,gBAC7B,CAAEwE,KAAM,YAAaxE,MAAO,aAC5B,CAAEwE,KAAM,aAAcxE,MAAO,cAC7B,CAAEwE,KAAM,WAAYxE,MAAO,oBAC3B,CAAEwE,KAAM,YAAaxE,MAAO,eAExB2lB,EAAkB,CACtBC,OAAQ,gBACRC,QAAS,kBAEX,SAAS/G,EAAgBC,GACvB,IAAMC,EAAY,IAAEpa,UAAUma,GAI9B,OAHAC,EAAUlX,WAAWxF,SAAQ,SAACgC,GAC5BA,EAAKwD,WAAa,CAAC,iBAEdkX,EAEM,a,6BCpPf,wmBAIMrb,EAAY,oBAGZwY,EAAkB,oBAYlB2J,EAAyD,CAC7D,CACExlB,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,KAEP,CACEla,IAAK,cACL8Z,aAAc,cACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,UACL8Z,aAAc,UACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,OAAQxE,MAAO,cACvB,CAAEwE,KAAM,OAAQxE,MAAO,mBAG3B,CACEM,IAAK,cACL8Z,aAAc,cACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,KAAMxE,MAAO,OACrB,CAAEwE,KAAM,KAAMxE,MAAO,UAGzB,CACEM,IAAK,SACL8Z,aAAc,SACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,QAASxE,MAAO,SACxB,CAAEwE,KAAM,aAAcxE,MAAO,iBAY7B6e,EAAkB,CACtB,CAAEra,KAAM,WAAYxE,MAAO,cAC3B,CAAEwE,KAAM,WAAYxE,MAAO,gBAC3B,CAAEwE,KAAM,WAAYxE,MAAO,cAC3B,CAAEwE,KAAM,WAAYxE,MAAO,gBAEvBqc,EAAuC,CAC3CC,eAAgB,oDAChB3Y,UAAS,EACT4Y,gBAAiBuJ,GAGbC,EAAgB,CACpBjiB,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,aACf+D,QAjG+B,CAC/BwD,MAAO,GACPD,OAAQ,EACRmT,QAAS,GACTkD,YAAa,GACbL,YAAa,GACbyF,OAAQ,KA8FV,SAAS7K,EAAuBnU,GAC9B,YAD8B,IAAAA,MAAA,IACvB,YAA6BA,GAAS,GAG/C,IAAMif,EAAgC,CAAC,aAAc,gBAE/CjiB,EAAqB,CACzB/B,SAAU,cAGNikB,EAA2B,CAC/B9G,WAAY,aACZ+G,WAAY,cAER9kB,EAAY,CAAC,cACnB,SAASyd,EAAgBC,GACvB,IAAMC,EAAY,IAAEpa,UAAUma,GAI9B,OAHAC,EAAUlX,WAAWxF,SAAQ,SAACgC,GAC5BA,EAAKwD,WAAa,CAAC,iBAEdkX,EAGM,a,6BCpIf,ifAEaoH,EAAqB,CAChC,CACE9lB,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,KAEP,CACEla,IAAK,YACL8Z,aAAc,YACdC,aAAc,qBACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,YACL8Z,aAAc,YACdC,aAAc,UACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,cACL8Z,aAAc,cACdC,aAAc,cACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,UACL8Z,aAAc,UACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,UAAWxE,MAAO,WAC1B,CAAEwE,KAAM,UAAWxE,MAAO,WAC1B,CAAEwE,KAAM,eAAgBxE,MAAO,kBAGnC,CACEM,IAAK,QACL8Z,aAAc,kBACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,MAAOxE,MAAO,OACtB,CAAEwE,KAAM,OAAQxE,MAAO,WAYvBqmB,EAAY,CAChBviB,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,eACfkJ,QAAS,GACTnF,QAAS,CACPuD,OAAQ,EACRC,MAAO,GACPkT,QAAS,GACT0H,MAAO,GACP3E,UAAW,GACX3e,UAAW,GACXwkB,YAAa,KAKjB,SAASnL,EAAuBnU,QAAA,IAAAA,MAAA,IAC9B,IAAMsC,EAAc,GAoBpB,OAnBK,IAAEvC,QAAQC,KACbsC,EAAOkB,MAAQ,IAAE5K,IAAIoH,EAAS,QAAS,KAAO,GAC9CsC,EAAOiB,OAAS,IAAE3K,IAAIoH,EAAS,SAAU,IAAM,EAC/CA,EAAU,IAAEoO,KAAKpO,EAAS,CAAC,SAAU,UACrC,IAAE1E,QAAQ0E,GAAS,SAAC1C,EAAWhE,GACzB,IAAEuC,QAAQyB,IACZA,EAAO,IAAEmH,QAAQnH,IACRoC,OAAS,IAChB4C,EAAOhJ,GAAO,IAAEoL,KAAKpH,IAEd,IAAEiR,SAASjR,IAChB,IAAEiC,SAAS,IAAE3G,IAAI0E,EAAM,aAASiO,KAAgB,IAAExL,QAAQ,IAAEnH,IAAI0E,EAAM,aAASiO,MACjFjJ,EAAOhJ,GAAO,IAAEV,IAAI0E,EAAM,WAEnB,IAAEiC,SAASjC,IAAU,IAAEyC,QAAQzC,KACxCgF,EAAOhJ,GAAOgE,OAIbgF,EAGT,IAAMid,EAAuB,CAAC,aAAc,gBAGtCC,EAAuB,CAC3BC,aAAc,eACd9iB,UAAW,YACXwI,QAAS,WAGLnI,EAAqB,CACzB/B,SAAU,eACVkK,QAAS,WAEL0S,EAAkB,CACtB,CAAEra,KAAM,WAAYxE,MAAO,cAC3B,CAAEwE,KAAM,WAAYxE,MAAO,cAC3B,CAAEwE,KAAM,WAAYxE,MAAO,gBAC3B,CAAEwE,KAAM,WAAYxE,MAAO,gBAC3B,CAAEwE,KAAM,cAAexE,MAAO,eAC9B,CAAEwE,KAAM,WAAYxE,MAAO,aAC3B,CAAEwE,KAAM,WAAYxE,MAAO,eAC3B,CAAEwE,KAAM,aAAcxE,MAAO,mBAC7B,CAAEwE,KAAM,aAAcxE,MAAO,mBAC7B,CAAEwE,KAAM,YAAaxE,MAAO,gBAC5B,CAAEwE,KAAM,WAAYxE,MAAO,YAC3B,CAAEwE,KAAM,aAAcxE,MAAO,gBAC7B,CAAEwE,KAAM,WAAYxE,MAAO,oBAC3B,CAAEwE,KAAM,YAAaxE,MAAO,eAGxB0b,EAAe,CACnBvP,QAAS,WAeL3K,EAAyB,CAC7ByL,QAAS,CACPtH,iBAAkB+V,EAAavP,QAC/BvG,gBAAiB,UACjBC,aAAc7B,EAAmBmI,UAGtB,YAYR,IAAMua,EAA0B,CAAC,eAAgB,YAAa,Y,6BCrLrE,+hBAGM/iB,EAAY,UACZwY,EAAkB,WAElBwK,EAAuB,GAKvBC,EAAuB,CAAC,UAAW,aAEnC5iB,EAAqB,CACzB/B,SAAU,WA8CN4kB,EAAgD,CACpD,CACEvmB,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,KAEP,CACEla,IAAK,YACL8Z,aAAc,YACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,UACL8Z,aAAc,UACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,aACL8Z,aAAc,aACdC,aAAc,QACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,WACL8Z,aAAc,WACdC,aAAc,QACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,SACL8Z,aAAc,SACdC,aAAc,MACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,aACL8Z,aAAc,eACdC,aAAc,QACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,cACL8Z,aAAc,cACdC,aAAc,YACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,OAAQxE,MAAO,OACvB,CAAEwE,KAAM,OAAQxE,MAAO,WAMvBqc,EAAuC,CAC3CC,eAAgB,mDAChB3Y,UAAS,EACT4Y,gBAAiBsK,GAGbC,EAAY,CAChBhjB,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,UACf8jB,IAAK,GACL/f,QArGsB,CACtBwD,MAAO,GACPD,OAAQ,EACRqQ,UAAW,GACXD,QAAS,GACTqM,WAAY,GACZC,SAAU,GACVC,OAAQ,GACR,aAAc,GACdC,YAAa,KA+Ff,SAAShM,EAAuBnU,GAC9B,YAD8B,IAAAA,MAAA,IACvB,YAA6BA,GAAS,GAG/C,IAAM6X,EAAkB,CACtB,CAAEra,KAAM,WAAYxE,MAAO,cAC3B,CAAEwE,KAAM,WAAYxE,MAAO,cAC3B,CAAEwE,KAAM,WAAYxE,MAAO,cAC3B,CAAEwE,KAAM,WAAYxE,MAAO,gBAC3B,CAAEwE,KAAM,WAAYxE,MAAO,gBAC3B,CAAEwE,KAAM,cAAexE,MAAO,eAC9B,CAAEwE,KAAM,YAAaxE,MAAO,cAC5B,CAAEwE,KAAM,WAAYxE,MAAO,aAC3B,CAAEwE,KAAM,WAAYxE,MAAO,YAC3B,CAAEwE,KAAM,WAAYxE,MAAO,cAC3B,CAAEwE,KAAM,WAAYxE,MAAO,eAC3B,CAAEwE,KAAM,aAAcxE,MAAO,mBAC7B,CAAEwE,KAAM,aAAcxE,MAAO,mBAC7B,CAAEwE,KAAM,YAAaxE,MAAO,gBAC5B,CAAEwE,KAAM,WAAYxE,MAAO,YAC3B,CAAEwE,KAAM,aAAcxE,MAAO,gBAC7B,CAAEwE,KAAM,YAAaxE,MAAO,aAC5B,CAAEwE,KAAM,aAAcxE,MAAO,cAC7B,CAAEwE,KAAM,WAAYxE,MAAO,oBAC3B,CAAEwE,KAAM,YAAaxE,MAAO,eAE9B,SAAS8e,EAAgBC,GACvB,IAAMC,EAAY,IAAEpa,UAAUma,GAK9B,OAJAC,EAAUlX,WAAWxF,SAAQ,SAACgC,GAE5BA,EAAKwD,WAAa,CAAC,MAAO,cAErBkX,EAEM,a,6BC1Lf,0jBAGMrb,EAAY,gBAGZwY,EAAkB,iBAElBiL,EAA6B,CACjCC,WAAY,cAGRC,EAA6B,CAAC,aAAc,QAE5CtjB,EAAqB,CACzB/B,SAAU,cAmBNslB,EAAyD,CAC7D,CACEjnB,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,KAEP,CACEla,IAAK,YACL8Z,aAAc,YACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,eAER,CACE/W,IAAK,SACL8Z,aAAc,SACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,MAAOxE,MAAO,GACtB,CAAEwE,KAAM,MAAOxE,MAAO,GACtB,CAAEwE,KAAM,gBAAiBxE,MAAO,GAChC,CAAEwE,KAAM,MAAOxE,MAAO,GACtB,CAAEwE,KAAM,MAAOxE,MAAO,GACtB,CAAEwE,KAAM,MAAOxE,MAAO,GACtB,CAAEwE,KAAM,QAASxE,MAAO,GACxB,CAAEwE,KAAM,MAAOxE,MAAO,GACtB,CAAEwE,KAAM,QAASxE,MAAO,GACxB,CAAEwE,KAAM,QAASxE,MAAO,IACxB,CAAEwE,KAAM,KAAMxE,MAAO,IACrB,CAAEwE,KAAM,MAAOxE,MAAO,MAG1B,CACEM,IAAK,gBACL8Z,aAAc,gBACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,UACL8Z,aAAc,UACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,OAAQxE,MAAO,GACvB,CAAEwE,KAAM,OAAQxE,MAAO,KAG3B,CACEM,IAAK,QACL8Z,aAAc,QACdC,aAAc,kBACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,WACL8Z,aAAc,WACdC,aAAc,iBACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,SACL8Z,aAAc,SACdC,aAAc,WACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,kBACL8Z,aAAc,kBACdC,aAAc,eACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,aACL8Z,aAAc,aACdC,aAAc,WACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,OACL8Z,aAAc,OACdC,aAAc,QACdC,KAAM,GACNjD,KAAM,aAKJgF,EAAuC,CAC3CC,eAAgB,mDAChB3Y,UAAS,EACT4Y,gBAAiBgL,GAIb1I,EAAkB,CACtB,CAAEra,KAAM,WAAYxE,MAAO,cAC3B,CAAEwE,KAAM,WAAYxE,MAAO,cAC3B,CAAEwE,KAAM,WAAYxE,MAAO,gBAC3B,CAAEwE,KAAM,WAAYxE,MAAO,gBAC3B,CAAEwE,KAAM,cAAexE,MAAO,eAC9B,CAAEwE,KAAM,WAAYxE,MAAO,cAC3B,CAAEwE,KAAM,WAAYxE,MAAO,YAC3B,CAAEwE,KAAM,WAAYxE,MAAO,eAC3B,CAAEwE,KAAM,aAAcxE,MAAO,mBAC7B,CAAEwE,KAAM,aAAcxE,MAAO,mBAC7B,CAAEwE,KAAM,YAAaxE,MAAO,gBAC5B,CAAEwE,KAAM,WAAYxE,MAAO,YAC3B,CAAEwE,KAAM,YAAaxE,MAAO,aAC5B,CAAEwE,KAAM,WAAYxE,MAAO,qBAEvBwnB,EAAkB,CACtB1jB,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,aACf+D,QA3J+B,CAC/BwD,MAAO,GACPD,OAAQ,EACR8S,UAAW,KACXtC,OAAQ,GACR0M,cAAe,GACfC,QAAS,GACTnK,MAAO,GACPoD,SAAU,GACVgH,OAAQ,GACRC,gBAAiB,GACjBC,WAAY,GACZC,KAAM,KAkJR,SAAShJ,EAAgBC,GACvB,IAAMC,EAAY,IAAEpa,UAAUma,GAI9B,OAHAC,EAAUlX,WAAWxF,SAAQ,SAACgC,GAC5BA,EAAKwD,WAAa,CAAC,iBAEdkX,EAET,SAAS7D,EAAuBnU,GAC9B,YAD8B,IAAAA,MAAA,IACvB,YAA6BA,GAAS,GAEhC,a,8BC3Lf,qgBAGMrD,EAAY,kBAGZwY,EAAkB,iBAElB4L,EAA6B,CACjChK,IAAK,mBACLiK,MAAO,SAIHC,EAA6B,CAAC,iBAAkB,mBAAoB,oBAEpEjkB,EAAqB,CACzB/B,SAAU,kBAYNimB,EAAsD,CAC1D,CACE5nB,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,KAEP,CACEla,IAAK,kBACL8Z,aAAc,kBACdC,aAAc,YACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,mBACL8Z,aAAc,mBACdC,aAAc,UACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,mBACL8Z,aAAc,mBACdC,aAAc,gBACdC,KAAM,GACNjD,KAAM,eAKJgF,EAAuC,CAC3CC,eAAgB,oDAChB3Y,UAAS,EACT4Y,gBAAiB2L,GAGbC,EAAkB,CACtBrkB,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,iBACf+D,QAhE4B,CAC5BwD,MAAO,GACPD,OAAQ,EACRuS,gBAAiB,GACjBE,iBAAkB,GAClBE,iBAAkB,KA6DdkL,EAAoB,CAAC,QAAS,SAAU,YAAa,aAAc,SAAU,OACnF,SAASC,EAAcpf,GACrB,IAAMqf,EAAe,IAAEjhB,IAAI+gB,EAAmB,IAAEG,SAChD,OAAkE,IAA3D,IAAE7lB,QAAQ4lB,EAAc,IAAEC,QAAQtf,EAAOR,aAElD,SAAS0S,EAAuBnU,GAC9B,YAD8B,IAAAA,MAAA,IACvB,YAA6BA,GAAS,GAEhC,a,6BC/Ff,+eAGMrD,EAAY,YAGZwY,EAAkB,YAElBqM,EAAuB,CAC3BzK,IAAK,oBAID0K,EAAwB,CAAC,iBAAkB,mBAAoB,oBAE/DzkB,EAAqB,CACzB/B,SAAU,kBAYNymB,EAAgD,CACpD,CACEpoB,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,KAEP,CACEla,IAAK,kBACL8Z,aAAc,kBACdC,aAAc,YACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,mBACL8Z,aAAc,mBACdC,aAAc,UACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,mBACL8Z,aAAc,mBACdC,aAAc,gBACdC,KAAM,GACNjD,KAAM,eAKJgF,EAAuC,CAC3CC,eAAgB,oDAChB3Y,UAAS,EACT4Y,gBAAiBmM,GAGbC,EAAY,CAChB7kB,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,iBACf+D,QAhEsB,CACtBwD,MAAO,GACPD,OAAQ,EACRuS,gBAAiB,GACjBE,iBAAkB,GAClBE,iBAAkB,KA8DpB,SAAS/B,EAAuBnU,GAC9B,YAD8B,IAAAA,MAAA,IACvB,YAA6BA,GAAS,GAE/C,IAAMohB,EAAoB,CAAC,QAAS,SAAU,YAAa,aAAc,SAAU,OACnF,SAASC,EAAcpf,GACrB,IAAMqf,EAAe,IAAEjhB,IAAI+gB,EAAmB,IAAEG,SAChD,OAAkE,IAA3D,IAAE7lB,QAAQ4lB,EAAc,IAAEC,QAAQtf,EAAOR,aAEnC,a,6BC/Ff,ufAGM9E,EAAY,aAGZwY,EAAkB,aAElByM,EAAyB,CAC7BC,oBAAqB,uBAIjBC,EAAyB,CAAC,sBAAuB,yBAEjD9kB,EAAqB,CACzB/B,SAAU,uBAUN8mB,EAAkD,CACtD,CACEzoB,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,KAEP,CACEla,IAAK,uBACL8Z,aAAc,uBACdC,aAAc,WACdC,KAAM,GACNjD,KAAM,eAKJgF,EAAuC,CAC3CC,eAAgB,wDAChB3Y,UAAS,EACT4Y,gBAAiBwM,GAGbC,EAAc,CAClBllB,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,sBACf+D,QAhDwB,CACxBwD,MAAO,GACPD,OAAQ,EACR0e,qBAAsB,KAgDxB,SAAS9N,EAAuBnU,GAC9B,YAD8B,IAAAA,MAAA,IACvB,YAA6BA,GAAS,GAE/C,SAAS8X,EAAgBC,GACvB,IAAMC,EAAY,IAAEpa,UAAUma,GAI9B,OAHAC,EAAUlX,WAAWxF,SAAQ,SAACgC,GAC5BA,EAAKwD,WAAa,CAAC,0BAEdkX,EAEM,a,6BCnFf,oeAIMrb,EAAY,oBACZwY,EAAkB,WAElB+M,EAAuB,CAC3B9F,OAAQ,SACRpI,WAAY,aACZmO,SAAU,WACVC,aAAc,cAGVC,EAAuB,CAAC,SAAU,YAElCrlB,EAAqB,CACzB/B,SAAU,UAaNqnB,EAAgD,CACpD,CACEhpB,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,KAEP,CACEla,IAAK,UACL8Z,aAAc,UACdC,aAAc,QACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,QACL8Z,aAAc,QACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,OAAQxE,MAAO,OACvB,CAAEwE,KAAM,OAAQxE,MAAO,UAG3B,CACEM,IAAK,aACL8Z,aAAc,aACdC,aAAc,UACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,YAAaxE,MAAO,eAC5B,CAAEwE,KAAM,YAAaxE,MAAO,cAGhC,CACEM,IAAK,+BACL8Z,aAAc,+BACdC,aAAc,qBACdC,KAAM,GACNjD,KAAM,WAKJgF,EAAuC,CAC3CC,eAAgB,mDAChB3Y,UAAS,EACT4Y,gBAAiB+M,GAGbC,EAAY,CAChBzlB,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,SACf+D,QAhFsB,CACtBwD,MAAO,GACPD,OAAQ,EACRif,QAAS,GACTnE,WAAY,GACZD,MAAO,GACPqE,8BAA8B,IA6EhC,SAAStO,EAAuBnU,GAC9B,YAD8B,IAAAA,MAAA,IACvB,YAA6BA,GAAS,GAE/C,SAASqhB,EAAcqB,QAAA,IAAAA,MAAA,IACrB,IAAMC,EAAY,MAAMD,EAAW,4BAEnC,OAA4B,IAArBC,EAAUjjB,SAAoD,IAApC,UAAUijB,EAAW,UAEzC,a,6BC9Gf,6ZAEMhmB,EAAY,mBAGZwY,EAAkB,mBAElByN,EAA+B,CACnCC,OAAQ,SAERC,UAAW,YACXC,SAAU,WACVC,MAAO,SAIHC,EAA+B,CAAC,SAAU,aAE1CjmB,EAAqB,CACzB/B,SAAU,UAoBNioB,EAAwD,CAC5D,CACE5pB,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,KAEP,CACEla,IAAK,SACL8Z,aAAc,SACdC,aAAc,MACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,SACL8Z,aAAc,SACdC,aAAc,KACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,aACL8Z,aAAc,aACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,SACL8Z,aAAc,SACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,SAAUxE,MAAO,UACzB,CAAEwE,KAAM,UAAWxE,MAAO,WAC1B,CAAEwE,KAAM,aAAcxE,MAAO,gBAGjC,CACEM,IAAK,cACL8Z,aAAc,cACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,MAAOxE,MAAO,OACtB,CAAEwE,KAAM,WAAYxE,MAAO,YAC3B,CAAEwE,KAAM,QAASxE,MAAO,WAG5B,CACEM,IAAK,YACL8Z,aAAc,YACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,oBAER,CACE/W,IAAK,aACL8Z,aAAc,aACdC,aAAc,QACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,MAAOxE,MAAO,SACtB,CAAEwE,KAAM,QAASxE,MAAO,SAG5B,CACEM,IAAK,eACL8Z,aAAc,eACdC,aAAc,QACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,KAAMxE,MAAO,MACrB,CAAEwE,KAAM,KAAMxE,MAAO,SAGzB,CACEM,IAAK,QACL8Z,aAAc,QACdC,aAAc,YACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,KAAMxE,MAAO,MACrB,CAAEwE,KAAM,MAAOxE,MAAO,OACtB,CAAEwE,KAAM,aAAcxE,MAAO,gBAGjC,CACEM,IAAK,qBACL8Z,aAAc,qBACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,OAAQxE,MAAO,QACvB,CAAEwE,KAAM,SAAUxE,MAAO,UACzB,CAAEwE,KAAM,QAASxE,MAAO,WAG5B,CACEM,IAAK,SACL8Z,aAAc,SACdC,aAAc,MACdC,KAAM,GACNjD,KAAM,eAIJuH,EAAoB,CACxB9a,OAAQ,eACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,SAEfknB,IAAK,GACLC,SAAU,GACVpjB,QAxJ8B,CAC9BwD,MAAO,GACPD,OAAQ,EACR8f,OAAQ,GACRR,OAAQ,GACRxC,WAAY,GACZ1b,OAAQ,GACR2e,YAAa,GACbC,UAAW,GACXC,WAAY,GACZC,aAAc,GACdC,MAAO,GACPC,mBAAoB,GACpBzD,OAAQ,KA8IV,SAAS/L,EAAuBnU,GAC9B,YAD8B,IAAAA,MAAA,IACvB,YAA6BA,GAAS,GAoBhC,a,6BCzMf,igBAIMrD,EAAY,mBAGZwY,EAAkB,mBAElByO,EAAwB,CAC5B7M,IAAK,YACL8M,IAAK,aAIDC,EAA+B,CAAC,YAAa,cAAe,aAE5D9mB,EAAqB,CACzB/B,SAAU,aAkBN8oB,EAAiD,CACrD,CACEzqB,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,KAEP,CACEla,IAAK,aACL8Z,aAAc,aACdC,aAAc,cACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,eACL8Z,aAAc,eACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,aACL8Z,aAAc,aACdC,aAAc,cACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,iBACL8Z,aAAc,iBACdC,aAAc,UACdC,KAAM,GACNjD,KAAM,SACNzF,UAAU,EACVqD,KAAM,CACJ,CAAEzQ,KAAM,WAAYxE,MAAO,YAC3B,CAAEwE,KAAM,UAAWxE,MAAO,WAC1B,CAAEwE,KAAM,OAAQxE,MAAO,QACvB,CAAEwE,KAAM,YAAaxE,MAAO,aAC5B,CAAEwE,KAAM,SAAUxE,MAAO,UACzB,CAAEwE,KAAM,YAAaxE,MAAO,aAC5B,CAAEwE,KAAM,WAAYxE,MAAO,cAG/B,CACEM,IAAK,cACL8Z,aAAc,cACdC,aAAc,eACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,qBACL8Z,aAAc,qBACdC,aAAc,gBACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,uBACL8Z,aAAc,uBACdC,aAAc,kBACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,aACL8Z,aAAc,aACdC,aAAc,WACdC,KAAM,GACNjD,KAAM,SACNzF,UAAU,EACVqD,KAAM,CACJ,CAAEzQ,KAAM,OAAQxE,MAAO,QACvB,CAAEwE,KAAM,SAAUxE,MAAO,WAG7B,CACEM,IAAK,cACL8Z,aAAc,cACdC,aAAc,QACdC,KAAM,GACNjD,KAAM,SACNzF,UAAU,EACVqD,KAAM,CACJ,CAAEzQ,KAAM,MAAOxE,MAAO,OACtB,CAAEwE,KAAM,OAAQxE,MAAO,QACvB,CAAEwE,KAAM,OAAQxE,MAAO,QACvB,CAAEwE,KAAM,OAAQxE,MAAO,WAMvBqc,EAAuC,CAC3CC,eAAgB,mDAChB3Y,UAAS,EACT4Y,gBAAiBwO,GAGbC,EAAa,CACjBlnB,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,YACf+D,QAtIuB,CACvBwD,MAAO,GACPD,OAAQ,EACR,aAAc,GACd,eAAgB,GAChB,aAAc,GACd,iBAAkB,GAClB,aAAc,GACd,cAAe,GACf,cAAe,GACf,qBAAsB,GACtB,uBAAwB,KA8H1B,SAAS4Q,EAAuBnU,GAC9B,YAD8B,IAAAA,MAAA,IACvB,YAA6BA,GAAS,GAE/C,SAAS8X,EAAgBC,GACvB,IAAMC,EAAY,IAAEpa,UAAUma,GAI9B,OAHAC,EAAUlX,WAAWxF,SAAQ,SAACgC,GAC5BA,EAAKwD,WAAa,CAAC,UAEdkX,EAEM,a,6BCzKf,qYAGawF,EAA8C,CACzD,CACElkB,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,IAEP,CACEla,IAAK,YACL8Z,aAAc,YACdC,aAAc,gBACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,SACL8Z,aAAc,SACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,UAIV,SAAS8D,EAAuBnU,QAAA,IAAAA,MAAA,IAC9B,IAAMsC,EAAc,GAoBpB,OAnBK,IAAEvC,QAAQC,KACbsC,EAAOkB,MAAQ,IAAE5K,IAAIoH,EAAS,QAAS,KAAO,GAC9CsC,EAAOiB,OAAS,IAAE3K,IAAIoH,EAAS,SAAU,IAAM,EAC/CA,EAAU,IAAEoO,KAAKpO,EAAS,CAAC,SAAU,UACrC,IAAE1E,QAAQ0E,GAAS,SAAC1C,EAAWhE,GACzB,IAAEuC,QAAQyB,IACZA,EAAO,IAAEmH,QAAQnH,IACRoC,OAAS,IAChB4C,EAAOhJ,GAAO,IAAEoL,KAAKpH,IAEd,IAAEiR,SAASjR,IAChB,IAAEiC,SAAS,IAAE3G,IAAI0E,EAAM,aAASiO,KAAgB,IAAExL,QAAQ,IAAEnH,IAAI0E,EAAM,aAASiO,MACjFjJ,EAAOhJ,GAAO,IAAEV,IAAI0E,EAAM,WAEnB,IAAEiC,SAASjC,IAAU,IAAEyC,QAAQzC,KACxCgF,EAAOhJ,GAAOgE,OAIbgF,EAIF,IAAMmb,EAAoB,CAC/B9J,QAAS,WAIE3W,EAAqB,CAChC/B,SAAU,YACVgpB,aAAc,kBAIVvP,EAAe,CACnBwP,eAAgB,kBAeZ1pB,EAAyB,CAC7B0pB,eAAgB,CACdvlB,iBAAkB+V,EAAawP,eAC/BtlB,gBAAiB,iBACjBC,aAAc7B,EAAmBinB,eAI/B5nB,EAAoB,CAAC,YAAa,WAIzB,WACbS,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,YACfioB,eAAgB,GAChBlkB,QAAS,CACPuD,OAAQ,EACRC,MAAO,GACPuR,UAAW,GACXb,OAAQ,M,6BChHZ,+eAGMvX,EAAY,UAGZwY,EAAkB,WAElBqM,EAAuB,CAC3BrC,WAAY,cAIRgF,EAAuB,CAAC,aAAc,QAEtCnnB,EAAqB,CACzB/B,SAAU,cAoBNymB,EAAgD,CACpD,CACEpoB,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,KAEP,CACEla,IAAK,kBACL8Z,aAAc,kBACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,YAER,CACE/W,IAAK,cACL8Z,aAAc,cACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,SACL8Z,aAAc,SACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,SACL8Z,aAAc,SACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,QACL8Z,aAAc,QACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,UACL8Z,aAAc,UACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,gBACL8Z,aAAc,gBACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,QAASxE,MAAO,GACxB,CAAEwE,KAAM,OAAQxE,MAAO,KAG3B,CACEM,IAAK,QACL8Z,aAAc,QACdC,aAAc,WACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,WACL8Z,aAAc,WACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,aACL8Z,aAAc,aACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,MAAOxE,MAAO,WACtB,CAAEwE,KAAM,MAAOxE,MAAO,YACtB,CAAEwE,KAAM,MAAOxE,MAAO,aAG1B,CACEM,IAAK,gBACL8Z,aAAc,gBACdC,aAAc,WACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,UAAWxE,MAAO,GAC1B,CAAEwE,KAAM,UAAWxE,MAAO,MAM1Bqc,EAAuC,CAC3CC,eAAgB,mDAChB3Y,UAAS,EACT4Y,gBAAiBmM,GAGbC,EAAY,CAChB7kB,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,aACf+D,QA7IsB,CACtBwD,MAAO,GACPD,OAAQ,EACR6gB,gBAAiB,GACjB7K,YAAa,GACb8K,OAAQ,GACRC,OAAQ,GACRC,MAAO,GACPC,QAAS,GACTC,cAAe,GACflO,MAAO,GACPoD,SAAU,GACV+K,WAAY,GACZC,cAAe,KAmIjB,SAASxQ,EAAuBnU,GAC9B,YAD8B,IAAAA,MAAA,IACvB,YAA6BA,GAAS,GAG/C,SAAS8X,EAAgBC,GACvB,IAAMC,EAAY,IAAEpa,UAAUma,GAI9B,OAHAC,EAAUlX,WAAWxF,SAAQ,SAACgC,GAC5BA,EAAKwD,WAAa,CAAC,iBAEdkX,EAEM,a,6BCjLf,seAIMrb,EAAY,UACZwY,EAAkB,WAElByP,EAAuB,CAE3BzI,KAAM,QAIF0I,EAAuB,CAAC,aAAc,gBAEtC7nB,EAAqB,CACzB/B,SAAU,cAuBN6pB,EAAgD,CACpD,CACExrB,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,KAEP,CACEla,IAAK,OACL8Z,aAAc,OACdC,aAAc,UACdC,KAAM,GACNjD,KAAM,iBAER,CACE/W,IAAK,YACL8Z,aAAc,YACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,YACL8Z,aAAc,YACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,cACL8Z,aAAc,cACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,cACL8Z,aAAc,cACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,gBACL8Z,aAAc,gBACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,aACL8Z,aAAc,aACdC,aAAc,UACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,gBACL8Z,aAAc,gBACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,iBACL8Z,aAAc,iBACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNzF,UAAU,EACVqD,KAAM,CACJ,CAAEzQ,KAAM,MAAOxE,MAAO,WACtB,CAAEwE,KAAM,OAAQxE,MAAO,iBACvB,CAAEwE,KAAM,MAAOxE,MAAO,WACtB,CAAEwE,KAAM,KAAMxE,MAAO,WACrB,CAAEwE,KAAM,MAAOxE,MAAO,YACtB,CAAEwE,KAAM,MAAOxE,MAAO,YACtB,CAAEwE,KAAM,MAAOxE,MAAO,aACtB,CAAEwE,KAAM,QAASxE,MAAO,YACxB,CAAEwE,KAAM,MAAOxE,MAAO,iBAG1B,CACEM,IAAK,4BACL8Z,aAAc,4BACdC,aAAc,aACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,kBACL8Z,aAAc,kBACdC,aAAc,WACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,WACL8Z,aAAc,WACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,SACL8Z,aAAc,SACdC,aAAc,YACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,YACL8Z,aAAc,YACdC,aAAc,eACdC,KAAM,GACNjD,KAAM,eAKJgF,EAAuC,CAC3CC,eAAgB,oDAChB3Y,UAAS,EACT4Y,gBAAiBuP,GAGbC,EAAY,CAChBjoB,OAAQ,eACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,aACf+D,QApKsB,CACtBwD,MAAO,GACPD,OAAQ,EACRyhB,KAAM,GACN,YAAa,GACb,YAAa,GACb,cAAe,GACf,cAAe,GACf,gBAAiB,GACjB,aAAc,GACd,gBAAiB,GACjB,iBAAkB,GAClB,4BAA6B,GAC7B,kBAAmB,GACnB,WAAY,GACZ,SAAU,GACV,YAAa,KAuJf,SAAS7Q,EAAuBnU,GAC9B,YAD8B,IAAAA,MAAA,IACvB,YAA6BA,GAAS,GAQ/C,SAAS8X,EAAgBC,GACvB,IAAMC,EAAY,YAAYD,GAI9B,OAHAC,EAAUlX,WAAWxF,SAAQ,SAACgC,GAC5BA,EAAKwD,WAAa,CAAC,WAEdkX,EAEM,a,wuBCxMTrb,EAAY,eAGZwY,EAAkB,gBAOlB8P,EAA+C,CACnD,CACE3rB,IAAK,iBACL8Z,aAAc,iBACdC,aAAc,UACdC,KAAM,GACNjD,KAAM,aACNkD,IAAK,GAEP,CACEja,IAAK,mBACL8Z,aAAc,mBACdC,aAAc,UACdC,KAAM,GACNjD,KAAM,eAKJgF,EAAuC,CAC3CC,eAAgB,mDAChB3Y,UAAS,EACT4Y,gBAAiB0P,GAEbC,EAA4B,CAAC,eAAgB,kBAE7CC,EAAiB,CACrBroB,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,eACf+D,QAAS,CACPwD,MAAO,GACPD,OAAQ,EACRiL,QAAS,EAAF,GA1CY,CACrB,iBAAkB,GAClB,mBAAoB,OA4CtB,SAAS2F,EAAuBnU,GAC9B,YAD8B,IAAAA,MAAA,IACvB,YAA6BA,GAAS,GAE/C,SAAS8X,EAAgBC,GACvB,IAAMC,EAAY,IAAEpa,UAAUma,GAI9B,OAHAC,EAAUlX,WAAWxF,SAAQ,SAACgC,GAC5BA,EAAKwD,WAAa,CAAC,iBAEdkX,EAET,IAAMoN,EAA2B,CAC/BC,IAAK,eACLhF,WAAY,gBAERrjB,EAAqB,CACzB/B,SAAU,gBAEG,a,6BCrEf,kfAEM0B,EAAY,cAGZwY,EAAkB,eAElBmQ,EAA2B,GAM3BC,EAA2B,CAAC,kBAAmB,aAE/CvoB,EAAqB,CACzB/B,SAAU,mBAyBNuqB,EAAoD,CACxD,CACElsB,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,KAEP,CACEla,IAAK,YACL8Z,aAAc,YACdC,aAAc,WACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,gBACL8Z,aAAc,gBACdC,aAAc,UACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,YACL8Z,aAAc,YACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,kBACL8Z,aAAc,kBACdC,aAAc,QACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,eACL8Z,aAAc,eACdC,aAAc,WACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,QAASxE,MAAO,SACxB,CAAEwE,KAAM,MAAOxE,MAAO,SAG1B,CACEM,IAAK,YACL8Z,aAAc,YACdC,aAAc,WACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,UAAWxE,MAAO,WAC1B,CAAEwE,KAAM,OAAQxE,MAAO,UAG3B,CACEM,IAAK,iBACL8Z,aAAc,iBACdC,aAAc,YACdC,KAAM,GACNjD,KAAM,eAER,CACE/W,IAAK,iBACL8Z,aAAc,iBACdC,aAAc,aACdC,KAAM,GACNjD,KAAM,eAER,CACE/W,IAAK,kBACL8Z,aAAc,kBACdC,aAAc,UACdC,KAAM,GACNjD,KAAM,eAER,CACE/W,IAAK,mBACL8Z,aAAc,mBACdC,aAAc,UACdC,KAAM,GACNjD,KAAM,eAER,CACE/W,IAAK,OACL8Z,aAAc,OACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,WACL8Z,aAAc,WACdC,aAAc,gBACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,cACL8Z,aAAc,cACdC,aAAc,kBACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,WACL8Z,aAAc,WACdC,aAAc,iBACdC,KAAM,GACNjD,KAAM,eAER,CACE/W,IAAK,cACL8Z,aAAc,cACdC,aAAc,iBACdC,KAAM,GACNjD,KAAM,UAKJgF,EAAuC,CAC3CC,eAAgB,mDAChB3Y,UAAS,EACT4Y,gBAAiBiQ,GAGbC,EAAgB,CACpB3oB,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,kBACf+D,QAzK0B,CAC1BwD,MAAO,GACPD,OAAQ,EACRmiB,UAAW,GACXC,cAAe,GAEfC,UAAW,GACXC,gBAAiB,GACjBC,aAAc,GACdC,UAAW,GACXC,eAAgB,KAChBC,eAAgB,KAChBC,gBAAiB,KACjBC,iBAAkB,KAClBC,KAAM,GACNC,SAAU,GACVC,YAAa,GACbC,SAAU,KACVC,YAAa,KA0Jf,SAASrS,EAAuBnU,QAAA,IAAAA,MAAA,IAC9B,IAAMsC,EAAc,GACpBA,EAAOkB,MAAQ,IAAE5K,IAAIoH,EAAS,QAAS,KAAO,GAC9CsC,EAAOiB,OAAS,IAAE3K,IAAIoH,EAAS,SAAU,IAAM,EAC/CsC,EAAOojB,UAAY,IAAE9sB,IAAIoH,EAAS,YAAa,KAAO,GACtDsC,EAAOqjB,cAAgB,IAAE/sB,IAAIoH,EAAS,gBAAiB,KAAO,GAC9DA,EAAU,IAAEoO,KAAKpO,EAAS,CAAC,SAAU,QAAS,gBAAiB,cAC/D,IAAMymB,EAAwB,GAgB9B,OAfA,IAAEnrB,QAAQ0E,GAAS,SAAC1C,EAAWhE,GACzB,IAAEuC,QAAQyB,IACZA,EAAO,IAAEmH,QAAQnH,IACRoC,OAAS,IAChB+mB,EAAentB,GAAO,IAAEoL,KAAKpH,IAEtB,IAAEiR,SAASjR,IAChB,IAAEiC,SAAS,IAAE3G,IAAI0E,EAAM,aAASiO,KAAgB,IAAExL,QAAQ,IAAEnH,IAAI0E,EAAM,aAASiO,MACjFkb,EAAentB,GAAO,IAAEV,IAAI0E,EAAM,WAE3B,IAAEiC,SAASjC,IAAU,IAAEyC,QAAQzC,KACxCmpB,EAAentB,GAAOgE,MAG1BgF,EAAOmkB,eAAiBA,EACjBnkB,EAGT,IAAMokB,EAAY,CAChB,aAAc,WACd,eAAgB,WAChB,cAAe,cACf,WAAY,WACZ,cAAe,WACf,eAAgB,YAChB,WAAY,WACZ,eAAgB,aAChB,aAAc,aACd,mBAAoB,YAEP,a,6BCxOf,ugBAIM/pB,EAAY,qBAGZwY,EAAkB,oBAElBwR,EAA0B,CAC9BC,YAAa,cACbC,YAAa,eAGTC,EAAgC,CAAC,cAAe,iBAEhD9pB,EAAqB,CACzB/B,SAAU,eAaN8rB,EAAmD,CACvD,CACEztB,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,KAEP,CACEla,IAAK,SACL8Z,aAAc,SACdC,aAAc,UACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,gBACL8Z,aAAc,gBACdC,aAAc,WACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,YACL8Z,aAAc,YACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,kBACL8Z,aAAc,kBACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,eAKJgF,EAAuC,CAC3CC,eAAgB,mDAChB3Y,UAAS,EACT4Y,gBAAiBwR,GAGbC,EAAe,CACnBlqB,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,cACf+D,QAxEyB,CACzBwD,MAAO,GACPD,OAAQ,EACR,SAAU,GACV,gBAAiB,GACjB,YAAa,GACb,kBAAmB,KAqErB,SAAS4Q,EAAuBnU,GAC9B,YAD8B,IAAAA,MAAA,IACvB,YAA6BA,GAAS,GAE/C,SAAS8X,EAAgBC,GACvB,IAAMC,EAAY,IAAEpa,UAAUma,GAI9B,OAHAC,EAAUlX,WAAWxF,SAAQ,SAACgC,GAC5BA,EAAKwD,WAAa,CAAC,kBAEdkX,EAEM,a,cC1GflgB,EAAOD,QAAUovB,G,6BCEjB,+aAEMtqB,EAAY,UAGZwY,EAAkB,WAElB+R,EAAuB,CAC3BC,YAAa,cAGTC,EAAuB,CAAC,aAAc,gBAEtCpqB,EAAqB,CACzB/B,SAAU,cAcNosB,EAAgD,CACpD,CACE/tB,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,KAEP,CACEla,IAAK,cACL8Z,aAAc,cACdC,aAAc,WACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,gBACL8Z,aAAc,gBACdC,aAAc,WACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,aACL8Z,aAAc,aACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,OAAQxE,MAAO,GACvB,CAAEwE,KAAM,OAAQxE,MAAO,GACvB,CAAEwE,KAAM,MAAOxE,MAAO,GACtB,CAAEwE,KAAM,OAAQxE,MAAO,KAG3B,CACEM,IAAK,cACL8Z,aAAc,cACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,KAAMxE,MAAO,GACrB,CAAEwE,KAAM,KAAMxE,MAAO,KAGzB,CACEM,IAAK,SACL8Z,aAAc,SACdC,aAAc,YACdC,KAAM,GACNjD,KAAM,eAKJgF,EAAuC,CAC3CC,eAAgB,mDAChB3Y,UAAS,EACT4Y,gBAAiB8R,GAGbC,EAAY,CAChBxqB,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,aACf+D,QA1FsB,CACtBwD,MAAO,GACPD,OAAQ,EACRgW,YAAa,GACbgO,cAAe,GACfC,WAAY,GACZ5N,YAAa,GACb6N,OAAQ,KAsFV,SAAStT,EAAuBnU,GAC9B,YAD8B,IAAAA,MAAA,IACvB,YAA6BA,GAAS,GAEhC,a,6BCpHf,2eAIMrD,EAAY,SACZwY,EAAkB,UAQlBuS,EAA+C,CACnD,CACEpuB,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,KAEP,CACEla,IAAK,mBACL8Z,aAAc,mBACdC,aAAc,UACdC,KAAM,GACNjD,KAAM,eAIJgF,EAAuC,CAC3CC,eAAgB,mDAChB3Y,UAAS,EACT4Y,gBAAiBmS,GAGbC,EAAW,CACf7qB,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,kBACf+D,QA/CqB,CACrBwD,MAAO,GACPD,OAAQ,EACRqkB,iBAAkB,KA+CpB,SAASzT,EAAuBnU,GAC9B,YAD8B,IAAAA,MAAA,IACvB,YAA6BA,GAAS,GAG/C,IAAM6nB,EAAsB,CAAC,kBAAmB,qBAE1C7qB,EAAqB,CACzB/B,SAAU,mBAGN6sB,EAAsB,CAC1BC,gBAAiB,kBACjBC,gBAAiB,mBAEnB,SAASlQ,EAAgBC,GACvB,IAAMC,EAAY,IAAEpa,UAAUma,GAI9B,OAHAC,EAAUlX,WAAWxF,SAAQ,SAACgC,GAC5BA,EAAKwD,WAAa,CAAC,sBAEdkX,EAEM,a,6BC5Ef,+aAEMrb,EAAY,UACZwY,EAAkB,WAElB8S,EAAuB,CAC3BC,uBAAwB,0BAGpBC,EAAuB,CAAC,yBAA0B,4BAElDnrB,EAAqB,CACzB/B,SAAU,0BAgBNmtB,EAAgD,CACpD,CACE9uB,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,KAEP,CACEla,IAAK,4BACL8Z,aAAc,4BACdC,aAAc,WACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,8BACL8Z,aAAc,8BACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,4BACL8Z,aAAc,4BACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,eACL8Z,aAAc,eACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNzF,UAAU,EACVqD,KAAM,CACJ,CAAEzQ,KAAM,MAAOxE,MAAO,UACtB,CAAEwE,KAAM,OAAQxE,MAAO,SAG3B,CACEM,IAAK,eACL8Z,aAAc,eACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNzF,UAAU,EACVqD,KAAM,CACJ,CAAEzQ,KAAM,SAAUxE,MAAO,OACzB,CAAEwE,KAAM,QAASxE,MAAO,SAG5B,CACEM,IAAK,SACL8Z,aAAc,SACdC,aAAc,cACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,SACL8Z,aAAc,SACdC,aAAc,eACdC,KAAM,GACNjD,KAAM,eAKJgF,EAAuC,CAC3CC,eAAgB,mDAChB3Y,UAAS,EACT4Y,gBAAiB6S,GAGbC,EAAY,CAChBvrB,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,yBACf+D,QA1GsB,CACtBwD,MAAO,GACPD,OAAQ,EACR,4BAA6B,GAC7B,8BAA+B,GAC/B,4BAA6B,GAC7B,eAAgB,GAChB,eAAgB,GAChB,SAAU,GACV,SAAU,KAoGZ,SAAS4Q,EAAuBnU,GAC9B,YAD8B,IAAAA,MAAA,IACvB,YAA6BA,GAAS,GAEhC,a,2tBC9HTrD,EAAY,UACZwY,EAAkB,WAQlBmT,EAAgD,CACpD,CACEhvB,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,KAEP,CACEla,IAAK,6BACL8Z,aAAc,6BACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,2BACL8Z,aAAc,2BACdC,aAAc,WACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,oBACL8Z,aAAc,oBACdC,aAAc,WACdC,KAAM,GACNjD,KAAM,eAIJgF,EAAuC,CAC3CC,eAAgB,mDAChB3Y,UAAS,EACT4Y,gBAAiB+S,GAGbC,EAAY,CAChBzrB,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,wBACf+D,QAAS,EAAF,CACLwD,MAAO,GACPD,OAAQ,GA/DY,CACtB,6BAA8B,GAC9B,2BAA4B,GAC5B,oBAAqB,MAiEvB,SAAS4Q,EAAuBnU,GAC9B,YAD8B,IAAAA,MAAA,IACvB,YAA6BA,GAAS,GAG/C,IAAMwoB,EAAuB,CAAC,wBAAyB,2BAEjDxrB,EAAqB,CACzB/B,SAAU,yBAGNwtB,EAAuB,CAC3BC,oBAAqB,wBACrBC,oBAAqB,yBAEvB,SAAS7Q,EAAgBC,GACvB,IAAMC,EAAY,IAAEpa,UAAUma,GAI9B,OAHAC,EAAUlX,WAAWxF,SAAQ,SAACgC,GAC5BA,EAAKwD,WAAa,CAAC,0BAEdkX,EAEM,a,6BChGf,8eAIMrb,EAAY,aACZwY,EAAkB,aAElByT,EAAyB,CAC7B7R,IAAK,oBAGD8R,EAAyB,CAAC,iBAAkB,oBAE5C7rB,EAAqB,CACzB/B,SAAU,kBAcN6tB,EAAkD,CACtD,CACExvB,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,KAEP,CACEla,IAAK,kBACL8Z,aAAc,kBACdC,aAAc,YACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,mBACL8Z,aAAc,mBACdC,aAAc,UACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,mBACL8Z,aAAc,mBACdC,aAAc,gBACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,oBACL8Z,aAAc,oBACdC,aAAc,gBACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,QACL8Z,aAAc,QACdC,aAAc,eACdC,KAAM,GACNjD,KAAM,UAKJgF,EAAuC,CAC3CC,eAAgB,oDAChB3Y,UAAS,EACT4Y,gBAAiBuT,GAGb/D,EAAY,CAChBjoB,OAAQ,eACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,iBACf+D,QAhFwB,CACxBwD,MAAO,GACPD,OAAQ,EACRuS,gBAAiB,GACjBE,iBAAkB,GAClBE,iBAAkB,GAClBE,kBAAmB,GACnBG,MAAO,KA4ET,SAASpC,EAAuBnU,GAC9B,YAD8B,IAAAA,MAAA,IACvB,YAA6BA,GAAS,GAQ/C,SAAS8X,EAAgBC,GACvB,IAAMC,EAAY,YAAYD,GAI9B,OAHAC,EAAUlX,WAAWxF,SAAQ,SAACgC,OAGvB0a,EAEM,a,6BCrHf,mfAIMrb,EAAY,WAGZwY,EAAkB,YAElB4T,EAAwB,CAC5BC,UAAW,cAGPC,EAAwB,CAAC,cAEzBjsB,EAAqB,CACzB/B,SAAU,cAaNiuB,EAAiD,CACrD,CACE5vB,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,KAEP,CACEla,IAAK,YACL8Z,aAAc,YACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,eACL8Z,aAAc,eACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,mBACL8Z,aAAc,mBACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,UACL8Z,aAAc,UACdC,aAAc,QACdC,KAAM,GACNjD,KAAM,eAKJgF,EAAuC,CAC3CC,eAAgB,mDAChB3Y,UAAS,EACT4Y,gBAAiB2T,GAGbC,EAAa,CACjBrsB,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,aACf+D,QAxEuB,CACvBwD,MAAO,GACPD,OAAQ,EACR8S,UAAW,GACX+S,aAAc,GACdC,iBAAkB,GAClBC,QAAS,KAqEX,SAASnV,EAAuBnU,GAC9B,YAD8B,IAAAA,MAAA,IACvB,YAA6BA,GAAS,GAE/C,SAAS8X,EAAgBC,GAKvB,OAJkB,IAAEna,UAAUma,GAMjB,a,6BCvGf,+aAEMpb,EAAY,UAGZwY,EAAkB,WAElBoU,EAAuB,GAKvBC,EAAuB,CAAC,QAAS,WAEjCxsB,EAAqB,CACzB/B,SAAU,SAaNwuB,EAAgD,CACpD,CACEnwB,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,KAEP,CACEla,IAAK,SACL8Z,aAAc,SACdC,aAAc,UACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,WACL8Z,aAAc,WACdC,aAAc,QACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,kBACL8Z,aAAc,kBACdC,aAAc,QACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,QACL8Z,aAAc,QACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNzF,UAAU,EACVqD,KAAM,CACJ,CAAEzQ,KAAM,MAAOxE,MAAO,YACtB,CAAEwE,KAAM,MAAOxE,MAAO,gBAMtBqc,EAAuC,CAC3CC,eAAgB,mDAChB3Y,UAAS,EACT4Y,gBAAiBkU,GAGbC,EAAY,CAChB5sB,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,QACf0tB,QAAS,GACTC,QAAS,GACT5pB,QA/EsB,CACtBwD,MAAO,GACPD,OAAQ,EACR,SAAU,GACV,WAAY,GACZ,kBAAmB,GACnBsmB,MAAO,KA4ET,SAAS1V,EAAuBnU,GAC9B,YAD8B,IAAAA,MAAA,IACvB,YAA6BA,GAAS,GAoBhC,a,6BC1Hf,ubAEMrD,EAAY,YACZwY,EAAkB,aAElB2U,EAAyB,CAC7BC,QAAS,gBAGLC,EAAyB,CAAC,eAAgB,kBAE1ChtB,EAAqB,CACzB/B,SAAU,gBAgBNgvB,EAAkD,CACtD,CACE3wB,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,KAEP,CACEla,IAAK,SACL8Z,aAAc,SACdC,aAAc,UACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,iBACL8Z,aAAc,iBACdC,aAAc,UACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,mBACL8Z,aAAc,mBACdC,aAAc,UACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,OACL8Z,aAAc,OACdC,aAAc,UACdC,KAAM,GACNjD,KAAM,SACNzF,UAAU,EACVqD,KAAM,CACJ,CAAEzQ,KAAM,QAASxE,MAAO,SACxB,CAAEwE,KAAM,MAAOxE,MAAO,SAG1B,CACEM,IAAK,oBACL8Z,aAAc,oBACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,aACL8Z,aAAc,aACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,SACNzF,UAAU,EACVqD,KAAM,CACJ,CAAEzQ,KAAM,OAAQxE,MAAO,2BACvB,CAAEwE,KAAM,OAAQxE,MAAO,2BAG3B,CACEM,IAAK,OACL8Z,aAAc,OACdC,aAAc,WACdC,KAAM,GACNjD,KAAM,kBAIJgF,EAAuC,CAC3CC,eAAgB,mDAChB3Y,UAAS,EACT4Y,gBAAiB0U,GAGbC,EAAc,CAClBptB,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,eACf+D,QAzGwB,CACxBwD,MAAO,GACPD,OAAQ,EACR,SAAU,GACV,iBAAkB,GAClB,mBAAoB,GACpB8M,KAAM,GACN,oBAAqB,GACrB,aAAc,GACd2U,KAAM,KAmGR,SAAS7Q,EAAuBnU,GAC9B,YAD8B,IAAAA,MAAA,IACvB,YAA6BA,GAAS,GAEhC,a,6BC/Hf,mbAEMrD,EAAY,WACZwY,EAAkB,YAElBgV,EAAwB,CAC5BC,UAAW,mBAGPC,EAAwB,CAAC,kBAAmB,qBAE5CrtB,EAAqB,CACzB/B,SAAU,mBAcNqvB,EAAiD,CACrD,CACEhxB,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,KAEP,CACEla,IAAK,SACL8Z,aAAc,SACdC,aAAc,UACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,iBACL8Z,aAAc,iBACdC,aAAc,UACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,uBACL8Z,aAAc,uBACdC,aAAc,WACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,sBACL8Z,aAAc,sBACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,oBACL8Z,aAAc,oBACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,eAKJgF,EAAuC,CAC3CC,eAAgB,mDAChB3Y,UAAS,EACT4Y,gBAAiB+U,GAGbC,EAAa,CACjBztB,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,kBACf+D,QAhFuB,CACvBwD,MAAO,GACPD,OAAQ,EACR,SAAU,GACV,iBAAkB,GAClB,sBAAuB,GACvB,sBAAuB,GACvB,oBAAqB,KA4EvB,SAAS4Q,EAAuBnU,GAC9B,YAD8B,IAAAA,MAAA,IACvB,YAA6BA,GAAS,GAEhC,a,6BCtGf,+aAEMrD,EAAY,UACZwY,EAAkB,WAiBlBqV,EAAgD,CACpD,CACElxB,IAAK,SACL8Z,aAAc,SACdC,aAAc,MACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,SACL8Z,aAAc,SACdC,aAAc,KACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,aACL8Z,aAAc,aACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,SACL8Z,aAAc,SACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,SAAUxE,MAAO,UACzB,CAAEwE,KAAM,UAAWxE,MAAO,WAC1B,CAAEwE,KAAM,aAAcxE,MAAO,gBAGjC,CACEM,IAAK,cACL8Z,aAAc,cACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,MAAOxE,MAAO,OACtB,CAAEwE,KAAM,WAAYxE,MAAO,YAC3B,CAAEwE,KAAM,QAASxE,MAAO,WAG5B,CACEM,IAAK,YACL8Z,aAAc,YACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,oBAER,CACE/W,IAAK,aACL8Z,aAAc,aACdC,aAAc,QACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,MAAOxE,MAAO,SACtB,CAAEwE,KAAM,QAASxE,MAAO,SAG5B,CACEM,IAAK,eACL8Z,aAAc,eACdC,aAAc,QACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,KAAMxE,MAAO,MACrB,CAAEwE,KAAM,KAAMxE,MAAO,SAGzB,CACEM,IAAK,QACL8Z,aAAc,QACdC,aAAc,YACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,KAAMxE,MAAO,MACrB,CAAEwE,KAAM,MAAOxE,MAAO,OACtB,CAAEwE,KAAM,aAAcxE,MAAO,gBAGjC,CACEM,IAAK,qBACL8Z,aAAc,qBACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,OAAQxE,MAAO,QACvB,CAAEwE,KAAM,SAAUxE,MAAO,UACzB,CAAEwE,KAAM,QAASxE,MAAO,WAG5B,CACEM,IAAK,SACL8Z,aAAc,SACdC,aAAc,MACdC,KAAM,GACNjD,KAAM,eAKJgF,EAAuC,CAC3CC,eAAgB,mDAChB3Y,UAAS,EACT4Y,gBAAiBiV,GAEbC,EAAY,CAChB3tB,OAAQ,eACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,SACf+D,QA1IsB,CACtBwD,MAAO,GACPD,OAAQ,EACR8f,OAAQ,GACRR,OAAQ,GACRxC,WAAY,GACZ1b,OAAQ,GACR2e,YAAa,GACbC,UAAW,GACXC,WAAY,GACZC,aAAc,GACdC,MAAO,GACPC,mBAAoB,GACpBzD,OAAQ,KAgIV,SAAS/L,EAAuBnU,GAC9B,YAD8B,IAAAA,MAAA,IACvB,YAA6BA,GAAS,GAG/C,IAAM0qB,EAAuB,CAAC,SAAU,aAElCC,EAAuB,CAC3BpH,UAAW,YACXV,OAAQ,UAEJ7lB,EAAqB,CACzB/B,SAAU,UAEG,a,gnBCrET2vB,EAAsB,CAC1B,CACEtxB,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,KAEP,CACEla,IAAK,gBACL8Z,aAAc,gBACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,cACL8Z,aAAc,cACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,UACL8Z,aAAc,UACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,iBAER,CACE/W,IAAK,gBACL8Z,aAAc,gBACdC,aAAc,OACdC,KAAM,GACN1I,UAAU,EACVyF,KAAM,SACNpC,KAvIkB,CACpB,CAAEzQ,KAAM,MAAOxE,MAAO,GACtB,CAAEwE,KAAM,OAAQxE,MAAO,GACvB,CAAEwE,KAAM,OAAQxE,MAAO,KAsIvB,CACEM,IAAK,iBACL8Z,aAAc,iBACdC,aAAc,YACdC,KAAM,GACN1I,UAAU,EACVyF,KAAM,SACNpC,KA1GmB,CACrB,CAAEzQ,KAAM,MAAOxE,MAAO,OACtB,CAAEwE,KAAM,MAAOxE,MAAO,OACtB,CAAEwE,KAAM,MAAOxE,MAAO,OACtB,CAAEwE,KAAM,MAAOxE,MAAO,SAwGtB,CACEM,IAAK,aACL8Z,aAAc,cACdC,aAAc,OACdC,KAAM,GACN1I,UAAU,EACVyF,KAAM,SACNpC,KAvIe,CACjB,CAAEzQ,KAAM,OAAQxE,MAAO,GACvB,CAAEwE,KAAM,MAAOxE,MAAO,GACtB,CAAEwE,KAAM,QAASxE,MAAO,GACxB,CAAEwE,KAAM,WAAYxE,MAAO,GAC3B,CAAEwE,KAAM,UAAWxE,MAAO,GAC1B,CAAEwE,KAAM,UAAWxE,MAAO,GAC1B,CAAEwE,KAAM,MAAOxE,MAAO,GACtB,CAAEwE,KAAM,UAAWxE,MAAO,GAC1B,CAAEwE,KAAM,QAASxE,MAAO,GACxB,CAAEwE,KAAM,SAAUxE,MAAO,GACzB,CAAEwE,KAAM,MAAOxE,MAAO,IACtB,CAAEwE,KAAM,QAASxE,MAAO,IACxB,CAAEwE,KAAM,QAASxE,MAAO,IACxB,CAAEwE,KAAM,YAAaxE,MAAO,IAC5B,CAAEwE,KAAM,QAASxE,MAAO,IACxB,CAAEwE,KAAM,QAASxE,MAAO,IACxB,CAAEwE,KAAM,SAAUxE,MAAO,MAwHzB,CACEM,IAAK,WACL8Z,aAAc,YACdC,aAAc,UACdC,KAAM,GACN1I,UAAU,EACVyF,KAAM,SACNpC,KAzGa,CACf,CAAEzQ,KAAM,OAAQxE,MAAO,GACvB,CAAEwE,KAAM,MAAOxE,MAAO,KAyGtB,CACEM,IAAK,WACL8Z,aAAc,WACdC,aAAc,OACdC,KAAM,GACN1I,UAAU,EACVyF,KAAM,SACNpC,KA9Ja,CACf,CAAEzQ,KAAM,OAAQxE,MAAO,GACvB,CAAEwE,KAAM,OAAQxE,MAAO,KA8JvB,CACEM,IAAK,YACL8Z,aAAc,aACdC,aAAc,SACdC,KAAM,GACN1I,UAAU,EACVyF,KAAM,SACNpC,KAtHc,CAChB,CAAEzQ,KAAM,MAAOxE,MAAO,GACtB,CAAEwE,KAAM,KAAMxE,MAAO,KAsHrB,CACEM,IAAK,SACL8Z,aAAc,SACdC,aAAc,OACdC,KAAM,GACN1I,UAAU,EACVyF,KAAM,SACNpC,KAvLW,CACb,CAAEzQ,KAAM,MAAOxE,MAAO,GACtB,CAAEwE,KAAM,MAAOxE,MAAO,GACtB,CAAEwE,KAAM,MAAOxE,MAAO,GACtB,CAAEwE,KAAM,MAAOxE,MAAO,KAqLtB,CACEM,IAAK,UACL8Z,aAAc,UACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KAxJY,CACd,CAAEzQ,KAAM,aAAcxE,MAAO,cAC7B,CAAEwE,KAAM,eAAgBxE,MAAO,gBAC/B,CAAEwE,KAAM,aAAcxE,MAAO,cAC7B,CAAEwE,KAAM,eAAgBxE,MAAO,kBAsJ/B,CACEM,IAAK,iBACL8Z,aAAc,kBACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KAzJmB,CACrB,CAAEzQ,KAAM,MAAOxE,MAAO,OACtB,CAAEwE,KAAM,OAAQxE,MAAO,UAyJvB,CACEM,IAAK,OACL8Z,aAAc,MACdC,aAAc,WACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,SACL8Z,aAAc,SACdC,aAAc,SACdC,KAAM,mDACNjD,KAAM,cAER,CACE/W,IAAK,YACL8Z,aAAc,YACdC,aAAc,OACdC,KAAM,mDACNjD,KAAM,cAER,CACE/W,IAAK,YACL8Z,aAAc,aACdC,aAAc,OACdC,KAAM,sDACNjD,KAAM,SAER,CACE/W,IAAK,kBACL8Z,aAAc,oBACdC,aAAc,QACdC,KAAM,mDACNjD,KAAM,UAIJwa,EAAY,CAChB/tB,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,aACf+D,QAAS,EAAF,GAzLS,CAChBqW,UAAW,GACXyU,cAAe,GACfC,KAAM,GACNhX,OAAQ,GACRxQ,OAAQ,EACRC,MAAO,GACPwnB,gBAAiB,GACjBC,SAAU,GACV1D,cAAe,GACf2D,WAAY,GACZC,eAAgB,GAChB9Q,OAAQ,GACR+Q,QAAS,GACT9Q,UAAW,GACX+Q,UAAW,GACX3U,QAAS,GACT4U,eAAgB,GAChB/R,YAAa,GACbgS,SAAU,MAyKNC,EAAuB,CAAC,aAAc,eAAgB,OAE5D,SAASrX,EAAuBnU,QAAA,IAAAA,MAAA,IAC9B,IAAMsC,EAAc,GAoBpB,OAnBK,IAAEvC,QAAQC,KACbsC,EAAOkB,MAAQ,IAAE5K,IAAIoH,EAAS,QAAS,KAAO,GAC9CsC,EAAOiB,OAAS,IAAE3K,IAAIoH,EAAS,SAAU,IAAM,EAC/CA,EAAU,IAAEoO,KAAKpO,EAAS,CAAC,SAAU,UACrC,IAAE1E,QAAQ0E,GAAS,SAAC1C,EAAWhE,GACzB,IAAEuC,QAAQyB,IACZA,EAAO,IAAEmH,QAAQnH,IACRoC,OAAS,IAChB4C,EAAOhJ,GAAO,IAAEoL,KAAKpH,IAEd,IAAEiR,SAASjR,IAChB,IAAEiC,SAAS,IAAE3G,IAAI0E,EAAM,aAASiO,KAAgB,IAAExL,QAAQ,IAAEnH,IAAI0E,EAAM,aAASiO,MACjFjJ,EAAOhJ,GAAO,IAAEV,IAAI0E,EAAM,WAEnB,IAAEiC,SAASjC,IAAU,IAAEyC,QAAQzC,KACxCgF,EAAOhJ,GAAOgE,OAIbgF,EAET,SAAS+e,EAAcqB,QAAA,IAAAA,MAAA,IACrB,IAAMC,EAAY,IAAE/pB,IAAI8pB,EAAW,4BACnC,OACuB,IAArBC,EAAUjjB,UACgC,IAAxC,IAAEhE,QAAQinB,EAAW,gBAA8D,IAAtC,IAAEjnB,QAAQinB,EAAW,cACzB,IAAxC,IAAEjnB,QAAQinB,EAAW,gBAAkE,IAA1C,IAAEjnB,QAAQinB,EAAW,iBAGzE,SAAS7K,EAAgBC,GACvB,IAAMC,EAAY,IAAEpa,UAAUma,GAI9B,OAHAC,EAAUlX,WAAWxF,SAAQ,SAACgC,GAC5BA,EAAKwD,WAAaxD,EAAKwD,WAAWT,KAAI,SAACtI,GAAM,OAAA0zB,EAAqB1zB,IAArB,QAExCigB,EAET,IAAMyT,EAAuB,CAC3BrT,WAAY,aACZsT,SAAU,eACV5uB,OAAQ,UAEJE,EAAqB,CACzB/B,SAAU,cAEG,a,omBC3RT0wB,EAAmC,CACvC,CACEryB,IAAK,gBACL8Z,aAAc,gBACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,qBACL8Z,aAAc,qBACdC,aAAc,aACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,oBACL8Z,aAAc,oBACdC,aAAc,aACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,OACL8Z,aAAc,OACdC,aAAc,MACdC,KAAM,GACNjD,KAAM,iBAER,CACE/W,IAAK,iBACL8Z,aAAc,iBACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KAvDwB,CAC1B,CAAEzQ,KAAM,MAAOxE,MAAO,WACtB,CAAEwE,KAAM,OAAQxE,MAAO,iBACvB,CAAEwE,KAAM,MAAOxE,MAAO,WACtB,CAAEwE,KAAM,KAAMxE,MAAO,WACrB,CAAEwE,KAAM,MAAOxE,MAAO,YACtB,CAAEwE,KAAM,MAAOxE,MAAO,YACtB,CAAEwE,KAAM,MAAOxE,MAAO,aACtB,CAAEwE,KAAM,QAASxE,MAAO,YACxB,CAAEwE,KAAM,MAAOxE,MAAO,kBAkDlB4yB,EAAmB,CACvB9uB,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,aACf+D,QAAS,CACPwD,MAAO,GACPD,OAAQ,EACRsoB,oBAAoB,EACpBC,gBAAgB,EAChBvS,YAAa,CAAC,IACd/K,QAAS,EAAF,GA7DoB,CAC7BwW,KAAM,GACN,gBAAiB,GACjB,iBAAkB,GAClB,qBAAsB,GACtB,oBAAqB,OA4DvB,SAAS7Q,EAAuBnU,QAAA,IAAAA,MAAA,IAC9B,IAAMsC,EAAc,GACpB,IAAK,IAAEvC,QAAQC,GAGb,GAFAsC,EAAOkB,MAAQ,IAAE5K,IAAIoH,EAAS,QAAS,KAAO,GAC9CsC,EAAOiB,OAAS,IAAE3K,IAAIoH,EAAS,SAAU,IAAM,EAC3CA,EAAQ6rB,oBACV,GAAI,IAAEhwB,QAAQmE,EAAQuZ,aAAc,CAClC,IAAMA,EAAc,IAAE9U,QAAQzE,EAAQuZ,aAClC,IAAE7U,KAAK6U,GAAa7Z,OAAS,IAC/B4C,EAAOiX,YAAc,IAAE7U,KAAK6U,GAAajL,MAAM,EAAG,YAGjD,GAAItO,EAAQ8rB,eAAgB,CACjC,IAAM,EAAiB,GACvB,IAAExwB,QAAQ0E,EAAQwO,SAAS,SAAClR,EAAWhE,GACjC,EAAQoG,OAAS,IAGjB,IAAE7D,QAAQyB,IACZA,EAAO,IAAEmH,QAAQnH,IACRoC,OAAS,GAChB,EAAQmB,KAAK,CAAEjB,KAAMtG,EAAK+U,OAAQ,IAAE3J,KAAKpH,GAAMgR,MAAM,EAAG,KAEjD,IAAEC,SAASjR,KACf,IAAEyC,QAAQ,IAAEnH,IAAI0E,EAAM,QAAS,MAClC,EAAQuD,KAAK,CAAEjB,KAAMtG,EAAK+U,OAAQ,IAAEzV,IAAI0E,EAAM,QAAS,IAAIgR,MAAM,EAAG,UAItE,EAAQ5O,OAAS,IACnB4C,EAAOkM,QAAU,GAIvB,OAAOlM,EAGT,IAAMypB,EAA8B,CAAC,aAAc,eAAgB,qBAAsB,qBAEnFC,EAA8B,CAClC5T,WAAY,cAGRpb,EAAqB,CACzB/B,SAAU,cAGZ,SAAS6c,EAAgBC,GACvB,IAAMC,EAAY,IAAEpa,UAAUma,GAI9B,OAHAC,EAAUlX,WAAWxF,SAAQ,SAACgC,GAC5BA,EAAKwD,WAAa,CAAC,iBAEdkX,EAGM,a,6BCtIf,qVAEaiU,EAAqB,CAChC,CACE3yB,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,KAEP,CACEla,IAAK,eACL8Z,aAAc,iBACdC,aAAc,UACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,QACL8Z,aAAc,QACdC,aAAc,eACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,WACL8Z,aAAc,WACdC,aAAc,QACdC,KAAM,GACNjD,KAAM,UAIJ6b,EAAY,CAChBpvB,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,eACfkJ,QAAS,GACTnF,QAAS,CACPuD,OAAQ,EACRC,MAAO,GACP2oB,aAAc,GACd5V,MAAO,GACPoD,SAAU,KAId,SAASxF,EAAuBnU,QAAA,IAAAA,MAAA,IAC9B,IAAMsC,EAAc,GAoBpB,OAnBK,IAAEvC,QAAQC,KACbsC,EAAOkB,MAAQ,IAAE5K,IAAIoH,EAAS,QAAS,KAAO,GAC9CsC,EAAOiB,OAAS,IAAE3K,IAAIoH,EAAS,SAAU,IAAM,EAC/CA,EAAU,IAAEoO,KAAKpO,EAAS,CAAC,SAAU,UACrC,IAAE1E,QAAQ0E,GAAS,SAAC1C,EAAWhE,GACzB,IAAEuC,QAAQyB,IACZA,EAAO,IAAEmH,QAAQnH,IACRoC,OAAS,IAChB4C,EAAOhJ,GAAO,IAAEoL,KAAKpH,IAEd,IAAEiR,SAASjR,IAChB,IAAEiC,SAAS,IAAE3G,IAAI0E,EAAM,aAASiO,KAAgB,IAAExL,QAAQ,IAAEnH,IAAI0E,EAAM,aAASiO,MACjFjJ,EAAOhJ,GAAO,IAAEV,IAAI0E,EAAM,WAEnB,IAAEiC,SAASjC,IAAU,IAAEyC,QAAQzC,KACxCgF,EAAOhJ,GAAOgE,OAIbgF,EAGT,IAAM8pB,EAAuB,CAAC,eAAgB,UAGxCC,EAAuB,GAKvBxU,EAAkB,CACtB,CAAEra,KAAM,WAAYxE,MAAO,cAC3B,CAAEwE,KAAM,WAAYxE,MAAO,cAC3B,CAAEwE,KAAM,WAAYxE,MAAO,gBAC3B,CAAEwE,KAAM,WAAYxE,MAAO,gBAC3B,CAAEwE,KAAM,cAAexE,MAAO,eAC9B,CAAEwE,KAAM,WAAYxE,MAAO,aAC3B,CAAEwE,KAAM,WAAYxE,MAAO,cAC3B,CAAEwE,KAAM,WAAYxE,MAAO,YAC3B,CAAEwE,KAAM,WAAYxE,MAAO,eAC3B,CAAEwE,KAAM,aAAcxE,MAAO,mBAC7B,CAAEwE,KAAM,aAAcxE,MAAO,mBAC7B,CAAEwE,KAAM,YAAaxE,MAAO,gBAC5B,CAAEwE,KAAM,WAAYxE,MAAO,YAC3B,CAAEwE,KAAM,aAAcxE,MAAO,gBAC7B,CAAEwE,KAAM,WAAYxE,MAAO,oBAC3B,CAAEwE,KAAM,YAAaxE,MAAO,eAExBgE,EAAqB,CACzB/B,SAAU,cAEG,a,6BClHf,iSAGauiB,EAA8C,CACzD,CACElkB,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,IAEP,CACEla,IAAK,YACL8Z,aAAc,YACdC,aAAc,gBACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,SACL8Z,aAAc,SACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,UAIV,SAAS8D,EAAuBnU,QAAA,IAAAA,MAAA,IAC9B,IAAMsC,EAAc,GAoBpB,OAnBK,IAAEvC,QAAQC,KACbsC,EAAOkB,MAAQ,IAAE5K,IAAIoH,EAAS,QAAS,KAAO,GAC9CsC,EAAOiB,OAAS,IAAE3K,IAAIoH,EAAS,SAAU,IAAM,EAC/CA,EAAU,IAAEoO,KAAKpO,EAAS,CAAC,SAAU,UACrC,IAAE1E,QAAQ0E,GAAS,SAAC1C,EAAWhE,GACzB,IAAEuC,QAAQyB,IACZA,EAAO,IAAEmH,QAAQnH,IACRoC,OAAS,IAChB4C,EAAOhJ,GAAO,IAAEoL,KAAKpH,IAEd,IAAEiR,SAASjR,IAChB,IAAEiC,SAAS,IAAE3G,IAAI0E,EAAM,aAASiO,KAAgB,IAAExL,QAAQ,IAAEnH,IAAI0E,EAAM,aAASiO,MACjFjJ,EAAOhJ,GAAO,IAAEV,IAAI0E,EAAM,WAEnB,IAAEiC,SAASjC,IAAU,IAAEyC,QAAQzC,KACxCgF,EAAOhJ,GAAOgE,OAIbgF,EAIF,IAAMmb,EAAoB,CAC/B6O,QAAS,UACTC,UAAW,aAGAvvB,EAAqB,CAChC/B,SAAU,aAINoB,EAAoB,CAAC,YAAa,WAIzB,WACbS,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,YACf+D,QAAS,CACPuD,OAAQ,EACRC,MAAO,GACPgpB,UAAW,GACXtY,OAAQ,M,ikBClENuY,EAA4B,CAChC,CACEnzB,IAAK,OACL8Z,aAAc,OACdC,aAAc,MACdC,KAAM,GACNjD,KAAM,iBAER,CACE/W,IAAK,aACL8Z,aAAc,aACdC,aAAc,OACdC,KAAM,kDACNjD,KAAM,oBAER,CACE/W,IAAK,UACL8Z,aAAc,SACdC,aAAc,SACdC,KAAM,uDACNjD,KAAM,cAER,CACE/W,IAAK,SACL8Z,aAAc,SACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,YACL8Z,aAAc,YACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,cACL8Z,aAAc,cACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,oBACL8Z,aAAc,oBACdC,aAAc,QACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,gBACL8Z,aAAc,gBACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,UACL8Z,aAAc,MACdC,aAAc,MACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,uBACL8Z,aAAc,uBACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,SACNpC,KA3FwB,CAC1B,CAAEzQ,KAAM,MAAOxE,MAAO,WACtB,CAAEwE,KAAM,MAAOxE,MAAO,oBACtB,CAAEwE,KAAM,QAASxE,MAAO,aA0FxB,CACEM,IAAK,qBACL8Z,aAAc,qBACdC,aAAc,aACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,oBACL8Z,aAAc,oBACdC,aAAc,2CACdC,KAAM,GACNjD,KAAM,eAIJqc,EAAY,CAChB5vB,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,aACf+D,QAAS,CACPwD,MAAO,GACPD,OAAQ,EACRsoB,oBAAoB,EACpBC,gBAAgB,EAChBvS,YAAa,CAAC,IACd/K,QAAS,EAAF,GArHa,CACtBwW,KAAM,GACN,aAAc,GACd,UAAW,GACX,SAAU,GACV,YAAa,GACb,cAAe,GACf,oBAAqB,GACrB,gBAAiB,GACjB,uBAAwB,GACxB,qBAAsB,GACtB,oBAAqB,GACrB,UAAW,OA6Gb,SAAS7Q,EAAuBnU,QAAA,IAAAA,MAAA,IAC9B,IAAMsC,EAAc,GACpB,IAAK,IAAEvC,QAAQC,GAGb,GAFAsC,EAAOkB,MAAQ,IAAE5K,IAAIoH,EAAS,QAAS,KAAO,GAC9CsC,EAAOiB,OAAS,IAAE3K,IAAIoH,EAAS,SAAU,IAAM,EAC3CA,EAAQ6rB,oBACV,GAAI,IAAEhwB,QAAQmE,EAAQuZ,aAAc,CAClC,IAAMA,EAAc,IAAE9U,QAAQzE,EAAQuZ,aAClC,IAAE7U,KAAK6U,GAAa7Z,OAAS,IAC/B4C,EAAOiX,YAAc,IAAE7U,KAAK6U,GAAajL,MAAM,EAAG,YAGjD,GAAItO,EAAQ8rB,eAAgB,CACjC,IAAM,EAAiB,GACvB,IAAExwB,QAAQ0E,EAAQwO,SAAS,SAAClR,EAAWhE,GACjC,EAAQoG,OAAS,IAGjB,IAAE7D,QAAQyB,IACZA,EAAO,IAAEmH,QAAQnH,IACRoC,OAAS,GAChB,EAAQmB,KAAK,CAAEjB,KAAMtG,EAAK+U,OAAQ,IAAE3J,KAAKpH,GAAMgR,MAAM,EAAG,KAEjD,IAAEC,SAASjR,KACf,IAAEyC,QAAQ,IAAEnH,IAAI0E,EAAM,QAAS,MAClC,EAAQuD,KAAK,CAAEjB,KAAMtG,EAAK+U,OAAQ,IAAEzV,IAAI0E,EAAM,QAAS,IAAIgR,MAAM,EAAG,UAItE,EAAQ5O,OAAS,IACnB4C,EAAOkM,QAAU,GAIvB,OAAOlM,EAGT,IAAMqqB,EAAuB,CAAC,aAAc,eAAgB,qBAAsB,qBAE5EC,EAAmB,CACvB,WACA,aACA,eACA,gBACA,eACA,cACA,cACA,aACA,aACA,cACA,cACA,UACA,UACA,gBACA,eACA,YACA,WACA,gBACA,eACA,YACA,WACA,gBACA,eACA,aACA,UACA,WACA,eACA,eACA,kBAOI5vB,EAAqB,CACzB/B,SAAU,cAEZ,SAASomB,EAAcpf,GACrB,IAAM4qB,EAAkB,IAAExsB,IAAIusB,EAAkB,IAAErL,SAClD,OAAqE,IAA9D,IAAE7lB,QAAQmxB,EAAiB,IAAEtL,QAAQtf,EAAOR,aAErD,SAASqW,EAAgBC,GACvB,IAAMC,EAAY,IAAEpa,UAAUma,GAI9B,OAHAC,EAAUlX,WAAWxF,SAAQ,SAACgC,GAC5BA,EAAKwD,WAAa,CAAC,iBAEdkX,EAEM,a,ugBCxNTrb,EAAY,UAWZmwB,EAAY,CAChBhwB,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,sBACf+D,QAAS,EAAF,GAjBS,CAChB+sB,MAAO,GACPC,OAAQ,EACRnL,oBAAqB,GACrBoL,sBAAuB,GACvBjM,MAAO,GACP6I,WAAOte,KAsBH2hB,EAAsB,CAC1B,CACE5zB,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,+BACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,IAEP,CACEla,IAAK,sBACL8Z,aAAc,uBACdC,aAAc,cACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,wBACL8Z,aAAc,yBACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,QACL8Z,aAAc,QACdC,aAAc,eACdC,KAAM,kDACNjD,KAAM,YAER,CACE/W,IAAK,QACL8Z,aAAc,QACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KArDe,CACjB,CAAEzQ,KAAM,MAAOxE,MAAO,GACtB,CAAEwE,KAAM,OAAQxE,MAAO,GACvB,CAAEwE,KAAM,MAAOxE,MAAO,GACtB,CAAEwE,KAAM,QAASxE,MAAO,GACxB,CAAEwE,KAAM,QAASxE,MAAO,MAoDpBm0B,EAAuB,CAAC,sBAAuB,yBAE/CnwB,EAAqB,CACzB/B,SAAU,uBAEZ,SAASkZ,EAAuBnU,QAAA,IAAAA,MAAA,IAC9B,IAAMsC,EAAc,GAoBpB,OAnBK,IAAEvC,QAAQC,KACbsC,EAAOyqB,MAAQ,IAAEn0B,IAAIoH,EAAS,QAAS,KAAO,GAC9CsC,EAAO0qB,OAAS,IAAEp0B,IAAIoH,EAAS,SAAU,IAAM,EAC/CA,EAAU,IAAEoO,KAAKpO,EAAS,CAAC,SAAU,UACrC,IAAE1E,QAAQ0E,GAAS,SAAC1C,EAAWhE,GACzB,IAAEuC,QAAQyB,IACZA,EAAO,IAAEmH,QAAQnH,IACRoC,OAAS,IAChB4C,EAAOhJ,GAAO,IAAEoL,KAAKpH,IAEd,IAAEiR,SAASjR,IAChB,IAAEiC,SAAS,IAAE3G,IAAI0E,EAAM,aAASiO,KAAgB,IAAExL,QAAQ,IAAEnH,IAAI0E,EAAM,aAASiO,MACjFjJ,EAAOhJ,GAAO,IAAEV,IAAI0E,EAAM,WAEnB,IAAEiC,SAASjC,IAAU,IAAEyC,QAAQzC,KACxCgF,EAAOhJ,GAAOgE,OAIbgF,EAGM,a,wkBCxCT8qB,EAAwB,CAC5B,CACE9zB,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,KAEP,CACEla,IAAK,aACL8Z,aAAc,cACdC,aAAc,OACdhD,KAAM,SAER,CACE/W,IAAK,UACL8Z,aAAc,UACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KAzEY,CACd,CAAEzQ,KAAM,YAAaxE,MAAO,aAC5B,CAAEwE,KAAM,eAAgBxE,MAAO,gBAC/B,CAAEwE,KAAM,aAAcxE,MAAO,cAC7B,CAAEwE,KAAM,OAAQxE,MAAO,QACvB,CAAEwE,KAAM,cAAexE,MAAO,iBAsE9B,CACEM,IAAK,YACL8Z,aAAc,YACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KAzEc,CAChB,CAAEzQ,KAAM,KAAMxE,MAAO,GACrB,CAAEwE,KAAM,KAAMxE,MAAO,KAyErB,CACEM,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,YACL8Z,aAAc,YACdC,aAAc,0BACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,aACL8Z,aAAc,aACdC,aAAc,aACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,YACL8Z,aAAc,YACdC,aAAc,UACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,eACL8Z,aAAc,eACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,aACL8Z,aAAc,aACdC,aAAc,mDACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,gBACL8Z,aAAc,gBACdC,aAAc,sCACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,SACL8Z,aAAc,SACdC,aAAc,OACdzI,UAAU,EACVyF,KAAM,SACNpC,KAxJW,CACb,CAAEzQ,KAAM,OAAQxE,MAAO,GACvB,CAAEwE,KAAM,QAASxE,MAAO,GACxB,CAAEwE,KAAM,MAAOxE,MAAO,GACtB,CAAEwE,KAAM,MAAOxE,OAAQ,GACvB,CAAEwE,KAAM,MAAOxE,OAAQ,KAqJvB,CACEM,IAAK,cACL8Z,aAAc,cACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KAxJgB,CAClB,CAAEzQ,KAAM,MAAOxE,MAAO,GACtB,CAAEwE,KAAM,MAAOxE,MAAO,GACtB,CAAEwE,KAAM,MAAOxE,MAAO,KAuJtB,CACEM,IAAK,aACL8Z,aAAc,aACdC,aAAc,+BACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,YACL8Z,aAAc,YACdC,aAAc,OACdzI,UAAU,EACVyF,KAAM,SACNpC,KArLc,CAChB,CAAEzQ,KAAM,OAAQxE,MAAO,GACvB,CAAEwE,KAAM,OAAQxE,MAAO,GACvB,CAAEwE,KAAM,UAAWxE,MAAO,KAoL1B,CACEM,IAAK,cACL8Z,aAAc,cACdC,aAAc,kCACdC,KAAM,GACNjD,KAAM,SACNpC,KAlMgB,CAClB,CAAEzQ,KAAM,OAAQxE,MAAO,YACvB,CAAEwE,KAAM,OAAQxE,MAAO,aAkMvB,CACEM,IAAK,OACL8Z,aAAc,OACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KArKS,CACX,CAAEzQ,KAAM,YAAaxE,MAAO,GAC5B,CAAEwE,KAAM,eAAgBxE,MAAO,GAC/B,CAAEwE,KAAM,SAAUxE,MAAO,GACzB,CAAEwE,KAAM,SAAUxE,MAAO,GACzB,CAAEwE,KAAM,eAAgBxE,MAAO,GAC/B,CAAEwE,KAAM,eAAgBxE,MAAO,GAC/B,CAAEwE,KAAM,eAAgBxE,MAAO,GAC/B,CAAEwE,KAAM,cAAexE,MAAO,GAC9B,CAAEwE,KAAM,cAAexE,MAAO,MAgK1Bq0B,EAAc,CAClBvwB,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,aACf+D,QAAS,EAAF,GArKW,CAClBgU,WAAY,GACZ0C,QAAS,GACTC,UAAW,KACX0D,OAAQ,GACRC,UAAW,GACXZ,WAAY,GACZD,UAAW,GACXc,aAAc,GACdC,WAAY,GACZC,cAAe,GACf1G,OAAQ,GACR2G,YAAa,KACbC,WAAY,GACZC,UAAW,KACXC,YAAa,GACbC,KAAM,QAwJR,SAAS3G,EAAuBnU,QAAA,IAAAA,MAAA,IAC9B,IAAMsC,EAAc,GAqBpB,OApBK,IAAEvC,QAAQC,KACbsC,EAAOkB,MAAQ,IAAE5K,IAAIoH,EAAS,QAAS,KAAO,GAC9CsC,EAAOiB,OAAS,IAAE3K,IAAIoH,EAAS,SAAU,IAAM,EAC/CA,EAAU,IAAEoO,KAAKpO,EAAS,CAAC,SAAU,UACrC,IAAE1E,QAAQ0E,GAAS,SAAC1C,EAAWhE,GACzB,IAAEuC,QAAQyB,IACZA,EAAO,IAAEmH,QAAQnH,IACRoC,OAAS,IAChB4C,EAAOhJ,GAAO,IAAEoL,KAAKpH,IAEd,IAAEiR,SAASjR,IAEhB,IAAEiC,SAAS,IAAE3G,IAAI0E,EAAM,aAASiO,KAAgB,IAAExL,QAAQ,IAAEnH,IAAI0E,EAAM,aAASiO,MACjFjJ,EAAOhJ,GAAO,IAAEV,IAAI0E,EAAM,WAEnB,IAAEiC,SAASjC,IAAU,IAAEyC,QAAQzC,KACxCgF,EAAOhJ,GAAOgE,OAIbgF,EAGT,SAAS+e,EAAcqB,QAAA,IAAAA,MAAA,IACrB,IAAMC,EAAY,IAAE/pB,IAAI8pB,EAAW,4BACnC,OAA4B,IAArBC,EAAUjjB,SAAwD,IAAxC,IAAEhE,QAAQinB,EAAW,cAGxD,IAAM2K,EAAyB,CAAC,aAAc,eAAgB,SAExDC,EAAyB,CAC7BC,WAAY,aACZpV,WAAY,cAGRpb,EAAqB,CACzB/B,SAAU,cAEG,a,6BClQf,6RAqBMwyB,EAAsB,CAC1B,CACEn0B,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,KAEP,CACEla,IAAK,aACL8Z,aAAc,aACdC,aAAc,QACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,oBACL8Z,aAAc,oBACdC,aAAc,aACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,kBACL8Z,aAAc,kBACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KAzDoB,CACtB,CAAEzQ,KAAM,KAAMxE,MAAO,IACrB,CAAEwE,KAAM,OAAQxE,MAAO,KACvB,CAAEwE,KAAM,aAAcxE,MAAO,OAwD7B,CACEM,IAAK,mBACL8Z,aAAc,mBACdC,aAAc,WACdC,KAAM,GACNjD,KAAM,SACNpC,KA3DqB,CACvB,CAAEzQ,KAAM,KAAMxE,MAAO,IACrB,CAAEwE,KAAM,OAAQxE,MAAO,KACvB,CAAEwE,KAAM,SAAUxE,MAAO,KACzB,CAAEwE,KAAM,UAAWxE,MAAO,KAC1B,CAAEwE,KAAM,OAAQxE,MAAO,YAwDvB,CACEM,IAAK,8BACL8Z,aAAc,8BACdC,aAAc,WACdC,KAAM,GACNjD,KAAM,SACNzF,UAAU,EACVqD,KA5D4B,CAC9B,CAAEzQ,KAAM,SAAUxE,MAAO,OACzB,CAAEwE,KAAM,UAAWxE,MAAO,SA8DtB00B,EAAY,CAChB5wB,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,gBACf+D,QAAS,CACPwD,MAAO,GACPD,OAAQ,EACR0Q,WAAY,GACZyC,QAAS,GACTC,UAAW,KACXgX,gBAAiB,GACjBC,iBAAkB,GAClBC,4BAA6B,GAC7BC,kBAAmB,KAIvB,SAAS3Z,EAAuBnU,GAC9B,YAD8B,IAAAA,MAAA,IACvB,YAA6BA,GAAS,GAG/C,IAAM+tB,EAAuB,CAAC,gBAAiB,mBAEzCC,EAAuB,CAC3BC,cAAe,iBAGXjxB,EAAqB,CACzB/B,SAAU,iBAGG,a,whBCjGTizB,EAA4B,CAChC,CACE50B,IAAK,uBACL8Z,aAAc,sBACdC,aAAc,QACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,yBACL8Z,aAAc,wBACdC,aAAc,QACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,eACL8Z,aAAc,eACdC,aAAc,QACdC,KAAM,GACNjD,KAAM,SACNpC,KAtCiB,CACnB,CAAEzQ,KAAM,MAAOxE,MAAO,OACtB,CAAEwE,KAAM,YAAaxE,MAAO,aAC5B,CAAEwE,KAAM,UAAWxE,MAAO,aAqC1B,CACEM,IAAK,cACL8Z,aAAc,cACdC,aAAc,UACdC,KAAM,GACNjD,KAAM,SACNpC,KAxCgB,CAClB,CAAEzQ,KAAM,SAAUxE,MAAO,0BACzB,CAAEwE,KAAM,QAASxE,MAAO,kCA0CpBm1B,EAAY,CAChBrxB,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,qBACf+D,QAAS,CACPwD,MAAO,GACPD,OAAQ,EACRsoB,oBAAoB,EACpBC,gBAAgB,EAChBsC,oBAAqB,CAAC,IACtB5f,QAAS,EAAF,GAtDa,CACtB,uBAAwB,GACxB,yBAA0B,GAC1B,eAAgB,GAChB,cAAe,OAsDjB,SAAS2F,EAAuBnU,QAAA,IAAAA,MAAA,IAC9B,IAAMsC,EAAc,GACpB,IAAK,IAAEvC,QAAQC,GAGb,GAFAsC,EAAOkB,MAAQ,IAAE5K,IAAIoH,EAAS,QAAS,KAAO,GAC9CsC,EAAOiB,OAAS,IAAE3K,IAAIoH,EAAS,SAAU,IAAM,EAC3CA,EAAQ6rB,oBACV,GAAI,IAAEhwB,QAAQmE,EAAQouB,qBAAsB,CAC1C,IAAMA,EAAsB,IAAE3pB,QAAQzE,EAAQouB,qBAC1C,IAAE1pB,KAAK0pB,GAAqB1uB,OAAS,IACvC4C,EAAO8rB,oBAAsB,IAAE1pB,KAAK0pB,GAAqB9f,MAAM,EAAG,YAGjE,GAAItO,EAAQ8rB,eAAgB,CACjC,IAAM,EAAiB,GACvB,IAAExwB,QAAQ0E,EAAQwO,SAAS,SAAClR,EAAWhE,GACjC,EAAQoG,OAAS,IAGjB,IAAE7D,QAAQyB,IACZA,EAAO,IAAEmH,QAAQnH,IACRoC,OAAS,GAChB,EAAQmB,KAAK,CAAEjB,KAAMtG,EAAK+U,OAAQ,IAAE3J,KAAKpH,GAAMgR,MAAM,EAAG,KAEjD,IAAEC,SAASjR,KACf,IAAEyC,QAAQ,IAAEnH,IAAI0E,EAAM,QAAS,MAClC,EAAQuD,KAAK,CAAEjB,KAAMtG,EAAK+U,OAAQ,IAAEzV,IAAI0E,EAAM,QAAS,IAAIgR,MAAM,EAAG,UAItE,EAAQ5O,OAAS,IACnB4C,EAAOkM,QAAU,GAIvB,OAAOlM,EAGT,IAAM+rB,EAAuB,CAAC,qBAAsB,wBAE9CrxB,EAAqB,CACzB/B,SAAU,sBAGNqzB,EAAuB,CAC3BC,mBAAoB,sBAEP,a,whBCpGTC,EAA4B,CAChC,CACEl1B,IAAK,SACL8Z,aAAc,SACdC,aAAc,MACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,SACL8Z,aAAc,SACdC,aAAc,KACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,aACL8Z,aAAc,aACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,SACL8Z,aAAc,SACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,SAAUxE,MAAO,UACzB,CAAEwE,KAAM,UAAWxE,MAAO,WAC1B,CAAEwE,KAAM,aAAcxE,MAAO,gBAGjC,CACEM,IAAK,cACL8Z,aAAc,cACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,MAAOxE,MAAO,OACtB,CAAEwE,KAAM,WAAYxE,MAAO,YAC3B,CAAEwE,KAAM,QAASxE,MAAO,WAG5B,CACEM,IAAK,YACL8Z,aAAc,YACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,oBAER,CACE/W,IAAK,aACL8Z,aAAc,aACdC,aAAc,QACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,MAAOxE,MAAO,SACtB,CAAEwE,KAAM,QAASxE,MAAO,SAG5B,CACEM,IAAK,eACL8Z,aAAc,eACdC,aAAc,QACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,KAAMxE,MAAO,MACrB,CAAEwE,KAAM,KAAMxE,MAAO,SAGzB,CACEM,IAAK,QACL8Z,aAAc,QACdC,aAAc,YACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,KAAMxE,MAAO,MACrB,CAAEwE,KAAM,MAAOxE,MAAO,OACtB,CAAEwE,KAAM,aAAcxE,MAAO,gBAGjC,CACEM,IAAK,qBACL8Z,aAAc,qBACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,OAAQxE,MAAO,QACvB,CAAEwE,KAAM,SAAUxE,MAAO,UACzB,CAAEwE,KAAM,QAASxE,MAAO,WAG5B,CACEM,IAAK,SACL8Z,aAAc,SACdC,aAAc,MACdC,KAAM,GACNjD,KAAM,eAIJoe,EAAY,CAChB3xB,OAAQ,eACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,SACf+D,QAAS,CACPwD,MAAO,GACPD,OAAQ,EACRiL,QAAS,EAAF,GArIa,CACtB6U,OAAQ,GACRR,OAAQ,GACRxC,WAAY,GACZ1b,OAAQ,GACR2e,YAAa,GACbC,UAAW,GACXC,WAAY,GACZC,aAAc,GACdC,MAAO,GACPC,mBAAoB,GACpBzD,OAAQ,OA8HV,SAAS/L,EAAuBnU,QAAA,IAAAA,MAAA,IAC9B,IAAMsC,EAAc,GACpB,IAAK,IAAEvC,QAAQC,GAAU,CACvBsC,EAAOkB,MAAQ,IAAE5K,IAAIoH,EAAS,QAAS,KAAO,GAC9CsC,EAAOiB,OAAS,IAAE3K,IAAIoH,EAAS,SAAU,IAAM,EAC/C,IAAM,EAAiB,GACvB,IAAE1E,QAAQ0E,EAAQwO,SAAS,SAAClR,EAAWhE,GAEjC,IAAEuC,QAAQyB,IACZA,EAAO,IAAEmH,QAAQnH,IACRoC,OAAS,GAChB,EAAQmB,KAAK,CAAEjB,KAAMtG,EAAKuG,MAAO,IAAE6E,KAAKpH,GAAMgR,MAAM,EAAG,KAEhD,IAAEC,SAASjR,KACf,IAAEyC,QAAQ,IAAEnH,IAAI0E,EAAM,QAAS,MAClC,EAAQuD,KAAK,CAAEjB,KAAMtG,EAAKuG,MAAO,IAAEjH,IAAI0E,EAAM,QAAS,IAAIgR,MAAM,EAAG,SAIrE,EAAQ5O,OAAS,IACnB4C,EAAOkM,QAAU,GAGrB,OAAOlM,EAGT,IAAMosB,EAAuB,CAAC,SAAU,aAElCC,EAAuB,CAC3BpL,UAAW,YACXV,OAAQ,UAEJ7lB,EAAqB,CACzB/B,SAAU,UAEG,a,iUCjJF2zB,EAAqB,CAChC,CACEt1B,IAAK,aACL8Z,aAAc,aACdC,aAAc,cACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,eACL8Z,aAAc,eACdC,aAAc,UACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,aACL8Z,aAAc,aACdC,aAAc,eACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,iBACL8Z,aAAc,iBACdC,aAAc,UACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEjV,MAAO,WAAYwE,KAAM,YAC3B,CAAExE,MAAO,UAAWwE,KAAM,WAC1B,CAAExE,MAAO,OAAQwE,KAAM,QACvB,CAAExE,MAAO,YAAawE,KAAM,aAC5B,CAAExE,MAAO,SAAUwE,KAAM,UACzB,CAAExE,MAAO,YAAawE,KAAM,aAC5B,CAAExE,MAAO,WAAYwE,KAAM,cAG/B,CACElE,IAAK,cACL8Z,aAAc,cACdC,aAAc,QACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,qBACL8Z,aAAc,qBACdC,aAAc,eACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,uBACL8Z,aAAc,uBACdC,aAAc,iBACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,aACL8Z,aAAc,UACdC,aAAc,YACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,KAAMxE,MAAO,SACrB,CAAEwE,KAAM,KAAMxE,MAAO,WAiBrB61B,EAAW,CACf/xB,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,YACfkJ,QAAS,GACTnF,SAAO,GACLuD,OAAQ,EACRC,MAAO,IACP,aAAe,CAAC,IAChB,EAAAgL,QAAS,CACP,aAAc,GACd,eAAgB,GAChB,aAAc,GACd,kBAAmB,GACnB,eAAgB,GAChB,qBAAsB,GACtB,wBAAyB,GACzB,cAAe,IAElB,IAGH,SAAS2F,EAAuBnU,QAAA,IAAAA,MAAA,IAC9B,IAAMsC,EAAc,GACpB,IAAK,IAAEvC,QAAQC,GAGb,GAFAsC,EAAOkB,MAAQ,IAAE5K,IAAIoH,EAAS,QAAS,KAAO,GAC9CsC,EAAOiB,OAAS,IAAE3K,IAAIoH,EAAS,SAAU,IAAM,EAC3CA,EAAQ6rB,oBACV,GAAI,IAAEhwB,QAAQmE,EAAO,YAAgB,CACnC,IAAMuZ,EAAc,IAAE9U,QAAQzE,EAAO,YACjC,IAAE0E,KAAK6U,GAAa7Z,OAAS,IAC/B4C,EAAM,WAAgB,IAAEoC,KAAK6U,GAAajL,MAAM,EAAG,YAGlD,GAAItO,EAAQ8rB,eAAgB,CACjC,IAAM,EAAiB,GACvB,IAAExwB,QAAQ0E,EAAQwO,SAAS,SAAClR,EAAWhE,GACjC,EAAQoG,OAAS,IAGjB,IAAE7D,QAAQyB,IACZA,EAAO,IAAEmH,QAAQnH,IACRoC,OAAS,GAChB,EAAQmB,KAAK,CAAEjB,KAAMtG,EAAK+U,OAAQ,IAAE3J,KAAKpH,GAAMgR,MAAM,EAAG,KAEjD,IAAEC,SAASjR,KACf,IAAEyC,QAAQ,IAAEnH,IAAI0E,EAAM,QAAS,MAClC,EAAQuD,KAAK,CAAEjB,KAAMtG,EAAK+U,OAAQ,IAAEzV,IAAI0E,EAAM,QAAS,IAAIgR,MAAM,EAAG,UAItE,EAAQ5O,OAAS,IACnB4C,EAAOkM,QAAU,GAIvB,OAAOlM,EAGT,IAAMwsB,EAAsB,CAAC,YAAa,cAAe,aAGnDC,EAAsB,CAC1BlL,IAAK,aAGD7mB,EAAqB,CACzB/B,SAAU,aAQG,a,kiBC1IT+zB,EAA0B,CAC9B,CACE11B,IAAK,SACL8Z,aAAc,SACdC,aAAc,0CACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,GAEP,CACEja,IAAK,QACL8Z,aAAc,QACdC,aAAc,gCACdC,KAAM,GACNjD,KAAM,cACNkD,IAAK,EACLC,IAAK,KAEP,CACEla,IAAK,cACL8Z,aAAc,eACdC,aAAc,OACdhD,KAAM,cAER,CACE/W,IAAK,eACL8Z,aAAc,eACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KAlFkB,CACpB,CAAEzQ,KAAM,OAAQxE,MAAO,GACvB,CAAEwE,KAAM,OAAQxE,MAAO,GACvB,CAAEwE,KAAM,OAAQxE,MAAO,GACvB,CAAEwE,KAAM,OAAQxE,MAAO,GACvB,CAAEwE,KAAM,aAAcxE,OAAQ,KA+E9B,CACEM,IAAK,cACL8Z,aAAc,cACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KAlFiB,CACnB,CAAEzQ,KAAM,QAASxE,MAAO,GACxB,CAAEwE,KAAM,OAAQxE,MAAO,GACvB,CAAEwE,KAAM,OAAQxE,OAAQ,KAiFxB,CACEM,IAAK,SACL8Z,aAAc,SACdC,aAAc,OACdC,KAAM,GACN1I,UAAU,EACVyF,KAAM,SACNpC,KArFW,CACb,CAAEzQ,KAAM,OAAQxE,MAAO,GACvB,CAAEwE,KAAM,QAASxE,MAAO,GACxB,CAAEwE,KAAM,OAAQxE,MAAO,GACvB,CAAEwE,KAAM,QAASxE,OAAQ,KAmFzB,CACEM,IAAK,QACL8Z,aAAc,QACdC,aAAc,UACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,WACL8Z,aAAc,WACdC,aAAc,+CACdC,KAAM,GACNjD,KAAM,SAER,CACE/W,IAAK,UACL8Z,aAAc,UACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KApGY,CACd,CAAEzQ,KAAM,OAAQxE,MAAO,GACvB,CAAEwE,KAAM,OAAQxE,MAAO,GACvB,CAAEwE,KAAM,WAAYxE,OAAQ,KAmG5B,CACEM,IAAK,UACL8Z,aAAc,UACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KAtGY,CACd,CAAEzQ,KAAM,YAAaxE,MAAO,aAC5B,CAAEwE,KAAM,eAAgBxE,MAAO,gBAC/B,CAAEwE,KAAM,aAAcxE,MAAO,gBAqG7B,CACEM,IAAK,cACL8Z,aAAc,cACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KAxGgB,CAClB,CAAEzQ,KAAM,KAAMxE,MAAO,OACrB,CAAEwE,KAAM,KAAMxE,MAAO,WA0GjBi2B,EAAgB,CACpBnyB,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,aACf+D,QAAS,EAAF,GA/Ga,CACpBuZ,YAAa,GACb2V,aAAc,GACdC,YAAa,GACbpb,OAAQ,GACRwC,MAAO,GACPoD,SAAU,GACV+G,QAAS,GACTld,MAAO,GACPD,OAAQ,EACRmT,QAAS,GACTkD,YAAa,MAuGf,SAASzF,EAAuBnU,QAAA,IAAAA,MAAA,IAC9B,IAAMsC,EAAc,GAqBpB,OApBK,IAAEvC,QAAQC,KACbsC,EAAOkB,MAAQ,IAAE5K,IAAIoH,EAAS,QAAS,KAAO,GAC9CsC,EAAOiB,OAAS,IAAE3K,IAAIoH,EAAS,SAAU,IAAM,EAC/CA,EAAU,IAAEoO,KAAKpO,EAAS,CAAC,SAAU,UACrC,IAAE1E,QAAQ0E,GAAS,SAAC1C,EAAWhE,GACzB,IAAEuC,QAAQyB,IACZA,EAAO,IAAEmH,QAAQnH,IACRoC,OAAS,IAChB4C,EAAOhJ,GAAO,IAAEoL,KAAKpH,IAEd,IAAEiR,SAASjR,IAEhB,IAAEiC,SAAS,IAAE3G,IAAI0E,EAAM,aAASiO,KAAgB,IAAExL,QAAQ,IAAEnH,IAAI0E,EAAM,aAASiO,MACjFjJ,EAAOhJ,GAAO,IAAEV,IAAI0E,EAAM,WAEnB,IAAEiC,SAASjC,IAAU,IAAEyC,QAAQzC,KACxCgF,EAAOhJ,GAAOgE,OAIbgF,EAGT,IAAM8sB,EAA2B,CAAC,aAAc,gBAE1CC,EAA2B,CAC/Bn0B,OAAQ,cAGJ8B,EAAqB,CACzB/B,SAAU,cAEG,a,6iBCzLTq0B,EAA8B,CAAC,eAAgB,kBAQ/CC,EAAmC,CACvC,CACEj2B,IAAK,iBACL8Z,aAAc,gBACdC,aAAc,aACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,mBACL8Z,aAAc,kBACdC,aAAc,kBACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,SACL8Z,aAAc,SACdC,aAAc,UACdC,KAAM,GACNjD,KAAM,eAIJmf,EAAmB,CACvB1yB,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,eACf+D,QAAS,CACPwD,MAAO,GACPD,OAAQ,EACRsoB,oBAAoB,EACpBC,gBAAgB,EAChB2D,cAAe,CAAC,IAChBjhB,QAAS,EAAF,GA5CoB,CAC7B,iBAAkB,GAClB,mBAAoB,GACpB,SAAU,OA6CZ,SAAS2F,EAAuBnU,QAAA,IAAAA,MAAA,IAC9B,IAAMsC,EAAc,GACpB,IAAK,IAAEvC,QAAQC,GAGb,GAFAsC,EAAOkB,MAAQ,IAAE5K,IAAIoH,EAAS,QAAS,KAAO,GAC9CsC,EAAOiB,OAAS,IAAE3K,IAAIoH,EAAS,SAAU,IAAM,EAC3CA,EAAQ6rB,oBACV,GAAI,IAAEhwB,QAAQmE,EAAQyvB,eAAgB,CACpC,IAAMA,EAAgB,IAAEhrB,QAAQzE,EAAQyvB,eACpC,IAAE/qB,KAAK+qB,GAAe/vB,OAAS,IACjC4C,EAAOiX,YAAc,IAAE7U,KAAK+qB,GAAenhB,MAAM,EAAG,YAGnD,GAAItO,EAAQ8rB,eAAgB,CACjC,IAAM,EAAiB,GACvB,IAAExwB,QAAQ0E,EAAQwO,SAAS,SAAClR,EAAWhE,GACjC,EAAQoG,OAAS,IAGjB,IAAE7D,QAAQyB,IACZA,EAAO,IAAEmH,QAAQnH,IACRoC,OAAS,GAChB,EAAQmB,KAAK,CAAEjB,KAAMtG,EAAK+U,OAAQ,IAAE3J,KAAKpH,GAAMgR,MAAM,EAAG,KAEjD,IAAEC,SAASjR,KACf,IAAEyC,QAAQ,IAAEnH,IAAI0E,EAAM,QAAS,MAClC,EAAQuD,KAAK,CAAEjB,KAAMtG,EAAK+U,OAAQ,IAAEzV,IAAI0E,EAAM,QAAS,IAAIgR,MAAM,EAAG,UAItE,EAAQ5O,OAAS,IACnB4C,EAAOkM,QAAU,GAIvB,OAAOlM,EAGT,IAAMtF,EAAqB,CACzB/B,SAAU,gBAGNy0B,EAAuB,CAC3BC,MAAO,gBAGM,a,giBClFTC,EAA8B,CAClC,CACEt2B,IAAK,SACL8Z,aAAc,SACdC,aAAc,MACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,SACL8Z,aAAc,SACdC,aAAc,KACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,aACL8Z,aAAc,aACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,cAER,CACE/W,IAAK,SACL8Z,aAAc,SACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,SAAUxE,MAAO,UACzB,CAAEwE,KAAM,UAAWxE,MAAO,WAC1B,CAAEwE,KAAM,aAAcxE,MAAO,gBAGjC,CACEM,IAAK,cACL8Z,aAAc,cACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,MAAOxE,MAAO,OACtB,CAAEwE,KAAM,WAAYxE,MAAO,YAC3B,CAAEwE,KAAM,QAASxE,MAAO,WAG5B,CACEM,IAAK,YACL8Z,aAAc,YACdC,aAAc,OACdC,KAAM,GACNjD,KAAM,oBAER,CACE/W,IAAK,aACL8Z,aAAc,aACdC,aAAc,QACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,MAAOxE,MAAO,SACtB,CAAEwE,KAAM,QAASxE,MAAO,SAG5B,CACEM,IAAK,eACL8Z,aAAc,eACdC,aAAc,QACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,KAAMxE,MAAO,MACrB,CAAEwE,KAAM,KAAMxE,MAAO,SAGzB,CACEM,IAAK,QACL8Z,aAAc,QACdC,aAAc,YACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,KAAMxE,MAAO,MACrB,CAAEwE,KAAM,MAAOxE,MAAO,OACtB,CAAEwE,KAAM,aAAcxE,MAAO,gBAGjC,CACEM,IAAK,qBACL8Z,aAAc,qBACdC,aAAc,SACdC,KAAM,GACNjD,KAAM,SACNpC,KAAM,CACJ,CAAEzQ,KAAM,OAAQxE,MAAO,QACvB,CAAEwE,KAAM,SAAUxE,MAAO,UACzB,CAAEwE,KAAM,QAASxE,MAAO,WAG5B,CACEM,IAAK,SACL8Z,aAAc,SACdC,aAAc,MACdC,KAAM,GACNjD,KAAM,eAIJwf,EAAc,CAClB/yB,OAAQ,eACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,SACf+D,QAAS,CACPwD,MAAO,GACPD,OAAQ,EACRiL,QAAS,EAAF,GArIa,CACtB6U,OAAQ,GACRR,OAAQ,GACRxC,WAAY,GACZ1b,OAAQ,GACR2e,YAAa,GACbC,UAAW,GACXC,WAAY,GACZC,aAAc,GACdC,MAAO,GACPC,mBAAoB,GACpBzD,OAAQ,OA8HV,SAAS/L,EAAuBnU,QAAA,IAAAA,MAAA,IAC9B,IAAMsC,EAAc,GACpB,IAAK,IAAEvC,QAAQC,GAAU,CACvBsC,EAAOkB,MAAQ,IAAE5K,IAAIoH,EAAS,QAAS,KAAO,GAC9CsC,EAAOiB,OAAS,IAAE3K,IAAIoH,EAAS,SAAU,IAAM,EAC/C,IAAM,EAAiB,GACvB,IAAE1E,QAAQ0E,EAAQwO,SAAS,SAAClR,EAAWhE,GACjC,IAAEuC,QAAQyB,IACZA,EAAO,IAAEmH,QAAQnH,IACRoC,OAAS,GAChB,EAAQmB,KAAK,CAAEjB,KAAMtG,EAAKuG,MAAO,IAAE6E,KAAKpH,GAAMgR,MAAM,EAAG,KAEhD,IAAEC,SAASjR,KACf,IAAEyC,QAAQ,IAAEnH,IAAI0E,EAAM,QAAS,MAClC,EAAQuD,KAAK,CAAEjB,KAAMtG,EAAKuG,MAAO,IAAEjH,IAAI0E,EAAM,QAAS,IAAIgR,MAAM,EAAG,SAIrE,EAAQ5O,OAAS,IACnB4C,EAAOkM,QAAU,GAGrB,OAAOlM,EAGT,IAAMwtB,EAAyB,CAAC,SAAU,cAEpCC,EAAyB,CAC7BxM,UAAW,YACXV,OAAQ,UAEJ7lB,EAAqB,CACzB/B,SAAU,UAEG,a,cC5KfnD,EAAOD,QAAUm4B,G,81DCejB,cAeE,WAAYh2B,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAflD,EAAAY,UAAY,YACZ,EAAAuB,kBAAoB,8BACpB,EAAAmC,kBAAoB,8BACpB,EAAAxB,mBAAqB,qBAErB,EAAAoG,kBAAoB,CAClBrI,QAAS,aACT2B,OAAQ,yBACRuzB,cAAe,cAGjB,EAAAvb,aAAe,eACf,EAAAla,uBAAyB,yB,EAmD3B,OAhE0C,OAqBxC,YAAA0C,WAAA,WACE,OAAOa,QAAQC,QAAQ,oBAEnB,YAAAkyB,uBAAN,SAA6B5tB,G,6GAKf,OAJJxF,EAAuBwF,EAAjB,OAAE6c,EAAe7c,EAAL,WACpBC,EAAc,YAAkBzF,EAAQpC,KAAKK,SAGvC,GAAM,aAChB,SAACgG,GACC,OAAO,EAAKyB,UACV,CACE7H,IAAK,EAAKA,IAAM4H,EAAYE,KAC5B1B,KAAI,GAENwB,EAAYxH,QACZ,CAAE+B,OAAM,EAAEJ,OAAQ,qCAGtB,CACEygB,UAAWgC,GAEb,oB,OAGF,OAjBM/hB,EAAM,SAiBZ,GADaA,EAAJ,YAGL,YAAAU,gBAAN,SAAsBpB,EAAgBI,EAAgB7B,G,+GAErC,mCAAXyB,EAAA,MACS,GAAMhC,KAAKw1B,uBAAuB,CAAEpzB,OAAM,EAAEqiB,WAAYlkB,EAASP,KAAKsC,mBAAmB/B,a,OAQpG,OARMiH,EAAK,SACL/G,EAAS+G,EAAG7B,KAAI,SAAC7H,GAErB,OADAA,EAAE6C,oBAAsB7C,EAAE,EAAKwE,mBAAmB2f,iBAC3C,CACLnf,KAAMhF,EAAE,EAAKwE,mBAAmB2f,iBAChC3jB,MAAOR,EAAE,EAAKwE,mBAAmB2f,qBAGrC,GAAM,IAAgB5J,gBAAgBrY,KAAKK,QAASL,KAAKga,aAAaqI,gBAAiB7a,I,OACvF,OADA,SACA,GAAO/G,G,OAET,SAAO,YAEX,EAhEA,CAA0C,kB,ojECL1C,cAkBE,WAAYnB,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAlBlD,EAAAY,UAAY,YACZ,EAAAuB,kBAAoB,6BACpB,EAAAmC,kBAAoB,6BACpB,EAAAxB,mBAAqB,qBAErB,EAAAoG,kBAAoB,CAClBrI,QAAS,OACT2B,OAAQ,wBACRuzB,cAAe,kBACf3sB,YAAa,CACXG,QAAS,SAACnB,GAAW,cAChBA,GAAM,CACT6tB,iBAFmB,gBAMzB,EAAAC,UAAY,G,EAkCd,OAnD0C,OAsBxC,YAAAlzB,WAAA,sBACE,OAAOxC,KAAK8H,UACV,CACE7H,IAAKD,KAAKC,IAAM,OAElB,KACA,CAAE+B,OAAQ,kBAAmBI,OAAQ,iBACrC8E,MAAK,SAACc,GAGN,OADA,EAAK0tB,UAAY,IAAEC,MAAM3tB,EAAS4tB,cAAe,UAC1C,IAAEjwB,IAAIqC,EAAS4tB,eAAiB,IAAI,SAAChzB,GAC1C,MAAO,CACLE,KAAMF,EAAKizB,kBACXv3B,MAAOsE,EAAKuF,eAKd,YAAAE,WAAN,SAAiBjG,G,YAAA,IAAAA,MAAA,gB,yFACA,SAAM,YAAMiG,WAAU,UAACjG,I,OACtC,OADM0zB,EAAS,SACf,GAAO,IAAE/rB,QACP+rB,EAAOnwB,KAAI,SAAC/C,GACV,OAAI,wBAAcA,GACTA,EAEF,kBAIf,EAnDA,CAA0C,kB,ojECN1C,cAkBE,WAAYtD,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAlBlD,EAAAY,UAAY,YACZ,EAAAuB,kBAAoB,wBACpB,EAAAmC,kBAAoB,uBACpB,EAAAxB,mBAAqB,qBAErB,EAAAoG,kBAAoB,CAClBrI,QAAS,OACT2B,OAAQ,wBACRuzB,cAAe,kBACf3sB,YAAa,CACXG,QAAS,SAACnB,GAAW,cAChBA,GAAM,CACT6tB,iBAFmB,YAMzB,EAAAC,UAAY,G,EAkCd,OAnD0C,OAqBlC,YAAArtB,WAAN,SAAiBjG,G,YAAA,IAAAA,MAAA,gB,yFACA,SAAM,YAAMiG,WAAU,UAACjG,I,OACtC,OADM0zB,EAAS,SACf,GAAO,IAAE/rB,QACP+rB,EAAOnwB,KAAI,SAAC/C,GACV,OAAI,wBAAcA,GACTA,EAEF,kBAKb,YAAAJ,WAAA,sBACE,OAAOxC,KAAK8H,UACV,CACE7H,IAAKD,KAAKC,IAAM,OAElB,KACA,CAAE+B,OAAQ,kBAAmBI,OAAQ,iBACrC8E,MAAK,SAACc,GAGN,OADA,EAAK0tB,UAAY,IAAEC,MAAM3tB,EAAS4tB,cAAe,UAC1C,IAAEjwB,IAAIqC,EAAS4tB,eAAiB,IAAI,SAAChzB,GAC1C,MAAO,CACLE,KAAMF,EAAKizB,kBACXv3B,MAAOsE,EAAKuF,eAKtB,EAnDA,CAA0C,kB,whBCM1C,cAeE,WAAY7I,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAflD,EAAAY,UAAY,YACZ,EAAAuB,kBAAoB,yBACpB,EAAAmC,kBAAoB,yBACpB,EAAAxB,mBAAqB,qBAErB,EAAAoG,kBAAoB,CAClBrI,QAAS,QACT2B,OAAQ,6BACRuzB,cAAe,wBAEjB,EAAA31B,gBAAkB,CAChB4I,aAAc,mBAEhB,EAAAktB,UAAY,G,EAuBd,OArC0C,OAmBxC,YAAAlzB,WAAA,sBACE,OAAOxC,KAAK8H,UACV,CACE7H,IAAKD,KAAKC,IAAM,OAElB,KACA,CAAE+B,OAAQ,kBAAmBI,OAAQ,iBACrC8E,MAAK,SAACc,GAGN,OADA,EAAK0tB,UAAY,IAAEC,MAAM3tB,EAAS4tB,cAAe,UAC1C,IAAEjwB,IAAIqC,EAAS4tB,eAAiB,IAAI,SAAChzB,GAC1C,MAAO,CACLE,KAAMF,EAAKizB,kBACXv3B,MAAOsE,EAAKuF,eAKtB,EArCA,CAA0C,kB,wgBCP1C,cAYE,WAAY7I,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAZlD,EAAAY,UAAY,UACZ,EAAAuB,kBAAoB,uBACpB,EAAAmC,kBAAoB,uBACpB,EAAAxB,mBAAqB,CACnB/B,SAAU,sBAEZ,EAAAmI,kBAAoB,CAClBrI,QAAS,MACT2B,OAAQ,4BACRuzB,cAAe,uB,EAKnB,OAf2C,OAe3C,EAfA,CAA2C,kB,q2DCC3C,cAWE,WAAYj2B,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAXlD,EAAAY,UAAY,YACZ,EAAAuB,kBAAoB,uBACpB,EAAAmC,kBAAoB,uBACpB,EAAAxB,mBAAqB,qBAErB,EAAAoG,kBAAoB,CAClBrI,QAAS,MACT2B,OAAQ,gBACRuzB,cAAe,W,EASnB,OAlB0C,OAclC,YAAAltB,WAAN,SAAiBjG,G,YAAA,IAAAA,MAAA,gB,yFACA,SAAM,YAAMiG,WAAU,UAACjG,I,OACtC,OADM0zB,EAAS,SACf,GAAO,IAAEvwB,OAAOuwB,EAAQ,0BAE5B,EAlBA,CAA0C,kB,42DCC1C,cAYE,WAAYx2B,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAZlD,EAAAY,UAAY,UACZ,EAAAuB,kBAAoB,uBACpB,EAAAmC,kBAAoB,uBACpB,EAAAxB,mBAAqB,CACnB/B,SAAU,cAEZ,EAAAmI,kBAAoB,CAClBrI,QAAS,MACT2B,OAAQ,sBACRuzB,cAAe,S,EAqCnB,OA/C2C,OAenC,YAAAltB,WAAN,SAAiBjG,G,YAAA,IAAAA,MAAA,gB,yFACA,SAAM,YAAMiG,WAAU,UAACjG,I,OACtC,OADM0zB,EAAS,SACf,GAAO,IAAE/rB,QACP+rB,EAAOnwB,KAAI,SAAC/C,GACV,OAAI,wBAAcA,GACT,0BAAgBA,GAElB,kBAQb,YAAAmzB,SAAA,SAAS3zB,GACP,IAAMyF,EAAc,YAAkBzF,EAAQ,OAC9C,OAAOpC,KAAK8H,UACV,CACE7H,IAAKD,KAAKC,IAAM4H,EAAYE,MAE9BF,EAAYxH,QACZ,CAAE+B,OAAM,EAAEJ,OAAQ,kBAClBkF,MAAK,SAACc,GACN,OAAO,IAAEzC,OACP,IAAEI,IAAIqC,EAASguB,SAAW,IAAI,SAACpzB,GAC7B,MAAO,CAAEE,KAAMF,EAAKqzB,SAAU33B,MAAOsE,EAAKszB,OAAQC,UAAWvzB,EAAKuzB,UAAW/P,KAAMxjB,EAAKwjB,UAE1F,SAACxjB,GAAS,oBAAAA,EAAKuzB,iBAIvB,EA/CA,CAA2C,kB,oiECD3C,cAYE,WAAY72B,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAZlD,EAAAY,UAAY,UACZ,EAAAuB,kBAAoB,uBACpB,EAAAmC,kBAAoB,uBACpB,EAAAxB,mBAAqB,CACnB/B,SAAU,UAEZ,EAAAmI,kBAAoB,CAClBrI,QAAS,MACT2B,OAAQ,kBACRuzB,cAAe,W,EAQnB,OAlB2C,OAenC,YAAA1zB,gBAAN,SAAsBC,EAAYC,G,mEAChC,SAAO,YAAMF,gBAAe,iBAAMC,GAAU,CAAEM,OAAQ,iBAAoBL,WAE9E,EAlBA,CAA2C,kB,2iECC3C,cAYE,WAAYzC,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAZlD,EAAAY,UAAY,YACZ,EAAAuB,kBAAoB,+BACpB,EAAAmC,kBAAoB,+BACpB,EAAAxB,mBAAqB,qBAErB,EAAAoG,kBAAoB,CAClBrI,QAAS,MACT2B,OAAQ,kBACRuzB,cAAe,WAEjB,EAAA11B,YAAc,CAAC,MAAO,Y,EAwCxB,OAnD0C,OAkBlC,YAAAgC,gBAAN,SAAsBC,EAAYC,G,mEAChC,SAAO,YAAMF,gBAAe,iBAAMC,GAAU,CAAEM,OAAQ,iBAAoBL,WAEtE,YAAAq0B,gBAAN,SAAsBxuB,G,oGAKT,OAJHxF,EAAkBwF,EAAZ,OAAEe,EAAUf,EAAL,MACfC,EAAc,YAAkBzF,EAAQ,OAGnC,GAAMpC,KAAK8H,UACpB,CACE7H,IAAKD,KAAKC,IAAM4H,EAAYE,KAC5B1B,KAAM,CACJnB,KAAMyD,IAGVd,EAAYxH,QACZ,CAAE2B,OAAQ,qB,OAEZ,UAVW,SAUAq0B,aAAe,IAAI1wB,KAAI,SAAC7H,GACjC,MAAO,CACLgF,KAAMhF,EAAEoH,KACR5G,MAAOR,EAAEoH,kBAIT,YAAA9B,gBAAN,SAAsBpB,EAAgBI,EAAgB7B,EAAeuB,G,sGACpD,oBAAXE,EAAA,OACY2G,EAAU7G,EAAL,KACR,GAAM9B,KAAKo2B,gBAAgB,CAAEh0B,OAAM,EAAEuG,MAAK,M,OACrD,SADW,U,OAGb,SAAO,YAEX,EAnDA,CAA0C,kB,wgBCI1C,cAiCE,WAAYrJ,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAjClD,EAAAY,UAAY,YACZ,EAAAuB,kBAAoB,+BACpB,EAAAmC,kBAAoB,wBACpB,EAAAxB,mBAAqB,qBAErB,EAAAoG,kBAAoB,CAClBrI,QAAS,MACT2B,OAAQ,oBACRuzB,cAAe,aACf3sB,YAAa,CACXG,QAAS,SAACnB,GASR,OARoBA,EAAL,UAEbA,EAAOkM,QAAU,IAEnBlM,EAAOkM,QAAQ3N,KAAK,CAClBjB,KAAM,eACNyO,OAAQ,CAAC,gBAEJ/L,KAUb,EAAAhI,gBAAkB,CAChB4I,aAAc,mB,EAelB,OA9C0C,OA8C1C,EA9CA,CAA0C,kB,wgBCN1C,cAWE,WAAYlJ,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAXlD,EAAAY,UAAY,YACZ,EAAAuB,kBAAoB,uBACpB,EAAAmC,kBAAoB,uBACpB,EAAAxB,mBAAqB,qBAErB,EAAAoG,kBAAoB,CAClBrI,QAAS,KACT2B,OAAQ,oBACRuzB,cAAe,gB,EAKnB,OAd0C,OAc1C,EAdA,CAA0C,kB,wgBCC1C,cAWE,WAAYj2B,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAPlD,EAAA8C,mBAAqB,CACnB/B,SAAU,gBAEZ,EAAAV,YAAc,CAAC,WAMb,EAAKO,UAAY,UACjB,EAAKuB,kBAAoB,uBACzB,EAAKmC,kBAAoB,uBACzB,EAAK4E,kBAAoB,CACvBrI,QAAS,MACT2B,OAAQ,yBACRuzB,cAAe,e,EAMrB,OA1B2C,OAuBzC,YAAA/yB,WAAA,WACE,OAAOa,QAAQC,QAAQ,oBAE3B,EA1BA,CAA2C,kB,y3DCW3C,cAgBE,WAAYhE,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAhBlD,EAAAY,UAAY,aACZ,EAAAuB,kBAAoB,0BACpB,EAAA20B,eAAiB,uBACjB,EAAAxyB,kBAAoB,0BACpB,EAAAxB,mBAAqB,qBACrB,EAAAoG,kBAAoB,CAClBrI,QAAS,SACT2B,OAAQ,oBACRuzB,cAAe,gBAEjB,EAAA71B,gBAAkB,CAAC,WAEnB,EAAAsa,aAAe,eACf,EAAAla,uBAAyB,yBACzB,EAAAy2B,mBAAqB,G,EAqIvB,OApJ6C,OAoBrC,YAAAC,kBAAN,SAAwBp0B,EAAQwF,G,yIACxBC,EAAc,YAAkBzF,EAAQ,UACxCkX,EAA6C1R,EAAnC,WAAE,EAAiCA,EAAnB,UAAd6uB,OAAS,IAAG,KAAE,EAAE,EAAiB7uB,EAAL,QAAZ8uB,OAAO,IAAG,KAAE,EAC9CD,EAAYz2B,KAAKe,YAAY01B,GAC7BC,EAAU12B,KAAKe,YAAY21B,GAC3B,IACED,EAAYlyB,KAAKC,MAAMiyB,GAAW,qBAAmBriB,WACrDsiB,EAAUnyB,KAAKC,MAAMkyB,GAAS,qBAAmBzd,SACjD,MAAOlJ,I,OACL4mB,EAAe32B,KAAKu2B,mBAAmBjd,IACvC,MAEa,GAAM,aACnB,SAACjT,GACC,OAAO,EAAKyB,UACV,CACE7H,IAAK,EAAKA,IAAM4H,EAAYE,KAC5B1B,KAAI,GAENwB,EAAYxH,QACZ,CAAE+B,OAAM,EAAEJ,OAAQ,4BAGtB,IAAE6P,KAAKjK,EAAQ,cACf,CAAC,sBAAuB,sBAAuB,0BAA2B,e,OAZ5E+uB,EAAe,SAcf32B,KAAKu2B,mBAAmBjd,GAAcqd,E,iBAgBxC,OAbKzc,EAAwDyc,EAA/C,GAAE1c,EAA6C0c,EAApC,GAAExc,EAAkCwc,EAArB,GAAEC,EAAmBD,EAAJ,GAEzD1c,EAAY,IAAE4c,OAAO5c,GAAW,SAACrX,GAAS,OAACA,EAAD,WAC1CsX,EAAY,IAAE2c,OAAO3c,GAAW,SAACtX,GAAS,OAACA,EAAD,aAC1CuX,EAAgB,IAAE0c,OAAO1c,GAAe,SAACvX,GAAS,OAACA,EAAD,eAClDg0B,EAAkB,IAAEC,OAAOD,GAAiB,SAACh0B,GAAS,OAACA,EAAD,qBAEhDk0B,GAAgF,QAA9D,EAAAF,EAAgBzzB,MAAK,SAACxF,GAAM,OAAAA,EAAEo5B,oBAAF,YAAkC,eAAEC,iBAAkB,GAEpGC,GAC6D,QAAjE,EAAsD,QAAtD,EAAAH,EAAgB3zB,MAAK,SAAC+zB,GAAQ,OAAAA,EAAI9c,UAAJ,YAAwB,eAAE+c,iBAAS,eAAExxB,KAAI,SAACxG,G,MAAM,aAC3E,qBAAmBia,WAAYja,EAChC,OAAK,GACT,GAAO,CACL+a,UAAS,EACTD,UACE6c,EAAgB9xB,OAAS,EACrB8xB,EAAgBnxB,KAAI,SAAC,GAA2B,MAAC,CAAEyU,QAArB,UAA8BC,UAAnB,gBACzCJ,EACNE,cAAe8c,EAAWjyB,OAAS,EAAIiyB,EAAa9c,YAGxD,YAAAid,sBAAA,SAAsBC,EAA4B/1B,EAAgCg2B,GAAlF,WACE,OAAIh2B,EACKA,EAAWE,QAAQ,gBAAgB,SAACC,EAAGC,GAC5C,OAAKA,GAAM,EAAK40B,eAAe10B,SAASF,GAGjC,EAAKT,cAAco2B,EAAO31B,GAFxB,MAKN1B,KAAKiB,cAAco2B,EAAOC,IAG7B,YAAAl0B,gBAAN,SAAsBpB,EAAgBI,EAAgB7B,EAAeuB,G,uHAEpD,OADTy1B,EAAmCz1B,EAAzB,WAAE20B,EAAuB30B,EAAd,UAAE40B,EAAY50B,EAAL,QACrB,GAAM9B,KAAKw2B,kBAAkBp0B,EAAQ,CAClDkX,WAAY/Y,EAAS+Y,WACrBmd,UAAS,EACTC,QAAO,K,OA+BT,OAlCMj2B,EAAS,SAKTyB,EAAYJ,EAAL,QACLmY,EAAwCxZ,EAA/B,UAAEyZ,EAA6BzZ,EAApB,UAAE0Z,EAAkB1Z,EAAL,cAC3C82B,EAAav3B,KAAKs2B,eAAe10B,SAAS21B,GAAcA,EAAav3B,KAAKsC,mBAAmB2W,QAEvFzR,EAAK,CACT0S,UAAWA,EAAUvU,KAAI,SAAC6xB,GAExB,OADAA,EAAM72B,oBAAsB62B,EAAMld,UAC3B,CACLxX,KAAM00B,EAAMld,UACZhc,MAAOk5B,EAAM,qBAAmBpjB,eAGpC6F,UAAWA,EAAUtU,KAAI,SAAC0xB,GACxB,IAAMC,EAAa,EAAKF,sBAAsBC,EAAOn1B,EAASq1B,GAE9D,OADAF,EAAM12B,oBAAsB22B,GAAcD,EAAM,qBAAmBpe,SAC5D,CACLnW,KAAMw0B,GAAcD,EAAM,qBAAmBpe,SAC7C3a,MAAO+4B,EAAM,qBAAmBpe,SAChCoB,UAAWgd,EAAMhd,cAGrBF,cAAeA,EAAcxU,KAAI,SAAC8xB,GAEhC,OADAA,EAAI92B,oBAAsB82B,EAAI,qBAAmBre,WAC1C,CACLtW,KAAM20B,EAAI,qBAAmBre,WAC7B9a,MAAOm5B,EAAI,qBAAmBre,gBAIpC,GAAM,IAAgBf,gBAAgBrY,KAAKK,QAASL,KAAKga,aAAaC,UAAWA,I,OACjF,OADA,SACA,GAAM,IAAgB5B,gBAAgBrY,KAAKK,QAASL,KAAKga,aAAaE,UAAWA,I,OACjF,OADA,SACA,GAAM,IAAgB7B,gBAAgBrY,KAAKK,QAASL,KAAKga,aAAaG,cAAeA,I,OAIrF,OAJA,SAIQnY,GACN,IAAK,oBACH,SAAOwF,EAAGyS,WACZ,IAAK,gBACH,SAAOzS,EAAG0S,WACZ,IAAK,kBACH,SAAO1S,EAAG2S,eACZ,QACE,SAAO,I,kBAef,EApJA,CAA6C,kB,ykECC7C,cAgBE,WAAY7a,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAflD,EAAAmC,kBAAoB,oBACpB,EAAA+1B,kBAAoB,+BACpB,EAAAC,gBAAkB,6BAClB,EAAA53B,mBAAqB,qBAErB,EAAAuC,mBAAqB,qBAOrB,EAAA0X,aAAe,eACf,EAAAla,uBAAyB,yB,EAqJ3B,OApK0C,OAsBxC,YAAAiE,qBAAA,SAAqBuD,EAAcswB,GACjC,MAAwB,cAApBtwB,EAAQjH,SAAgD,aAApBiH,EAAQjH,SAA0Bu3B,EAAO1c,QACxE,EAAP,KAAY,8BAA0B,CAAEoL,MAAO,mBAC1C,8BAET,YAAAjf,qBAAA,SAAqBC,GACnB,IAAM5E,EAAW,CACfrC,QAAS,MACT2B,OAAQ,wBACRuzB,cAAe,mBAYjB,MAVwB,cAApBjuB,EAAQjH,SAA+C,gBAApBiH,EAAQjH,UAC7CqC,EAAIkG,YAAc,CAChBG,QAAS,SAACK,GAAU,cAAMA,GAAK,CAAEqsB,iBAAb,gBAGA,aAApBnuB,EAAQjH,UACVqC,EAAIkG,YAAc,CAChBG,QAAS,SAACK,GAAU,cAAMA,GAAK,CAAEqsB,iBAAb,YAGjB/yB,GAEH,YAAAm1B,gBAAN,SAAsBjwB,G,6GAKR,OAJJxF,EAAuBwF,EAAjB,OAAE6c,EAAe7c,EAAL,WACpBC,EAAc,YAAkBzF,EAAQ,OAGlC,GAAM,aAChB,SAACiE,GACC,OAAO,EAAKyB,UACV,CACE7H,IAAK,EAAKA,IAAM4H,EAAYE,KAC5B1B,KAAI,GAENwB,EAAYxH,QACZ,CAAE+B,OAAM,EAAEJ,OAAQ,wBAGtB,CACE81B,eAAgBrT,GAElB,c,OAGF,OAjBM/hB,EAAM,SAiBZ,GADaA,EAAJ,YAGX,YAAAq1B,sBAAA,SAAsB1xB,EAA2B/E,EAAgCZ,EAAes3B,GAAhG,WACE,OAAI12B,EACKA,EAAWE,QAAQ,gBAAgB,SAACC,EAAGC,GAC5C,OAAKA,GAAMs2B,EAAUp2B,SAASF,GAGvB,EAAKT,cAAcoF,EAAM3E,GAFvB,MAKN1B,KAAKiB,cAAcoF,EAAM3F,IAE5B,YAAAu3B,cAAN,SAAoBrwB,G,0GAIN,OAHJxF,EAAmCwF,EAA7B,OAAE6c,EAA2B7c,EAAjB,WAAEswB,EAAetwB,EAAL,WAChCC,EAAc,YAAkBzF,EAAQ,OAElC,GAAMpC,KAAK8H,UACrB,CACE7H,IAAKD,KAAKC,IAAM4H,EAAYE,KAC5B1B,KAAM,CAAEyxB,eAAgBrT,EAAY0T,YAAa,CAACD,KAEpDrwB,EAAYxH,QACZ,CAAE+B,OAAM,EAAEJ,OAAQ,qB,OAiBpB,OAvBMU,EAAM,SAQJ01B,EAAc11B,EAAL,UAejB,GAdoB,IAAEyQ,OACpBilB,GACA,SAACC,EAAMz1B,GACG,IAAA01B,EAAmB11B,EAAd,MAAE21B,EAAY31B,EAAL,QACtB,OAAK,IAAEyC,QAAQizB,GAGV,IAAEjzB,QAAQkzB,GAGRF,EAFE,IAAExyB,OAAOwyB,EAAME,GAHf,IAAE1yB,OAAOwyB,EAAM,IAAEjxB,QAAQ,IAAEzB,IAAI2yB,GAAO,SAACE,GAAS,OAAC,IAAEnzB,QAAQmzB,EAAKD,SAAW,GAAKC,EAAhC,eAO3D,aAIE,YAAAp1B,gBAAN,SAAsBpB,EAAgBI,EAAgB7B,EAAeuB,G,gIAC3DI,EAAYJ,EAAL,QACA,sBAAXE,EAAA,MACS,GAAMhC,KAAK63B,gBAAgB,CAAEz1B,OAAM,EAAEqiB,WAAYlkB,EAASP,KAAKsC,mBAAmB/B,a,OAa7F,OAbMiH,EAAK,SACL,EAAkB1F,EAAL,cACnB,EAAgB9B,KAAK03B,kBAAkB91B,SAAS,GAAiB,EAAgB5B,KAAKsC,mBAAmB2Y,SACnGxa,EAAS+G,EAAG7E,SAAQ,SAAC7E,GACzB,IAAM26B,EAAc,EAAKV,sBAAsBj6B,EAAGoE,EAAS,EAAe,EAAKw1B,mBACzEgB,EAAQ56B,EAAE,EAAKwE,mBAAmB2Y,UAGxC,OAFAnd,EAAE6C,oBAAsB83B,GAAeC,EAEhC,CACL51B,KAAM21B,GAAeC,EACrBp6B,MAAOo6B,MAGX,GAAM,IAAgBrgB,gBAAgBrY,KAAKK,QAASL,KAAKga,aAAaiB,SAAUzT,I,OAChF,OADA,SACA,GAAO/G,G,aAEM,mBAAXuB,GAA0C,uBAAXA,EAA/B,OACM22B,EAA6C72B,EAAnC,WAAE82B,EAAiC92B,EAAlB,gBAAE+2B,EAAgB/2B,EAAL,YAC1C,EAAkB9B,KAAKe,YAAY63B,GACrB,GAAM54B,KAAKi4B,cAAc,CAC3C71B,OAAM,EACNqiB,WAAYlkB,EAASP,KAAKsC,mBAAmB/B,UAC7C23B,WAAYl4B,KAAKe,YAAY43B,O,OAyB/B,OA5BMG,EAAc,SAKd,EAAc94B,KAAK23B,gBAAgB/1B,SAASi3B,GAAeA,EAAc74B,KAAKsC,mBAAmB4Y,QACjGza,EAAS,IAAEs4B,MAAMD,GACpBvzB,QAAO,SAAC3C,GACP,MAAe,mBAAXZ,GAGG,IAAoB,IAAE9D,IAAI0E,EAAM,2BAExC+C,KAAI,SAAC/C,GACJ,IAAMlC,EAAQ,EAAKq3B,sBAAsBn1B,EAAMV,EAAS,EAAa,EAAKy1B,iBACpErtB,EAAK1H,EAAK,EAAKN,mBAAmB4Y,SAAS,GAEjD,OADAtY,EAAKjC,oBAAsBD,GAAS4J,EAClB,mBAAXtI,EACH,CACEc,KAAMpC,GAAS4J,EACfhM,MAAOgM,GAET,CACExH,KAAM,UAAG,IAAE5E,IAAI0E,EAAM,SACrBtE,MAAO,IAAEJ,IAAI0E,EAAM,YAG1BtE,QACH,GAAM,IAAgB+Z,gBAAgBrY,KAAKK,QAASL,KAAKga,aAAakB,QAAS4d,I,OAC/E,OADA,SACA,GAAkB,mBAAX92B,EAA8BvB,EAAS,IAAEo2B,OAAOp2B,EAAQ,S,OAEjE,SAAO,YAEX,EApKA,CAA0C,kB,q2DCL1C,cAYE,WAAYnB,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAZlD,EAAAY,UAAY,YACZ,EAAAuB,kBAAoB,uBACpB,EAAAmC,kBAAoB,uBACpB,EAAAxB,mBAAqB,qBAErB,EAAAoG,kBAAoB,CAClBrI,QAAS,MACT2B,OAAQ,iBACRuzB,cAAe,U,EAwBnB,OAjC0C,OAkBxC,YAAA/yB,WAAA,WACE,OAAOa,QAAQC,QAAQ,oBAMnB,YAAA+E,WAAN,SAAiBjG,G,YAAA,IAAAA,MAAA,gB,yFACA,SAAM,YAAMiG,WAAU,UAACjG,I,OACtC,OADM0zB,EAAS,SACf,GAAO,IAAE/rB,QACP+rB,EAAOnwB,KAAI,SAAC/C,GACV,OAAO,0BAAgBA,gBAI/B,EAjCA,CAA0C,kB,uhECR1C,yE,OACE,EAAAkB,kBAA4C,oBAC5C,EAAAnC,kBAA8B,oBAC9B,EAAAW,mBAAqB,qBACrB,EAAAoG,kBAAoB,CAClBrI,QAAS,MACT2B,OAAQ,sBACRuzB,cAAe,Y,EAYnB,OAnB2C,OAUnC,YAAAltB,WAAN,SAAiBjG,G,YAAA,IAAAA,MAAA,gB,mFACG,SAAM,YAAMiG,WAAU,UAACjG,I,OACzC,SADkB,SACDuD,KAAI,SAAC4B,GACpB,IAAIyxB,EAAOzxB,EAAOnB,WAAW,GAAGA,WAGhC,OAFA4yB,EAAO93B,MAAMsF,KAAK,IAAIyyB,IAAG,OAAKD,GAAI,IAAE,UAAW,cAAW,KAC1DzxB,EAAOnB,WAAW,GAAGA,WAAa4yB,EAC3BzxB,cAGb,EAnBA,CAA2C,kB,02DCS3C,yE,OACE,EAAAnH,UAAY,eACZ,EAAA0D,kBAA4C,oBAC5C,EAAAnC,kBAA8B,oBAC9B,EAAAW,mBAAqB,qBACrB,EAAAoG,kBAAoB,CAClBrI,QAAS,MACT2B,OAAQ,sBACRuzB,cAAe,YAEjB,EAAAvb,aAAe,eACf,EAAAla,uBAAyB,yBACzB,EAAAJ,gBAAkB,CAAC,kB,EAwDrB,OApEgD,OAcxC,YAAAw5B,qBAAN,SAA2B92B,EAAgBwF,G,uGAK9B,OAJLC,EAAc,YAAkBzF,EAAQ,OAInC,GAAM,aACf,SAACiE,GACC,OAAO,EAAKyB,UACV,CACE7H,IAAK,EAAKA,IAAM4H,EAAYE,KAC5B1B,KAAI,GAENwB,EAAYxH,QACZ,CAAE+B,OAAM,EAAEJ,OAAQ,iCAGtB4F,EACA,oB,OAGF,SAfW,SAeD,YAGN,YAAAxE,gBAAN,SAAsBpB,EAAgBI,EAAgB7B,G,yGAE5CyB,G,IACD,yC,mBACM,SAAMhC,KAAKk5B,qBAAqB92B,EAAQ,CAAEiY,UAAW9Z,EAAS8Z,a,OAMvE,OANA5Z,EAAS,SAEH+G,EAAK/G,EAAOkF,KAAI,SAAC/C,GAErB,OADAA,EAAKjC,oBAAsBiC,EAAKu2B,eACzB,CAAEr2B,KAAMF,EAAKu2B,eAAgB76B,MAAOsE,EAAK,qBAAmB2mB,kBAErE,GAAM,IAAgBlR,gBAAgBrY,KAAKK,QAASL,KAAKga,aAAawP,eAAgB/oB,I,OACtF,OADA,SACA,GAAO+G,G,OAEP,SAAO,YAIP,YAAAa,WAAN,SAAiBjG,G,YAAA,IAAAA,MAAA,gB,mFACG,SAAM,YAAMiG,WAAU,UAACjG,I,OACzC,SADkB,SACDuD,KAAI,SAAC4B,GACpB,IAAIyxB,EAAOzxB,EAAOnB,WAAW,GAAGA,WAQhC,OAPA4yB,EAAK7yB,KAAK,WACN,CAAC,cAAe,mBAAmBvE,SAAS2F,EAAOR,aACrDiyB,EAAK7yB,KAAK,kBAGZ6yB,EAAO93B,MAAMsF,KAAK,IAAIyyB,IAAID,IAC1BzxB,EAAOnB,WAAW,GAAGA,WAAa4yB,EAC3BzxB,cAGb,EApEA,CAAgD,kB,4hECLhD,cASE,WAAYjI,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OATlD,EAAAsE,kBAA4C,GAC5C,EAAAnC,kBAA8B,CAAC,cAC/B,EAAAW,mBAAqB,CACnB/B,SAAU,cAEZ,EAAAmI,kBAAoB,GAKlB,EAAK0wB,OAAS,2BAAoB,EAAK95B,iBAAiBgL,GAAE,0B,EAmC9D,OA9C2C,OAanC,YAAA7B,aAAN,SAAmBrG,G,mEACjB,SAAOpC,KAAKT,WACTgL,kBAAkB,CACjBtK,IAAKD,KAAKo5B,OACVjuB,OAAQ,MACRvD,OAAQ,CAAExF,OAAM,GAChBgJ,QAAS,CAAE,eAAgB,sBAE5BlE,MAAK,SAACxE,GACC,IAAA2D,EAAqC3D,EAAjC,KAEJ22B,GADNhzB,EAAOA,GAAS,IACH,QAIb,OAHAgzB,EAAUA,GAAW,IAGN1zB,KAAI,SAAC/C,GAAS,cACxBA,GAAI,CACP02B,WAAY12B,EAAKsC,KACjBq0B,OAAQ32B,EAAKsC,KACbojB,MAAO1lB,EAAKsC,KAAKyC,MAAM,KAAKiM,OAAO,GAJR,mBAS7B,YAAAnR,qBAAN,SAA2BL,G,mEACzB,SAAOpC,KAAKyI,aAAarG,WAGrB,YAAAI,WAAN,W,gGACqB,SAAM,YAAMA,WAAU,Y,OAEzC,OAFMg3B,EAAa,UACRpoB,OAAO,GAAI,EAAG,CAAE9S,MAAO,iBAAkBwE,KAAM,aAAcsF,YAAa,cACrF,GAAOoxB,WAEX,EA9CA,CAA2C,kB,42DCI3C,cAYE,WAAYl6B,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAZlD,EAAAY,UAAY,YACZ,EAAAuB,kBAAoB,uBACpB,EAAAmC,kBAAoB,uBACpB,EAAAxB,mBAAqB,qBAErB,EAAAoG,kBAAoB,CAClBrI,QAAS,KACT2B,OAAQ,kBACRuzB,cAAe,iBAEjB,EAAAG,UAAY,G,EA8Cd,OAzD0C,OAgBxC,YAAAlzB,WAAA,sBACE,OAAOxC,KAAK8H,UACV,CACE7H,IAAKD,KAAKC,IAAM,OAElB,KACA,CAAE+B,OAAQ,kBAAmBI,OAAQ,iBACrC8E,MAAK,SAACc,GAGN,OADA,EAAK0tB,UAAY,IAAEC,MAAM3tB,EAAS4tB,cAAe,UAC1C,IAAEjwB,IAAIqC,EAAS4tB,eAAiB,IAAI,SAAChzB,GAC1C,MAAO,CACLE,KAAMF,EAAKizB,kBACXv3B,MAAOsE,EAAKuF,eAMd,YAAAE,WAAN,SAAiBjG,G,YAAA,IAAAA,MAAA,gB,mFACA,SAAM,YAAMiG,WAAU,UAACjG,I,OACtC,SADe,SACDuD,KAAI,SAAC/C,GAAS,gDAG9B,YAAAoS,kBAAA,SAAkB,G,IAAErM,EAAK,QAAEvG,EAAM,SAC/B,GAAc,oBAAVuG,EAA6B,CAC/B,IAAMd,EAAc,YAAkBzF,EAAQ,MAC9C,OAAOpC,KAAK8H,UACV,CACE7H,IAAKD,KAAKC,IAAM4H,EAAYE,MAE9B,KACA,CAAE3F,OAAM,EAAEJ,OAAQ,wBAClBkF,MAAK,SAACc,GACN,OAAO,IAAErC,IAAIqC,EAASyxB,gBAAkB,IAAI,SAAC72B,GAC3C,MAAO,CAAEE,KAAMF,EAAK8mB,gBAAiBprB,MAAOsE,EAAK8mB,uBAIvD,MAAO,IAEX,EAzDA,CAA0C,kB,42DCN1C,cAYE,WAAYpqB,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAZlD,EAAAY,UAAY,UACZ,EAAAuB,kBAAoB,uBACpB,EAAAmC,kBAAoB,GACpB,EAAAxB,mBAAqB,CACnB/B,SAAU,cAEZ,EAAAmI,kBAAoB,CAClBrI,QAAS,MACT2B,OAAQ,oBACRuzB,cAAe,e,EA0DnB,OApE2C,OAgBnC,YAAAltB,WAAN,SAAiBjG,G,YAAA,IAAAA,MAAA,gB,yFACA,SAAM,YAAMiG,WAAU,UAACjG,I,OACtC,OADM0zB,EAAS,SACf,GAAO,IAAE/rB,QACP+rB,EAAOnwB,KAAI,SAAC/C,GACV,OAAI,wBAAcA,GACT,0BAAgBA,GAElB,kBAKb,YAAAJ,WAAA,WACE,OAAOxC,KAAK8H,UACV,CACE7H,IAAKD,KAAKC,IAAM,OAChBoG,KAAM,CAAEqzB,QAAS,QAEnB,MACA,CAAE13B,OAAQ,oBACVkF,MAAK,SAACc,GACN,OAAO,IAAEzC,OACP,IAAEI,IAAIqC,EAASC,WAAa,IAAI,SAACrF,GAC/B,MAAO,CACLE,KAAMF,EAAKsF,WACX5J,MAAOsE,EAAKuF,OACZC,YAAaxF,EAAKwF,iBAGtB,SAACxF,GAAS,oBAAAA,EAAKwF,mBAKrB,YAAA2tB,SAAA,SAAS3zB,GACP,IAAMyF,EAAc,YAAkBzF,EAAQ,OAC9C,OAAOpC,KAAK8H,UACV,CACE7H,IAAKD,KAAKC,IAAM4H,EAAYE,KAC5B1B,KAAM,CAAEqzB,QAAS,QAEnB7xB,EAAYxH,QACZ,CAAE+B,OAAM,EAAEJ,OAAQ,kBAClBkF,MAAK,SAACc,GACN,OAAO,IAAEzC,OACP,IAAEI,IAAIqC,EAASguB,SAAW,IAAI,SAACpzB,GAC7B,MAAO,CAAEE,KAAMF,EAAKqzB,SAAU33B,MAAOsE,EAAKwjB,KAAM+P,UAAWvzB,EAAKuzB,UAAW/P,KAAMxjB,EAAKwjB,UAExF,SAACxjB,GAAS,oBAAAA,EAAKuzB,iBAIvB,EApEA,CAA2C,kB,q1DCM3C,cAYE,WAAY72B,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAZlD,EAAAY,UAAY,YACZ,EAAAuB,kBAAoB,gCACpB,EAAAmC,kBAAoB,2BACpB,EAAAxB,mBAAqB,qBACrB,EAAA3C,UAAY,YAEZ,EAAA+I,kBAAoB,CAClBrI,QAAS,UACT2B,OAAQ,oBACRuzB,cAAe,e,EAYnB,OAtBoD,OAe5C,YAAAltB,WAAN,SAAiBjG,G,YAAA,IAAAA,MAAA,gB,mFACA,SAAM,YAAMiG,WAAU,UAACjG,I,OACtC,SADe,SACDuD,KAAI,SAAC/C,GAAS,gDAE9B,YAAAJ,WAAA,WACE,OAAOa,QAAQC,QAAQ,oBAE3B,EAtBA,CAAoD,kB,q1DCRpD,cAYE,WAAYhE,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAZlD,EAAAY,UAAY,YACZ,EAAAuB,kBAAoB,sBACpB,EAAAmC,kBAAoB,sBACpB,EAAAxB,mBAAqB,CACnB/B,SAAU,mBAEZ,EAAAmI,kBAAoB,CAClBrI,QAAS,KACT2B,OAAQ,yBACRuzB,cAAe,oB,EASnB,OAnB0C,OAelC,YAAAltB,WAAN,SAAiBjG,G,YAAA,IAAAA,MAAA,gB,mFACA,SAAM,YAAMiG,WAAU,UAACjG,I,OACtC,SADe,SACDuD,KAAI,SAAC/C,GAAS,gDAEhC,EAnBA,CAA0C,kB,03DCY1C,cA2BE,WAAYtD,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OA3BlD,EAAAY,UAAY,YACZ,EAAAuB,kBAAoB,wBACpB,EAAAmC,kBAAoB,wBACpB,EAAAxB,mBAAqB,qBAErB,EAAAoG,kBAAoB,CAClBrI,QAAS,OACT2B,OAAQ,wBACRuzB,cAAe,aAEjB,EAAAvb,aAAe,eACf,EAAAla,uBAAyB,yBACzB,EAAA65B,eAAiB,CACfC,mBAAoB,CAClBv5B,QAAS,OACT2B,OAAQ,qBACRuzB,cAAe,SACfsE,QAAS,mBAEXC,6BAA8B,CAC5Bz5B,QAAS,OACT2B,OAAQ,+BACRuzB,cAAe,YACfsE,QAAS,W,EA4Ef,OApG0C,OA+BxC,YAAAr3B,WAAA,WACE,OAAOxC,KAAK8H,UACV,CACE7H,IAAKD,KAAKC,IAAM,SAElB,OACA,CAAE+B,OAAQ,uBAAwBI,OAAQ,iBAC1C8E,MAAK,SAACc,GACN,OAAO,IAAErC,IAAIqC,EAAS+xB,YAAc,IAAI,SAACn3B,GACvC,MAAO,CACLE,KAAMF,EAAKsF,WACX5J,MAAOsE,EAAKuF,OACZC,YAAaxF,EAAKwF,oBAMpB,YAAAC,WAAN,SAAiBjG,G,YAAA,IAAAA,MAAA,gB,yFACA,SAAM,YAAMiG,WAAU,UAACjG,I,OACtC,OADM0zB,EAAS,SACf,GAAO,IAAE/rB,QACP+rB,EAAOnwB,KAAI,SAAC/C,GACV,OAAO,0BAAgBA,gBAIvB,YAAAwzB,gBAAN,SAAsBxuB,G,qHAOT,OANHxF,EAAiCwF,EAA3B,OAAUoyB,EAAiBpyB,EAAd,OAAEzF,EAAYyF,EAAL,QAC9B,EAAqC5H,KAAK25B,eAAeK,GAAvD35B,EAAO,UAAE2B,EAAM,SAAEuzB,EAAa,gBAEhC1tB,EAAc,YAAkBzF,EAAQ/B,GAGnC,GAAM,aACf,SAACgG,GACC,OAAO,EAAKyB,UACV,CACE7H,IAAK,EAAKA,IAAM4H,EAAYE,KAC5B1B,KAAI,GAENwB,EAAYxH,QACZ,CAAE+B,OAAM,EAAEJ,OAAM,MAGpBG,EACAozB,I,OAEF,SAdW,SAcD,YAEN,YAAAnyB,gBAAN,SAAsBpB,EAAgBI,EAAgB7B,EAAeuB,G,oHAC7DK,EAAe,CACnBmX,WAAY/Y,EAASP,KAAKsC,mBAAmB/B,UAC7CuI,MAAO,MAEiD,IAAtD/K,OAAOkI,KAAKjG,KAAK25B,gBAAgB34B,QAAQgB,GAAzC,MACS,GAAMhC,KAAKo2B,gBAAgB,CAAEh0B,OAAM,EAAEJ,OAAM,EAAEG,QAAO,K,OAS/D,OATMqF,EAAK,SACH,EAAYxH,KAAK25B,eAAe33B,GAAzB,QACTvB,EAAS+G,EAAG7B,KAAI,SAAC7H,GAErB,OADAA,EAAE6C,oBAAsB7C,EAAE,EAAKwE,mBAAmB,IAC3C,CACLQ,KAAMhF,EAAE,EAAKwE,mBAAmB,IAChChE,MAAOR,EAAE,EAAKwE,mBAAmB,QAGrC,GAAM,IAAgB+V,gBAAgBrY,KAAKK,QAASL,KAAKga,aAAa,GAAUxS,I,OAChF,OADA,SACA,GAAO/G,G,OAET,SAAO,YAEX,EApGA,CAA0C,kB,wgBCZ1C,cAWE,WAAYnB,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAXlD,EAAAY,UAAY,YACZ,EAAAuB,kBAAoB,uBACpB,EAAAmC,kBAAoB,uBACpB,EAAAxB,mBAAqB,qBAErB,EAAAoG,kBAAoB,CAClBrI,QAAS,MACT2B,OAAQ,gCACRuzB,cAAe,2B,EAKnB,OAd0C,OAc1C,EAdA,CAA0C,kB,q1DCA1C,cAYE,WAAYj2B,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAZlD,EAAAY,UAAY,YACZ,EAAAuB,kBAAoB,uBACpB,EAAAmC,kBAAoB,uBACpB,EAAAxB,mBAAqB,CACnB/B,SAAU,yBAEZ,EAAAmI,kBAAoB,CAClBrI,QAAS,KACT2B,OAAQ,+BACRuzB,cAAe,0B,EAUnB,OApB2C,OAgBnC,YAAAltB,WAAN,SAAiBjG,G,YAAA,IAAAA,MAAA,gB,mFACA,SAAM,YAAMiG,WAAU,UAACjG,I,OACtC,SADe,SACDuD,KAAI,SAAC/C,GAAS,gDAEhC,EApBA,CAA2C,kB,oiECO3C,cAcE,WAAYtD,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAdlD,EAAAY,UAAY,YACZ,EAAAuB,kBAAoB,uBACpB,EAAAmC,kBAAoB,uBACpB,EAAAxB,mBAAqB,qBAErB,EAAAoG,kBAAoB,CAClBrI,QAAS,MACT2B,OAAQ,oBACRuzB,cAAe,eAEjB,EAAA31B,gBAAkB,CAChB4I,aAAc,mB,EAQlB,OApB0C,OAiBlC,YAAA3G,gBAAN,SAAsBC,EAAYC,G,mEAChC,SAAO,YAAMF,gBAAe,iBAAMC,GAAU,CAAEM,OAAQ,iBAAoBL,WAE9E,EApBA,CAA0C,kB,42DCE1C,cAaE,WAAYzC,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAblD,EAAAY,UAAY,YACZ,EAAAuB,kBAAoB,mCACpB,EAAAmC,kBAAoB,mCACpB,EAAAhE,uBAAyB,yBACzB,EAAAwC,mBAAqB,qBACrB,EAAA0X,aAAe,eAEf,EAAAtR,kBAAoB,CAClBrI,QAAS,MACT2B,OAAQ,oBACRuzB,cAAe,e,EA8BnB,OAzC0C,OAgBlC,YAAA0E,YAAN,SAAkBryB,G,mHAGM,OAFdzF,EAAYyF,EAAL,QACP0R,EAAenX,EAAL,WACI,GAAM,IAAgBa,YAAYhD,KAAKK,U,OAI7D,OAJM4C,EAAgB,SAChBi3B,EAC4F,QAAhG,MAAEh3B,UAAUD,EAAcE,MAAK,SAACP,GAAS,OAAAA,EAAK,EAAKN,mBAAmB/B,YAA7B,aAAuD,QAAI,GAEtG,GADiC25B,EAAL,mBAGxB,YAAA92B,gBAAN,SAAsBpB,EAAgBI,EAAgB7B,EAAeuB,G,2GAKxD,OAJLK,EAAe,CACnBmX,WAAY/Y,EACZuI,MAAO,KAEE,GAAM9I,KAAKi6B,YAAY,CAAE73B,OAAM,EAAEJ,OAAM,EAAEG,QAAO,K,OAQ3D,OARMqF,EAAK,SACL/G,EAAS+G,EAAG7B,KAAI,SAAC7H,GAErB,OADAA,EAAE6C,oBAAsB7C,EAAE,EAAKwE,mBAAmBof,QAC3C,CACL5e,KAAMhF,EAAE,EAAKwE,mBAAmBof,QAChCpjB,MAAOR,EAAE,EAAKwE,mBAAmBof,YAGrC,GAAM,IAAgBrJ,gBAAgBrY,KAAKK,QAASL,KAAKga,aAAa0H,OAAQla,I,OAC9E,OADA,SACA,GAAO/G,WAEX,EAzCA,CAA0C,kB,oiECR1C,cAWE,WAAYnB,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAXlD,EAAAY,UAAY,YACZ,EAAAuB,kBAAoB,yBACpB,EAAAmC,kBAAoB,yBACpB,EAAAxB,mBAAqB,qBAErB,EAAAoG,kBAAoB,CAClBrI,QAAS,MACT2B,OAAQ,wBACRuzB,cAAe,mB,EAQnB,OAjB0C,OAclC,YAAA1zB,gBAAN,SAAsBC,EAAYC,G,mEAChC,SAAO,YAAMF,gBAAe,iBAAMC,GAAU,CAAEM,OAAQ,iBAAoBL,WAE9E,EAjBA,CAA0C,kB,03DCY1C,cAeE,WAAYzC,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAflD,EAAAY,UAAY,YACZ,EAAAuB,kBAAoB,uBACpB,EAAAmC,kBAAoB,uBACpB,EAAAxB,mBAAqB,qBACrB,EAAAxC,uBAAyB,yBAEzB,EAAA4I,kBAAoB,CAClBrI,QAAS,MACT2B,OAAQ,oBACRuzB,cAAe,aAGjB,EAAAvb,aAAe,e,EA4FjB,OAzG0C,OAqBxC,YAAAxX,WAAA,WACE,OAAOa,QAAQC,QAAQ,oBAGnB,YAAA+E,WAAN,SAAiBjG,G,YAAA,IAAAA,MAAA,gB,yFACA,SAAM,YAAMiG,WAAU,UAACjG,I,OACtC,OADM0zB,EAAS,SACf,GAAO,IAAE/rB,QACP+rB,EAAOnwB,KAAI,SAAC/C,GACV,OAAO,0BAAgBA,gBAIvB,YAAAu3B,iBAAN,SAAuBvyB,G,2GAKT,OAJJxF,EAAWwF,EAAL,OACRC,EAAc,YAAkBzF,EAAQpC,KAAKK,SAGvC,GAAM,aAChB,SAACgG,GACC,OAAO,EAAKyB,UACV,CACE7H,IAAK,EAAKA,IAAM4H,EAAYE,KAC5B1B,KAAI,GAENwB,EAAYxH,QACZ,CAAE+B,OAAM,EAAEJ,OAAQ,sCAGtB,GACA,4B,OAGF,OAfMU,EAAM,SAeZ,GADaA,EAAJ,YAGL,YAAA03B,aAAN,SAAmBxyB,G,2GAKL,OAJJxF,EAAWwF,EAAL,OACRC,EAAc,YAAkBzF,EAAQpC,KAAKK,SAGvC,GAAM,aAChB,SAACgG,GACC,OAAO,EAAKyB,UACV,CACE7H,IAAK,EAAKA,IAAM4H,EAAYE,KAC5B1B,KAAI,GAENwB,EAAYxH,QACZ,CAAE+B,OAAM,EAAEJ,OAAQ,iBAGtB,GACA,a,OAGF,OAfMU,EAAM,SAeZ,GADaA,EAAJ,GACCiD,KAAI,SAACxH,G,MAAM,aAAI,EAAKmE,mBAAmBwb,SAAU3f,EAAC,cAExD,YAAAiF,gBAAN,SAAsBpB,EAAgBI,EAAgB7B,G,+GAErC,oCAAXyB,EAAA,MACS,GAAMhC,KAAKm6B,iBAAiB,CAAE/3B,OAAM,EAAEqiB,WAAYlkB,EAASP,KAAKsC,mBAAmB/B,a,OAQ9F,OARMiH,EAAK,SACL/G,EAAS+G,EAAG7B,KAAI,SAAC7H,GAErB,OADAA,EAAE6C,oBAAsB7C,EAAE,EAAKwE,mBAAmB4C,MAC3C,CACLpC,KAAMhF,EAAE,EAAKwE,mBAAmB4C,MAChC5G,MAAOR,EAAE,EAAKwE,mBAAmB4C,UAGrC,GAAM,IAAgBmT,gBAAgBrY,KAAKK,QAASL,KAAKga,aAAagE,MAAOxW,I,OAC7E,OADA,SACA,GAAO/G,G,aAEM,eAAXuB,EAAA,MACS,GAAMhC,KAAKo6B,aAAa,CAAEh4B,OAAM,EAAEqiB,WAAYlkB,EAASP,KAAKsC,mBAAmB/B,a,OAQ1F,OARMiH,EAAK,SACL/G,EAAS+G,EAAG7B,KAAI,SAAC7H,GAErB,OADAA,EAAE6C,oBAAsB7C,EAAE,EAAKwE,mBAAmBwb,SAC3C,CACLhb,KAAMhF,EAAE,EAAKwE,mBAAmBwb,SAChCxf,MAAOR,EAAE,EAAKwE,mBAAmBwb,aAGrC,GAAM,IAAgBzF,gBAAgBrY,KAAKK,QAASL,KAAKga,aAAa+D,MAAOvW,I,OAC7E,OADA,SACA,GAAO/G,G,OAET,SAAO,YAEX,EAzGA,CAA0C,kB,q1DCZ1C,cA0BE,WAAYnB,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OA1BlD,EAAAY,UAAY,SACZ,EAAAuB,kBAAoB,sBACpB,EAAAmC,kBAAoB,sBACpB,EAAAxB,mBAAqB,CACnB/B,SAAU,aAEZ,EAAAmI,kBAAoB,CAClBrI,QAAS,MACT2B,OAAQ,oBACRuzB,cAAe,aACf3sB,YAAa,CACXG,QAAS,SAACnB,GASR,OARoBA,EAAL,UAEbA,EAAOkM,QAAU,IAEnBlM,EAAOkM,QAAQ3N,KAAK,CAClBjB,KAAM,eACNyO,OAAQ,CAAC,SAEJ/L,K,EA2Bf,OAhD2C,OA8BnC,YAAAS,WAAN,SAAiBjG,G,YAAA,IAAAA,MAAA,gB,mFACA,SAAM,YAAMiG,WAAU,UAACjG,I,OACtC,SADe,SACDmD,QAAO,SAAC3C,GAAI,UAExB,OAAgC,QAAhC,EAAoB,QAApB,EAAe,QAAf,EAAAA,EAAKwD,kBAAU,eAAG,UAAE,eAAEA,kBAAU,eAAExE,SAAS,mBAcjD,EAhDA,CAA2C,kB,42DCM3C,cAUE,WAAYtC,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAVlD,EAAAY,UAAY,iBACZ,EAAAuB,kBAAoB,8BACpB,EAAAmC,kBAAoB,8BACpB,EAAAxB,mBAAqB,qBACrB,EAAAoG,kBAAoB,CAClBrI,QAAS,aACT2B,OAAQ,oBACRuzB,cAAe,e,EAuDnB,OA/DkD,OAchD,YAAA/yB,WAAA,WACE,OAAOxC,KAAK8H,UACV,CACE7H,IAAKD,KAAKC,IAAM,OAChBoG,KAAM,CAAEqzB,QAAS,eAEnB,MACA,CAAE13B,OAAQ,oBACVkF,MAAK,SAACc,GACN,OAAO,IAAEzC,OACP,IAAEI,IAAIqC,EAASC,WAAa,IAAI,SAACrF,GAC/B,MAAO,CACLE,KAAMF,EAAKsF,WACX5J,MAAOsE,EAAKuF,OACZC,YAAaxF,EAAKwF,iBAGtB,SAACxF,GAAS,oBAAAA,EAAKwF,mBAKrB,YAAA2tB,SAAA,SAAS3zB,GACP,IAAMyF,EAAc,YAAkBzF,EAAQ,OAC9C,OAAOpC,KAAK8H,UACV,CACE7H,IAAKD,KAAKC,IAAM4H,EAAYE,KAC5B1B,KAAM,CAAEqzB,QAAS,eAEnB7xB,EAAYxH,QACZ,CAAE+B,OAAM,EAAEJ,OAAQ,kBAClBkF,MAAK,SAACc,GACN,OAAO,IAAEzC,OACP,IAAEI,IAAIqC,EAASguB,SAAW,IAAI,SAACpzB,GAC7B,MAAO,CAAEE,KAAMF,EAAKqzB,SAAU33B,MAAOsE,EAAKwjB,KAAM+P,UAAWvzB,EAAKuzB,UAAW/P,KAAMxjB,EAAKwjB,UAExF,SAACxjB,GAAS,oBAAAA,EAAKuzB,iBAKf,YAAA9tB,WAAN,SAAiBjG,G,YAAA,IAAAA,MAAA,gB,yFACA,SAAM,YAAMiG,WAAU,UAACjG,I,OACtC,OADM0zB,EAAS,SACf,GAAO,IAAE/rB,QACP+rB,EAAOnwB,KAAI,SAAC/C,GACV,OAAO,0BAAgBA,gBAI/B,EA/DA,CAAkD,kB,wgBCNlD,cAYE,WAAYtD,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAZlD,EAAAY,UAAY,aACZ,EAAAuB,kBAAoB,2BACpB,EAAAmC,kBAAoB,2BACpB,EAAAxB,mBAAqB,CACnB/B,SAAU,cAEZ,EAAAmI,kBAAoB,CAClBrI,QAAS,UACT2B,OAAQ,sBACRuzB,cAAe,mB,EAKnB,OAf+C,OAe/C,EAfA,CAA+C,kB,yjECQ/C,yE,OACE,EAAAzxB,kBAA4C,oBAC5C,EAAAnC,kBAA8B,oBAC9B,EAAAW,mBAAqB,qBACrB,EAAAzC,YAAc,GACd,EAAAma,aAAe,eACf,EAAAla,uBAAyB,yBACzB,EAAA4I,kBAAoB,CAClBrI,QAAS,MACT2B,OAAQ,oBACRuzB,cAAe,cACf3sB,YAAa,CACXG,QAAS,SAACnB,GAAW,cAChBA,GAAM,CACT6b,gBAAiB7b,EAAO6b,iBAAmB,gBAC3C9H,UAAW/T,EAAO+T,YAHC,KAKrB3T,SAAU,SAAC3B,GAAoB,OAAAA,EAAKV,KAAI,SAAC,GAA+B,MAAC,CAAEqlB,UAAvB,YAAkCqP,YAArB,qB,EA4CvE,OA7D8C,OAqBtC,YAAAC,cAAN,SAAoBl4B,EAAgBwF,G,uGAIvB,OAHLC,EAAc,YAAkBzF,EAAQ,OAGnC,GAAM,aACf,SAACiE,GACC,OAAO,EAAKyB,UACV,CACE7H,IAAK,EAAKA,IAAM4H,EAAYE,KAC5B1B,KAAI,GAENwB,EAAYxH,QACZ,CAAE+B,OAAM,EAAEJ,OAAQ,2BAGtB4F,EACA,a,OAIF,SAhBW,SAgBD,YAGN,YAAAxE,gBAAN,SAAsBpB,EAAgBI,EAAgB7B,G,yGAE5CyB,G,IACD,mC,mBACa,SAAMhC,KAAKs6B,cAAcl4B,EAAQ,CAAEkX,WAAY/Y,EAASyqB,UAAWuP,SAAU,S,OAK7F,OALMC,EAAU,SAChB/5B,EAAS+5B,EAAQ70B,KAAI,SAAC/C,GAEpB,OADAA,EAAKjC,oBAAsBiC,EAAK,qBAAmB0gB,MAC5C,CAAExgB,KAAMF,EAAK,qBAAmB0gB,MAAOhlB,MAAOsE,EAAK,qBAAmB0gB,UAE/E,GAAM,IAAgBjL,gBAAgBrY,KAAKK,QAASL,KAAKga,aAAasJ,KAAMkX,I,OAE5E,OAFA,SAEA,GAAO/5B,G,OAGP,SAAO,YAGf,EA7DA,CAA8C,kB,wgBCR9C,cAYE,WAAYnB,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAZlD,EAAAY,UAAY,kBACZ,EAAAuB,kBAAoB,8BACpB,EAAAmC,kBAAoB,uBACpB,EAAAxB,mBAAqB,CACnB/B,SAAU,gBAEZ,EAAAmI,kBAAoB,CAClBrI,QAAS,MACT2B,OAAQ,sBACRuzB,cAAe,iB,EAKnB,OAfkD,OAelD,EAfA,CAAkD,kB,oiECAlD,cAYE,WAAYj2B,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAZlD,EAAAY,UAAY,aACZ,EAAAuB,kBAAoB,yBACpB,EAAAmC,kBAAoB,yBACpB,EAAAxB,mBAAqB,CACnB/B,SAAU,UAEZ,EAAAmI,kBAAoB,CAClBrI,QAAS,MACT2B,OAAQ,kBACRuzB,cAAe,W,EASnB,OAnB6C,OAgBrC,YAAA1zB,gBAAN,SAAsBC,EAAYC,G,mEAChC,SAAO,YAAMF,gBAAe,iBAAMC,GAAU,CAAEM,OAAQ,iBAAoBL,WAE9E,EAnBA,CAA6C,kB,2jECC7C,cAYE,WAAYzC,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAZlD,EAAAY,UAAY,YACZ,EAAAuB,kBAAoB,uBACpB,EAAAmC,kBAAoB,GACpB,EAAAxB,mBAAqB,qBAErB,EAAAoG,kBAAoB,CAClBrI,QAAS,KACT2B,OAAQ,KACRuzB,cAAe,M,EA+InB,OAxJ0C,OAgBxC,YAAA9sB,aAAA,SAAarG,EAAyBwF,QAAzB,IAAAxF,MAAA,qBAAyB,IAAAwF,MAAA,IACpCA,EAAS,EAAH,CAAK0qB,OAAQ,EAAGD,MAAO,IAAOzqB,GACpC,IAAMC,EAAc,YAAkBzF,EAAQ,OAC9C,OAAOpC,KAAKy6B,YACV,CACEx6B,IAAKD,KAAKC,IAAM4H,EAAYE,KAC5B1B,KAAMuB,GAERC,EAAYxH,QACZ,CAAE+B,OAAM,EAAEJ,OAAQ,kCAClBkF,MAAK,SAACc,GACN,OAAOA,EAAS3B,MAAQ,OAQ5B,YAAA5D,qBAAA,SAAqBL,EAAQN,GAA7B,WACMrB,EAAgB,GACdmH,EAAS,EAAH,CAAKiB,OAAQ,EAAGC,MAAO,IAAOhH,GACpC+F,EAAc,YAAkBzF,EAAQ,OAC9C,OAAOpC,KAAKy6B,YACV,CACEx6B,IAAKD,KAAKC,IAAM4H,EAAYE,KAC5B1B,KAAMuB,GAERC,EAAYxH,QACZ,CAAE+B,OAAM,EAAEJ,OAAQ,kCAClBkF,MAAK,SAACc,GACNvH,EAASuH,EAAS3B,MAAQ,GAC1B,IAAM4C,EAAQjB,EAAS0yB,YAAc,EACrC,GAAIj6B,EAAOuE,QAAUiE,EACnB,OAAOxI,EAEP,IAAM2I,EAAQ,YAAYH,EAAO,IAC3B,EAAkB,GAIxB,OAHA,IAAErI,QAAQwI,GAAO,SAACxG,GAChB,EAASuD,KAAK,EAAKsC,aAAarG,EAAQQ,OAEnCS,QAAQ4D,IAAI,GAChBC,MAAK,SAACC,GAIL,OAHA,IAAEvG,QAAQuG,GAAW,SAACvE,GACpBnC,EAAS,IAAEoF,OAAOpF,EAAQmC,MAErBnC,KALJ,OAOE,SAACsF,GACN,OAAOtF,SAMjB,YAAAk6B,SAAA,SAASv4B,EAAQwF,QAAA,IAAAA,MAAA,KACfA,EAAS,EAAH,CAAKiB,OAAQ,EAAGC,MAAO,IAAOlB,IAE7BiB,OAASyH,OAAO1I,EAAOiB,QAC9BjB,EAAOkB,MAAQwH,OAAO1I,EAAOkB,OAC7B,IAAMjB,EAAc,YAAkBzF,EAAQ,OAC9C,OAAOpC,KAAK8H,UACV,CACE7H,IAAKD,KAAKC,IAAM4H,EAAYE,KAC5B1B,KAAMuB,GAERC,EAAYxH,QACZ,CAAE+B,OAAM,EAAEJ,OAAQ,iBAClBkF,MAAK,SAACc,GACN,OAAO,IAAErC,IAAIqC,EAAS4yB,QAAU,IAAI,SAACh4B,GAAS,MAAC,CAAEE,KAAMF,EAAKiZ,MAAOvd,MAAOsE,EAA5B,cAIlD,YAAAi4B,UAAA,SAAUz4B,GAAV,WACM3B,EAAgB,GACdmH,EAAc,CAAEiB,OAAQ,EAAGC,MAAO,KAExClB,EAAOiB,OAASyH,OAAO1I,EAAOiB,QAC9BjB,EAAOkB,MAAQwH,OAAO1I,EAAOkB,OAC7B,IAAMjB,EAAc,YAAkBzF,EAAQ,OAC9C,OAAOpC,KAAK8H,UACV,CACE7H,IAAKD,KAAKC,IAAM4H,EAAYE,KAC5B1B,KAAMuB,GAERC,EAAYxH,QACZ,CAAE+B,OAAM,EAAEJ,OAAQ,iBAClBkF,MAAK,SAACc,GACNvH,EAAS,IAAEkF,IAAIqC,EAAS4yB,QAAU,IAAI,SAACh4B,GAAS,MAAC,CAAEE,KAAMF,EAAKiZ,MAAOvd,MAAOsE,EAA5B,UAChD,IAAMqG,EAAQjB,EAASkB,YAAc,EACrC,GAAIzI,EAAOuE,QAAUiE,EACnB,OAAOxI,EAEP,IAAM2I,EAAQ,YAAYH,EAAO,KAC3B,EAAkB,GAIxB,OAHA,IAAErI,QAAQwI,GAAO,SAACxG,GAChB,EAASuD,KAAK,EAAKw0B,SAASv4B,EAAQQ,OAE/BS,QAAQ4D,IAAI,GAChBC,MAAK,SAACC,GAIL,OAHA,IAAEvG,QAAQuG,GAAW,SAACvE,GACpBnC,EAAS,IAAEoF,OAAOpF,EAAQmC,MAErBnC,KALJ,OAOE,SAACsF,GACN,OAAOtF,SAYX,YAAAg6B,YAAN,SAAkB92B,EAAStD,EAASgK,G,YAAA,IAAAA,MAAA,I,mFACxB,SAAM,YACd1G,EACAtD,EACAgK,EACArK,KAAKE,SACLF,KAAKV,iBAAiBgL,GACtBtK,KAAKT,a,OAEP,OARAoE,EAAU,SAQV,GAAO3D,KAAKT,WACTgL,kBAAkB5G,GAClBuD,MAAK,SAACc,GACL,OAAO,IAAE9J,IAAI8J,EAAU,OAAQ,OAH5B,OAKE,SAACjC,GACN,MAAMA,cAGd,EAxJA,CAA0C,kB,wgBCK1C,cAcE,WAAYzG,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAdlD,EAAAY,UAAY,YACZ,EAAAuB,kBAAoB,4BACpB,EAAAmC,kBAAoB,2BACpB,EAAAxB,mBAAqB,qBACrB,EAAAoG,kBAAoB,CAClBrI,QAAS,WACT2B,OAAQ,sBACRuzB,cAAe,iBAGjB,EAAA31B,gBAAkB,CAChB4I,aAAc,mB,EAKlB,OAjB2C,OAiB3C,EAjBA,CAA2C,kB,wgBCP3C,cAqBE,WAAYlJ,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OArBlD,EAAAY,UAAY,YACZ,EAAAuB,kBAAoB,wBACpB,EAAAmC,kBAAoB,wBACpB,EAAAxB,mBAAqB,qBAErB,EAAAoG,kBAAoB,CAClBrI,QAAS,OACT2B,OAAQ,kBACRuzB,cAAe,WACf3sB,YAAa,I,EAcjB,OAxB4C,OAwB5C,EAxBA,CAA4C,kB,oiECC5C,cAeE,WAAYtJ,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAflD,EAAAY,UAAY,YACZ,EAAAuB,kBAAoB,yBACpB,EAAAmC,kBAAoB,yBACpB,EAAAxB,mBAAqB,CACnB/B,SAAU,cAEZ,EAAAmI,kBAAoB,CAClBrI,QAAS,QACT2B,OAAQ,oBACRuzB,cAAe,cACf3sB,YAAa,CACXG,QAAS,SAACnB,GAAW,cAAMA,GAAM,CAAEkzB,eAAd,U,EAW3B,OAvB6C,OAmBrC,YAAAzyB,WAAN,SAAiBjG,G,YAAA,IAAAA,MAAA,gB,mFACA,SAAM,YAAMiG,WAAU,UAACjG,I,OACtC,SADe,SACDmD,QAAO,SAAC3C,GAAS,8CAEnC,EAvBA,CAA6C,kB,kkECQ7C,cAcE,WAAYtD,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAdlD,EAAAY,UAAY,YACZ,EAAAuB,kBAAoB,4BACpB,EAAAmC,kBAAoB,4BACpB,EAAAxB,mBAAqB,qBACrB,EAAAzC,YAAc,CAAC,4BAA0BygB,QAAS,4BAA0BD,SAC5E,EAAA3X,kBAAoB,CAClBrI,QAAS,QACT2B,OAAQ,oBACRuzB,cAAe,cACf3sB,YAAa,CACXG,QAAS,SAACnB,GAAW,cAAMA,GAAM,CAAEkzB,eAAd,U,EAyC3B,OApD6C,OAkBrC,YAAAC,oBAAN,SAA0BnzB,G,2GAIZ,OAHJxF,EAAuBwF,EAAjB,OAAE6c,EAAe7c,EAAL,WACpBC,EAAc,YAAkBzF,EAAQ,SAElC,GAAM,aAChB,SAACiE,GACC,OAAO,EAAKyB,UACV,CACE7H,IAAK,EAAKA,IAAM4H,EAAYE,KAC5B1B,KAAI,GAENwB,EAAYxH,QACZ,CAAE+B,OAAM,EAAEJ,OAAQ,+BAGtB,CACEsX,WAAYmL,GAEd,a,OAGF,SAjBY,kBAmBR,YAAArhB,gBAAN,SAAsBpB,EAAgBI,EAAgB7B,EAAeuB,G,0GACpD,6BAAXE,EAAA,MACS,GAAMhC,KAAK+6B,oBAAoB,CAAE34B,OAAM,EAAEqiB,WAAYlkB,EAASP,KAAKsC,mBAAmB/B,a,OAGjG,OAHMiH,EAAK,SACHwzB,EAAal5B,EAAL,SAEhB,IAA0B,KADpBm5B,EAAgB,WAASj6B,QAAQg6B,IAEnC,GACA,IAAEr1B,IAAI6B,EAAGyzB,IAAgB,SAACr4B,GAAS,MAAC,CAAEE,KAAMF,EAAK6b,OAAQngB,MAAOsE,EAA7B,Y,OAEzC,SAAO,YAEX,EApDA,CAA6C,kB,m2DCC7C,cAUE,WAAYtD,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OANlD,EAAA8C,mBAAqB,qBACrB,EAAAxC,uBAAyB,yBACzB,EAAAka,aAAe,eAMb,EAAK5Z,UAAY,aACjB,EAAKuB,kBAAoB,uBACzB,EAAKmC,kBAAoB,uBACzB,EAAK4E,kBAAoB,CACvBrI,QAAS,MACT2B,OAAQ,gBACRuzB,cAAe,a,EAiDrB,OApE2C,OAuBzC,YAAA/yB,WAAA,WACE,OAAOa,QAAQC,QAAQ,oBAGnB,YAAA+E,WAAN,SAAiBjG,G,YAAA,IAAAA,MAAA,gB,mFACA,SAAM,YAAMiG,WAAU,UAACjG,I,OACtC,SADe,SACDmD,QACZ,SAAC3C,G,gBAEC,OAAgC,QAAhC,EAAoB,QAApB,EAAe,QAAf,EAAAA,EAAKwD,kBAAU,eAAG,UAAE,eAAEA,kBAAU,eAAExE,SAAS,mBACX,QAAhC,EAAoB,QAApB,EAAe,QAAf,EAAAgB,EAAKwD,kBAAU,eAAG,UAAE,eAAEA,kBAAU,eAAExE,SAAS,gBAC1CgB,EAAKmE,WAAWmc,WAAW,oBAIlC,YAAAgY,YAAA,SAAY94B,EAAQwF,GAClB,IAAMC,EAAc,YAAkBzF,EAAQ,OAC9C,OAAOpC,KAAK8H,UACV,CACE7H,IAAKD,KAAKC,IAAM4H,EAAYE,KAC5B1B,KAAMuB,GAERC,EAAYxH,QACZ,CAAE+B,OAAM,EAAEJ,OAAQ,0BAClBkF,MAAK,SAACc,GACN,OAAOA,EAASmzB,aAId,YAAA/3B,gBAAN,SAAsBpB,EAAgBI,EAAgB7B,G,+GAErC,0BAAXyB,EAAA,MACS,GAAMhC,KAAKk7B,YAAY94B,EAAQ,CAAEg5B,aAAc76B,EAASP,KAAKsC,mBAAmB/B,a,OAQ3F,OARMiH,EAAK,SACL/G,EAAS+G,EAAG7B,KAAI,SAAC7H,GAErB,OADAA,EAAE6C,oBAAsB7C,EAAE,EAAKwE,mBAAmBmI,SAC3C,CACL3H,KAAMhF,EAAE,EAAKwE,mBAAmBmI,SAChCnM,MAAOR,EAAE,EAAKwE,mBAAmBmI,aAGrC,GAAM,IAAgB4N,gBAAgBrY,KAAKK,QAASL,KAAKga,aAAavP,QAASjD,I,OAC/E,OADA,SACA,GAAO/G,G,OAET,SAAO,YAEX,EApEA,CAA2C,kB,42DCD3C,cAWE,WAAYnB,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAXlD,EAAAY,UAAY,YACZ,EAAAuB,kBAAoB,6BACpB,EAAAmC,kBAAoB,6BACpB,EAAAxB,mBAAqB,qBAErB,EAAAoG,kBAAoB,CAClBrI,QAAS,YACT2B,OAAQ,sBACRuzB,cAAe,e,EAiCnB,OA1C0C,OAelC,YAAAltB,WAAN,SAAiBjG,G,YAAA,IAAAA,MAAA,gB,yFACA,SAAM,YAAMiG,WAAU,UAACjG,I,OACtC,OADM0zB,EAAS,SACf,GAAO,IAAE/rB,QAAQ+rB,EAAOnwB,KAAI,SAAC/C,GAAS,iDAExC,YAAAJ,WAAA,WACE,OAAOa,QAAQC,QAAQ,oBAEzB,YAAA0R,kBAAA,SAAkB,G,IAAErM,EAAK,QAAEvG,EAAM,SAC/B,GAAc,SAAVuG,EAAkB,CACpB,IAAMd,EAAc,YAAkBzF,EAAQ,OAC9C,OAAOpC,KAAK8H,UACV,CACE7H,IAAKD,KAAKC,IAAM4H,EAAYE,MAE9BF,EAAYxH,QACZ,CAAE+B,OAAM,EAAEJ,OAAQ,kBAClBkF,MAAK,SAACc,GACN,OAAO,IAAEzC,OACP,IAAEI,IAAIqC,EAASguB,SAAW,IAAI,SAACpzB,GAC7B,MAAO,CAAEE,KAAMF,EAAKqzB,SAAU33B,MAAOsE,EAAKwjB,KAAM+P,UAAWvzB,EAAKuzB,UAAW/P,KAAMxjB,EAAKwjB,UAExF,SAACxjB,GAAS,oBAAAA,EAAKuzB,gBAIrB,MAAO,IAEX,EA1CA,CAA0C,kB,whBCF1C,cAWE,WAAY72B,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAXlD,EAAAY,UAAY,YACZ,EAAAuB,kBAAoB,2BACpB,EAAAmC,kBAAoB,2BACpB,EAAAxB,mBAAqB,qBAErB,EAAAoG,kBAAoB,CAClBrI,QAAS,YACT2B,OAAQ,iBACRuzB,cAAe,c,EAsBnB,OA/B0C,OAexC,YAAA/yB,WAAA,WACE,OAAOxC,KAAK8H,UACV,CACE7H,IAAKD,KAAKC,IAAM,cAElB,YACA,CAAE+B,OAAQ,kBAAmBI,OAAQ,iBACrC8E,MAAK,SAACc,GACN,OAAO,IAAErC,IAAIqC,EAASqzB,aAAe,IAAI,SAACz4B,GACxC,MAAO,CACLE,KAAM,YAAUF,EAAKsF,YACrB5J,MAAOsE,EAAKsF,mBAKtB,EA/BA,CAA0C,kB,03DCM1C,cA2BE,WAAY5I,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OA3BlD,EAAAY,UAAY,YACZ,EAAAuB,kBAAoB,wBACpB,EAAAmC,kBAAoB,wBACpB,EAAAxB,mBAAqB,qBACrB,EAAAxC,uBAAyB,yBACzB,EAAAka,aAAe,eAEf,EAAAtR,kBAAoB,CAClBrI,QAAS,OACT2B,OAAQ,mBACRuzB,cAAe,cAEjB,EAAAoE,eAAiB,CACf2B,eAAgB,CACdj7B,QAAS,OACT2B,OAAQ,iBACRuzB,cAAe,YACfsE,QAAS,aAEX0B,qBAAsB,CACpBl7B,QAAS,OACT2B,OAAQ,uBACRuzB,cAAe,iBACfsE,QAAS,kB,EAiEf,OAzF0C,OAiCxC,YAAAr3B,WAAA,WACE,OAAOa,QAAQC,QAAQ,oBAGnB,YAAA+E,WAAN,SAAiBjG,G,YAAA,IAAAA,MAAA,gB,yFACA,SAAM,YAAMiG,WAAU,UAACjG,I,OACtC,OADM0zB,EAAS,SACf,GAAO,IAAE/rB,QAAQ+rB,EAAOnwB,KAAI,SAAC/C,GAAS,iDAGlC,YAAAwzB,gBAAN,SAAsBxuB,G,qHAOT,OANHxF,EAAiCwF,EAA3B,OAAUoyB,EAAiBpyB,EAAd,OAAEzF,EAAYyF,EAAL,QAC9B,EAAqC5H,KAAK25B,eAAeK,GAAvD35B,EAAO,UAAE2B,EAAM,SAAEuzB,EAAa,gBAEhC1tB,EAAc,YAAkBzF,EAAQ/B,GAGnC,GAAM,aACf,SAACgG,GACC,OAAO,EAAKyB,UACV,CACE7H,IAAK,EAAKA,IAAM4H,EAAYE,KAC5B1B,KAAI,GAENwB,EAAYxH,QACZ,CAAE+B,OAAM,EAAEJ,OAAM,MAGpBG,EACAozB,I,OAGF,SAfW,SAeD,YAEN,YAAAnyB,gBAAN,SAAsBpB,EAAgBI,EAAgB7B,EAAeuB,G,oHAC7DK,EAAe,CACnB2G,MAAO,IACPkiB,UAAWzqB,EAASP,KAAKsC,mBAAmB/B,YAEY,IAAtDxC,OAAOkI,KAAKjG,KAAK25B,gBAAgB34B,QAAQgB,GAAzC,OACa,mBAAXA,IACFG,EAAQob,cAAgBvd,KAAKe,YAAYe,EAAK,gBAErC,GAAM9B,KAAKo2B,gBAAgB,CAAEh0B,OAAM,EAAEJ,OAAM,EAAEG,QAAO,M,OAS/D,OATMqF,EAAK,SACH,EAAYxH,KAAK25B,eAAe33B,GAAzB,QACTvB,EAAS+G,EAAG7B,KAAI,SAAC7H,GAErB,OADAA,EAAE6C,oBAAsB7C,EAAE,EAAKwE,mBAAmB,IAC3C,CACLQ,KAAMhF,EAAE,EAAKwE,mBAAmB,IAChChE,MAAOR,EAAE,EAAKwE,mBAAmB,QAGrC,GAAM,IAAgB+V,gBAAgBrY,KAAKK,QAASL,KAAKga,aAAa,GAAUxS,I,OAChF,OADA,SACA,GAAO/G,G,OAET,SAAO,YAEX,EAzFA,CAA0C,kB,wgBCZ1C,cAUE,WAAYnB,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAVlD,EAAAY,UAAY,UACZ,EAAAuB,kBAAoB,uBACpB,EAAAmC,kBAAoB,uBACpB,EAAAxB,mBAAqB,qBACrB,EAAAoG,kBAAoB,CAClBrI,QAAS,MACT2B,OAAQ,uBACRuzB,cAAe,W,EAKnB,OAb2C,OAa3C,EAbA,CAA2C,kB,42DCS3C,cAWE,WAAYj2B,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAXlD,EAAAY,UAAY,YACZ,EAAAuB,kBAAoB,wBACpB,EAAAmC,kBAAoB,wBACpB,EAAAxB,mBAAqB,qBAErB,EAAAoG,kBAAoB,CAClBrI,QAAS,MACT2B,OAAQ,wBACRuzB,cAAe,mB,EAsCnB,OA/C0C,OAexC,YAAA/yB,WAAA,WACE,OAAOa,QAAQC,QAAQ,oBAEnB,YAAAk4B,cAAN,SAAoBp5B,G,oGAEoB,OADhCyF,EAAc,YAAkBzF,EAAQ,WACR,GAAMpC,KAAK8H,UAC/C,CACE7H,IAAKD,KAAKC,IAAM4H,EAAYE,KAC5B1B,KAAM,CACJjG,UAAW,kBAAe,SAG9ByH,EAAYxH,QACZ,CAAE+B,OAAM,EAAEJ,OAAQ,yB,OAEmB,OAVpBy5B,EAAmB,SAAL,UAUM,GAAMz7B,KAAK8H,UAChD,CACE7H,IAAKD,KAAKC,IAAM4H,EAAYE,KAC5B1B,KAAM,CACJjG,UAAW,kBAAe,UAG9ByH,EAAYxH,QACZ,CAAE+B,OAAM,EAAEJ,OAAQ,yB,OAGpB,OAXmB05B,EAAoB,SAAL,UAWlC,GADY39B,OAAOyT,OAAO,IAAEmkB,MAAM,IAAE9vB,OAAO61B,EAAiBD,GAAiB,eAClE91B,KAAI,SAACpH,GAAM,gDAElB,YAAA8J,WAAN,SAAiBjG,G,YAAA,IAAAA,MAAA,gB,yFACA,SAAMpC,KAAKw7B,cAAcp5B,I,OACxC,OADM0zB,EAAS,SACf,GAAO,IAAE/rB,QAAQ+rB,YAErB,EA/CA,CAA0C,kB,wgBCT1C,cAWE,WAAYx2B,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAXlD,EAAAY,UAAY,YACZ,EAAAuB,kBAAoB,uBACpB,EAAAmC,kBAAoB,uBACpB,EAAAxB,mBAAqB,qBAErB,EAAAoG,kBAAoB,CAClBrI,QAAS,MACT2B,OAAQ,eACRuzB,cAAe,U,EAQnB,OAjB0C,OAcxC,YAAAvgB,kBAAA,SAAkB,GAAO,QACvB,OAAO,YAAMxS,WAAU,YAE3B,EAjBA,CAA0C,kB,wgBCK1C,cAqBE,WAAYlD,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OArBlD,EAAAY,UAAY,YACZ,EAAAuB,kBAAoB,gCACpB,EAAAmC,kBAAoB,0BACpB,EAAAxB,mBAAqB,qBAErB,EAAAoG,kBAAoB,CAClBrI,QAAS,MACT2B,OAAQ,qBACRuzB,cAAe,eACf3sB,YAAa,IAQf,EAAAhJ,gBAAkB,CAChB4I,aAAc,mB,EAKlB,OAxB0C,OAwB1C,EAxBA,CAA0C,kB,+hBCJ1C,cAWE,WAAYlJ,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAXlD,EAAAY,UAAY,YACZ,EAAAuB,kBAAoB,yBACpB,EAAAmC,kBAAoB,yBACpB,EAAAxB,mBAAqB,qBAErB,EAAAoG,kBAAoB,CAClBrI,QAAS,MACT2B,OAAQ,sBACRuzB,cAAe,iB,EA0BnB,OAnC0C,OAexC,YAAAvgB,kBAAA,SAAkB,G,IAAErM,EAAK,QAAEvG,EAAM,SAC/B,GAAc,SAAVuG,EAAkB,CACpB,IAAMd,EAAc,YAAkBzF,EAAQ,OAC9C,OAAOpC,KAAK8H,UACV,CACE7H,IAAKD,KAAKC,IAAM4H,EAAYE,MAE9BF,EAAYxH,QACZ,CAAE+B,OAAM,EAAEJ,OAAQ,kBAClBkF,MAAK,SAACc,GACN,OAAO,IAAEzC,OACP,IAAEI,IAAIqC,EAASguB,SAAW,IAAI,SAACpzB,GAC7B,MAAO,CAAEE,KAAMF,EAAKqzB,SAAU33B,MAAOsE,EAAKwjB,KAAM+P,UAAWvzB,EAAKuzB,UAAW/P,KAAMxjB,EAAKwjB,UAExF,SAACxjB,GAAS,oBAAAA,EAAKuzB,gBAIrB,MAAO,IAEX,EAnCA,CAA0C,kB,wgBCF1C,cAWE,WAAY72B,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAXlD,EAAAY,UAAY,YACZ,EAAAuB,kBAAoB,wBACpB,EAAAmC,kBAAoB,wBACpB,EAAAxB,mBAAqB,qBAErB,EAAAoG,kBAAoB,CAClBrI,QAAS,MACT2B,OAAQ,yBACRuzB,cAAe,oB,EAKnB,OAd0C,OAc1C,EAdA,CAA0C,kB,oiECC1C,cAUE,WAAYj2B,EAAkBC,EAAYC,GAA1C,MACE,YAAMF,EAAkBC,EAAYC,IAAY,K,OAVlD,EAAAY,UAAY,YACZ,EAAAuB,kBAAoB,uBACpB,EAAAmC,kBAAoB,uBACpB,EAAAxB,mBAAqB,qBACrB,EAAAoG,kBAAoB,CAClBrI,QAAS,MACT2B,OAAQ,kBACRuzB,cAAe,W,EAQnB,OAhB2C,OAanC,YAAA1zB,gBAAN,SAAsBC,EAAYC,G,mEAChC,SAAO,YAAMF,gBAAe,iBAAMC,GAAU,CAAEM,OAAQ,iBAAoBL,WAE9E,EAhBA,CAA2C,kB,k/CCA3C,aAEE,WAAY6S,EAAQC,GAApB,WACED,EAAO+mB,KAAO,WACZ/mB,EAAO2N,iCAAmC,mCAC1C3N,EAAO3S,UAAY,aAErB2S,EAAOgnB,cAAgB,WACf,IAAAr7B,EAAaqU,EAAOpU,OAAZ,SACRH,EAAU,YAAwBuU,EAAO3S,WAG/C,KADA1B,EAAWqU,EAAOG,WAAW8mB,aAAax7B,EAAS,cAAxCuU,CAAuDrU,IAEhE,MAAO,GAET,IACEA,EAAWgE,KAAKC,MAAMjE,GAAU,qBAAmBA,UACnD,MAAOwF,IAGT,OAAOxF,GAETqU,EAAOknB,iBAAmB,SAAOt7B,GAAM,qC,8DAI1B,OAHLH,EAAU,YAAwBuU,EAAO3S,WACzCwiB,EAAa7P,EAAOgnB,gBACpBx5B,EAASwS,EAAOG,WAAW8mB,aAAax7B,EAAS,cAAxCuU,CAAuDpU,EAAO4B,QAClE,GAAMwS,EAAOG,WAAW8mB,aAAax7B,EAAS,yBAAxCuU,CAAkE,CAAExS,OAAM,EAAEqiB,WAAU,K,OAQvG,OARMjd,EAAK,SAQX,GANeA,EAAG7B,KAAI,SAAC7H,GACrB,MAAO,CACLgF,KAAMhF,EAAEwkB,gBACRhkB,MAAOiG,KAAKoG,UAAU7M,gBAM5B8W,EAAO+mB,OAEX,OAvCA,kCAuCA,EAvCA,GAqHM,SAAUI,IACd,MAAO,CACL7mB,SA9Ea,0lFA+EbC,WAAYT,EACZU,SAAU,IACVC,MAAO,CACL7U,OAAQ,IACR8U,WAAY,IACZlT,OAAQ,IACR2S,WAAY,IACZQ,mBAAoB,IACpBC,SAAU,IACVwmB,UAAW,IACXhD,KAAM,MAIZ,IAAW/jB,UAAU,kBAAiB8mB,I,6BC1ItC,0BAEA,kBAAa,kBAAiB,sB,6BCF9B,0BAEA,kBAAa,kBAAiB,sB,6BCF9B,0BAEA,kBAAa,kBAAiB,sB,6BCF9B,yHAGA,aAEE,WAAYnnB,EAAQC,GAClBD,EAAO+mB,KAAO,WACZ/mB,EAAO4e,0BAA4B,6BAGrC5e,EAAOqnB,UAAY,SAACC,EAAUC,IACY,IAApCvnB,EAAOpU,OAAO8E,QAAQ42B,KACxBtnB,EAAOpU,OAAO8E,QAAQ62B,IAAY,GAEpCvnB,EAAOY,YAGTZ,EAAOE,YAAc,SAACnM,GACpB,OAAQA,GACN,IAAK,OACH,OAAOiM,EAAOmhB,WAChB,QACE,MAAO,KAIbnhB,EAAOmhB,SAAW,WAChB,OAAKnhB,EAAOxS,OAGLwS,EAAOG,WAAWghB,SAAS,MAAOnhB,EAAOxS,QAFvC,IAKXwS,EAAO+mB,OAEX,OAhCA,kCAgCA,EAhCA,GAwIM,SAAUS,IACd,MAAO,CACLlnB,SAxGa,mvHAyGbC,WAAYknB,EACZjnB,SAAU,IACVC,MAAO,CACL7U,OAAQ,IACR8U,WAAY,IACZlT,OAAQ,IACR2S,WAAY,IACZQ,mBAAoB,IACpBC,SAAU,MAKhB,IAAWP,UAAU,WAAYmnB,I,6BC3JjC,0BAEA,kBAAa,kBAAiB,sB,6BCF9B,yHAGA,aAEE,WAAYxnB,EAAQC,GAClBD,EAAO+mB,KAAO,WACZ/mB,EAAOsb,oBAAsB,uBAG/Btb,EAAOqnB,UAAY,SAACC,EAAUC,IACY,IAApCvnB,EAAOpU,OAAO8E,QAAQ42B,KACxBtnB,EAAOpU,OAAO8E,QAAQ62B,IAAY,GAEpCvnB,EAAOY,YAGTZ,EAAOE,YAAc,SAACnM,GACpB,OAAQA,GACN,IAAK,UACH,OAAOiM,EAAOmhB,WAChB,QACE,MAAO,KAIbnhB,EAAOmhB,SAAW,WAChB,OAAKnhB,EAAOxS,OAGLwS,EAAOG,WAAWghB,SAAS,MAAOnhB,EAAOxS,QAFvC,IAKXwS,EAAO+mB,OAEX,OAhCA,kCAgCA,EAhCA,GA4FM,SAAUW,IACd,MAAO,CACLpnB,SA5Da,+9DA6DbC,WAAYonB,EACZnnB,SAAU,IACVC,MAAO,CACL7U,OAAQ,IACR8U,WAAY,IACZlT,OAAQ,IACR2S,WAAY,IACZQ,mBAAoB,IACpBC,SAAU,MAKhB,IAAWP,UAAU,WAAYqnB,I,6BC/GjC,yHAGA,aAEE,WAAY1nB,EAAQC,GAClBD,EAAO+mB,KAAO,WACZ/mB,EAAOkf,0BAA4B,6BA0BrClf,EAAO+mB,OAEX,OAhCA,kCAgCA,EAhCA,GAkGM,SAAUa,IACd,MAAO,CACLtnB,SAlEa,oiEAmEbC,WAAYsnB,EACZrnB,SAAU,IACVC,MAAO,CACL7U,OAAQ,IACR8U,WAAY,IACZlT,OAAQ,IACR2S,WAAY,IACZQ,mBAAoB,IACpBC,SAAU,MAKhB,IAAWP,UAAU,WAAYunB,I,q+CCjH3BE,EAAc,CAClB,CACEvoB,MAAO,MACPxL,MAAO,OAET,CACEwL,MAAO,WACPxL,MAAO,aAGX,aAEE,WAAYiM,EAAQC,GAApB,WACED,EAAO+mB,KAAO,WACZ/mB,EAAO4T,kCAAoC,oCAC3C5T,EAAO8nB,YAAcA,EACrB9nB,EAAO3S,UAAY,aAGrB2S,EAAOknB,iBAAmB,SAAOt7B,EAAQmI,GAAK,qC,0DAGjC,OAFLtI,EAAU,YAAwBuU,EAAO3S,WACzCG,EAASwS,EAAOG,WAAW8mB,aAAax7B,EAAS,cAAxCuU,CAAuDpU,EAAO4B,QAClE,GAAMwS,EAAOG,WAAW8mB,aAAax7B,EAAS,kBAAxCuU,CAA2D,CAAExS,OAAM,EAAEuG,MAAK,K,OAC3F,SADW,kBAIbiM,EAAO+mB,OAEX,OAlBA,kCAkBA,EAlBA,GAgGM,SAAUI,IACd,MAAO,CACL7mB,SA9Ea,guFA+EbC,WAAYT,EACZU,SAAU,IACVC,MAAO,CACL7U,OAAQ,IACR8U,WAAY,IACZlT,OAAQ,IACR2S,WAAY,IACZQ,mBAAoB,IACpBC,SAAU,IACVwmB,UAAW,IACXhD,KAAM,MAIZ,IAAW/jB,UAAU,kBAAiB8mB,I,6BC/HtC,0BAEA,kBAAa,kBAAiB,sB,6BCF9B,0BAEA,kBAAa,kBAAiB,sB,m+CCC9B,aAEE,WAAYnnB,EAAQC,GAApB,WACED,EAAO+mB,KAAO,WACZ/mB,EAAO2c,mBAAqB,sBAG9B3c,EAAOsmB,YAAc,SAAO16B,GAAM,qC,qCAOhC,OAFQD,EAAqBC,EAAb,SAAE4B,EAAW5B,EAAL,OAClBkS,EAAUkC,EAAOG,WAAW8mB,aAAa,MAAO,eACjDt7B,GAAa6B,EAElB,GAAOsQ,EAAQtQ,EAAQ,CAAEg5B,aAAc72B,KAAKC,MAAMjE,GAAU66B,eAAgBl0B,MAAK,SAACxE,GAGhF,OAAOA,MALwB,CAAC,EAAD,WA+BnCkS,EAAO+mB,OAEX,OA/CA,kCA+CA,EA/CA,GA6GM,SAAUgB,IACd,MAAO,CACLznB,SA9Da,++DA+DbC,WAAYynB,EACZxnB,SAAU,IACVC,MAAO,CACL7U,OAAQ,IACR8U,WAAY,IACZlT,OAAQ,IACR2S,WAAY,IACZQ,mBAAoB,IACpBC,SAAU,MAIhB,IAAWP,UAAU,WAAY0nB,I,q+CC5H3BD,EAAc,CAClB,CACEvoB,MAAO,gBACPxL,MAAO,iBAET,CACEwL,MAAO,UACPxL,MAAO,WAET,CACEwL,MAAO,YACPxL,MAAO,cAIX,aAEE,WAAYiM,EAAQC,GAApB,WACED,EAAO+mB,KAAO,WACZ/mB,EAAO6D,sBAAwB,yBAGjC7D,EAAOE,YAAc,SAACnM,GAGhB,MAAO,IAGbiM,EAAOioB,iBAAmB,WACxBjoB,EAAOpU,OAAO2Y,cAAgB,GAC9BvE,EAAOpU,OAAOyY,QAAU,GACxBrE,EAAOpU,OAAO0Y,UAAY,GAC1BtE,EAAOpU,OAAO4Y,UAAY,IAE5BxE,EAAOkoB,eAAiB,WACtB,OAAOJ,EAAYn3B,QAAO,SAAC3C,GAAI,MAAK,OAAAA,EAAK+F,SAAqB,QAAX,EAAAiM,EAAOokB,YAAI,QAAI,QAGpEpkB,EAAOgnB,cAAgB,WACf,IAAAr7B,EAAaqU,EAAOpU,OAAZ,SAGd,GAFAD,EAAWqU,EAAOG,WAAW8mB,aAAa,SAAU,cAAzCjnB,CAAwDrU,GAC/DW,MAAMC,QAAQZ,KAAWA,EAAWA,EAAS,KAC5CA,EACH,MAAO,GAET,IACEA,EAAWgE,KAAKC,MAAMjE,GAAU+Y,WAChC,MAAOvT,IAGT,OAAOxF,GAGTqU,EAAOknB,iBAAmB,SAAOt7B,EAAQmI,GAAK,qC,sEAIhC,OAHN2Q,EAAa1E,EAAOgnB,gBACpBlpB,EAAUkC,EAAOG,WAAW8mB,aAAa,SAAU,qBACnDz5B,EAASwS,EAAOG,WAAW8mB,aAAa,SAAU,cAAzCjnB,CAAwDpU,EAAO4B,QAClE,GAAMsQ,EAAQtQ,EAAQ,CAAEkX,WAAU,EAAEmd,UAAWj2B,EAAO2Y,cAAeud,QAASl2B,EAAOyY,W,OA4BjG,OA5BMvW,EAAM,SAEJuX,EAAwCvX,EAA/B,UAAEwX,EAA6BxX,EAApB,UAAEyX,EAAkBzX,EAAL,cACrC2D,EAAO,CACX6T,UAAWA,EAAUvU,KAAI,SAAC6xB,GAExB,OADAA,EAAM72B,oBAAsB62B,EAAMld,UAC3B,CACLxX,KAAM00B,EAAMld,UACZhc,MAAOiG,KAAKoG,UAAU6sB,OAG1Bvd,UAAWA,EAAUtU,KAAI,SAAC0xB,GAExB,OADAA,EAAM12B,oBAAsB02B,EAAM,qBAAmBpe,SAC9C,CACLnW,KAAMu0B,EAAM,qBAAmBpe,SAC/B3a,MAAOiG,KAAKoG,UAAU0sB,OAG1Bld,cAAeA,EAAcxU,KAAI,SAAC8xB,GAEhC,OADAA,EAAI92B,oBAAsB82B,EAAI,qBAAmBre,WAC1C,CACLtW,KAAMwN,OAAOmnB,EAAI,qBAAmBre,YACpC9a,MAAOiG,KAAKoG,UAAU8sB,QAMpB9uB,GACN,IAAK,gBACH,SAAOtC,EAAK6T,WACd,IAAK,UACH,SAAO7T,EAAK4T,WACd,IAAK,YACH,SAAO5T,EAAK8T,e,kBAIlBvF,EAAO+mB,OAEX,OAlFA,kCAkFA,EAlFA,GA+JM,SAAUgB,IACd,MAAO,CACLznB,SA7Ea,omFA8EbC,WAAY4nB,EACZ3nB,SAAU,IACVC,MAAO,CACL7U,OAAQ,IACR8U,WAAY,IACZlT,OAAQ,IACR2S,WAAY,IACZQ,mBAAoB,IACpBC,SAAU,IACVwmB,UAAW,IACXhD,KAAM,IACNz4B,SAAU,KAEZqY,KAAM,SAACvD,EAAO2nB,EAASC,GACrB5nB,EAAM6nB,OAAO,mBAAmB,SAACC,EAAUC,G,MACnB,QAAtB,EAAA/nB,EAAMwnB,wBAAgB,cAAtBxnB,QAKR,IAAWJ,UAAU,cAAe0nB,I,4+CCnMpC,aAEE,WAAY/nB,EAAQC,GAApB,WACED,EAAO+mB,KAAO,WACZ/mB,EAAO8F,4BAA8B,8BACrC9F,EAAOkkB,YAAc,IAEvBlkB,EAAOyoB,cAAgB,SAAC10B,GACtBiM,EAAOonB,aAETpnB,EAAOioB,iBAAmB,SAAC/9B,EAAGhB,GAC5B8W,EAAOpU,OAAOya,SAAW,GACzBrG,EAAOpU,OAAO0a,QAAU,GACxBtG,EAAOpU,OAAO2a,WAAa,IAE7BvG,EAAO0oB,cAAgB,SAACj3B,EAAMsP,GAC5B,IAAI4nB,EAAel3B,EACbhG,EAAU,YAAwB,aAGxC,KADAk9B,EAAe3oB,EAAOG,WAAW8mB,aAAax7B,EAAS,cAAxCuU,CAAuD2oB,IAEpE,MAAO,GAET,IACEA,EAAeh5B,KAAKC,MAAM+4B,GAAc,qBAAmB5nB,IAC3D,MAAO5P,IAGT,OAAOw3B,GAET3oB,EAAOknB,iBAAmB,SAAOt7B,GAAM,qC,gEAK1B,OAJHD,EAAaqU,EAAOpU,OAAZ,SACVH,EAAU,YAAwB,aAClCokB,EAAa7P,EAAO0oB,cAAc/8B,EAAU,YAC5C6B,EAASwS,EAAOG,WAAW8mB,aAAax7B,EAAS,cAAxCuU,CAAuDpU,EAAO4B,QAClE,GAAMwS,EAAOG,WAAW8mB,aAAax7B,EAAS,kBAAxCuU,CAA2D,CAAExS,OAAM,EAAEqiB,WAAU,K,OAQhG,OARMjd,EAAK,SAQX,GAPeA,EAAG7B,KAAI,SAAC7H,GAErB,OADAA,EAAE6C,oBAAsB7C,EAAE,qBAAmBmd,UACtC,CACLnY,KAAMhF,EAAE,qBAAmBmd,UAC3B3c,MAAOiG,KAAKoG,UAAU7M,gBAK5B8W,EAAO4oB,mBAAqB,SAAOh9B,GAAM,qC,sEAMnB,OALd,EAAyBoU,EAAOpU,OAA9BD,EAAQ,WAAE0a,EAAQ,WACpB5a,EAAU,YAAwB,aAClCokB,EAAa7P,EAAO0oB,cAAc/8B,EAAU,YAC5C23B,EAAatjB,EAAO0oB,cAAcriB,EAAU,YAC5C7Y,EAASwS,EAAOG,WAAW8mB,aAAax7B,EAAS,cAAxCuU,CAAuDpU,EAAO4B,QACzD,GAAMwS,EAAOG,WAAW8mB,aAC1Cx7B,EACA,gBAFwBuU,CAGxB,CAAExS,OAAM,EAAEqiB,WAAU,EAAEyT,WAAU,K,OAYlC,OAfMY,EAAc,SAIpBlkB,EAAOkkB,YAAcA,EAWrB,GAVY,gBAAMA,GACfnzB,KAAI,SAAC/C,GAEJ,OADAA,EAAKjC,oBAAsB,cAAIiC,EAAM,wBAC9B,CACLE,KAAM,cAAIF,EAAM,wBAChBtE,MAAOiG,KAAKoG,UAAU/H,OAGzBi0B,OAAO,QACPv4B,iBAGLsW,EAAO6oB,sBAAwB,SAAOj9B,GAAM,qC,qCAClC0a,EAAYtG,EAAOpU,OAAZ,QACXk9B,EAAwB,GAC5B,IACQ,EAAgBn5B,KAAKC,MAAM0W,GACjCwiB,EAAiB,gBAAM9oB,EAAOkkB,aAC3BvzB,QAAO,SAAC3C,GAAS,qBAAI,EAAe,0BAA4B,cAAIA,EAAnD,2BACjB+C,KAAI,SAAC/C,GAEJ,OADAA,EAAKjC,oBAAsB,cAAIiC,EAAM,QAC9B,CACLE,KAAM,UAAG,cAAIF,EAAM,SACnBtE,MAAOiG,KAAKoG,UAAU/H,OAGzBtE,QACH,MAAOyH,IACT,SAAO23B,UAGT9oB,EAAO+mB,OAEX,OAzFA,kCAyFA,EAzFA,GA2FMzmB,EAAW,00FA6EsD,YAAS,0fAUV,YAAS,ubAYzE,SAAU6mB,IACd,MAAO,CACL7mB,SAAUA,EACVC,WAAYT,EACZU,SAAU,IACVC,MAAO,CACL7U,OAAQ,IACRyB,UAAW,IACXqT,WAAY,IACZlT,OAAQ,IACR2S,WAAY,IACZQ,mBAAoB,IACpBC,SAAU,IACVwmB,UAAW,IACXhD,KAAM,KAERpgB,KAAM,SAACvD,EAAO2nB,EAASC,GACrB5nB,EAAM6nB,OAAO,mBAAmB,SAACC,EAAUC,G,MACnB,QAAtB,EAAA/nB,EAAMwnB,wBAAgB,cAAtBxnB,EAAyB8nB,EAAUC,QAK3C,IAAWnoB,UAAU,WAAY8mB,I,6BC1NjC,oHAGA,aAEE,WAAYnnB,EAAQC,GAClBD,EAAO+mB,KAAO,WACZ/mB,EAAOqJ,0BAA4B,6BAGrCrJ,EAAO+mB,OAEX,OATA,kCASA,EATA,GAyFM,SAAUI,IACd,MAAO,CACL7mB,SAhFa,w6EAiFbC,WAAYT,EACZU,SAAU,IACVC,MAAO,CACL7U,OAAQ,IACR8U,WAAY,IACZlT,OAAQ,IACR2S,WAAY,IACZQ,mBAAoB,IACpBC,SAAU,IACVwmB,UAAW,IACXhD,KAAM,MAIZ,IAAW/jB,UAAU,kBAAiB8mB,I,6BC7GtC,0BAGA,kBAAY,WAAY,CACtBlhB,gBAAiB,0BACjBD,eAAgB,mDAChB3Y,UAAW,a,w+CCHPy6B,EAAc,CAClB,CACEvoB,MAAO,mBACPxL,MAAO,mBAIX,aAEE,WAAYiM,EAAQC,GAApB,WACED,EAAO+mB,KAAO,WACZ/mB,EAAOkO,wBAA0B,2BAGnClO,EAAOE,YAAc,SAACnM,GAGhB,MAAO,IAKbiM,EAAO+oB,SAAW,GAElB/oB,EAAOkoB,eAAiB,WACtB,OAAOJ,EAAYn3B,QAAO,SAAC3C,GAAI,MAAK,OAAAA,EAAK+F,SAAqB,QAAX,EAAAiM,EAAOokB,YAAI,QAAI,QAGpEpkB,EAAOgpB,aAAe,WACd,IAAAr9B,EAAaqU,EAAOpU,OAAZ,SAEd,KADAD,EAAWqU,EAAOG,WAAW8mB,aAAa,WAAY,cAA3CjnB,CAA0DrU,IAEnE,MAAO,GAET,IACEA,EAAWgE,KAAKC,MAAMjE,GAAU8Z,UAChC,MAAOtU,IAGT,OAAOxF,GAGTqU,EAAOipB,mBAAqB,SAACl1B,GAC3BiM,EAAOonB,aAGTpnB,EAAOknB,iBAAmB,SAAOt7B,EAAQmI,GAAK,qC,oEAC9B,mBAAVA,EAAA,OACI0R,EAAYzF,EAAOgpB,gBACrBv3B,EAAOuO,EAAO+oB,SAAStjB,IAEvB,OACIjY,EAASwS,EAAOG,WAAW8mB,aAAa,WAAY,cAA3CjnB,CAA0DpU,EAAO4B,QAElE,GADEwS,EAAOG,WAAW8mB,aAAa,WAAY,uBACvCnpB,CAAQtQ,EAAQ,CAAEiY,UAAS,O,OAAzCyjB,EAAQ,SACdz3B,EAAOy3B,EAAMn4B,KAAI,SAAC/C,GAEhB,OADAA,EAAKjC,oBAAsBiC,EAAKu2B,eACzB,CAAEr2B,KAAMF,EAAKu2B,eAAgB76B,MAAOiG,KAAKoG,UAAU/H,O,iBAM9D,OADAgS,EAAO+oB,SAAStjB,GAAahU,EAC7B,GAAOA,G,OAET,SAAO,YAGTuO,EAAO+mB,OAEX,OA/DA,kCA+DA,EA/DA,GA4IM,SAAUgB,IACd,MAAO,CACLznB,SA7Ea,kmFA8EbC,WAAY4oB,EACZ3oB,SAAU,IACVC,MAAO,CACL7U,OAAQ,IACR8U,WAAY,IACZlT,OAAQ,IACR2S,WAAY,IACZQ,mBAAoB,IACpBC,SAAU,IACVwmB,UAAW,IACXhD,KAAM,MAIZ,IAAW/jB,UAAU,gBAAiB0nB,I,6BCvKtC,oIAEA,SAASljB,EAAuBnU,QAAA,IAAAA,MAAA,IAC9B,IAAMsC,EAAc,GAoBpB,OAnBK,IAAEvC,QAAQC,KACbsC,EAAOkB,MAAQ,IAAE5K,IAAIoH,EAAS,QAAS,KAAO,GAC9CsC,EAAOiB,OAAS,IAAE3K,IAAIoH,EAAS,SAAU,IAAM,EAC/CA,EAAU,IAAEoO,KAAKpO,EAAS,CAAC,SAAU,UACrC,IAAE1E,QAAQ0E,GAAS,SAAC1C,EAAWhE,GACzB,IAAEuC,QAAQyB,IACZA,EAAO,IAAEmH,QAAQnH,IACRoC,OAAS,IAChB4C,EAAOhJ,GAAO,IAAEoL,KAAKpH,IAEd,IAAEiR,SAASjR,IAChB,IAAEiC,SAAS,IAAE3G,IAAI0E,EAAM,aAASiO,KAAgB,IAAExL,QAAQ,IAAEnH,IAAI0E,EAAM,aAASiO,MACjFjJ,EAAOhJ,GAAO,IAAEV,IAAI0E,EAAM,WAEnB,IAAEiC,SAASjC,IAAU,IAAEyC,QAAQzC,KACxCgF,EAAOhJ,GAAOgE,OAIbgF,EAIT,IAAMjG,EAAoB,CAAC,cAIZ,WACbS,OAAQ,GACRsD,WAAY,GACZsT,WAAY,GACZnS,YAAQgK,EACRnN,gBAAiB,KACjBnD,SAAU,GACVgB,cAAe,aACf+D,QAAS,K,6BCvCX,0BAEA,kBAAa,kBAAiB,sB,6BCF9B,yHAGA,aAEE,WAAYsP,EAAQC,GAClBD,EAAO+mB,KAAO,WACZ/mB,EAAOmd,0BAA4B,6BAGrCnd,EAAOqnB,UAAY,SAACC,EAAUC,IACY,IAApCvnB,EAAOpU,OAAO8E,QAAQ42B,KACxBtnB,EAAOpU,OAAO8E,QAAQ62B,IAAY,GAEpCvnB,EAAOY,YAGTZ,EAAOE,YAAc,SAACnM,GACpB,OAAQA,GACN,IAAK,OACH,OAAOiM,EAAOmhB,WAChB,QACE,MAAO,KAIbnhB,EAAOmhB,SAAW,WAChB,OAAKnhB,EAAOxS,OAGLwS,EAAOG,WAAWghB,SAAS,MAAOnhB,EAAOxS,QAFvC,IAKXwS,EAAO+mB,OAEX,OAhCA,kCAgCA,EAhCA,GAwIM,SAAUqC,IACd,MAAO,CACL9oB,SAxGa,6tHAyGbC,WAAY8oB,EACZ7oB,SAAU,IACVC,MAAO,CACL7U,OAAQ,IACR8U,WAAY,IACZlT,OAAQ,IACR2S,WAAY,IACZQ,mBAAoB,IACpBC,SAAU,MAKhB,IAAWP,UAAU,WAAY+oB,I,6BC3JjC,0BAEA,kBAAa,kBAAiB,sB,6BCF9B,0BAEA,kBAAa,kBAAiB,sB,q+CCExBtB,EAAc,CAClB,CACEvoB,MAAO,SACPxL,MAAO,SACP3G,OAAQ,gCAEV,CACEmS,MAAO,UACPxL,MAAO,UACP3G,OAAQ,uBAGNk8B,EAAqB,CACzBpE,6BAA8B,SAC9BF,mBAAoB,mBAEtB,aAEE,WAAYhlB,EAAQC,GAApB,WACED,EAAO+mB,KAAO,WACZ/mB,EAAO+J,2BAA6B,6BACpC/J,EAAO8nB,YAAcA,EACrB9nB,EAAO3S,UAAY,aAGrB2S,EAAOgnB,cAAgB,WACf,IAAAr7B,EAAaqU,EAAOpU,OAAZ,SACRH,EAAU,YAAwBuU,EAAO3S,WAE/C,KADA1B,EAAWqU,EAAOG,WAAW8mB,aAAax7B,EAAS,cAAxCuU,CAAuDrU,IAEhE,MAAO,GAET,IACEA,EAAWgE,KAAKC,MAAMjE,GAAU,qBAAmBA,UACnD,MAAOwF,IAGT,OAAOxF,GAETqU,EAAOkoB,eAAiB,WACtB,OAAOJ,EAAYn3B,QAAO,SAAC3C,GAAI,QAAK,OAAAA,EAAK+F,SAAqB,QAAX,EAAAiM,EAAOokB,YAAI,QAAI,KAAOp2B,EAAKuR,SAAqB,QAAX,EAAAS,EAAOokB,YAAI,QAAI,QAEzGpkB,EAAOknB,iBAAmB,SAAOt7B,EAAQwB,GAAM,qC,gEAQlC,OAPL3B,EAAU,YAAwBuU,EAAO3S,WACzCG,EAASwS,EAAOG,WAAW8mB,aAAax7B,EAAS,cAAxCuU,CAAuDpU,EAAO4B,QACvEqiB,EAAa7P,EAAOgnB,gBACpBz5B,EAAe,CACnBmX,WAAYmL,EACZ3b,MAAO,KAEE,GAAM8L,EAAOG,WAAW8mB,aAAax7B,EAAS,kBAAxCuU,CAA2D,CAAExS,OAAM,EAAEJ,OAAM,EAAEG,QAAO,K,OASrG,OATMqF,EAAK,SASX,GAPeA,EAAG7B,KAAI,SAAC7H,GAErB,OADAA,EAAE6C,oBAAsB7C,EAAE,qBAAmBogC,EAAmBl8B,KACzD,CACLc,KAAMhF,EAAE,qBAAmBogC,EAAmBl8B,KAC9C1D,MAAOiG,KAAKoG,UAAU7M,gBAM5B8W,EAAO+mB,OAEX,OAhDA,kCAgDA,EAhDA,GA8HM,SAAUI,IACd,MAAO,CACL7mB,SA9Ea,quFA+EbC,WAAYT,EACZU,SAAU,IACVC,MAAO,CACL7U,OAAQ,IACR8U,WAAY,IACZlT,OAAQ,IACR2S,WAAY,IACZQ,mBAAoB,IACpBC,SAAU,IACVwmB,UAAW,IACXhD,KAAM,MAIZ,IAAW/jB,UAAU,kBAAiB8mB,I,6BCnKtC,0BAEA,kBAAa,kBAAiB,sB,6BCF9B,0BAEA,kBAAa,kBAAiB,sB,6BCF9B,0BAEA,kBAAa,kBAAiB,sB,6BCF9B,2HAIMW,EAAc,CAMlB,CACEvoB,MAAO,SACPxL,MAAO,WAGX,aAEE,WAAYiM,EAAQC,GAClBD,EAAO+mB,KAAO,WACZ/mB,EAAOgN,sCAAwC,wCAC/ChN,EAAO8nB,YAAcA,EACrB9nB,EAAO3S,UAAY,aAiBrB2S,EAAOkoB,eAAiB,WACtB,OAAOJ,EAAYn3B,QAAO,SAAC3C,GAAI,QAAK,OAAAA,EAAK+F,SAAqB,QAAX,EAAAiM,EAAOokB,YAAI,QAAI,KAAOp2B,EAAKuR,SAAqB,QAAX,EAAAS,EAAOokB,YAAI,QAAI,QAEzGpkB,EAAOknB,iBAAmB,SAACt7B,EAAQwB,GAC3B,IAAAzB,EAAaC,EAAL,SACRH,EAAU,YAAwBuU,EAAO3S,WAC/C1B,EAAWqU,EAAOG,WAAW8mB,aAAax7B,EAAS,cAAxCuU,CAAuDrU,GAClE,IAGE,OAFAA,EAAWgE,KAAKC,MAAMjE,IACM,UACXoF,KAAI,SAAC7H,GAEpB,OADAA,EAAE6C,oBAAsB7C,EAAE,qBAAmB4jB,QACtC,CACL5e,KAAMhF,EAAE,qBAAmB4jB,QAC3BpjB,MAAOiG,KAAKoG,UAAU7M,OAG1B,MAAOiI,GAEP,IAAM5D,EAAe,CACnBmX,WAAY/Y,GASd,OAPWqU,EAAOG,WAAW8mB,aAAax7B,EAAS,cAAxCuU,CAAuD,CAAEzS,QAAO,IACzDwD,KAAI,SAAC7H,GACrB,MAAO,CACLgF,KAAMhF,EAAE,qBAAmB4jB,QAC3BpjB,MAAOiG,KAAKoG,UAAU7M,SAO9B8W,EAAO+mB,OAEX,OA1DA,kCA0DA,EA1DA,GAwIM,SAAUI,IACd,MAAO,CACL7mB,SA9Ea,kuFA+EbC,WAAYT,EACZU,SAAU,IACVC,MAAO,CACL7U,OAAQ,IACR8U,WAAY,IACZlT,OAAQ,IACR2S,WAAY,IACZQ,mBAAoB,IACpBC,SAAU,IACVwmB,UAAW,IACXhD,KAAM,MAIZ,IAAW/jB,UAAU,kBAAiB8mB,I,6BCxKtC,0BAEA,kBAAa,kBAAiB,sB,q+CCExBW,EAAc,CAClB,CACEvoB,MAAO,UACPxL,MAAO,WAET,CACEwL,MAAO,YACPxL,MAAO,SAGLw1B,EAAa,CACjBrgB,QAAS,eACT5Y,KAAM,oBAER,aAEE,WAAY0P,EAAQC,GAApB,WACED,EAAO+mB,KAAO,WACZ/mB,EAAOqJ,0BAA4B,4BACnCrJ,EAAO3S,UAAY,aAGrB2S,EAAOkoB,eAAiB,WACtB,OAAOJ,EAAYn3B,QAAO,SAAC3C,GAAI,MAAK,OAAAA,EAAK+F,SAAqB,QAAX,EAAAiM,EAAOokB,YAAI,QAAI,QAGpEpkB,EAAOgnB,cAAgB,WACf,IAAAr7B,EAAaqU,EAAOpU,OAAZ,SACRH,EAAU,YAAwBuU,EAAO3S,WAG/C,KADA1B,EAAWqU,EAAOG,WAAW8mB,aAAax7B,EAAS,cAAxCuU,CAAuDrU,IAEhE,MAAO,GAET,IACEA,EAAWgE,KAAKC,MAAMjE,GAAU,qBAAmBA,UACnD,MAAOwF,IAGT,OAAOxF,GAETqU,EAAOknB,iBAAmB,SAAOt7B,EAAQmI,GAAK,qC,8DAKnC,OAJHtI,EAAU,YAAwBuU,EAAO3S,WACzCwiB,EAAa7P,EAAOgnB,gBACpBx5B,EAASwS,EAAOG,WAAW8mB,aAAax7B,EAAS,cAAxCuU,CAAuDpU,EAAO4B,QAEpE,GAAMwS,EAAOG,WAAW8mB,aAAax7B,EAAS89B,EAAWx1B,GAAnDiM,CAA2D,CAAExS,OAAM,EAAEqiB,WAAU,K,OAQ9F,OARIjd,EAAK,SAQT,GAPeA,EAAG7B,KAAI,SAAC7H,GAErB,OADAA,EAAE6C,oBAAsB7C,EAAE,qBAAmB6K,IACtC,CACL7F,KAAMhF,EAAE,qBAAmB6K,IAC3BrK,MAAOiG,KAAKoG,UAAU7M,gBAM5B8W,EAAO+mB,OAEX,OA7CA,kCA6CA,EA7CA,GA2HM,SAAUI,IACd,MAAO,CACL7mB,SA9Ea,0mFA+EbC,WAAYT,EACZU,SAAU,IACVC,MAAO,CACL7U,OAAQ,IACR8U,WAAY,IACZlT,OAAQ,IACR2S,WAAY,IACZQ,mBAAoB,IACpBC,SAAU,IACVwmB,UAAW,IACXhD,KAAM,MAIZ,IAAW/jB,UAAU,kBAAiB8mB,I,6BC9JtC,uHAGA,aAEE,WAAYnnB,EAAQC,GAClBD,EAAO+mB,KAAO,WAEZ/mB,EAAOsf,mBAAqB,sBAG9Btf,EAAOqnB,UAAY,SAACC,EAAUC,IACY,IAApCvnB,EAAOpU,OAAO8E,QAAQ42B,KACxBtnB,EAAOpU,OAAO8E,QAAQ62B,IAAY,GAEpCvnB,EAAOY,YAGTZ,EAAOE,YAAc,SAACnM,GACpB,OAAQA,GACN,IAAK,OACH,OAAOiM,EAAOmhB,WAChB,QACE,MAAO,KAIbnhB,EAAOmhB,SAAW,WAChB,OAAKnhB,EAAOxS,OAGLwS,EAAOG,WAAWghB,SAAS,MAAOnhB,EAAOxS,QAFvC,IAKXwS,EAAO+mB,OAEX,OAjCA,kCAiCA,EAjCA,GA4IM,SAAUyC,IACd,MAAO,CACLlpB,SA3Ga,8uHA4GbC,WAAYkpB,EACZjpB,SAAU,IACVC,MAAO,CACL7U,OAAQ,IACR8U,WAAY,IACZlT,OAAQ,IACR2S,WAAY,IACZQ,mBAAoB,IACpBC,SAAU,MAKhB,IAAWP,UAAU,UAAWmpB,I,6BC/JhC,uIAGA,aAEE,WAAYxpB,EAAQC,GAClBD,EAAO+mB,KAAO,WACZ/mB,EAAOqc,iCAAmC,oCAG5Crc,EAAOqnB,UAAY,SAACC,EAAUC,IACY,IAApCvnB,EAAOpU,OAAO8E,QAAQ42B,KACxBtnB,EAAOpU,OAAO8E,QAAQ62B,IAAY,GAEpCvnB,EAAOY,YAGTZ,EAAOE,YAAc,SAACnM,GACpB,OAAQA,GACN,IAAK,OACH,OAAOiM,EAAOmhB,WAChB,QACE,MAAO,KAIbnhB,EAAOmhB,SAAW,WAChB,OAAKnhB,EAAOxS,OAGLwS,EAAOG,WAAWghB,SAAS,aAAcnhB,EAAOxS,QAF9C,IAKXwS,EAAO+mB,OAEX,OAhCA,kCAgCA,EAhCA,GAuIM,SAAU2C,IACd,MAAO,CACLppB,SAvGa,m6HAwGbC,WAAYopB,EACZnpB,SAAU,IACVC,MAAO,CACL7U,OAAQ,IACR8U,WAAY,IACZlT,OAAQ,IACR2S,WAAY,IACZQ,mBAAoB,IACpBC,SAAU,MAKhB,IAAWP,UAAU,kBAAmBqpB,I,6BC1JxC,iIAGA,aAEE,WAAY1pB,EAAQC,GAClBD,EAAO+mB,KAAO,WACZ/mB,EAAO0f,wBAA0B,2BAGnC1f,EAAOqnB,UAAY,SAACC,EAAUC,IACY,IAApCvnB,EAAOpU,OAAO8E,QAAQ42B,KACxBtnB,EAAOpU,OAAO8E,QAAQ62B,IAAY,GAEpCvnB,EAAOY,YAGTZ,EAAOE,YAAc,SAACnM,GAGhB,MAAO,IAIbiM,EAAO+mB,OAEX,OAvBA,kCAuBA,EAvBA,GA6FM,SAAU6C,IACd,MAAO,CACLtpB,SAtEa,2xEAuEbC,WAAYspB,EACZrpB,SAAU,IACVC,MAAO,CACL7U,OAAQ,IACR8U,WAAY,IACZlT,OAAQ,IACR2S,WAAY,IACZS,SAAU,MAKhB,IAAWP,UAAU,eAAgBupB,I,i+CC5G/B9B,EAAc,CAClB,CACEvoB,MAAO,SACPxL,MAAO,WAIX,aAEE,WAAYiM,EAAQC,GAApB,WACED,EAAO+mB,KAAO,WACZ/mB,EAAOkO,wBAA0B,2BAGnClO,EAAOE,YAAc,SAACnM,GAGhB,MAAO,IAKbiM,EAAO+oB,SAAW,GAElB/oB,EAAOkoB,eAAiB,W,MACtB,OAAO/+B,OAAOkI,KAAgB,QAAX,EAAA2O,EAAOokB,YAAI,QAAI,IAAI0F,MAAK,SAAC97B,GAAiB,OAAAA,EAAKsgB,WAAL,YAA4BwZ,EAAc,IAIzG9nB,EAAOgnB,cAAgB,WACf,IAAAr7B,EAAaqU,EAAOpU,OAAZ,SAEd,KADAD,EAAWqU,EAAOG,WAAW8mB,aAAa,SAAU,cAAzCjnB,CAAwDrU,IAEjE,MAAO,GAET,IACEA,EAAWgE,KAAKC,MAAMjE,GAAUyqB,UAChC,MAAOjlB,IAGT,OAAOxF,GAGTqU,EAAOipB,mBAAqB,SAACl1B,GAC3BiM,EAAOonB,aAGTpnB,EAAOknB,iBAAmB,SAAOt7B,EAAQmI,GAAK,qC,oEAC9B,WAAVA,EAAA,OACI2Q,EAAa1E,EAAOgnB,iBACtBv1B,EAAOuO,EAAO+oB,SAASrkB,IAEvB,OACIlX,EAASwS,EAAOG,WAAW8mB,aAAa,SAAU,cAAzCjnB,CAAwDpU,EAAO4B,QAEhE,GADEwS,EAAOG,WAAW8mB,aAAa,SAAU,gBACrCnpB,CAAQtQ,EAAQ,CAAEkX,WAAU,EAAEihB,SAAU,W,OAAtDoE,EAAQ,SACdt4B,EAAOs4B,EAAMh5B,KAAI,SAAC/C,GAEhB,OADAA,EAAKjC,oBAAsBiC,EAAK,qBAAmB0gB,MAC5C,CACLxgB,KAAMF,EAAK,qBAAmB0gB,MAC9BhlB,MAAOiG,KAAKoG,UAAU/H,O,iBAO5B,OADAgS,EAAO+oB,SAASrkB,GAAcjT,EAC9B,GAAOA,G,OAET,SAAO,YAGTuO,EAAO+mB,OAEX,OAnEA,kCAmEA,EAnEA,GAgJM,SAAUiD,IACd,MAAO,CACL1pB,SA7Ea,mmFA8EbC,WAAY0pB,EACZzpB,SAAU,IACVC,MAAO,CACL7U,OAAQ,IACR8U,WAAY,IACZlT,OAAQ,IACR2S,WAAY,IACZQ,mBAAoB,IACpBC,SAAU,IACVwmB,UAAW,IACXhD,KAAM,MAIZ,IAAW/jB,UAAU,UAAW2pB,I,6BC3KhC,uIAGA,aAEE,WAAYhqB,EAAQC,GAClBD,EAAO+mB,KAAO,WACZ/mB,EAAOigB,iCAAmC,oCAG5CjgB,EAAOqnB,UAAY,SAACC,EAAUC,IACY,IAApCvnB,EAAOpU,OAAO8E,QAAQ42B,KACxBtnB,EAAOpU,OAAO8E,QAAQ62B,IAAY,GAEpCvnB,EAAOY,YAGTZ,EAAOE,YAAc,SAACnM,GAGhB,MAAO,IAIbiM,EAAO+mB,OAEX,OAvBA,kCAuBA,EAvBA,GA4HM,SAAUmD,IACd,MAAO,CACL5pB,SArGa,6mHAsGbC,WAAY4pB,EACZ3pB,SAAU,IACVC,MAAO,CACL7U,OAAQ,IACR8U,WAAY,IACZlT,OAAQ,IACR2S,WAAY,IACZQ,mBAAoB,IACpBC,SAAU,MAKhB,IAAWP,UAAU,kBAAmB6pB,I,6BC/IxC,6HAGA,aAEE,WAAYlqB,EAAQC,GAClBD,EAAO+mB,KAAO,WACZ/mB,EAAOsgB,4BAA8B,+BA0BvCtgB,EAAO+mB,OAEX,OAhCA,kCAgCA,EAhCA,GAkGM,SAAUqD,IACd,MAAO,CACL9pB,SAlEa,siEAmEbC,WAAY8pB,EACZ7pB,SAAU,IACVC,MAAO,CACL7U,OAAQ,IACR8U,WAAY,IACZlT,OAAQ,IACR2S,WAAY,IACZQ,mBAAoB,IACpBC,SAAU,MAKhB,IAAWP,UAAU,aAAc+pB,I,6BCrHnC,yHAGA,aAEE,WAAYpqB,EAAQC,GAClBD,EAAO+mB,KAAO,WACZ/mB,EAAO4d,oBAAsB,uBAG/B5d,EAAOqnB,UAAY,SAACC,EAAUC,IACY,IAApCvnB,EAAOpU,OAAO8E,QAAQ42B,KACxBtnB,EAAOpU,OAAO8E,QAAQ62B,IAAY,GAEpCvnB,EAAOY,YAGTZ,EAAOE,YAAc,SAACnM,GACpB,OAAQA,GACN,IAAK,QACH,OAAOiM,EAAOimB,YAChB,QACE,MAAO,KAIbjmB,EAAOimB,UAAY,WACjB,OAAKjmB,EAAOxS,OAGLwS,EAAOG,WAAW8lB,UAAU,MAAOjmB,EAAOxS,QAFxC,IAKXwS,EAAO+mB,OAEX,OAhCA,kCAgCA,EAhCA,GAsGM,SAAUuD,IACd,MAAO,CACLhqB,SAtEa,sxEAuEbC,WAAYgqB,EACZ/pB,SAAU,IACVC,MAAO,CACL7U,OAAQ,IACR8U,WAAY,IACZlT,OAAQ,IACR2S,WAAY,IACZS,SAAU,MAKhB,IAAWP,UAAU,WAAYiqB,I,6BCxHjC,0BAEA,kBAAa,kBAAiB,sB,6BCF9B,0BAEA,kBAAa,kBAAiB,sB,6BCF9B,6HAGA,aAEE,WAAYtqB,EAAQC,GAClBD,EAAO+mB,KAAO,WACZ/mB,EAAO8d,sBAAwB,yBAGjC9d,EAAOqnB,UAAY,SAACC,EAAUC,IACY,IAApCvnB,EAAOpU,OAAO8E,QAAQ42B,KACxBtnB,EAAOpU,OAAO8E,QAAQ62B,IAAY,GAEpCvnB,EAAOY,YAGTZ,EAAOE,YAAc,SAACnM,GAGhB,MAAO,IAIbiM,EAAO+mB,OAEX,OAvBA,kCAuBA,EAvBA,GA6FM,SAAUyD,IACd,MAAO,CACLlqB,SAtEa,yxEAuEbC,WAAYkqB,EACZjqB,SAAU,IACVC,MAAO,CACL7U,OAAQ,IACR8U,WAAY,IACZlT,OAAQ,IACR2S,WAAY,IACZS,SAAU,MAKhB,IAAWP,UAAU,aAAcmqB,I,2/CC1GnC,aAEE,WAAYxqB,EAAQC,GAApB,WACED,EAAO+mB,KAAO,WACZ/mB,EAAO6K,yBAA2B,4BAGpC7K,EAAO0qB,iBAAmB,WACxB1qB,EAAOpU,OAAO6f,QAAU,GACxBzL,EAAOpU,OAAO8f,QAAU,IAG1B1L,EAAOqnB,UAAY,SAACC,EAAUC,IACY,IAApCvnB,EAAOpU,OAAO8E,QAAQ42B,KACxBtnB,EAAOpU,OAAO8E,QAAQ62B,IAAY,GAEpCvnB,EAAOY,YAGTZ,EAAOE,YAAc,SAACnM,GAGhB,MAAO,IAIbiM,EAAO0oB,cAAgB,SAACj3B,EAAMsP,GAC5B,IAAI4nB,EAAel3B,EACbhG,EAAU,YAAwB,aAGxC,KADAk9B,EAAe3oB,EAAOG,WAAW8mB,aAAax7B,EAAS,cAAxCuU,CAAuD2oB,IAEpE,MAAO,GAET,IACEA,EAAeh5B,KAAKC,MAAM+4B,GAAc,qBAAmB5nB,IAC3D,MAAO5P,IACT,OAAOw3B,GAGT3oB,EAAOknB,iBAAmB,SAAOt7B,EAAQw6B,GAAQ,qC,kEAKpC,OAJHz6B,EAAaqU,EAAOpU,OAAZ,SACVH,EAAU,YAAwB,aAClCokB,EAAa7P,EAAO0oB,cAAc/8B,EAAU,YAC5C6B,EAASwS,EAAOG,WAAW8mB,aAAax7B,EAAS,cAAxCuU,CAAuDpU,EAAO4B,QAClE,GAAMwS,EAAOG,WAAW8mB,aAAax7B,EAAS,sBAAxCuU,CAA+D,CAAExS,OAAM,EAAEqiB,WAAU,K,OAGpG,OAHMjd,EAAK,SAGX,IAA0B,KADpByzB,EAAgB,WAASj6B,QAAQg6B,IACT,GAAK,cAAIxzB,EAAGyzB,IAAgB,SAACr4B,GAAS,MAAC,CAAEE,KAAMF,EAAK6b,OAAQngB,MAAOsE,EAA7B,oBAGtEgS,EAAO+mB,OAEX,OArDA,kCAqDA,EArDA,GAoJM,SAAU4D,IACd,MAAO,CACLrqB,SA/Fa,oyGAgGbC,WAAYqqB,EACZpqB,SAAU,IACVC,MAAO,CACL7U,OAAQ,IACR8U,WAAY,IACZlT,OAAQ,IACR2S,WAAY,IACZS,SAAU,IACVwmB,UAAW,IACXhD,KAAM,KAERpgB,KAAM,SAACvD,EAAO2nB,EAASC,GACrB5nB,EAAM6nB,OAAO,mBAAmB,W,MACR,QAAtB,EAAA7nB,EAAMiqB,wBAAgB,cAAtBjqB,MAEFA,EAAM6nB,OAAO,qBAAqB,W,MACV,QAAtB,EAAA7nB,EAAMiqB,wBAAgB,cAAtBjqB,QAMR,IAAWJ,UAAU,gBAAiBsqB,I,m+CC/KtC,aAEE,WAAY3qB,EAAQC,GAApB,WACED,EAAO+mB,KAAO,WACZ/mB,EAAO8P,mBAAqB,sBAG9B9P,EAAOgnB,cAAgB,WACf,IAAAr7B,EAAaqU,EAAOpU,OAAZ,SAEd,KADAD,EAAWqU,EAAOG,WAAW8mB,aAAa,MAAO,cAAtCjnB,CAAqDrU,IAE9D,MAAO,GAET,IACEA,EAAWgE,KAAKC,MAAMjE,GAAU66B,aAChC,MAAOr1B,IAGT,OAAOxF,GAGTqU,EAAOsmB,YAAc,SAAO16B,GAAM,qC,mCAQhC,OAFM46B,EAAexmB,EAAOgnB,gBACtBx5B,EAASwS,EAAOG,WAAW8mB,aAAa,MAAO,cAAtCjnB,CAAqDpU,EAAO4B,QACtEg5B,GAAiBh5B,EAItB,GAFgBwS,EAAOG,WAAW8mB,aAAa,MAAO,cAE/CnpB,CAAQtQ,EAAQ,CAAEg5B,aAAY,IAAIl0B,MAAK,SAACxE,GAS7C,OAPeA,EAAIiD,KAAI,SAAC7H,GAEtB,OADAA,EAAE6C,oBAAsB7C,EAAE,qBAAmB2M,SACtC,CACL3H,KAAMhF,EAAE,qBAAmB2M,SAC3BnM,MAAOiG,KAAKoG,UAAU7M,WAVS,CAAC,EAAD,WAuCvC8W,EAAO+mB,OAEX,OAtEA,kCAsEA,EAtEA,GAkJM,SAAUgB,IACd,MAAO,CACLznB,SA5Ea,g9EA6EbC,WAAYynB,EACZxnB,SAAU,IACVC,MAAO,CACL7U,OAAQ,IACR8U,WAAY,IACZlT,OAAQ,IACR2S,WAAY,IACZQ,mBAAoB,IACpBC,SAAU,IACVwmB,UAAW,MAIjB,IAAW/mB,UAAU,WAAY0nB,I,6BCrKjC,0BAEA,kBAAa,kBAAiB,sB,6BCF9B,0BAEA,kBAAa,kBAAiB,sB,q+CCExBD,EAAc,CAClB,CACEvoB,MAAO,gBACPxL,MAAO,gBACP3G,OAAQ,wBAEV,CACEmS,MAAO,YACPxL,MAAO,YACP3G,OAAQ,mBAINk8B,EAAqB,CACzB5C,eAAgB,YAChBC,qBAAsB,iBAExB,aAEE,WAAY3mB,EAAQC,GAApB,WACED,EAAO+mB,KAAO,WACZ/mB,EAAOqI,2BAA6B,6BACpCrI,EAAO8nB,YAAcA,EACrB9nB,EAAO3S,UAAY,aAGrB2S,EAAOgnB,cAAgB,WACf,IAAAr7B,EAAaqU,EAAOpU,OAAZ,SACRH,EAAU,YAAwBuU,EAAO3S,WAE/C,KADA1B,EAAWqU,EAAOG,WAAW8mB,aAAax7B,EAAS,cAAxCuU,CAAuDrU,IAEhE,MAAO,GAET,IACEA,EAAWgE,KAAKC,MAAMjE,GAAU,qBAAmBA,UACnD,MAAOwF,IAGT,OAAOxF,GAETqU,EAAOkoB,eAAiB,WACtB,OAAOJ,EAAYn3B,QAAO,SAAC3C,GAAI,QAAK,OAAAA,EAAK+F,SAAqB,QAAX,EAAAiM,EAAOokB,YAAI,QAAI,KAAOp2B,EAAKuR,SAAqB,QAAX,EAAAS,EAAOokB,YAAI,QAAI,QAEzGpkB,EAAOknB,iBAAmB,SAAOt7B,EAAQwB,GAAM,qC,gEAO7C,GANM3B,EAAU,YAAwBuU,EAAO3S,WACzCG,EAASwS,EAAOG,WAAW8mB,aAAax7B,EAAS,cAAxCuU,CAAuDpU,EAAO4B,QACvED,EAAe,CACnB2G,MAAO,IACPkiB,UAAWpW,EAAOgnB,iBAEL,mBAAX55B,EAA6B,CAC3By9B,EAAO7qB,EAAOpU,OAAOuc,cACzB,IAEE0iB,GADAA,EAAOl7B,KAAKC,MAAMi7B,IACN,qBAAmB1iB,eAC/B,MAAOhN,IACT5N,EAAQob,cAAgBkiB,EAGf,SAAM7qB,EAAOG,WAAW8mB,aAAax7B,EAAS,kBAAxCuU,CAA2D,CAAExS,OAAM,EAAEJ,OAAM,EAAEG,QAAO,K,OASrG,OATMqF,EAAK,SASX,GAReA,EAAG7B,KAAI,SAAC7H,GAErB,OADAA,EAAE6C,oBAAsB7C,EAAE,qBAAmBogC,EAAmBl8B,KACzD,CACLc,KAAMhF,EAAE,qBAAmBogC,EAAmBl8B,KAC9CmS,MAAOrW,EAAE,qBAAmBogC,EAAmBl8B,KAC/C1D,MAAOiG,KAAKoG,UAAU7M,gBAM5B8W,EAAO+mB,OAEX,OAxDA,kCAwDA,EAxDA,GAsIM,SAAUI,IACd,MAAO,CACL7mB,SA9Ea,quFA+EbC,WAAYT,EACZU,SAAU,IACVC,MAAO,CACL7U,OAAQ,IACR8U,WAAY,IACZlT,OAAQ,IACR2S,WAAY,IACZQ,mBAAoB,IACpBC,SAAU,IACVwmB,UAAW,IACXhD,KAAM,MAIZ,IAAW/jB,UAAU,kBAAiB8mB,I,6BC5KtC,yHAGA,aAEE,WAAYnnB,EAAQC,GAClBD,EAAO+mB,KAAO,WACZ/mB,EAAOme,oBAAsB,uBAG/Bne,EAAO+mB,OAEX,OATA,kCASA,EATA,GA+DM,SAAU+D,IACd,MAAO,CACLxqB,SAtDa,0uDAuDbC,WAAYwqB,EACZvqB,SAAU,IACVC,MAAO,CACL7U,OAAQ,IACR8U,WAAY,IACZlT,OAAQ,IACR2S,WAAY,IACZS,SAAU,MAKhB,IAAWP,UAAU,WAAYyqB,I,6BCjFjC,0BAEA,kBAAa,kBAAiB,sB,6BCF9B,gIAIMhD,EAAmB,GAWzB,aAEE,WAAY9nB,EAAQC,GAClBD,EAAO+mB,KAAO,WACZ/mB,EAAOma,0BAA4B,4BACnCna,EAAO3S,UAAY,aAErB2S,EAAOkoB,eAAiB,WACtB,OAAOJ,EAAYn3B,QAAO,SAAC3C,GAAI,MAAK,OAAAA,EAAK+F,SAAqB,QAAX,EAAAiM,EAAOokB,YAAI,QAAI,QAGpEpkB,EAAOknB,iBAAmB,SAACnzB,GACzB,IAAMtI,EAAU,YAAwBuU,EAAO3S,WAE/C,OAAO2S,EAAOG,WAAWC,kBAAkB3U,EAAS,CAAEsI,MAAK,KAG7DiM,EAAO+mB,OAEX,OAnBA,kCAmBA,EAnBA,GAiGM,SAAUgB,IACd,MAAO,CACLznB,SA9Ea,wmFA+EbC,WAAYyqB,EACZxqB,SAAU,IACVC,MAAO,CACL7U,OAAQ,IACR8U,WAAY,IACZlT,OAAQ,IACR2S,WAAY,IACZQ,mBAAoB,IACpBC,SAAU,IACVwmB,UAAW,IACXhD,KAAM,MAIZ,IAAW/jB,UAAU,WAAY0nB,I,6BCjIjC,0BAEA,kBAAa,kBAAiB,sB,6BCF9B,0BAEA,kBAAa,kBAAiB,sB,6BCF9B,0BAEA,kBAAa,kBAAiB,sB,6BCF9B,0BAEA,kBAAa,kBAAiB,sB,gBCF9B,IAAIh3B,EAAM,CACT,IAAK,GACL,KAAM,GACN,sBAAuB,IACvB,yBAA0B,IAC1B,qBAAsB,EACtB,wBAAyB,EACzB,gBAAiB,EACjB,mBAAoB,EACpB,uBAAwB,IACxB,0BAA2B,IAC3B,gBAAiB,IACjB,mBAAoB,IACpB,0BAA2B,GAC3B,6BAA8B,GAC9B,qBAAsB,IACtB,wBAAyB,IACzB,yBAA0B,GAC1B,4BAA6B,GAC7B,yBAA0B,GAC1B,4BAA6B,GAC7B,oBAAqB,IACrB,uBAAwB,IACxB,wBAAyB,GACzB,2BAA4B,GAC5B,qBAAsB,GACtB,wBAAyB,GACzB,gBAAiB,IACjB,mBAAoB,IACpB,oBAAqB,GACrB,uBAAwB,GACxB,sBAAuB,GACvB,yBAA0B,GAC1B,iBAAkB,IAClB,oBAAqB,IACrB,qBAAsB,GACtB,wBAAyB,GACzB,mBAAoB,GACpB,sBAAuB,GACvB,cAAe,IACf,iBAAkB,IAClB,kBAAmB,GACnB,qBAAsB,GACtB,mBAAoB,GACpB,sBAAuB,GACvB,cAAe,IACf,iBAAkB,IAClB,kBAAmB,GACnB,qBAAsB,GACtB,mBAAoB,GACpB,sBAAuB,GACvB,cAAe,IACf,iBAAkB,IAClB,kBAAmB,GACnB,qBAAsB,GACtB,mBAAoB,GACpB,sBAAuB,GACvB,cAAe,IACf,iBAAkB,IAClB,kBAAmB,GACnB,qBAAsB,GACtB,4BAA6B,GAC7B,+BAAgC,GAChC,uBAAwB,IACxB,0BAA2B,IAC3B,2BAA4B,GAC5B,8BAA+B,GAC/B,4BAA6B,GAC7B,+BAAgC,GAChC,uBAAwB,IACxB,0BAA2B,IAC3B,2BAA4B,GAC5B,8BAA+B,GAC/B,mBAAoB,GACpB,sBAAuB,GACvB,cAAe,IACf,iBAAkB,IAClB,kBAAmB,GACnB,qBAAsB,GACtB,mBAAoB,GACpB,sBAAuB,GACvB,cAAe,IACf,iBAAkB,IAClB,kBAAmB,GACnB,qBAAsB,GACtB,sBAAuB,GACvB,yBAA0B,GAC1B,iBAAkB,IAClB,oBAAqB,IACrB,qBAAsB,EACtB,wBAAyB,EACzB,mBAAoB,GACpB,sBAAuB,GACvB,cAAe,IACf,iBAAkB,IAClB,kBAAmB,GACnB,qBAAsB,GACtB,mBAAoB,GACpB,sBAAuB,GACvB,cAAe,IACf,iBAAkB,IAClB,kBAAmB,GACnB,qBAAsB,GACtB,mBAAoB,GACpB,sBAAuB,GACvB,cAAe,IACf,iBAAkB,IAClB,kBAAmB,GACnB,qBAAsB,GACtB,yBAA0B,GAC1B,4BAA6B,GAC7B,oBAAqB,IACrB,uBAAwB,IACxB,wBAAyB,GACzB,2BAA4B,GAC5B,mBAAoB,GACpB,sBAAuB,GACvB,kBAAmB,IACnB,qBAAsB,IACtB,mBAAoB,GACpB,sBAAuB,GACvB,cAAe,IACf,iBAAkB,IAClB,kBAAmB,GACnB,qBAAsB,GACtB,mBAAoB,GACpB,sBAAuB,GACvB,cAAe,IACf,iBAAkB,IAClB,kBAAmB,GACnB,qBAAsB,GACtB,6BAA8B,GAC9B,gCAAiC,GACjC,wBAAyB,IACzB,2BAA4B,IAC5B,4BAA6B,GAC7B,+BAAgC,GAChC,kBAAmB,GACnB,qBAAsB,GACtB,aAAc,IACd,gBAAiB,IACjB,iBAAkB,GAClB,oBAAqB,GACrB,oBAAqB,GACrB,uBAAwB,GACxB,eAAgB,IAChB,kBAAmB,IACnB,mBAAoB,GACpB,sBAAuB,GACvB,mBAAoB,GACpB,sBAAuB,GACvB,cAAe,IACf,iBAAkB,IAClB,kBAAmB,GACnB,qBAAsB,GACtB,mBAAoB,GACpB,sBAAuB,GACvB,cAAe,IACf,iBAAkB,IAClB,kBAAmB,GACnB,qBAAsB,GACtB,mBAAoB,GACpB,sBAAuB,GACvB,cAAe,IACf,iBAAkB,IAClB,kBAAmB,GACnB,qBAAsB,GACtB,iCAAkC,GAClC,oCAAqC,GACrC,4BAA6B,IAC7B,+BAAgC,IAChC,gCAAiC,GACjC,mCAAoC,GACpC,sBAAuB,GACvB,yBAA0B,GAC1B,iBAAkB,IAClB,oBAAqB,IACrB,qBAAsB,GACtB,wBAAyB,GACzB,mBAAoB,GACpB,sBAAuB,GACvB,cAAe,IACf,iBAAkB,IAClB,kBAAmB,GACnB,qBAAsB,GACtB,UAAW,GACX,aAAc,GACd,kBAAmB,GACnB,qBAAsB,GACtB,aAAc,IACd,gBAAiB,IACjB,iBAAkB,GAClB,oBAAqB,GACrB,0BAA2B,GAC3B,6BAA8B,GAC9B,qBAAsB,IACtB,wBAAyB,IACzB,yBAA0B,GAC1B,4BAA6B,GAC7B,uBAAwB,GACxB,0BAA2B,GAC3B,kBAAmB,IACnB,qBAAsB,IACtB,sBAAuB,GACvB,yBAA0B,GAC1B,kBAAmB,GACnB,qBAAsB,GACtB,aAAc,IACd,gBAAiB,IACjB,iBAAkB,GAClB,oBAAqB,GACrB,2BAA4B,GAC5B,8BAA+B,GAC/B,sBAAuB,IACvB,yBAA0B,IAC1B,0BAA2B,GAC3B,6BAA8B,GAC9B,sBAAuB,GACvB,yBAA0B,GAC1B,iBAAkB,IAClB,oBAAqB,IACrB,qBAAsB,GACtB,wBAAyB,GACzB,mBAAoB,GACpB,sBAAuB,GACvB,cAAe,IACf,iBAAkB,IAClB,kBAAmB,GACnB,qBAAsB,GACtB,0BAA2B,IAC3B,6BAA8B,IAC9B,qBAAsB,IACtB,wBAAyB,IACzB,yBAA0B,GAC1B,4BAA6B,GAC7B,oBAAqB,IACrB,uBAAwB,IACxB,eAAgB,IAChB,kBAAmB,IACnB,mBAAoB,GACpB,sBAAuB,GACvB,qBAAsB,IACtB,wBAAyB,IACzB,gBAAiB,IACjB,mBAAoB,IACpB,oBAAqB,GACrB,uBAAwB,GACxB,yBAA0B,IAC1B,4BAA6B,IAC7B,oBAAqB,IACrB,uBAAwB,IACxB,wBAAyB,GACzB,2BAA4B,GAC5B,mBAAoB,IACpB,sBAAuB,IACvB,cAAe,IACf,iBAAkB,IAClB,kBAAmB,GACnB,qBAAsB,GACtB,yBAA0B,IAC1B,4BAA6B,IAC7B,oBAAqB,IACrB,uBAAwB,IACxB,wBAAyB,GACzB,2BAA4B,GAC5B,uBAAwB,IACxB,0BAA2B,IAC3B,kBAAmB,IACnB,qBAAsB,IACtB,sBAAuB,GACvB,yBAA0B,GAC1B,oBAAqB,IACrB,uBAAwB,IACxB,eAAgB,IAChB,kBAAmB,IACnB,mBAAoB,GACpB,sBAAuB,GACvB,mBAAoB,IACpB,sBAAuB,IACvB,cAAe,IACf,iBAAkB,IAClB,kBAAmB,GACnB,qBAAsB,GACtB,qBAAsB,IACtB,wBAAyB,IACzB,gBAAiB,IACjB,mBAAoB,IACpB,oBAAqB,GACrB,uBAAwB,GACxB,mBAAoB,IACpB,sBAAuB,IACvB,cAAe,IACf,iBAAkB,IAClB,kBAAmB,GACnB,qBAAsB,GACtB,8BAA+B,IAC/B,iCAAkC,IAClC,yBAA0B,IAC1B,4BAA6B,IAC7B,6BAA8B,GAC9B,gCAAiC,GACjC,qBAAsB,IACtB,wBAAyB,IACzB,gBAAiB,IACjB,mBAAoB,IACpB,oBAAqB,GACrB,uBAAwB,GACxB,oBAAqB,IACrB,uBAAwB,IACxB,eAAgB,IAChB,kBAAmB,IACnB,mBAAoB,GACpB,sBAAuB,GACvB,mBAAoB,IACpB,sBAAuB,IACvB,cAAe,IACf,iBAAkB,IAClB,kBAAmB,GACnB,qBAAsB,IAIvB,SAASk6B,EAAeC,GACvB,IAAIx1B,EAAKy1B,EAAsBD,GAC/B,OAAO7iC,EAAoBqN,GAE5B,SAASy1B,EAAsBD,GAC9B,IAAI7iC,EAAoBa,EAAE6H,EAAKm6B,GAAM,CACpC,IAAI/vB,EAAI,IAAI/G,MAAM,uBAAyB82B,EAAM,KAEjD,MADA/vB,EAAE3F,KAAO,mBACH2F,EAEP,OAAOpK,EAAIm6B,GAEZD,EAAe55B,KAAO,WACrB,OAAOlI,OAAOkI,KAAKN,IAEpBk6B,EAAev8B,QAAUy8B,EACzB3iC,EAAOD,QAAU0iC,EACjBA,EAAev1B,GAAK,K,6BCnVpB,4GAmBA,aAME,WAAYhL,EAAkBC,EAAYC,GAA1C,WACEQ,KAAKV,iBAAmBA,EACxBU,KAAKT,WAAaA,EAClBS,KAAKR,YAAcA,EACnB,IAAEoB,QAAQ,eAAa,SAACo/B,EAAaphC,GACnC,EAAKA,GAAO,IAAIohC,EAAO,EAAK1gC,iBAAkB,EAAKC,WAAY,EAAKC,gBA2P1E,OAtQA,0DAgBE,YAAAygC,cAAA,sBACQC,EAAoB,GAO1B,OANA,IAAEt/B,QAAQ,YAAU,SAACP,IACqC,IAApD,EAAKf,iBAAiBa,SAASE,EAAQA,UAEzC6/B,EAAW/5B,KAAK9F,MAGb6/B,GAGT,YAAAC,sBAAA,sBACQC,EAAgB,WAAS76B,QAAO,SAAClF,GAAY,SAAKf,iBAAiBa,SAASE,EAA/B,YACnD,OAAO,YAAe+/B,IAGxB,YAAAC,oBAAA,WACE,IAAMH,EAAalgC,KAAKigC,gBACxB,OAAO,IAAEt6B,IAAIu6B,GAAY,SAAC,G,IAAEj+B,EAAS,YACnC,OAAO,YAAwBA,OAwDnC,YAAAH,MAAA,SAAM6B,GAAN,WACQ28B,EAAkB,GAClBpsB,EAAWlU,KAAKqgC,sBAYtB,OAXA,IAAEz/B,QAAQsT,GAAU,SAAC7T,GACnB,IAAMkgC,EAAc,IAAEr9B,UAAUS,GAC1B6B,EAAU,IAAED,OAAOg7B,EAAY/6B,SAAS,SAAC5C,GAAS,OAAAA,EAAKvC,UAAL,KAExD,GADAkgC,EAAY/6B,QAAUA,EAClB+6B,EAAY/6B,QAAQR,OAAS,EAAG,CAClC,IAAMw7B,EAAc,EAAK,UAAG,IAAE3Z,QAAQxmB,GAAQ,eAAcyB,MAAMy+B,GAC9DC,GACFF,EAASn6B,KAAKq6B,OAII,IAApBF,EAASt7B,OACJ3B,QAAQC,QAAQ,CAAE+C,KAAM,GAAI8oB,MAAO,eAAasR,OAElDp9B,QAAQ4D,IAAIq5B,GAAUp5B,MAAK,SAACw5B,GACjC,MAAO,CAAEr6B,KAAM,IAAEe,QAAQs5B,GAAUvR,MAAO,eAAasR,UAS3D,YAAA5+B,gBAAA,SAAgBC,EAAe6B,GAC7B,IAAM2B,EAAU,YAAiBxD,GAC3BzB,EAAU,YAAwBiF,EAAO,WAAiB,IAEhE,GAAI,IAAED,QAAQC,KAAaA,EAAO,YAAkBA,EAAO,SAAejF,EACxE,OAAOgD,QAAQC,QAAQ,IAEzB,GAAItD,KAAK,UAAG,IAAE6mB,QAAQxmB,GAAQ,eAAcwB,gBAAiB,CAC3D,IAAMpB,EAAST,KAAK,UAAG,IAAE6mB,QAAQxmB,GAAQ,eAAcwB,gBACrDyD,EACA,IAAEpH,IAAIyF,EAAS,sBAAkBkN,IAEnC,GAAIpQ,EACF,OAAOA,EAGX,OAAO4C,QAAQC,QAAQ,KAOzB,YAAAd,WAAA,SAAWnC,GACT,OAAIL,KAAK,UAAG,IAAE6mB,QAAQxmB,GAAQ,eAAcmC,WACnCxC,KAAK,UAAG,IAAE6mB,QAAQxmB,GAAQ,eAAcmC,aAE1C,IAQT,YAAA6F,WAAA,SAAWhI,EAAS+B,GAClB,OAAOpC,KAAK,UAAG,IAAE6mB,QAAQxmB,GAAQ,eAAcgI,WAAWjG,IAQ5D,YAAA2zB,SAAA,SAAS11B,EAAS+B,GAChB,OAAIpC,KAAK,UAAG,IAAE6mB,QAAQxmB,GAAQ,eAAc01B,SACnC/1B,KAAK,UAAG,IAAE6mB,QAAQxmB,GAAQ,eAAc01B,SAAS3zB,GAEnD,IAQT,YAAA4S,kBAAA,SAAkB3U,EAAS+I,GACzB,OAAIpJ,KAAK,UAAG,IAAE6mB,QAAQxmB,GAAQ,eAAc2U,kBACnChV,KAAK,UAAG,IAAE6mB,QAAQxmB,GAAQ,eAAc2U,kBAAkB5L,GAE5D,IAST,YAAAX,aAAA,SAAapI,EAAS+B,EAAQwF,GAC5B,OAAO5H,KAAK,UAAG,IAAE6mB,QAAQxmB,GAAQ,eAAcoI,aAAarG,EAAQwF,IAStE,YAAA+4B,aAAA,SAAatgC,EAAS+B,EAAQ7B,GAC5B,OAAKP,KAAK,UAAG,IAAE6mB,QAAQxmB,GAAQ,eAAcsgC,aAGtC3gC,KAAK,UAAG,IAAE6mB,QAAQxmB,GAAQ,eAAcsgC,aAAav+B,EAAQ7B,GAF3D,IASX,YAAAs6B,UAAA,SAAUx6B,EAAS+B,GACjB,GAAIpC,KAAK,UAAG,IAAE6mB,QAAQxmB,GAAQ,eAAcw6B,UAC1C,OAAO76B,KAAK,UAAG,IAAE6mB,QAAQxmB,GAAQ,eAAcw6B,UAAUz4B,IAK7D,YAAAkH,eAAA,sBACQg3B,EAAkB,GAClBpsB,EAAWlU,KAAKqgC,sBAItB,OAHA,IAAEz/B,QAAQsT,GAAU,SAAC7T,GACnBigC,EAASn6B,KAAK,EAAK,UAAG,IAAE0gB,QAAQxmB,GAAQ,eAAciJ,qBAEhC,IAApBg3B,EAASt7B,OACJ3B,QAAQC,QAAQ,MAGlBD,QAAQ4D,IAAIq5B,GAAUp5B,MAAK,SAACw5B,GACjC,IAAIz2B,EAAS,UACTH,EAAU,2BAER82B,EAAW,IAAEztB,OACjButB,GACA,SAACttB,EAAKC,GAKJ,MAJmB,UAAfA,EAAIpJ,SACM,KAARmJ,IAAYA,GAAO,6BACvBA,GAAO,UAAGC,EAAIhT,QAAO,aAAKgT,EAAIvJ,QAAO,SAEhCsJ,IAET,IAQF,OALIwtB,IACF32B,EAAS,QACTH,EAAU82B,GAGL,CACL32B,OAAM,EACNH,QAAO,EACPI,MAAO,IAAE22B,WAAW52B,QAK1B,YAAA4xB,aAAA,SAAax7B,EAASygC,GAAtB,WACE,OAAO,W,UAAC,kDACN,OAAK,EAAK,UAAG,IAAEja,QAAQxmB,GAAQ,eAAcygC,IAGtC,IAAK,UAAG,IAAEja,QAAQxmB,GAAQ,gBAAcygC,GAAO,QAAIC,GAFjD,KAKf,EAtQA,I,6BCjBA,IAAI3d,EAAMrlB,OAAOkB,UAAUC,eAEvB8hC,EAAY,WAEZ,IADA,IAAIC,EAAQ,GACH5jC,EAAI,EAAGA,EAAI,MAAOA,EACvB4jC,EAAM96B,KAAK,MAAQ9I,EAAI,GAAK,IAAM,IAAMA,EAAEoP,SAAS,KAAK6U,eAG5D,OAAO2f,EANI,GAgCXC,EAAgB,SAAuBC,EAAQx9B,GAE/C,IADA,IAAIgN,EAAMhN,GAAWA,EAAQy9B,aAAerjC,OAAOY,OAAO,MAAQ,GACzDtB,EAAI,EAAGA,EAAI8jC,EAAOn8B,SAAU3H,OACR,IAAd8jC,EAAO9jC,KACdsT,EAAItT,GAAK8jC,EAAO9jC,IAIxB,OAAOsT,GA+JXvT,EAAOD,QAAU,CACb+jC,cAAeA,EACfr0B,OAvGS,SAA4BrM,EAAQ2gC,GAC7C,OAAOpjC,OAAOkI,KAAKk7B,GAAQhuB,QAAO,SAAUC,EAAKxU,GAE7C,OADAwU,EAAIxU,GAAOuiC,EAAOviC,GACXwU,IACR5S,IAoGHuJ,QArCU,SAAiBzL,GAI3B,IAHA,IAAI0f,EAAQ,CAAC,CAAErN,IAAK,CAAE7S,EAAGQ,GAASwb,KAAM,MACpCunB,EAAO,GAEFhkC,EAAI,EAAGA,EAAI2gB,EAAMhZ,SAAU3H,EAKhC,IAJA,IAAIuF,EAAOob,EAAM3gB,GACbsT,EAAM/N,EAAK+N,IAAI/N,EAAKkX,MAEpB7T,EAAOlI,OAAOkI,KAAK0K,GACd2wB,EAAI,EAAGA,EAAIr7B,EAAKjB,SAAUs8B,EAAG,CAClC,IAAI1iC,EAAMqH,EAAKq7B,GACXxxB,EAAMa,EAAI/R,GACK,iBAARkR,GAA4B,OAARA,IAAuC,IAAvBuxB,EAAKrgC,QAAQ8O,KACxDkO,EAAM7X,KAAK,CAAEwK,IAAKA,EAAKmJ,KAAMlb,IAC7ByiC,EAAKl7B,KAAK2J,IAKtB,OA/Ke,SAAsBkO,GAGrC,IAFA,IAAIrN,EAEGqN,EAAMhZ,QAAQ,CACjB,IAAIpC,EAAOob,EAAMujB,MAGjB,GAFA5wB,EAAM/N,EAAK+N,IAAI/N,EAAKkX,MAEhB5Y,MAAMC,QAAQwP,GAAM,CAGpB,IAFA,IAAI6wB,EAAY,GAEPF,EAAI,EAAGA,EAAI3wB,EAAI3L,SAAUs8B,OACR,IAAX3wB,EAAI2wB,IACXE,EAAUr7B,KAAKwK,EAAI2wB,IAI3B1+B,EAAK+N,IAAI/N,EAAKkX,MAAQ0nB,GAI9B,OAAO7wB,EA2JA8wB,CAAazjB,IAmBpB0jB,OAlGS,SAAU7xB,GACnB,IACI,OAAO8xB,mBAAmB9xB,EAAIrO,QAAQ,MAAO,MAC/C,MAAOuO,GACL,OAAOF,IA+FX+xB,OA3FS,SAAgB/xB,GAGzB,GAAmB,IAAfA,EAAI7K,OACJ,OAAO6K,EAMX,IAHA,IAAIgyB,EAAwB,iBAARhyB,EAAmBA,EAAMS,OAAOT,GAEhDiyB,EAAM,GACDzkC,EAAI,EAAGA,EAAIwkC,EAAO78B,SAAU3H,EAAG,CACpC,IAAIK,EAAImkC,EAAOE,WAAW1kC,GAGhB,KAANK,GACS,KAANA,GACM,KAANA,GACM,MAANA,GACCA,GAAK,IAAQA,GAAK,IAClBA,GAAK,IAAQA,GAAK,IAClBA,GAAK,IAAQA,GAAK,IAEtBokC,GAAOD,EAAOG,OAAO3kC,GAIrBK,EAAI,IACJokC,GAAYd,EAAStjC,GAIrBA,EAAI,KACJokC,GAAad,EAAS,IAAQtjC,GAAK,GAAMsjC,EAAS,IAAY,GAAJtjC,GAI1DA,EAAI,OAAUA,GAAK,MACnBokC,GAAad,EAAS,IAAQtjC,GAAK,IAAOsjC,EAAS,IAAStjC,GAAK,EAAK,IAASsjC,EAAS,IAAY,GAAJtjC,IAIpGL,GAAK,EACLK,EAAI,QAAiB,KAAJA,IAAc,GAA8B,KAAvBmkC,EAAOE,WAAW1kC,IACxDykC,GAAOd,EAAS,IAAQtjC,GAAK,IACvBsjC,EAAS,IAAStjC,GAAK,GAAM,IAC7BsjC,EAAS,IAAStjC,GAAK,EAAK,IAC5BsjC,EAAS,IAAY,GAAJtjC,IAG3B,OAAOokC,GA2CPG,SAdW,SAAkBtxB,GAC7B,OAAIA,YAIMA,EAAIuxB,aAAevxB,EAAIuxB,YAAYD,UAAYtxB,EAAIuxB,YAAYD,SAAStxB,KAUlFwxB,SAnBW,SAAkBxxB,GAC7B,MAA+C,oBAAxC5S,OAAOkB,UAAUwN,SAASjP,KAAKmT,IAmBtCyxB,MApKQ,SAASA,EAAM5hC,EAAQ2gC,EAAQx9B,GACvC,IAAKw9B,EACD,OAAO3gC,EAGX,GAAsB,iBAAX2gC,EAAqB,CAC5B,GAAIjgC,MAAMC,QAAQX,GACdA,EAAO2F,KAAKg7B,OACT,IAAsB,iBAAX3gC,EAKd,MAAO,CAACA,EAAQ2gC,IAJZx9B,EAAQy9B,cAAgBz9B,EAAQ0+B,kBAAoBjf,EAAI5lB,KAAKO,OAAOkB,UAAWkiC,MAC/E3gC,EAAO2gC,IAAU,GAMzB,OAAO3gC,EAGX,GAAsB,iBAAXA,EACP,MAAO,CAACA,GAAQqF,OAAOs7B,GAG3B,IAAImB,EAAc9hC,EAKlB,OAJIU,MAAMC,QAAQX,KAAYU,MAAMC,QAAQggC,KACxCmB,EAAcpB,EAAc1gC,EAAQmD,IAGpCzC,MAAMC,QAAQX,IAAWU,MAAMC,QAAQggC,IACvCA,EAAOvgC,SAAQ,SAAUgC,EAAMvF,GACvB+lB,EAAI5lB,KAAKgD,EAAQnD,GACbmD,EAAOnD,IAA2B,iBAAdmD,EAAOnD,GAC3BmD,EAAOnD,GAAK+kC,EAAM5hC,EAAOnD,GAAIuF,EAAMe,GAEnCnD,EAAO2F,KAAKvD,GAGhBpC,EAAOnD,GAAKuF,KAGbpC,GAGJzC,OAAOkI,KAAKk7B,GAAQhuB,QAAO,SAAUC,EAAKxU,GAC7C,IAAIN,EAAQ6iC,EAAOviC,GAOnB,OALIwkB,EAAI5lB,KAAK4V,EAAKxU,GACdwU,EAAIxU,GAAOwjC,EAAMhvB,EAAIxU,GAAMN,EAAOqF,GAElCyP,EAAIxU,GAAON,EAER8U,IACRkvB,M,6BCjGP,IAAI9gC,EAAU8O,OAAOrR,UAAUuC,QAC3B+gC,EAAkB,OAEtBnlC,EAAOD,QAAU,CACb,QAAW,UACXqlC,WAAY,CACRC,QAAS,SAAUnkC,GACf,OAAOkD,EAAQhE,KAAKc,EAAOikC,EAAiB,MAEhDG,QAAS,SAAUpkC,GACf,OAAOA,IAGfmkC,QAAS,UACTC,QAAS,Y,6BChBb,oEAGA,aAIE,WAAY9tB,EAAQC,GAClB9W,OAAO8O,OAAO+H,EAAQ+tB,EAAYC,SAElChuB,EAAOqnB,UAAY,SAACC,EAAUC,IACY,IAApCvnB,EAAOpU,OAAO8E,QAAQ42B,KACxBtnB,EAAOpU,OAAO8E,QAAQ62B,IAAY,GAEpCvnB,EAAOY,YAGTZ,EAAO+mB,OAEX,OAhBA,kCAgBA,EAhBA,GAuHM,SAAUkH,IACd,MAAO,CACL3tB,SAvGa,6rHAwGbC,WAAYwtB,EACZvtB,SAAU,IACVC,MAAO,CACL7U,OAAQ,IACR8U,WAAY,IACZlT,OAAQ,IACR2S,WAAY,IACZQ,mBAAoB,IACpBC,SAAU,MAKD,mBAAC5X,EAAc4W,GAC5BmuB,EAAYC,QAAUpuB,EACtB,IAAWS,UAAUrX,EAAMilC,K,kEC1I7B,IAAIl4B,EAAY,EAAQ,KACpBnG,EAAQ,EAAQ,KAChBs+B,EAAU,EAAQ,KAEtB1lC,EAAOD,QAAU,CACb2lC,QAASA,EACTt+B,MAAOA,EACPmG,UAAWA,I,0zhBCPf,IAAIo4B,EAAQ,EAAQ,KAChBD,EAAU,EAAQ,KAElBE,EAAwB,CACxBC,SAAU,SAAkB5hB,GACxB,OAAOA,EAAS,MAEpB6hB,QAAS,SAAiB7hB,EAAQziB,GAC9B,OAAOyiB,EAAS,IAAMziB,EAAM,KAEhCukC,OAAQ,SAAgB9hB,GACpB,OAAOA,IAIX+hB,EAAQC,KAAKpkC,UAAUqkC,YAEvB52B,EAAW,CACX62B,UAAW,IACX3B,QAAQ,EACR4B,QAAST,EAAMnB,OACf6B,kBAAkB,EAClBC,cAAe,SAAuB14B,GAClC,OAAOo4B,EAAM5lC,KAAKwN,IAEtB24B,WAAW,EACXC,oBAAoB,GAGpBj5B,EAAY,SAASA,EACrB5L,EACAsiB,EACAwiB,EACAD,EACAD,EACAH,EACAj+B,EACAu+B,EACAC,EACAL,EACAM,EACAP,GAEA,IAAI9yB,EAAM5R,EACV,GAAsB,mBAAXwG,EACPoL,EAAMpL,EAAO8b,EAAQ1Q,QAClB,GAAIA,aAAe0yB,KACtB1yB,EAAM+yB,EAAc/yB,QACjB,GAAY,OAARA,EAAc,CACrB,GAAIizB,EACA,OAAOJ,IAAYC,EAAmBD,EAAQniB,EAAQ3U,EAAS82B,SAAWniB,EAG9E1Q,EAAM,GAGV,GAAmB,iBAARA,GAAmC,iBAARA,GAAmC,kBAARA,GAAqBoyB,EAAMd,SAAStxB,GACjG,OAAI6yB,EAEO,CAACQ,EADOP,EAAmBpiB,EAASmiB,EAAQniB,EAAQ3U,EAAS82B,UACtC,IAAMQ,EAAUR,EAAQ7yB,EAAKjE,EAAS82B,WAEjE,CAACQ,EAAU3iB,GAAU,IAAM2iB,EAAU1zB,OAAOK,KAGvD,IAMIszB,EANAzyB,EAAS,GAEb,QAAmB,IAARb,EACP,OAAOa,EAIX,GAAItQ,MAAMC,QAAQoE,GACd0+B,EAAU1+B,MACP,CACH,IAAIU,EAAOlI,OAAOkI,KAAK0K,GACvBszB,EAAUH,EAAO79B,EAAK69B,KAAKA,GAAQ79B,EAGvC,IAAK,IAAI5I,EAAI,EAAGA,EAAI4mC,EAAQj/B,SAAU3H,EAAG,CACrC,IAAIuB,EAAMqlC,EAAQ5mC,GAEdsmC,GAA0B,OAAbhzB,EAAI/R,KAKjB4S,EADAtQ,MAAMC,QAAQwP,GACLa,EAAO3L,OAAO8E,EACnBgG,EAAI/R,GACJilC,EAAoBxiB,EAAQziB,GAC5BilC,EACAD,EACAD,EACAH,EACAj+B,EACAu+B,EACAC,EACAL,EACAM,EACAP,IAGKjyB,EAAO3L,OAAO8E,EACnBgG,EAAI/R,GACJyiB,GAAU0iB,EAAY,IAAMnlC,EAAM,IAAMA,EAAM,KAC9CilC,EACAD,EACAD,EACAH,EACAj+B,EACAu+B,EACAC,EACAL,EACAM,EACAP,KAKZ,OAAOjyB,GAGXpU,EAAOD,QAAU,SAAU4B,EAAQmlC,GAC/B,IAAIvzB,EAAM5R,EACN4E,EAAUugC,EAAOnB,EAAMl2B,OAAO,GAAIq3B,GAAQ,GAE9C,GAAwB,OAApBvgC,EAAQ6/B,cAAwC3yB,IAApBlN,EAAQ6/B,SAAoD,mBAApB7/B,EAAQ6/B,QAC5E,MAAM,IAAIW,UAAU,iCAGxB,IAAIZ,OAAyC,IAAtB5/B,EAAQ4/B,UAA4B72B,EAAS62B,UAAY5/B,EAAQ4/B,UACpFK,EAA2D,kBAA/BjgC,EAAQigC,mBAAmCjgC,EAAQigC,mBAAqBl3B,EAASk3B,mBAC7GD,EAAyC,kBAAtBhgC,EAAQggC,UAA0BhgC,EAAQggC,UAAYj3B,EAASi3B,UAClF/B,EAAmC,kBAAnBj+B,EAAQi+B,OAAuBj+B,EAAQi+B,OAASl1B,EAASk1B,OACzE4B,EAAqC,mBAApB7/B,EAAQ6/B,QAAyB7/B,EAAQ6/B,QAAU92B,EAAS82B,QAC7EM,EAA+B,mBAAjBngC,EAAQmgC,KAAsBngC,EAAQmgC,KAAO,KAC3DC,OAAyC,IAAtBpgC,EAAQogC,WAAoCpgC,EAAQogC,UACvEL,EAAiD,mBAA1B//B,EAAQ+/B,cAA+B//B,EAAQ+/B,cAAgBh3B,EAASg3B,cAC/FD,EAAuD,kBAA7B9/B,EAAQ8/B,iBAAiC9/B,EAAQ8/B,iBAAmB/2B,EAAS+2B,iBAC3G,QAA8B,IAAnB9/B,EAAQ8C,OACf9C,EAAQ8C,OAASq8B,EAAiB,aAC/B,IAAK/kC,OAAOkB,UAAUC,eAAe1B,KAAKslC,EAAQN,WAAY7+B,EAAQ8C,QACzE,MAAM,IAAI09B,UAAU,mCAExB,IACIF,EACA1+B,EAFAy+B,EAAYlB,EAAQN,WAAW7+B,EAAQ8C,QAIb,mBAAnB9C,EAAQ4B,OAEfoL,GADApL,EAAS5B,EAAQ4B,QACJ,GAAIoL,GACVzP,MAAMC,QAAQwC,EAAQ4B,UAE7B0+B,EADA1+B,EAAS5B,EAAQ4B,QAIrB,IAMI6+B,EANAn+B,EAAO,GAEX,GAAmB,iBAAR0K,GAA4B,OAARA,EAC3B,MAAO,GAKPyzB,EADAzgC,EAAQygC,eAAepB,EACTr/B,EAAQygC,YACf,YAAazgC,EACNA,EAAQu/B,QAAU,UAAY,SAE9B,UAGlB,IAAIW,EAAsBb,EAAsBoB,GAE3CH,IACDA,EAAUlmC,OAAOkI,KAAK0K,IAGtBmzB,GACAG,EAAQH,KAAKA,GAGjB,IAAK,IAAIzmC,EAAI,EAAGA,EAAI4mC,EAAQj/B,SAAU3H,EAAG,CACrC,IAAIuB,EAAMqlC,EAAQ5mC,GAEdsmC,GAA0B,OAAbhzB,EAAI/R,KAIrBqH,EAAOA,EAAKJ,OAAO8E,EACfgG,EAAI/R,GACJA,EACAilC,EACAD,EACAD,EACA/B,EAAS4B,EAAU,KACnBj+B,EACAu+B,EACAC,EACAL,EACAM,EACAP,KAIR,IAAIY,EAASp+B,EAAK7E,KAAKmiC,GACnBliB,GAAoC,IAA3B1d,EAAQ2gC,eAA0B,IAAM,GAErD,OAAOD,EAAOr/B,OAAS,EAAIqc,EAASgjB,EAAS,K,6BC9MjD,IAAItB,EAAQ,EAAQ,KAEhB3f,EAAMrlB,OAAOkB,UAAUC,eAEvBwN,EAAW,CACXq3B,WAAW,EACX1B,iBAAiB,EACjBkC,WAAY,GACZC,QAASzB,EAAMrB,OACf6B,UAAW,IACXkB,MAAO,EACPC,eAAgB,IAChBtD,cAAc,EACdwC,oBAAoB,GAmEpBe,EAAY,SAA8BC,EAAU90B,EAAKnM,GACzD,GAAKihC,EAAL,CAKA,IAAIhmC,EAAM+E,EAAQogC,UAAYa,EAASpjC,QAAQ,cAAe,QAAUojC,EAKpEC,EAAQ,gBAIRC,EALW,eAKQC,KAAKnmC,GACxBomC,EAASF,EAAUlmC,EAAIgV,MAAM,EAAGkxB,EAAQrzB,OAAS7S,EAIjDqH,EAAO,GACX,GAAI++B,EAAQ,CAGR,IAAKrhC,EAAQy9B,cAAgBhe,EAAI5lB,KAAKO,OAAOkB,UAAW+lC,KAC/CrhC,EAAQ0+B,gBACT,OAIRp8B,EAAKE,KAAK6+B,GAMd,IADA,IAAI3nC,EAAI,EAC+B,QAA/BynC,EAAUD,EAAME,KAAKnmC,KAAkBvB,EAAIsG,EAAQ8gC,OAAO,CAE9D,GADApnC,GAAK,GACAsG,EAAQy9B,cAAgBhe,EAAI5lB,KAAKO,OAAOkB,UAAW6lC,EAAQ,GAAGlxB,MAAM,GAAI,MACpEjQ,EAAQ0+B,gBACT,OAGRp8B,EAAKE,KAAK2+B,EAAQ,IAStB,OAJIA,GACA7+B,EAAKE,KAAK,IAAMvH,EAAIgV,MAAMkxB,EAAQrzB,OAAS,KAnFjC,SAAUsnB,EAAOjpB,EAAKnM,GAGpC,IAFA,IAAIshC,EAAOn1B,EAEFzS,EAAI07B,EAAM/zB,OAAS,EAAG3H,GAAK,IAAKA,EAAG,CACxC,IAAIsT,EACAu0B,EAAOnM,EAAM17B,GAEjB,GAAa,OAAT6nC,EAEAv0B,GADAA,EAAM,IACI9K,OAAOo/B,OACd,CACHt0B,EAAMhN,EAAQy9B,aAAerjC,OAAOY,OAAO,MAAQ,GACnD,IAAIwmC,EAA+B,MAAnBD,EAAKlD,OAAO,IAA+C,MAAjCkD,EAAKlD,OAAOkD,EAAKlgC,OAAS,GAAakgC,EAAKtxB,MAAM,GAAI,GAAKsxB,EACjGzzB,EAAQ2zB,SAASD,EAAW,KAE3BE,MAAM5zB,IACJyzB,IAASC,GACT70B,OAAOmB,KAAW0zB,GAClB1zB,GAAS,GACR9N,EAAQ2hC,aAAe7zB,GAAS9N,EAAQ4gC,YAE5C5zB,EAAM,IACFc,GAASwzB,EAEbt0B,EAAIw0B,GAAaF,EAIzBA,EAAOt0B,EAGX,OAAOs0B,EAuDAM,CAAYt/B,EAAM6J,EAAKnM,KAGlCvG,EAAOD,QAAU,SAAU0S,EAAKq0B,GAC5B,IAAIvgC,EAAUugC,EAAOnB,EAAMl2B,OAAO,GAAIq3B,GAAQ,GAE9C,GAAwB,OAApBvgC,EAAQ6gC,cAAwC3zB,IAApBlN,EAAQ6gC,SAAoD,mBAApB7gC,EAAQ6gC,QAC5E,MAAM,IAAIL,UAAU,iCAexB,GAZAxgC,EAAQ6hC,mBAAkD,IAA9B7hC,EAAQ6hC,kBACpC7hC,EAAQ4/B,UAAyC,iBAAtB5/B,EAAQ4/B,WAA0BR,EAAMZ,SAASx+B,EAAQ4/B,WAAa5/B,EAAQ4/B,UAAY72B,EAAS62B,UAC9H5/B,EAAQ8gC,MAAiC,iBAAlB9gC,EAAQ8gC,MAAqB9gC,EAAQ8gC,MAAQ/3B,EAAS+3B,MAC7E9gC,EAAQ4gC,WAA2C,iBAAvB5gC,EAAQ4gC,WAA0B5gC,EAAQ4gC,WAAa73B,EAAS63B,WAC5F5gC,EAAQ2hC,aAAsC,IAAxB3hC,EAAQ2hC,YAC9B3hC,EAAQ6gC,QAAqC,mBAApB7gC,EAAQ6gC,QAAyB7gC,EAAQ6gC,QAAU93B,EAAS83B,QACrF7gC,EAAQogC,UAAyC,kBAAtBpgC,EAAQogC,UAA0BpgC,EAAQogC,UAAYr3B,EAASq3B,UAC1FpgC,EAAQy9B,aAA+C,kBAAzBz9B,EAAQy9B,aAA6Bz9B,EAAQy9B,aAAe10B,EAAS00B,aACnGz9B,EAAQ0+B,gBAAqD,kBAA5B1+B,EAAQ0+B,gBAAgC1+B,EAAQ0+B,gBAAkB31B,EAAS21B,gBAC5G1+B,EAAQ+gC,eAAmD,iBAA3B/gC,EAAQ+gC,eAA8B/gC,EAAQ+gC,eAAiBh4B,EAASg4B,eACxG/gC,EAAQigC,mBAA2D,kBAA/BjgC,EAAQigC,mBAAmCjgC,EAAQigC,mBAAqBl3B,EAASk3B,mBAEzG,KAAR/zB,SAAcA,EACd,OAAOlM,EAAQy9B,aAAerjC,OAAOY,OAAO,MAAQ,GASxD,IANA,IAAI8mC,EAAyB,iBAAR51B,EA9IP,SAAgCA,EAAKlM,GAMnD,IALA,IAAIgN,EAAM,GACN+0B,EAAW/hC,EAAQ6hC,kBAAoB31B,EAAIrO,QAAQ,MAAO,IAAMqO,EAChEwiB,EAAQ1uB,EAAQ+gC,iBAAmBiB,SAAW90B,EAAYlN,EAAQ+gC,eAClEkB,EAAQF,EAAS/9B,MAAMhE,EAAQ4/B,UAAWlR,GAErCh1B,EAAI,EAAGA,EAAIuoC,EAAM5gC,SAAU3H,EAAG,CACnC,IAKIuB,EAAKkR,EALL+1B,EAAOD,EAAMvoC,GAEbyoC,EAAmBD,EAAK7kC,QAAQ,MAChC+kC,GAA4B,IAAtBD,EAA0BD,EAAK7kC,QAAQ,KAAO8kC,EAAmB,GAG9D,IAATC,GACAnnC,EAAM+E,EAAQ6gC,QAAQqB,EAAMn5B,EAAS83B,SACrC10B,EAAMnM,EAAQigC,mBAAqB,KAAO,KAE1ChlC,EAAM+E,EAAQ6gC,QAAQqB,EAAKjyB,MAAM,EAAGmyB,GAAMr5B,EAAS83B,SACnD10B,EAAMnM,EAAQ6gC,QAAQqB,EAAKjyB,MAAMmyB,EAAM,GAAIr5B,EAAS83B,UAEpDphB,EAAI5lB,KAAKmT,EAAK/R,GACd+R,EAAI/R,GAAO,GAAGiH,OAAO8K,EAAI/R,IAAMiH,OAAOiK,GAEtCa,EAAI/R,GAAOkR,EAInB,OAAOa,EAmHiCq1B,CAAYn2B,EAAKlM,GAAWkM,EAChEc,EAAMhN,EAAQy9B,aAAerjC,OAAOY,OAAO,MAAQ,GAInDsH,EAAOlI,OAAOkI,KAAKw/B,GACdpoC,EAAI,EAAGA,EAAI4I,EAAKjB,SAAU3H,EAAG,CAClC,IAAIuB,EAAMqH,EAAK5I,GACX4oC,EAAStB,EAAU/lC,EAAK6mC,EAAQ7mC,GAAM+E,GAC1CgN,EAAMoyB,EAAMX,MAAMzxB,EAAKs1B,EAAQtiC,GAGnC,OAAOo/B,EAAMh5B,QAAQ4G,K,gBC5KzB,IAAIhL,EAAM,CACT,mBAAoB,EACpB,0BAA2B,GAC3B,6BAA8B,GAC9B,wBAAyB,IACzB,4BAA6B,GAC7B,yBAA0B,GAC1B,4BAA6B,GAC7B,uBAAwB,IACxB,2BAA4B,GAC5B,qBAAsB,GACtB,wBAAyB,GACzB,mBAAoB,IACpB,uBAAwB,GACxB,sBAAuB,GACvB,yBAA0B,GAC1B,oBAAqB,IACrB,wBAAyB,GACzB,mBAAoB,GACpB,sBAAuB,GACvB,iBAAkB,IAClB,qBAAsB,GACtB,mBAAoB,GACpB,sBAAuB,GACvB,iBAAkB,IAClB,qBAAsB,GACtB,mBAAoB,GACpB,sBAAuB,GACvB,iBAAkB,IAClB,qBAAsB,GACtB,mBAAoB,GACpB,sBAAuB,GACvB,iBAAkB,IAClB,qBAAsB,GACtB,4BAA6B,GAC7B,+BAAgC,GAChC,0BAA2B,IAC3B,8BAA+B,GAC/B,4BAA6B,GAC7B,+BAAgC,GAChC,0BAA2B,IAC3B,8BAA+B,GAC/B,mBAAoB,GACpB,sBAAuB,GACvB,iBAAkB,IAClB,qBAAsB,GACtB,mBAAoB,GACpB,sBAAuB,GACvB,iBAAkB,IAClB,qBAAsB,GACtB,sBAAuB,GACvB,yBAA0B,GAC1B,oBAAqB,IACrB,wBAAyB,EACzB,mBAAoB,GACpB,sBAAuB,GACvB,iBAAkB,IAClB,qBAAsB,GACtB,mBAAoB,GACpB,sBAAuB,GACvB,iBAAkB,IAClB,qBAAsB,GACtB,mBAAoB,GACpB,sBAAuB,GACvB,iBAAkB,IAClB,qBAAsB,GACtB,yBAA0B,GAC1B,4BAA6B,GAC7B,uBAAwB,IACxB,2BAA4B,GAC5B,mBAAoB,GACpB,sBAAuB,GACvB,qBAAsB,IACtB,mBAAoB,GACpB,sBAAuB,GACvB,iBAAkB,IAClB,qBAAsB,GACtB,mBAAoB,GACpB,sBAAuB,GACvB,iBAAkB,IAClB,qBAAsB,GACtB,6BAA8B,GAC9B,gCAAiC,GACjC,2BAA4B,IAC5B,+BAAgC,GAChC,kBAAmB,GACnB,qBAAsB,GACtB,gBAAiB,IACjB,oBAAqB,GACrB,oBAAqB,GACrB,uBAAwB,GACxB,kBAAmB,IACnB,sBAAuB,GACvB,mBAAoB,GACpB,sBAAuB,GACvB,iBAAkB,IAClB,qBAAsB,GACtB,mBAAoB,GACpB,sBAAuB,GACvB,iBAAkB,IAClB,qBAAsB,GACtB,mBAAoB,GACpB,sBAAuB,GACvB,iBAAkB,IAClB,qBAAsB,GACtB,iCAAkC,GAClC,oCAAqC,GACrC,+BAAgC,IAChC,mCAAoC,GACpC,sBAAuB,GACvB,yBAA0B,GAC1B,oBAAqB,IACrB,wBAAyB,GACzB,mBAAoB,GACpB,sBAAuB,GACvB,iBAAkB,IAClB,qBAAsB,GACtB,kBAAmB,GACnB,qBAAsB,GACtB,gBAAiB,IACjB,oBAAqB,GACrB,0BAA2B,GAC3B,6BAA8B,GAC9B,wBAAyB,IACzB,4BAA6B,GAC7B,uBAAwB,GACxB,0BAA2B,GAC3B,qBAAsB,IACtB,yBAA0B,GAC1B,kBAAmB,GACnB,qBAAsB,GACtB,gBAAiB,IACjB,oBAAqB,GACrB,2BAA4B,GAC5B,8BAA+B,GAC/B,yBAA0B,IAC1B,6BAA8B,GAC9B,sBAAuB,GACvB,yBAA0B,GAC1B,oBAAqB,IACrB,wBAAyB,GACzB,mBAAoB,GACpB,sBAAuB,GACvB,iBAAkB,IAClB,qBAAsB,GACtB,0BAA2B,IAC3B,6BAA8B,IAC9B,wBAAyB,IACzB,4BAA6B,GAC7B,oBAAqB,IACrB,uBAAwB,IACxB,kBAAmB,IACnB,sBAAuB,GACvB,qBAAsB,IACtB,wBAAyB,IACzB,mBAAoB,IACpB,uBAAwB,GACxB,yBAA0B,IAC1B,4BAA6B,IAC7B,uBAAwB,IACxB,2BAA4B,GAC5B,mBAAoB,IACpB,sBAAuB,IACvB,iBAAkB,IAClB,qBAAsB,GACtB,yBAA0B,IAC1B,4BAA6B,IAC7B,uBAAwB,IACxB,2BAA4B,GAC5B,uBAAwB,IACxB,0BAA2B,IAC3B,qBAAsB,IACtB,yBAA0B,GAC1B,oBAAqB,IACrB,uBAAwB,IACxB,kBAAmB,IACnB,sBAAuB,GACvB,mBAAoB,IACpB,sBAAuB,IACvB,iBAAkB,IAClB,qBAAsB,GACtB,qBAAsB,IACtB,wBAAyB,IACzB,mBAAoB,IACpB,uBAAwB,GACxB,mBAAoB,IACpB,sBAAuB,IACvB,iBAAkB,IAClB,qBAAsB,GACtB,8BAA+B,IAC/B,iCAAkC,IAClC,4BAA6B,IAC7B,gCAAiC,GACjC,qBAAsB,IACtB,wBAAyB,IACzB,mBAAoB,IACpB,uBAAwB,GACxB,oBAAqB,IACrB,uBAAwB,IACxB,kBAAmB,IACnB,sBAAuB,GACvB,mBAAoB,IACpB,sBAAuB,IACvB,iBAAkB,IAClB,qBAAsB,IAIvB,SAASk6B,EAAeC,GACvB,IAAIx1B,EAAKy1B,EAAsBD,GAC/B,OAAO7iC,EAAoBqN,GAE5B,SAASy1B,EAAsBD,GAC9B,IAAI7iC,EAAoBa,EAAE6H,EAAKm6B,GAAM,CACpC,IAAI/vB,EAAI,IAAI/G,MAAM,uBAAyB82B,EAAM,KAEjD,MADA/vB,EAAE3F,KAAO,mBACH2F,EAEP,OAAOpK,EAAIm6B,GAEZD,EAAe55B,KAAO,WACrB,OAAOlI,OAAOkI,KAAKN,IAEpBk6B,EAAev8B,QAAUy8B,EACzB3iC,EAAOD,QAAU0iC,EACjBA,EAAev1B,GAAK,K,07CC7Nd/K,EAAa,0BAEb2mC,EAAW,CACfvb,IAAK,wBACLzgB,MAAO,QACPi8B,SAAU,MAOZ,SAAeC,I,0GACb,OAAIF,EAASC,SACX,GAAOD,EAASC,UAEK,GAAM5mC,EAAWrB,IAAI,iB,cAAtCmoC,EAAiB,UACnBF,EAA4D,QAAjD,EAAAE,EAAQljC,MAAK,SAACP,GAAS,OAAAA,EAAK+nB,MAAQub,EAAb,cAA0B,eAAE57B,IAC9D,MACa,GAAM/K,EAAW+mC,KAAK,eAAgBJ,I,OAA/CK,EAAS,SACfJ,GAAWI,aAAM,EAANA,EAAQj8B,KAAM,E,iBAG3B,OADA47B,EAASC,SAAWA,EACpB,GAAOA,WAMT,sBACQK,EAAUjnC,EAAW+mC,KAAKznC,KAAK,2BAC/B4nC,EAAWr6B,OAAOs6B,SAASC,SAASh/B,MAAM,KAAKpC,QAAO,SAAC3C,GAAS,OAAAA,KAAM,GAC5ErD,EAAW+mC,KAAO,SAAOrmC,EAAKoG,GAAI,qC,8DAEpB,2BAARpG,GAAoCoG,EAAKogC,WAAaA,EAAtD,OACF,EAAApgC,EAAgB,GAAM+/B,M,OAAtB,EAAKD,SAAW,S,iBAElB,SAAOK,EAAQvmC,EAAKoG,YAIxBugC,GAEA,iBAQE,WAAYhyB,EAAaiyB,EAAgBC,G,MACvC9mC,KAAK+mC,YAAYC,kBAAkBhnC,KAAKinC,WAAWpoC,KAAKmB,OACxDA,KAAK8mC,GAAKA,EAEL9mC,KAAKknC,WAERlnC,KAAKknC,SAAW,IAIlB,IAAMA,EAAWlnC,KAAKknC,UACjBA,EAAS/mC,WACZ+mC,EAAS/mC,SAAW,IAEtBH,KAAKmnC,YAAa,EACD,QAAb,EAAAnnC,KAAKknC,gBAAQ,eAAEE,WACGrpC,OAAOyT,OAAO,SAAO61B,aAAa9hC,QAAO,SAAC+hC,GAC5D,OAAOA,EAAG3xB,OAAS,OAEL3Q,OAAS,IACvBhF,KAAKmnC,YAAa,IA6C1B,OAzEA,sCAiCQ,YAAAI,aAAN,SAAmBC,EAAsBrB,G,gGAEjB,SAAM5mC,EAAWrB,IAAI,8BAAuBspC,K,OAElE,OAFQC,EAAc,SAAL,UAEjB,GAAMloC,EAAW+mC,KAAK,sBAAuB,CAC3CmB,UAAS,EACTtB,SAAQ,EACRr8B,QAAS,GACT49B,WAAW,K,cAJb,S,YAQI,YAAAC,gBAAN,W,iHAEmB,SAAMvB,K,OAEZ,OAFLD,EAAW,SAEN,GAAM5mC,EAAWrB,IAAI,uBAA6B,QAAb,EAAA8B,KAAKknC,gBAAQ,eAAE58B,GAAE,iB,OAajE,OAbM9C,EAAK,SAGLogC,EAASpgC,EAAG7B,KAAI,SAAC/C,GACb,IACF+nB,EADkB/nB,EAAL,YACK+E,MAAM,KAAK,GACnC,OAAIgjB,EACK,EAAK4c,aAAa5c,EAAKwb,GAEvB9iC,QAAQC,aAInB,GAAOD,QAAQ4D,IAAI2gC,YAGf,YAAAX,WAAN,W,gGACE,OAAkB,QAAb,EAAAjnC,KAAKknC,gBAAQ,eAAEE,SAIpB,GAAMpnC,KAAK2nC,mBAHT,I,OAIF,OADA,SACA,GAAO3nC,KAAK8mC,GAAGxjC,SAAQ,YAtElB,EAAAukC,YAAc,yBAwEvB,EAzEA","file":"components/config.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 179);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","import _ from 'lodash';\nimport moment from 'moment';\nimport DatasourceInterface from '../MonitorDatasource';\nimport {\n  GetRequestParams,\n  GetServiceAPIInfo,\n  ReplaceVariable,\n  GetDimensions,\n  ParseQueryResult,\n  SliceLength,\n} from '../../common/constants';\nimport instanceStorage from '../../common/datasourceStorage';\nimport { MetricQuery } from './types';\nimport { getNamesapceFromService } from '../../common/utils';\n\nexport interface TemplateQueryIdType {\n  instance: string;\n  listener?: string;\n}\n\ninterface queryConfigType {\n  dim_KeyInStorage: string;\n  dim_KeyInTarget?: string;\n  dim_KeyInIns?: string;\n  dim_KeyInMap: string;\n}\n\nexport abstract class BaseDatasource implements DatasourceInterface {\n  Namespace?: string;\n  service: string;\n  instanceListCache: any[] = [];\n  extraMetricDims: string[] = [];\n  url: string;\n  instanceSettings: any;\n  backendSrv: any;\n  templateSrv: any;\n  secretId: string;\n  checkKeys: string[] = [];\n  MetricReqConfig: {\n    resultFilter?: Function;\n  } = {};\n  extrasAlias?: string[] = [];\n  /*\n  一个配置：(用于处理除了InstanceId之外的)(Record中的key是指标修正之后的维度，即通过InvalidDemsion处理后)\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget 通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。为空则取即通过InvalidDemsion处理后的key\n  3 dim_KeyInMap 保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。即：templateQueryIdMap中内容。联合上面2的内容筛选出原始sourceMap\n  4 通过这个dim和sourceMap获取维度值。即sourceMap[dim]\n  */\n  queryMonitorExtraConfg: Record<string, queryConfigType> = {};\n  CandiateDimensions?: Record<string, string> = {};\n\n  InstanceReqConfig?: {\n    service?: string;\n    action: string;\n    responseField: string;\n    interceptor?: {\n      request?: (params: unknown) => unknown;\n      response?: (data: unknown) => unknown;\n    };\n  };\n\n  InvalidDimensions?: Record<string, string>;\n\n  abstract InstanceAliasList: string[];\n  abstract templateQueryIdMap: TemplateQueryIdType; // 必须为标识\n\n  /** @ngInject */\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    this.instanceSettings = instanceSettings;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.url = instanceSettings.url;\n    this.secretId = (instanceSettings.jsonData || {}).secretId || '';\n  }\n\n  get namespace() {\n    // 需要注意的是this.service来自于原型上，在实例中导入时注入\n    return this.Namespace || getNamesapceFromService(this.service);\n  }\n\n  // 获取额外要显示到图例里的内容\n  getOtherAlias(instance: any, target: any): string {\n    let result = '';\n    const alias = instance._InstanceAliasValue;\n    this.extrasAlias?.forEach((extra) => {\n      const extraAlia = this.getVariable(target[extra]);\n      if (extraAlia && alias.indexOf(extraAlia) === -1) {\n        result += ` - ${extraAlia}`;\n      }\n    });\n    return result;\n  }\n\n  /* 格式化模板变量上的显示 */\n  getAliasValue(instance: Record<string, any>, alias: string) {\n    const result = instance[alias];\n    return Array.isArray(result) ? result.join() : result;\n  }\n\n  formatVarDisplay(instance: Record<string, any>, displayTpl: string | undefined, instanceAlias: string) {\n    // 获取display=aaa${InstanceName}bbb${InstanceId}ccc\n    if (displayTpl) {\n      return displayTpl.replace(/\\$\\{(\\w+)\\}/g, (a, b) => {\n        if (!b || !this.InstanceAliasList.includes(b)) {\n          return '';\n        }\n        return this.getAliasValue(instance, b);\n      });\n    }\n    return this.getAliasValue(instance, instanceAlias);\n  }\n  /**\n   * @param query 模板变量配置填写的 Query 参数对象，由顶层将字符串转换为了对象\n   */\n  async metricFindQuery(query: MetricQuery, regex?: string) {\n    const { action, namespace, display, payload = {} } = query;\n    let { region, instancealias = this.templateQueryIdMap.instance } = query;\n    if (!action || !namespace) {\n      return [];\n    }\n\n    // 查询地域列表\n    const regionQuery = action.match(/^DescribeRegions$/i);\n    if (regionQuery) {\n      return this.getRegions();\n    }\n\n    region = this.getVariable(region); // 将模板region转换为真实值\n\n    // 查询实例列表\n    if (region && action.match(/^DescribeInstances/i)) {\n      const result = await this.getVariableInstances(region, payload);\n      instancealias = this.InstanceAliasList.includes(instancealias) ? instancealias : this.templateQueryIdMap.instance;\n\n      const res = result.flatMap((item) => {\n        const insAlias = this.formatVarDisplay(item, display, instancealias);\n\n        item._InstanceAliasValue = insAlias; // FIXME:\n        // console.log(insAlias,item[this.templateQueryIdMap.instance]);\n\n        if (!item[instancealias]) return [];\n        return [\n          {\n            text: insAlias,\n            value: item[this.templateQueryIdMap.instance],\n          },\n        ];\n      });\n\n      // 缓存全量实例列表\n      await instanceStorage.setInstance(this.service, result);\n      return res;\n    }\n\n    // 在instance实例的基础上查询其他数据\n    let instance = this.getVariable(query['instance']);\n    if (_.isArray(instance)) instance = instance[0]; // 有额外维度，仅支持实例单选情况\n    if (region && action && instance) {\n      try {\n        // instance = JSON.parse(instance);\n        const instanceCache = await instanceStorage.getInstance(this.service);\n        // console.log({ instanceCache });\n\n        instance = _.cloneDeep(instanceCache.find((item) => item[this.templateQueryIdMap.instance] === instance)) ?? {};\n        // eslint-disable-next-line no-empty\n      } catch (error) {}\n      return this.fetchMetricData(action, region, instance, query);\n    }\n\n    return Promise.resolve([]);\n  }\n  // 获取指标数据\n  async fetchMetricData(action: string, region: string, instance: any, query?: any) {\n    return [];\n  }\n\n  /**\n   * 根据 Panel 的配置项，获取相应的监控数据\n   *\n   * @param options Panel 的配置参数\n   * @return 返回数据数组，示例如下\n   * [\n   *   {\n   *     \"target\": \"AccOuttraffic - ins-123\",\n   *     \"datapoints\": [\n   *       [861, 1450754160000],\n   *       [767, 1450754220000]\n   *     ]\n   *   }\n   * ]\n   */\n  async dimensionsFormat(dimKeys, ins, dimensionObject, target, service, options) {\n    for (let key of dimKeys) {\n      let keyTmp = key;\n      const invalidDim = this.InvalidDimensions || this.getInvalidDimensions(this, target[service]);\n      if (invalidDim[key]) {\n        // 从【维度中】的字段到【实例中】字段的映射。 { functionName: FunctionName }\n        keyTmp = invalidDim[key];\n        ins[key] = ins[keyTmp];\n      }\n\n      let extraDimValue = this.getVariable(target[service][keyTmp]);\n      if (this.queryMonitorExtraConfg[keyTmp]) {\n        const {\n          dim_KeyInStorage,\n          dim_KeyInTarget = keyTmp,\n          dim_KeyInMap,\n          dim_KeyInIns,\n        } = this.queryMonitorExtraConfg[keyTmp];\n        let extraIns = ReplaceVariable(this.templateSrv, options.scopedVars, target[service][dim_KeyInTarget], true);\n        let extraSourceMap: any = {};\n        try {\n          extraSourceMap = JSON.parse(extraIns); // 兼容json字符串的 形式\n        } catch (error) {\n          if (_.isArray(extraIns)) extraIns = extraIns[0]; // 如果多个，取第一个。除了实例ID 暂不支持其他纬度多选\n          const extraStorage = await instanceStorage.getExtraStorage(this.service, dim_KeyInStorage);\n          // console.log({ extraStorage });\n          extraSourceMap =\n            extraStorage?.find((item) => {\n              if (_.isArray(item[dim_KeyInMap])) {\n                return item[dim_KeyInMap][0] === extraIns;\n              }\n              return item[dim_KeyInMap] === extraIns;\n            }) ?? {};\n        }\n        const isStringOrNumber = _.isString(extraSourceMap) || _.isNumber(extraSourceMap);\n        // 增加ins实例之外的alias，填入到ins._InstanceAliasValue\n        const insAlias = ins._InstanceAliasValue;\n        const otherAlias = isStringOrNumber ? extraSourceMap : extraSourceMap._InstanceAliasValue;\n        if (otherAlias && insAlias.indexOf(otherAlias) === -1) {\n          ins._InstanceAliasValue += ` - ${otherAlias}`;\n        }\n\n        extraDimValue = isStringOrNumber ? extraSourceMap : extraSourceMap?.[dim_KeyInIns || keyTmp];\n      } else {\n        ins._InstanceAliasValue += this.getOtherAlias(ins, target[service]);\n      }\n      // 设置instance，针对额外的维度，需要注意模板变量的值\n      // ins[key] = ins[keyTmp] ?? extraDimValue;\n      ins[key] = this.getDimensionsVal(ins, keyTmp, extraDimValue);\n      // cynosdb产品接口返回维度和入参不一致\n      if (this.checkKeys.length > 0) {\n        this.checkKeys.forEach((Ekey) => {\n          ins[Ekey] = ins[key];\n        });\n      }\n      dimensionObject[key] = { Name: key, Value: ins[key] };\n    }\n    return dimensionObject;\n  }\n  getDimensionsVal(ins: Record<string, any>, key: string, extraDimValue: string) {\n    let dimVal = ins[key];\n    if (_.isEmpty(dimVal) && this.CandiateDimensions[key]) {\n      dimVal = ins[this.CandiateDimensions[key]];\n    }\n    return dimVal ?? extraDimValue;\n  }\n  query(options: any) {\n    const service = this.service!; // 强制声明非空\n    // console.log('query');\n\n    const queries = _.filter(options.targets, (item) => {\n      // 过滤无效的查询 target\n      return (\n        item.hide !== true &&\n        !!item.namespace &&\n        !!item[service].metricName &&\n        !_.isEmpty(ReplaceVariable(this.templateSrv, options.scopedVars, item[service].region, false)) &&\n        !_.isEmpty(ReplaceVariable(this.templateSrv, options.scopedVars, item[service].instance, true))\n      );\n    }).map(async (target) => {\n      // 实例 instances 可能为模板变量，需先获取实际值\n      // 针对JSON字符串和id的形式，分开做处理\n      let instances = ReplaceVariable(this.templateSrv, options.scopedVars, target[service].instance, true);\n      const instanceCache = await instanceStorage.getInstance(this.service);\n      // console.log({ instanceCache });\n      instances = [].concat(instances).map((inst) => {\n        try {\n          return JSON.parse(inst); // 兼容json字符串的 形式\n        } catch (error) {\n          return _.cloneDeep(instanceCache.find((item) => item[this.templateQueryIdMap.instance] === inst)) ?? {};\n        }\n      });\n      const region = ReplaceVariable(this.templateSrv, options.scopedVars, target[service].region, false);\n      const insInReq: any = [];\n      for (let ins of instances) {\n        const dimensionObject = target[service].dimensionObject;\n        // 处理dimensions的值\n        const dimKeys = Object.keys(dimensionObject);\n        const dimResult = await this.dimensionsFormat(dimKeys, ins, dimensionObject, target, service, options);\n        // console.log({dimResult})\n        insInReq.push([{ Dimensions: GetDimensions(dimResult) }]);\n      }\n      const data = {\n        StartTime: moment(options.range.from).format(),\n        EndTime: moment(options.range.to).format(),\n        Period: target[service].period || 300,\n        Instances: _.flatMap(insInReq),\n        Namespace: target.namespace,\n        MetricName: target[service].metricName,\n      };\n      return this.getMonitorData(data, region, instances);\n    });\n\n    if (queries.length === 0) {\n      return [];\n    }\n\n    return Promise.all(queries)\n      .then((responses) => {\n        return _.flatten(responses);\n      })\n      .catch((error) => {\n        return [];\n      });\n  }\n  getInstanceReqConfig(selfIns: any) {\n    return {} as any;\n  }\n  getInvalidDimensions(selfIns: any, target?: any) {\n    return {} as any;\n  }\n  // 获取某个变量的实际值，this.templateSrv.replace() 函数返回实际值的字符串\n  getVariable(metric?: string) {\n    const rs = this.templateSrv.replace((metric || '').trim());\n    const valStr = rs.match(/\\{([\\w-,]+)\\}/);\n    // 判断是否为多选\n    if (valStr) {\n      return valStr[1].split(',');\n    }\n    return rs;\n  }\n\n  /**\n   * 获取 监控数据\n   * @param params 获取监控数据的请求参数\n   * @param region 地域信息\n   * @param instances 实例列表，用于对返回结果的匹配解析\n   */\n  getMonitorData(params, region, instances) {\n    const serviceInfo = GetServiceAPIInfo(region, 'monitor');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: params,\n      },\n      serviceInfo.service,\n      { action: 'GetMonitorData', region }\n    ).then((response) => {\n      return ParseQueryResult(response, instances);\n      // return this.getOtherAlias(response,instances)\n    });\n  }\n\n  getRegions(): any {\n    return this.doRequest(\n      {\n        url: this.url + '/cvm',\n      },\n      'cvm',\n      { action: 'DescribeRegions' }\n    ).then((response) => {\n      return _.filter(\n        _.map(response.RegionSet || [], (item) => {\n          return {\n            text: item.RegionName,\n            value: item.Region,\n            RegionState: item.RegionState,\n          };\n        }),\n        (item) => item.RegionState === 'AVAILABLE'\n      );\n    });\n  }\n\n  getMetrics(region = 'ap-guangzhou'): Promise<any> {\n    const serviceInfo = GetServiceAPIInfo(region, 'monitor');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: {\n          Namespace: this.namespace,\n        },\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeBaseMetrics' }\n    ).then((response) => {\n      const res = _.filter(\n        _.filter(response.MetricSet || [], (item) => !(item.Namespace !== this.namespace || !item.MetricName))\n      );\n      const resFilterFn = this.MetricReqConfig.resultFilter;\n      if (resFilterFn) {\n        return res.map((item) => resFilterFn(item));\n      }\n      return res;\n    });\n  }\n\n  getInstances(region, params = {}) {\n    const {\n      service = this.service,\n      action,\n      responseField: field,\n      interceptor,\n    } = this.InstanceReqConfig || this.getInstanceReqConfig(this);\n    params = { Offset: 0, Limit: 100, ...params };\n    const serviceInfo = GetServiceAPIInfo(region, service);\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: interceptor?.request ? interceptor.request(params) : params,\n      },\n      serviceInfo.service,\n      { region, action }\n    ).then((response) => {\n      // 处理异常，则不按正常的情况处理，直接抛出错误\n      if (response?.Error) {\n        console.error(response.Error);\n        return response;\n      }\n\n      let result;\n      // 先，field处理\n      if (field) {\n        result = _.get(response, field) ?? _.get(response, `Result.${field}`) ?? [];\n      }\n\n      // 后，拦截器处理\n      if (interceptor?.response) {\n        result = interceptor.response(result);\n      }\n      return result;\n    });\n  }\n\n  getVariableInstances(region, query = {}): Promise<any[]> {\n    let result: any[] = [];\n    const params = { ...query, ...{ Offset: 0, Limit: 100 } };\n\n    const {\n      service = this.service,\n      action,\n      responseField: field,\n      interceptor,\n    } = this.InstanceReqConfig || this.getInstanceReqConfig(this);\n\n    const serviceInfo = GetServiceAPIInfo(region, service);\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: interceptor?.request ? interceptor.request(params) : params,\n      },\n      serviceInfo.service,\n      { region, action }\n    ).then((response) => {\n      result = _.get(response, field) ?? _.get(response, `Result.${field}`) ?? [];\n      const total = response.TotalCount ?? response.TotalCnt ?? _.get(response, `Result.TotalCount`) ?? 0;\n      if (result.length >= total) {\n        return result;\n      } else {\n        const param = SliceLength(total, 100);\n        const promises: any[] = [];\n        _.forEach(param, (item) => {\n          promises.push(this.getInstances(region, { ...item, ...query }));\n        });\n        return Promise.all(promises)\n          .then((responses) => {\n            _.forEach(responses, (item) => {\n              result = _.concat(result, item);\n            });\n            return result;\n          })\n          .catch((error) => {\n            return result;\n          });\n      }\n    });\n  }\n\n  // 检查某变量字段是否有值\n  isValidConfigField(field: string) {\n    return field && field.length > 0;\n  }\n\n  testDatasource() {\n    // const { service = this.service, action } = this.InstanceReqConfig;\n    // const serviceInfo = GetServiceAPIInfo('ap-guangzhou', service);\n\n    if (!this.isValidConfigField(this.secretId)) {\n      return {\n        service: this.service,\n        status: 'error',\n        message: 'The SecretId/SecretKey field is required.',\n      };\n    }\n\n    return Promise.all([\n      this.getRegions(),\n      this.getMetrics(),\n      // this.doRequest(\n      //   {\n      //     url: this.url + serviceInfo.path,\n      //     data: {\n      //       Offset: 0,\n      //       Limit: 1,\n      //     },\n      //   },\n      //   service,\n      //   { region: 'ap-guangzhou', action },\n      // ),\n      this.getInstances('ap-guangzhou', {\n        Offset: 0,\n        Limit: 1,\n      }),\n    ])\n      .then((responses) => {\n        const cvmErr = _.get(responses, '[0].Error', {});\n        const monitorErr = _.get(responses, '[1].Error', {});\n        const serviceErr = _.get(responses, '[2].Error', {});\n        // const cvmAuthFail = _.get(cvmErr, 'Code', '').indexOf('AuthFailure') !== -1;\n        // const monitorAuthFail = _.get(monitorErr, 'Code', '').indexOf('AuthFailure') !== -1;\n        // const serviceAuthFail = _.get(serviceErr, 'Code', '').indexOf('AuthFailure') !== -1;\n        const cvmAuthFail = _.get(cvmErr, 'Code', '');\n        const monitorAuthFail = _.get(monitorErr, 'Code', '');\n        const serviceAuthFail = _.get(serviceErr, 'Code', '');\n        if (cvmAuthFail || monitorAuthFail || serviceAuthFail) {\n          const messages: any[] = [];\n          if (cvmAuthFail) {\n            messages.push(_.get(cvmErr, 'Code'));\n          }\n          if (monitorAuthFail) {\n            messages.push(_.get(monitorErr, 'Code'));\n          }\n          if (serviceAuthFail) {\n            messages.push(_.get(serviceErr, 'Code'));\n          }\n          const message = _.join(_.compact(_.uniq(messages)), '; ');\n          return {\n            service: this.service,\n            status: 'error',\n            message,\n          };\n        } else {\n          return {\n            namespace: this.namespace,\n            service: this.service,\n            status: 'success',\n            message: `Successfully queried the ${this.service} service.`,\n            title: 'Success',\n          };\n        }\n      })\n      .catch((error) => {\n        let message = `${this.service} service:`;\n        message += error.statusText ? error.statusText + '; ' : '';\n        if (_.get(error, 'data.error.code', '')) {\n          message += error.data.error.code + '. ' + error.data.error.message;\n        } else if (_.get(error, 'data.error', '')) {\n          message += error.data.error;\n        } else if (_.get(error, 'data', '')) {\n          message += error.data;\n        } else {\n          message += `Cannot connect to ${this.service} service.`;\n        }\n        return {\n          service: this.service,\n          status: 'error',\n          message: message,\n        };\n      });\n  }\n\n  async doRequest(options, service, signObj: any = {}) {\n    options = await GetRequestParams(\n      options,\n      service,\n      signObj,\n      this.secretId,\n      this.instanceSettings.id,\n      this.backendSrv\n    );\n    return this.backendSrv\n      .datasourceRequest(options)\n      .then((response) => {\n        return _.get(response, 'data.Response', {});\n      })\n      .catch((error) => {\n        throw error;\n      });\n  }\n}\n","import moment from 'moment';\n\nconst HttpRequestMethod = 'POST';\nconst CanonicalUri = '/';\nconst CanonicalQueryString = '';\nconst ContentType = 'application/json';\n\nexport default class Sign {\n  /**\n   * Tencent Cloud API Signature v3 reference: https://cloud.tencent.com/document/api/213/30654\n   * secretId: SecretId for identifying identity that is applied for on Cloud API Key.\n   * A SecretId corresponds to a unique SecretKey, which is used to generate the request Signature.\n   * secretKey: SecretKey is used to encrypt the signature string and verify the signature string on the server\n   * service: the name of service, which must be consistent with the request domain, such as cvm\n   * action: The name of the API for the desired operation\n   * host: the domain of service，which must be consistent with the request domain, such as cvm.tencentcloudapi.com\n   * version:  PI version, such as 2017-03-12\n   * payload: The request parameters\n   */\n\n  secretId: string;\n\n  service: string;\n  action: string;\n  host: string;\n  version: string;\n  payload: Record<string, any> | string;\n  region: string;\n  timestamp: number;\n  date: string;\n  backendSrv: any;\n  datasourceId: Number;\n  constructor(options) {\n    const { secretId, service, action, host, version, payload = '', region, backendSrv, datasourceId } = options;\n    this.secretId = secretId;\n    // this.secretKey = secretKey;\n    this.service = service;\n    this.action = action;\n    this.host = host;\n    this.version = version;\n    this.payload = typeof payload === 'string' ? payload : JSON.stringify(payload);\n    this.region = region;\n    const nowDate = moment().utc();\n    this.timestamp = nowDate.unix();\n    this.date = nowDate.format('YYYY-MM-DD');\n    this.backendSrv = backendSrv;\n    this.datasourceId = datasourceId;\n  }\n\n  async getHeader() {\n    return this.getResourceHeader();\n  }\n\n  async getResourceHeader() {\n    let res: { authorization?: string; token?: string; intranet?: boolean } = {};\n    try {\n      const resp = await this.backendSrv.datasourceRequest({\n        url: `/api/datasources/${this.datasourceId}/resources/sign_v3`,\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        data: {\n          Host: this.host,\n          Service: this.service,\n          Version: this.version,\n          Action: this.action,\n          Region: this.region,\n          Timestamp: this.timestamp,\n          Method: HttpRequestMethod,\n          Uri: CanonicalUri,\n          Query: CanonicalQueryString,\n          Body: this.payload,\n          Headers: {\n            'content-type': ContentType,\n            host: this.host,\n          },\n        },\n      });\n      res = resp.data;\n    } catch (err) {}\n    const { authorization, token, intranet } = res;\n    const grafanaVersion = (window as any).grafanaBootData?.settings?.buildInfo?.version || '0.0.0';\n    const headers = {\n      Authorization: authorization,\n      'Content-Type': ContentType,\n      'X-TC-Action': this.action,\n      'X-TC-Timestamp': this.timestamp.toString(),\n      'X-TC-Version': this.version,\n      'X-TC-RequestClient': `GF_${grafanaVersion}_PL_CM_${process.env.TENCENT_CLOUD_MONITOR_GRAFANA_PLUGIN_VERSION}`,\n      ...(this.region && {\n        'X-TC-Region': this.region,\n      }),\n      ...(token && {\n        'X-TC-Token': token,\n      }),\n      intranet: intranet,\n    };\n    return headers;\n  }\n}\n","/**\n *\n * @param defaults 为对象\n * secretId\n * secretKey\n * action\n * region\n * host\n */\n\nexport default class SignV2 {\n  defaults: any = {\n    path: '/v2/index.php',\n    method: 'POST',\n  };\n  backendSrv: any;\n  datasourceId: Number;\n  constructor(defaults: any = {}) {\n    this.defaults = Object.assign(this.defaults, defaults);\n    this.defaults.secretKey = '';\n    this.backendSrv = defaults.backendSrv;\n    this.datasourceId = defaults.datasourceId;\n  }\n\n  generateQueryString = async () => {\n    return this.getResourceQueryString();\n  };\n\n  async getResourceQueryString() {\n    let res: { path?: string; querystring?: any; host?: string; intranet?: boolean } = {};\n    try {\n      const { data } = this.defaults;\n      const payload = typeof data === 'string' ? data : JSON.stringify(data);\n      const resp = await this.backendSrv.datasourceRequest({\n        url: `/api/datasources/${this.datasourceId}/resources/sign_v2`,\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        data: {\n          Host: this.defaults.host,\n          Action: this.defaults.action,\n          Version: this.defaults.version,\n          Region: this.defaults.region,\n          Method: this.defaults.method,\n          Uri: this.defaults.path,\n          Query: '',\n          Body: payload,\n        },\n      });\n      res = resp.data;\n    } catch (err) {}\n    const { path, querystring, host, intranet } = res;\n    return { queryString: querystring, path: path, host: host, intranet: intranet };\n  }\n}\n","import _ from 'lodash';\nimport qs from 'qs';\nimport { SERVICES } from '../tc_monitor';\nimport Sign from './sign';\nimport SignV2 from './signV2';\nimport { toDataQueryResponse } from '@grafana/runtime';\n\nimport packageInfo from '../plugin.json';\nexport const TcDataSourceId = packageInfo.id;\n\n// the services of tencentcloud monitor api\nconst FINACE_REGIONS = ['ap-shanghai-fsi', 'ap-shenzhen-fsi'];\nconst SERVICES_API_INFO = {\n  api: {\n    service: 'api',\n    version: '2020-11-06',\n    path: '/api',\n    host: 'api.tencentcloudapi.com',\n  },\n  // monitor api info\n  monitor: {\n    service: 'monitor',\n    version: '2018-07-24',\n    path: '/monitor',\n    host: 'monitor.tencentcloudapi.com',\n  },\n  // cls api info\n  cls: {\n    service: 'cls',\n    version: '2020-10-16',\n    path: '/cls',\n    host: 'cls.tencentcloudapi.com',\n  },\n  // cvm api info\n  cvm: {\n    service: 'cvm',\n    version: '2017-03-12',\n    path: '/cvm',\n    host: 'cvm.tencentcloudapi.com',\n  },\n  // cdb api info\n  cdb: {\n    service: 'cdb',\n    version: '2017-03-20',\n    path: '/cdb',\n    host: 'cdb.tencentcloudapi.com',\n  },\n  // pcx api info\n  pcx: {\n    service: 'pcx',\n    version: '',\n    path: '/pcx',\n    host: 'vpc.api.qcloud.com',\n  },\n  // vpc api info\n  vpc: {\n    service: 'vpc',\n    version: '2017-03-12',\n    path: '/vpc',\n    host: 'vpc.tencentcloudapi.com',\n  },\n  // mongodb api info\n  mongodb: {\n    service: 'mongodb',\n    version: '2019-07-25',\n    path: '/mongodb',\n    host: 'mongodb.tencentcloudapi.com',\n  },\n  // 负载均衡 clb\n  clb: {\n    service: 'clb',\n    version: '2018-03-17',\n    path: '/clb',\n    host: 'clb.tencentcloudapi.com',\n  },\n  // postgresql api info\n  postgres: {\n    service: 'postgres',\n    version: '2017-03-12',\n    path: '/postgres',\n    host: 'postgres.tencentcloudapi.com',\n  },\n  // cdn info\n  cdn: {\n    service: 'cdn',\n    version: '2018-06-06',\n    path: '/cdn',\n    host: 'cdn.tencentcloudapi.com',\n  },\n  // redis info\n  redis: {\n    service: 'redis',\n    version: '2018-04-12',\n    path: '/redis',\n    host: 'redis.tencentcloudapi.com',\n  },\n  scf: {\n    service: 'scf',\n    version: '2018-04-16',\n    path: '/scf',\n    host: 'scf.tencentcloudapi.com',\n  },\n  cfs: {\n    service: 'cfs',\n    version: '2019-07-19',\n    path: '/cfs',\n    host: 'cfs.tencentcloudapi.com',\n  },\n  ckafka: {\n    service: 'ckafka',\n    version: '2019-08-19',\n    path: '/ckafka',\n    host: 'ckafka.tencentcloudapi.com',\n  },\n  // 专线接入实例列表\n  dc: {\n    service: 'dc',\n    version: '2018-04-10',\n    path: '/dc',\n    host: 'dc.tencentcloudapi.com',\n  },\n  // cynosdb实例列表\n  cynosdb: {\n    service: 'cynosdb',\n    version: '2019-01-07',\n    path: '/cynosdb',\n    host: 'cynosdb.tencentcloudapi.com',\n  },\n  // sqlserver实例列表\n  sqlserver: {\n    service: 'sqlserver',\n    version: '2018-03-28',\n    path: '/sqlserver',\n    host: 'sqlserver.tencentcloudapi.com',\n  },\n  // bm实例列表\n  bm: {\n    service: 'bm',\n    version: '2018-04-23',\n    path: '/bm',\n    host: 'bm.tencentcloudapi.com',\n  },\n  bmeip: {\n    service: 'bmeip',\n    version: '2018-06-25',\n    path: '/bmeip',\n    host: 'bmeip.tencentcloudapi.com',\n  },\n  bmvpc: {\n    service: 'bmvpc',\n    version: '2018-06-25',\n    path: '/bmvpc',\n    host: 'bmvpc.tencentcloudapi.com',\n  },\n  bmlb: {\n    service: 'bmlb',\n    version: '2018-06-25',\n    path: '/bmlb',\n    host: 'bmlb.tencentcloudapi.com',\n  },\n  // ES集群实例\n  es: {\n    service: 'es',\n    version: '2018-04-16',\n    path: '/es',\n    host: 'es.tencentcloudapi.com',\n  },\n  // MapReduce\n  emr: {\n    service: 'emr',\n    version: '2019-01-03',\n    path: '/emr',\n    host: 'emr.tencentcloudapi.com',\n  },\n  // CMQ消息队列\n  cmq: {\n    service: 'cmq',\n    version: '2019-03-04',\n    path: '/cmq',\n    host: 'cmq.tencentcloudapi.com',\n  },\n  cbs: {\n    service: 'cbs',\n    version: '2017-03-12',\n    path: '/cbs',\n    host: 'cbs.tencentcloudapi.com',\n  },\n  // tcaplus实例\n  tcaplusdb: {\n    service: 'tcaplusdb',\n    version: '2019-08-23',\n    path: '/tcaplusdb',\n    host: 'tcaplusdb.tencentcloudapi.com',\n  },\n  // tcaplus实例\n  dcdb: {\n    service: 'dcdb',\n    version: '2018-04-11',\n    path: '/dcdb',\n    host: 'dcdb.tencentcloudapi.com',\n  },\n  // apigateway实例\n  apigateway: {\n    service: 'apigateway',\n    version: '2018-08-08',\n    path: '/apigateway',\n    host: 'apigateway.tencentcloudapi.com',\n  },\n  tdmq: {\n    service: 'tdmq',\n    version: '2020-02-17',\n    path: '/tdmq',\n    host: 'tdmq.tencentcloudapi.com',\n  },\n  gaap: {\n    service: 'gaap',\n    version: '2018-05-29',\n    path: '/gaap',\n    host: 'gaap.tencentcloudapi.com',\n  },\n  ecm: {\n    service: 'ecm',\n    version: '2019-07-19',\n    path: '/ecm',\n    host: 'ecm.tencentcloudapi.com',\n  },\n  gse: {\n    service: 'gse',\n    version: '2019-11-12',\n    path: '/gse',\n    host: 'gse.tencentcloudapi.com',\n  },\n  lighthouse: {\n    service: 'lighthouse',\n    version: '2020-03-24',\n    path: '/lighthouse',\n    host: 'lighthouse.tencentcloudapi.com',\n  },\n  tsf: {\n    service: 'tsf',\n    version: '2018-03-26',\n    path: '/tsf',\n    host: 'tsf.tencentcloudapi.com',\n  },\n  // 不单独定义lb，因为lb同样用的是vpc的配置，同上\n  // lb: {\n  //   service: 'lb',\n  //   version: '2017-03-12',\n  //   path: '/lb',\n  //   host: 'vpc.tencentcloudapi.com'\n  // }\n  // 负载均衡四层协议 lbPrivate\n  // lbPrivate: {\n  //   service: 'lbPrivate',\n  //   version: '2018-03-17',\n  //   path: '/clb',\n  //   host: 'clb.tencentcloudapi.com',\n  // },\n};\n\nconst FINACE_HOST = {\n  scf: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/scf/shanghai',\n      host: 'scf.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/scf/shenzhen',\n      host: 'scf.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  cfs: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/cfs/shanghai',\n      host: 'cfs.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/cfs/shenzhen',\n      host: 'cfs.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  ckafka: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/ckafka/shanghai',\n      host: 'ckafka.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/ckafka/shenzhen',\n      host: 'ckafka.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  clb: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/clb/shanghai',\n      host: 'clb.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/clb/shenzhen',\n      host: 'clb.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  mongodb: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/mongodb/shanghai',\n      host: 'mongodb.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/mongodb/shenzhen',\n      host: 'mongodb.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  vpc: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/vpc/shanghai',\n      host: 'vpc.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/vpc/shenzhen',\n      host: 'vpc.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  cvm: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/cvm/shanghai',\n      host: 'cvm.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/cvm/shenzhen',\n      host: 'cvm.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  cdb: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/cdb/shanghai',\n      host: 'cdb.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/cdb/shenzhen',\n      host: 'cdb.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  monitor: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/monitor/shanghai',\n      host: 'monitor.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/monitor/shenzhen',\n      host: 'monitor.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  postgres: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/postgres/shanghai',\n      host: 'postgres.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/postgres/shenzhen',\n      host: 'postgres.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  emr: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/emr/shanghai',\n      host: 'emr.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/emr/shenzhen',\n      host: 'emr.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  cmq: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/cmq/shanghai',\n      host: 'cmq.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/cmq/shenzhen',\n      host: 'cmq.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  cls: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/cls/shanghai',\n      host: 'cls.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/cls/shenzhen',\n      host: 'cls.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n};\n\n// 获取对应业务的 API 接口信息\nexport function GetServiceAPIInfo(region, service) {\n  return { ...(SERVICES_API_INFO[service] || {}), ...getHostAndPath(region, service) };\n}\n\n// get host and path for finance regions\nfunction getHostAndPath(region, service) {\n  if (_.indexOf(FINACE_REGIONS, region) === -1) {\n    return {};\n  }\n  return (\n    _.find(\n      _.find(FINACE_HOST, (__, key) => key === service),\n      (__, key) => key === region\n    ) || {}\n  );\n}\n\n// 变量替换指定实例按照那个字段展示\nexport const VARIABLE_ALIAS = 'instancealias';\n\nexport function GetServiceFromNamespace(namespace) {\n  return _.get(\n    _.find(SERVICES, (service) => service.namespace === namespace),\n    'service'\n  );\n}\n// 处理存量target中保存的qce/cvm\nexport function GetLabelFromNamespace(namespace) {\n  return _.get(\n    _.find(SERVICES, (service) => service.namespace === namespace || service.label === namespace),\n    'label'\n  );\n}\n// parse template variable query params\nexport function ParseMetricQuery(query = '') {\n  if (!query) {\n    return {};\n  }\n  const result = {};\n  const queries = _.split(query, '&');\n  _.forEach(queries, (item) => {\n    const str = _.split(item, '=');\n    if (_.trim(_.get(str, '0', ''))) {\n      let val = _.trim(_.get(str, '1', ''));\n      try {\n        val = JSON.parse(val);\n      } catch (e) {\n        // console.log({ val });\n      }\n      result[_.toLower(_.trim(_.get(str, '0', '')))] = val;\n    }\n  });\n  return result;\n}\n\n// parse template variable regex params\nexport function ParseMetricRegex(regex = '') {\n  if (!regex) {\n    return [];\n  }\n  regex = regex.replace(/：/g, ':');\n  regex = regex.replace(/，/g, ',');\n  const regexParams = ParseMetricQuery(regex);\n  const result: any[] = [];\n  _.forEach(regexParams, (value, key) => {\n    if (key === 'tag:tag-key') {\n      const valuesArr = _.split(value, ',');\n      _.forEach(valuesArr, (item) => {\n        const temp = _.split(item, ':');\n        if (temp.length === 2) {\n          result.push({ Name: `tag:${temp[0]}`, Values: temp.slice(1) });\n        }\n      });\n    } else {\n      result.push({ Name: key, Values: _.split(value, ',') });\n    }\n  });\n  return result;\n}\n\n// get the actual value of template variable\nfunction parseVariableFormat(varname: string) {\n  varname = String(varname || '');\n  // $varname\n  let varFlag = false;\n  const regResult1 = varname.match(/^\\${?(\\w+)}?/);\n  if (regResult1) {\n    varFlag = true;\n    varname = `\\$\\{${regResult1[1]}\\:json\\}`;\n  }\n  // [[varname]]\n  const regResult2 = varname.match(/^\\[\\[(\\w+)(\\:\\w+)?\\]\\]/);\n  if (regResult2) {\n    varFlag = true;\n    varname = `\\$\\{${regResult2[1]}\\:json\\}`;\n  }\n  return { varname, varFlag };\n}\n\nexport function ReplaceVariable(templateSrv, scopedVars, field, multiple = false) {\n  const { varname, varFlag } = parseVariableFormat(field);\n  let replaceVar = templateSrv.replace(varname, scopedVars);\n  if (varFlag) {\n    try {\n      replaceVar = JSON.parse(replaceVar);\n    } catch (error) {}\n  }\n  if (!multiple && _.isArray(replaceVar)) {\n    replaceVar = _.get(replaceVar, '0', '');\n  }\n  return replaceVar;\n}\n\n// get dimensions for instance query param\nexport function GetDimensions(obj) {\n  if (_.isEmpty(obj)) {\n    return [];\n  }\n  const dimensions: any[] = [];\n  _.forEach(obj, (item) => {\n    if (item.Value !== null && item.Value !== undefined && item.Value !== '') {\n      dimensions.push({ Name: item.Name, Value: typeof item.Value === 'string' ? item.Value : `${item.Value}` });\n    }\n  });\n  return dimensions;\n}\n\n// parse query data result for panel\nexport function ParseQueryResult(response, instances: any[] = []) {\n  const instanceList = _.cloneDeep(instances);\n  // console.log('parseQueryResult:', response, instances, instanceList);\n  const dataPoints = _.get(response, 'DataPoints', []);\n  return _.map(dataPoints, (dataPoint) => {\n    let instanceAliasValue = _.get(dataPoint, 'Dimensions[0].Value');\n    for (let i = 0; i < instanceList.length; i++) {\n      if (isInstanceMatch(instanceList[i], _.get(dataPoint, 'Dimensions', []))) {\n        instanceAliasValue = instanceList[i]._InstanceAliasValue;\n        instanceList.splice(i, 1);\n        break;\n      }\n    }\n    return {\n      target: `${response.MetricName} - ${instanceAliasValue}`,\n      datapoints: parseDataPoint(dataPoint),\n    };\n  });\n}\n\n// parse tencent cloud monitor response data to grafana panel data\nfunction parseDataPoint(dataPoint) {\n  const timestamps = _.get(dataPoint, 'Timestamps', []);\n  const values = _.get(dataPoint, 'Values', []);\n  const result = timestamps.map((timestamp, index) => {\n    return [values[index], timestamp * 1000];\n  });\n\n  return result;\n}\n\n// check whether instance is match or not\nfunction isInstanceMatch(instance, dimensions) {\n  let match = true;\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < dimensions.length; i++) {\n    if (_.get(instance, dimensions[i].Name).toString() !== dimensions[i].Value.toString()) {\n      match = false;\n      break;\n    }\n  }\n  return match;\n}\n\n/**\n * 检查某个变量是否模板变量，即是否匹配 ${varnam} 或 [[varname]]\n *\n * @param field 变量字段名\n */\nexport function isVariable(value) {\n  if (value && (value.match(/^\\${?(\\w+)}?/) || value.match(/^\\[\\[(\\w+)(\\:\\w+)?\\]\\]/))) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * 腾讯云 API 3.0 接口协议\n * @param options 接口请求对象 { url: string, data?: object }\n * @param service 产品名字 'cvm'\n * @param signObj 接口请求相关信息 { region?: string, action: string }\n * @param secretId\n * @param secretKey\n */\nexport async function GetRequestParams(options, service, signObj: any = {}, secretId, datasourceId, backendSrv) {\n  const signParams = {\n    secretId,\n    payload: options.data || '',\n    ...signObj,\n    ...(_.pick(GetServiceAPIInfo(signObj.region || '', service), ['service', 'host', 'version']) || {}),\n    backendSrv,\n    datasourceId,\n  };\n  const sign = new Sign(signParams);\n  const { intranet, ...headerSigned } = await sign.getHeader();\n  options.headers = Object.assign(options.headers || {}, { ...headerSigned });\n  options.method = 'POST';\n  if (intranet) {\n    options.url += '-internal';\n  }\n  return options;\n}\n\n/**\n *  腾讯云 API 2.0 接口协议\n * @param options 接口请求对象 { url: string, data?: object }\n * @param service 产品名字 'cvm'\n * @param signObj 接口请求相关信息 { region?: string, action: string }\n * @param secretId\n * @param secretKey\n */\nexport async function GetRequestParamsV2(\n  options: any = {},\n  service,\n  signObj: any = {},\n  secretId,\n  datasourceId,\n  backendSrv\n) {\n  const data = options.data || {};\n  const signParams = {\n    secretId,\n    data,\n    ...signObj,\n    ...(_.pick(GetServiceAPIInfo(signObj.region || '', service), ['host', 'version']) || {}),\n    backendSrv,\n    datasourceId,\n  };\n  options.method = 'POST';\n  const sign = new SignV2(signParams);\n  options.headers = Object.assign(options.headers || {}, { 'Content-Type': 'application/x-www-form-urlencoded' });\n  const { queryString, path, host, intranet } = await sign.generateQueryString();\n  options.data = qs.stringify({\n    ...options.data,\n    ...queryString,\n    ...(host && { host: host }),\n  });\n  if (intranet) {\n    // TODO: qcloud.com intranet host\n    console.log('got intranet for sign v2');\n  }\n  options.url += path;\n  return options;\n}\n\nexport function SliceLength(total = 0, len = 1) {\n  const result: any[] = [];\n  const num = Math.ceil(total / len);\n  for (let i = 1; i < num; i++) {\n    result.push({ Offset: len * i });\n  }\n  return result;\n}\n\nexport const FilterKeys = ['Namespace', 'Offset', 'Limit', 'SearchKey', 'Description', 'OrderBy', 'Order'];\n\nexport function parseDataFromBackendPlugin(res) {\n  const { data } = toDataQueryResponse(res);\n  return {\n    authorization: _.get(data, '[0].meta.custom', ''),\n  };\n}\n\n/** 当前环境是否为非生产环境 */\nexport const IS_DEVELOPMENT_ENVIRONMENT = !(process.env.NODE_ENV === 'production');\n","import _ from 'lodash';\nimport { SERVICES } from '../tc_monitor';\n\n/* 从分页数据获取全量数据 */\nconst PageSize = 50;\nfunction getFieldsValue(value, fields) {\n  return fields.map((item) => _.get(value, item, _.get(value, `Result.${item}`, [])));\n}\n\nexport async function fetchAllFactory(fetcher: (args: any) => Promise<any>, _params: any, field: string | string[]) {\n  const params = { ..._params };\n  params.Limit = params.Limit || PageSize; // 默认给个Limit大小为50\n  params.Offset = params.Offset ?? 0; // 默认给个Offset为0\n\n  // 第一次请求，获取总数\n  const rs = (await fetcher(params)) ?? {};\n  const fields = Array.isArray(field) ? field : [field];\n\n  // rs.TotalCount = rs.TotalCount ?? rs.Result.TotalCount ?? [];\n  // const { TotalCount } = rs;\n  const TotalCount = rs.TotalCount ?? rs.Result?.TotalCount ?? rs.TotalCnt ?? rs.Result?.TotalCnt ?? 0;\n  const firstLists = getFieldsValue(rs, fields);\n\n  if (TotalCount === 0 || firstLists[0].length === TotalCount) {\n    // 只有一页，结束\n    return firstLists;\n  }\n\n  // 批量请求\n  const delta = TotalCount - firstLists[0].length;\n  const batchCount = Math.ceil(delta / PageSize);\n  const pmList = new Array(batchCount).fill(0).map((_, index) => {\n    params.Offset = 1 + index; // 忽略offset为0的情况，从1开始\n    return fetcher(params);\n  });\n\n  // 合并\n  const resultList = await Promise.all(pmList); // [ {a: [], b[] }, { a: [], b:[] }]\n\n  return resultList.reduce((acc, cur) => {\n    const lists = getFieldsValue(cur, fields);\n    // [[], [], []] + [[], [], []]\n    acc.forEach((list, index) => list.push(...lists[index]));\n    return acc;\n  }, firstLists);\n}\n\n/**\n * 实例列表接口入参处理\n *\n * @param queries 表单键入内容\n * @param isFilter 是否需要设置为Filters格式\n */\nexport function instanceQueryParamsBaseParse(queries: any, isFilter: boolean) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    const Filters: any[] = [];\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          if (isFilter) {\n            Filters.push({ Name: key, Values: _.uniq(item).slice(0, 5) });\n          } else {\n            params[key] = _.uniq(item);\n          }\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          if (isFilter) {\n            Filters.push({ Name: key, Values: _.get(item, 'value', []).slice(0, 5) });\n          } else {\n            params[key] = _.get(item, 'value');\n          }\n        }\n      } else if (item !== null && item !== undefined && item !== '') {\n        if (isFilter) {\n          Filters.push({ Name: key, Values: item });\n        } else {\n          params[key] = item;\n        }\n      }\n    });\n    if (isFilter && Filters.length > 0) {\n      params.Filters = Filters;\n      return params;\n    }\n  }\n  return params;\n}\n\nexport function getNamesapceFromService(serviceName: string) {\n  return _.get(\n    _.find(SERVICES, (service) => service.service === serviceName),\n    'namespace'\n  );\n}\n\nexport function serviceGroupBy(\n  services: { service: string; label: string; namespace: string; href: string; groupName?: string }[]\n) {\n  const result = services.reduce((acc, cur) => {\n    const { namespace, label, groupName = label } = cur;\n\n    const existedGroup = acc.find((item) => item.label === groupName);\n    if (!existedGroup) {\n      acc.push({ label: groupName, value: groupName, items: [{ label, value: namespace }] });\n      return acc;\n    }\n\n    existedGroup.items.push({ label, value: namespace });\n    return acc;\n  }, [] as any[]);\n\n  // 将只有一个子元素的项目进行特殊处理\n  const rs = result.map((item) =>\n    item.items.length === 1 ? { label: item.items[0].label, value: item.items[0].value } : item\n  );\n  return rs;\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","import coreModule from 'grafana/app/core/core_module';\nimport { DetailQueryConfig } from './types';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nfunction classFactory(detailConfig) {\n  return class QueryCtrl {\n    static _config: DetailQueryConfig;\n\n    /** @ngInject */\n    constructor($scope, $rootScope) {\n      Object.assign($scope, detailConfig);\n\n      $scope.getDropdown = (field) => {\n        const service = GetServiceFromNamespace($scope.namespace);\n        return $scope.datasource.getFilterDropdown(service, { field, region: $scope.region });\n      };\n    }\n  };\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"{{instanceDocUrl}}\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in fieldDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputNumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />    \n      <multi-condition\n        ng-if=\"field.type === 'inputNumberMulti'\"\n        type=\"'inputNumber'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        maxNum=\"field.max\"\n        minNum=\"field.min\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputMulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownMulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <gf-form-dropdown \n        ng-if=\"field.type === 'dropdown'\"\n        model=\"target.queries[field.key]\" \n        allow-custom=\"true\" \n        lookup-text=\"true\" \n        get-options=\"getDropdown(field.key)\" \n        css-class=\"min-width-10\"\n        on-change=\"onChange()\">\n      </gf-form-dropdown>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n      <gf-form-switch \n        ng-if=\"field.type === 'switch'\"\n        class=\"gf-form tc-switch\" \n        label-class=\"width-7\" \n        checked=\"target.queries[field.key]\" \n        switch-class=\"max-width-5\"\n      ></gf-form-switch>\n    </div>\n  </div>\n</div>\n  </div>\n`;\nfunction queryDDOFactory(QueryCtrl) {\n  return function queryDDO() {\n    return {\n      template: template,\n      controller: QueryCtrl,\n      restrict: 'E',\n      scope: {\n        target: '=',\n        showDetail: '=',\n        region: '=',\n        datasource: '=',\n        getDropdownOptions: '&',\n        onChange: '&',\n      },\n    };\n  };\n}\n\nexport default (name: string, config: DetailQueryConfig) => {\n  // QueryCtrl._config = config;\n  const newQueryIns = classFactory(config);\n  coreModule.directive(name, queryDDOFactory(newQueryIns));\n};\n","interface DBEvent {\n  target: { result: any; error: any };\n}\n// 数据库结构\ninterface DBTypes {\n  store: StoreType;\n  name?: string;\n  version?: number;\n}\n// store表结构\ninterface StoreType {\n  name: string; // 表名\n  key: string; // 主键名\n  cursorIndex?: { name: string; unique: boolean }[]; // 索引列表\n}\n\n// 数据结构\n// {service: 'cvm', instance: [{ins: 23}]}\ninterface DataType {\n  service: string;\n  [x: string]: any; // 有产品需缓存其他列表\n}\n\n// interface UpdateProps {\n//   storeName: string;\n//   cursorKey: string;\n//   cursorValue?: any;\n//   data: any;\n// }\n\nconst store: StoreType = {\n  name: 'grafanaInstanceList',\n  key: 'service',\n};\nconst promisify = (request: any, type?: string) => {\n  return new Promise<any>((resolve, reject) => {\n    request.onsuccess = (event: DBEvent) => {\n      const returnMap: any = {\n        event: event.target.result,\n        request: request.result,\n        msg: '操作成功',\n      };\n      resolve(returnMap[type || 'msg']);\n    };\n    request.onerror = (event: DBEvent) => reject(event.target.error || '操作失败');\n  });\n};\n// 固定表名和数据库名\nclass IndexedDB {\n  name = 'grafanaDatabase';\n  version = 1;\n\n  constructor(props: DBTypes) {\n    const { name = 'database', version = 1, store } = props;\n    this.name = name;\n    this.version = version;\n\n    this.initDB(store);\n  }\n\n  /**\n   * 初始化数据库\n   * @param store 库表的结构\n   */\n  initDB(store: StoreType) {\n    const indexeddb = window.indexedDB || window.webkitIndexedDB || window.mozIndexedDB || window.msIndexedDB;\n    const request = indexeddb.open(this.name, this.version);\n\n    request.onupgradeneeded = (event: IDBVersionChangeEvent) => {\n      const db = (event.target as IDBOpenDBRequest).result;\n      if (db.objectStoreNames.contains(store.name)) {\n        // 存在表store\n      }\n\n      //  遍历store，设置数据表结构\n      db.createObjectStore(store.name, {\n        keyPath: store.key,\n      });\n    };\n    request.onerror = () => Promise.reject(new Error('初始化数据库失败'));\n    request.onsuccess = () => Promise.resolve('初始化数据库成功');\n  }\n\n  openDB() {\n    const indexeddb = window.indexedDB || window.webkitIndexedDB || window.mozIndexedDB || window.msIndexedDB;\n    const request = indexeddb.open(this.name, this.version);\n\n    return promisify(request, 'event');\n  }\n\n  /**\n   * 新增数据\n   * @param storeName 表名\n   * @param data 添加的数据\n   */\n  async insertData(storeName: string, data: any) {\n    try {\n      // console.time('insertData');\n      const db = await this.openDB();\n      const transaction = db.transaction(storeName, 'readwrite');\n      const objectStore = transaction.objectStore(storeName);\n\n      objectStore.add(data);\n      // console.timeEnd('insertData');\n\n      return new Promise((resolve, reject) => {\n        transaction.oncomplete = function () {\n          // console.timeEnd('insertData');\n          resolve('所有数据插入成功');\n        };\n\n        transaction.onerror = function (event) {\n          reject(event);\n        };\n      });\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n\n  /**\n   * 更新数据\n   * @param props 查询数据的参数以及要修改的值的参数\n   */\n  async addData(data: DataType, isCover?: boolean) {\n    try {\n      // console.log('addData');\n      const storeName = store.name; // 表名\n      const oldData = await this.getData(data.service);\n      const objectStore = await this.getObjectStore(storeName, 'readwrite');\n\n      if (!oldData) {\n        // 不存在则新建\n        this.insertData(storeName, data);\n      }\n      // 存在则更新\n      let newData: any = { ...oldData, ...data };\n      if (isCover) newData = data; // 需要覆盖之前内容\n      // 把更新过的对象放回数据库\n      const requestUpdate = objectStore.put(newData);\n      // console.timeEnd('updateData');\n      return promisify(requestUpdate);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n\n  /**\n   * 获取数据库的值，返回查询到的第一项\n   * @param storeName 表名/存储对象的键\n   * @param cursorKey key\n   * @param cursorValue 要查询索引的值\n   */\n  async getData(seviceName: string) {\n    try {\n      // console.time('getData');\n      const storeName = store.name;\n      const objectStore = await this.getObjectStore(storeName);\n      const request = objectStore.get(seviceName);\n      // console.timeEnd('getData');\n      return promisify(request, 'request');\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n  async getAllData(storeName: string) {\n    try {\n      // console.time('getAllData');\n      const objectStore = await this.getObjectStore(storeName);\n      const request = objectStore.getAll();\n      const result = await promisify(request, 'request');\n      // console.timeEnd('getAllData');\n      return result ? result : [];\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n  /**\n   * 获取对象仓库\n   * @param storeName 表名\n   * @param type readonly 或者 readwrite等\n   */\n  private async getObjectStore(storeName: string, type?: any): Promise<IDBObjectStore> {\n    try {\n      const db = await this.openDB();\n      return db.transaction(storeName, type).objectStore(storeName);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n}\n// console.log('testDDB')\n// const indexDB = new IndexedDB({store});\n// indexDB.addData({service: 'cvm', instance: [{ins: 23}]}).then(e=>{\n//   indexDB.getData('cvm').then(dd=>{console.log({dd})})\n// })\nexport default new IndexedDB({ store });\n","import indexedDB from './indexedDB';\nclass InstanceStorage {\n  // prefix = 'Datasource';\n  // storageKey = 'grafanaInstanceCache';\n  insKey = 'Instances';\n  cacheWay = '';\n  constructor() {}\n  setInstance(service: string, value: Record<string, any>) {\n    return this.setStorage(service, this.insKey, value, true);\n  }\n  async getInstance(service: string) {\n    return this.getStorage(service, this.insKey);\n  }\n  setExtraStorage(service: string, Ekey: string, EValue: Record<string, any>) {\n    return this.setStorage(service, Ekey, EValue, false);\n  }\n  async getExtraStorage(service: string, Ekey: string) {\n    return this.getStorage(service, Ekey);\n  }\n  private setStorage(serviceKey: string, key: string, value: Record<string, any>, isCover = false) {\n    // console.log('set', serviceKey, key, value);\n    return indexedDB.addData(\n      {\n        service: serviceKey,\n        [key]: value,\n      },\n      isCover\n    );\n  }\n  // 获取到模版变量信息\n  private async getStorage(service: string, key?: string) {\n    const storage = await indexedDB.getData(service);\n    // console.log('get', key, storage);\n    return key ? storage?.[key] : storage;\n  }\n}\nexport default new InstanceStorage();\n","import _ from 'lodash';\n\nexport const CKAFKAQueryDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为10，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceId',\n    enDescriptor: 'InstanceId',\n    cnDescriptor: '按照实例ID过滤',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SearchWord',\n    enDescriptor: 'SearchWord',\n    cnDescriptor: '按照实例名称过滤，支持模糊查询',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'TagKey',\n    enDescriptor: 'TagKey',\n    cnDescriptor: '匹配标签key值',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'Status',\n    enDescriptor: 'Status',\n    cnDescriptor: '实例的状态，不填默认返回全部',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '创建中', value: 0 },\n      { text: '运行中', value: 1 },\n      { text: '删除中', value: 2 },\n    ],\n  },\n];\n\nconst CKAFKA_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  topicId: '',\n  topicName: '',\n  consumerGroup: '',\n  partition: '',\n  queries: {\n    Offset: 0,\n    Limit: 10,\n    Status: [],\n    InstanceId: '',\n    SearchWord: '',\n    TagKey: '',\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\nconst CKAFKAInstanceAliasList = ['InstanceId', 'InstanceName'];\nconst CKAFKATopicAliasList = ['TopicId', 'TopicName'];\n// 保存在模板变量value中的key\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n  topicId: 'TopicId',\n  groupName: 'GroupName',\n  partition: 'PartitionId',\n};\n// 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key\nconst CKAFKAInvalidDemensions = new Proxy(\n  {\n    topicId: 'TopicId',\n    topicName: 'TopicName',\n    consumerGroup: 'GroupName',\n    partition: 'PartitionId',\n  },\n  {\n    get: (obj, prop) => {\n      if (String(prop).toLocaleLowerCase() === 'instanceid') return 'InstanceId';\n      return obj[prop];\n    },\n  }\n);\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  TopicList: 'TopicList',\n  GroupList: 'GroupList',\n  PartitionList: 'PartitionList',\n};\n\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  TopicId: {\n    dim_KeyInStorage: keyInStorage.TopicList,\n    dim_KeyInTarget: 'topicId',\n    dim_KeyInMap: templateQueryIdMap.topicId,\n  },\n  // topicName和topicId是同一个storage中的source，所以根据topicId帅选\n  TopicName: {\n    dim_KeyInStorage: keyInStorage.TopicList,\n    dim_KeyInTarget: 'topicId',\n    dim_KeyInMap: templateQueryIdMap.topicId,\n  },\n  GroupName: {\n    dim_KeyInStorage: keyInStorage.GroupList,\n    dim_KeyInTarget: 'consumerGroup',\n    dim_KeyInMap: templateQueryIdMap.groupName,\n  },\n  PartitionId: {\n    dim_KeyInStorage: keyInStorage.PartitionList,\n    dim_KeyInTarget: 'partition',\n    dim_KeyInMap: templateQueryIdMap.partition,\n  },\n};\nexport default CKAFKA_STATE;\nexport {\n  CKAFKAInstanceAliasList,\n  CKAFKATopicAliasList,\n  CKAFKAInvalidDemensions,\n  templateQueryIdMap,\n  keyInStorage,\n  queryMonitorExtraConfg,\n  GetInstanceQueryParams as CKAFKAGetInstanceQueryParams,\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__9__;","import _ from 'lodash';\n\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/LOADBALANCE';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'loadBalanceQuery';\n\nconst ForwardTypes = [\n  { text: '通用的负载均衡', value: 1 },\n  { text: '传统的负载均衡', value: 0 },\n];\n\nconst OrderBy = [\n  { text: 'LoadBalancerName', value: 'LoadBalancerName' },\n  { text: 'CreateTime', value: 'CreateTime' },\n  { text: 'Domain', value: 'Domain' },\n  { text: 'LoadBalancerType', value: 'LoadBalancerType' },\n];\n\nconst OrderType = [\n  { text: '升序', value: 0 },\n  { text: '降序', value: 1 },\n];\n\nconst WithRs = [\n  { text: '没有绑定后端服务', value: 0 },\n  { text: '绑定后端服务', value: 1 },\n  { text: '查询全部', value: -1 },\n];\nconst LOADBALANCEFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n  },\n  {\n    key: 'LoadBalancerIds',\n    enDescriptor: 'LoadBalancer ID',\n    cnDescriptor: '实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerName',\n    enDescriptor: 'LoadBalancer Name',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'Forward',\n    enDescriptor: 'Forward',\n    cnDescriptor: '负载均衡实例类型',\n    link: '',\n    type: 'select',\n    list: ForwardTypes,\n  },\n  {\n    key: 'Domain',\n    enDescriptor: 'Domain',\n    cnDescriptor: '域名，腾讯云为负载均衡实例分配的域名，本参数仅对传统型公网负载均衡才有意义',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'LoadBalancerVips',\n    enDescriptor: 'LoadBalancer Vips',\n    cnDescriptor: '负载均衡实例的 VIP 地址',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'BackendPrivateIps',\n    enDescriptor: 'BackendPrivate Ips',\n    cnDescriptor: '负载均衡绑定的后端服务的内网 IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'BackendPublicIps',\n    enDescriptor: 'BackendPublic Ips',\n    cnDescriptor: '负载均衡绑定的后端服务的外网 IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'ProjectId',\n    enDescriptor: 'Project ID',\n    cnDescriptor: '负载均衡实例所属的项目 ID',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'Vpc ID',\n    cnDescriptor: '负载均衡实例所属私有网络',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SecurityGroup',\n    enDescriptor: 'Security Group',\n    cnDescriptor: '安全组ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'MasterZone',\n    enDescriptor: 'Master Zone',\n    cnDescriptor: '主可用区ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'WithRs',\n    enDescriptor: 'WithRs',\n    cnDescriptor: '负载均衡是否绑定后端服务',\n    link: '',\n    type: 'select',\n    list: WithRs,\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderBy,\n  },\n  {\n    key: 'OrderType',\n    enDescriptor: 'OrderByType',\n    cnDescriptor: '排序方式',\n    link: '',\n    type: 'select',\n    list: OrderType,\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/214/30685',\n  namespace,\n  fieldDescriptor: LOADBALANCEFieldsDescriptor,\n};\nconst LBFields = {\n  LoadBalancerIds: [],\n  Forward: undefined,\n  LoadBalancerName: '',\n  Domain: '',\n  LoadBalancerVips: [],\n  BackendPublicIps: [],\n  BackendPrivateIps: [],\n  Limit: 20,\n  Offset: 0,\n  ProjectId: undefined,\n  WithRs: {},\n  VpcId: '',\n  SecurityGroup: '',\n  MasterZone: '',\n  OrderBy: {},\n  OrderType: {},\n};\n\nconst LOADBALANCE_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'LoadBalancerId',\n  Port: '',\n  Protocol: '',\n  listener: '',\n  servers: '',\n  serverPort: '',\n  // listenerAlias: 'ListenerId',\n  queries: LBFields,\n};\n\n// function GetInstanceQueryParams(queries: any = {}) {\n//   const params: any = {};\n//   if (!_.isEmpty(queries)) {\n//     params.Limit = _.get(queries, 'Limit', 20) || 20;\n//     params.Offset = _.get(queries, 'Offset', 0) || 0;\n//     queries = _.omit(queries, ['Offset', 'Limit']);\n//     _.forEach(queries, (item: any, key) => {\n//       if (_.isArray(item)) {\n//         item = _.compact(item);\n//         if (item.length > 0) {\n//           params[key] = _.uniq(item);\n//         }\n//       } else if (_.isObject(item)) {\n//         if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n//           params[key] = _.get(item, 'value');\n//         }\n//       } else if (_.isNumber(item) || !_.isEmpty(item)) {\n//         params[key] = item;\n//       }\n//     });\n//   }\n//   return params;\n// }\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\nconst InstanceAliasList = ['LoadBalancerId', 'LoadBalancerName', 'LoadBalancerVips'];\nconst LOADBALANCEListenerAliasList = ['ListenerId', 'ListenerName', 'Port'];\nconst LOADBALANCEServerAliasList = ['PrivateIpAddresses', 'InstanceId'];\nconst LOADBALANCEVALIDDIMENSIONS = {\n  vip: 'LoadBalancerVips',\n  // vpcId: 'NumericalVpcId',\n  loadBalancerPort: 'Port',\n  protocol: 'Protocol',\n  lanIp: 'PrivateIpAddresses',\n  port: 'ServerPort',\n};\n// 对于ipv6类型，vip应该取AddressIPv6。\nconst CANDIATEDIMENSIONS = {\n  LoadBalancerVips: 'AddressIPv6',\n};\n// dimensionObject[item] = { Name: item, Value: '' };\n// const LOADBALANCE_INSTANCE_DIMENSIONOBJECTS = {\n//   vip: { Name: 'vip', Value: '' },\n// };\n// const LOADBALANCE_LISTENER_DIMENSIONOBJECTS = {\n//   vip: { Name: 'vip', Value: '' },\n//   loadBalancerPort: { Name: 'loadBalancerPort', Value: '' },\n//   protocol: { Name: 'protocol', Value: '' },\n// };\nconst templateQueryIdMap = {\n  instance: 'LoadBalancerId',\n  listener: 'ListenerId',\n  servers: 'PrivateIpAddresses',\n  port: 'Port',\n};\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  listener: 'ListenerList',\n  servers: 'ServersList',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  Port: {\n    dim_KeyInStorage: keyInStorage.listener,\n    dim_KeyInTarget: 'listener',\n    dim_KeyInMap: templateQueryIdMap.listener,\n  },\n  Protocol: {\n    dim_KeyInStorage: keyInStorage.listener,\n    dim_KeyInTarget: 'listener',\n    dim_KeyInMap: templateQueryIdMap.listener,\n  },\n  PrivateIpAddresses: {\n    dim_KeyInStorage: keyInStorage.servers,\n    dim_KeyInTarget: 'servers',\n    dim_KeyInMap: templateQueryIdMap.servers,\n  },\n  ServerPort: {\n    dim_KeyInStorage: keyInStorage.servers,\n    dim_KeyInTarget: 'serverPort',\n    dim_KeyInIns: 'Port',\n    dim_KeyInMap: templateQueryIdMap.port,\n  },\n};\nexport default LOADBALANCE_STATE;\nexport {\n  LOADBALANCEFieldsDescriptor,\n  InstanceAliasList,\n  LOADBALANCEListenerAliasList,\n  LOADBALANCEServerAliasList,\n  LOADBALANCEVALIDDIMENSIONS,\n  templateQueryIdMap,\n  CANDIATEDIMENSIONS,\n  // LOADBALANCE_LISTENER_DIMENSIONOBJECTS,\n  // LOADBALANCE_INSTANCE_DIMENSIONOBJECTS,\n  queryMonitorExtraConfg,\n  keyInStorage,\n  queryEditorConfig,\n  namespace,\n  queryEditorName,\n  GetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/TDMQ';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'tdmqQuery';\n\nconst TDMQInvalidDemensions = {\n  tenantId: 'ClusterId',\n  topicName: 'TopicName',\n  environmentId: 'EnvironmentId',\n};\n\n// 需和文件名对应\nconst TDMQInstanceAliasList = ['ClusterId', 'ClusterName'];\n\nconst templateQueryIdMap = {\n  instance: 'ClusterId',\n  topicName: 'TopicName',\n  environmentId: 'EnvironmentId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst TDMQFilterFields = {\n  Limit: 20,\n  Offset: 0,\n};\n\nconst TDMQFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n];\n\nconst CDNPROVINCE_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'ClusterId',\n  // 此处key应该是经过TDMQInvalidDemensions处理后的\n  topicName: '',\n  environmentId: '',\n  queries: TDMQFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nconst regionSupported = [\n  { text: '华北地区(北京)', value: 'ap-beijing' },\n  { text: '西南地区(成都)', value: 'ap-chengdu' },\n  { text: '华南地区(广州)', value: 'ap-guangzhou' },\n  { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n  { text: '华东地区(上海)', value: 'ap-shanghai' },\n  { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n  { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n  { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },\n];\nfunction modifyDimensons(metricItem) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    if (item.Dimensions.indexOf('topicName') !== -1 && item.Dimensions.indexOf('environmentId') === -1) {\n      item.Dimensions.push('environmentId');\n    }\n  });\n  return metricTmp;\n}\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  topicName: 'topicName',\n  environmentId: 'environmentId',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  TopicName: {\n    dim_KeyInStorage: keyInStorage.topicName,\n    dim_KeyInTarget: 'topicName',\n    dim_KeyInMap: templateQueryIdMap.topicName,\n  },\n  EnvironmentId: {\n    dim_KeyInStorage: keyInStorage.environmentId,\n    dim_KeyInTarget: 'environmentId',\n    dim_KeyInMap: templateQueryIdMap.environmentId,\n  },\n};\nexport default CDNPROVINCE_STATE;\nexport {\n  TDMQFilterFieldsDescriptor,\n  templateQueryIdMap,\n  TDMQInstanceAliasList,\n  TDMQInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryMonitorExtraConfg,\n  keyInStorage,\n  modifyDimensons,\n  regionSupported,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as TDMQGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/GSE';\nconst fleetId = 'FleetId'; // 为和cvm其他产品保持一致，即将string[]改为Array<{fleetid: xxx}>,在此声明key\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'gseQuery';\n\nconst GSEInvalidDemensions = {\n  instanceid: 'InstanceId',\n  fleetid: 'FleetId',\n  queuename: 'Name',\n};\n\n// 需和文件名对应\nconst GSEInstanceAliasList = ['InstanceId', 'PrivateIpAddress', 'IpAddress'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n  Name: 'Name',\n  FleetId: fleetId,\n};\n\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  fleet: 'fleet', // 实例队列\n  queue: 'queueName', // 会话队列\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  FleetId: {\n    dim_KeyInStorage: keyInStorage.fleet,\n    dim_KeyInTarget: 'FleetId',\n    dim_KeyInMap: templateQueryIdMap.FleetId,\n  },\n  Name: {\n    dim_KeyInStorage: keyInStorage.queue,\n    dim_KeyInTarget: 'Name',\n    dim_KeyInMap: templateQueryIdMap.Name,\n  },\n};\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst GSEFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  InstanceId: '',\n  FleetId: '',\n};\n\nconst GSEFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceId',\n    enDescriptor: 'resourceName',\n    cnDescriptor: '资源名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'FleetId',\n    enDescriptor: 'tagKey',\n    cnDescriptor: '标签键',\n    link: '',\n    type: 'input',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/1165/42604',\n  namespace,\n  fieldDescriptor: GSEFilterFieldsDescriptor,\n};\n\nconst GSE_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  FleetId: '', //  服务器实例\n  Name: '', // 队列名称\n  queries: GSEFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\n// regions for dropdown\nconst regionSupported = [\n  { text: '亚太东南(曼谷)', value: 'ap-bangkok' },\n  { text: '华北地区(北京)', value: 'ap-beijing' },\n  { text: '西南地区(成都)', value: 'ap-chengdu' },\n  // { text: '西南地区(重庆)', value: 'ap-chongqing' },\n  { text: '华南地区(广州)', value: 'ap-guangzhou' },\n  { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n  { text: '亚太南部(孟买)', value: 'ap-mumbai' },\n  { text: '亚太东北(首尔)', value: 'ap-seoul' },\n  { text: '华东地区(南京)', value: 'ap-nanjing' },\n  { text: '华东地区(上海)', value: 'ap-shanghai' },\n  // { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },\n  // { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n  { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n  { text: '亚太东北(东京)', value: 'ap-tokyo' },\n  { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },\n  { text: '美国东部(弗吉尼亚)', value: 'na-ashburn' },\n  { text: '美国西部(硅谷)', value: 'na-siliconvalley' },\n  // { text: '北美地区(多伦多)', value: 'na-toronto' },\n];\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = item.Dimensions.map((v) => GSEInvalidDemensions[v] || v);\n  });\n  return metricTmp;\n}\nexport default GSE_STATE;\nexport {\n  GSEFilterFieldsDescriptor,\n  templateQueryIdMap,\n  GSEInstanceAliasList,\n  GSEInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  regionSupported,\n  modifyDimensons,\n  queryMonitorExtraConfg,\n  fleetId,\n  keyInStorage,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as GSEGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { isArray, cloneDeep } from 'lodash';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/TDMYSQL';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'dcdbQuery';\n\nconst DCDBInvalidDemensions = {\n  nodeid: 'NodeId',\n  instanceid: 'InstanceId',\n  shardid: 'ShardInstanceId',\n  ShardId: 'ShardInstanceId',\n};\n\n// 需和文件名对应\nconst DCDBInstanceAliasList = ['InstanceId', 'InstanceName'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n  NodeId: 'NodeId',\n  ShardInstanceId: 'ShardInstanceId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst DCDBFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  InstanceIds: [],\n  SearchName: '',\n  SearchKey: '',\n  ProjectIds: [],\n  // IsFilterVpc\n  VpcId: '',\n  SubnetId: '',\n\n  OrderBy: {},\n  OrderByType: {},\n  // IsFilterExcluster: {},\n  ExclusterType: {},\n\n  ExclusterIds: [],\n  FilterInstanceType: {},\n};\n\nconst DCDBFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceIds',\n    enDescriptor: 'InstanceIds',\n    cnDescriptor: '实例 ID 查询',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'SearchName',\n    enDescriptor: 'SearchName',\n    cnDescriptor: '搜索的字段名,当前支持的值有：instancename、vip、all',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SearchKey',\n    enDescriptor: 'SearchKey',\n    cnDescriptor: '搜索的关键字',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'ProjectIds',\n    enDescriptor: 'ProjectIds',\n    cnDescriptor: '按项目 ID 查询',\n    link: '',\n    type: 'inputNumberMulti',\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'VpcId',\n    cnDescriptor: '私有网络 ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SubnetId',\n    enDescriptor: 'SubnetId',\n    cnDescriptor: '私有网络的子网 ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'projectId', value: 'projectId' },\n      { text: 'createtime', value: 'createtime' },\n      { text: 'instancename', value: 'instancename' },\n    ],\n  },\n  {\n    key: 'OrderByType',\n    enDescriptor: 'OrderByType',\n    cnDescriptor: '私有网络 ID',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'desc', value: 'desc' },\n      { text: 'asc', value: 'asc' },\n    ],\n  },\n  {\n    key: 'ExclusterType',\n    enDescriptor: 'ExclusterType',\n    cnDescriptor: '集群类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '非独享集群', value: 1 },\n      { text: '独享集群', value: 2 },\n      { text: '全部', value: 0 },\n      { text: 'asc', value: 'asc' },\n    ],\n  },\n  {\n    key: 'ExclusterIds',\n    enDescriptor: 'ExclusterIds',\n    cnDescriptor: '独享集群ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'FilterInstanceType',\n    enDescriptor: 'FilterInstanceType',\n    cnDescriptor: '实例类型过滤',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '独享实例', value: 1 },\n      { text: '主实例', value: 2 },\n      { text: '灾备实例', value: 3 },\n    ],\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/557/16140',\n  namespace,\n  fieldDescriptor: DCDBFilterFieldsDescriptor,\n};\n\nconst DCDB_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  ShardId: '',\n  NodeId: '',\n  queries: DCDBFilterFields,\n};\nconst modifyMetricConf = {\n  shardid: 'ShardId',\n  instanceid: 'InstanceId',\n  nodeid: 'NodeId',\n};\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = item.Dimensions.map((v) => modifyMetricConf[v] || v);\n  });\n  return metricTmp;\n}\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params = instanceQueryParamsBaseParse(queries, false);\n  // 特殊处理\n  params.IsFilterVpc = false;\n  params.IsFilterExcluster = false;\n  if (params.VpcId || params.SubnetId) params.IsFilterVpc = true;\n  if (params.ExclusterType) params.IsFilterExcluster = true;\n  if (isArray(params.FilterInstanceType)) params.FilterInstanceType = params.FilterInstanceType.join(',');\n  return params;\n}\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  NodeId: 'NodeId',\n  ShardInstanceId: 'ShardId',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  NodeId: {\n    dim_KeyInStorage: keyInStorage.NodeId,\n    dim_KeyInTarget: 'NodeId',\n    dim_KeyInMap: templateQueryIdMap.NodeId,\n  },\n  ShardInstanceId: {\n    dim_KeyInStorage: keyInStorage.ShardInstanceId,\n    dim_KeyInTarget: 'ShardId',\n    dim_KeyInMap: templateQueryIdMap.ShardInstanceId,\n  },\n};\n// 和其他产品的展示保持一致\nconst regionSupported = [\n  { text: '华北地区(北京)', value: 'ap-beijing' },\n  { text: '西南地区(成都)', value: 'ap-chengdu' },\n  { text: '西南地区(重庆)', value: 'ap-chongqing' },\n  { text: '华南地区(广州)', value: 'ap-guangzhou' },\n  { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n  { text: '亚太南部(孟买)', value: 'ap-mumbai' },\n  { text: '华东地区(南京)', value: 'ap-nanjing' },\n  { text: '华东地区(上海)', value: 'ap-shanghai' },\n  { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },\n  { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n  { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n  { text: '亚太东北(东京)', value: 'ap-tokyo' },\n  { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },\n  { text: '美国东部(弗吉尼亚)', value: 'na-ashburn' },\n  { text: '美国西部(硅谷)', value: 'na-siliconvalley' },\n  { text: '北美地区(多伦多)', value: 'na-toronto' },\n];\nexport default DCDB_STATE;\nexport {\n  DCDBFilterFieldsDescriptor,\n  templateQueryIdMap,\n  DCDBInstanceAliasList,\n  DCDBInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  regionSupported,\n  keyInStorage,\n  modifyDimensons,\n  queryMonitorExtraConfg,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as DCDBGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\nconst namespace = 'QCE/REDIS_MEM';\nconst BillingMode = [\n  { text: '按量计费', value: 'postpaid' },\n  { text: '包年包月', value: 'prepaid' },\n];\n\nconst AutoRenew = [\n  { text: '手动续费', value: 0 },\n  { text: '自动续费', value: 1 },\n  { text: '明确不自动续费', value: 2 },\n];\n\nconst Status = [\n  { text: '待初始化', value: 0 },\n  { text: '流程执行中', value: 1 },\n  { text: '运行中', value: 2 },\n  { text: '已隔离', value: -2 },\n  { text: '待删除', value: -3 },\n];\n\nconst TypeVersion = [\n  { text: '单机版', value: 1 },\n  { text: '主从版', value: 2 },\n  { text: '集群版', value: 3 },\n];\n\nconst OrderBy = [\n  { text: 'projectId', value: 'projectId' },\n  { text: 'instancename', value: 'instancename' },\n  { text: 'createtime', value: 'createtime' },\n  { text: 'type', value: 'type' },\n  { text: 'curDeadline', value: 'curDeadline' },\n];\n\nconst OrderType = [\n  { text: '升序', value: 0 },\n  { text: '降序', value: 1 },\n];\nconst Type = [\n  { text: 'Redis老集群版', value: 1 },\n  { text: 'Redis 2.8主从版', value: 2 },\n  { text: 'CKV主从版', value: 3 },\n  { text: 'CKV集群版', value: 4 },\n  { text: 'Redis 2.8单机版', value: 5 },\n  { text: 'Redis 4.0主从版', value: 6 },\n  { text: 'Redis 4.0集群版', value: 7 },\n  { text: 'Redis5.0主从版', value: 8 },\n  { text: 'Redis5.0集群版', value: 9 },\n];\n\nconst RedisFields = {\n  InstanceId: '',\n  OrderBy: '',\n  OrderType: null,\n  VpcIds: [],\n  SubnetIds: [],\n  ProjectIds: [],\n  SearchKey: '',\n  InstanceName: '',\n  UniqVpcIds: [],\n  UniqSubnetIds: [],\n  Status: [],\n  TypeVersion: null,\n  EngineName: '',\n  AutoRenew: null,\n  BillingMode: '',\n  Type: null,\n};\n\nconst RedisMemFieldsDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceId',\n    enDescriptor: 'InstancesId',\n    cnDescriptor: '实例id',\n    type: 'input',\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderBy,\n  },\n  {\n    key: 'OrderType',\n    enDescriptor: 'OrderType',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderType,\n  },\n  {\n    key: 'VpcIds',\n    enDescriptor: 'VpcIds',\n    cnDescriptor: '私有网络ID数组，数组下标从0开始，如果不传则默认选择基础网络，如：47525',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'SubnetIds',\n    enDescriptor: 'SubnetIds',\n    cnDescriptor: '子网ID数组，数组下标从0开始，如：56854',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'ProjectIds',\n    enDescriptor: 'ProjectIds',\n    cnDescriptor: '项目ID 组成的数组',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'SearchKey',\n    enDescriptor: 'SearchKey',\n    cnDescriptor: '查找实例的ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'InstanceName',\n    enDescriptor: 'InstanceName',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'UniqVpcIds',\n    enDescriptor: 'UniqVpcIds',\n    cnDescriptor: '私有网络ID数组，数组下标从0开始，如果不传则默认选择基础网络，如：vpc-sad23jfdfk',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'UniqSubnetIds',\n    enDescriptor: 'UniqSubnetIds',\n    cnDescriptor: '子网ID数组，数组下标从0开始，如：subnet-fdj24n34j2',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'Status',\n    enDescriptor: 'Status',\n    cnDescriptor: '实例状态',\n    multiple: true,\n    type: 'select',\n    list: Status,\n  },\n  {\n    key: 'TypeVersion',\n    enDescriptor: 'TypeVersion',\n    cnDescriptor: '类型版本',\n    link: '',\n    type: 'select',\n    list: TypeVersion,\n  },\n  {\n    key: 'EngineName',\n    enDescriptor: 'EngineName',\n    cnDescriptor: '引擎信息：Redis-2.8，Redis-4.0，CKV',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'AutoRenew',\n    enDescriptor: 'AutoRenew',\n    cnDescriptor: '续费模式',\n    multiple: true,\n    type: 'select',\n    list: AutoRenew,\n  },\n  {\n    key: 'BillingMode',\n    enDescriptor: 'BillingMode',\n    cnDescriptor: '计费模式：postpaid-按量计费；prepaid-包年包月',\n    link: '',\n    type: 'select',\n    list: BillingMode,\n  },\n  {\n    key: 'Type',\n    enDescriptor: 'Type',\n    cnDescriptor: '实例类型',\n    link: '',\n    type: 'select',\n    list: Type,\n  },\n];\n\nconst REDISMEM_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: { ...RedisFields },\n  rnodeid: '',\n  pnodeid: '',\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        // select 单选\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\nconst REDISMEMInstanceAliasList = ['InstanceId', 'InstanceName', 'WanIp'];\n\nconst RedisMemInvalidDemensions = {\n  instanceid: 'InstanceId',\n  rnodeid: 'rnodeid',\n  pnodeid: 'pnodeid',\n};\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n  rnodeid: 'rnodeid',\n  pnodeid: 'pnodeid',\n};\n\nconst NodeType = ['Redis', 'Proxy'];\n\nexport default REDISMEM_STATE;\nexport {\n  RedisMemFieldsDescriptor,\n  RedisMemInvalidDemensions,\n  REDISMEMInstanceAliasList,\n  templateQueryIdMap,\n  namespace,\n  NodeType,\n  GetInstanceQueryParams as REDISMEMGetInstanceQueryParams,\n};\n","// name (产品名称), service（对应的真实service）\ninterface ServiceType {\n  service: string;\n  label: string;\n  namespace: string;\n  href: string;\n  groupName?: string;\n  hideRegion?: boolean;\n}\nconst SERVICES: ServiceType[] = [\n  {\n    service: 'cvm',\n    label: '云服务器(CVM)',\n    namespace: 'QCE/CVM',\n    href: 'https://cloud.tencent.com/document/api/213/15688',\n  },\n  {\n    service: 'cdb',\n    label: '云数据库 MySQL(CDB)',\n    namespace: 'QCE/CDB',\n    href: 'https://cloud.tencent.com/document/api/236/15829',\n    groupName: '云数据库',\n  },\n  {\n    service: 'mongoDB',\n    label: '云数据库 MongoDB(CMONGO)',\n    namespace: 'QCE/CMONGO',\n    href: 'https://cloud.tencent.com/document/api/240/38568',\n    groupName: '云数据库',\n  },\n  {\n    service: 'postgres',\n    label: '云数据库 PostgreSQL',\n    namespace: 'QCE/POSTGRES',\n    href: 'https://cloud.tencent.com/document/product/248/45105',\n    groupName: '云数据库',\n  },\n  {\n    service: 'redis',\n    label: '云数据库 redis(REDIS)',\n    namespace: 'QCE/REDIS',\n    href: 'https://cloud.tencent.com/document/product/248/45110',\n    groupName: '云数据库',\n  },\n  {\n    service: 'redisMem',\n    label: '云数据库redis内存版（5s）(REDIS_MEM)',\n    namespace: 'QCE/REDIS_MEM',\n    href: 'https://cloud.tencent.com/document/product/248/49729',\n    groupName: '云数据库',\n  },\n  {\n    service: 'sqlserver',\n    label: '云数据库sqlserver(SQLSERVER)',\n    namespace: 'QCE/SQLSERVER',\n    href: 'https://cloud.tencent.com/document/product/248/45146',\n    groupName: '云数据库',\n  },\n  {\n    service: 'cynosdbMysql',\n    label: '云数据库 CYNOSDB(CYNOSDB_MYSQL)',\n    namespace: 'QCE/CYNOSDB_MYSQL',\n    href: 'https://cloud.tencent.com/document/product/248/45106',\n    groupName: '云数据库',\n  },\n  {\n    service: 'tcaplus',\n    label: '云数据库 TcaplusDB(TCAPLUS)',\n    namespace: 'QCE/TCAPLUS',\n    href: 'https://cloud.tencent.com/document/product/248/45107',\n    groupName: '云数据库',\n  },\n  {\n    service: 'dcdb',\n    label: '分布式数据库 TDSQL MySQL(TDMYSQL)',\n    namespace: 'QCE/TDMYSQL',\n    href: 'https://cloud.tencent.com/document/product/248/45108',\n  },\n  {\n    service: 'pcx',\n    label: '私有网络对等连接(PCX)',\n    namespace: 'QCE/PCX',\n    href: 'https://cloud.tencent.com/document/product/215/5181',\n    groupName: '私有网络',\n  },\n  {\n    service: 'bwp',\n    label: '私有网络带宽包(BWP)',\n    namespace: 'QCE/BWP',\n    href: 'https://cloud.tencent.com/document/api/215/19209',\n    groupName: '私有网络',\n  },\n  {\n    service: 'natGateway',\n    label: '私有网络NAT网关(NAT_GATEWAY)',\n    namespace: 'QCE/NAT_GATEWAY',\n    href: 'https://cloud.tencent.com/document/api/215/36034',\n    groupName: '私有网络',\n  },\n  {\n    service: 'vpngw',\n    label: '私有网络-VPN 网关(VPNGW)',\n    namespace: 'QCE/VPNGW',\n    href: 'https://cloud.tencent.com/document/product/248/45070',\n    groupName: '私有网络',\n  },\n  {\n    service: 'vpnx',\n    label: '私有网络-VPN 通道(VPNX)',\n    namespace: 'QCE/VPNX',\n    href: 'https://cloud.tencent.com/document/product/248/45071',\n    groupName: '私有网络',\n  },\n  {\n    service: 'dcg',\n    label: '私有网络-专线网关(DCG)',\n    namespace: 'QCE/DCG',\n    href: 'https://cloud.tencent.com/document/product/248/45072',\n    groupName: '私有网络',\n  },\n  {\n    service: 'ceipSummary',\n    label: '私有网络-Anycast弹性公网IP(CEIP_SUMMARY)',\n    namespace: 'QCE/CEIP_SUMMARY',\n    href: 'https://cloud.tencent.com/document/product/248/50381',\n    groupName: '私有网络',\n  },\n  {\n    service: 'vpcNetDetect',\n    label: '私有网络-网络探测(VPC_NET_DETECT)',\n    namespace: 'QCE/VPC_NET_DETECT',\n    href: 'https://cloud.tencent.com/document/product/248/50384',\n    groupName: '私有网络',\n  },\n  {\n    service: 'vbc',\n    label: '私有网络云联网(VBC)',\n    namespace: 'QCE/VBC',\n    href: 'https://cloud.tencent.com/document/product/248/45073',\n    groupName: '私有网络',\n  },\n  {\n    service: 'lb',\n    label: '私有网络弹性公网IP(LB)',\n    namespace: 'QCE/LB',\n    href: 'https://cloud.tencent.com/document/product/248/45099',\n    groupName: '私有网络',\n  },\n  {\n    service: 'lbPublic',\n    label: '公网负载均衡监控指标(LB_PUBLIC)',\n    namespace: 'QCE/LB_PUBLIC',\n    href: 'https://cloud.tencent.com/document/product/248/51898',\n    groupName: '负载均衡（多场景版）',\n  },\n  {\n    service: 'lbPrivate',\n    label: '内网负载均衡四层协议监控指标(LB_PRIVATE)',\n    namespace: 'QCE/LB_PRIVATE',\n    href: 'https://cloud.tencent.com/document/product/248/51899',\n    groupName: '负载均衡（多场景版）',\n  },\n  {\n    service: 'loadBalance',\n    label: '内网负载均衡七层协议监控指标(LOADBALANCE)',\n    namespace: 'QCE/LOADBALANCE',\n    href: 'https://cloud.tencent.com/document/product/248/51901',\n    groupName: '负载均衡（多场景版）',\n  },\n  {\n    service: 'vClb',\n    label: '负载均衡（精简版）',\n    namespace: 'QCE/V_CLB',\n    href: 'https://cloud.tencent.com/document/product/248/51901',\n    groupName: '负载均衡（精简版）',\n  },\n  {\n    service: 'cdn',\n    label: '国内域名(CDN)',\n    namespace: 'QCE/CDN',\n    hideRegion: true,\n    href: 'https://cloud.tencent.com/document/product/248/50386',\n    groupName: 'CDN',\n  },\n  {\n    service: 'cdnProvince',\n    label: '省份域名(CDN_LOG_DATA)',\n    namespace: 'QCE/CDN_LOG_DATA',\n    hideRegion: true,\n    href: 'https://cloud.tencent.com/document/product/248/50388',\n    groupName: 'CDN',\n  },\n  {\n    service: 'ovCdn',\n    label: '国外域名(OV_CDN)',\n    namespace: 'QCE/OV_CDN',\n    hideRegion: true,\n    href: 'https://cloud.tencent.com/document/product/248/50387',\n    groupName: 'CDN',\n  },\n  {\n    service: 'scf',\n    label: '云函数(SCF)',\n    namespace: 'QCE/SCF_V2',\n    href: 'https://cloud.tencent.com/document/product/248/45130',\n  },\n  {\n    service: 'cfs',\n    label: '文件存储(CFS)',\n    namespace: 'QCE/CFS',\n    href: 'https://cloud.tencent.com/document/product/248/45143',\n  },\n  {\n    service: 'cos',\n    label: '对象存储(COS)',\n    namespace: 'QCE/COS',\n    href: 'https://cloud.tencent.com/document/product/248/45140',\n  },\n  {\n    service: 'ckafka',\n    label: '消息队列(CKAFKA)',\n    namespace: 'QCE/CKAFKA',\n    href: 'https://cloud.tencent.com/document/product/248/45121',\n    groupName: '消息队列',\n  },\n  {\n    service: 'cmq',\n    label: '消息队列CMQ(队列服务监控CMQ)',\n    namespace: 'QCE/CMQ',\n    href: 'https://cloud.tencent.com/document/product/248/45114',\n    groupName: '消息队列',\n  },\n  {\n    service: 'cmqTopic',\n    label: '消息队列CMQTOPIC(主题订阅监控)',\n    namespace: 'QCE/CMQTOPIC',\n    href: 'https://cloud.tencent.com/document/product/248/45113',\n    groupName: '消息队列',\n  },\n  {\n    service: 'tdmq',\n    label: '消息队列 TDMQ(TDMQ)',\n    namespace: 'QCE/TDMQ',\n    href: 'https://cloud.tencent.com/document/product/248/51450',\n    groupName: '消息队列',\n  },\n  {\n    service: 'dcx',\n    label: '专线接入-专用通道(DCX)',\n    namespace: 'QCE/DCX',\n    href: 'https://cloud.tencent.com/document/product/248/45101',\n    groupName: '专线接入',\n  },\n  {\n    service: 'dc',\n    label: '专线接入-物理专线(DC)',\n    namespace: 'QCE/DC',\n    href: 'https://cloud.tencent.com/document/product/248/45102',\n    groupName: '专线接入',\n  },\n  {\n    service: 'cpm',\n    label: '黑石物理服务器(CPM)',\n    namespace: 'QCE/CPM',\n    href: 'https://cloud.tencent.com/document/product/248/45881',\n    groupName: '黑石物理服务器',\n  },\n  {\n    service: 'bmPcx',\n    label: '黑石对等连接(BM_PCX)',\n    namespace: 'QCE/BM_PCX',\n    href: 'https://cloud.tencent.com/document/product/248/45884',\n    groupName: '黑石物理服务器',\n  },\n  {\n    service: 'bmLb',\n    label: '黑石外网负载均衡(BM_LB)',\n    namespace: 'QCE/BM_LB',\n    href: 'https://cloud.tencent.com/document/product/248/45886',\n  },\n  {\n    service: 'bmIntraLb',\n    label: '黑石内网负载均衡(BM_INTRA_LB)',\n    namespace: 'QCE/BM_INTRA_LB',\n    href: 'https://cloud.tencent.com/document/product/248/45885',\n    groupName: '黑石物理服务器',\n  },\n  {\n    service: 'ces',\n    label: 'Elasticsearch指标(CES)',\n    namespace: 'QCE/CES',\n    href: 'https://cloud.tencent.com/document/product/248/45129',\n  },\n  {\n    service: 'mrHDFS',\n    label: '弹性MapReduce(HDFS)',\n    namespace: 'QCE/TXMR_HDFS',\n    href: 'https://cloud.tencent.com/document/product/248/44797',\n    groupName: '弹性MapReduce',\n  },\n  {\n    service: 'mrHBASE',\n    label: '弹性MapReduce(HBASE)',\n    namespace: 'QCE/TXMR_HBASE',\n    href: 'https://cloud.tencent.com/document/product/248/45567',\n    groupName: '弹性MapReduce',\n  },\n  {\n    service: 'mrHIVE',\n    label: '弹性MapReduce(HIVE)',\n    namespace: 'QCE/TXMR_HIVE',\n    href: 'https://cloud.tencent.com/document/product/248/45569',\n    groupName: '弹性MapReduce',\n  },\n  {\n    service: 'mrNODE',\n    label: '弹性MapReduce(NODE)',\n    namespace: 'QCE/TXMR_NODE',\n    href: 'https://cloud.tencent.com/document/product/248/45570',\n    groupName: '弹性MapReduce',\n  },\n  {\n    service: 'mrPRESTO',\n    label: '弹性MapReduce(PRESTO)',\n    namespace: 'QCE/TXMR_PRESTO',\n    href: 'https://cloud.tencent.com/document/product/248/45571',\n    groupName: '弹性MapReduce',\n  },\n  {\n    service: 'mrSPARK',\n    label: '弹性MapReduce(SPARK)',\n    namespace: 'QCE/TXMR_SPARK',\n    href: 'https://cloud.tencent.com/document/product/248/45572',\n    groupName: '弹性MapReduce',\n  },\n  {\n    service: 'mrYARN',\n    label: '弹性MapReduce(YARN)',\n    namespace: 'QCE/TXMR_YARN',\n    href: 'https://cloud.tencent.com/document/product/248/45573',\n    groupName: '弹性MapReduce',\n  },\n  {\n    service: 'mrZOOKEEPER',\n    label: '弹性MapReduce(ZOOKEEPER)',\n    namespace: 'QCE/TXMR_ZOOKEEPER',\n    href: 'https://cloud.tencent.com/document/product/248/45574',\n    groupName: '弹性MapReduce',\n  },\n  {\n    service: 'cbs',\n    label: '云硬盘(BLOCK_STORAGE)',\n    namespace: 'QCE/BLOCK_STORAGE',\n    href: 'https://cloud.tencent.com/document/product/362/2345',\n  },\n  {\n    service: 'apigateway',\n    label: 'API 网关(APIGATEWAY)',\n    namespace: 'QCE/APIGATEWAY',\n    href: 'https://cloud.tencent.com/document/product/248/45127',\n  },\n  {\n    service: 'qaap',\n    label: '全球应用加速(QAAP)',\n    namespace: 'QCE/QAAP',\n    href: 'https://cloud.tencent.com/document/product/608',\n  },\n  {\n    service: 'ecm',\n    label: '边缘计算和网络监控(ECM)',\n    hideRegion: true,\n    namespace: 'QCE/ECM',\n    href: 'https://cloud.tencent.com/document/product/1108',\n    groupName: '边缘计算机器',\n  },\n  {\n    service: 'ecmBlockStorage',\n    label: '边缘计算存储监控(ECM_BLOCK_STORAGE)',\n    hideRegion: true,\n    namespace: 'QCE/ECM_BLOCK_STORAGE',\n    href: 'https://cloud.tencent.com/document/product/1108',\n    groupName: '边缘计算机器',\n  },\n  {\n    service: 'ecmLb',\n    label: '边缘计算负载均衡(ECM_LB)',\n    hideRegion: true,\n    namespace: 'QCE/ECM_LB',\n    href: 'https://cloud.tencent.com/document/product/1108',\n    groupName: '边缘计算机器',\n  },\n  {\n    service: 'gse',\n    label: '游戏服务器伸缩监控指标(GSE))',\n    namespace: 'QCE/GSE',\n    href: 'https://cloud.tencent.com/document/product/1165',\n  },\n  {\n    service: 'cls',\n    label: '日志服务监控指标(CLS)',\n    namespace: 'QCE/CLS',\n    href: 'https://cloud.tencent.com/document/product/614',\n  },\n  // {\n  //   service: 'lighthouse',\n  //   label: '轻量应用服务器(LIGHTHOUSE)',\n  //   namespace: 'QCE/LIGHTHOUSE',\n  //   href: 'https://cloud.tencent.com/document/product/1207',\n  // },\n  // {\n  //   service: 'tsf',\n  //   label: ' 微服务平台(TSF)',\n  //   namespace: 'QCE/TSF',\n  //   href: 'https://cloud.tencent.com/document/product/649',\n  // },\n  // {\n  //   service: 'waf',\n  //   label: 'Web 应用防火墙(WAF)',\n  //   hideRegion: true,\n  //   namespace: 'QCE/WAF',\n  //   href: 'https://cloud.tencent.com/document/product/627',\n  // },\n];\nconst Datasources = {};\nconst InitStates = {};\nconst InstanceAliasList = {};\nconst GetInstanceQueryParams = {};\n\n/**\n * 由于目录命名不规范，导致需要使用额外逻辑保证正确性。从目录到具体service的映射\n */\nconst hackModuleName = {\n  // lb_loadBalance: 'loadBalance',\n  postgresql: 'postgres',\n  mongodb: 'mongoDB',\n  clb: ['lbPrivate', 'lbPublic', 'loadBalance'],\n  mr: ['mrHDFS', 'mrHBASE', 'mrHIVE', 'mrNODE', 'mrPRESTO', 'mrSPARK', 'mrYARN', 'mrZOOKEEPER'],\n};\n\nconst requireModule = (require as any).context('./', true, /^\\.\\/[a-zA-Z]\\w+\\/(datasource)|(query(_def)?)\\.ts$/);\n\nrequireModule.keys().forEach((filePath) => {\n  let [, moduleName, fileName] = filePath.split('/');\n\n  // hack： 这里是由于产品目录命名不规范,所以才会多这么一段代码\n  moduleName = hackModuleName[moduleName] ?? moduleName;\n\n  // 目录与模块的映射关系，不管是一对一还是一对多，均按数组进行统一处理\n  [].concat(moduleName).forEach((module: string) => {\n    // 这个service就是产品配置中的service，需要注意这里的service是根据目录名称算出来的，因此目录名称一定要和service对应\n    const service = module.replace(/_([a-zA-Z])/g, (_, b) => b.toUpperCase());\n    const prefix = service.toUpperCase(); // 命名规则\n\n    // datasource\n    if (fileName === 'datasource.ts') {\n      const Cls = require(`${filePath}`).default;\n\n      // 想办法为实例注入service，不能为prototype或则类本身注入，因为会造成互相污染，详尽mrDatasource\n      Datasources[`${prefix}Datasource`] = class {\n        constructor(...params) {\n          const target = new Cls(...params, service);\n          target.service = service;\n          // eslint-disable-next-line no-constructor-return\n          return target;\n        }\n      };\n    }\n    // query\n    if (fileName === 'query.ts') {\n      require(`${filePath}`);\n    }\n    // query_def\n    if (fileName === 'query_def.ts') {\n      const alias = `${prefix}InstanceAliasList`;\n      const getParams = `${prefix}GetInstanceQueryParams`;\n\n      const target = require(`${filePath}`);\n\n      InitStates[service] = target.default; // FIXME: 这里需不需要深拷贝？\n      InstanceAliasList[alias] = target[alias] ?? target['InstanceAliasList'];\n      GetInstanceQueryParams[getParams] = target[getParams] ?? target['GetInstanceQueryParams'];\n    }\n  });\n});\n\nexport {\n  InitStates as InitServiceState,\n  SERVICES,\n  Datasources,\n  InstanceAliasList,\n  GetInstanceQueryParams,\n  // DefaultDimensions\n};\n\n// console.log(Datasources, InitStates, InstanceAliasList, GetInstanceQueryParams);\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/ECM_BLOCK_STORAGE';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'ecmBlockStorageQuery';\n\nconst ECMBLOCKSTORAGEInvalidDemensions = {\n  uuid: 'UUID',\n  diskId: 'DiskId',\n};\n\n// 需和文件名对应\nconst ECMBLOCKSTORAGEInstanceAliasList = ['InstanceId', 'InstanceName'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n  diskId: 'DiskId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst ECMBLOCKSTORAGEFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  'zone-name': [],\n  'module-id': [],\n  'module-name': [],\n  'instance-id': [],\n  'instance-name': [],\n  'ip-address': [],\n  'instance-uuid': [],\n  'instance-state': {},\n  'internet-service-provider': [],\n  'instance-family': [],\n  'image-id': [],\n  'vpc-id': [],\n  'subnet-id': [],\n};\n\nconst ECMBLOCKSTORAGEFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'zone-name',\n    enDescriptor: 'zone-name',\n    cnDescriptor: '排列顺序',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'module-id',\n    enDescriptor: 'module-id',\n    cnDescriptor: '模块ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'module-name',\n    enDescriptor: 'module-name',\n    cnDescriptor: '模块名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-id',\n    enDescriptor: 'instance-id',\n    cnDescriptor: '实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-name',\n    enDescriptor: 'instance-name',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'ip-address',\n    enDescriptor: 'ip-address',\n    cnDescriptor: '内网/公网IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-uuid',\n    enDescriptor: 'instance-uuid',\n    cnDescriptor: '实例uuid',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-state',\n    enDescriptor: 'instance-state',\n    cnDescriptor: '实例状态',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '创建中', value: 'PENDING' },\n      { text: '创建失败', value: 'LAUNCH_FAILED' },\n      { text: '运行中', value: 'RUNNING' },\n      { text: '关机', value: 'STOPPED' },\n      { text: '开机中', value: 'STARTING' },\n      { text: '关机中', value: 'STOPPING' },\n      { text: '重启中', value: 'REBOOTING' },\n      { text: '停止待销毁', value: 'SHUTDOWN' },\n      { text: '销毁中', value: 'TERMINATING' },\n    ],\n  },\n  {\n    key: 'internet-service-provider',\n    enDescriptor: 'internet-service-provider',\n    cnDescriptor: '公网IP所属的运营商',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-family',\n    enDescriptor: 'instance-family',\n    cnDescriptor: '机型family',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'image-id',\n    enDescriptor: 'image-id',\n    cnDescriptor: '镜像ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'vpc-id',\n    cnDescriptor: '实例的vpc id',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'subnet-id',\n    enDescriptor: 'subnet-id',\n    cnDescriptor: '实例的subnet id',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/1108/42565',\n  namespace,\n  fieldDescriptor: ECMBLOCKSTORAGEFilterFieldsDescriptor,\n};\n\nconst ECMBLOCKSTORAGE_STATE = {\n  region: 'ap-guangzhou',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  diskId: '',\n  queries: ECMBLOCKSTORAGEFilterFields,\n};\n\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  diskId: 'diskId',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  DiskId: {\n    dim_KeyInStorage: keyInStorage.diskId,\n    dim_KeyInTarget: 'diskId',\n    dim_KeyInMap: templateQueryIdMap.diskId,\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nexport default ECMBLOCKSTORAGE_STATE;\nexport {\n  ECMBLOCKSTORAGEFilterFieldsDescriptor,\n  templateQueryIdMap,\n  ECMBLOCKSTORAGEInstanceAliasList,\n  ECMBLOCKSTORAGEInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  keyInStorage,\n  queryMonitorExtraConfg,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as ECMBLOCKSTORAGEGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/APIGATEWAY';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'apigatewayQuery';\n\nconst APIGATEWAYInvalidDemensions = {\n  serviceId: 'ServiceId',\n  environmentName: 'EnvironmentName',\n  apiid: 'Apiid',\n  apiId: 'Apiid',\n};\n\n// 需和文件名对应\nconst APIGATEWAYInstanceAliasList = ['ServiceId', 'ServiceName'];\n\nconst templateQueryIdMap = {\n  instance: 'ServiceId',\n  environmentName: 'EnvironmentName',\n};\n\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  environmentList: 'EnvironmentList',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  EnvironmentName: {\n    dim_KeyInStorage: keyInStorage.environmentList,\n    dim_KeyInTarget: 'EnvironmentName',\n    dim_KeyInMap: templateQueryIdMap.environmentName,\n  },\n};\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst APIGATEWAYFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  ServiceId: [],\n  ServiceName: [],\n  NotUsagePlanId: [],\n  Environment: [],\n  IpVersion: [],\n};\n\nconst APIGATEWAYFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'ServiceId',\n    enDescriptor: 'ServiceId',\n    cnDescriptor: '服务id',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'ServiceName',\n    enDescriptor: 'ServiceName',\n    cnDescriptor: '服务名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'NotUsagePlanId',\n    enDescriptor: 'NotUsagePlanId',\n    cnDescriptor: 'NotUsagePlanId',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'Environment',\n    enDescriptor: 'Environment',\n    cnDescriptor: '环境名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'IpVersion',\n    enDescriptor: 'IpVersion',\n    cnDescriptor: 'IP版本',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/628/45198',\n  namespace,\n  fieldDescriptor: APIGATEWAYFilterFieldsDescriptor,\n};\n\nconst APIGATEWAY_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'ServiceId',\n  EnvironmentName: '',\n  queries: APIGATEWAYFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\n// regions for dropdown\nconst regionSupported = [\n  { text: '华北地区(北京)', value: 'ap-beijing' },\n  { text: '西南地区(成都)', value: 'ap-chengdu' },\n  { text: '西南地区(重庆)', value: 'ap-chongqing' },\n  { text: '华南地区(广州)', value: 'ap-guangzhou' },\n  { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n  { text: '亚太南部(孟买)', value: 'ap-mumbai' },\n  { text: '华东地区(南京)', value: 'ap-nanjing' },\n  { text: '华东地区(上海)', value: 'ap-shanghai' },\n  { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },\n  { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n  { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n  { text: '亚太东北(东京)', value: 'ap-tokyo' },\n  { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },\n  { text: '美国东部(弗吉尼亚)', value: 'na-ashburn' },\n  { text: '美国西部(硅谷)', value: 'na-siliconvalley' },\n  { text: '北美地区(多伦多)', value: 'na-toronto' },\n];\nexport default APIGATEWAY_STATE;\nexport {\n  APIGATEWAYFilterFieldsDescriptor,\n  templateQueryIdMap,\n  APIGATEWAYInstanceAliasList,\n  APIGATEWAYInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  regionSupported,\n  queryMonitorExtraConfg,\n  keyInStorage,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as APIGATEWAYGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\nexport const InstanceQueryDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为10，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceIds',\n    enDescriptor: 'InstanceIds',\n    cnDescriptor: '按照一个或者多个实例ID查询。实例ID形如: emr-xxxxxxxx ',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'OrderField',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '实例ID', value: 'clusterId' },\n      { text: '创建时间', value: 'addTime' },\n      { text: '状态', value: 'status' },\n    ],\n  },\n  {\n    key: 'Asc',\n    enDescriptor: 'Order Direction',\n    cnDescriptor: '排序方式',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '降序', value: 0 },\n      { text: '升序', value: 1 },\n    ],\n  },\n  {\n    key: 'ProjectId',\n    enDescriptor: 'ProjectId',\n    cnDescriptor: '实例所属项目ID',\n    link: '',\n    type: 'inputnumber',\n  },\n  {\n    key: 'DisplayStrategy',\n    enDescriptor: 'DisplayStrategy',\n    cnDescriptor: '集群筛选策略',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '未销毁的实例', value: 'clusterList' },\n      { text: '正常运行的实例', value: 'monitorManage' },\n    ],\n  },\n];\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\n// 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key\nexport const InvalidDemensions = new Proxy(\n  {},\n  {\n    get(target, k, receiver) {\n      if (typeof k === 'string') {\n        if (k.startsWith('id4')) return 'ClusterId'; // id4****\n        if (k.startsWith('host4')) return 'Ip'; // host4***\n      }\n      return Reflect.get(target, k, receiver);\n    },\n    has(target, propKey) {\n      return true;\n    },\n  }\n);\n\nexport const templateQueryIdMap = {\n  instance: 'ClusterId',\n  node: 'Ip',\n};\n\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  node: 'nodeIP',\n};\n\n/**\n * 如果有InstanceId额外的维度，原则上都需要传入此map结构配置\n *\n * `key` 的含义：\n *   经过InvalidDemensions处理后的string。topicId => TopicId。\n *   否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\n *\n * `value` 的含义：\n *   @param {1} dim_KeyInStorage  指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n *   @param {2} dim_KeyInTarget   通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n *                                  默认取通过InvalidDemsion处理后的key\n *   @param {3} dim_KeyInMap      保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n *                                  即：templateQueryIdMap中内容。\n *                                  联合上面 2 的内容筛选出原始sourceMap\n */\nconst queryMonitorExtraConfg = {\n  Ip: {\n    dim_KeyInStorage: keyInStorage.node,\n    dim_KeyInTarget: 'nodeIP',\n    dim_KeyInMap: templateQueryIdMap.node,\n  },\n};\n\n// 与名称挂钩的变量\nconst InstanceAliasList = ['ClusterId', 'ClusterName'];\nexport { InstanceAliasList, GetInstanceQueryParams, queryMonitorExtraConfg, keyInStorage };\n\n// 界面状态模型，default\nexport default {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'ClusterId',\n  nodeIP: '',\n  queries: {\n    Offset: 0,\n    Limit: 10,\n    DisplayStrategy: '',\n    OrderBy: {},\n    Order: {},\n    InstanceIds: [],\n    ProjectId: -1,\n    OrderField: '',\n    Asc: '',\n  },\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/V_CLB';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'vClbQuery';\n\nconst VCLBInvalidDemensions = {\n  InstanceId: 'LoadBalancerId',\n  // vip: 'LoadBalancerVips',\n  // loadBalancerPort: 'Port',\n  // protocol: 'Protocol',\n};\n\n// 要和文件名方式一致，ceip_summary=>CEIPSUMMARY\nconst VCLBInstanceAliasList = ['LoadBalancerId', 'LoadBalancerVips', 'LoadBalancerName'];\n\nconst templateQueryIdMap = {\n  instance: 'LoadBalancerId',\n};\nconst ForwardTypes = [\n  { text: '通用的负载均衡', value: 1 },\n  { text: '传统的负载均衡', value: 0 },\n];\n\nconst OrderBy = [\n  { text: 'LoadBalancerName', value: 'LoadBalancerName' },\n  { text: 'CreateTime', value: 'CreateTime' },\n  { text: 'Domain', value: 'Domain' },\n  { text: 'LoadBalancerType', value: 'LoadBalancerType' },\n];\n\nconst OrderType = [\n  { text: '升序', value: 0 },\n  { text: '降序', value: 1 },\n];\n\nconst WithRs = [\n  { text: '没有绑定后端服务', value: 0 },\n  { text: '绑定后端服务', value: 1 },\n  { text: '查询全部', value: -1 },\n];\nconst VCLBFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n  },\n  {\n    key: 'LoadBalancerIds',\n    enDescriptor: 'LoadBalancer ID',\n    cnDescriptor: '实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerName',\n    enDescriptor: 'LoadBalancer Name',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'Forward',\n    enDescriptor: 'Forward',\n    cnDescriptor: '负载均衡实例类型',\n    link: '',\n    type: 'select',\n    list: ForwardTypes,\n  },\n  {\n    key: 'Domain',\n    enDescriptor: 'Domain',\n    cnDescriptor: '域名，腾讯云为负载均衡实例分配的域名，本参数仅对传统型公网负载均衡才有意义',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'LoadBalancerVips',\n    enDescriptor: 'LoadBalancer Vips',\n    cnDescriptor: '负载均衡实例的 VIP 地址',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'BackendPrivateIps',\n    enDescriptor: 'BackendPrivate Ips',\n    cnDescriptor: '负载均衡绑定的后端服务的内网 IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'BackendPublicIps',\n    enDescriptor: 'BackendPublic Ips',\n    cnDescriptor: '负载均衡绑定的后端服务的外网 IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'ProjectId',\n    enDescriptor: 'Project ID',\n    cnDescriptor: '负载均衡实例所属的项目 ID',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'Vpc ID',\n    cnDescriptor: '负载均衡实例所属私有网络',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SecurityGroup',\n    enDescriptor: 'Security Group',\n    cnDescriptor: '安全组ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'MasterZone',\n    enDescriptor: 'Master Zone',\n    cnDescriptor: '主可用区ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'WithRs',\n    enDescriptor: 'WithRs',\n    cnDescriptor: '负载均衡是否绑定后端服务',\n    link: '',\n    type: 'select',\n    list: WithRs,\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderBy,\n  },\n  {\n    key: 'OrderType',\n    enDescriptor: 'OrderByType',\n    cnDescriptor: '排序方式',\n    link: '',\n    type: 'select',\n    list: OrderType,\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/214/30685',\n  namespace,\n  fieldDescriptor: VCLBFilterFieldsDescriptor,\n};\nconst LBFields = {\n  LoadBalancerIds: [],\n  Forward: undefined,\n  LoadBalancerName: '',\n  Domain: '',\n  LoadBalancerVips: [],\n  BackendPublicIps: [],\n  BackendPrivateIps: [],\n  Limit: 20,\n  Offset: 0,\n  ProjectId: undefined,\n  WithRs: {},\n  VpcId: '',\n  SecurityGroup: '',\n  MasterZone: '',\n  OrderBy: {},\n  OrderType: {},\n};\n\nconst VCLB_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'LoadBalancerId',\n  Port: '',\n  Protocol: '',\n  listener: '',\n  // listenerAlias: 'ListenerId',\n  queries: LBFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\n\n// regions for dropdown\nconst regionSupported = [\n  { text: '亚太东南(曼谷)', value: 'ap-bangkok' },\n  { text: '华北地区(北京)', value: 'ap-beijing' },\n  { text: '西南地区(成都)', value: 'ap-chengdu' },\n  { text: '西南地区(重庆)', value: 'ap-chongqing' },\n  { text: '华南地区(广州)', value: 'ap-guangzhou' },\n  { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n  { text: '亚太南部(雅加达)', value: 'ap-jakarta' },\n  { text: '亚太南部(孟买)', value: 'ap-mumbai' },\n  { text: '亚太东北(首尔)', value: 'ap-seoul' },\n  { text: '华东地区(南京)', value: 'ap-nanjing' },\n  { text: '华东地区(上海)', value: 'ap-shanghai' },\n  { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },\n  { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n  { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n  { text: '亚太东北(东京)', value: 'ap-tokyo' },\n  { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },\n  { text: '欧洲地区(莫斯科)', value: 'eu-moscow' },\n  { text: '美国东部(弗吉尼亚)', value: 'na-ashburn' },\n  { text: '美国西部(硅谷)', value: 'na-siliconvalley' },\n  { text: '北美地区(多伦多)', value: 'na-toronto' },\n];\nconst clbNamespaceMap = {\n  public: 'QCE/LB_PUBLIC',\n  private: 'QCE/LB_PRIVATE',\n};\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['InstanceId'];\n  });\n  return metricTmp;\n}\nexport default VCLB_STATE;\nexport {\n  VCLBFilterFieldsDescriptor,\n  templateQueryIdMap,\n  VCLBInstanceAliasList,\n  VCLBInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  clbNamespaceMap,\n  modifyDimensons,\n  regionSupported,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as BMLBGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/CYNOSDB_MYSQL';\n\n// 按照驼峰方式命名，和SERVICES保持一致，abcDeF会成为angular组件名字<abc-de-f-query />\nconst queryEditorName = 'cynosdbMysqlQuery';\n\nconst cynosdbMysqlFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  OrderBy: {},\n  OrderByType: {},\n  InstanceIds: [],\n  DbType: {},\n  // Status: '',\n};\n\nconst cynosdbMysqlFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 1000,\n  },\n  {\n    key: 'InstanceIds',\n    enDescriptor: 'InstanceIds',\n    cnDescriptor: '实例id列表',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '创建时间', value: 'CREATETIME' },\n      { text: '过期时间', value: 'PERIODENDTIME' },\n    ],\n  },\n  {\n    key: 'OrderByType',\n    enDescriptor: 'OrderByType',\n    cnDescriptor: '排序类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '升序', value: 'ASC' },\n      { text: '降序', value: 'DESC' },\n    ],\n  },\n  {\n    key: 'DbType',\n    enDescriptor: 'DbType',\n    cnDescriptor: '引擎类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'MYSQL', value: 'MYSQL' },\n      { text: 'POSTGRESQL', value: 'POSTGRESQL' },\n    ],\n  },\n  // {\n  //   key: 'Status',\n  //   enDescriptor: 'Status',\n  //   cnDescriptor: '实例状态',\n  //   link: '',\n  //   type: 'input',\n  // },\n];\n// regions for dropdown\nconst regionSupported = [\n  { text: '华北地区(北京)', value: 'ap-beijing' },\n  { text: '华南地区(广州)', value: 'ap-guangzhou' },\n  { text: '华东地区(南京)', value: 'ap-nanjing' },\n  { text: '华东地区(上海)', value: 'ap-shanghai' },\n];\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/1003/48334',\n  namespace,\n  fieldDescriptor: cynosdbMysqlFilterFieldsDescriptor,\n};\n\nconst CYNOSDB_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: cynosdbMysqlFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\n// 和文件名字一样CYNOSDBMYSQL\nconst CYNOSDBMYSQLInstanceAliasList = ['InstanceId', 'InstanceName'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\n\nconst CYNOSDBInvalidDemensions = {\n  instanceid: 'InstanceId',\n  instanceId: 'InstanceId',\n};\nconst checkKeys = ['instanceId'];\nfunction modifyDimensons(metricItem) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['InstanceId'];\n  });\n  return metricTmp;\n}\n\nexport default CYNOSDB_STATE;\nexport {\n  cynosdbMysqlFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CYNOSDBMYSQLInstanceAliasList,\n  CYNOSDBInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  regionSupported,\n  modifyDimensons,\n  checkKeys,\n  // params前缀为service的全大写\n  GetInstanceQueryParams as CYNOSDBMYSQLGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\nexport const SCFQueryDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'SearchKey',\n    enDescriptor: 'SearchKey',\n    cnDescriptor: '支持FunctionName模糊匹配',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'Namespace',\n    enDescriptor: 'Namespace',\n    cnDescriptor: '云函数命名空间',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'Description',\n    enDescriptor: 'Description',\n    cnDescriptor: '函数描述，支持模糊搜索',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'AddTime', value: 'AddTime' },\n      { text: 'ModTime', value: 'ModTime' },\n      { text: 'FunctionName', value: 'FunctionName' },\n    ],\n  },\n  {\n    key: 'Order',\n    enDescriptor: 'Order Direction',\n    cnDescriptor: '排序方式',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'ASC', value: 'ASC' },\n      { text: 'DESC', value: 'DESC' },\n    ],\n  },\n  // {\n  //   key: 'Filters',\n  //   enDescriptor: 'Filters',\n  //   cnDescriptor: '按照标签键值对进行过滤',\n  //   link: '',\n  //   type: 'dropdownmulti',\n  // },\n];\n\nconst SCF_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'FunctionName',\n  version: '',\n  queries: {\n    Offset: 0,\n    Limit: 20,\n    OrderBy: {},\n    Order: {},\n    SearchKey: '',\n    Namespace: '',\n    Description: '',\n    // Filters:  {},\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\nconst SCFInstanceAliasList = ['FunctionId', 'FunctionName'];\n\n// 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key\nconst SCFInvalidDemensions = {\n  functionName: 'FunctionName',\n  namespace: 'Namespace',\n  version: 'Version',\n};\n\nconst templateQueryIdMap = {\n  instance: 'FunctionName',\n  version: 'Version',\n};\nconst regionSupported = [\n  { text: '华北地区(北京)', value: 'ap-beijing' },\n  { text: '西南地区(成都)', value: 'ap-chengdu' },\n  { text: '西南地区(重庆)', value: 'ap-chongqing' },\n  { text: '华南地区(广州)', value: 'ap-guangzhou' },\n  { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n  { text: '亚太南部(孟买)', value: 'ap-mumbai' },\n  { text: '华东地区(上海)', value: 'ap-shanghai' },\n  { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },\n  { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n  { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n  { text: '亚太东北(东京)', value: 'ap-tokyo' },\n  { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },\n  { text: '美国西部(硅谷)', value: 'na-siliconvalley' },\n  { text: '北美地区(多伦多)', value: 'na-toronto' },\n];\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  version: 'version',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  Version: {\n    dim_KeyInStorage: keyInStorage.version,\n    dim_KeyInTarget: 'version',\n    dim_KeyInMap: templateQueryIdMap.version,\n  },\n};\nexport default SCF_STATE;\nexport {\n  SCFInstanceAliasList,\n  SCFInvalidDemensions,\n  queryMonitorExtraConfg,\n  regionSupported,\n  templateQueryIdMap,\n  keyInStorage,\n  GetInstanceQueryParams as SCFGetInstanceQueryParams,\n};\n\n// monitor监控数据默认支持的维度\nexport const SCFDefaultDimensionList = ['functionName', 'namespace', 'version'];\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/CLS';\nconst queryEditorName = 'clsQuery';\n\nconst CLSInvalidDemensions = {\n  // instanceid: 'TopicId',\n};\n\n// 需和文件名对应\nconst CLSInstanceAliasList = ['TopicId', 'TopicName'];\n\nconst templateQueryIdMap = {\n  instance: 'TopicId',\n};\n\n// 需要缓存到storage的内容的key列表\n// const keyInStorage = {\n//   fleet: 'fleet', // 实例队列\n//   queue: 'queueName', // 会话队列\n// };\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\n// const queryMonitorExtraConfg = {\n//   FleetId: {\n//     dim_KeyInStorage: keyInStorage.fleet,\n//     dim_KeyInTarget: 'FleetId',\n//     dim_KeyInMap: templateQueryIdMap.FleetId,\n//   },\n//   Name: {\n//     dim_KeyInStorage: keyInStorage.queue,\n//     dim_KeyInTarget: 'Name',\n//     dim_KeyInMap: templateQueryIdMap.Name,\n//   },\n// };\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst CLSFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  topicName: [],\n  topicId: [],\n  logsetName: [],\n  logsetId: [],\n  tagKey: [],\n  'tag:tagKey': [],\n  storageType: {},\n};\n\nconst CLSFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'topicName',\n    enDescriptor: 'topicName',\n    cnDescriptor: '日志主题名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'topicId',\n    enDescriptor: 'topicId',\n    cnDescriptor: '日志主题ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'logsetName',\n    enDescriptor: 'logsetName',\n    cnDescriptor: '日志集名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'logsetId',\n    enDescriptor: 'logsetId',\n    cnDescriptor: '日志集ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'tagKey',\n    enDescriptor: 'tagKey',\n    cnDescriptor: '标签键',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'tag:tagKey',\n    enDescriptor: 'tag - tagKey',\n    cnDescriptor: '标签键值对',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'storageType',\n    enDescriptor: 'storageType',\n    cnDescriptor: '日志主题的存储类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '实时存储', value: 'hot' },\n      { text: '离线存储', value: 'cold' },\n    ],\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/614/56454',\n  namespace,\n  fieldDescriptor: CLSFilterFieldsDescriptor,\n};\n\nconst CLS_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'TopicId',\n  uin: '',\n  queries: CLSFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\n// regions for dropdown\nconst regionSupported = [\n  { text: '亚太东南(曼谷)', value: 'ap-bangkok' },\n  { text: '华北地区(北京)', value: 'ap-beijing' },\n  { text: '西南地区(成都)', value: 'ap-chengdu' },\n  { text: '西南地区(重庆)', value: 'ap-chongqing' },\n  { text: '华南地区(广州)', value: 'ap-guangzhou' },\n  { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n  { text: '亚太东南（雅加达）', value: 'ap-jakarta' },\n  { text: '亚太南部(孟买)', value: 'ap-mumbai' },\n  { text: '亚太东北(首尔)', value: 'ap-seoul' },\n  { text: '华东地区(南京)', value: 'ap-nanjing' },\n  { text: '华东地区(上海)', value: 'ap-shanghai' },\n  { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },\n  { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n  { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n  { text: '亚太东北(东京)', value: 'ap-tokyo' },\n  { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },\n  { text: '欧洲地区(莫斯科)', value: 'eu-moscow' },\n  { text: '美国东部(弗吉尼亚)', value: 'na-ashburn' },\n  { text: '美国西部(硅谷)', value: 'na-siliconvalley' },\n  { text: '北美地区(多伦多)', value: 'na-toronto' },\n];\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    // item.Dimensions = item.Dimensions.map((v) => CLSInvalidDemensions[v] || v);\n    item.Dimensions = ['uin', 'TopicId'];\n  });\n  return metricTmp;\n}\nexport default CLS_STATE;\nexport {\n  CLSFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CLSInstanceAliasList,\n  CLSInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  regionSupported,\n  modifyDimensons,\n  // queryMonitorExtraConfg,\n  // fleetId,\n  // keyInStorage,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as CLSGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/SQLSERVER';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'sqlserverQuery';\n\nconst SQLSERVERInvalidDemensions = {\n  resourceId: 'InstanceId',\n};\n\nconst SQLSERVERInstanceAliasList = ['InstanceId', 'Name'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst SQLSERVERNETFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  ProjectId: null,\n  Status: {},\n  InstanceIdSet: [],\n  PayMode: {},\n  VpcId: '',\n  SubnetId: '',\n  VipSet: [],\n  InstanceNameSet: [],\n  VersionSet: [],\n  Zone: '',\n};\n\nconst SQLSERVERNETFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'ProjectId',\n    enDescriptor: 'ProjectId',\n    cnDescriptor: '项目ID',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'Status',\n    enDescriptor: 'Status',\n    cnDescriptor: '实例状态',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '申请中', value: 1 },\n      { text: '运行中', value: 2 },\n      { text: '受限运行中 (主备切换中)', value: 3 },\n      { text: '已隔离', value: 4 },\n      { text: '回收中', value: 5 },\n      { text: '已回收', value: 6 },\n      { text: '任务执行中', value: 7 },\n      { text: '已下线', value: 8 },\n      { text: '实例扩容中', value: 9 },\n      { text: '实例迁移中', value: 10 },\n      { text: '只读', value: 11 },\n      { text: '重启中', value: 12 },\n    ],\n  },\n  {\n    key: 'InstanceIdSet',\n    enDescriptor: 'InstanceIdSet',\n    cnDescriptor: '实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'PayMode',\n    enDescriptor: 'PayMode',\n    cnDescriptor: '子网实例ID',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '包年包月', value: 1 },\n      { text: '按量计费', value: 0 },\n    ],\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'VpcId',\n    cnDescriptor: '实例所属VPC的唯一字符串ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SubnetId',\n    enDescriptor: 'SubnetId',\n    cnDescriptor: '实例所属子网的唯一字符串ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'VipSet',\n    enDescriptor: 'VipSet',\n    cnDescriptor: '实例内网地址列表',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'InstanceNameSet',\n    enDescriptor: 'InstanceNameSet',\n    cnDescriptor: '实例名称列表, 模糊查询',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'VersionSet',\n    enDescriptor: 'VersionSet',\n    cnDescriptor: '实例版本代号列表',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'Zone',\n    enDescriptor: 'Zone',\n    cnDescriptor: '实例可用区',\n    link: '',\n    type: 'dropdown',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/238/19969',\n  namespace,\n  fieldDescriptor: SQLSERVERNETFilterFieldsDescriptor,\n};\n\n// regions for dropdown\nconst regionSupported = [\n  { text: '华北地区(北京)', value: 'ap-beijing' },\n  { text: '西南地区(成都)', value: 'ap-chengdu' },\n  { text: '西南地区(重庆)', value: 'ap-chongqing' },\n  { text: '华南地区(广州)', value: 'ap-guangzhou' },\n  { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n  { text: '华东地区(南京)', value: 'ap-nanjing' },\n  { text: '亚太东北(首尔)', value: 'ap-seoul' },\n  { text: '华东地区(上海)', value: 'ap-shanghai' },\n  { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },\n  { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n  { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n  { text: '亚太东北(东京)', value: 'ap-tokyo' },\n  { text: '欧洲地区(莫斯科)', value: 'eu-moscow' },\n  { text: '美国西部(硅谷)', value: 'na-siliconvalley' },\n];\nconst SQLSERVER_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: SQLSERVERNETFilterFields,\n};\n\nfunction modifyDimensons(metricItem) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['resourceId'];\n  });\n  return metricTmp;\n}\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\nexport default SQLSERVER_STATE;\nexport {\n  SQLSERVERNETFilterFieldsDescriptor,\n  templateQueryIdMap,\n  SQLSERVERInstanceAliasList,\n  SQLSERVERInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  regionSupported,\n  modifyDimensons,\n  // 对应产品的service的全大写拼接InstanceQueryParams\n  GetInstanceQueryParams as SQLSERVERGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/BM_INTRA_LB';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'bmIntraLbQuery';\n\nconst BMINTRALBInvalidDemensions = {\n  vip: 'LoadBalancerVips',\n  vpcId: 'VpcId',\n};\n\n// 要和文件名方式一致，ceip_summary=>CEIPSUMMARY\nconst BMINTRALBInstanceAliasList = ['LoadBalancerId', 'LoadBalancerVips', 'LoadBalancerName'];\n\nconst templateQueryIdMap = {\n  instance: 'LoadBalancerId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是类型\nconst BMINTRALBFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  LoadBalancerIds: [],\n  LoadBalancerName: [],\n  LoadBalancerVips: [],\n};\n\nconst BMINTRALBFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'LoadBalancerIds',\n    enDescriptor: 'LoadBalancerIds',\n    cnDescriptor: '负载均衡器ID数组',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerName',\n    enDescriptor: 'LoadBalancerName',\n    cnDescriptor: '负载均衡器名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerVips',\n    enDescriptor: 'LoadBalancerVips',\n    cnDescriptor: '负载均衡获得的公网IP地址',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/1027/33280',\n  namespace,\n  fieldDescriptor: BMINTRALBFilterFieldsDescriptor,\n};\n\nconst BMINTRALB_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'LoadBalancerId',\n  queries: BMINTRALBFilterFields,\n};\nconst BMLBValidMetricsT = ['Inpkg', 'Outpkg', 'Intraffic', 'Outtraffic', 'Connum', 'Req'];\nfunction isValidMetric(metric) {\n  const validMetrics = _.map(BMLBValidMetricsT, _.toUpper);\n  return _.indexOf(validMetrics, _.toUpper(metric.MetricName)) !== -1;\n}\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\nexport default BMINTRALB_STATE;\nexport {\n  BMINTRALBFilterFieldsDescriptor,\n  templateQueryIdMap,\n  BMINTRALBInstanceAliasList,\n  BMINTRALBInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  isValidMetric,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as BMINTRALBGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/BM_LB';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'bmLbQuery';\n\nconst CPMInvalidDemensions = {\n  vip: 'LoadBalancerVips',\n};\n\n// 要和文件名方式一致，ceip_summary=>CEIPSUMMARY\nconst BMLBInstanceAliasList = ['LoadBalancerId', 'LoadBalancerVips', 'LoadBalancerName'];\n\nconst templateQueryIdMap = {\n  instance: 'LoadBalancerId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是类型\nconst CPMFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  LoadBalancerIds: [],\n  LoadBalancerName: [],\n  LoadBalancerVips: [],\n};\n\nconst CPMFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'LoadBalancerIds',\n    enDescriptor: 'LoadBalancerIds',\n    cnDescriptor: '负载均衡器ID数组',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerName',\n    enDescriptor: 'LoadBalancerName',\n    cnDescriptor: '负载均衡器名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerVips',\n    enDescriptor: 'LoadBalancerVips',\n    cnDescriptor: '负载均衡获得的公网IP地址',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/1027/33280',\n  namespace,\n  fieldDescriptor: CPMFilterFieldsDescriptor,\n};\n\nconst CPM_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'LoadBalancerId',\n  queries: CPMFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\nconst BMLBValidMetricsT = ['Inpkg', 'Outpkg', 'Intraffic', 'Outtraffic', 'Connum', 'Req'];\nfunction isValidMetric(metric) {\n  const validMetrics = _.map(BMLBValidMetricsT, _.toUpper);\n  return _.indexOf(validMetrics, _.toUpper(metric.MetricName)) !== -1;\n}\nexport default CPM_STATE;\nexport {\n  CPMFilterFieldsDescriptor,\n  templateQueryIdMap,\n  BMLBInstanceAliasList,\n  CPMInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  isValidMetric,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as BMLBGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/BM_PCX';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'bmPcxQuery';\n\nconst BMPCXInvalidDemensions = {\n  peeringConnectionId: 'VpcPeerConnectionId',\n};\n\n// 要和文件名方式一致，ceip_summary=>CEIPSUMMARY\nconst BMPCXInstanceAliasList = ['VpcPeerConnectionId', 'VpcPeerConnectionName'];\n\nconst templateQueryIdMap = {\n  instance: 'VpcPeerConnectionId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是类型\nconst BMPCXFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  VpcPeerConnectionIds: [],\n};\n\nconst BMPCXFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'VpcPeerConnectionIds',\n    enDescriptor: 'VpcPeerConnectionIds',\n    cnDescriptor: '对等连接实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/product/1024/36903',\n  namespace,\n  fieldDescriptor: BMPCXFilterFieldsDescriptor,\n};\n\nconst BMPCX_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'VpcPeerConnectionId',\n  queries: BMPCXFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['peeringConnectionId'];\n  });\n  return metricTmp;\n}\nexport default BMPCX_STATE;\nexport {\n  BMPCXFilterFieldsDescriptor,\n  templateQueryIdMap,\n  BMPCXInstanceAliasList,\n  BMPCXInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as BMPCXGetInstanceQueryParams,\n};\n","import * as _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/BLOCK_STORAGE';\nconst queryEditorName = 'cbsQuery';\n\nconst CBSInvalidDemensions = {\n  diskId: 'DiskId',\n  InstanceId: 'InstanceId',\n  diskname: 'DiskName',\n  unInstanceId: 'InstanceId',\n};\n\nconst CBSInstanceAliasList = ['DiskId', 'DiskName'];\n\nconst templateQueryIdMap = {\n  instance: 'DiskId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst CBSFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  DiskIds: [],\n  OrderField: [],\n  Order: [],\n  ReturnBindAutoSnapshotPolicy: false,\n};\n\nconst CBSFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'DiskIds',\n    enDescriptor: 'DiskIds',\n    cnDescriptor: '云硬盘ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'Order',\n    enDescriptor: 'Order',\n    cnDescriptor: '排列顺序',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '升序排列', value: 'ASC' },\n      { text: '降序排列', value: 'DESC' },\n    ],\n  },\n  {\n    key: 'OrderField',\n    enDescriptor: 'OrderField',\n    cnDescriptor: '排序的依据字段',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '云盘的创建时间排序', value: 'CREATE_TIME' },\n      { text: '云盘的到期时间排序', value: 'DEADLINE' },\n    ],\n  },\n  {\n    key: 'ReturnBindAutoSnapshotPolicy',\n    enDescriptor: 'ReturnBindAutoSnapshotPolicy',\n    cnDescriptor: '否需要返回云盘绑定的定期快照策略ID',\n    link: '',\n    type: 'switch',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/362/16315',\n  namespace,\n  fieldDescriptor: CBSFilterFieldsDescriptor,\n};\n\nconst CBS_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'DiskId',\n  queries: CBSFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\nfunction isValidMetric(metricObj: any = {}) {\n  const dimension = _.get(metricObj, 'Dimensions[0].Dimensions');\n  // console.log('dimension', dimension, dimension.length === 1 && _.indexOf(dimension, 'diskId') !== -1);\n  return dimension.length === 1 && _.indexOf(dimension, 'diskId') !== -1;\n}\nexport default CBS_STATE;\nexport {\n  CBSFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CBSInstanceAliasList,\n  CBSInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  isValidMetric,\n  GetInstanceQueryParams as CBSGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/CDN_LOG_DATA';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'cdnProvinceQuery';\n\nconst CDNPROVINCEInvalidDemensions = {\n  domain: 'Domain',\n  // isp: 'Isp',\n  projectid: 'ProjectId',\n  province: 'district',\n  appid: 'AppId',\n};\n\n// 需和文件名对应\nconst CDNPROVINCEInstanceAliasList = ['Domain', 'ProjectId'];\n\nconst templateQueryIdMap = {\n  instance: 'Domain',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst CDNPROVINCEFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  origin: [],\n  domain: [],\n  resourceId: [],\n  status: {},\n  serviceType: {},\n  projectId: [],\n  domainType: {},\n  fullUrlCache: {},\n  https: {},\n  originPullProtocol: {},\n  tagKey: [],\n};\n\nconst CDNPROVINCEFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'origin',\n    enDescriptor: 'origin',\n    cnDescriptor: '主源站',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'domain',\n    enDescriptor: 'domain',\n    cnDescriptor: '域名',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'resourceId',\n    enDescriptor: 'resourceId',\n    cnDescriptor: '域名id',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'status',\n    enDescriptor: 'status',\n    cnDescriptor: '域名状态',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'online', value: 'online' },\n      { text: 'offline', value: 'offline' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'serviceType',\n    enDescriptor: 'serviceType',\n    cnDescriptor: '业务类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'web', value: 'web' },\n      { text: 'download', value: 'download' },\n      { text: 'media', value: 'media' },\n    ],\n  },\n  {\n    key: 'projectId',\n    enDescriptor: 'projectId',\n    cnDescriptor: '项目ID',\n    link: '',\n    type: 'inputNumberMulti',\n  },\n  {\n    key: 'domainType',\n    enDescriptor: 'domainType',\n    cnDescriptor: '主源站类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '自有源', value: 'cname' },\n      { text: 'cos接入', value: 'cos' },\n    ],\n  },\n  {\n    key: 'fullUrlCache',\n    enDescriptor: 'fullUrlCache',\n    cnDescriptor: '全路径缓存',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '打开', value: 'on' },\n      { text: '关闭', value: 'off' },\n    ],\n  },\n  {\n    key: 'https',\n    enDescriptor: 'https',\n    cnDescriptor: '是否配置https',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'on', value: 'on' },\n      { text: 'off', value: 'off' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'originPullProtocol',\n    enDescriptor: 'originPullProtocol',\n    cnDescriptor: '回源协议类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'http', value: 'http' },\n      { text: 'follow', value: 'follow' },\n      { text: 'https', value: 'https' },\n    ],\n  },\n  {\n    key: 'tagKey',\n    enDescriptor: 'tagKey',\n    cnDescriptor: '标签键',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\nconst CDNPROVINCE_STATE = {\n  region: 'ap-guangzhou',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'Domain',\n  // Isp Province分别在两个接口，单独保存在state\n  isp: '',\n  district: '',\n  queries: CDNPROVINCEFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\n// const regionSupported = [\n//   { text: '华北地区(北京)', value: 'ap-beijing' },\n//   { text: '西南地区(成都)', value: 'ap-chengdu' },\n//   { text: '西南地区(重庆)', value: 'ap-chongqing' },\n//   { text: '华南地区(广州)', value: 'ap-guangzhou' },\n//   { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n//   { text: '亚太南部(孟买)', value: 'ap-mumbai' },\n//   { text: '华东地区(南京)', value: 'ap-nanjing' },\n//   { text: '华东地区(上海)', value: 'ap-shanghai' },\n//   { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },\n//   { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n//   { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n//   { text: '亚太东北(东京)', value: 'ap-tokyo' },\n//   { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },\n//   { text: '美国东部(弗吉尼亚)', value: 'na-ashburn' },\n//   { text: '美国西部(硅谷)', value: 'na-siliconvalley' },\n//   { text: '北美地区(多伦多)', value: 'na-toronto' },\n// ];\nexport default CDNPROVINCE_STATE;\nexport {\n  CDNPROVINCEFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CDNPROVINCEInstanceAliasList,\n  CDNPROVINCEInvalidDemensions,\n  namespace,\n  queryEditorName,\n  // regionSupported,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as CDNPROVINCEGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/CEIP_SUMMARY';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'ceipSummaryQuery';\n\nconst CEIPInvalidDemensions = {\n  vip: 'AddressIp',\n  eip: 'AddressIp',\n};\n\n// 要和文件名方式一致，ceip_summary=>CEIPSUMMARY\nconst CEIPSUMMARYInstanceAliasList = ['AddressId', 'AddressName', 'AddressIp'];\n\nconst templateQueryIdMap = {\n  instance: 'AddressId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst CEIPFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  'address-id': [],\n  'address-name': [],\n  'address-ip': [],\n  'address-status': {},\n  'is-arrears': {},\n  'address-isp': {},\n  'instance-id': [],\n  'private-ip-address': [],\n  'network-interface-id': [],\n};\n\nconst CEIPFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'address-id',\n    enDescriptor: 'address-id',\n    cnDescriptor: ' EIP 的唯一 ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'address-name',\n    enDescriptor: 'address-name',\n    cnDescriptor: 'EIP 名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'address-ip',\n    enDescriptor: 'address-ip',\n    cnDescriptor: 'EIP 的 IP 地址',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'address-status',\n    enDescriptor: 'address-status',\n    cnDescriptor: 'EIP 的状态',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: 'CREATING', value: 'CREATING' },\n      { text: 'BINDING', value: 'BINDING' },\n      { text: 'BIND', value: 'BIND' },\n      { text: 'UNBINDING', value: 'UNBINDING' },\n      { text: 'UNBIND', value: 'UNBIND' },\n      { text: 'OFFLINING', value: 'OFFLINING' },\n      { text: 'BIND_ENI', value: 'BIND_ENI' },\n    ],\n  },\n  {\n    key: 'instance-id',\n    enDescriptor: 'instance-id',\n    cnDescriptor: 'EIP 绑定的实例 ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'private-ip-address',\n    enDescriptor: 'private-ip-address',\n    cnDescriptor: 'EIP 绑定的内网 IP ',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'network-interface-id',\n    enDescriptor: 'network-interface-id',\n    cnDescriptor: ' EIP 绑定的弹性网卡 ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'is-arrears',\n    enDescriptor: 'is-arrears',\n    cnDescriptor: 'EIP 是否欠费',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '欠费状态', value: 'TRUE' },\n      { text: '费用状态正常', value: 'FALSE' },\n    ],\n  },\n  {\n    key: 'address-isp',\n    enDescriptor: 'address-isp',\n    cnDescriptor: '运营商类型',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: 'BGP', value: 'BGP' },\n      { text: 'CMCC', value: 'CMCC' },\n      { text: 'CUCC', value: 'CUCC' },\n      { text: 'CTCC', value: 'CTCC' },\n    ],\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/16702',\n  namespace,\n  fieldDescriptor: CEIPFilterFieldsDescriptor,\n};\n\nconst CEIP_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'AddressId',\n  queries: CEIPFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['eip'];\n  });\n  return metricTmp;\n}\nexport default CEIP_STATE;\nexport {\n  CEIPFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CEIPSUMMARYInstanceAliasList,\n  CEIPInvalidDemensions,\n  namespace,\n  queryEditorName,\n  modifyDimensons,\n  queryEditorConfig,\n  GetInstanceQueryParams as CEIPSUMMARYGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { FildDescriptorType } from '../_base/types';\n\nexport const InstanceQueryDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为10，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 50,\n  },\n  {\n    key: 'TopicName',\n    enDescriptor: 'TopicName',\n    cnDescriptor: '精确匹配TopicName',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'TagKey',\n    enDescriptor: 'TagKey',\n    cnDescriptor: '标签搜索',\n    link: '',\n    type: 'input',\n  },\n];\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\n// 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key\nexport const InvalidDemensions = {\n  topicId: 'TopicId',\n};\n\n// 因为cmq那边，以TopciName为主键\nexport const templateQueryIdMap = {\n  instance: 'TopicName',\n  subscription: 'SubscriptionId',\n};\n\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  subscriptionId: 'subscriptionId',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  subscriptionId: {\n    dim_KeyInStorage: keyInStorage.subscriptionId,\n    dim_KeyInTarget: 'subscriptionId',\n    dim_KeyInMap: templateQueryIdMap.subscription,\n  },\n};\n// 与名称挂钩的变量\nconst InstanceAliasList = ['TopicName', 'TopicId'];\nexport { InstanceAliasList, GetInstanceQueryParams, queryMonitorExtraConfg, keyInStorage };\n\n// 界面状态模型，default\nexport default {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'TopicName',\n  subscriptionId: '',\n  queries: {\n    Offset: 0,\n    Limit: 20,\n    TopicName: '',\n    TagKey: '',\n  },\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/CPM';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'cpmQuery';\n\nconst CPMInvalidDemensions = {\n  instanceId: 'InstanceId',\n  // uniqid: 'InstanceId',\n};\n\nconst CPMInstanceAliasList = ['InstanceId', 'Name'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst CPMFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  DeviceClassCode: '',\n  InstanceIds: [],\n  WanIps: [],\n  LanIps: [],\n  Alias: '',\n  VagueIp: '',\n  AutoRenewFlag: {},\n  VpcId: '',\n  SubnetId: '',\n  DeviceType: {},\n  IsLuckyDevice: {},\n};\n\nconst CPMFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'DeviceClassCode',\n    enDescriptor: 'DeviceClassCode',\n    cnDescriptor: '机型ID',\n    link: '',\n    type: 'dropdown',\n  },\n  {\n    key: 'InstanceIds',\n    enDescriptor: 'InstanceIds',\n    cnDescriptor: '设备ID数组',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'WanIps',\n    enDescriptor: 'WanIps',\n    cnDescriptor: '外网IP数组',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LanIps',\n    enDescriptor: 'LanIps',\n    cnDescriptor: '内网IP数组',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'Alias',\n    enDescriptor: 'Alias',\n    cnDescriptor: '设备名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'VagueIp',\n    enDescriptor: 'VagueIp',\n    cnDescriptor: '模糊IP查询',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'AutoRenewFlag',\n    enDescriptor: 'AutoRenewFlag',\n    cnDescriptor: '自动续费标志',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '不自动续费', value: 0 },\n      { text: '自动续费', value: 1 },\n    ],\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'VpcId',\n    cnDescriptor: '私有网络唯一ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SubnetId',\n    enDescriptor: 'SubnetId',\n    cnDescriptor: '子网唯一ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'DeviceType',\n    enDescriptor: 'DeviceType',\n    cnDescriptor: '子网实例ID',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '计算型', value: 'compute' },\n      { text: '标准型', value: 'standard' },\n      { text: '存储型', value: 'storage' },\n    ],\n  },\n  {\n    key: 'IsLuckyDevice',\n    enDescriptor: 'IsLuckyDevice',\n    cnDescriptor: '竞价实例机器过滤',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '非竞价实例机器', value: 0 },\n      { text: '竞价实例的机器', value: 1 },\n    ],\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/386/32904',\n  namespace,\n  fieldDescriptor: CPMFilterFieldsDescriptor,\n};\n\nconst CPM_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: CPMFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\n\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['instanceId'];\n  });\n  return metricTmp;\n}\nexport default CPM_STATE;\nexport {\n  CPMFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CPMInstanceAliasList,\n  CPMInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as CPMGetInstanceQueryParams,\n};\n","import * as _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/ECM';\nconst queryEditorName = 'ecmQuery';\n\nconst ECMInvalidDemensions = {\n  // diskId: 'InstanceId',\n  uuid: 'UUID',\n  // unInstanceId: 'InstanceId',\n};\n\nconst ECMInstanceAliasList = ['InstanceId', 'InstanceName'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst ECMFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  zone: [],\n  'zone-name': [],\n  'module-id': [],\n  'module-name': [],\n  'instance-id': [],\n  'instance-name': [],\n  'ip-address': [],\n  'instance-uuid': [],\n  'instance-state': {},\n  'internet-service-provider': [],\n  'instance-family': [],\n  'image-id': [],\n  'vpc-id': [],\n  'subnet-id': [],\n};\n\nconst ECMFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'zone',\n    enDescriptor: 'zone',\n    cnDescriptor: '可用区英文标识',\n    link: '',\n    type: 'dropdownMulti',\n  },\n  {\n    key: 'zone-name',\n    enDescriptor: 'zone-name',\n    cnDescriptor: '排列顺序',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'module-id',\n    enDescriptor: 'module-id',\n    cnDescriptor: '模块ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'module-name',\n    enDescriptor: 'module-name',\n    cnDescriptor: '模块名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-id',\n    enDescriptor: 'instance-id',\n    cnDescriptor: '实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-name',\n    enDescriptor: 'instance-name',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'ip-address',\n    enDescriptor: 'ip-address',\n    cnDescriptor: '内网/公网IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-uuid',\n    enDescriptor: 'instance-uuid',\n    cnDescriptor: '实例uuid',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-state',\n    enDescriptor: 'instance-state',\n    cnDescriptor: '实例状态',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '创建中', value: 'PENDING' },\n      { text: '创建失败', value: 'LAUNCH_FAILED' },\n      { text: '运行中', value: 'RUNNING' },\n      { text: '关机', value: 'STOPPED' },\n      { text: '开机中', value: 'STARTING' },\n      { text: '关机中', value: 'STOPPING' },\n      { text: '重启中', value: 'REBOOTING' },\n      { text: '停止待销毁', value: 'SHUTDOWN' },\n      { text: '销毁中', value: 'TERMINATING' },\n    ],\n  },\n  {\n    key: 'internet-service-provider',\n    enDescriptor: 'internet-service-provider',\n    cnDescriptor: '公网IP所属的运营商',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-family',\n    enDescriptor: 'instance-family',\n    cnDescriptor: '机型family',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'image-id',\n    enDescriptor: 'image-id',\n    cnDescriptor: '镜像ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'vpc-id',\n    cnDescriptor: '实例的vpc id',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'subnet-id',\n    enDescriptor: 'subnet-id',\n    cnDescriptor: '实例的subnet id',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/1108/42565',\n  namespace,\n  fieldDescriptor: ECMFilterFieldsDescriptor,\n};\n\nconst ECM_STATE = {\n  region: 'ap-guangzhou',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: ECMFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\n// function isValidMetric(metricObj: any = {}) {\n//   const dimension = _.get(metricObj, 'Dimensions[0].Dimensions');\n//   // console.log('dimension', dimension, dimension.length === 1 && _.indexOf(dimension, 'diskId') !== -1);\n//   return dimension.length === 1 &&( _.indexOf(dimension, 'UUID') !== -1 || _.indexOf(dimension, 'uuid') !== -1);\n// }\n\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['UUID'];\n  });\n  return metricTmp;\n}\nexport default ECM_STATE;\nexport {\n  ECMFilterFieldsDescriptor,\n  templateQueryIdMap,\n  ECMInstanceAliasList,\n  ECMInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  GetInstanceQueryParams as ECMGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nconst namespace = 'QCE/POSTGRES';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'postgresQuery';\n\nconst PostgresFields = {\n  'db-instance-id': [],\n  'db-instance-name': [],\n};\n\nconst PostgresFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'db-instance-id',\n    enDescriptor: 'DB Instance ID',\n    cnDescriptor: 'DB 实例ID',\n    link: '',\n    type: 'inputMulti',\n    min: 0,\n  },\n  {\n    key: 'db-instance-name',\n    enDescriptor: 'DB Instance Name',\n    cnDescriptor: 'DB 实例名称',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/409/16773',\n  namespace,\n  fieldDescriptor: PostgresFieldsDescriptor,\n};\nconst POSTGRESInstanceAliasList = ['DBInstanceId', 'DBInstanceName'];\n\nconst POSTGRES_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'DBInstanceId',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    Filters: { ...PostgresFields },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['resourceId'];\n  });\n  return metricTmp;\n}\nconst PostgreInvalidDemensions = {\n  uid: 'DBInstanceId',\n  resourceId: 'DBInstanceId',\n};\nconst templateQueryIdMap = {\n  instance: 'DBInstanceId',\n};\nexport default POSTGRES_STATE;\n\nexport {\n  PostgresFieldsDescriptor,\n  POSTGRESInstanceAliasList,\n  templateQueryIdMap,\n  modifyDimensons,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  PostgreInvalidDemensions,\n  GetInstanceQueryParams as POSTGRESGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/TCAPLUS';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'tcaplusQuery';\n\nconst TCAPLUSInvalidDemensions = {\n  // TableInstanceId: 'TableInstanceId',\n  // ClusterId: 'ClusterId',\n};\n\n// 需和文件名对应\nconst TCAPLUSInstanceAliasList = ['TableInstanceId', 'TableName'];\n\nconst templateQueryIdMap = {\n  instance: 'TableInstanceId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是类型\nconst TCAPLUSFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  ClusterId: '',\n  TableGroupIds: [],\n\n  TableName: '',\n  TableInstanceId: '',\n  TableIdlType: {},\n  TableType: {},\n  ListElementNum: null,\n  ReservedVolume: null,\n  ReservedReadQps: null,\n  ReservedWriteQps: null,\n  Memo: '',\n  FileName: '',\n  FileExtType: '',\n  FileSize: null,\n  FileContent: '',\n};\n\nconst TCAPLUSFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'ClusterId',\n    enDescriptor: 'ClusterId',\n    cnDescriptor: '表格所属集群ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'TableGroupIds',\n    enDescriptor: 'TableGroupIds',\n    cnDescriptor: '表格组ID列表',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'TableName',\n    enDescriptor: 'TableName',\n    cnDescriptor: '表格名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'TableInstanceId',\n    enDescriptor: 'TableInstanceId',\n    cnDescriptor: '表实例ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'TableIdlType',\n    enDescriptor: 'TableIdlType',\n    cnDescriptor: '表格描述语言类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'PROTO', value: 'PROTO' },\n      { text: 'TDR', value: 'TDR' },\n    ],\n  },\n  {\n    key: 'TableType',\n    enDescriptor: 'TableType',\n    cnDescriptor: '表格数据结构类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'GENERIC', value: 'GENERIC' },\n      { text: 'LIST', value: 'LIST' },\n    ],\n  },\n  {\n    key: 'ListElementNum',\n    enDescriptor: 'ListElementNum',\n    cnDescriptor: 'LIST表元素个数',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'ReservedVolume',\n    enDescriptor: 'ReservedVolume',\n    cnDescriptor: '表格预留容量（GB）',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'ReservedReadQps',\n    enDescriptor: 'ReservedReadQps',\n    cnDescriptor: '表格预留读CU',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'ReservedWriteQps',\n    enDescriptor: 'ReservedWriteQps',\n    cnDescriptor: '表格预留写CU',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'Memo',\n    enDescriptor: 'Memo',\n    cnDescriptor: '表格备注信息',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'FileName',\n    enDescriptor: 'FileName',\n    cnDescriptor: 'Key回档文件名，回档专用',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'FileExtType',\n    enDescriptor: 'FileExtType',\n    cnDescriptor: 'Key回档文件扩展名，回档专用',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'FileSize',\n    enDescriptor: 'FileSize',\n    cnDescriptor: 'Key回档文件大小，回档专用',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'FileContent',\n    enDescriptor: 'FileContent',\n    cnDescriptor: 'Key回档文件内容，回档专用',\n    link: '',\n    type: 'input',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/596/39664',\n  namespace,\n  fieldDescriptor: TCAPLUSFilterFieldsDescriptor,\n};\n\nconst TCAPLUS_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'TableInstanceId',\n  queries: TCAPLUSFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  params.Limit = _.get(queries, 'Limit', 20) || 20;\n  params.Offset = _.get(queries, 'Offset', 0) || 0;\n  params.ClusterId = _.get(queries, 'ClusterId', '') || '';\n  params.TableGroupIds = _.get(queries, 'TableGroupIds', []) || [];\n  queries = _.omit(queries, ['Offset', 'Limit', 'TableGroupIds', 'ClusterId']);\n  const SelectedTables: any[] = [];\n  _.forEach(queries, (item: any, key) => {\n    if (_.isArray(item)) {\n      item = _.compact(item);\n      if (item.length > 0) {\n        SelectedTables[key] = _.uniq(item);\n      }\n    } else if (_.isObject(item)) {\n      if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n        SelectedTables[key] = _.get(item, 'value');\n      }\n    } else if (_.isNumber(item) || !_.isEmpty(item)) {\n      SelectedTables[key] = item;\n    }\n  });\n  params.SelectedTables = SelectedTables;\n  return params;\n}\n// 和其他产品的展示保持一致\nconst regonsMap = {\n  'ap-beijing': '华北地区(北京)',\n  'ap-guangzhou': '华南地区(广州)',\n  'ap-hongkong': '港澳台地区(中国香港)',\n  'ap-seoul': '亚太东北(首尔)',\n  'ap-shanghai': '华东地区(上海)',\n  'ap-singapore': '亚太东南(新加坡)',\n  'ap-tokyo': '亚太东北(东京)',\n  'eu-frankfurt': '欧洲地区(法兰克福)',\n  'na-ashburn': '美国东部(弗吉尼亚)',\n  'na-siliconvalley': '美国西部(硅谷)',\n};\nexport default TCAPLUS_STATE;\nexport {\n  TCAPLUSFilterFieldsDescriptor,\n  templateQueryIdMap,\n  TCAPLUSInstanceAliasList,\n  TCAPLUSInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  regonsMap,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as TCAPLUSGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/VPC_NET_DETECT';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'vpcNetDetectQuery';\n\nconst VPCNETInvalidDemensions = {\n  netdetectid: 'NetDetectId',\n  netDetectId: 'NetDetectId',\n};\n\nconst VPCNETDETECTInstanceAliasList = ['NetDetectId', 'NetDetectName'];\n\nconst templateQueryIdMap = {\n  instance: 'NetDetectId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst VPCNETFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  'vpc-id': [],\n  'net-detect-id': [],\n  'subnet-id': [],\n  'net-detect-name': [],\n};\n\nconst VPCNETFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'vpc-id',\n    cnDescriptor: 'VPC实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'net-detect-id',\n    enDescriptor: 'net-detect-id',\n    cnDescriptor: '网络探测实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'subnet-id',\n    enDescriptor: 'subnet-id',\n    cnDescriptor: '子网实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'net-detect-name',\n    enDescriptor: 'net-detect-name',\n    cnDescriptor: '网络探测名称',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/38696',\n  namespace,\n  fieldDescriptor: VPCNETFilterFieldsDescriptor,\n};\n\nconst VPCNET_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'NetDetectId',\n  queries: VPCNETFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['netDetectId'];\n  });\n  return metricTmp;\n}\nexport default VPCNET_STATE;\nexport {\n  VPCNETFilterFieldsDescriptor,\n  templateQueryIdMap,\n  VPCNETDETECTInstanceAliasList,\n  VPCNETInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  GetInstanceQueryParams as VPCNETDETECTGetInstanceQueryParams,\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__37__;","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/CES';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'cesQuery';\n\nconst CESInvalidDemensions = {\n  uInstanceId: 'InstanceId',\n};\n\nconst CESInstanceAliasList = ['InstanceId', 'InstanceName'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是类型\nconst CESFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  InstanceIds: [],\n  InstanceNames: [],\n  OrderByKey: {},\n  OrderByType: {},\n  IpList: [],\n};\n\nconst CESFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceIds',\n    enDescriptor: 'InstanceIds',\n    cnDescriptor: '集群实例ID列表',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'InstanceNames',\n    enDescriptor: 'InstanceNames',\n    cnDescriptor: '集群实例名称列表',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'OrderByKey',\n    enDescriptor: 'OrderByKey',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '实例ID', value: 1 },\n      { text: '实例名称', value: 2 },\n      { text: '可用区', value: 3 },\n      { text: '创建时间', value: 4 },\n    ],\n  },\n  {\n    key: 'OrderByType',\n    enDescriptor: 'OrderByType',\n    cnDescriptor: '排序方式',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '升序', value: 0 },\n      { text: '降序', value: 1 },\n    ],\n  },\n  {\n    key: 'IpList',\n    enDescriptor: 'IpList',\n    cnDescriptor: '私有网络vip列表',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/845/30631',\n  namespace,\n  fieldDescriptor: CESFilterFieldsDescriptor,\n};\n\nconst CES_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: CESFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\nexport default CES_STATE;\nexport {\n  CESFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CESInstanceAliasList,\n  CESInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as CESGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/DC';\nconst queryEditorName = 'dcQuery';\n\nconst DCFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  DirectConnectIds: [],\n};\n\nconst DCFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'DirectConnectIds',\n    enDescriptor: 'DirectConnectIds',\n    cnDescriptor: '物理专线 ID',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/216/34826',\n  namespace,\n  fieldDescriptor: DCFilterFieldsDescriptor,\n};\n\nconst DC_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'DirectConnectId',\n  queries: DCFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\n\nconst DCInstanceAliasList = ['DirectConnectId', 'DirectConnectName'];\n\nconst templateQueryIdMap = {\n  instance: 'DirectConnectId',\n};\n\nconst DCInvalidDemensions = {\n  directConnectId: 'DirectConnectId',\n  directconnectid: 'DirectConnectId',\n};\nfunction modifyDimensons(metricItem) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['directConnectId'];\n  });\n  return metricTmp;\n}\nexport default DC_STATE;\nexport {\n  DCFilterFieldsDescriptor,\n  templateQueryIdMap,\n  DCInstanceAliasList,\n  DCInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  GetInstanceQueryParams as DCGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/DCG';\nconst queryEditorName = 'dcgQuery';\n\nconst DCGInvalidDemensions = {\n  directConnectGatewayId: 'DirectConnectGatewayId',\n};\n\nconst DCGInstanceAliasList = ['DirectConnectGatewayId', 'DirectConnectGatewayName'];\n\nconst templateQueryIdMap = {\n  instance: 'DirectConnectGatewayId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst DCGFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  'direct-connect-gateway-id': [],\n  'direct-connect-gateway-name': [],\n  'direct-connect-gateway-ip': [],\n  'gateway-type': {},\n  'network-type': {},\n  'ccn-id': [],\n  'vpc-id': [],\n};\n\nconst DCGFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'direct-connect-gateway-id',\n    enDescriptor: 'direct-connect-gateway-id',\n    cnDescriptor: '专线网关唯一ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'direct-connect-gateway-name',\n    enDescriptor: 'direct-connect-gateway-name',\n    cnDescriptor: '专线网关名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'direct-connect-gateway-ip',\n    enDescriptor: 'direct-connect-gateway-ip',\n    cnDescriptor: '专线网关IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'gateway-type',\n    enDescriptor: 'gateway-type',\n    cnDescriptor: '网关类型',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '普通型', value: 'NORMAL' },\n      { text: 'NAT型', value: 'NAT' },\n    ],\n  },\n  {\n    key: 'network-type',\n    enDescriptor: 'network-type',\n    cnDescriptor: '网络类型',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '私有网络类型', value: 'VPC' },\n      { text: '云联网类型', value: 'CCN' },\n    ],\n  },\n  {\n    key: 'ccn-id',\n    enDescriptor: 'ccn-id',\n    cnDescriptor: '专线网关所在云联网ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'vpc-id',\n    cnDescriptor: '专线网关所在私有网络ID',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/30644',\n  namespace,\n  fieldDescriptor: DCGFilterFieldsDescriptor,\n};\n\nconst DCG_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'DirectConnectGatewayId',\n  queries: DCGFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nexport default DCG_STATE;\nexport {\n  DCGFilterFieldsDescriptor,\n  templateQueryIdMap,\n  DCGInstanceAliasList,\n  DCGInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  GetInstanceQueryParams as DCGGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/DCX';\nconst queryEditorName = 'dcxQuery';\n\nconst DCXFilterFields = {\n  'direct-connect-tunnel-name': [],\n  'direct-connect-tunnel-id': [],\n  'direct-connect-id': [],\n};\n\nconst DCXFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'direct-connect-tunnel-name',\n    enDescriptor: 'direct-connect-tunnel-name',\n    cnDescriptor: '专用通道名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'direct-connect-tunnel-id',\n    enDescriptor: 'direct-connect-tunnel-id',\n    cnDescriptor: '专用通道实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'direct-connect-id',\n    enDescriptor: 'direct-connect-id',\n    cnDescriptor: '物理专线实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/216/19819',\n  namespace,\n  fieldDescriptor: DCXFilterFieldsDescriptor,\n};\n\nconst DCX_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'DirectConnectTunnelId',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    ...DCXFilterFields,\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\n\nconst DCXInstanceAliasList = ['DirectConnectTunnelId', 'DirectConnectTunnelName'];\n\nconst templateQueryIdMap = {\n  instance: 'DirectConnectTunnelId',\n};\n\nconst DCXInvalidDemensions = {\n  directconnectconnid: 'DirectConnectTunnelId',\n  directConnectConnId: 'DirectConnectTunnelId',\n};\nfunction modifyDimensons(metricItem) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['directConnectConnId'];\n  });\n  return metricTmp;\n}\nexport default DCX_STATE;\nexport {\n  DCXFilterFieldsDescriptor,\n  templateQueryIdMap,\n  DCXInstanceAliasList,\n  DCXInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  GetInstanceQueryParams as DCXGetInstanceQueryParams,\n};\n","import * as _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/ECM_LB';\nconst queryEditorName = 'ecmLbQuery';\n\nconst ECMLBInvalidDemensions = {\n  vip: 'LoadBalancerVips',\n};\n\nconst ECMLBInstanceAliasList = ['LoadBalancerId', 'LoadBalancerName'];\n\nconst templateQueryIdMap = {\n  instance: 'LoadBalancerId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst ECMLBFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  LoadBalancerIds: [],\n  LoadBalancerName: [],\n  LoadBalancerVips: [],\n  BackendPrivateIps: [],\n  VpcId: '',\n};\n\nconst ECMLBFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'LoadBalancerIds',\n    enDescriptor: 'LoadBalancerIds',\n    cnDescriptor: '负载均衡器ID数组',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerName',\n    enDescriptor: 'LoadBalancerName',\n    cnDescriptor: '负载均衡器名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerVips',\n    enDescriptor: 'LoadBalancerVips',\n    cnDescriptor: '负载均衡获得的公网IP地址',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'BackendPrivateIps',\n    enDescriptor: 'BackendPrivateIps',\n    cnDescriptor: '绑定的后端服务的内网 IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'VpcId',\n    cnDescriptor: '实例所属私有网络唯一ID',\n    link: '',\n    type: 'input',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/1108/48459',\n  namespace,\n  fieldDescriptor: ECMLBFilterFieldsDescriptor,\n};\n\nconst ECM_STATE = {\n  region: 'ap-guangzhou',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'LoadBalancerId',\n  queries: ECMLBFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\n// function isValidMetric(metricObj: any = {}) {\n//   const dimension = _.get(metricObj, 'Dimensions[0].Dimensions');\n//   // console.log('dimension', dimension, dimension.length === 1 && _.indexOf(dimension, 'diskId') !== -1);\n//   return dimension.length === 1 &&( _.indexOf(dimension, 'UUID') !== -1 || _.indexOf(dimension, 'uuid') !== -1);\n// }\n\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    // item.Dimensions = ['UUID'];\n  });\n  return metricTmp;\n}\nexport default ECM_STATE;\nexport {\n  ECMLBFilterFieldsDescriptor,\n  templateQueryIdMap,\n  ECMLBInstanceAliasList,\n  ECMLBInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  GetInstanceQueryParams as ECMLBGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/QAAP';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'qaapQuery';\n\nconst QAAPInvalidDemensions = {\n  channelId: 'InstanceId',\n};\n\nconst QAAPInstanceAliasList = ['InstanceId'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst QAAPFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  ProjectId: [],\n  AccessRegion: [],\n  RealServerRegion: [],\n  GroupId: [],\n};\n\nconst QAAPFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'ProjectId',\n    enDescriptor: 'ProjectId',\n    cnDescriptor: '项目ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'AccessRegion',\n    enDescriptor: 'AccessRegion',\n    cnDescriptor: '接入地域',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'RealServerRegion',\n    enDescriptor: 'RealServerRegion',\n    cnDescriptor: '源站地域',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'GroupId',\n    enDescriptor: 'GroupId',\n    cnDescriptor: '通道组ID',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/608/36963',\n  namespace,\n  fieldDescriptor: QAAPFilterFieldsDescriptor,\n};\n\nconst QAAP_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: QAAPFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  // metricTmp.Dimensions.forEach((item) => {\n  //   item.Dimensions = ['netDetectId'];\n  // });\n  return metricTmp;\n}\nexport default QAAP_STATE;\nexport {\n  QAAPFilterFieldsDescriptor,\n  templateQueryIdMap,\n  QAAPInstanceAliasList,\n  QAAPInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  GetInstanceQueryParams as QAAPGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/VBC';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'vbcQuery';\n\nconst VBCInvalidDemensions = {\n  // CcnId: 'CcnId',\n};\n\n// 需和文件名对应\nconst VBCInstanceAliasList = ['CcnId', 'CcnName'];\n\nconst templateQueryIdMap = {\n  instance: 'CcnId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst VBCFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  'ccn-id': [],\n  'ccn-name': [],\n  'ccn-description': [],\n  state: {},\n};\n\nconst VBCFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'ccn-id',\n    enDescriptor: 'ccn-id',\n    cnDescriptor: 'CCN实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'ccn-name',\n    enDescriptor: 'ccn-name',\n    cnDescriptor: 'CCN名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'ccn-description',\n    enDescriptor: 'ccn-description',\n    cnDescriptor: 'CCN描述',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'state',\n    enDescriptor: 'state',\n    cnDescriptor: '实例状态',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '隔离中', value: 'ISOLATED' },\n      { text: '运行中', value: 'AVAILABLE' },\n    ],\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/19199',\n  namespace,\n  fieldDescriptor: VBCFilterFieldsDescriptor,\n};\n\nconst VBC_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'CcnId',\n  DRegion: '',\n  SRegion: '',\n  queries: VBCFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\n// const regionSupported = [\n//   { text: '华北地区(北京)', value: 'ap-beijing' },\n//   { text: '西南地区(成都)', value: 'ap-chengdu' },\n//   { text: '西南地区(重庆)', value: 'ap-chongqing' },\n//   { text: '华南地区(广州)', value: 'ap-guangzhou' },\n//   { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n//   { text: '亚太南部(孟买)', value: 'ap-mumbai' },\n//   { text: '华东地区(南京)', value: 'ap-nanjing' },\n//   { text: '华东地区(上海)', value: 'ap-shanghai' },\n//   { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },\n//   { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n//   { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n//   { text: '亚太东北(东京)', value: 'ap-tokyo' },\n//   { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },\n//   { text: '美国东部(弗吉尼亚)', value: 'na-ashburn' },\n//   { text: '美国西部(硅谷)', value: 'na-siliconvalley' },\n//   { text: '北美地区(多伦多)', value: 'na-toronto' },\n// ];\nexport default VBC_STATE;\nexport {\n  VBCFilterFieldsDescriptor,\n  templateQueryIdMap,\n  VBCInstanceAliasList,\n  VBCInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  // regionSupported,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as VBCGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/VPNGW';\nconst queryEditorName = 'vpngwQuery';\n\nconst VPNGWInvalidDemensions = {\n  vpnGwId: 'VpnGatewayId',\n};\n\nconst VPNGWInstanceAliasList = ['VpnGatewayId', 'VpnGatewayName'];\n\nconst templateQueryIdMap = {\n  instance: 'VpnGatewayId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst VPNGWFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  'vpc-id': [],\n  'vpn-gateway-id': [],\n  'vpn-gateway-name': [],\n  type: {},\n  'public-ip-address': [],\n  'renew-flag': {},\n  zone: [],\n};\n\nconst VPNGWFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'vpc-id',\n    cnDescriptor: 'VPC实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpn-gateway-id',\n    enDescriptor: 'vpn-gateway-id',\n    cnDescriptor: 'VPN实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpn-gateway-name',\n    enDescriptor: 'vpn-gateway-name',\n    cnDescriptor: 'VPN实例名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'type',\n    enDescriptor: 'type',\n    cnDescriptor: 'VPN网关类型',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: 'IPSEC', value: 'IPSEC' },\n      { text: 'SSL', value: 'SSL' },\n    ],\n  },\n  {\n    key: 'public-ip-address',\n    enDescriptor: 'public-ip-address',\n    cnDescriptor: '公网IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'renew-flag',\n    enDescriptor: 'renew-flag',\n    cnDescriptor: '网关续费类型',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '手动续费', value: 'NOTIFY_AND_MANUAL_RENEW' },\n      { text: '自动续费', value: 'NOTIFY_AND_AUTO_RENEW' },\n    ],\n  },\n  {\n    key: 'zone',\n    enDescriptor: 'zone',\n    cnDescriptor: 'VPN所在可用区',\n    link: '',\n    type: 'dropdownMulti',\n  },\n];\n\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/17514',\n  namespace,\n  fieldDescriptor: VPNGWFilterFieldsDescriptor,\n};\n\nconst VPNGW_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'VpnGatewayId',\n  queries: VPNGWFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nexport default VPNGW_STATE;\nexport {\n  VPNGWFilterFieldsDescriptor,\n  templateQueryIdMap,\n  VPNGWInstanceAliasList,\n  VPNGWInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  GetInstanceQueryParams as VPNGWGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/VPNX';\nconst queryEditorName = 'vpnxQuery';\n\nconst VPNXInvalidDemensions = {\n  vpnConnId: 'VpnConnectionId',\n};\n\nconst VPNXInstanceAliasList = ['VpnConnectionId', 'VpnConnectionName'];\n\nconst templateQueryIdMap = {\n  instance: 'VpnConnectionId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst VPNXFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  'vpc-id': [],\n  'vpn-gateway-id': [],\n  'customer-gateway-id': [],\n  'vpn-connection-name': [],\n  'vpn-connection-id': [],\n};\n\nconst VPNXFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'vpc-id',\n    cnDescriptor: 'VPC实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpn-gateway-id',\n    enDescriptor: 'vpn-gateway-id',\n    cnDescriptor: 'VPN实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'customer-gateway-id ',\n    enDescriptor: 'customer-gateway-id ',\n    cnDescriptor: '对端网关实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpn-connection-name',\n    enDescriptor: 'vpn-connection-name',\n    cnDescriptor: '通道名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpn-connection-id',\n    enDescriptor: 'vpn-connection-id',\n    cnDescriptor: '通道实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/17515',\n  namespace,\n  fieldDescriptor: VPNXFilterFieldsDescriptor,\n};\n\nconst VPNX_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'VpnConnectionId',\n  queries: VPNXFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nexport default VPNX_STATE;\nexport {\n  VPNXFilterFieldsDescriptor,\n  templateQueryIdMap,\n  VPNXInstanceAliasList,\n  VPNXInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  GetInstanceQueryParams as VPNXGetInstanceQueryParams,\n};\n","import * as _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/WAF';\nconst queryEditorName = 'wafQuery';\nconst WAFFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  origin: [],\n  domain: [],\n  resourceId: [],\n  status: {},\n  serviceType: {},\n  projectId: [],\n  domainType: {},\n  fullUrlCache: {},\n  https: {},\n  originPullProtocol: {},\n  tagKey: [],\n};\n\nconst WAFFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'origin',\n    enDescriptor: 'origin',\n    cnDescriptor: '主源站',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'domain',\n    enDescriptor: 'domain',\n    cnDescriptor: '域名',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'resourceId',\n    enDescriptor: 'resourceId',\n    cnDescriptor: '域名id',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'status',\n    enDescriptor: 'status',\n    cnDescriptor: '域名状态',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'online', value: 'online' },\n      { text: 'offline', value: 'offline' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'serviceType',\n    enDescriptor: 'serviceType',\n    cnDescriptor: '业务类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'web', value: 'web' },\n      { text: 'download', value: 'download' },\n      { text: 'media', value: 'media' },\n    ],\n  },\n  {\n    key: 'projectId',\n    enDescriptor: 'projectId',\n    cnDescriptor: '项目ID',\n    link: '',\n    type: 'inputNumberMulti',\n  },\n  {\n    key: 'domainType',\n    enDescriptor: 'domainType',\n    cnDescriptor: '主源站类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '自有源', value: 'cname' },\n      { text: 'cos接入', value: 'cos' },\n    ],\n  },\n  {\n    key: 'fullUrlCache',\n    enDescriptor: 'fullUrlCache',\n    cnDescriptor: '全路径缓存',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '打开', value: 'on' },\n      { text: '关闭', value: 'off' },\n    ],\n  },\n  {\n    key: 'https',\n    enDescriptor: 'https',\n    cnDescriptor: '是否配置https',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'on', value: 'on' },\n      { text: 'off', value: 'off' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'originPullProtocol',\n    enDescriptor: 'originPullProtocol',\n    cnDescriptor: '回源协议类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'http', value: 'http' },\n      { text: 'follow', value: 'follow' },\n      { text: 'https', value: 'https' },\n    ],\n  },\n  {\n    key: 'tagKey',\n    enDescriptor: 'tagKey',\n    cnDescriptor: '标签键',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/228/41118',\n  namespace,\n  fieldDescriptor: WAFFilterFieldsDescriptor,\n};\nconst WAF_STATE = {\n  region: 'ap-guangzhou',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'Domain',\n  queries: WAFFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\n\nconst WAFInstanceAliasList = ['Domain', 'ProjectId'];\n\nconst WAFInvalidDemensions = {\n  projectId: 'ProjectId',\n  domain: 'Domain',\n};\nconst templateQueryIdMap = {\n  instance: 'Domain',\n};\nexport default WAF_STATE;\nexport {\n  WAFFilterFieldsDescriptor,\n  templateQueryIdMap,\n  WAFInstanceAliasList,\n  WAFInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  GetInstanceQueryParams as WAFGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\nconst InstanceTypes = [\n  { text: '主实例', value: 1 },\n  { text: '备灾实例', value: 2 },\n  { text: '只读实例', value: 3 },\n];\n\nconst Status = [\n  { text: '创建中', value: 0 },\n  { text: '运行中', value: 1 },\n  { text: '隔离中', value: 4 },\n  { text: '已隔离', value: 5 },\n];\n\nconst PayTypes = [\n  { text: '包年包月', value: 0 },\n  { text: '小时计费', value: 1 },\n];\n\nconst TaskStatus = [\n  { text: '没有任务', value: 0 },\n  { text: '升级中', value: 1 },\n  { text: '数据导入中', value: 2 },\n  { text: '开放Slave中', value: 3 },\n  { text: '外网访问开通中', value: 4 },\n  { text: '批量操作执行中', value: 5 },\n  { text: '回档中', value: 6 },\n  { text: '外网访问关闭中', value: 7 },\n  { text: '密码修改中', value: 8 },\n  { text: '实例名修改中', value: 9 },\n  { text: '重启中', value: 10 },\n  { text: '自建迁移中', value: 12 },\n  { text: '删除库表中', value: 13 },\n  { text: '灾备实例创建同步中', value: 14 },\n  { text: '升级待切换', value: 15 },\n  { text: '升级切换中', value: 16 },\n  { text: '升级切换完成', value: 17 },\n];\n\nconst EngineVersions = [\n  { text: '5.1', value: '5.1' },\n  { text: '5.5', value: '5.5' },\n  { text: '5.6', value: '5.6' },\n  { text: '5.7', value: '5.7' },\n];\n\nconst OrderBy = [\n  { text: 'InstanceId', value: 'InstanceId' },\n  { text: 'InstanceName', value: 'InstanceName' },\n  { text: 'CreateTime', value: 'CreateTime' },\n  { text: 'DeadlineTime', value: 'DeadlineTime' },\n];\n\nconst OrderDirection = [\n  { text: 'ASC', value: 'ASC' },\n  { text: 'DESC', value: 'DESC' },\n];\n\nconst InitFlag = [\n  { text: '未初始化', value: 0 },\n  { text: '初始化', value: 1 },\n];\n\nconst CdbErrors = [\n  { text: '未锁定', value: 0 },\n  { text: '锁定', value: 1 },\n];\n\nconst CDBFields = {\n  ProjectId: '',\n  InstanceTypes: {},\n  Vips: [],\n  Status: {},\n  Offset: 0,\n  Limit: 20,\n  SecurityGroupId: '',\n  PayTypes: {},\n  InstanceNames: [],\n  TaskStatus: {},\n  EngineVersions: {},\n  VpcIds: [],\n  ZoneIds: [],\n  SubnetIds: [],\n  CdbErrors: {},\n  OrderBy: {},\n  OrderDirection: {},\n  InstanceIds: [],\n  InitFlag: {},\n};\n\nconst CDBFieldsDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceNames',\n    enDescriptor: 'Instance Name',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'InstanceIds',\n    enDescriptor: 'Instance ID',\n    cnDescriptor: '实例ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'ZoneIds',\n    enDescriptor: 'Zone ID',\n    cnDescriptor: '可用区的ID',\n    link: '',\n    type: 'dropdownmulti',\n  },\n  {\n    key: 'InstanceTypes',\n    enDescriptor: 'Instance Type',\n    cnDescriptor: '实例类型',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: InstanceTypes,\n  },\n  {\n    key: 'EngineVersions',\n    enDescriptor: 'Engine Version',\n    cnDescriptor: '实例数据库引擎版本',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: EngineVersions,\n  },\n  {\n    key: 'TaskStatus',\n    enDescriptor: 'Task Status',\n    cnDescriptor: '实例任务',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: TaskStatus,\n  },\n  {\n    key: 'InitFlag',\n    enDescriptor: 'Init Flag',\n    cnDescriptor: '实例初始化状态',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: InitFlag,\n  },\n  {\n    key: 'PayTypes',\n    enDescriptor: 'Pay Type',\n    cnDescriptor: '付费类型',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: PayTypes,\n  },\n  {\n    key: 'CdbErrors',\n    enDescriptor: 'CDB Errors',\n    cnDescriptor: '实例锁定标记',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: CdbErrors,\n  },\n  {\n    key: 'Status',\n    enDescriptor: 'Status',\n    cnDescriptor: '实例状态',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: Status,\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderBy,\n  },\n  {\n    key: 'OrderDirection',\n    enDescriptor: 'Order Direction',\n    cnDescriptor: '排序方式',\n    link: '',\n    type: 'select',\n    list: OrderDirection,\n  },\n  {\n    key: 'Vips',\n    enDescriptor: 'Vip',\n    cnDescriptor: '实例内网IP地址',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'VpcIds',\n    enDescriptor: 'Vpc ID',\n    cnDescriptor: '私有网络ID',\n    link: 'https://cloud.tencent.com/document/api/215/15778',\n    type: 'inputmulti',\n  },\n  {\n    key: 'SubnetIds',\n    enDescriptor: 'Subnet ID',\n    cnDescriptor: '子网ID',\n    link: 'https://cloud.tencent.com/document/api/215/15784',\n    type: 'inputmulti',\n  },\n  {\n    key: 'ProjectId',\n    enDescriptor: 'Project ID',\n    cnDescriptor: '项目ID',\n    link: 'https://cloud.tencent.com/document/product/378/4400',\n    type: 'input',\n  },\n  {\n    key: 'SecurityGroupId',\n    enDescriptor: 'Security Group ID',\n    cnDescriptor: '安全组ID',\n    link: 'https://cloud.tencent.com/document/api/236/15854',\n    type: 'input',\n  },\n];\n\nconst CDB_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: { ...CDBFields },\n};\n\nconst CDBInstanceAliasList = ['InstanceId', 'InstanceName', 'Vip'];\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\nfunction isValidMetric(metricObj: any = {}) {\n  const dimension = _.get(metricObj, 'Dimensions[0].Dimensions');\n  return (\n    dimension.length === 2 &&\n    ((_.indexOf(dimension, 'instanceid') !== -1 && _.indexOf(dimension, 'insttype') !== -1) ||\n      (_.indexOf(dimension, 'InstanceId') !== -1 && _.indexOf(dimension, 'InstanceType') !== -1))\n  );\n}\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = item.Dimensions.map((i) => CDBInvalidDemensions[i] || i);\n  });\n  return metricTmp;\n}\nconst CDBInvalidDemensions = {\n  instanceid: 'InstanceId',\n  insttype: 'InstanceType',\n  region: 'Region',\n};\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\nexport default CDB_STATE;\n\nexport {\n  CDBFieldsDescriptor,\n  CDBInstanceAliasList,\n  templateQueryIdMap,\n  CDBInvalidDemensions,\n  isValidMetric,\n  modifyDimensons,\n  GetInstanceQueryParams as CDBGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\nconst LighthouseStateType = [\n  { text: '创建中', value: 'PENDING' },\n  { text: '创建失败', value: 'LAUNCH_FAILED' },\n  { text: '运行中', value: 'RUNNING' },\n  { text: '关机', value: 'STOPPED' },\n  { text: '开机中', value: 'STARTING' },\n  { text: '关机中', value: 'STOPPING' },\n  { text: '重启中', value: 'REBOOTING' },\n  { text: '停止待销毁', value: 'SHUTDOWN' },\n  { text: '销毁中', value: 'TERMINATING' },\n];\n\nconst LighthouseFilterFields = {\n  zone: [],\n  'instance-name': [],\n  'instance-state': {},\n  'private-ip-address': [],\n  'public-ip-address': [],\n};\n\nconst LighthouseFilterFieldsDescriptor = [\n  {\n    key: 'instance-name',\n    enDescriptor: 'Instance Name',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'private-ip-address',\n    enDescriptor: 'Private IP Address',\n    cnDescriptor: '实例主网卡的内网IP',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'public-ip-address',\n    enDescriptor: 'Public IP Address',\n    cnDescriptor: '实例主网卡的公网IP',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'zone',\n    enDescriptor: 'Zone',\n    cnDescriptor: '可用区',\n    link: '',\n    type: 'dropdownmulti',\n  },\n  {\n    key: 'instance-state',\n    enDescriptor: 'Instance State',\n    cnDescriptor: '实例状态',\n    link: '',\n    type: 'select',\n    list: LighthouseStateType,\n  },\n];\n\nconst LIGHTHOUSE_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    instanceIdsChecked: false,\n    filtersChecked: false,\n    InstanceIds: [''],\n    Filters: { ...LighthouseFilterFields },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    if (queries.instanceIdsChecked) {\n      if (_.isArray(queries.InstanceIds)) {\n        const InstanceIds = _.compact(queries.InstanceIds);\n        if (_.uniq(InstanceIds).length > 0) {\n          params.InstanceIds = _.uniq(InstanceIds).slice(0, 100);\n        }\n      }\n    } else if (queries.filtersChecked) {\n      const Filters: any[] = [];\n      _.forEach(queries.Filters, (item: any, key) => {\n        if (Filters.length > 9) {\n          return;\n        }\n        if (_.isArray(item)) {\n          item = _.compact(item);\n          if (item.length > 0) {\n            Filters.push({ Name: key, Values: _.uniq(item).slice(0, 5) });\n          }\n        } else if (_.isObject(item)) {\n          if (!_.isEmpty(_.get(item, 'value', []))) {\n            Filters.push({ Name: key, Values: _.get(item, 'value', []).slice(0, 5) });\n          }\n        }\n      });\n      if (Filters.length > 0) {\n        params.Filters = Filters;\n      }\n    }\n  }\n  return params;\n}\n\nconst LIGHTHOUSEInstanceAliasList = ['InstanceId', 'InstanceName', 'PrivateIpAddresses', 'PublicIpAddresses'];\n\nconst LighthouseInvalidDemensions = {\n  instanceid: 'InstanceId',\n};\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\n\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['InstanceId'];\n  });\n  return metricTmp;\n}\n\nexport default LIGHTHOUSE_STATE;\n\nexport {\n  LighthouseFilterFieldsDescriptor,\n  LIGHTHOUSEInstanceAliasList,\n  LighthouseInvalidDemensions,\n  templateQueryIdMap,\n  modifyDimensons,\n  GetInstanceQueryParams as LIGHTHOUSEGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\nexport const CFSQueryDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'FileSystemId',\n    enDescriptor: 'File System Id',\n    cnDescriptor: '文件系统 ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'VpcId',\n    cnDescriptor: '私有网络（VPC） ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SubnetId',\n    enDescriptor: 'SubnetId',\n    cnDescriptor: '子网 ID',\n    link: '',\n    type: 'input',\n  },\n];\n\nconst CFS_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'FileSystemId',\n  version: '',\n  queries: {\n    Offset: 0,\n    Limit: 20,\n    FileSystemId: '',\n    VpcId: '',\n    SubnetId: '',\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\nconst CFSInstanceAliasList = ['FileSystemId', 'FsName'];\n\n// 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key\nconst CFSInvalidDemensions = {\n  // functionName: 'FunctionName',\n  // namespace: 'Namespace'\n};\n\nconst regionSupported = [\n  { text: '华北地区(北京)', value: 'ap-beijing' },\n  { text: '西南地区(成都)', value: 'ap-chengdu' },\n  { text: '西南地区(重庆)', value: 'ap-chongqing' },\n  { text: '华南地区(广州)', value: 'ap-guangzhou' },\n  { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n  { text: '亚太南部(孟买)', value: 'ap-mumbai' },\n  { text: '华东地区(南京)', value: 'ap-nanjing' },\n  { text: '亚太东北(首尔)', value: 'ap-seoul' },\n  { text: '华东地区(上海)', value: 'ap-shanghai' },\n  { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },\n  { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n  { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n  { text: '亚太东北(东京)', value: 'ap-tokyo' },\n  { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },\n  { text: '美国西部(硅谷)', value: 'na-siliconvalley' },\n  { text: '北美地区(多伦多)', value: 'na-toronto' },\n];\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\nexport default CFS_STATE;\nexport {\n  CFSInstanceAliasList,\n  CFSInvalidDemensions,\n  templateQueryIdMap,\n  regionSupported,\n  GetInstanceQueryParams as CFSGetInstanceQueryParams,\n};\n\n// monitor监控数据默认支持的维度\n// export const SCFDefaultDimensionList = ['functionName', 'namespace', 'version'];\n","import _ from 'lodash';\nimport { FildDescriptorType } from '../_base/types';\n\nexport const InstanceQueryDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为10，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 50,\n  },\n  {\n    key: 'QueueName',\n    enDescriptor: 'QueueName',\n    cnDescriptor: '精确匹配QueueName',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'TagKey',\n    enDescriptor: 'TagKey',\n    cnDescriptor: '标签搜索',\n    link: '',\n    type: 'input',\n  },\n];\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\n// 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key\nexport const InvalidDemensions = {\n  queueId: 'QueueId',\n  queueName: 'QueueName',\n};\n\nexport const templateQueryIdMap = {\n  instance: 'QueueName',\n};\n\n// 与名称挂钩的变量\nconst InstanceAliasList = ['QueueName', 'QueueId'];\nexport { InstanceAliasList, GetInstanceQueryParams };\n\n// 界面状态模型，default\nexport default {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'QueueName',\n  queries: {\n    Offset: 0,\n    Limit: 20,\n    QueueName: '',\n    TagKey: '',\n  },\n};\n","import _ from 'lodash';\nconst instanceChargeTypes = [\n  { text: '预付费', value: 'PREPAID' },\n  { text: '后付费', value: 'POSTPAID_BY_HOUR' },\n  { text: 'CDH付费', value: 'CDHPAID' },\n];\n\nconst CVMFilterFields = {\n  zone: [],\n  'project-id': [],\n  'host-id': [],\n  'vpc-id': [],\n  'subnet-id': [],\n  'instance-id': [],\n  'security-group-id': [],\n  'instance-name': [],\n  'instance-charge-type': {},\n  'private-ip-address': [],\n  'public-ip-address': [],\n  'tag-key': [],\n};\n\nconst CVMFilterFieldsDescriptor = [\n  {\n    key: 'zone',\n    enDescriptor: 'Zone',\n    cnDescriptor: '可用区',\n    link: '',\n    type: 'dropdownmulti',\n  },\n  {\n    key: 'project-id',\n    enDescriptor: 'Project ID',\n    cnDescriptor: '项目ID',\n    link: 'https://cloud.tencent.com/document/api/378/4400',\n    type: 'inputNumbermulti',\n  },\n  {\n    key: 'host-id',\n    enDescriptor: 'CDH ID',\n    cnDescriptor: 'CDH ID',\n    link: 'https://cloud.tencent.com/document/product/416/19730',\n    type: 'inputmulti',\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'VPC ID',\n    cnDescriptor: 'VPC ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'subnet-id',\n    enDescriptor: 'Subnet ID',\n    cnDescriptor: '子网ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'instance-id',\n    enDescriptor: 'Instance ID',\n    cnDescriptor: '实例ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'security-group-id',\n    enDescriptor: 'Security Group ID',\n    cnDescriptor: '安全组ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'instance-name',\n    enDescriptor: 'Instance Name',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'tag-key',\n    enDescriptor: '标签简',\n    cnDescriptor: '标签简',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'instance-charge-type',\n    enDescriptor: 'Instance Charge Type',\n    cnDescriptor: '实例计费模式',\n    link: '',\n    type: 'select',\n    list: instanceChargeTypes,\n  },\n  {\n    key: 'private-ip-address',\n    enDescriptor: 'Private IP Address',\n    cnDescriptor: '实例主网卡的内网IP',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'public-ip-address',\n    enDescriptor: 'Public IP Address',\n    cnDescriptor: '实例主网卡的公网IP，包含实例创建时自动分配的IP和实例创建后手动绑定的弹性IP',\n    link: '',\n    type: 'inputmulti',\n  },\n];\n\nconst CVM_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    instanceIdsChecked: false,\n    filtersChecked: false,\n    InstanceIds: [''],\n    Filters: { ...CVMFilterFields },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    if (queries.instanceIdsChecked) {\n      if (_.isArray(queries.InstanceIds)) {\n        const InstanceIds = _.compact(queries.InstanceIds);\n        if (_.uniq(InstanceIds).length > 0) {\n          params.InstanceIds = _.uniq(InstanceIds).slice(0, 100);\n        }\n      }\n    } else if (queries.filtersChecked) {\n      const Filters: any[] = [];\n      _.forEach(queries.Filters, (item: any, key) => {\n        if (Filters.length > 9) {\n          return;\n        }\n        if (_.isArray(item)) {\n          item = _.compact(item);\n          if (item.length > 0) {\n            Filters.push({ Name: key, Values: _.uniq(item).slice(0, 5) });\n          }\n        } else if (_.isObject(item)) {\n          if (!_.isEmpty(_.get(item, 'value', []))) {\n            Filters.push({ Name: key, Values: _.get(item, 'value', []).slice(0, 5) });\n          }\n        }\n      });\n      if (Filters.length > 0) {\n        params.Filters = Filters;\n      }\n    }\n  }\n  return params;\n}\n\nconst CVMInstanceAliasList = ['InstanceId', 'InstanceName', 'PrivateIpAddresses', 'PublicIpAddresses'];\n\nconst CVMValidMetricsT = [\n  'CPUUsage',\n  'CpuLoadavg',\n  'Cpuloadavg5m',\n  'Cpuloadavg15m',\n  'BaseCpuUsage',\n  'GpuMemTotal',\n  'GpuMemUsage',\n  'GpuMemUsed',\n  'GpuPowDraw',\n  'GpuPowLimit',\n  'GpuPowUsage',\n  'GpuTemp',\n  'GpuUtil',\n  'LanOuttraffic',\n  'LanIntraffic',\n  'LanOutpkg',\n  'LanInpkg',\n  'WanOuttraffic',\n  'WanIntraffic',\n  'WanOutpkg',\n  'WanInpkg',\n  'AccOuttraffic',\n  'TcpCurrEstab',\n  'TimeOffset',\n  'MemUsed',\n  'MemUsage',\n  'CvmDiskUsage',\n  'BaseCpuUsage',\n  'VmDiskReadIops',\n];\n// const CVMInvalidDemensions = {\n//   'vm_uuid': 'InstanceId',\n//   'vmUuid': 'InstanceId',\n// };\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\nfunction isValidMetric(metric) {\n  const CVMValidMetrics = _.map(CVMValidMetricsT, _.toUpper);\n  return _.indexOf(CVMValidMetrics, _.toUpper(metric.MetricName)) !== -1;\n}\nfunction modifyDimensons(metricItem) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['InstanceId'];\n  });\n  return metricTmp;\n}\nexport default CVM_STATE;\nexport {\n  CVMFilterFieldsDescriptor,\n  CVMInstanceAliasList,\n  isValidMetric,\n  modifyDimensons,\n  templateQueryIdMap,\n  // CVMInvalidDemensions,\n  GetInstanceQueryParams as CVMGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nconst namespace = 'QCE/PCX';\n\nconst PCXFields = {\n  limit: 20,\n  offset: 0,\n  peeringConnectionId: '',\n  peeringConnectionName: '',\n  vpcId: '',\n  state: undefined,\n};\n\nconst PCX_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'peeringConnectionId',\n  queries: { ...PCXFields },\n};\n\nconst StateTypes = [\n  { text: '申请中', value: 0 },\n  { text: '连接成功', value: 1 },\n  { text: '已过期', value: 2 },\n  { text: '对端已拒绝', value: 3 },\n  { text: '对端已删除', value: 4 },\n];\n\nconst PCXFieldsDescriptor = [\n  {\n    key: 'offset',\n    enDescriptor: 'offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'limit',\n    enDescriptor: 'limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为50',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 50,\n  },\n  {\n    key: 'peeringConnectionId',\n    enDescriptor: 'PeeringConnection Id',\n    cnDescriptor: '私有网络对等连接 ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'peeringConnectionName',\n    enDescriptor: 'PeeringConnection Name',\n    cnDescriptor: '对等连接名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'vpcId',\n    enDescriptor: 'vpcId',\n    cnDescriptor: '发起方私有网络 ID 值',\n    link: 'https://cloud.tencent.com/document/api/215/1372',\n    type: 'dropdown',\n  },\n  {\n    key: 'state',\n    enDescriptor: 'state',\n    cnDescriptor: '连接状态',\n    link: '',\n    type: 'select',\n    list: StateTypes,\n  },\n];\n\nconst PCXInstanceAliasList = ['peeringConnectionId', 'peeringConnectionName'];\n\nconst templateQueryIdMap = {\n  instance: 'peeringConnectionId',\n};\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.limit = _.get(queries, 'limit', 20) || 20;\n    params.offset = _.get(queries, 'offset', 0) || 0;\n    queries = _.omit(queries, ['offset', 'limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\nexport default PCX_STATE;\n\nexport {\n  PCXInstanceAliasList,\n  PCXFieldsDescriptor,\n  templateQueryIdMap,\n  namespace,\n  GetInstanceQueryParams as PCXGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nconst BillingMode = [\n  { text: '按量计费', value: 'postpaid' },\n  { text: '包年包月', value: 'prepaid' },\n];\n\nconst AutoRenew = [\n  { text: '手动续费', value: 0 },\n  { text: '自动续费', value: 1 },\n  { text: '明确不自动续费', value: 2 },\n];\n\nconst Status = [\n  { text: '待初始化', value: 0 },\n  { text: '流程执行中', value: 1 },\n  { text: '运行中', value: 2 },\n  { text: '已隔离', value: -2 },\n  { text: '待删除', value: -3 },\n];\n\nconst TypeVersion = [\n  { text: '单机版', value: 1 },\n  { text: '主从版', value: 2 },\n  { text: '集群版', value: 3 },\n];\n\nconst OrderBy = [\n  { text: 'projectId', value: 'projectId' },\n  { text: 'instancename', value: 'instancename' },\n  { text: 'createtime', value: 'createtime' },\n  { text: 'type', value: 'type' },\n  { text: 'curDeadline', value: 'curDeadline' },\n];\n\nconst OrderType = [\n  { text: '升序', value: 0 },\n  { text: '降序', value: 1 },\n];\nconst Type = [\n  { text: 'Redis老集群版', value: 1 },\n  { text: 'Redis 2.8主从版', value: 2 },\n  { text: 'CKV主从版', value: 3 },\n  { text: 'CKV集群版', value: 4 },\n  { text: 'Redis 2.8单机版', value: 5 },\n  { text: 'Redis 4.0主从版', value: 6 },\n  { text: 'Redis 4.0集群版', value: 7 },\n  { text: 'Redis5.0主从版', value: 8 },\n  { text: 'Redis5.0集群版', value: 9 },\n];\n\nconst RedisFields = {\n  InstanceId: '',\n  OrderBy: '',\n  OrderType: null,\n  VpcIds: [],\n  SubnetIds: [],\n  ProjectIds: [],\n  SearchKey: '',\n  InstanceName: '',\n  UniqVpcIds: [],\n  UniqSubnetIds: [],\n  Status: [],\n  TypeVersion: null,\n  EngineName: '',\n  AutoRenew: null,\n  BillingMode: '',\n  Type: null,\n};\n\nconst RedisFieldsDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceId',\n    enDescriptor: 'InstancesId',\n    cnDescriptor: '实例id',\n    type: 'input',\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderBy,\n  },\n  {\n    key: 'OrderType',\n    enDescriptor: 'OrderType',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderType,\n  },\n  {\n    key: 'VpcIds',\n    enDescriptor: 'VpcIds',\n    cnDescriptor: '私有网络ID数组，数组下标从0开始，如果不传则默认选择基础网络，如：47525',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'SubnetIds',\n    enDescriptor: 'SubnetIds',\n    cnDescriptor: '子网ID数组，数组下标从0开始，如：56854',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'ProjectIds',\n    enDescriptor: 'ProjectIds',\n    cnDescriptor: '项目ID 组成的数组',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'SearchKey',\n    enDescriptor: 'SearchKey',\n    cnDescriptor: '查找实例的ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'InstanceName',\n    enDescriptor: 'InstanceName',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'UniqVpcIds',\n    enDescriptor: 'UniqVpcIds',\n    cnDescriptor: '私有网络ID数组，数组下标从0开始，如果不传则默认选择基础网络，如：vpc-sad23jfdfk',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'UniqSubnetIds',\n    enDescriptor: 'UniqSubnetIds',\n    cnDescriptor: '子网ID数组，数组下标从0开始，如：subnet-fdj24n34j2',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'Status',\n    enDescriptor: 'Status',\n    cnDescriptor: '实例状态',\n    multiple: true,\n    type: 'select',\n    list: Status,\n  },\n  {\n    key: 'TypeVersion',\n    enDescriptor: 'TypeVersion',\n    cnDescriptor: '类型版本',\n    link: '',\n    type: 'select',\n    list: TypeVersion,\n  },\n  {\n    key: 'EngineName',\n    enDescriptor: 'EngineName',\n    cnDescriptor: '引擎信息：Redis-2.8，Redis-4.0，CKV',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'AutoRenew',\n    enDescriptor: 'AutoRenew',\n    cnDescriptor: '续费模式',\n    multiple: true,\n    type: 'select',\n    list: AutoRenew,\n  },\n  {\n    key: 'BillingMode',\n    enDescriptor: 'BillingMode',\n    cnDescriptor: '计费模式：postpaid-按量计费；prepaid-包年包月',\n    link: '',\n    type: 'select',\n    list: BillingMode,\n  },\n  {\n    key: 'Type',\n    enDescriptor: 'Type',\n    cnDescriptor: '实例类型',\n    link: '',\n    type: 'select',\n    list: Type,\n  },\n];\n\nconst REDIS_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: { ...RedisFields },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        // select 单选\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\nfunction isValidMetric(metricObj: any = {}) {\n  const dimension = _.get(metricObj, 'Dimensions[0].Dimensions');\n  return dimension.length === 1 && _.indexOf(dimension, 'instanceid') !== -1;\n}\n\nconst REDISInstanceAliasList = ['InstanceId', 'InstanceName', 'WanIp'];\n\nconst RedisInvalidDemensions = {\n  redis_uuid: 'InstanceId',\n  instanceid: 'InstanceId',\n};\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\nexport default REDIS_STATE;\nexport {\n  RedisFieldsDescriptor,\n  RedisInvalidDemensions,\n  templateQueryIdMap,\n  REDISInstanceAliasList,\n  isValidMetric,\n  GetInstanceQueryParams as REDISGetInstanceQueryParams,\n};\n","import { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst ApplicationType = [\n  { text: '所有', value: '' },\n  { text: '容器应用', value: 'C' },\n  { text: '普通应用/虚拟机应用', value: 'V' },\n];\n\nconst MicroserviceType = [\n  { text: '所有', value: '' },\n  { text: '普通应用', value: 'N' },\n  { text: 'Mesh应用', value: 'M' },\n  { text: '微服务网关应用', value: 'G' },\n  { text: '原生应用', value: 'NATIVE' },\n];\n\nconst ApplicationResourceType = [\n  { text: '默认资源类型', value: 'DEF' },\n  { text: '微服务网关资源', value: 'GW' },\n];\n\nconst TSFFieldsDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'SearchWord',\n    enDescriptor: 'SearchWord',\n    cnDescriptor: '搜索关键字',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'ApplicationIdList',\n    enDescriptor: 'ApplicationIdList',\n    cnDescriptor: '应用ID 组成的数组',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'ApplicationType',\n    enDescriptor: 'ApplicationType',\n    cnDescriptor: '应用类型',\n    link: '',\n    type: 'select',\n    list: ApplicationType,\n  },\n  {\n    key: 'MicroserviceType',\n    enDescriptor: 'MicroserviceType',\n    cnDescriptor: '应用的微服务类型',\n    link: '',\n    type: 'select',\n    list: MicroserviceType,\n  },\n  {\n    key: 'ApplicationResourceTypeList',\n    enDescriptor: 'ApplicationResourceTypeList',\n    cnDescriptor: '应用资源类型数组',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: ApplicationResourceType,\n  },\n];\n\nconst TSF_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'ApplicationId',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    SearchWord: '',\n    OrderBy: '',\n    OrderType: null,\n    ApplicationType: '',\n    MicroserviceType: '',\n    ApplicationResourceTypeList: [],\n    ApplicationIdList: [],\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\n\nconst TSFInstanceAliasList = ['ApplicationId', 'ApplicationName'];\n\nconst TSFInvalidDemensions = {\n  applicationid: 'ApplicationId',\n};\n\nconst templateQueryIdMap = {\n  instance: 'ApplicationId',\n};\n\nexport default TSF_STATE;\nexport {\n  TSFInvalidDemensions,\n  templateQueryIdMap,\n  TSFInstanceAliasList,\n  TSFFieldsDescriptor,\n  GetInstanceQueryParams as TSFGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nconst networkTypes = [\n  { text: 'BGP', value: 'BGP' },\n  { text: 'SINGLEISP', value: 'SINGLEISP' },\n  { text: 'ANYCAST', value: 'ANYCAST' },\n];\n\nconst chargeTypes = [\n  { text: 'top5计费', value: 'TOP5_POSTPAID_BY_MONTH' },\n  { text: '月95计费', value: 'PERCENT95_POSTPAID_BY_MONTH' },\n];\nconst BWPFilterFields = {\n  'bandwidth-package_id': [],\n  'bandwidth-package-name': [],\n  'network-type': [],\n  'charge-type': [],\n};\n\nconst BWPFilterFieldsDescriptor = [\n  {\n    key: 'bandwidth-package_id',\n    enDescriptor: 'BandwidthPackage Id',\n    cnDescriptor: '带宽包ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'bandwidth-package-name',\n    enDescriptor: 'BandwidthPackage Name',\n    cnDescriptor: '带宽包名称',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'network-type',\n    enDescriptor: 'network type',\n    cnDescriptor: '带宽包类型',\n    link: '',\n    type: 'select',\n    list: networkTypes,\n  },\n  {\n    key: 'charge-type',\n    enDescriptor: 'charge type',\n    cnDescriptor: '带宽包计费类型',\n    link: '',\n    type: 'select',\n    list: chargeTypes,\n  },\n];\n\nconst BWP_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'BandwidthPackageId',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    instanceIdsChecked: false,\n    filtersChecked: false,\n    BandwidthPackageIds: [''],\n    Filters: { ...BWPFilterFields },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    if (queries.instanceIdsChecked) {\n      if (_.isArray(queries.BandwidthPackageIds)) {\n        const BandwidthPackageIds = _.compact(queries.BandwidthPackageIds);\n        if (_.uniq(BandwidthPackageIds).length > 0) {\n          params.BandwidthPackageIds = _.uniq(BandwidthPackageIds).slice(0, 100);\n        }\n      }\n    } else if (queries.filtersChecked) {\n      const Filters: any[] = [];\n      _.forEach(queries.Filters, (item: any, key) => {\n        if (Filters.length > 9) {\n          return;\n        }\n        if (_.isArray(item)) {\n          item = _.compact(item);\n          if (item.length > 0) {\n            Filters.push({ Name: key, Values: _.uniq(item).slice(0, 5) });\n          }\n        } else if (_.isObject(item)) {\n          if (!_.isEmpty(_.get(item, 'value', []))) {\n            Filters.push({ Name: key, Values: _.get(item, 'value', []).slice(0, 5) });\n          }\n        }\n      });\n      if (Filters.length > 0) {\n        params.Filters = Filters;\n      }\n    }\n  }\n  return params;\n}\n\nconst BWPInstanceAliasList = ['BandwidthPackageId', 'BandwidthPackageName'];\n\nconst templateQueryIdMap = {\n  instance: 'BandwidthPackageId',\n};\n\nconst BWPInvalidDemensions = {\n  bandwidthPackageId: 'BandwidthPackageId',\n};\nexport default BWP_STATE;\nexport {\n  BWPFilterFieldsDescriptor,\n  templateQueryIdMap,\n  BWPInstanceAliasList,\n  BWPInvalidDemensions,\n  GetInstanceQueryParams as BWPGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nconst CDNFilterFields = {\n  origin: [],\n  domain: [],\n  resourceId: [],\n  status: {},\n  serviceType: {},\n  projectId: [],\n  domainType: {},\n  fullUrlCache: {},\n  https: {},\n  originPullProtocol: {},\n  tagKey: [],\n};\n\nconst CDNFilterFieldsDescriptor = [\n  {\n    key: 'origin',\n    enDescriptor: 'origin',\n    cnDescriptor: '主源站',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'domain',\n    enDescriptor: 'domain',\n    cnDescriptor: '域名',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'resourceId',\n    enDescriptor: 'resourceId',\n    cnDescriptor: '域名id',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'status',\n    enDescriptor: 'status',\n    cnDescriptor: '域名状态',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'online', value: 'online' },\n      { text: 'offline', value: 'offline' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'serviceType',\n    enDescriptor: 'serviceType',\n    cnDescriptor: '业务类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'web', value: 'web' },\n      { text: 'download', value: 'download' },\n      { text: 'media', value: 'media' },\n    ],\n  },\n  {\n    key: 'projectId',\n    enDescriptor: 'projectId',\n    cnDescriptor: '项目ID',\n    link: '',\n    type: 'inputNumbermulti',\n  },\n  {\n    key: 'domainType',\n    enDescriptor: 'domainType',\n    cnDescriptor: '主源站类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '自有源', value: 'cname' },\n      { text: 'cos接入', value: 'cos' },\n    ],\n  },\n  {\n    key: 'fullUrlCache',\n    enDescriptor: 'fullUrlCache',\n    cnDescriptor: '全路径缓存',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '打开', value: 'on' },\n      { text: '关闭', value: 'off' },\n    ],\n  },\n  {\n    key: 'https',\n    enDescriptor: 'https',\n    cnDescriptor: '是否配置https',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'on', value: 'on' },\n      { text: 'off', value: 'off' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'originPullProtocol',\n    enDescriptor: 'originPullProtocol',\n    cnDescriptor: '回源协议类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'http', value: 'http' },\n      { text: 'follow', value: 'follow' },\n      { text: 'https', value: 'https' },\n    ],\n  },\n  {\n    key: 'tagKey',\n    enDescriptor: 'tagKey',\n    cnDescriptor: '标签键',\n    link: '',\n    type: 'inputmulti',\n  },\n];\n\nconst CDN_STATE = {\n  region: 'ap-guangzhou',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'Domain',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    Filters: { ...CDNFilterFields },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    const Filters: any[] = [];\n    _.forEach(queries.Filters, (item: any, key) => {\n      // console.log('item', item, queries);\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          Filters.push({ Name: key, Value: _.uniq(item).slice(0, 5) });\n        }\n      } else if (_.isObject(item)) {\n        if (!_.isEmpty(_.get(item, 'value', []))) {\n          Filters.push({ Name: key, Value: _.get(item, 'value', []).slice(0, 5) });\n        }\n      }\n    });\n    if (Filters.length > 0) {\n      params.Filters = Filters;\n    }\n  }\n  return params;\n}\n\nconst CDNInstanceAliasList = ['Domain', 'ProjectId'];\n\nconst CDNInvalidDemensions = {\n  projectId: 'ProjectId',\n  domain: 'Domain',\n};\nconst templateQueryIdMap = {\n  instance: 'Domain',\n};\nexport default CDN_STATE;\nexport {\n  CDNFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CDNInstanceAliasList,\n  CDNInvalidDemensions,\n  GetInstanceQueryParams as CDNGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\n// export const LBQueryDescriptor = [{\n//   key: 'Offset',\n//   enDescriptor: 'Offset',\n//   cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n//   link: '',\n//   type: 'inputnumber',\n//   min: 0,\n// },\n// {\n//   key: 'Limit',\n//   enDescriptor: 'Limit',\n//   cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为2000',\n//   link: '',\n//   type: 'inputnumber',\n//   min: 1,\n//   max: 2000,\n// },\n// {\n//   key: 'AddressId',\n//   enDescriptor: 'Address Id',\n//   cnDescriptor: '标识 EIP 的唯一 ID ',\n//   link: '',\n//   type: 'inputmulti',\n// }\n// ];\n\nexport const LBFilterDescriptor = [\n  {\n    key: 'address-id',\n    enDescriptor: 'Address ID',\n    cnDescriptor: 'EIP 的唯一 ID ',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'address-name',\n    enDescriptor: 'Address Name',\n    cnDescriptor: 'EIP 名称 ',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'address-ip',\n    enDescriptor: 'Address IP',\n    cnDescriptor: 'EIP 的 IP 地址 ',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'address-status',\n    enDescriptor: 'Address Status',\n    cnDescriptor: 'EIP 的状态',\n    link: '',\n    type: 'select',\n    list: [\n      { value: 'CREATING', text: 'CREATING' },\n      { value: 'BINDING', text: 'BINDING' },\n      { value: 'BIND', text: 'BIND' },\n      { value: 'UNBINDING', text: 'UNBINDING' },\n      { value: 'UNBIND', text: 'UNBIND' },\n      { value: 'OFFLINING', text: 'OFFLINING' },\n      { value: 'BIND_ENI', text: 'BIND_ENI' },\n    ],\n  },\n  {\n    key: 'instance-id',\n    enDescriptor: 'Instance ID',\n    cnDescriptor: '实例ID ',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'private-ip-address',\n    enDescriptor: 'Private IP Address',\n    cnDescriptor: 'EIP 绑定的内网 IP',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'network-interface-id',\n    enDescriptor: 'Network Interface ID',\n    cnDescriptor: 'EIP 绑定的弹性网卡 ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'is-arrears',\n    enDescriptor: 'Arrears',\n    cnDescriptor: 'EIP 是否欠费 ',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '正常', value: 'FALSE' },\n      { text: '欠费', value: 'TRUE' },\n    ],\n  },\n];\n\n// const LBFilterFields = {\n//   \"address-id\": [],\n//   \"address-name\": [],\n//   \"address-ip\": [],\n//   \"address-status \": [],\n//   \"instance-id \": [],\n//   \"private-ip-address\": [],\n//   \"network-interface-id \": [],\n//   \"is-arrears \": [],\n// };\n\nconst InstanceKey = 'AddressIds';\nconst LB_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'AddressId',\n  version: '',\n  queries: {\n    Offset: 0,\n    Limit: 20,\n    [InstanceKey]: [''],\n    Filters: {\n      'address-id': [],\n      'address-name': [],\n      'address-ip': [],\n      'address-status ': [],\n      'instance-id ': [],\n      'private-ip-address': [],\n      'network-interface-id ': [],\n      'is-arrears ': [],\n    },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    if (queries.instanceIdsChecked) {\n      if (_.isArray(queries[InstanceKey])) {\n        const InstanceIds = _.compact(queries[InstanceKey]);\n        if (_.uniq(InstanceIds).length > 0) {\n          params[InstanceKey] = _.uniq(InstanceIds).slice(0, 100);\n        }\n      }\n    } else if (queries.filtersChecked) {\n      const Filters: any[] = [];\n      _.forEach(queries.Filters, (item: any, key) => {\n        if (Filters.length > 9) {\n          return;\n        }\n        if (_.isArray(item)) {\n          item = _.compact(item);\n          if (item.length > 0) {\n            Filters.push({ Name: key, Values: _.uniq(item).slice(0, 5) });\n          }\n        } else if (_.isObject(item)) {\n          if (!_.isEmpty(_.get(item, 'value', []))) {\n            Filters.push({ Name: key, Values: _.get(item, 'value', []).slice(0, 5) });\n          }\n        }\n      });\n      if (Filters.length > 0) {\n        params.Filters = Filters;\n      }\n    }\n  }\n  return params;\n}\n\nconst LBInstanceAliasList = ['AddressId', 'AddressName', 'AddressIp'];\n\n// 维度eip对应于实例中的哪个字段？映射\nconst LBInvalidDemensions = {\n  eip: 'AddressIp',\n};\n\nconst templateQueryIdMap = {\n  instance: 'AddressId',\n};\n// 从monitor维度到LB实例对应字段的映射\n// export const metric2Instance = {\n//   functionName: 'FunctionName',\n//   namespace: 'Namespace'\n// };\n\nexport default LB_STATE;\nexport {\n  LBInstanceAliasList,\n  LBInvalidDemensions,\n  templateQueryIdMap,\n  GetInstanceQueryParams as LBGetInstanceQueryParams,\n};\n\n// monitor监控数据默认支持的维度\n// export const LBDefaultDimensionList = ['functionName', 'namespace', 'version'];\n","import _ from 'lodash';\nconst InstanceTypes = [\n  { text: '所有实例', value: 0 },\n  { text: '正式实例', value: 1 },\n  { text: '临时实例', value: 2 },\n  { text: '只读实例', value: 3 },\n  { text: '正式，只读，灾备实例', value: -1 },\n];\n\nconst ClusterTypes = [\n  { text: '副本集实例', value: 0 },\n  { text: '分片实例', value: 1 },\n  { text: '所有实例', value: -1 },\n];\n\nconst Status = [\n  { text: '待初始化', value: 0 },\n  { text: '流程执行中', value: 1 },\n  { text: '实例有效', value: 2 },\n  { text: '实例已过期', value: -2 },\n];\n\nconst PayMode = [\n  { text: '按量计费', value: 0 },\n  { text: '包年包月', value: 1 },\n  { text: '按量包年包月计费', value: -1 },\n];\n\nconst OrderBy = [\n  { text: 'ProjectId', value: 'ProjectId' },\n  { text: 'InstanceName', value: 'InstanceName' },\n  { text: 'CreateTime', value: 'CreateTime' },\n];\n\nconst OrderByType = [\n  { text: '升序', value: 'ASC' },\n  { text: '降序', value: 'DESC' },\n];\n\nconst MongoDBFields = {\n  InstanceIds: [],\n  InstanceType: {},\n  ClusterType: {},\n  Status: [],\n  VpcId: '',\n  SubnetId: '',\n  PayMode: {},\n  Limit: 20,\n  Offset: 0,\n  OrderBy: '',\n  OrderByType: '',\n};\n\nconst MONGODBFieldsDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceIds',\n    enDescriptor: 'InstancesIds',\n    cnDescriptor: '实例名称',\n    type: 'inputmulti',\n  },\n  {\n    key: 'InstanceType',\n    enDescriptor: 'InstanceType',\n    cnDescriptor: '实例类型',\n    link: '',\n    type: 'select',\n    list: InstanceTypes,\n  },\n  {\n    key: 'ClusterType',\n    enDescriptor: 'ClusterType',\n    cnDescriptor: '集群类型',\n    link: '',\n    type: 'select',\n    list: ClusterTypes,\n  },\n  {\n    key: 'Status',\n    enDescriptor: 'Status',\n    cnDescriptor: '实例状态',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: Status,\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'VpcId',\n    cnDescriptor: '私有网络的ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SubnetId',\n    enDescriptor: 'SubnetId',\n    cnDescriptor: '私有网络的子网ID，基础网络则不传该参数。入参设置该参数的同时，必须设置相应的VpcId',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'PayMode',\n    enDescriptor: 'PayMode',\n    cnDescriptor: '付费类型',\n    link: '',\n    type: 'select',\n    list: PayMode,\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderBy,\n  },\n  {\n    key: 'OrderByType',\n    enDescriptor: 'OrderByType',\n    cnDescriptor: '排序方式',\n    link: '',\n    type: 'select',\n    list: OrderByType,\n  },\n];\n\nconst MONGODB_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: { ...MongoDBFields },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        // select 单选\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\nconst MONGODBInstanceAliasList = ['InstanceId', 'InstanceName'];\n\nconst MONGODBInvalidDemensions = {\n  target: 'InstanceId',\n};\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\nexport default MONGODB_STATE;\nexport {\n  MONGODBFieldsDescriptor,\n  MONGODBInvalidDemensions,\n  MONGODBInstanceAliasList,\n  templateQueryIdMap,\n  GetInstanceQueryParams as MONGODBGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\nconst NATGATEWAYInstanceAliasList = ['NatGatewayId', 'NatGatewayName'];\n\nconst NATGatewayFilterFields = {\n  'nat-gateway-id': [],\n  'nat-gateway-name': [],\n  'vpc-id': [],\n};\n\nconst NATGatewayFilterFieldsDescriptor = [\n  {\n    key: 'nat-gateway-id',\n    enDescriptor: 'NatGateway ID',\n    cnDescriptor: 'NAT网关统一 ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'nat-gateway-name',\n    enDescriptor: 'NatGateway Name',\n    cnDescriptor: 'NatGateway Name',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'VPC ID',\n    cnDescriptor: '私有网络 ID',\n    link: '',\n    type: 'inputmulti',\n  },\n];\n\nconst NATGATEWAY_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'NatGatewayId',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    instanceIdsChecked: false,\n    filtersChecked: false,\n    NatGatewayIds: [''],\n    Filters: { ...NATGatewayFilterFields },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    if (queries.instanceIdsChecked) {\n      if (_.isArray(queries.NatGatewayIds)) {\n        const NatGatewayIds = _.compact(queries.NatGatewayIds);\n        if (_.uniq(NatGatewayIds).length > 0) {\n          params.InstanceIds = _.uniq(NatGatewayIds).slice(0, 100);\n        }\n      }\n    } else if (queries.filtersChecked) {\n      const Filters: any[] = [];\n      _.forEach(queries.Filters, (item: any, key) => {\n        if (Filters.length > 9) {\n          return;\n        }\n        if (_.isArray(item)) {\n          item = _.compact(item);\n          if (item.length > 0) {\n            Filters.push({ Name: key, Values: _.uniq(item).slice(0, 5) });\n          }\n        } else if (_.isObject(item)) {\n          if (!_.isEmpty(_.get(item, 'value', []))) {\n            Filters.push({ Name: key, Values: _.get(item, 'value', []).slice(0, 5) });\n          }\n        }\n      });\n      if (Filters.length > 0) {\n        params.Filters = Filters;\n      }\n    }\n  }\n  return params;\n}\n\nconst templateQueryIdMap = {\n  instance: 'NatGatewayId',\n};\n\nconst NATInvalidDemensions = {\n  natId: 'NatGatewayId',\n};\n\nexport default NATGATEWAY_STATE;\nexport {\n  NATGatewayFilterFieldsDescriptor,\n  NATGATEWAYInstanceAliasList,\n  templateQueryIdMap,\n  NATInvalidDemensions,\n  GetInstanceQueryParams as NATGATEWAYGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nconst CDNFilterFields = {\n  origin: [],\n  domain: [],\n  resourceId: [],\n  status: [],\n  serviceType: [],\n  projectId: [],\n  domainType: [],\n  fullUrlCache: [],\n  https: [],\n  originPullProtocol: [],\n  tagKey: [],\n};\n\nconst OVCDNFilterFieldsDescriptor = [\n  {\n    key: 'origin',\n    enDescriptor: 'origin',\n    cnDescriptor: '主源站',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'domain',\n    enDescriptor: 'domain',\n    cnDescriptor: '域名',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'resourceId',\n    enDescriptor: 'resourceId',\n    cnDescriptor: '域名id',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'status',\n    enDescriptor: 'status',\n    cnDescriptor: '域名状态',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'online', value: 'online' },\n      { text: 'offline', value: 'offline' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'serviceType',\n    enDescriptor: 'serviceType',\n    cnDescriptor: '业务类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'web', value: 'web' },\n      { text: 'download', value: 'download' },\n      { text: 'media', value: 'media' },\n    ],\n  },\n  {\n    key: 'projectId',\n    enDescriptor: 'projectId',\n    cnDescriptor: '项目ID',\n    link: '',\n    type: 'inputNumbermulti',\n  },\n  {\n    key: 'domainType',\n    enDescriptor: 'domainType',\n    cnDescriptor: '主源站类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '自有源', value: 'cname' },\n      { text: 'cos接入', value: 'cos' },\n    ],\n  },\n  {\n    key: 'fullUrlCache',\n    enDescriptor: 'fullUrlCache',\n    cnDescriptor: '全路径缓存',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '打开', value: 'on' },\n      { text: '关闭', value: 'off' },\n    ],\n  },\n  {\n    key: 'https',\n    enDescriptor: 'https',\n    cnDescriptor: '是否配置https',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'on', value: 'on' },\n      { text: 'off', value: 'off' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'originPullProtocol',\n    enDescriptor: 'originPullProtocol',\n    cnDescriptor: '回源协议类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'http', value: 'http' },\n      { text: 'follow', value: 'follow' },\n      { text: 'https', value: 'https' },\n    ],\n  },\n  {\n    key: 'tagKey',\n    enDescriptor: 'tagKey',\n    cnDescriptor: '标签键',\n    link: '',\n    type: 'inputmulti',\n  },\n];\n\nconst OVCDN_STATE = {\n  region: 'ap-guangzhou',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'Domain',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    Filters: { ...CDNFilterFields },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    const Filters: any[] = [];\n    _.forEach(queries.Filters, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          Filters.push({ Name: key, Value: _.uniq(item).slice(0, 5) });\n        }\n      } else if (_.isObject(item)) {\n        if (!_.isEmpty(_.get(item, 'value', []))) {\n          Filters.push({ Name: key, Value: _.get(item, 'value', []).slice(0, 5) });\n        }\n      }\n    });\n    if (Filters.length > 0) {\n      params.Filters = Filters;\n    }\n  }\n  return params;\n}\n\nconst OVCDNInstanceAliasList = ['Domain', 'ResourceId'];\n\nconst OVCDNInvalidDemensions = {\n  projectId: 'ProjectId',\n  domain: 'Domain',\n};\nconst templateQueryIdMap = {\n  instance: 'Domain',\n};\nexport default OVCDN_STATE;\nexport {\n  OVCDNFilterFieldsDescriptor,\n  OVCDNInstanceAliasList,\n  templateQueryIdMap,\n  OVCDNInvalidDemensions,\n  GetInstanceQueryParams as OVCDNGetInstanceQueryParams,\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__62__;","import {\n  APIGATEWAYInstanceAliasList,\n  APIGATEWAYInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  regionSupported,\n  keyInStorage,\n  queryMonitorExtraConfg,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = APIGATEWAYInstanceAliasList;\n  InvalidDimensions = APIGATEWAYInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'apigateway',\n    action: 'DescribeServicesStatus',\n    responseField: 'ServiceSet',\n  };\n\n  keyInStorage = keyInStorage;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // getFilterDropdown({ field }) {\n  //   return super.getRegions();\n  // }\n  getRegions() {\n    return Promise.resolve(regionSupported);\n  }\n  async getEnvironmentNameList(params: any) {\n    const { region, instanceId } = params;\n    const serviceInfo = GetServiceAPIInfo(region, this.service);\n\n    // 从分页数据，获取全量数据\n    const res = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action: 'DescribeServiceEnvironmentList' }\n        );\n      },\n      {\n        ServiceId: instanceId,\n      },\n      'EnvironmentList'\n    );\n    const [rs] = res;\n    return rs;\n  }\n  async fetchMetricData(action: string, region: string, instance: any) {\n    // console.log({ action, region, instance });\n    if (action === 'DescribeServiceEnvironmentList') {\n      const rs = await this.getEnvironmentNameList({ region, instanceId: instance[this.templateQueryIdMap.instance] });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[this.templateQueryIdMap.environmentName];\n        return {\n          text: o[this.templateQueryIdMap.environmentName],\n          value: o[this.templateQueryIdMap.environmentName],\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage.environmentList, rs);\n      return result;\n    }\n    return [];\n  }\n}\n","import {\n  BMINTRALBInstanceAliasList,\n  BMINTRALBInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  isValidMetric,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = BMINTRALBInstanceAliasList;\n  InvalidDimensions = BMINTRALBInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'bmlb',\n    action: 'DescribeLoadBalancers',\n    responseField: 'LoadBalancerSet',\n    interceptor: {\n      request: (params) => ({\n        ...params,\n        LoadBalancerType: 'internal',\n      }), // 设置一些请求参数的 默认值\n    },\n  };\n  RegionMap = {};\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // 重写getRegion\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/bm',\n      },\n      'bm',\n      { action: 'DescribeRegions', region: 'ap-guangzhou' }\n    ).then((response) => {\n      // 缓存，后面获取可用区zone\n      this.RegionMap = _.keyBy(response.RegionInfoSet, 'Region');\n      return _.map(response.RegionInfoSet || [], (item) => {\n        return {\n          text: item.RegionDescription,\n          value: item.Region,\n        };\n      });\n    });\n  }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        if (isValidMetric(item)) {\n          return item;\n        }\n        return null;\n      })\n    );\n  }\n}\n","import { BMLBInstanceAliasList, CPMInvalidDemensions, namespace, templateQueryIdMap, isValidMetric } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = BMLBInstanceAliasList;\n  InvalidDimensions = CPMInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'bmlb',\n    action: 'DescribeLoadBalancers',\n    responseField: 'LoadBalancerSet',\n    interceptor: {\n      request: (params) => ({\n        ...params,\n        LoadBalancerType: 'open',\n      }), // 设置一些请求参数的 默认值\n    },\n  };\n  RegionMap = {};\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        if (isValidMetric(item)) {\n          return item;\n        }\n        return null;\n      })\n    );\n  }\n  // 重写getRegion\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/bm',\n      },\n      'bm',\n      { action: 'DescribeRegions', region: 'ap-guangzhou' }\n    ).then((response) => {\n      // 缓存，后面获取可用区zone\n      this.RegionMap = _.keyBy(response.RegionInfoSet, 'Region');\n      return _.map(response.RegionInfoSet || [], (item) => {\n        return {\n          text: item.RegionDescription,\n          value: item.Region,\n        };\n      });\n    });\n  }\n}\n","import {\n  BMPCXInstanceAliasList,\n  BMPCXInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = BMPCXInstanceAliasList;\n  InvalidDimensions = BMPCXInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'bmvpc',\n    action: 'DescribeVpcPeerConnections',\n    responseField: 'VpcPeerConnectionSet',\n  };\n  MetricReqConfig = {\n    resultFilter: modifyDimensons,\n  };\n  RegionMap = {};\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // 重写getRegion\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/bm',\n      },\n      'bm',\n      { action: 'DescribeRegions', region: 'ap-guangzhou' }\n    ).then((response) => {\n      // 缓存，后面获取可用区zone\n      this.RegionMap = _.keyBy(response.RegionInfoSet, 'Region');\n      return _.map(response.RegionInfoSet || [], (item) => {\n        return {\n          text: item.RegionDescription,\n          value: item.Region,\n        };\n      });\n    });\n  }\n}\n","import { BWPInstanceAliasList, BWPInvalidDemensions } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class BWPDatasource extends BaseDatasource {\n  Namespace = 'QCE/BWP';\n  InstanceAliasList = BWPInstanceAliasList;\n  InvalidDimensions = BWPInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'BandwidthPackageId',\n  };\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeBandwidthPackages',\n    responseField: 'BandwidthPackageSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import { CBSInstanceAliasList, CBSInvalidDemensions, namespace, templateQueryIdMap, isValidMetric } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = CBSInstanceAliasList;\n  InvalidDimensions = CBSInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'cbs',\n    action: 'DescribeDisks',\n    responseField: 'DiskSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.filter(rawSet, isValidMetric);\n  }\n}\n","import _ from 'lodash';\nimport { CDBInstanceAliasList, CDBInvalidDemensions, isValidMetric, modifyDimensons } from './query_def';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class CDBDatasource extends BaseDatasource {\n  Namespace = 'QCE/CDB';\n  InstanceAliasList = CDBInstanceAliasList;\n  InvalidDimensions = CDBInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'InstanceId',\n  };\n  InstanceReqConfig = {\n    service: 'cdb',\n    action: 'DescribeDBInstances',\n    responseField: 'Items',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        if (isValidMetric(item)) {\n          return modifyDimensons(item);\n        }\n        return null;\n      })\n    );\n  }\n  /**\n   * 获取 可用区\n   * @param region 地域信息\n   */\n  getZones(region) {\n    const serviceInfo = GetServiceAPIInfo(region, 'cvm');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeZones' }\n    ).then((response) => {\n      return _.filter(\n        _.map(response.ZoneSet || [], (item) => {\n          return { text: item.ZoneName, value: item.ZoneId, ZoneState: item.ZoneState, Zone: item.Zone };\n        }),\n        (item) => item.ZoneState === 'AVAILABLE'\n      );\n    });\n  }\n}\n","import _ from 'lodash';\nimport { CDNInstanceAliasList, CDNInvalidDemensions } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class CDNDatasource extends BaseDatasource {\n  Namespace = 'QCE/CDN';\n  InstanceAliasList = CDNInstanceAliasList;\n  InvalidDimensions = CDNInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'Domain',\n  };\n  InstanceReqConfig = {\n    service: 'cdn',\n    action: 'DescribeDomains',\n    responseField: 'Domains',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async metricFindQuery(query: any, regex?: string) {\n    return super.metricFindQuery({ ...query, ...{ region: 'ap-guangzhou' } }, regex);\n  }\n}\n","import { CDNPROVINCEInstanceAliasList, CDNPROVINCEInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = CDNPROVINCEInstanceAliasList;\n  InvalidDimensions = CDNPROVINCEInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'cdn',\n    action: 'DescribeDomains',\n    responseField: 'Domains',\n  };\n  extrasAlias = ['isp', 'district'];\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // getFilterDropdown({ field }) {\n  //   return super.getRegions();\n  // }\n  async metricFindQuery(query: any, regex?: string) {\n    return super.metricFindQuery({ ...query, ...{ region: 'ap-guangzhou' } }, regex);\n  }\n  async getConsumerList(params: any) {\n    const { region, field } = params;\n    const serviceInfo = GetServiceAPIInfo(region, 'cdn');\n\n    // 从分页数据，获取全量数据\n    const rs = await this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: {\n          Name: field,\n        },\n      },\n      serviceInfo.service,\n      { action: 'DescribeMapInfo' }\n    );\n    return (rs.MapInfoList || []).map((o) => {\n      return {\n        text: o.Name,\n        value: o.Name,\n      };\n    });\n  }\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    if (action === 'DescribeMapInfo') {\n      const { name: field } = query;\n      const rs = await this.getConsumerList({ region, field });\n      return rs;\n    }\n    return [];\n  }\n}\n","import {\n  CEIPSUMMARYInstanceAliasList,\n  CEIPInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = CEIPSUMMARYInstanceAliasList;\n  InvalidDimensions = CEIPInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeAddresses',\n    responseField: 'AddressSet',\n    interceptor: {\n      request: (params) => {\n        const { Filters } = params;\n        if (!Filters) {\n          params.Filters = [];\n        }\n        params.Filters.push({\n          Name: 'address-type',\n          Values: ['AnycastEIP'],\n        });\n        return params;\n      }, // 设置一些请求参数的 默认值\n      // response: (data: unknown[]) =>[\n      //   {\n      //     AddressId: 'AddressId',\n      //     AddressIp: '111.22.3.4'\n      //   },\n      // ],\n    },\n  };\n  MetricReqConfig = {\n    resultFilter: modifyDimensons,\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  // async getInstances(region, params = {}) {\n  //   const rawSet = await super.getInstances(region, params);\n  //   return rawSet.filter((item) => item.AddressType === 'AnycastEIP');\n  // }\n\n  // async getVariableInstances(region, query = {}) {\n  //   const rawSet = await super.getVariableInstances(region, query);\n  //   return rawSet.filter((item) => item.AddressType === 'AnycastEIP');\n  // }\n}\n","import { CESInstanceAliasList, CESInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = CESInstanceAliasList;\n  InvalidDimensions = CESInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'es',\n    action: 'DescribeInstances',\n    responseField: 'InstanceList',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import _ from 'lodash';\nimport { BaseDatasource } from '../_base/datasource';\nimport { CFSInstanceAliasList, CFSInvalidDemensions, regionSupported } from './query_def';\n\nexport default class CFSDatasource extends BaseDatasource {\n  InstanceKey: string;\n  Namespace: string;\n  InstanceAliasList: string[];\n  InvalidDimensions: Record<string, string>;\n  templateQueryIdMap = {\n    instance: 'FileSystemId',\n  };\n  extrasAlias = ['version'];\n  InstanceReqConfig: { service?: string | undefined; action: string; responseField: string };\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n\n    this.Namespace = 'QCE/CFS';\n    this.InstanceAliasList = CFSInstanceAliasList;\n    this.InvalidDimensions = CFSInvalidDemensions;\n    this.InstanceReqConfig = {\n      service: 'cfs',\n      action: 'DescribeCfsFileSystems',\n      responseField: 'FileSystems',\n    };\n  }\n  getRegions() {\n    return Promise.resolve(regionSupported);\n  }\n}\n","import _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport { BaseDatasource } from '../_base/datasource';\nimport {\n  CKAFKAInstanceAliasList,\n  CKAFKATopicAliasList,\n  CKAFKAInvalidDemensions,\n  templateQueryIdMap,\n  keyInStorage,\n  queryMonitorExtraConfg,\n} from './query_def';\n\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class CKFKADatasource extends BaseDatasource {\n  Namespace = 'QCE/CKAFKA';\n  InstanceAliasList = CKAFKAInstanceAliasList;\n  TopicAliasList = CKAFKATopicAliasList;\n  InvalidDimensions = CKAFKAInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'ckafka',\n    action: 'DescribeInstances',\n    responseField: 'InstanceList',\n  };\n  extraMetricDims = ['topicId'];\n  // extrasAlias = ['topicId', 'consumerGroup', 'partition'];\n  keyInStorage = keyInStorage;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  consumerGroupCache = {};\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getConsumerGroups(region, params) {\n    const serviceInfo = GetServiceAPIInfo(region, 'ckafka');\n    let { InstanceId, groupname = '', topicid = '' } = params;\n    groupname = this.getVariable(groupname); // 将模板转换为真实值\n    topicid = this.getVariable(topicid); // 将模板转换为真实值\n    try {\n      groupname = JSON.parse(groupname)[templateQueryIdMap.groupName];\n      topicid = JSON.parse(topicid)[templateQueryIdMap.topicId];\n    } catch (e) {}\n    let consumerGoup = this.consumerGroupCache[InstanceId];\n    if (!consumerGoup) {\n      // 从分页数据，获取全量数据\n      consumerGoup = await fetchAllFactory(\n        (data) => {\n          return this.doRequest(\n            {\n              url: this.url + serviceInfo.path,\n              data,\n            },\n            serviceInfo.service,\n            { region, action: 'DescribeConsumerGroup' }\n          );\n        },\n        _.pick(params, 'InstanceId'),\n        ['GroupListForMonitor', 'TopicListForMonitor', 'PartitionListForMonitor', 'GroupList']\n      );\n      this.consumerGroupCache[InstanceId] = consumerGoup;\n    }\n\n    let [GroupList, TopicList, PartitionList, GroupDetailList] = consumerGoup;\n    // 无重复数组\n    TopicList = _.uniqBy(TopicList, (item) => (item as any).TopicId);\n    GroupList = _.uniqBy(GroupList, (item) => (item as any).GroupName);\n    PartitionList = _.uniqBy(PartitionList, (item) => (item as any).PartitionId);\n    GroupDetailList = _.uniqBy(GroupDetailList, (item) => (item as any).ConsumerGroupName);\n    // 如果传入消费者信息，consumergroupname，获取该用户的订阅信息列表\n    const SubscribedInfos = GroupDetailList.find((d) => d.ConsumerGroupName === groupname)?.SubscribedInfo || [];\n    // 这里为了兼容PartitonList格式，最后转化为数组对象的方式\n    const partitions =\n      SubscribedInfos.find((sub) => sub.TopicId === topicid)?.Partition?.map((p) => ({\n        [templateQueryIdMap.partition]: p,\n      })) || [];\n    return {\n      GroupList,\n      TopicList:\n        SubscribedInfos.length > 0\n          ? SubscribedInfos.map(({ TopicId, TopicName }) => ({ TopicId, TopicName }))\n          : TopicList,\n      PartitionList: partitions.length > 0 ? partitions : PartitionList,\n    };\n  }\n  formatTopicVarDisplay(topic: Record<string, any>, displayTpl: string | undefined, topicAlias: string) {\n    if (displayTpl) {\n      return displayTpl.replace(/\\$\\{(\\w+)\\}/g, (a, b) => {\n        if (!b || !this.TopicAliasList.includes(b)) {\n          return '';\n        }\n        return this.getAliasValue(topic, b);\n      });\n    }\n    return this.getAliasValue(topic, topicAlias);\n  }\n  // 查询指标下的数据\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    let { topicalias, groupname, topicid } = query;\n    const result = await this.getConsumerGroups(region, {\n      InstanceId: instance.InstanceId,\n      groupname,\n      topicid,\n    });\n    let { display } = query;\n    const { TopicList, GroupList, PartitionList } = result;\n    topicalias = this.TopicAliasList.includes(topicalias) ? topicalias : this.templateQueryIdMap.topicId;\n\n    const rs = {\n      GroupList: GroupList.map((group) => {\n        group._InstanceAliasValue = group.GroupName;\n        return {\n          text: group.GroupName,\n          value: group[templateQueryIdMap.groupName],\n        };\n      }),\n      TopicList: TopicList.map((topic) => {\n        const topicAlias = this.formatTopicVarDisplay(topic, display, topicalias);\n        topic._InstanceAliasValue = topicAlias || topic[templateQueryIdMap.topicId];\n        return {\n          text: topicAlias || topic[templateQueryIdMap.topicId],\n          value: topic[templateQueryIdMap.topicId], // 为了获取多维度的值，这里完全可以使用JSON.stringify()将整个对象放进去\n          TopicName: topic.TopicName,\n        };\n      }),\n      PartitionList: PartitionList.map((par) => {\n        par._InstanceAliasValue = par[templateQueryIdMap.partition];\n        return {\n          text: par[templateQueryIdMap.partition],\n          value: par[templateQueryIdMap.partition],\n        };\n      }),\n    };\n    await instanceStorage.setExtraStorage(this.service, this.keyInStorage.TopicList, TopicList);\n    await instanceStorage.setExtraStorage(this.service, this.keyInStorage.GroupList, GroupList);\n    await instanceStorage.setExtraStorage(this.service, this.keyInStorage.PartitionList, PartitionList);\n    // console.log({ res1, res2, res3 });\n    // console.log({rs});\n    // 根据action返回指定的维度数据列表\n    switch (action) {\n      case 'DescribeTopicList':\n        return rs.TopicList;\n      case 'DescribeGroup':\n        return rs.GroupList;\n      case 'DescribePartion':\n        return rs.PartitionList;\n      default:\n        return [];\n    }\n  }\n\n  // async getOtherAlias(datapoints) {\n  //   let dimension;\n  //   for(let j = 0; j < datapoints.Dimensions.length; j++){\n  //     if(datapoints.Dimensions[j] !== 'InstanceName'){\n  //       dimension.push(datapoints.Dimensions[j])\n  //     }\n  //   }\n  //   console.log(dimension);\n\n  //   return dimension\n  // }\n}\n","import {\n  InstanceAliasList,\n  LOADBALANCEListenerAliasList,\n  LOADBALANCEServerAliasList,\n  LOADBALANCEVALIDDIMENSIONS,\n  templateQueryIdMap,\n  keyInStorage,\n  CANDIATEDIMENSIONS,\n  queryMonitorExtraConfg,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class DCDatasource extends BaseDatasource {\n  // Namespace = namespace;\n  InstanceAliasList = InstanceAliasList;\n  ListenerAliasList = LOADBALANCEListenerAliasList;\n  ServerAliasList = LOADBALANCEServerAliasList;\n  CandiateDimensions = CANDIATEDIMENSIONS;\n  // InvalidDimensions = LOADBALANCEVALIDDIMENSIONS;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  // InstanceReqConfig = {\n  //   service: 'clb',\n  //   action: 'DescribeLoadBalancers',\n  //   responseField: 'LoadBalancerSet',\n  // };\n  keyInStorage = keyInStorage;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // getFilterDropdown({ field }) {\n  //   return super.getRegions();\n  // }\n  getInvalidDimensions(selfIns: any, tagret: any) {\n    if (selfIns.service === 'lbPrivate' || (selfIns.service === 'lbPublic' && tagret.servers))\n      return { ...LOADBALANCEVALIDDIMENSIONS, vpcId: 'NumericalVpcId' };\n    return LOADBALANCEVALIDDIMENSIONS;\n  }\n  getInstanceReqConfig(selfIns: any) {\n    const res: any = {\n      service: 'clb',\n      action: 'DescribeLoadBalancers',\n      responseField: 'LoadBalancerSet',\n    };\n    if (selfIns.service === 'lbPrivate' || selfIns.service === 'loadBalance') {\n      res.interceptor = {\n        request: (param) => ({ ...param, LoadBalancerType: 'INTERNAL' }),\n      };\n    }\n    if (selfIns.service === 'lbPublic') {\n      res.interceptor = {\n        request: (param) => ({ ...param, LoadBalancerType: 'OPEN' }),\n      };\n    }\n    return res;\n  }\n  async getListenerList(params: any) {\n    const { region, instanceId } = params;\n    const serviceInfo = GetServiceAPIInfo(region, 'clb');\n\n    // 从分页数据，获取全量数据\n    const res = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action: 'DescribeListeners' }\n        );\n      },\n      {\n        LoadBalancerId: instanceId,\n      },\n      'Listeners'\n    );\n    const [rs] = res;\n    return rs;\n  }\n  formatVariableDisplay(data: Record<string, any>, displayTpl: string | undefined, alias: string, aliasList: string[]) {\n    if (displayTpl) {\n      return displayTpl.replace(/\\$\\{(\\w+)\\}/g, (a, b) => {\n        if (!b || !aliasList.includes(b)) {\n          return '';\n        }\n        return this.getAliasValue(data, b);\n      });\n    }\n    return this.getAliasValue(data, alias);\n  }\n  async getServerList(params: any) {\n    const { region, instanceId, listenerId } = params;\n    const serviceInfo = GetServiceAPIInfo(region, 'clb');\n\n    const res = await this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: { LoadBalancerId: instanceId, ListenerIds: [listenerId] },\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeTargets' }\n    );\n    const { Listeners } = res;\n    const serversList = _.reduce(\n      Listeners,\n      (prev, item) => {\n        const { Rules, Targets } = item;\n        if (!_.isEmpty(Rules)) {\n          return _.concat(prev, _.flatten(_.map(Rules, (elem) => (_.isEmpty(elem.Targets) ? [] : elem.Targets))));\n        }\n        if (!_.isEmpty(Targets)) {\n          return _.concat(prev, Targets);\n        }\n        return prev;\n      },\n      []\n    );\n    return serversList;\n  }\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    const { display } = query;\n    if (action === 'DescribeListeners') {\n      const rs = await this.getListenerList({ region, instanceId: instance[this.templateQueryIdMap.instance] });\n      let { listeneralias } = query;\n      listeneralias = this.ListenerAliasList.includes(listeneralias) ? listeneralias : this.templateQueryIdMap.listener;\n      const result = rs.flatMap((o) => {\n        const listenAlias = this.formatVariableDisplay(o, display, listeneralias, this.ListenerAliasList);\n        const lisId = o[this.templateQueryIdMap.listener];\n        o._InstanceAliasValue = listenAlias || lisId;\n        // if (!o[listeneralias]) return [];\n        return {\n          text: listenAlias || lisId,\n          value: lisId,\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage.listener, rs);\n      return result;\n    }\n    if (action === 'DescribeServer' || action === 'DescribeServerPort') {\n      const { listenerid, serverprivateip, serveralias } = query;\n      const serverPrivateIp = this.getVariable(serverprivateip);\n      const serversList = await this.getServerList({\n        region,\n        instanceId: instance[this.templateQueryIdMap.instance],\n        listenerId: this.getVariable(listenerid),\n      });\n      const serverAlias = this.ServerAliasList.includes(serveralias) ? serveralias : this.templateQueryIdMap.servers;\n      const result = _.chain(serversList)\n        .filter((item) => {\n          if (action === 'DescribeServer') {\n            return true;\n          }\n          return serverPrivateIp === _.get(item, 'PrivateIpAddresses.0');\n        })\n        .map((item) => {\n          const alias = this.formatVariableDisplay(item, display, serverAlias, this.ServerAliasList);\n          const id = item[this.templateQueryIdMap.servers][0];\n          item._InstanceAliasValue = alias || id;\n          return action === 'DescribeServer'\n            ? {\n                text: alias || id,\n                value: id,\n              }\n            : {\n                text: `${_.get(item, 'Port')}`,\n                value: _.get(item, 'Port'),\n              };\n        })\n        .value();\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage.servers, serversList);\n      return action === 'DescribeServer' ? result : _.uniqBy(result, 'text');\n    }\n    return [];\n  }\n}\n","import {\n  CLSInstanceAliasList,\n  CLSInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  regionSupported,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = CLSInstanceAliasList;\n  InvalidDimensions = CLSInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'cls',\n    action: 'DescribeTopics',\n    responseField: 'Topics',\n  };\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // getFilterDropdown({ field }) {\n  //   return super.getRegions();\n  // }\n  getRegions() {\n    return Promise.resolve(regionSupported);\n  }\n  // async getInstances(region, params = {}) {\n  //   const superRes = await super.getInstances(region, params);\n  //   console.log({ superRes });\n  // }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        return modifyDimensons(item);\n      })\n    );\n  }\n}\n","import { BaseDatasource } from '../_base/datasource';\nimport { InvalidDemensions, InstanceAliasList, templateQueryIdMap } from './query_def';\n\nexport default class CmqDatasource extends BaseDatasource {\n  InvalidDimensions: Record<string, string> = InvalidDemensions;\n  InstanceAliasList: string[] = InstanceAliasList;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'cmq',\n    action: 'DescribeQueueDetail',\n    responseField: 'QueueSet',\n  };\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawMetric = await super.getMetrics(region);\n    return rawMetric.map((metric) => {\n      let dims = metric.Dimensions[0].Dimensions;\n      dims = Array.from(new Set([...dims, 'queueId', 'queueName']));\n      metric.Dimensions[0].Dimensions = dims;\n      return metric;\n    });\n  }\n}\n","import { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport { BaseDatasource } from '../_base/datasource';\nimport {\n  InvalidDemensions,\n  InstanceAliasList,\n  templateQueryIdMap,\n  keyInStorage,\n  queryMonitorExtraConfg,\n} from './query_def';\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class CmqTopicDatasource extends BaseDatasource {\n  Namespace = 'QCE/CMQTOPIC';\n  InvalidDimensions: Record<string, string> = InvalidDemensions;\n  InstanceAliasList: string[] = InstanceAliasList;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'cmq',\n    action: 'DescribeTopicDetail',\n    responseField: 'TopicSet',\n  };\n  keyInStorage = keyInStorage;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  extraMetricDims = ['subscriptionId']; // 多选\n\n  async fetchAllSubscription(region: string, params: any) {\n    const serviceInfo = GetServiceAPIInfo(region, 'cmq');\n    // console.log(serviceInfo, 'serviceinfo');\n\n    // 从分页数据，获取全量数据\n    const rs = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action: 'DescribeSubscriptionDetail' }\n        );\n      },\n      params,\n      'SubscriptionSet'\n    );\n\n    return rs[0];\n  }\n\n  async fetchMetricData(action: string, region: string, instance: any) {\n    let result;\n    switch (action) {\n      case 'DescribeSubscriptionDetail':\n        result = await this.fetchAllSubscription(region, { TopicName: instance.TopicName });\n        // eslint-disable-next-line no-case-declarations\n        const rs = result.map((item) => {\n          item._InstanceAliasValue = item.SubscriptionId;\n          return { text: item.SubscriptionId, value: item[templateQueryIdMap.subscription] };\n        });\n        await instanceStorage.setExtraStorage(this.service, this.keyInStorage.subscriptionId, result);\n        return rs;\n      default:\n        return [];\n    }\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawMetric = await super.getMetrics(region);\n    return rawMetric.map((metric) => {\n      let dims = metric.Dimensions[0].Dimensions;\n      dims.push('topicId');\n      if (['NumOfNotify', 'NumOfSuccNotify'].includes(metric.MetricName)) {\n        dims.push('subscriptionId');\n      }\n\n      dims = Array.from(new Set(dims));\n      metric.Dimensions[0].Dimensions = dims;\n      return metric;\n    });\n  }\n}\n","import { BaseDatasource } from '../_base/datasource';\n\ninterface BucketListResult {\n  Owner: { ID: 'string'; DisplayName: 'string' };\n  Buckets: { Name: string; Region: string }[];\n}\n\nexport default class CosDatasource extends BaseDatasource {\n  InvalidDimensions: Record<string, string> = {};\n  InstanceAliasList: string[] = ['BucketName'];\n  templateQueryIdMap = {\n    instance: 'BucketName',\n  };\n  InstanceReqConfig = {} as any; // 不必要的配置\n  cosURL: string;\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n    this.cosURL = `/api/datasources/${this.instanceSettings.id}/resources/tc_cos_list`;\n  }\n  async getInstances(region: string) {\n    return this.backendSrv\n      .datasourceRequest({\n        url: this.cosURL,\n        method: 'GET',\n        params: { region },\n        headers: { 'Content-Type': 'application/json' },\n      })\n      .then((res) => {\n        let { data }: { data: BucketListResult } = res;\n        data = data || ({} as any);\n        let { Buckets } = data;\n        Buckets = Buckets || [];\n\n        // name contains appid，see detail https://cloud.tencent.com/document/product/436/8291\n        return Buckets.map((item) => ({\n          ...item,\n          BucketName: item.Name,\n          bucket: item.Name,\n          appid: item.Name.split('-').slice(-1)[0],\n        }));\n      });\n  }\n\n  async getVariableInstances(region) {\n    return this.getInstances(region);\n  }\n\n  async getRegions() {\n    const regionList = await super.getRegions();\n    regionList.splice(11, 0, { value: 'ap-beijing-fsi', text: '华北地区(北京金融)', RegionState: 'AVAILABLE' });\n    return regionList;\n  }\n}\n","import {\n  CPMInstanceAliasList,\n  CPMInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = CPMInstanceAliasList;\n  InvalidDimensions = CPMInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'bm',\n    action: 'DescribeDevices',\n    responseField: 'DeviceInfoSet',\n  };\n  RegionMap = {};\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // 重写getRegion\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/bm',\n      },\n      'bm',\n      { action: 'DescribeRegions', region: 'ap-guangzhou' }\n    ).then((response) => {\n      // 缓存，后面获取可用区zone\n      this.RegionMap = _.keyBy(response.RegionInfoSet, 'Region');\n      return _.map(response.RegionInfoSet || [], (item) => {\n        return {\n          text: item.RegionDescription,\n          value: item.Region,\n        };\n      });\n    });\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.map((item) => modifyDimensons(item));\n  }\n\n  getFilterDropdown({ field, region }) {\n    if (field === 'DeviceClassCode') {\n      const serviceInfo = GetServiceAPIInfo(region, 'bm');\n      return this.doRequest(\n        {\n          url: this.url + serviceInfo.path,\n        },\n        'bm',\n        { region, action: 'DescribeDeviceClass' }\n      ).then((response) => {\n        return _.map(response.DeviceClassSet || [], (item) => {\n          return { text: item.DeviceClassCode, value: item.DeviceClassCode };\n        });\n      });\n    }\n    return [];\n  }\n}\n","import _ from 'lodash';\nimport { CVMInstanceAliasList, isValidMetric, modifyDimensons } from './query_def';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class CVMDatasource extends BaseDatasource {\n  Namespace = 'QCE/CVM';\n  InstanceAliasList = CVMInstanceAliasList;\n  InvalidDimensions = {};\n  templateQueryIdMap = {\n    instance: 'InstanceId',\n  };\n  InstanceReqConfig = {\n    service: 'cvm',\n    action: 'DescribeInstances',\n    responseField: 'InstanceSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        if (isValidMetric(item)) {\n          return modifyDimensons(item);\n        }\n        return null;\n      })\n    );\n  }\n\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/api',\n        data: { Product: 'cvm' },\n      },\n      'api',\n      { action: 'DescribeRegions' }\n    ).then((response) => {\n      return _.filter(\n        _.map(response.RegionSet || [], (item) => {\n          return {\n            text: item.RegionName,\n            value: item.Region,\n            RegionState: item.RegionState,\n          };\n        }),\n        (item) => item.RegionState === 'AVAILABLE'\n      );\n    });\n  }\n\n  getZones(region) {\n    const serviceInfo = GetServiceAPIInfo(region, 'api');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: { Product: 'cvm' },\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeZones' }\n    ).then((response) => {\n      return _.filter(\n        _.map(response.ZoneSet || [], (item) => {\n          return { text: item.ZoneName, value: item.Zone, ZoneState: item.ZoneState, Zone: item.Zone };\n        }),\n        (item) => item.ZoneState === 'AVAILABLE'\n      );\n    });\n  }\n}\n","import {\n  CYNOSDBMYSQLInstanceAliasList,\n  CYNOSDBInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  regionSupported,\n  modifyDimensons,\n  checkKeys,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class CYNOSDBMYSQLDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = CYNOSDBMYSQLInstanceAliasList;\n  InvalidDimensions = CYNOSDBInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  checkKeys = checkKeys;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'cynosdb',\n    action: 'DescribeInstances',\n    responseField: 'InstanceSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.map((item) => modifyDimensons(item));\n  }\n  getRegions() {\n    return Promise.resolve(regionSupported);\n  }\n}\n","import { DCInstanceAliasList, DCInvalidDemensions, namespace, modifyDimensons } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = DCInstanceAliasList;\n  InvalidDimensions = DCInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'DirectConnectId',\n  };\n  InstanceReqConfig = {\n    service: 'dc',\n    action: 'DescribeDirectConnects',\n    responseField: 'DirectConnectSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.map((item) => modifyDimensons(item));\n  }\n}\n","import {\n  DCDBInstanceAliasList,\n  DCDBInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  modifyDimensons,\n  keyInStorage,\n  queryMonitorExtraConfg,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = DCDBInstanceAliasList;\n  InvalidDimensions = DCDBInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'dcdb',\n    action: 'DescribeDCDBInstances',\n    responseField: 'Instances',\n  };\n  keyInStorage = keyInStorage;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  extraActionMap = {\n    DescribeDCDBShards: {\n      service: 'dcdb',\n      action: 'DescribeDCDBShards',\n      responseField: 'Shards',\n      pickKey: 'ShardInstanceId',\n    },\n    DescribeDCDBInstanceNodeInfo: {\n      service: 'dcdb',\n      action: 'DescribeDCDBInstanceNodeInfo',\n      responseField: 'NodesInfo',\n      pickKey: 'NodeId',\n    },\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // 重写getRegion, 入参的region用广州\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/dcdb',\n      },\n      'dcdb',\n      { action: 'DescribeDCDBSaleInfo', region: 'ap-guangzhou' }\n    ).then((response) => {\n      return _.map(response.RegionList || [], (item) => {\n        return {\n          text: item.RegionName,\n          value: item.Region,\n          RegionState: item.RegionState,\n        };\n      });\n    });\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        return modifyDimensons(item);\n      })\n    );\n  }\n  async getConsumerList(params: any) {\n    const { region, action: act, payload } = params;\n    const { service, action, responseField } = this.extraActionMap[act];\n\n    const serviceInfo = GetServiceAPIInfo(region, service);\n\n    // 从分页数据，获取全量数据\n    const rs = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action }\n        );\n      },\n      payload,\n      responseField\n    );\n    return rs[0];\n  }\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    const payload: any = {\n      InstanceId: instance[this.templateQueryIdMap.instance],\n      Limit: 100,\n    };\n    if (Object.keys(this.extraActionMap).indexOf(action) !== -1) {\n      const rs = await this.getConsumerList({ region, action, payload });\n      const { pickKey } = this.extraActionMap[action];\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[this.templateQueryIdMap[pickKey]];\n        return {\n          text: o[this.templateQueryIdMap[pickKey]],\n          value: o[this.templateQueryIdMap[pickKey]],\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage[pickKey], rs);\n      return result;\n    }\n    return [];\n  }\n}\n","import { DCGInstanceAliasList, DCGInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = DCGInstanceAliasList;\n  InvalidDimensions = DCGInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeDirectConnectGateways',\n    responseField: 'DirectConnectGatewaySet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import { DCXInstanceAliasList, DCXInvalidDemensions, namespace, modifyDimensons } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class DCXDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = DCXInstanceAliasList;\n  InvalidDimensions = DCXInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'DirectConnectTunnelId',\n  };\n  InstanceReqConfig = {\n    service: 'dc',\n    action: 'DescribeDirectConnectTunnels',\n    responseField: 'DirectConnectTunnelSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.map((item) => modifyDimensons(item));\n  }\n}\n","import {\n  ECMInstanceAliasList,\n  ECMInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = ECMInstanceAliasList;\n  InvalidDimensions = ECMInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'ecm',\n    action: 'DescribeInstances',\n    responseField: 'InstanceSet',\n  };\n  MetricReqConfig = {\n    resultFilter: modifyDimensons,\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async metricFindQuery(query: any, regex?: string) {\n    return super.metricFindQuery({ ...query, ...{ region: 'ap-guangzhou' } }, regex);\n  }\n}\n","import {\n  ECMBLOCKSTORAGEInstanceAliasList,\n  ECMBLOCKSTORAGEInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  queryMonitorExtraConfg,\n  keyInStorage,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = ECMBLOCKSTORAGEInstanceAliasList;\n  InvalidDimensions = ECMBLOCKSTORAGEInvalidDemensions;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  templateQueryIdMap = templateQueryIdMap;\n  keyInStorage = keyInStorage;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'ecm',\n    action: 'DescribeInstances',\n    responseField: 'InstanceSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async getDiskList(params: any) {\n    const { payload } = params;\n    const { InstanceId } = payload;\n    const instanceCache = await instanceStorage.getInstance(this.service);\n    const instanceObj: any =\n      _.cloneDeep(instanceCache.find((item) => item[this.templateQueryIdMap.instance] === InstanceId)) ?? {};\n    const { DataDisks: dataDisks } = instanceObj;\n    return dataDisks;\n  }\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    const payload: any = {\n      InstanceId: instance,\n      Limit: 100,\n    };\n    const rs = await this.getDiskList({ region, action, payload });\n    const result = rs.map((o) => {\n      o._InstanceAliasValue = o[this.templateQueryIdMap.diskId];\n      return {\n        text: o[this.templateQueryIdMap.diskId],\n        value: o[this.templateQueryIdMap.diskId],\n      };\n    });\n    await instanceStorage.setExtraStorage(this.service, this.keyInStorage.diskId, rs);\n    return result;\n  }\n}\n","import { ECMLBInstanceAliasList, ECMLBInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = ECMLBInstanceAliasList;\n  InvalidDimensions = ECMLBInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'ecm',\n    action: 'DescribeLoadBalancers',\n    responseField: 'LoadBalancerSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async metricFindQuery(query: any, regex?: string) {\n    return super.metricFindQuery({ ...query, ...{ region: 'ap-guangzhou' } }, regex);\n  }\n}\n","import {\n  GSEInstanceAliasList,\n  GSEInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  regionSupported,\n  keyInStorage,\n  queryMonitorExtraConfg,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = GSEInstanceAliasList;\n  InvalidDimensions = GSEInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'gse',\n    action: 'DescribeInstances',\n    responseField: 'Instances',\n  };\n\n  keyInStorage = keyInStorage;\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // getFilterDropdown({ field }) {\n  //   return super.getRegions();\n  // }\n  getRegions() {\n    return Promise.resolve(regionSupported);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        return modifyDimensons(item);\n      })\n    );\n  }\n  async getQueueNameList(params: any) {\n    const { region } = params;\n    const serviceInfo = GetServiceAPIInfo(region, this.service);\n\n    // 从分页数据，获取全量数据\n    const res = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action: 'DescribeGameServerSessionQueues' }\n        );\n      },\n      {},\n      'GameServerSessionQueues'\n    );\n    const [rs] = res;\n    return rs;\n  }\n  async getFleetList(params: any) {\n    const { region } = params;\n    const serviceInfo = GetServiceAPIInfo(region, this.service);\n\n    // 从分页数据，获取全量数据\n    const res = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action: 'ListFleets' }\n        );\n      },\n      {},\n      'FleetIds'\n    );\n    const [rs] = res;\n    return rs.map((r) => ({ [this.templateQueryIdMap.FleetId]: r }));\n  }\n  async fetchMetricData(action: string, region: string, instance: any) {\n    // console.log({ action, region, instance });\n    if (action === 'DescribeGameServerSessionQueues') {\n      const rs = await this.getQueueNameList({ region, instanceId: instance[this.templateQueryIdMap.instance] });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[this.templateQueryIdMap.Name];\n        return {\n          text: o[this.templateQueryIdMap.Name],\n          value: o[this.templateQueryIdMap.Name],\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage.queue, rs);\n      return result;\n    }\n    if (action === 'ListFleets') {\n      const rs = await this.getFleetList({ region, instanceId: instance[this.templateQueryIdMap.instance] });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[this.templateQueryIdMap.FleetId];\n        return {\n          text: o[this.templateQueryIdMap.FleetId],\n          value: o[this.templateQueryIdMap.FleetId],\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage.fleet, rs);\n      return result;\n    }\n    return [];\n  }\n}\n","import _ from 'lodash';\nimport { BaseDatasource } from '../_base/datasource';\nimport { LBInstanceAliasList, LBInvalidDemensions } from './query_def';\n\nexport default class SCFDatasource extends BaseDatasource {\n  Namespace = 'QCE/LB';\n  InstanceAliasList = LBInstanceAliasList;\n  InvalidDimensions = LBInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'AddressId',\n  };\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeAddresses',\n    responseField: 'AddressSet',\n    interceptor: {\n      request: (params) => {\n        const { Filters } = params;\n        if (!Filters) {\n          params.Filters = [];\n        }\n        params.Filters.push({\n          Name: 'address-type',\n          Values: ['EIP'],\n        });\n        return params;\n      }, // 设置一些请求参数的 默认值\n    },\n  };\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.filter((item) =>\n      /* hack：这里多加了筛选条件，是因为后端数据不准确，坑啊！ 只拿取包含eip的指标 */\n      item.Dimensions?.[0]?.Dimensions?.includes('eip')\n    );\n  }\n\n  // async getInstances(region, params = {}) {\n  //   const rawSet = await super.getInstances(region, params);\n  //   /* hack：这里多加了筛选条件，是因为后端数据不准确，坑啊！ 只拿取包含eip的指标 */\n  //   return rawSet.filter((item) => item.AddressType === 'EIP');\n  // }\n\n  // async getVariableInstances(region, query = {}) {\n  //   const rawSet = await super.getVariableInstances(region, query);\n  //   return rawSet.filter((item) => item.AddressType === 'EIP');\n  // }\n}\n","import _ from 'lodash';\nimport {\n  LIGHTHOUSEInstanceAliasList,\n  templateQueryIdMap,\n  LighthouseInvalidDemensions,\n  modifyDimensons,\n} from './query_def';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class LighthouseDatasource extends BaseDatasource {\n  Namespace = 'QCE/LIGHTHOUSE';\n  InstanceAliasList = LIGHTHOUSEInstanceAliasList;\n  InvalidDimensions = LighthouseInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'lighthouse',\n    action: 'DescribeInstances',\n    responseField: 'InstanceSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/api',\n        data: { Product: 'lighthouse' },\n      },\n      'api',\n      { action: 'DescribeRegions' }\n    ).then((response) => {\n      return _.filter(\n        _.map(response.RegionSet || [], (item) => {\n          return {\n            text: item.RegionName,\n            value: item.Region,\n            RegionState: item.RegionState,\n          };\n        }),\n        (item) => item.RegionState === 'AVAILABLE'\n      );\n    });\n  }\n\n  getZones(region) {\n    const serviceInfo = GetServiceAPIInfo(region, 'api');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: { Product: 'lighthouse' },\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeZones' }\n    ).then((response) => {\n      return _.filter(\n        _.map(response.ZoneSet || [], (item) => {\n          return { text: item.ZoneName, value: item.Zone, ZoneState: item.ZoneState, Zone: item.Zone };\n        }),\n        (item) => item.ZoneState === 'AVAILABLE'\n      );\n    });\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        return modifyDimensons(item);\n      })\n    );\n  }\n}\n","import _ from 'lodash';\nimport { MONGODBInstanceAliasList, MONGODBInvalidDemensions } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class MONGODBDatasource extends BaseDatasource {\n  Namespace = 'QCE/CMONGO';\n  InstanceAliasList = MONGODBInstanceAliasList;\n  InvalidDimensions = MONGODBInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'InstanceId',\n  };\n  InstanceReqConfig = {\n    service: 'mongodb',\n    action: 'DescribeDBInstances',\n    responseField: 'InstanceDetails',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport { BaseDatasource } from '../_base/datasource';\nimport {\n  InvalidDemensions,\n  InstanceAliasList,\n  templateQueryIdMap,\n  keyInStorage,\n  queryMonitorExtraConfg,\n} from './query_def';\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class MrHdfsDatasource extends BaseDatasource {\n  InvalidDimensions: Record<string, string> = InvalidDemensions;\n  InstanceAliasList: string[] = InstanceAliasList;\n  templateQueryIdMap = templateQueryIdMap;\n  extrasAlias = [];\n  keyInStorage = keyInStorage;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  InstanceReqConfig = {\n    service: 'emr',\n    action: 'DescribeInstances',\n    responseField: 'ClusterList',\n    interceptor: {\n      request: (params) => ({\n        ...params,\n        DisplayStrategy: params.DisplayStrategy || 'monitorManage',\n        ProjectId: params.ProjectId || -1,\n      }), // 设置一些请求参数的 默认值\n      response: (data: unknown[]) => data.map(({ ClusterId, ClusterName }) => ({ ClusterId, ClusterName })),\n    },\n  };\n\n  async fetchAllNodes(region: string, params: any) {\n    const serviceInfo = GetServiceAPIInfo(region, 'emr');\n\n    // 从分页数据，获取全量数据\n    const rs = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action: 'DescribeClusterNodes' }\n        );\n      },\n      params,\n      'NodeList'\n    );\n\n    // return rs[0].map((item) => ({ text: item.Ip, value: item.Ip }));\n    return rs[0];\n  }\n\n  async fetchMetricData(action: string, region: string, instance: any) {\n    let result;\n    switch (action) {\n      case 'DescribeClusterNodes': {\n        const resultT = await this.fetchAllNodes(region, { InstanceId: instance.ClusterId, NodeFlag: 'all' });\n        result = resultT.map((item) => {\n          item._InstanceAliasValue = item[templateQueryIdMap.node];\n          return { text: item[templateQueryIdMap.node], value: item[templateQueryIdMap.node] };\n        });\n        await instanceStorage.setExtraStorage(this.service, this.keyInStorage.node, resultT);\n\n        return result;\n      }\n      default:\n        return [];\n    }\n  }\n}\n","import _ from 'lodash';\nimport { NATGATEWAYInstanceAliasList, NATInvalidDemensions } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class NATGATEWAYDatasource extends BaseDatasource {\n  Namespace = 'QCE/NAT_GATEWAY';\n  InstanceAliasList = NATGATEWAYInstanceAliasList;\n  InvalidDimensions = NATInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'NatGatewayId',\n  };\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeNatGateways',\n    responseField: 'NatGatewaySet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import _ from 'lodash';\nimport { OVCDNInstanceAliasList, OVCDNInvalidDemensions } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class OVCDNDatasource extends BaseDatasource {\n  Namespace = 'QCE/OV_CDN';\n  InstanceAliasList = OVCDNInstanceAliasList;\n  InvalidDimensions = OVCDNInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'Domain',\n  };\n  InstanceReqConfig = {\n    service: 'cdn',\n    action: 'DescribeDomains',\n    responseField: 'Domains',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async metricFindQuery(query: any, regex?: string) {\n    return super.metricFindQuery({ ...query, ...{ region: 'ap-guangzhou' } }, regex);\n  }\n}\n","import { PCXInstanceAliasList, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo, GetRequestParamsV2, SliceLength } from '../../common/constants';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = PCXInstanceAliasList;\n  InvalidDimensions = {};\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'xx',\n    action: 'xx',\n    responseField: 'xx',\n  };\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  getInstances(region = 'ap-guangzhou', params = {}) {\n    params = { offset: 0, limit: 50, ...params };\n    const serviceInfo = GetServiceAPIInfo(region, 'pcx');\n    return this.doRequestV2(\n      {\n        url: this.url + serviceInfo.path,\n        data: params,\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeVpcPeeringConnections' }\n    ).then((response) => {\n      return response.data || [];\n    });\n  }\n\n  /**\n   * 模板变量中获取全量的 PCX 实例列表\n   * @param region 地域信息\n   */\n  getVariableInstances(region, query) {\n    let result: any[] = [];\n    const params = { Offset: 0, Limit: 50, ...query };\n    const serviceInfo = GetServiceAPIInfo(region, 'pcx');\n    return this.doRequestV2(\n      {\n        url: this.url + serviceInfo.path,\n        data: params,\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeVpcPeeringConnections' }\n    ).then((response) => {\n      result = response.data || [];\n      const total = response.totalCount || 0;\n      if (result.length >= total) {\n        return result;\n      } else {\n        const param = SliceLength(total, 50);\n        const promises: any[] = [];\n        _.forEach(param, (item) => {\n          promises.push(this.getInstances(region, item));\n        });\n        return Promise.all(promises)\n          .then((responses) => {\n            _.forEach(responses, (item) => {\n              result = _.concat(result, item);\n            });\n            return result;\n          })\n          .catch((error) => {\n            return result;\n          });\n      }\n    });\n  }\n\n  getVpcId(region, params: any = {}) {\n    params = { Offset: 0, Limit: 20, ...params };\n    // TODO 等待腾讯云接口查问题\n    params.Offset = String(params.Offset);\n    params.Limit = String(params.Limit);\n    const serviceInfo = GetServiceAPIInfo(region, 'vpc');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: params,\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeVpcs' }\n    ).then((response) => {\n      return _.map(response.VpcSet || [], (item) => ({ text: item.VpcId, value: item.VpcId }));\n    });\n  }\n\n  getVpcIds(region) {\n    let result: any[] = [];\n    const params: any = { Offset: 0, Limit: 100 };\n    // TODO 等待腾讯云接口查问题\n    params.Offset = String(params.Offset);\n    params.Limit = String(params.Limit);\n    const serviceInfo = GetServiceAPIInfo(region, 'vpc');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: params,\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeVpcs' }\n    ).then((response) => {\n      result = _.map(response.VpcSet || [], (item) => ({ text: item.VpcId, value: item.VpcId }));\n      const total = response.TotalCount || 0;\n      if (result.length >= total) {\n        return result;\n      } else {\n        const param = SliceLength(total, 100);\n        const promises: any[] = [];\n        _.forEach(param, (item) => {\n          promises.push(this.getVpcId(region, item));\n        });\n        return Promise.all(promises)\n          .then((responses) => {\n            _.forEach(responses, (item) => {\n              result = _.concat(result, item);\n            });\n            return result;\n          })\n          .catch((error) => {\n            return result;\n          });\n      }\n    });\n  }\n\n  /**\n   * 腾讯云 API 2.0 请求接口\n   * @param options\n   * @param service\n   * @param signObj\n   */\n  async doRequestV2(options, service, signObj: any = {}) {\n    options = await GetRequestParamsV2(\n      options,\n      service,\n      signObj,\n      this.secretId,\n      this.instanceSettings.id,\n      this.backendSrv\n    );\n    return this.backendSrv\n      .datasourceRequest(options)\n      .then((response) => {\n        return _.get(response, 'data', {});\n      })\n      .catch((error) => {\n        throw error;\n      });\n  }\n}\n","import _ from 'lodash';\nimport {\n  POSTGRESInstanceAliasList,\n  PostgreInvalidDemensions,\n  namespace,\n  modifyDimensons,\n  templateQueryIdMap,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class CDBDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = POSTGRESInstanceAliasList;\n  InvalidDimensions = PostgreInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'postgres',\n    action: 'DescribeDBInstances',\n    responseField: 'DBInstanceSet',\n  };\n\n  MetricReqConfig = {\n    resultFilter: modifyDimensons,\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import { QAAPInstanceAliasList, QAAPInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class QAAPDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = QAAPInstanceAliasList;\n  InvalidDimensions = QAAPInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'gaap',\n    action: 'DescribeProxies',\n    responseField: 'ProxySet',\n    interceptor: {\n      // response: (data: unknown[]) =>[\n      //   {\n      //     \"NetDetectId\": \"netd-12345678\",\n      //   },\n      // ],\n    },\n  };\n  // MetricReqConfig = {\n  //   resultFilter: modifyDimensons,\n  // };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import _ from 'lodash';\nimport { REDISInstanceAliasList, RedisInvalidDemensions, isValidMetric } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class REDISDatasource extends BaseDatasource {\n  Namespace = 'QCE/REDIS';\n  InstanceAliasList = REDISInstanceAliasList;\n  InvalidDimensions = RedisInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'InstanceId',\n  };\n  InstanceReqConfig = {\n    service: 'redis',\n    action: 'DescribeInstances',\n    responseField: 'InstanceSet',\n    interceptor: {\n      request: (params) => ({ ...params, MonitorVersion: '1m' }),\n    },\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.filter((item) => isValidMetric(item));\n  }\n}\n","import _ from 'lodash';\nimport {\n  REDISMEMInstanceAliasList,\n  namespace,\n  RedisMemInvalidDemensions,\n  templateQueryIdMap,\n  NodeType,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\n\nexport default class REDISDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = REDISMEMInstanceAliasList;\n  InvalidDimensions = RedisMemInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  extrasAlias = [RedisMemInvalidDemensions.pnodeid, RedisMemInvalidDemensions.rnodeid];\n  InstanceReqConfig = {\n    service: 'redis',\n    action: 'DescribeInstances',\n    responseField: 'InstanceSet',\n    interceptor: {\n      request: (params) => ({ ...params, MonitorVersion: '5s' }),\n    },\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getInstanceNodeInfo(params: any) {\n    const { region, instanceId } = params;\n    const serviceInfo = GetServiceAPIInfo(region, 'redis');\n\n    const res = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action: 'DescribeInstanceNodeInfo' }\n        );\n      },\n      {\n        InstanceId: instanceId,\n      },\n      NodeType\n    );\n\n    return res;\n  }\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    if (action === 'DescribeInstanceNodeInfo') {\n      const rs = await this.getInstanceNodeInfo({ region, instanceId: instance[this.templateQueryIdMap.instance] });\n      const { nodetype } = query;\n      const ndoeTypeIndex = NodeType.indexOf(nodetype);\n      return ndoeTypeIndex === -1\n        ? []\n        : _.map(rs[ndoeTypeIndex], (item) => ({ text: item.NodeId, value: item.NodeId }));\n    }\n    return [];\n  }\n}\n","import _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { BaseDatasource } from '../_base/datasource';\nimport {\n  SCFInstanceAliasList,\n  SCFInvalidDemensions,\n  regionSupported,\n  queryMonitorExtraConfg,\n  keyInStorage,\n  templateQueryIdMap,\n} from './query_def';\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class SCFDatasource extends BaseDatasource {\n  InstanceKey: string;\n  Namespace: string;\n  InstanceAliasList: string[];\n  InvalidDimensions: Record<string, string>;\n  templateQueryIdMap = templateQueryIdMap;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  keyInStorage = keyInStorage;\n  InstanceReqConfig: { service?: string | undefined; action: string; responseField: string };\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n\n    this.Namespace = 'QCE/SCF_V2';\n    this.InstanceAliasList = SCFInstanceAliasList;\n    this.InvalidDimensions = SCFInvalidDemensions;\n    this.InstanceReqConfig = {\n      service: 'scf',\n      action: 'ListFunctions',\n      responseField: 'Functions',\n    };\n  }\n\n  getRegions() {\n    return Promise.resolve(regionSupported);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.filter(\n      (item) =>\n        /* hack：这里多加了筛选条件，是因为后端数据不准确，坑啊！ 只拿取包含functionName的指标 */\n        item.Dimensions?.[0]?.Dimensions?.includes('functionName') &&\n        item.Dimensions?.[0]?.Dimensions?.includes('namespace') &&\n        !item.MetricName.startsWith('Name')\n    );\n  }\n\n  getVersions(region, params) {\n    const serviceInfo = GetServiceAPIInfo(region, 'scf');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: params,\n      },\n      serviceInfo.service,\n      { region, action: 'ListVersionByFunction' }\n    ).then((response) => {\n      return response.Versions;\n    });\n  }\n\n  async fetchMetricData(action: string, region: string, instance: any) {\n    // console.log({ action, region, instance });\n    if (action === 'ListVersionByFunction') {\n      const rs = await this.getVersions(region, { FunctionName: instance[this.templateQueryIdMap.instance] });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[this.templateQueryIdMap.version];\n        return {\n          text: o[this.templateQueryIdMap.version],\n          value: o[this.templateQueryIdMap.version],\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage.version, rs);\n      return result;\n    }\n    return [];\n  }\n}\n","import {\n  SQLSERVERInstanceAliasList,\n  SQLSERVERInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  regionSupported,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = SQLSERVERInstanceAliasList;\n  InvalidDimensions = SQLSERVERInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'sqlserver',\n    action: 'DescribeDBInstances',\n    responseField: 'DBInstances',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(rawSet.map((item) => modifyDimensons(item)));\n  }\n  getRegions() {\n    return Promise.resolve(regionSupported);\n  }\n  getFilterDropdown({ field, region }) {\n    if (field === 'Zone') {\n      const serviceInfo = GetServiceAPIInfo(region, 'cvm');\n      return this.doRequest(\n        {\n          url: this.url + serviceInfo.path,\n        },\n        serviceInfo.service,\n        { region, action: 'DescribeZones' }\n      ).then((response) => {\n        return _.filter(\n          _.map(response.ZoneSet || [], (item) => {\n            return { text: item.ZoneName, value: item.Zone, ZoneState: item.ZoneState, Zone: item.Zone };\n          }),\n          (item) => item.ZoneState === 'AVAILABLE'\n        );\n      });\n    }\n    return [];\n  }\n}\n","import {\n  TCAPLUSInstanceAliasList,\n  TCAPLUSInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  regonsMap,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = TCAPLUSInstanceAliasList;\n  InvalidDimensions = TCAPLUSInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'tcaplusdb',\n    action: 'DescribeTables',\n    responseField: 'TableInfos',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // 重写getRegion\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/tcaplusdb',\n      },\n      'tcaplusdb',\n      { action: 'DescribeRegions', region: 'ap-guangzhou' }\n    ).then((response) => {\n      return _.map(response.RegionInfos || [], (item) => {\n        return {\n          text: regonsMap[item.RegionName],\n          value: item.RegionName,\n        };\n      });\n    });\n  }\n}\n","import {\n  TDMQInstanceAliasList,\n  TDMQInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  regionSupported,\n  modifyDimensons,\n  queryMonitorExtraConfg,\n  keyInStorage,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = TDMQInstanceAliasList;\n  InvalidDimensions = TDMQInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  keyInStorage = keyInStorage;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'tdmq',\n    action: 'DescribeClusters',\n    responseField: 'ClusterSet',\n  };\n  extraActionMap = {\n    DescribeTopics: {\n      service: 'tdmq',\n      action: 'DescribeTopics',\n      responseField: 'TopicSets',\n      pickKey: 'topicName',\n    },\n    DescribeEnvironments: {\n      service: 'tdmq',\n      action: 'DescribeEnvironments',\n      responseField: 'EnvironmentSet',\n      pickKey: 'environmentId',\n    },\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // getFilterDropdown({ field }) {\n  //   return super.getRegions();\n  // }\n  getRegions() {\n    return Promise.resolve(regionSupported);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(rawSet.map((item) => modifyDimensons(item)));\n  }\n\n  async getConsumerList(params: any) {\n    const { region, action: act, payload } = params;\n    const { service, action, responseField } = this.extraActionMap[act];\n\n    const serviceInfo = GetServiceAPIInfo(region, service);\n\n    // 从分页数据，获取全量数据\n    const rs = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action }\n        );\n      },\n      payload,\n      responseField\n    );\n    // console.log({ rs });\n    return rs[0];\n  }\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    const payload: any = {\n      Limit: 100,\n      ClusterId: instance[this.templateQueryIdMap.instance],\n    };\n    if (Object.keys(this.extraActionMap).indexOf(action) !== -1) {\n      if (action === 'DescribeTopics') {\n        payload.EnvironmentId = this.getVariable(query['environmentid']);\n      }\n      const rs = await this.getConsumerList({ region, action, payload });\n      const { pickKey } = this.extraActionMap[action];\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[this.templateQueryIdMap[pickKey]];\n        return {\n          text: o[this.templateQueryIdMap[pickKey]],\n          value: o[this.templateQueryIdMap[pickKey]],\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage[pickKey], rs);\n      return result;\n    }\n    return [];\n  }\n}\n","import _ from 'lodash';\nimport { TSFInvalidDemensions, TSFInstanceAliasList, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class TSFDatasource extends BaseDatasource {\n  Namespace = 'QCE/TSF';\n  InstanceAliasList = TSFInstanceAliasList;\n  InvalidDimensions = TSFInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'tsf',\n    action: 'DescribeApplications',\n    responseField: 'Content',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import {\n  VCLBInstanceAliasList,\n  VCLBInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  clbNamespaceMap,\n  regionSupported,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = VCLBInstanceAliasList;\n  InvalidDimensions = VCLBInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'clb',\n    action: 'DescribeLoadBalancers',\n    responseField: 'LoadBalancerSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  getRegions() {\n    return Promise.resolve(regionSupported);\n  }\n  async getAllMetrics(region: string) {\n    const serviceInfo = GetServiceAPIInfo(region, 'monitor');\n    const { MetricSet: public_metrics } = await this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: {\n          Namespace: clbNamespaceMap.public,\n        },\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeBaseMetrics' }\n    );\n    const { MetricSet: private_metrics } = await this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: {\n          Namespace: clbNamespaceMap.private,\n        },\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeBaseMetrics' }\n    );\n    const res = Object.values(_.keyBy(_.concat(private_metrics, public_metrics), 'MetricName'));\n    return res.map((t) => modifyDimensons(t));\n  }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await this.getAllMetrics(region);\n    return _.compact(rawSet);\n  }\n}\n","import { VBCInstanceAliasList, VBCInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = VBCInstanceAliasList;\n  InvalidDimensions = VBCInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeCcns',\n    responseField: 'CcnSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  getFilterDropdown({ field }) {\n    return super.getRegions();\n  }\n}\n","import {\n  VPCNETDETECTInstanceAliasList,\n  VPCNETInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = VPCNETDETECTInstanceAliasList;\n  InvalidDimensions = VPCNETInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeNetDetects',\n    responseField: 'NetDetectSet',\n    interceptor: {\n      // response: (data: unknown[]) =>[\n      //   {\n      //     \"NetDetectId\": \"netd-12345678\",\n      //   },\n      // ],\n    },\n  };\n  MetricReqConfig = {\n    resultFilter: modifyDimensons,\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import { VPNGWInstanceAliasList, VPNGWInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = VPNGWInstanceAliasList;\n  InvalidDimensions = VPNGWInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeVpnGateways',\n    responseField: 'VpnGatewaySet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  getFilterDropdown({ field, region }) {\n    if (field === 'zone') {\n      const serviceInfo = GetServiceAPIInfo(region, 'cvm');\n      return this.doRequest(\n        {\n          url: this.url + serviceInfo.path,\n        },\n        serviceInfo.service,\n        { region, action: 'DescribeZones' }\n      ).then((response) => {\n        return _.filter(\n          _.map(response.ZoneSet || [], (item) => {\n            return { text: item.ZoneName, value: item.Zone, ZoneState: item.ZoneState, Zone: item.Zone };\n          }),\n          (item) => item.ZoneState === 'AVAILABLE'\n        );\n      });\n    }\n    return [];\n  }\n}\n","import { VPNXInstanceAliasList, VPNXInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = VPNXInstanceAliasList;\n  InvalidDimensions = VPNXInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeVpnConnections',\n    responseField: 'VpnConnectionSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import _ from 'lodash';\nimport { WAFInstanceAliasList, WAFInvalidDemensions, templateQueryIdMap, namespace } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class CDNDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = WAFInstanceAliasList;\n  InvalidDimensions = WAFInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'cdn',\n    action: 'DescribeDomains',\n    responseField: 'Domains',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async metricFindQuery(query: any, regex?: string) {\n    return super.metricFindQuery({ ...query, ...{ region: 'ap-guangzhou' } }, regex);\n  }\n}\n","import coreModule from 'grafana/app/core/core_module';\nimport { APIGATEWAYFilterFieldsDescriptor, templateQueryIdMap, queryEditorName, namespace } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.APIGATEWAYFilterFieldsDescriptor = APIGATEWAYFilterFieldsDescriptor;\n      $scope.namespace = namespace;\n    };\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      const service = GetServiceFromNamespace($scope.namespace);\n      // console.log({namespace, service});\n      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance)[templateQueryIdMap.instance];\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n    $scope.getExtraDropdown = async (target) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      const instanceId = $scope.getInstanceId();\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const rs = await $scope.datasource.getServiceFn(service, 'getEnvironmentNameList')({ region, instanceId });\n\n      const result = rs.map((o) => {\n        return {\n          text: o.EnvironmentName,\n          value: JSON.stringify(o),\n        };\n      });\n      return result;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/45073\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in APIGATEWAYFilterFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputNumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />    \n      <multi-condition\n        ng-if=\"field.type === 'inputNumberMulti'\"\n        type=\"'inputNumber'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        maxNum=\"field.max\"\n        minNum=\"field.min\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputMulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- 起始区域 目的区域等 -->\n  <div>\n    <div class=\"gf-form-inline\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">EnvironmentName</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target.EnvironmentName\" allow-custom=\"true\" lookup-text=\"true\"  get-options=\"getExtraDropdown(target)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive(queryEditorName, sQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { BWPFilterFieldsDescriptor } from './query_def';\n\nexport class BWPQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.BWPFilterFieldsDescriptor = BWPFilterFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        case 'zone':\n          return $scope.getZones();\n        default:\n          return [];\n      }\n    };\n\n    $scope.getZones = () => {\n      if (!$scope.region) {\n        return [];\n      }\n      return $scope.datasource.getZones('cvm', $scope.region);\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/213/15728\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        单次请求返回的数量，默认为20，最小值为1，最大值为100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      BandwidthPackageIds\n      <info-popover mode=\"right-normal\">\n        带宽包唯一ID列表，参数不支持同时指定 BandwidthPackageIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n      switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n  <multi-condition type=\"'input'\" max-cond=\"100\" value=\"target.queries.BandwidthPackageIds\" on-change=\"onChange()\">\n  </multi-condition>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      Filters\n      <info-popover mode=\"right-normal\">\n        过滤条件，每次请求的 Filters 的上限为10，Filter.Values 的上限为5。参数不支持同时指定 BandwidthPackageIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n      on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n  <div class=\"gf-form-inline\" ng-repeat=\"field in BWPFilterFieldsDescriptor\">\n    <label class=\"gf-form-label width-14\">\n      {{ field.key }}\n      <info-popover mode=\"right-normal\">\n        {{ field.cnDescriptor }}\n        <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n      </info-popover>\n    </label>\n    <multi-condition\n      ng-if=\"field.type === 'dropdownmulti'\"\n      type=\"'dropdown'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      get-options=\"getDropdown(field.key)\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputNumbermulti'\"\n      type=\"'inputNumber'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      maxNum=\"field.max\"\n      minNum=\"field.min\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputmulti'\"\n      type=\"'input'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <custom-select-dropdown\n      ng-if=\"field.type === 'select'\"\n      value=\"target.queries.Filters[field.key]\"\n      options=\"field.list\"\n      multiple=\"true\"\n      on-change=\"onChange()\"\n    ></custom-select-dropdown>\n  </div>\n</div>\n\n</div>\n`;\n\nexport function bwpQuery() {\n  return {\n    template: template,\n    controller: BWPQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('bwpQuery', bwpQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { CDBFieldsDescriptor } from './query_def';\n\nexport class CDBQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.CDBFieldsDescriptor = CDBFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        case 'ZoneIds':\n          return $scope.getZones();\n        default:\n          return [];\n      }\n    };\n\n    $scope.getZones = () => {\n      if (!$scope.region) {\n        return [];\n      }\n      return $scope.datasource.getZones('cdb', $scope.region);\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/236/15872\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in CDBFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n`;\n\nexport function cdbQuery() {\n  return {\n    template: template,\n    controller: CDBQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('cdbQuery', cdbQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { CDNFilterFieldsDescriptor } from './query_def';\n\nexport class CDNQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.CDNFilterFieldsDescriptor = CDNFilterFieldsDescriptor;\n    };\n\n    // $scope.onChecked = (srcField, dstField) => {\n    //   if ($scope.target.queries[srcField] === true) {\n    //     $scope.target.queries[dstField] = false;\n    //   }\n    //   $scope.onChange();\n    // };\n\n    // $scope.getDropdown = (field) => {\n    //   switch (field) {\n    //     case 'zone':\n    //       return $scope.getZones();\n    //     default:\n    //       return [];\n    //   }\n    // };\n\n    // $scope.getZones = () => {\n    //   if (!$scope.region) {\n    //     return [];\n    //   }\n    //   return $scope.datasource.getZones('cvm', $scope.region);\n    // };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/228/41118\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        单次请求返回的数量，默认为20，最小值为1，最大值为100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\" ng-repeat=\"field in CDNFilterFieldsDescriptor\">\n<label class=\"gf-form-label width-14\">\n  {{ field.key }}\n  <info-popover mode=\"right-normal\">\n    {{ field.cnDescriptor }}\n    <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n  </info-popover>\n</label>\n<multi-condition\n  ng-if=\"field.type === 'inputNumbermulti'\"\n  type=\"'inputNumber'\"\n  max-cond=\"5\"\n  value=\"target.queries.Filters[field.key]\"\n  maxNum=\"field.max\"\n  minNum=\"field.min\"\n  on-change=\"onChange()\"\n></multi-condition>\n<multi-condition\n  ng-if=\"field.type === 'inputmulti'\"\n  type=\"'input'\"\n  max-cond=\"5\"\n  value=\"target.queries.Filters[field.key]\"\n  on-change=\"onChange()\"\n></multi-condition>\n<custom-select-dropdown\n  ng-if=\"field.type === 'select'\"\n  value=\"target.queries.Filters[field.key]\"\n  options=\"field.list\"\n  multiple=\"true\"\n  on-change=\"onChange()\"\n></custom-select-dropdown>\n</div>\n\n</div>\n`;\n\nexport function cdnQuery() {\n  return {\n    template: template,\n    controller: CDNQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('cdnQuery', cdnQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { CDNPROVINCEFilterFieldsDescriptor, queryEditorName, namespace } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nconst ExtraFields = [\n  {\n    label: 'Isp',\n    field: 'isp',\n  },\n  {\n    label: 'Province',\n    field: 'district',\n  },\n];\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.CDNPROVINCEFilterFieldsDescriptor = CDNPROVINCEFilterFieldsDescriptor;\n      $scope.ExtraFields = ExtraFields;\n      $scope.namespace = namespace;\n    };\n\n    $scope.getExtraDropdown = async (target, field) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const rs = await $scope.datasource.getServiceFn(service, 'getConsumerList')({ region, field });\n      return rs;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Domains are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/228/41118\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\" ng-repeat=\"field in CDNPROVINCEFilterFieldsDescriptor\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <input\n          ng-if=\"field.type === 'inputNumber'\"\n          style=\"margin-right:2px\"\n          type=\"number\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n          ng-min=\"field.min\"\n          ng-max=\"field.max\"\n        />\n        <input\n          ng-if=\"field.type === 'input'\"\n          style=\"margin-right:2px\"\n          type=\"text\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n        />    \n        <multi-condition\n          ng-if=\"field.type === 'inputNumberMulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputMulti'\"\n          type=\"'input'\"\n          value=\"target.queries[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries[field.key]\"\n          options=\"field.list\"\n          multiple=\"field.multiple || false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n\n<!-- 起始区域 目的区域等 -->\n  <div\">\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in ExtraFields\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(target, extra.field)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive(queryEditorName, sQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { CFSQueryDescriptor } from './query_def';\n\nexport class SCFQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.CFSQueryDescriptor = CFSQueryDescriptor;\n    };\n\n    $scope.getVersions = async (target) => {\n      // console.log(2222);\n\n      // return [{ text: 1, value: 1 }];\n      // console.log(target, 'target');\n      const { instance, region } = target;\n      const fetcher = $scope.datasource.getServiceFn('scf', 'getVersions');\n      if (!instance || !region) return [];\n\n      return fetcher(region, { FunctionName: JSON.parse(instance).FunctionName }).then((res) => {\n        // console.log(res, 'res');\n\n        return res;\n      });\n    };\n    // $scope.onChecked = (srcField, dstField) => {\n    //   if ($scope.target.queries[srcField] === true) {\n    //     $scope.target.queries[dstField] = false;\n    //   }\n    //   $scope.onChange();\n    // };\n\n    // $scope.getDropdown = (field) => {\n    //   switch (field) {\n    //     case 'zone':\n    //       return $scope.getZones();\n    //     default:\n    //       return [];\n    //   }\n    // };\n\n    // $scope.getZones = () => {\n    //   if (!$scope.region) {\n    //     return [];\n    //   }\n    //   return $scope.datasource.getZones('cvm', $scope.region);\n    // };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n  FileSystems are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/582/38170\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in CFSQueryDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n  </div>\n`;\n\nexport function scfQuery() {\n  return {\n    template: template,\n    controller: SCFQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\ncoreModule.directive('cfsQuery', scfQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { CKAFKAQueryDescriptor, templateQueryIdMap } from './query_def';\n\nconst ExtraFields = [\n  {\n    label: 'ConsumerGroup',\n    field: 'consumerGroup',\n  },\n  {\n    label: 'TopicId',\n    field: 'topicId',\n  },\n  {\n    label: 'Partition',\n    field: 'partition',\n  },\n];\n\nexport class CKAFKAQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.CKAFKAQueryDescriptor = CKAFKAQueryDescriptor;\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        default:\n          return [];\n      }\n    };\n    $scope.onInstanceChange = () => {\n      $scope.target.consumerGroup = '';\n      $scope.target.topicId = '';\n      $scope.target.topicName = '';\n      $scope.target.partition = '';\n    };\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}));\n    };\n\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      instance = $scope.datasource.getServiceFn('ckafka', 'getVariable')(instance);\n      if (Array.isArray(instance)) instance = instance[0];\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance).InstanceId;\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n\n    $scope.getExtraDropdown = async (target, field) => {\n      const InstanceId = $scope.getInstanceId();\n      const fetcher = $scope.datasource.getServiceFn('ckafka', 'getConsumerGroups');\n      const region = $scope.datasource.getServiceFn('ckafka', 'getVariable')(target.region);\n      const res = await fetcher(region, { InstanceId, groupname: target.consumerGroup, topicid: target.topicId });\n\n      const { TopicList, GroupList, PartitionList } = res;\n      const data = {\n        GroupList: GroupList.map((group) => {\n          group._InstanceAliasValue = group.GroupName;\n          return {\n            text: group.GroupName,\n            value: JSON.stringify(group),\n          };\n        }),\n        TopicList: TopicList.map((topic) => {\n          topic._InstanceAliasValue = topic[templateQueryIdMap.topicId];\n          return {\n            text: topic[templateQueryIdMap.topicId],\n            value: JSON.stringify(topic), // 为了获取多维度的值，这里完全可以使用JSON.stringify()将整个对象放进去\n          };\n        }),\n        PartitionList: PartitionList.map((par) => {\n          par._InstanceAliasValue = par[templateQueryIdMap.partition];\n          return {\n            text: String(par[templateQueryIdMap.partition]),\n            value: JSON.stringify(par),\n          };\n        }),\n      };\n      console.log(data, field, 'daata--');\n\n      switch (field) {\n        case 'consumerGroup':\n          return data.GroupList;\n        case 'topicId':\n          return data.TopicList;\n        case 'partition':\n          return data.PartitionList;\n      }\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/583/18582\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in CKAFKAQueryDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- 主题，消费分组，分区 -->\n  <div ng-if=\"target.instance\">\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getExtraDropdown(target, extra.field)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  </div>\n`;\n\nexport function scfQuery() {\n  return {\n    template: template,\n    controller: CKAFKAQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n      instance: '=',\n    },\n    link: (scope, element, attrs) => {\n      scope.$watch('target.instance', (newValue, oldValue) => {\n        scope.onInstanceChange?.();\n      });\n    },\n  };\n}\ncoreModule.directive('ckafkaQuery', scfQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { get, chain } from 'lodash';\nimport { LOADBALANCEFieldsDescriptor, templateQueryIdMap, namespace } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.LOADBALANCEFieldsDescriptor = LOADBALANCEFieldsDescriptor;\n      $scope.serversList = [];\n    };\n    $scope.onFieldChange = (field) => {\n      $scope.onRefresh();\n    };\n    $scope.onInstanceChange = (n, o) => {\n      $scope.target.listener = '';\n      $scope.target.servers = '';\n      $scope.target.serverPort = '';\n    };\n    $scope.getVariableId = (data, type) => {\n      let variableData = data;\n      const service = GetServiceFromNamespace(namespace);\n      // console.log({namespace, service});\n      variableData = $scope.datasource.getServiceFn(service, 'getVariable')(variableData);\n      if (!variableData) {\n        return '';\n      }\n      try {\n        variableData = JSON.parse(variableData)[templateQueryIdMap[type]];\n      } catch (error) {\n        // console.log();\n      }\n      return variableData;\n    };\n    $scope.getExtraDropdown = async (target) => {\n      const { instance } = $scope.target;\n      const service = GetServiceFromNamespace(namespace);\n      const instanceId = $scope.getVariableId(instance, 'instance');\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const rs = await $scope.datasource.getServiceFn(service, 'getListenerList')({ region, instanceId });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[templateQueryIdMap.listener];\n        return {\n          text: o[templateQueryIdMap.listener],\n          value: JSON.stringify(o),\n        };\n      });\n      return result;\n    };\n    $scope.getServersDropdown = async (target) => {\n      const { instance, listener } = $scope.target;\n      const service = GetServiceFromNamespace(namespace);\n      const instanceId = $scope.getVariableId(instance, 'instance');\n      const listenerId = $scope.getVariableId(listener, 'listener');\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const serversList = await $scope.datasource.getServiceFn(\n        service,\n        'getServerList'\n      )({ region, instanceId, listenerId });\n      $scope.serversList = serversList;\n      const res = chain(serversList)\n        .map((item) => {\n          item._InstanceAliasValue = get(item, 'PrivateIpAddresses.0');\n          return {\n            text: get(item, 'PrivateIpAddresses.0'),\n            value: JSON.stringify(item),\n          };\n        })\n        .uniqBy('text')\n        .value();\n      return res;\n    };\n    $scope.getServerPortDropdown = async (target) => {\n      const { servers } = $scope.target;\n      let serverPortList: any[] = [];\n      try {\n        const serversSource = JSON.parse(servers);\n        serverPortList = chain($scope.serversList)\n          .filter((item) => get(serversSource, 'PrivateIpAddresses.0') === get(item, 'PrivateIpAddresses.0'))\n          .map((item) => {\n            item._InstanceAliasValue = get(item, 'Port');\n            return {\n              text: `${get(item, 'Port')}`,\n              value: JSON.stringify(item),\n            };\n          })\n          .value();\n      } catch (error) {}\n      return serverPortList;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Functions are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/214/30685\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\" ng-repeat=\"field in LOADBALANCEFieldsDescriptor\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <input\n          ng-if=\"field.type === 'inputNumber'\"\n          style=\"margin-right:2px\"\n          type=\"number\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n          ng-min=\"field.min\"\n          ng-max=\"field.max\"\n        />\n        <input\n          ng-if=\"field.type === 'input'\"\n          style=\"margin-right:2px\"\n          type=\"text\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n        />\n        <multi-condition\n          ng-if=\"field.type === 'inputNumberMulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputMulti'\"\n          type=\"'input'\"\n          value=\"target.queries[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries[field.key]\"\n          options=\"field.list\"\n          multiple=\"field.multiple || false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!--Listener维度部分-->\n<div class=\"gf-form-inline\" ng-if=\"target.instance\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label query-keyword width-9\">\n      Listeners\n      <info-popover mode=\"right-normal\">\n        可不选择监听器，这时通过实例维度查询监控数据\n      </info-popover>\n    </label>\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n      <gf-form-dropdown model=\"target.listener\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getExtraDropdown(target)\"\n        on-change=\"onRefresh()\" css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n  </div>\n</div>\n<div class=\"gf-form-inline\" ng-if=\"target.listener && namespace !== '${namespace}'\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label query-keyword width-9\">Servers</label>\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n      <gf-form-dropdown model=\"target.servers\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getServersDropdown(target)\"\n        on-change=\"onRefresh()\" css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n  </div>\n</div>\n<div class=\"gf-form-inline\" ng-if=\"target.servers && namespace !== '${namespace}'\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label query-keyword width-9\">ServerPort</label>\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n      <gf-form-dropdown model=\"target.serverPort\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getServerPortDropdown(target)\"\n        on-change=\"onRefresh()\" css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n  </div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      namespace: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n    link: (scope, element, attrs) => {\n      scope.$watch('target.instance', (newValue, oldValue) => {\n        scope.onInstanceChange?.(newValue, oldValue);\n      });\n    },\n  };\n}\ncoreModule.directive('clbQuery', sQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { CLSFilterFieldsDescriptor, queryEditorName } from './query_def';\n\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.GSEFilterFieldsDescriptor = CLSFilterFieldsDescriptor;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/45073\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in GSEFilterFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputNumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />    \n      <multi-condition\n        ng-if=\"field.type === 'inputNumberMulti'\"\n        type=\"'inputNumber'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        maxNum=\"field.max\"\n        minNum=\"field.min\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputMulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- 起始区域 目的区域等 -->\n<div>\n  <div class=\"gf-form-inline\" >\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label query-keyword width-9\">uin</label>\n      <input\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.uin\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />    \n    </div>\n  </div>\n</div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive(queryEditorName, sQuery);\n","import createQuery from '../_base/query';\nimport { InstanceQueryDescriptor } from './query_def';\n\ncreateQuery('cmqQuery', {\n  fieldDescriptor: InstanceQueryDescriptor,\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/406/42624',\n  namespace: 'QCE/CMQ',\n});\n","import coreModule from 'grafana/app/core/core_module';\nimport { InstanceQueryDescriptor } from './query_def';\n\nconst ExtraFields = [\n  {\n    label: 'Subscription(订阅)',\n    field: 'subscriptionId',\n  },\n];\n\nexport class CmqTopicQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.InstanceQueryDescriptor = InstanceQueryDescriptor;\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        default:\n          return [];\n      }\n    };\n\n    // 各个实例下的订阅，由于不想每次都重复发请求，所以这里做了一层缓存，数据结构为{ [instanceId]: {   } }\n    $scope.cacheMap = {};\n\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}));\n    };\n\n    $scope.getTopicName = () => {\n      let { instance } = $scope.target;\n      instance = $scope.datasource.getServiceFn('cmqTopic', 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance).TopicName;\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n\n    $scope.onExtraFieldChange = (field) => {\n      $scope.onRefresh();\n    };\n\n    $scope.getExtraDropdown = async (target, field) => {\n      if (field === 'subscriptionId') {\n        const TopicName = $scope.getTopicName();\n        let data = $scope.cacheMap[TopicName];\n\n        if (!data) {\n          const region = $scope.datasource.getServiceFn('cmqTopic', 'getVariable')(target.region);\n          const fetcher = $scope.datasource.getServiceFn('cmqTopic', 'fetchAllSubscription');\n          const datas = await fetcher(region, { TopicName });\n          data = datas.map((item) => {\n            item._InstanceAliasValue = item.SubscriptionId;\n            return { text: item.SubscriptionId, value: JSON.stringify(item) };\n          });\n        }\n\n        // 缓存\n        $scope.cacheMap[TopicName] = data;\n        return data;\n      }\n      return [];\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/406/42637\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in InstanceQueryDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- 主题的ui -->\n  <div ng-if=\"target.instance\">\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"true\" get-options=\"getExtraDropdown(target, extra.field)\"\n            on-change=\"onExtraFieldChange(extra.field)\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  </div>\n`;\n\nexport function scfQuery() {\n  return {\n    template: template,\n    controller: CmqTopicQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive('cmqTopicQuery', scfQuery);\n","import _ from 'lodash';\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\n// 与名称挂钩的变量\nconst InstanceAliasList = ['BucketName'];\nexport { InstanceAliasList, GetInstanceQueryParams };\n\n// 界面状态模型，default\nexport default {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'BucketName',\n  queries: {},\n};\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { CVMFilterFieldsDescriptor } from './query_def';\n\nexport class CVMQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.CVMFilterFieldsDescriptor = CVMFilterFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        case 'zone':\n          return $scope.getZones();\n        default:\n          return [];\n      }\n    };\n\n    $scope.getZones = () => {\n      if (!$scope.region) {\n        return [];\n      }\n      return $scope.datasource.getZones('cvm', $scope.region);\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/213/15728\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        单次请求返回的数量，默认为20，最小值为1，最大值为100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      InstanceIds\n      <info-popover mode=\"right-normal\">\n        实例 ID，每次请求的实例的上限为100，参数不支持同时指定 InstanceIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n      switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n  <multi-condition type=\"'input'\" max-cond=\"100\" value=\"target.queries.InstanceIds\" on-change=\"onChange()\">\n  </multi-condition>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      Filters\n      <info-popover mode=\"right-normal\">\n        过滤条件，每次请求的 Filters 的上限为10，Filter.Values 的上限为5。参数不支持同时指定 InstanceIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n      on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n  <div class=\"gf-form-inline\" ng-repeat=\"field in CVMFilterFieldsDescriptor\">\n    <label class=\"gf-form-label width-14\">\n      {{ field.key }}\n      <info-popover mode=\"right-normal\">\n        {{ field.cnDescriptor }}\n        <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n      </info-popover>\n    </label>\n    <multi-condition\n      ng-if=\"field.type === 'dropdownmulti'\"\n      type=\"'dropdown'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      get-options=\"getDropdown(field.key)\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputNumbermulti'\"\n      type=\"'inputNumber'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      maxNum=\"field.max\"\n      minNum=\"field.min\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputmulti'\"\n      type=\"'input'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <custom-select-dropdown\n      ng-if=\"field.type === 'select'\"\n      value=\"target.queries.Filters[field.key]\"\n      options=\"field.list\"\n      multiple=\"true\"\n      on-change=\"onChange()\"\n    ></custom-select-dropdown>\n  </div>\n</div>\n\n</div>\n`;\n\nexport function cvmQuery() {\n  return {\n    template: template,\n    controller: CVMQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('cvmQuery', cvmQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { DCDBFilterFieldsDescriptor, queryEditorName, namespace, templateQueryIdMap } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nconst ExtraFields = [\n  {\n    label: 'nodeid',\n    field: 'NodeId',\n    action: 'DescribeDCDBInstanceNodeInfo',\n  },\n  {\n    label: 'shardid',\n    field: 'ShardId',\n    action: 'DescribeDCDBShards',\n  },\n];\nconst dropdownTextConfig = {\n  DescribeDCDBInstanceNodeInfo: 'NodeId',\n  DescribeDCDBShards: 'ShardInstanceId',\n};\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.DCDBFilterFieldsDescriptor = DCDBFilterFieldsDescriptor;\n      $scope.ExtraFields = ExtraFields;\n      $scope.namespace = namespace;\n    };\n\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      const service = GetServiceFromNamespace($scope.namespace);\n      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance)[templateQueryIdMap.instance];\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}) || item.label in ($scope.dims ?? {}));\n    };\n    $scope.getExtraDropdown = async (target, action) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const instanceId = $scope.getInstanceId();\n      const payload: any = {\n        InstanceId: instanceId,\n        Limit: 100,\n      };\n      const rs = await $scope.datasource.getServiceFn(service, 'getConsumerList')({ region, action, payload });\n\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[templateQueryIdMap[dropdownTextConfig[action]]];\n        return {\n          text: o[templateQueryIdMap[dropdownTextConfig[action]]],\n          value: JSON.stringify(o),\n        };\n      });\n      return result;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Functions are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/50388\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\" ng-repeat=\"field in DCDBFilterFieldsDescriptor\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <input\n          ng-if=\"field.type === 'inputNumber'\"\n          style=\"margin-right:2px\"\n          type=\"number\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n          ng-min=\"field.min\"\n          ng-max=\"field.max\"\n        />\n        <input\n          ng-if=\"field.type === 'input'\"\n          style=\"margin-right:2px\"\n          type=\"text\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n        />    \n        <multi-condition\n          ng-if=\"field.type === 'inputNumberMulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputMulti'\"\n          type=\"'input'\"\n          value=\"target.queries[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries[field.key]\"\n          options=\"field.list\"\n          multiple=\"field.multiple || false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n\n<!-- 起始区域 目的区域等 -->\n  <div\">\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(target, extra.action)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive(queryEditorName, sQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { ECMBLOCKSTORAGEFilterFieldsDescriptor, queryEditorName, namespace, templateQueryIdMap } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nconst ExtraFields = [\n  // {\n  //   label: 'nodeid',\n  //   field: 'NodeId',\n  //   action: 'DescribeInstanceNodeInfo',\n  // },\n  {\n    label: 'diskId',\n    field: 'diskId',\n  },\n];\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.ECMBLOCKSTORAGEFilterFieldsDescriptor = ECMBLOCKSTORAGEFilterFieldsDescriptor;\n      $scope.ExtraFields = ExtraFields;\n      $scope.namespace = namespace;\n    };\n\n    // $scope.getInstanceId = () => {\n    //   let { instance } = $scope.target;\n    //   const service = GetServiceFromNamespace($scope.namespace);\n    //   instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n    //   if (!instance) {\n    //     return '';\n    //   }\n    //   try {\n    //     instance = JSON.parse(instance)[templateQueryIdMap.instance];\n    //   } catch (error) {\n    //     console.log();\n    //   }\n    //   return instance;\n    // };\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}) || item.label in ($scope.dims ?? {}));\n    };\n    $scope.getExtraDropdown = (target, action) => {\n      let { instance } = target;\n      const service = GetServiceFromNamespace($scope.namespace);\n      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n      try {\n        instance = JSON.parse(instance);\n        const { DataDisks: dataDisks } = instance;\n        return dataDisks.map((o) => {\n          o._InstanceAliasValue = o[templateQueryIdMap.diskId];\n          return {\n            text: o[templateQueryIdMap.diskId],\n            value: JSON.stringify(o),\n          };\n        });\n      } catch (error) {\n        // console.log('instance error', instance);\n        const payload: any = {\n          InstanceId: instance,\n        };\n        const rs = $scope.datasource.getServiceFn(service, 'getDiskList')({ payload });\n        const result = rs.map((o) => {\n          return {\n            text: o[templateQueryIdMap.diskId],\n            value: JSON.stringify(o),\n          };\n        });\n        return result;\n      }\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Functions are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/50388\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\" ng-repeat=\"field in ECMBLOCKSTORAGEFilterFieldsDescriptor\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <input\n          ng-if=\"field.type === 'inputNumber'\"\n          style=\"margin-right:2px\"\n          type=\"number\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n          ng-min=\"field.min\"\n          ng-max=\"field.max\"\n        />\n        <input\n          ng-if=\"field.type === 'input'\"\n          style=\"margin-right:2px\"\n          type=\"text\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n        />    \n        <multi-condition\n          ng-if=\"field.type === 'inputNumberMulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputMulti'\"\n          type=\"'input'\"\n          value=\"target.queries[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries[field.key]\"\n          options=\"field.list\"\n          multiple=\"field.multiple || false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n\n<!-- 起始区域 目的区域等 -->\n  <div\">\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(target)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive(queryEditorName, sQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { GSEFilterFieldsDescriptor, templateQueryIdMap, queryEditorName, namespace } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nconst ExtraFields = [\n  {\n    label: 'fleetId',\n    field: 'FleetId',\n  },\n  {\n    label: 'queueName',\n    field: 'Name',\n  },\n];\nconst actionMaps = {\n  FleetId: 'getFleetList',\n  Name: 'getQueueNameList',\n};\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.GSEFilterFieldsDescriptor = GSEFilterFieldsDescriptor;\n      $scope.namespace = namespace;\n    };\n\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}));\n    };\n\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      const service = GetServiceFromNamespace($scope.namespace);\n      // console.log({namespace, service});\n      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance)[templateQueryIdMap.instance];\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n    $scope.getExtraDropdown = async (target, field) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      const instanceId = $scope.getInstanceId();\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      // const rs = await $scope.datasource.getServiceFn(service, 'getEnvironmentNameList')({ region, instanceId });\n      let rs = await $scope.datasource.getServiceFn(service, actionMaps[field])({ region, instanceId });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[templateQueryIdMap[field]];\n        return {\n          text: o[templateQueryIdMap[field]],\n          value: JSON.stringify(o),\n        };\n      });\n      return result;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/45073\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in GSEFilterFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputNumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />    \n      <multi-condition\n        ng-if=\"field.type === 'inputNumberMulti'\"\n        type=\"'inputNumber'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        maxNum=\"field.max\"\n        minNum=\"field.min\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputMulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- 起始区域 目的区域等 -->\n<div>\n  <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n      <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n        <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getExtraDropdown(target, extra.field)\"\n          on-change=\"onRefresh()\" css-class=\"min-width-10\">\n        </gf-form-dropdown>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive(queryEditorName, sQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { LBFilterDescriptor } from './query_def';\n\nexport class LBQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      // $scope.LBQueryDescriptor = LBQueryDescriptor;\n      $scope.LBFilterDescriptor = LBFilterDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        case 'zone':\n          return $scope.getZones();\n        default:\n          return [];\n      }\n    };\n\n    $scope.getZones = () => {\n      if (!$scope.region) {\n        return [];\n      }\n      return $scope.datasource.getZones('cvm', $scope.region);\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/215/16702\">Click here to get API doc.</a>\n</label>\n\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        单次请求返回的数量，默认为20，最小值为1，最大值为100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      AddressIds\n      <info-popover mode=\"right-normal\">\n        实例 ID，每次请求的实例的上限为100，参数不支持同时指定 AddressIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n      switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n  <multi-condition type=\"'input'\" max-cond=\"100\" value=\"target.queries.AddressIds\" on-change=\"onChange()\">\n  </multi-condition>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      Filters\n      <info-popover mode=\"right-normal\">\n        过滤条件，每次请求的 Filters 的上限为10，Filter.Values 的上限为5。参数不支持同时指定 AddressIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n      on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n  </div>\n</div>\n\n<!--Filters部分-->\n<div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n  <div class=\"gf-form-inline\" ng-repeat=\"field in LBFilterDescriptor\">\n    <label class=\"gf-form-label width-14\">\n      {{ field.key }}\n      <info-popover mode=\"right-normal\">\n        {{ field.cnDescriptor }}\n        <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n      </info-popover>\n    </label>\n    <multi-condition\n      ng-if=\"field.type === 'dropdownmulti'\"\n      type=\"'dropdown'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      get-options=\"getDropdown(field.key)\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputNumbermulti'\"\n      type=\"'inputNumber'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      maxNum=\"field.max\"\n      minNum=\"field.min\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputmulti'\"\n      type=\"'input'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <custom-select-dropdown\n      ng-if=\"field.type === 'select'\"\n      value=\"target.queries.Filters[field.key]\"\n      options=\"field.list\"\n      multiple=\"true\"\n      on-change=\"onChange()\"\n    ></custom-select-dropdown>\n  </div>\n</div>\n\n</div>\n`;\n\nexport function lbQuery() {\n  return {\n    template: template,\n    controller: LBQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('lbQuery', lbQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { LighthouseFilterFieldsDescriptor } from './query_def';\n\nexport class LighthouseQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.LighthouseFilterFieldsDescriptor = LighthouseFilterFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        case 'zone':\n          return $scope.getZones();\n        default:\n          return [];\n      }\n    };\n\n    $scope.getZones = () => {\n      if (!$scope.region) {\n        return [];\n      }\n      return $scope.datasource.getZones('lighthouse', $scope.region);\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/1207/47573\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        Offset\n        <info-popover mode=\"right-normal\">\n          偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n        </info-popover>\n      </label>\n      <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n    </div>\n  </div>\n  <div class=\"gf-form-inline\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        Limit\n        <info-popover mode=\"right-normal\">\n          单次请求返回的数量，默认为20，最小值为1，最大值为100\n        </info-popover>\n      </label>\n      <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n    </div>\n  </div>\n  <div class=\"gf-form-inline\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-9\">\n        InstanceIds\n        <info-popover mode=\"right-normal\">\n          实例 ID，每次请求的实例的上限为100，参数不支持同时指定 InstanceIds 和 Filters\n        </info-popover>\n      </label>\n      <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n        switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n    </div>\n  </div>\n  <div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n    <multi-condition type=\"'input'\" max-cond=\"100\" value=\"target.queries.InstanceIds\" on-change=\"onChange()\">\n    </multi-condition>\n  </div>\n  <div class=\"gf-form-inline\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-9\">\n        Filters\n        <info-popover mode=\"right-normal\">\n          过滤条件，每次请求的 Filters 的上限为10，Filter.Values 的上限为5。参数不支持同时指定 InstanceIds 和 Filters\n        </info-popover>\n      </label>\n      <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n        on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n    </div>\n  </div>\n  <div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n    <div class=\"gf-form-inline\" ng-repeat=\"field in LighthouseFilterFieldsDescriptor\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        get-options=\"getDropdown(field.key)\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputNumbermulti'\"\n        type=\"'inputNumber'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        maxNum=\"field.max\"\n        minNum=\"field.min\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries.Filters[field.key]\"\n        options=\"field.list\"\n        multiple=\"true\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n`;\n\nexport function lighthouseQuery() {\n  return {\n    template: template,\n    controller: LighthouseQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('lighthouseQuery', lighthouseQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { MONGODBFieldsDescriptor } from './query_def';\n\nexport class MongoDBQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.MONGODBFieldsDescriptor = MONGODBFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        default:\n          return [];\n      }\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/240/35769\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in MONGODBFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <gf-form-dropdown\n        ng-if=\"field.type === 'dropdown'\"\n        model=\"target.queries[field.key]\"\n        allow-custom=\"true\"\n        lookup-text=\"true\"\n        get-options=\"getDropdown(field.key)\"\n        on-change=\"onChange()\"\n        css-class=\"min-width-10\"\n      ></gf-form-dropdown>\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n\n</div>\n`;\n\nexport function mongodbQuery() {\n  return {\n    template: template,\n    controller: MongoDBQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('mongodbQuery', mongodbQuery);\n","import { InstanceQueryDescriptor, templateQueryIdMap } from './query_def';\nimport coreModule from 'grafana/app/core/core_module';\n\nconst ExtraFields = [\n  {\n    label: 'NodeIP',\n    field: 'nodeIP',\n  },\n];\n\nexport class MrQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.InstanceQueryDescriptor = InstanceQueryDescriptor;\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        default:\n          return [];\n      }\n    };\n\n    // 各个实例下的订阅，由于不想每次都重复发请求，所以这里做了一层缓存，数据结构为{ [instanceId]: {   } }\n    $scope.cacheMap = {};\n\n    $scope.getExtraFields = () => {\n      return Object.keys($scope.dims ?? {}).some((item: string) => item.startsWith('host4')) ? ExtraFields : [];\n      // return ExtraFields;\n    };\n\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      instance = $scope.datasource.getServiceFn('mrHDFS', 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance).ClusterId;\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n\n    $scope.onExtraFieldChange = (field) => {\n      $scope.onRefresh();\n    };\n\n    $scope.getExtraDropdown = async (target, field) => {\n      if (field === 'nodeIP') {\n        const InstanceId = $scope.getInstanceId();\n        let data = $scope.cacheMap[InstanceId];\n\n        if (!data) {\n          const region = $scope.datasource.getServiceFn('mrHDFS', 'getVariable')(target.region);\n          const fetcher = $scope.datasource.getServiceFn('mrHDFS', 'fetchAllNodes');\n          const dataT = await fetcher(region, { InstanceId, NodeFlag: 'all' });\n          data = dataT.map((item) => {\n            item._InstanceAliasValue = item[templateQueryIdMap.node];\n            return {\n              text: item[templateQueryIdMap.node],\n              value: JSON.stringify(item),\n            };\n          });\n        }\n\n        // 缓存\n        $scope.cacheMap[InstanceId] = data;\n        return data;\n      }\n      return [];\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/589/34266\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in InstanceQueryDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n<!-- 主题的ui -->\n  <div ng-if=\"target.instance\">\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(target, extra.field)\"\n            on-change=\"onExtraFieldChange(extra.field)\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  </div>\n`;\n\nexport function mrQuery() {\n  return {\n    template: template,\n    controller: MrQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive('mrQuery', mrQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { NATGatewayFilterFieldsDescriptor } from './query_def';\n\nexport class NatGatewayQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.NATGatewayFilterFieldsDescriptor = NATGatewayFilterFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        default:\n          return [];\n      }\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/215/36034\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        单次请求返回的数量，默认为20，最小值为1，最大值为100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-10\">\n      NatGatewayIds\n      <info-popover mode=\"right-normal\">\n        NAT网关统一 ID，参数不支持同时指定 NatGatewayIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n      switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n  <multi-condition type=\"'input'\" value=\"target.queries.NatGatewayIds\" on-change=\"onChange()\">\n  </multi-condition>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-10\">\n      Filters\n      <info-popover mode=\"right-normal\">\n        过滤条件，参数不支持同时指定NatGatewayIds和Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n      on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n  <div class=\"gf-form-inline\" ng-repeat=\"field in NATGatewayFilterFieldsDescriptor\">\n    <label class=\"gf-form-label width-14\">\n      {{ field.key }}\n      <info-popover mode=\"right-normal\">\n        {{ field.cnDescriptor }}\n        <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n      </info-popover>\n    </label>\n    <multi-condition\n      ng-if=\"field.type === 'dropdownmulti'\"\n      type=\"'dropdown'\"\n      value=\"target.queries.Filters[field.key]\"\n      get-options=\"getDropdown(field.key)\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputNumbermulti'\"\n      type=\"'inputNumber'\"\n      value=\"target.queries.Filters[field.key]\"\n      maxNum=\"field.max\"\n      minNum=\"field.min\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputmulti'\"\n      type=\"'input'\"\n      value=\"target.queries.Filters[field.key]\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <custom-select-dropdown\n      ng-if=\"field.type === 'select'\"\n      value=\"target.queries.Filters[field.key]\"\n      options=\"field.list\"\n      multiple=\"true\"\n      on-change=\"onChange()\"\n    ></custom-select-dropdown>\n  </div>\n</div>\n\n</div>\n`;\n\nexport function natGatewayQuery() {\n  return {\n    template: template,\n    controller: NatGatewayQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('natGatewayQuery', natGatewayQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { OVCDNFilterFieldsDescriptor } from './query_def';\n\nexport class OVCDNQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.OVCDNFilterFieldsDescriptor = OVCDNFilterFieldsDescriptor;\n    };\n\n    // $scope.onChecked = (srcField, dstField) => {\n    //   if ($scope.target.queries[srcField] === true) {\n    //     $scope.target.queries[dstField] = false;\n    //   }\n    //   $scope.onChange();\n    // };\n\n    // $scope.getDropdown = (field) => {\n    //   switch (field) {\n    //     case 'zone':\n    //       return $scope.getZones();\n    //     default:\n    //       return [];\n    //   }\n    // };\n\n    // $scope.getZones = () => {\n    //   if (!$scope.region) {\n    //     return [];\n    //   }\n    //   return $scope.datasource.getZones('cvm', $scope.region);\n    // };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/213/15728\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        单次请求返回的数量，默认为20，最小值为1，最大值为100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\" ng-repeat=\"field in OVCDNFilterFieldsDescriptor\">\n<label class=\"gf-form-label width-14\">\n  {{ field.key }}\n  <info-popover mode=\"right-normal\">\n    {{ field.cnDescriptor }}\n    <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n  </info-popover>\n</label>\n<multi-condition\n  ng-if=\"field.type === 'inputNumbermulti'\"\n  type=\"'inputNumber'\"\n  max-cond=\"5\"\n  value=\"target.queries.Filters[field.key]\"\n  maxNum=\"field.max\"\n  minNum=\"field.min\"\n  on-change=\"onChange()\"\n></multi-condition>\n<multi-condition\n  ng-if=\"field.type === 'inputmulti'\"\n  type=\"'input'\"\n  max-cond=\"5\"\n  value=\"target.queries.Filters[field.key]\"\n  on-change=\"onChange()\"\n></multi-condition>\n<custom-select-dropdown\n  ng-if=\"field.type === 'select'\"\n  value=\"target.queries.Filters[field.key]\"\n  options=\"field.list\"\n  multiple=\"true\"\n  on-change=\"onChange()\"\n></custom-select-dropdown>\n</div>\n\n</div>\n`;\n\nexport function ovCdnQuery() {\n  return {\n    template: template,\n    controller: OVCDNQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('ovCdnQuery', ovCdnQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { PCXFieldsDescriptor } from './query_def';\n\nexport class PCXQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.PCXFieldsDescriptor = PCXFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        case 'vpcId':\n          return $scope.getVpcIds();\n        default:\n          return [];\n      }\n    };\n\n    $scope.getVpcIds = () => {\n      if (!$scope.region) {\n        return [];\n      }\n      return $scope.datasource.getVpcIds('pcx', $scope.region);\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/215/2101\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in PCXFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <gf-form-dropdown\n        ng-if=\"field.type === 'dropdown'\"\n        model=\"target.queries[field.key]\"\n        allow-custom=\"true\"\n        lookup-text=\"true\"\n        get-options=\"getDropdown(field.key)\"\n        on-change=\"onChange()\"\n        css-class=\"min-width-10\"\n      ></gf-form-dropdown>\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n\n</div>\n`;\n\nexport function pcxQuery() {\n  return {\n    template: template,\n    controller: PCXQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('pcxQuery', pcxQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { RedisFieldsDescriptor } from './query_def';\n\nexport class RedisQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.RedisFieldsDescriptor = RedisFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        default:\n          return [];\n      }\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/240/35769\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in RedisFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <gf-form-dropdown\n        ng-if=\"field.type === 'dropdown'\"\n        model=\"target.queries[field.key]\"\n        allow-custom=\"true\"\n        lookup-text=\"true\"\n        get-options=\"getDropdown(field.key)\"\n        on-change=\"onChange()\"\n        css-class=\"min-width-10\"\n      ></gf-form-dropdown>\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n\n</div>\n`;\n\nexport function redisQuery() {\n  return {\n    template: template,\n    controller: RedisQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('redisQuery', redisQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { map } from 'lodash';\nimport { RedisMemFieldsDescriptor, templateQueryIdMap, NodeType, namespace } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nexport class RedisMemQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.RedisMemFieldsDescriptor = RedisMemFieldsDescriptor;\n    };\n\n    $scope.clearExtrasAlias = () => {\n      $scope.target.rnodeid = '';\n      $scope.target.pnodeid = '';\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        default:\n          return [];\n      }\n    };\n\n    $scope.getVariableId = (data, type) => {\n      let variableData = data;\n      const service = GetServiceFromNamespace(namespace);\n\n      variableData = $scope.datasource.getServiceFn(service, 'getVariable')(variableData);\n      if (!variableData) {\n        return '';\n      }\n      try {\n        variableData = JSON.parse(variableData)[templateQueryIdMap[type]];\n      } catch (error) {}\n      return variableData;\n    };\n\n    $scope.getExtraDropdown = async (target, nodetype) => {\n      const { instance } = $scope.target;\n      const service = GetServiceFromNamespace(namespace);\n      const instanceId = $scope.getVariableId(instance, 'instance');\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const rs = await $scope.datasource.getServiceFn(service, 'getInstanceNodeInfo')({ region, instanceId });\n\n      const ndoeTypeIndex = NodeType.indexOf(nodetype);\n      return ndoeTypeIndex === -1 ? [] : map(rs[ndoeTypeIndex], (item) => ({ text: item.NodeId, value: item.NodeId }));\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/240/35769\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in RedisMemFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <gf-form-dropdown\n        ng-if=\"field.type === 'dropdown'\"\n        model=\"target.queries[field.key]\"\n        allow-custom=\"true\"\n        lookup-text=\"true\"\n        get-options=\"getDropdown(field.key)\"\n        on-change=\"onChange()\"\n        css-class=\"min-width-10\"\n      ></gf-form-dropdown>\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n\n</div>\n\n<div class=\"gf-form-inline\" ng-if=\"target.instance && dims.rnodeid\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label query-keyword width-9\">\n      RedisNode\n    </label>\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n      <gf-form-dropdown model=\"target.rnodeid\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getExtraDropdown(target, 'Redis')\"\n        on-change=\"onRefresh()\" css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n  </div>\n</div>\n<div class=\"gf-form-inline\" ng-if=\"target.instance && dims.pnodeid\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label query-keyword width-9\">\n      ProxyNode\n    </label>\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n      <gf-form-dropdown model=\"target.pnodeid\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getExtraDropdown(target, 'Proxy')\"\n        on-change=\"onRefresh()\" css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n  </div>\n</div>\n`;\n\nexport function redisMemQuery() {\n  return {\n    template: template,\n    controller: RedisMemQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n    link: (scope, element, attrs) => {\n      scope.$watch('target.instance', () => {\n        scope.clearExtrasAlias?.();\n      });\n      scope.$watch('target.metricName', () => {\n        scope.clearExtrasAlias?.();\n      });\n    },\n  };\n}\n\ncoreModule.directive('redisMemQuery', redisMemQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { SCFQueryDescriptor, templateQueryIdMap } from './query_def';\n\nexport class SCFQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.SCFQueryDescriptor = SCFQueryDescriptor;\n    };\n\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      instance = $scope.datasource.getServiceFn('scf', 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance).FunctionName;\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n\n    $scope.getVersions = async (target) => {\n      // console.log(2222);\n\n      // return [{ text: 1, value: 1 }];\n      // console.log(target, 'target');\n      // let { instance, region } = target;\n      const FunctionName = $scope.getInstanceId();\n      const region = $scope.datasource.getServiceFn('scf', 'getVariable')(target.region);\n      if (!FunctionName || !region) return [];\n\n      const fetcher = $scope.datasource.getServiceFn('scf', 'getVersions');\n\n      return fetcher(region, { FunctionName }).then((res) => {\n        // console.log(res, 'res');\n        const result = res.map((o) => {\n          o._InstanceAliasValue = o[templateQueryIdMap.version];\n          return {\n            text: o[templateQueryIdMap.version],\n            value: JSON.stringify(o),\n          };\n        });\n        return result;\n      });\n    };\n    // $scope.onChecked = (srcField, dstField) => {\n    //   if ($scope.target.queries[srcField] === true) {\n    //     $scope.target.queries[dstField] = false;\n    //   }\n    //   $scope.onChange();\n    // };\n\n    // $scope.getDropdown = (field) => {\n    //   switch (field) {\n    //     case 'zone':\n    //       return $scope.getZones();\n    //     default:\n    //       return [];\n    //   }\n    // };\n\n    // $scope.getZones = () => {\n    //   if (!$scope.region) {\n    //     return [];\n    //   }\n    //   return $scope.datasource.getZones('cvm', $scope.region);\n    // };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/583/18582\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in SCFQueryDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- version部分 -->\n<div class=\"gf-form-inline\" ng-if=\"target.instance\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label query-keyword width-9\">Version</label>\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n      <gf-form-dropdown model=\"target.version\" allow-custom=\"false\" get-options=\"getVersions(target)\"\n        on-change=\"onRefresh()\" css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n  </div>\n</div>\n\n  </div>\n`;\n\nexport function scfQuery() {\n  return {\n    template: template,\n    controller: SCFQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n    },\n  };\n}\ncoreModule.directive('scfQuery', scfQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { TDMQFilterFieldsDescriptor, queryEditorName, namespace, templateQueryIdMap } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nconst ExtraFields = [\n  {\n    label: 'environmentId',\n    field: 'environmentId',\n    action: 'DescribeEnvironments',\n  },\n  {\n    label: 'topicName',\n    field: 'topicName',\n    action: 'DescribeTopics',\n  },\n];\n\nconst dropdownTextConfig = {\n  DescribeTopics: 'topicName',\n  DescribeEnvironments: 'environmentId',\n};\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.TDMQFilterFieldsDescriptor = TDMQFilterFieldsDescriptor;\n      $scope.ExtraFields = ExtraFields;\n      $scope.namespace = namespace;\n    };\n\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      const service = GetServiceFromNamespace($scope.namespace);\n      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance)[templateQueryIdMap.instance];\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}) || item.label in ($scope.dims ?? {}));\n    };\n    $scope.getExtraDropdown = async (target, action) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const payload: any = {\n        Limit: 100,\n        ClusterId: $scope.getInstanceId(),\n      };\n      if (action === 'DescribeTopics') {\n        let evId = $scope.target.environmentId;\n        try {\n          evId = JSON.parse(evId);\n          evId = evId[templateQueryIdMap.environmentId];\n        } catch (e) {}\n        payload.EnvironmentId = evId;\n      }\n\n      const rs = await $scope.datasource.getServiceFn(service, 'getConsumerList')({ region, action, payload });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[templateQueryIdMap[dropdownTextConfig[action]]];\n        return {\n          text: o[templateQueryIdMap[dropdownTextConfig[action]]],\n          label: o[templateQueryIdMap[dropdownTextConfig[action]]],\n          value: JSON.stringify(o),\n        };\n      });\n      return result;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Functions are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/50388\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\" ng-repeat=\"field in TDMQFilterFieldsDescriptor\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <input\n          ng-if=\"field.type === 'inputNumber'\"\n          style=\"margin-right:2px\"\n          type=\"number\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n          ng-min=\"field.min\"\n          ng-max=\"field.max\"\n        />\n        <input\n          ng-if=\"field.type === 'input'\"\n          style=\"margin-right:2px\"\n          type=\"text\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n        />    \n        <multi-condition\n          ng-if=\"field.type === 'inputNumberMulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputMulti'\"\n          type=\"'input'\"\n          value=\"target.queries[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries[field.key]\"\n          options=\"field.list\"\n          multiple=\"field.multiple || false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n\n<!-- 起始区域 目的区域等 -->\n  <div\">\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(target, extra.action)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive(queryEditorName, sQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { TSFFieldsDescriptor } from './query_def';\n\nexport class TSFQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.TSFFieldsDescriptor = TSFFieldsDescriptor;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/649/36090\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in TSFFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n\n</div>\n`;\n\nexport function tsfQuery() {\n  return {\n    template: template,\n    controller: TSFQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('tsfQuery', tsfQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { VBCFilterFieldsDescriptor, namespace } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nconst ExtraFields: any = [\n  // {\n  //   label: 'SRegion',\n  //   field: 'SRegion',\n  // },\n  // {\n  //   label: 'DRegion',\n  //   field: 'DRegion',\n  // },\n];\n\nexport class VBCQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.VBCFilterFieldsDescriptor = VBCFilterFieldsDescriptor;\n      $scope.namespace = namespace;\n    };\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}));\n    };\n\n    $scope.getExtraDropdown = (field) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      // return $scope.datasource.getServiceFn(service, 'getFilterDropdown')({ field })\n      return $scope.datasource.getFilterDropdown(service, { field });\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/45073\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in VBCFilterFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputNumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />    \n      <multi-condition\n        ng-if=\"field.type === 'inputNumberMulti'\"\n        type=\"'inputNumber'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        maxNum=\"field.max\"\n        minNum=\"field.min\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputMulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- 起始区域 目的区域等 -->\n  <div>\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(extra.field)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport function scfQuery() {\n  return {\n    template: template,\n    controller: VBCQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive('vbcQuery', scfQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","var map = {\n\t\".\": 15,\n\t\"./\": 15,\n\t\"./MonitorDatasource\": 167,\n\t\"./MonitorDatasource.ts\": 167,\n\t\"./_base/datasource\": 1,\n\t\"./_base/datasource.ts\": 1,\n\t\"./_base/query\": 5,\n\t\"./_base/query.ts\": 5,\n\t\"./_base/query_filter\": 170,\n\t\"./_base/query_filter.ts\": 170,\n\t\"./_base/types\": 171,\n\t\"./_base/types.ts\": 171,\n\t\"./apigateway/datasource\": 64,\n\t\"./apigateway/datasource.ts\": 64,\n\t\"./apigateway/query\": 115,\n\t\"./apigateway/query.ts\": 115,\n\t\"./apigateway/query_def\": 17,\n\t\"./apigateway/query_def.ts\": 17,\n\t\"./bmIntraLb/datasource\": 65,\n\t\"./bmIntraLb/datasource.ts\": 65,\n\t\"./bmIntraLb/query\": 116,\n\t\"./bmIntraLb/query.ts\": 116,\n\t\"./bmIntraLb/query_def\": 25,\n\t\"./bmIntraLb/query_def.ts\": 25,\n\t\"./bm_lb/datasource\": 66,\n\t\"./bm_lb/datasource.ts\": 66,\n\t\"./bm_lb/query\": 117,\n\t\"./bm_lb/query.ts\": 117,\n\t\"./bm_lb/query_def\": 26,\n\t\"./bm_lb/query_def.ts\": 26,\n\t\"./bm_pcx/datasource\": 67,\n\t\"./bm_pcx/datasource.ts\": 67,\n\t\"./bm_pcx/query\": 118,\n\t\"./bm_pcx/query.ts\": 118,\n\t\"./bm_pcx/query_def\": 27,\n\t\"./bm_pcx/query_def.ts\": 27,\n\t\"./bwp/datasource\": 68,\n\t\"./bwp/datasource.ts\": 68,\n\t\"./bwp/query\": 119,\n\t\"./bwp/query.ts\": 119,\n\t\"./bwp/query_def\": 56,\n\t\"./bwp/query_def.ts\": 56,\n\t\"./cbs/datasource\": 69,\n\t\"./cbs/datasource.ts\": 69,\n\t\"./cbs/query\": 120,\n\t\"./cbs/query.ts\": 120,\n\t\"./cbs/query_def\": 28,\n\t\"./cbs/query_def.ts\": 28,\n\t\"./cdb/datasource\": 70,\n\t\"./cdb/datasource.ts\": 70,\n\t\"./cdb/query\": 121,\n\t\"./cdb/query.ts\": 121,\n\t\"./cdb/query_def\": 48,\n\t\"./cdb/query_def.ts\": 48,\n\t\"./cdn/datasource\": 71,\n\t\"./cdn/datasource.ts\": 71,\n\t\"./cdn/query\": 122,\n\t\"./cdn/query.ts\": 122,\n\t\"./cdn/query_def\": 57,\n\t\"./cdn/query_def.ts\": 57,\n\t\"./cdn_province/datasource\": 72,\n\t\"./cdn_province/datasource.ts\": 72,\n\t\"./cdn_province/query\": 123,\n\t\"./cdn_province/query.ts\": 123,\n\t\"./cdn_province/query_def\": 29,\n\t\"./cdn_province/query_def.ts\": 29,\n\t\"./ceip_summary/datasource\": 73,\n\t\"./ceip_summary/datasource.ts\": 73,\n\t\"./ceip_summary/query\": 124,\n\t\"./ceip_summary/query.ts\": 124,\n\t\"./ceip_summary/query_def\": 30,\n\t\"./ceip_summary/query_def.ts\": 30,\n\t\"./ces/datasource\": 74,\n\t\"./ces/datasource.ts\": 74,\n\t\"./ces/query\": 125,\n\t\"./ces/query.ts\": 125,\n\t\"./ces/query_def\": 38,\n\t\"./ces/query_def.ts\": 38,\n\t\"./cfs/datasource\": 75,\n\t\"./cfs/datasource.ts\": 75,\n\t\"./cfs/query\": 126,\n\t\"./cfs/query.ts\": 126,\n\t\"./cfs/query_def\": 50,\n\t\"./cfs/query_def.ts\": 50,\n\t\"./ckafka/datasource\": 76,\n\t\"./ckafka/datasource.ts\": 76,\n\t\"./ckafka/query\": 127,\n\t\"./ckafka/query.ts\": 127,\n\t\"./ckafka/query_def\": 8,\n\t\"./ckafka/query_def.ts\": 8,\n\t\"./clb/datasource\": 77,\n\t\"./clb/datasource.ts\": 77,\n\t\"./clb/query\": 128,\n\t\"./clb/query.ts\": 128,\n\t\"./clb/query_def\": 10,\n\t\"./clb/query_def.ts\": 10,\n\t\"./cls/datasource\": 78,\n\t\"./cls/datasource.ts\": 78,\n\t\"./cls/query\": 129,\n\t\"./cls/query.ts\": 129,\n\t\"./cls/query_def\": 22,\n\t\"./cls/query_def.ts\": 22,\n\t\"./cmq/datasource\": 79,\n\t\"./cmq/datasource.ts\": 79,\n\t\"./cmq/query\": 130,\n\t\"./cmq/query.ts\": 130,\n\t\"./cmq/query_def\": 51,\n\t\"./cmq/query_def.ts\": 51,\n\t\"./cmq_topic/datasource\": 80,\n\t\"./cmq_topic/datasource.ts\": 80,\n\t\"./cmq_topic/query\": 131,\n\t\"./cmq_topic/query.ts\": 131,\n\t\"./cmq_topic/query_def\": 31,\n\t\"./cmq_topic/query_def.ts\": 31,\n\t\"./cos/datasource\": 81,\n\t\"./cos/datasource.ts\": 81,\n\t\"./cos/query_def\": 132,\n\t\"./cos/query_def.ts\": 132,\n\t\"./cpm/datasource\": 82,\n\t\"./cpm/datasource.ts\": 82,\n\t\"./cpm/query\": 133,\n\t\"./cpm/query.ts\": 133,\n\t\"./cpm/query_def\": 32,\n\t\"./cpm/query_def.ts\": 32,\n\t\"./cvm/datasource\": 83,\n\t\"./cvm/datasource.ts\": 83,\n\t\"./cvm/query\": 134,\n\t\"./cvm/query.ts\": 134,\n\t\"./cvm/query_def\": 52,\n\t\"./cvm/query_def.ts\": 52,\n\t\"./cynosdb_mysql/datasource\": 84,\n\t\"./cynosdb_mysql/datasource.ts\": 84,\n\t\"./cynosdb_mysql/query\": 135,\n\t\"./cynosdb_mysql/query.ts\": 135,\n\t\"./cynosdb_mysql/query_def\": 20,\n\t\"./cynosdb_mysql/query_def.ts\": 20,\n\t\"./dc/datasource\": 85,\n\t\"./dc/datasource.ts\": 85,\n\t\"./dc/query\": 136,\n\t\"./dc/query.ts\": 136,\n\t\"./dc/query_def\": 39,\n\t\"./dc/query_def.ts\": 39,\n\t\"./dcdb/datasource\": 86,\n\t\"./dcdb/datasource.ts\": 86,\n\t\"./dcdb/query\": 137,\n\t\"./dcdb/query.ts\": 137,\n\t\"./dcdb/query_def\": 13,\n\t\"./dcdb/query_def.ts\": 13,\n\t\"./dcg/datasource\": 87,\n\t\"./dcg/datasource.ts\": 87,\n\t\"./dcg/query\": 138,\n\t\"./dcg/query.ts\": 138,\n\t\"./dcg/query_def\": 40,\n\t\"./dcg/query_def.ts\": 40,\n\t\"./dcx/datasource\": 88,\n\t\"./dcx/datasource.ts\": 88,\n\t\"./dcx/query\": 139,\n\t\"./dcx/query.ts\": 139,\n\t\"./dcx/query_def\": 41,\n\t\"./dcx/query_def.ts\": 41,\n\t\"./ecm/datasource\": 89,\n\t\"./ecm/datasource.ts\": 89,\n\t\"./ecm/query\": 140,\n\t\"./ecm/query.ts\": 140,\n\t\"./ecm/query_def\": 33,\n\t\"./ecm/query_def.ts\": 33,\n\t\"./ecm_block_storage/datasource\": 90,\n\t\"./ecm_block_storage/datasource.ts\": 90,\n\t\"./ecm_block_storage/query\": 141,\n\t\"./ecm_block_storage/query.ts\": 141,\n\t\"./ecm_block_storage/query_def\": 16,\n\t\"./ecm_block_storage/query_def.ts\": 16,\n\t\"./ecm_lb/datasource\": 91,\n\t\"./ecm_lb/datasource.ts\": 91,\n\t\"./ecm_lb/query\": 142,\n\t\"./ecm_lb/query.ts\": 142,\n\t\"./ecm_lb/query_def\": 42,\n\t\"./ecm_lb/query_def.ts\": 42,\n\t\"./gse/datasource\": 92,\n\t\"./gse/datasource.ts\": 92,\n\t\"./gse/query\": 143,\n\t\"./gse/query.ts\": 143,\n\t\"./gse/query_def\": 12,\n\t\"./gse/query_def.ts\": 12,\n\t\"./index\": 15,\n\t\"./index.ts\": 15,\n\t\"./lb/datasource\": 93,\n\t\"./lb/datasource.ts\": 93,\n\t\"./lb/query\": 144,\n\t\"./lb/query.ts\": 144,\n\t\"./lb/query_def\": 58,\n\t\"./lb/query_def.ts\": 58,\n\t\"./lighthouse/datasource\": 94,\n\t\"./lighthouse/datasource.ts\": 94,\n\t\"./lighthouse/query\": 145,\n\t\"./lighthouse/query.ts\": 145,\n\t\"./lighthouse/query_def\": 49,\n\t\"./lighthouse/query_def.ts\": 49,\n\t\"./mongodb/datasource\": 95,\n\t\"./mongodb/datasource.ts\": 95,\n\t\"./mongodb/query\": 146,\n\t\"./mongodb/query.ts\": 146,\n\t\"./mongodb/query_def\": 59,\n\t\"./mongodb/query_def.ts\": 59,\n\t\"./mr/datasource\": 96,\n\t\"./mr/datasource.ts\": 96,\n\t\"./mr/query\": 147,\n\t\"./mr/query.ts\": 147,\n\t\"./mr/query_def\": 18,\n\t\"./mr/query_def.ts\": 18,\n\t\"./nat_gateway/datasource\": 97,\n\t\"./nat_gateway/datasource.ts\": 97,\n\t\"./nat_gateway/query\": 148,\n\t\"./nat_gateway/query.ts\": 148,\n\t\"./nat_gateway/query_def\": 60,\n\t\"./nat_gateway/query_def.ts\": 60,\n\t\"./ov_cdn/datasource\": 98,\n\t\"./ov_cdn/datasource.ts\": 98,\n\t\"./ov_cdn/query\": 149,\n\t\"./ov_cdn/query.ts\": 149,\n\t\"./ov_cdn/query_def\": 61,\n\t\"./ov_cdn/query_def.ts\": 61,\n\t\"./pcx/datasource\": 99,\n\t\"./pcx/datasource.ts\": 99,\n\t\"./pcx/query\": 150,\n\t\"./pcx/query.ts\": 150,\n\t\"./pcx/query_def\": 53,\n\t\"./pcx/query_def.ts\": 53,\n\t\"./postgresql/datasource\": 100,\n\t\"./postgresql/datasource.ts\": 100,\n\t\"./postgresql/query\": 151,\n\t\"./postgresql/query.ts\": 151,\n\t\"./postgresql/query_def\": 34,\n\t\"./postgresql/query_def.ts\": 34,\n\t\"./qaap/datasource\": 101,\n\t\"./qaap/datasource.ts\": 101,\n\t\"./qaap/query\": 152,\n\t\"./qaap/query.ts\": 152,\n\t\"./qaap/query_def\": 43,\n\t\"./qaap/query_def.ts\": 43,\n\t\"./redis/datasource\": 102,\n\t\"./redis/datasource.ts\": 102,\n\t\"./redis/query\": 153,\n\t\"./redis/query.ts\": 153,\n\t\"./redis/query_def\": 54,\n\t\"./redis/query_def.ts\": 54,\n\t\"./redis_mem/datasource\": 103,\n\t\"./redis_mem/datasource.ts\": 103,\n\t\"./redis_mem/query\": 154,\n\t\"./redis_mem/query.ts\": 154,\n\t\"./redis_mem/query_def\": 14,\n\t\"./redis_mem/query_def.ts\": 14,\n\t\"./scf/datasource\": 104,\n\t\"./scf/datasource.ts\": 104,\n\t\"./scf/query\": 155,\n\t\"./scf/query.ts\": 155,\n\t\"./scf/query_def\": 21,\n\t\"./scf/query_def.ts\": 21,\n\t\"./sqlserver/datasource\": 105,\n\t\"./sqlserver/datasource.ts\": 105,\n\t\"./sqlserver/query\": 156,\n\t\"./sqlserver/query.ts\": 156,\n\t\"./sqlserver/query_def\": 23,\n\t\"./sqlserver/query_def.ts\": 23,\n\t\"./tcaplus/datasource\": 106,\n\t\"./tcaplus/datasource.ts\": 106,\n\t\"./tcaplus/query\": 157,\n\t\"./tcaplus/query.ts\": 157,\n\t\"./tcaplus/query_def\": 35,\n\t\"./tcaplus/query_def.ts\": 35,\n\t\"./tdmq/datasource\": 107,\n\t\"./tdmq/datasource.ts\": 107,\n\t\"./tdmq/query\": 158,\n\t\"./tdmq/query.ts\": 158,\n\t\"./tdmq/query_def\": 11,\n\t\"./tdmq/query_def.ts\": 11,\n\t\"./tsf/datasource\": 108,\n\t\"./tsf/datasource.ts\": 108,\n\t\"./tsf/query\": 159,\n\t\"./tsf/query.ts\": 159,\n\t\"./tsf/query_def\": 55,\n\t\"./tsf/query_def.ts\": 55,\n\t\"./v_clb/datasource\": 109,\n\t\"./v_clb/datasource.ts\": 109,\n\t\"./v_clb/query\": 160,\n\t\"./v_clb/query.ts\": 160,\n\t\"./v_clb/query_def\": 19,\n\t\"./v_clb/query_def.ts\": 19,\n\t\"./vbc/datasource\": 110,\n\t\"./vbc/datasource.ts\": 110,\n\t\"./vbc/query\": 161,\n\t\"./vbc/query.ts\": 161,\n\t\"./vbc/query_def\": 44,\n\t\"./vbc/query_def.ts\": 44,\n\t\"./vpc_net_detect/datasource\": 111,\n\t\"./vpc_net_detect/datasource.ts\": 111,\n\t\"./vpc_net_detect/query\": 162,\n\t\"./vpc_net_detect/query.ts\": 162,\n\t\"./vpc_net_detect/query_def\": 36,\n\t\"./vpc_net_detect/query_def.ts\": 36,\n\t\"./vpngw/datasource\": 112,\n\t\"./vpngw/datasource.ts\": 112,\n\t\"./vpngw/query\": 163,\n\t\"./vpngw/query.ts\": 163,\n\t\"./vpngw/query_def\": 45,\n\t\"./vpngw/query_def.ts\": 45,\n\t\"./vpnx/datasource\": 113,\n\t\"./vpnx/datasource.ts\": 113,\n\t\"./vpnx/query\": 164,\n\t\"./vpnx/query.ts\": 164,\n\t\"./vpnx/query_def\": 46,\n\t\"./vpnx/query_def.ts\": 46,\n\t\"./waf/datasource\": 114,\n\t\"./waf/datasource.ts\": 114,\n\t\"./waf/query\": 165,\n\t\"./waf/query.ts\": 165,\n\t\"./waf/query_def\": 47,\n\t\"./waf/query_def.ts\": 47\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 166;","import _ from 'lodash';\nimport { Datasources, SERVICES } from './index';\nimport { GetServiceFromNamespace, ParseMetricQuery } from '../common/constants';\nimport { serviceGroupBy } from '../common/utils';\nimport { LoadingState } from '@grafana/data';\n\nexport default interface DatasourceInterface {\n  instanceSettings: any;\n  backendSrv: any;\n  templateSrv: any;\n  query: (options: any) => any;\n  testDatasource: () => any;\n  metricFindQuery: (query: any) => any;\n  getRegions?: (service: string) => any;\n  getMetrics: (service: string, region: string) => any;\n  getInstances: (service: string, region: string, params: any) => any;\n  getZones?: (service: string, region: string) => any;\n}\n\nexport class TCMonitorDatasource implements DatasourceInterface {\n  instanceSettings: any;\n  backendSrv: any;\n  templateSrv: any;\n\n  /** @ngInject */\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    this.instanceSettings = instanceSettings;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    _.forEach(Datasources, (_class: any, key) => {\n      this[key] = new _class(this.instanceSettings, this.backendSrv, this.templateSrv);\n    });\n  }\n\n  // 根据 Datasource Config 配置时勾选的监控服务项，获取相应的命名空间\n  getNamespaces() {\n    const namespaces: any[] = [];\n    _.forEach(SERVICES, (service) => {\n      if (this.instanceSettings.jsonData[service.service] === true) {\n        // namespaces.push(service.namespace);\n        namespaces.push(service);\n      }\n    });\n    return namespaces;\n  }\n\n  getCascaderNamespaces() {\n    const validServices = SERVICES.filter((service) => this.instanceSettings.jsonData[service.service]);\n    return serviceGroupBy(validServices);\n  }\n\n  getSelectedServices() {\n    const namespaces = this.getNamespaces();\n    return _.map(namespaces, ({ namespace }) => {\n      return GetServiceFromNamespace(namespace);\n    });\n  }\n\n  /**\n   * 根据 Panel 的配置项，获取相应的监控数据\n   *\n   * @param options Panel 的配置参数，示例如下\n   *  {\n   *     cacheTimeout: undefined,\n   *     dashboardId: 41,\n   *     interval: \"30s\",\n   *     intervalMs: 30000,\n   *     maxDataPoints: 554,\n   *     panelId: 2,\n   *     range: {\n   *        from: Moment,\n   *        to: Moment,\n   *        raw: {from: \"now-6h\", to: \"now\"}\n   *     },\n   *     rangeRaw: {from: \"now-6h\", to: \"now\"},\n   *     scopedVars: {__interval: {…}, __interval_ms: {…}}\n   *     targets: [\n   *       {\n   *          namespace: \"QCE/CVM\",\n   *          refId: \"A\",\n   *          service: \"cvm\",\n   *          showInstanceDetails: false,\n   *          cvm: {\n   *            dimensionObject: {InstanceId: {…}}\n   *            instance: \"\",\n   *            instanceAlias: \"InstanceId\",\n   *            metricName: \"AccOuttraffic\",\n   *            metricUnit: \"MB\",\n   *            period: 10,\n   *            queries: {Filters: {…}, InstanceIds: Array(1), Limit: 20, Offset: 0, filtersChecked: false, …},\n   *            region: \"ap-beijing\"\n   *          },\n   *          cdb: {},\n   *       },\n   *     ],\n   *     timezone: \"browser\"\n   *   }\n   * @return 返回数据对象，示例如下\n   * {\n   *   data: [\n   *     {\n   *       \"target\": \"AccOuttraffic - ins-123\",\n   *       \"datapoints\": [\n   *         [861, 1450754160000],\n   *         [767, 1450754220000]\n   *       ]\n   *     }\n   *   ]\n   * }\n   */\n  query(options: any) {\n    const promises: any[] = [];\n    const services = this.getSelectedServices();\n    _.forEach(services, (service) => {\n      const optionsTemp = _.cloneDeep(options);\n      const targets = _.filter(optionsTemp.targets, (item) => item.service === service);\n      optionsTemp.targets = targets;\n      if (optionsTemp.targets.length > 0) {\n        const promiseTemp = this[`${_.toUpper(service)}Datasource`].query(optionsTemp);\n        if (promiseTemp) {\n          promises.push(promiseTemp);\n        }\n      }\n    });\n    if (promises.length === 0) {\n      return Promise.resolve({ data: [], state: LoadingState.Done });\n    }\n    return Promise.all(promises).then((results) => {\n      return { data: _.flatten(results), state: LoadingState.Done };\n    });\n  }\n\n  /**\n   * 获取模板变量的选择项列表\n   *\n   * @param query 模板变量配置填写的 Query 参数字符串\n   */\n  metricFindQuery(query: string, options?: any) {\n    const queries = ParseMetricQuery(query);\n    const service = GetServiceFromNamespace(queries['namespace'] || '');\n\n    if (_.isEmpty(queries) || !queries['namespace'] || !queries['action'] || !service) {\n      return Promise.resolve([]);\n    }\n    if (this[`${_.toUpper(service)}Datasource`].metricFindQuery) {\n      const result = this[`${_.toUpper(service)}Datasource`].metricFindQuery(\n        queries,\n        _.get(options, 'variable.regex', undefined)\n      );\n      if (result) {\n        return result;\n      }\n    }\n    return Promise.resolve([]);\n  }\n\n  /**\n   * 获取地域列表\n   * @param service\n   */\n  getRegions(service) {\n    if (this[`${_.toUpper(service)}Datasource`].getRegions) {\n      return this[`${_.toUpper(service)}Datasource`].getRegions();\n    }\n    return [];\n  }\n\n  /**\n   * 获取监控指标列表\n   * @param service\n   * @param region\n   */\n  getMetrics(service, region) {\n    return this[`${_.toUpper(service)}Datasource`].getMetrics(region);\n  }\n\n  /**\n   * 获取可用区列表\n   * @param service\n   * @param region\n   */\n  getZones(service, region) {\n    if (this[`${_.toUpper(service)}Datasource`].getZones) {\n      return this[`${_.toUpper(service)}Datasource`].getZones(region);\n    }\n    return [];\n  }\n\n  /**\n   * 获取filter中dropdown列表\n   * @param service\n   * @param param\n   */\n  getFilterDropdown(service, param) {\n    if (this[`${_.toUpper(service)}Datasource`].getFilterDropdown) {\n      return this[`${_.toUpper(service)}Datasource`].getFilterDropdown(param);\n    }\n    return [];\n  }\n\n  /**\n   * 获取实例列表\n   * @param service\n   * @param region\n   * @param params\n   */\n  getInstances(service, region, params) {\n    return this[`${_.toUpper(service)}Datasource`].getInstances(region, params);\n  }\n\n  /**\n   * 获取监听器列表\n   * @param service\n   * @param region\n   * @param params\n   */\n  getListeners(service, region, instance) {\n    if (!this[`${_.toUpper(service)}Datasource`].getListeners) {\n      return [];\n    }\n    return this[`${_.toUpper(service)}Datasource`].getListeners(region, instance);\n  }\n\n  /**\n   * 获取 私有网络列表\n   * @param service\n   */\n  getVpcIds(service, region) {\n    if (this[`${_.toUpper(service)}Datasource`].getVpcIds) {\n      return this[`${_.toUpper(service)}Datasource`].getVpcIds(region);\n    }\n  }\n\n  // 在 Datasource Config 配置时，验证 SerectId、SerectKey 的有效性，并测试勾选的监控服务项的对应 API 连通性\n  testDatasource() {\n    const promises: any[] = [];\n    const services = this.getSelectedServices();\n    _.forEach(services, (service) => {\n      promises.push(this[`${_.toUpper(service)}Datasource`].testDatasource());\n    });\n    if (promises.length === 0) {\n      return Promise.resolve(null);\n    }\n\n    return Promise.all(promises).then((results) => {\n      let status = 'success';\n      let message = 'DataSource Connection OK';\n\n      const errorMsg = _.reduce(\n        results,\n        (acc, cur) => {\n          if (cur.status === 'error') {\n            if (acc === '') acc += 'Oops! Found an error in: ';\n            acc += `${cur.service}: ${cur.message}; \\n`;\n          }\n          return acc;\n        },\n        ''\n      );\n\n      if (errorMsg) {\n        status = 'error';\n        message = errorMsg;\n      }\n\n      return {\n        status,\n        message,\n        title: _.upperFirst(status),\n      };\n    });\n  }\n\n  getServiceFn(service, fnName) {\n    return (...argu) => {\n      if (!this[`${_.toUpper(service)}Datasource`][fnName]) {\n        return [];\n      }\n      return this[`${_.toUpper(service)}Datasource`][fnName](...argu);\n    };\n  }\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    var obj;\n\n    while (queue.length) {\n        var item = queue.pop();\n        obj = item.obj[item.prop];\n\n        if (Array.isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n\n    return obj;\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (Array.isArray(target)) {\n            target.push(source);\n        } else if (typeof target === 'object') {\n            if (options.plainObjects || options.allowPrototypes || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (Array.isArray(target) && !Array.isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (Array.isArray(target) && Array.isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                if (target[i] && typeof target[i] === 'object') {\n                    target[i] = merge(target[i], item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str) {\n    try {\n        return decodeURIComponent(str.replace(/\\+/g, ' '));\n    } catch (e) {\n        return str;\n    }\n};\n\nvar encode = function encode(str) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = typeof str === 'string' ? str : String(str);\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    return compactQueue(queue);\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (obj === null || typeof obj === 'undefined') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    merge: merge\n};\n","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nmodule.exports = {\n    'default': 'RFC3986',\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return value;\n        }\n    },\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n","import coreModule from 'grafana/app/core/core_module';\nimport { DetailQueryConfig } from './types';\n\nclass SPQueryCtrl {\n  static _config: DetailQueryConfig;\n\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    Object.assign($scope, SPQueryCtrl._config);\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"{{instanceDocUrl}}\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        单次请求返回的数量，默认为20，最小值为1，最大值为100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      InstanceIds\n      <info-popover mode=\"right-normal\">\n        实例 ID，每次请求的实例的上限为100，参数不支持同时指定 InstanceIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n      switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n  <multi-condition type=\"'input'\" max-cond=\"100\" value=\"target.queries.InstanceIds\" on-change=\"onChange()\">\n  </multi-condition>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      Filters\n      <info-popover mode=\"right-normal\">\n        过滤条件，每次请求的 Filters 的上限为10，Filter.Values 的上限为5。参数不支持同时指定 InstanceIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n      on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n  <div class=\"gf-form-inline\" ng-repeat=\"field in CVMFilterFieldsDescriptor\">\n    <label class=\"gf-form-label width-14\">\n      {{ field.key }}\n      <info-popover mode=\"right-normal\">\n        {{ field.cnDescriptor }}\n        <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n      </info-popover>\n    </label>\n    <multi-condition\n      ng-if=\"field.type === 'dropdownmulti'\"\n      type=\"'dropdown'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      get-options=\"getDropdown(field.key)\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputNumbermulti'\"\n      type=\"'inputNumber'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      maxNum=\"field.max\"\n      minNum=\"field.min\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputmulti'\"\n      type=\"'input'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <custom-select-dropdown\n      ng-if=\"field.type === 'select'\"\n      value=\"target.queries.Filters[field.key]\"\n      options=\"field.list\"\n      multiple=\"true\"\n      on-change=\"onChange()\"\n    ></custom-select-dropdown>\n  </div>\n</div>\n</div>\n`;\n\nexport function queryDDO() {\n  return {\n    template: template,\n    controller: SPQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\nexport default (name: string, config: DetailQueryConfig) => {\n  SPQueryCtrl._config = config;\n  coreModule.directive(name, queryDDO);\n};\n","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching\n        return prefix + '[]';\n    },\n    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching\n        return prefix;\n    }\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaults = {\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar stringify = function stringify( // eslint-disable-line func-name-matching\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter,\n    encodeValuesOnly\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (Array.isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        if (Array.isArray(obj)) {\n            values = values.concat(stringify(\n                obj[key],\n                generateArrayPrefix(prefix, key),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly\n            ));\n        } else {\n            values = values.concat(stringify(\n                obj[key],\n                prefix + (allowDots ? '.' + key : '[' + key + ']'),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly\n            ));\n        }\n    }\n\n    return values;\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = opts ? utils.assign({}, opts) : {};\n\n    if (options.encoder !== null && options.encoder !== undefined && typeof options.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var delimiter = typeof options.delimiter === 'undefined' ? defaults.delimiter : options.delimiter;\n    var strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n    var skipNulls = typeof options.skipNulls === 'boolean' ? options.skipNulls : defaults.skipNulls;\n    var encode = typeof options.encode === 'boolean' ? options.encode : defaults.encode;\n    var encoder = typeof options.encoder === 'function' ? options.encoder : defaults.encoder;\n    var sort = typeof options.sort === 'function' ? options.sort : null;\n    var allowDots = typeof options.allowDots === 'undefined' ? false : options.allowDots;\n    var serializeDate = typeof options.serializeDate === 'function' ? options.serializeDate : defaults.serializeDate;\n    var encodeValuesOnly = typeof options.encodeValuesOnly === 'boolean' ? options.encodeValuesOnly : defaults.encodeValuesOnly;\n    if (typeof options.format === 'undefined') {\n        options.format = formats['default'];\n    } else if (!Object.prototype.hasOwnProperty.call(formats.formatters, options.format)) {\n        throw new TypeError('Unknown format option provided.');\n    }\n    var formatter = formats.formatters[options.format];\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (Array.isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (options.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = options.arrayFormat;\n    } else if ('indices' in options) {\n        arrayFormat = options.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (sort) {\n        objKeys.sort(sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        keys = keys.concat(stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            strictNullHandling,\n            skipNulls,\n            encode ? encoder : null,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            formatter,\n            encodeValuesOnly\n        ));\n    }\n\n    var joined = keys.join(delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    parameterLimit: 1000,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n\n    for (var i = 0; i < parts.length; ++i) {\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder);\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder);\n            val = options.decoder(part.slice(pos + 1), defaults.decoder);\n        }\n        if (has.call(obj, key)) {\n            obj[key] = [].concat(obj[key]).concat(val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options) {\n    var leaf = val;\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]') {\n            obj = [];\n            obj = obj.concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys\n        // that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while ((segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options);\n};\n\nmodule.exports = function (str, opts) {\n    var options = opts ? utils.assign({}, opts) : {};\n\n    if (options.decoder !== null && options.decoder !== undefined && typeof options.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    options.ignoreQueryPrefix = options.ignoreQueryPrefix === true;\n    options.delimiter = typeof options.delimiter === 'string' || utils.isRegExp(options.delimiter) ? options.delimiter : defaults.delimiter;\n    options.depth = typeof options.depth === 'number' ? options.depth : defaults.depth;\n    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : defaults.arrayLimit;\n    options.parseArrays = options.parseArrays !== false;\n    options.decoder = typeof options.decoder === 'function' ? options.decoder : defaults.decoder;\n    options.allowDots = typeof options.allowDots === 'boolean' ? options.allowDots : defaults.allowDots;\n    options.plainObjects = typeof options.plainObjects === 'boolean' ? options.plainObjects : defaults.plainObjects;\n    options.allowPrototypes = typeof options.allowPrototypes === 'boolean' ? options.allowPrototypes : defaults.allowPrototypes;\n    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : defaults.parameterLimit;\n    options.strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options);\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n","var map = {\n\t\"./_base/query.ts\": 5,\n\t\"./apigateway/datasource\": 64,\n\t\"./apigateway/datasource.ts\": 64,\n\t\"./apigateway/query.ts\": 115,\n\t\"./apigateway/query_def.ts\": 17,\n\t\"./bmIntraLb/datasource\": 65,\n\t\"./bmIntraLb/datasource.ts\": 65,\n\t\"./bmIntraLb/query.ts\": 116,\n\t\"./bmIntraLb/query_def.ts\": 25,\n\t\"./bm_lb/datasource\": 66,\n\t\"./bm_lb/datasource.ts\": 66,\n\t\"./bm_lb/query.ts\": 117,\n\t\"./bm_lb/query_def.ts\": 26,\n\t\"./bm_pcx/datasource\": 67,\n\t\"./bm_pcx/datasource.ts\": 67,\n\t\"./bm_pcx/query.ts\": 118,\n\t\"./bm_pcx/query_def.ts\": 27,\n\t\"./bwp/datasource\": 68,\n\t\"./bwp/datasource.ts\": 68,\n\t\"./bwp/query.ts\": 119,\n\t\"./bwp/query_def.ts\": 56,\n\t\"./cbs/datasource\": 69,\n\t\"./cbs/datasource.ts\": 69,\n\t\"./cbs/query.ts\": 120,\n\t\"./cbs/query_def.ts\": 28,\n\t\"./cdb/datasource\": 70,\n\t\"./cdb/datasource.ts\": 70,\n\t\"./cdb/query.ts\": 121,\n\t\"./cdb/query_def.ts\": 48,\n\t\"./cdn/datasource\": 71,\n\t\"./cdn/datasource.ts\": 71,\n\t\"./cdn/query.ts\": 122,\n\t\"./cdn/query_def.ts\": 57,\n\t\"./cdn_province/datasource\": 72,\n\t\"./cdn_province/datasource.ts\": 72,\n\t\"./cdn_province/query.ts\": 123,\n\t\"./cdn_province/query_def.ts\": 29,\n\t\"./ceip_summary/datasource\": 73,\n\t\"./ceip_summary/datasource.ts\": 73,\n\t\"./ceip_summary/query.ts\": 124,\n\t\"./ceip_summary/query_def.ts\": 30,\n\t\"./ces/datasource\": 74,\n\t\"./ces/datasource.ts\": 74,\n\t\"./ces/query.ts\": 125,\n\t\"./ces/query_def.ts\": 38,\n\t\"./cfs/datasource\": 75,\n\t\"./cfs/datasource.ts\": 75,\n\t\"./cfs/query.ts\": 126,\n\t\"./cfs/query_def.ts\": 50,\n\t\"./ckafka/datasource\": 76,\n\t\"./ckafka/datasource.ts\": 76,\n\t\"./ckafka/query.ts\": 127,\n\t\"./ckafka/query_def.ts\": 8,\n\t\"./clb/datasource\": 77,\n\t\"./clb/datasource.ts\": 77,\n\t\"./clb/query.ts\": 128,\n\t\"./clb/query_def.ts\": 10,\n\t\"./cls/datasource\": 78,\n\t\"./cls/datasource.ts\": 78,\n\t\"./cls/query.ts\": 129,\n\t\"./cls/query_def.ts\": 22,\n\t\"./cmq/datasource\": 79,\n\t\"./cmq/datasource.ts\": 79,\n\t\"./cmq/query.ts\": 130,\n\t\"./cmq/query_def.ts\": 51,\n\t\"./cmq_topic/datasource\": 80,\n\t\"./cmq_topic/datasource.ts\": 80,\n\t\"./cmq_topic/query.ts\": 131,\n\t\"./cmq_topic/query_def.ts\": 31,\n\t\"./cos/datasource\": 81,\n\t\"./cos/datasource.ts\": 81,\n\t\"./cos/query_def.ts\": 132,\n\t\"./cpm/datasource\": 82,\n\t\"./cpm/datasource.ts\": 82,\n\t\"./cpm/query.ts\": 133,\n\t\"./cpm/query_def.ts\": 32,\n\t\"./cvm/datasource\": 83,\n\t\"./cvm/datasource.ts\": 83,\n\t\"./cvm/query.ts\": 134,\n\t\"./cvm/query_def.ts\": 52,\n\t\"./cynosdb_mysql/datasource\": 84,\n\t\"./cynosdb_mysql/datasource.ts\": 84,\n\t\"./cynosdb_mysql/query.ts\": 135,\n\t\"./cynosdb_mysql/query_def.ts\": 20,\n\t\"./dc/datasource\": 85,\n\t\"./dc/datasource.ts\": 85,\n\t\"./dc/query.ts\": 136,\n\t\"./dc/query_def.ts\": 39,\n\t\"./dcdb/datasource\": 86,\n\t\"./dcdb/datasource.ts\": 86,\n\t\"./dcdb/query.ts\": 137,\n\t\"./dcdb/query_def.ts\": 13,\n\t\"./dcg/datasource\": 87,\n\t\"./dcg/datasource.ts\": 87,\n\t\"./dcg/query.ts\": 138,\n\t\"./dcg/query_def.ts\": 40,\n\t\"./dcx/datasource\": 88,\n\t\"./dcx/datasource.ts\": 88,\n\t\"./dcx/query.ts\": 139,\n\t\"./dcx/query_def.ts\": 41,\n\t\"./ecm/datasource\": 89,\n\t\"./ecm/datasource.ts\": 89,\n\t\"./ecm/query.ts\": 140,\n\t\"./ecm/query_def.ts\": 33,\n\t\"./ecm_block_storage/datasource\": 90,\n\t\"./ecm_block_storage/datasource.ts\": 90,\n\t\"./ecm_block_storage/query.ts\": 141,\n\t\"./ecm_block_storage/query_def.ts\": 16,\n\t\"./ecm_lb/datasource\": 91,\n\t\"./ecm_lb/datasource.ts\": 91,\n\t\"./ecm_lb/query.ts\": 142,\n\t\"./ecm_lb/query_def.ts\": 42,\n\t\"./gse/datasource\": 92,\n\t\"./gse/datasource.ts\": 92,\n\t\"./gse/query.ts\": 143,\n\t\"./gse/query_def.ts\": 12,\n\t\"./lb/datasource\": 93,\n\t\"./lb/datasource.ts\": 93,\n\t\"./lb/query.ts\": 144,\n\t\"./lb/query_def.ts\": 58,\n\t\"./lighthouse/datasource\": 94,\n\t\"./lighthouse/datasource.ts\": 94,\n\t\"./lighthouse/query.ts\": 145,\n\t\"./lighthouse/query_def.ts\": 49,\n\t\"./mongodb/datasource\": 95,\n\t\"./mongodb/datasource.ts\": 95,\n\t\"./mongodb/query.ts\": 146,\n\t\"./mongodb/query_def.ts\": 59,\n\t\"./mr/datasource\": 96,\n\t\"./mr/datasource.ts\": 96,\n\t\"./mr/query.ts\": 147,\n\t\"./mr/query_def.ts\": 18,\n\t\"./nat_gateway/datasource\": 97,\n\t\"./nat_gateway/datasource.ts\": 97,\n\t\"./nat_gateway/query.ts\": 148,\n\t\"./nat_gateway/query_def.ts\": 60,\n\t\"./ov_cdn/datasource\": 98,\n\t\"./ov_cdn/datasource.ts\": 98,\n\t\"./ov_cdn/query.ts\": 149,\n\t\"./ov_cdn/query_def.ts\": 61,\n\t\"./pcx/datasource\": 99,\n\t\"./pcx/datasource.ts\": 99,\n\t\"./pcx/query.ts\": 150,\n\t\"./pcx/query_def.ts\": 53,\n\t\"./postgresql/datasource\": 100,\n\t\"./postgresql/datasource.ts\": 100,\n\t\"./postgresql/query.ts\": 151,\n\t\"./postgresql/query_def.ts\": 34,\n\t\"./qaap/datasource\": 101,\n\t\"./qaap/datasource.ts\": 101,\n\t\"./qaap/query.ts\": 152,\n\t\"./qaap/query_def.ts\": 43,\n\t\"./redis/datasource\": 102,\n\t\"./redis/datasource.ts\": 102,\n\t\"./redis/query.ts\": 153,\n\t\"./redis/query_def.ts\": 54,\n\t\"./redis_mem/datasource\": 103,\n\t\"./redis_mem/datasource.ts\": 103,\n\t\"./redis_mem/query.ts\": 154,\n\t\"./redis_mem/query_def.ts\": 14,\n\t\"./scf/datasource\": 104,\n\t\"./scf/datasource.ts\": 104,\n\t\"./scf/query.ts\": 155,\n\t\"./scf/query_def.ts\": 21,\n\t\"./sqlserver/datasource\": 105,\n\t\"./sqlserver/datasource.ts\": 105,\n\t\"./sqlserver/query.ts\": 156,\n\t\"./sqlserver/query_def.ts\": 23,\n\t\"./tcaplus/datasource\": 106,\n\t\"./tcaplus/datasource.ts\": 106,\n\t\"./tcaplus/query.ts\": 157,\n\t\"./tcaplus/query_def.ts\": 35,\n\t\"./tdmq/datasource\": 107,\n\t\"./tdmq/datasource.ts\": 107,\n\t\"./tdmq/query.ts\": 158,\n\t\"./tdmq/query_def.ts\": 11,\n\t\"./tsf/datasource\": 108,\n\t\"./tsf/datasource.ts\": 108,\n\t\"./tsf/query.ts\": 159,\n\t\"./tsf/query_def.ts\": 55,\n\t\"./v_clb/datasource\": 109,\n\t\"./v_clb/datasource.ts\": 109,\n\t\"./v_clb/query.ts\": 160,\n\t\"./v_clb/query_def.ts\": 19,\n\t\"./vbc/datasource\": 110,\n\t\"./vbc/datasource.ts\": 110,\n\t\"./vbc/query.ts\": 161,\n\t\"./vbc/query_def.ts\": 44,\n\t\"./vpc_net_detect/datasource\": 111,\n\t\"./vpc_net_detect/datasource.ts\": 111,\n\t\"./vpc_net_detect/query.ts\": 162,\n\t\"./vpc_net_detect/query_def.ts\": 36,\n\t\"./vpngw/datasource\": 112,\n\t\"./vpngw/datasource.ts\": 112,\n\t\"./vpngw/query.ts\": 163,\n\t\"./vpngw/query_def.ts\": 45,\n\t\"./vpnx/datasource\": 113,\n\t\"./vpnx/datasource.ts\": 113,\n\t\"./vpnx/query.ts\": 164,\n\t\"./vpnx/query_def.ts\": 46,\n\t\"./waf/datasource\": 114,\n\t\"./waf/datasource.ts\": 114,\n\t\"./waf/query.ts\": 165,\n\t\"./waf/query_def.ts\": 47\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 177;","import { PluginMeta } from '@grafana/data';\nimport { config, getBackendSrv } from '@grafana/runtime';\nimport { TcDataSourceId } from '../datasource/common/constants';\n\nconst backendSrv = getBackendSrv();\n\nconst tcFolder = {\n  uid: 'tencent-cloud-monitor',\n  title: '腾讯云监控',\n  folderId: null,\n};\n\n/**\n * 生成腾讯云专用目录\n * @returns\n */\nasync function getFolderId() {\n  if (tcFolder.folderId) {\n    return tcFolder.folderId;\n  }\n  const folders: any[] = await backendSrv.get('/api/folders');\n  let folderId = folders.find((item) => item.uid === tcFolder.uid)?.id;\n  if (!folderId) {\n    const folder = await backendSrv.post('/api/folders', tcFolder);\n    folderId = folder?.id || 0;\n  }\n  tcFolder.folderId = folderId;\n  return folderId;\n}\n\n/**\n * 请求拦截器，拦截导入按钮的接口请求\n */\nfunction backendInterceptor() {\n  const oldPost = backendSrv.post.bind(getBackendSrv());\n  const pluginId = window.location.pathname.split('/').filter((item) => item)[1];\n  backendSrv.post = async (url, data) => {\n    // 拦截判断：拦截指定接口\n    if (url === '/api/dashboards/import' && data.pluginId === pluginId) {\n      data.folderId = await getFolderId();\n    }\n    return oldPost(url, data);\n  };\n}\n\nbackendInterceptor();\n\nexport class MonitorAppConfigCtrl {\n  static templateUrl = 'components/config.html';\n  appEditCtrl: any;\n  appModel?: PluginMeta;\n  $q: any;\n  configured: boolean;\n\n  /** @ngInject */\n  constructor($scope: any, $injector: any, $q: any) {\n    this.appEditCtrl.setPostUpdateHook(this.postUpdate.bind(this));\n    this.$q = $q;\n    // Make sure it has a JSON Data spot\n    if (!this.appModel) {\n      // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n      this.appModel = {} as PluginMeta;\n    }\n\n    // Required until we get the types sorted on appModel :(\n    const appModel = this.appModel as any;\n    if (!appModel.jsonData) {\n      appModel.jsonData = {};\n    }\n    this.configured = false;\n    if (this.appModel?.enabled) {\n      const datasources = Object.values(config.datasources).filter((ds) => {\n        return ds.type === TcDataSourceId;\n      });\n      if (datasources.length > 0) {\n        this.configured = true;\n      }\n    }\n  }\n\n  async moveToFolder(dashbaordUid: string, folderId: number) {\n    // 获取dashboard\n    const { dashboard } = await backendSrv.get(`/api/dashboards/uid/${dashbaordUid}`);\n    // 移动目录\n    await backendSrv.post('/api/dashboards/db/', {\n      dashboard,\n      folderId,\n      message: '',\n      overwrite: true,\n    });\n  }\n\n  async reviseDashboard() {\n    // 1. 生成腾讯云目录\n    const folderId = await getFolderId();\n    // 2. 获取所有腾讯云插件下的dashboard\n    const rs = await backendSrv.get(`/api/plugins/${this.appModel?.id}/dashboards`);\n\n    // 3. 调用api更新dashboard\n    const pmlist = rs.map((item) => {\n      const { importedUrl } = item;\n      const uid = importedUrl.split('/')[2];\n      if (uid) {\n        return this.moveToFolder(uid, folderId);\n      } else {\n        return Promise.resolve();\n      }\n    });\n\n    return Promise.all(pmlist);\n  }\n\n  async postUpdate() {\n    if (!this.appModel?.enabled) {\n      return;\n    }\n    // enable或者update时，对预设dashboard进行修改\n    await this.reviseDashboard();\n    return this.$q.resolve(true);\n  }\n}\n"],"sourceRoot":""}