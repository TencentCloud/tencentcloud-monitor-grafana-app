{"version":3,"sources":["webpack://TencentCloudMonitorGrafanaApp/webpack/bootstrap","webpack://TencentCloudMonitorGrafanaApp/external \"lodash\"","webpack://TencentCloudMonitorGrafanaApp/./locale/zh_CN.ts","webpack://TencentCloudMonitorGrafanaApp/./locale/en_US.ts","webpack://TencentCloudMonitorGrafanaApp/./locale/index.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/common/sign.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/common/signV2.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/common/constants.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/_base/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/common/utils.ts","webpack://TencentCloudMonitorGrafanaApp/external \"react\"","webpack://TencentCloudMonitorGrafanaApp/external \"app/core/core_module\"","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/_base/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/common/indexedDB.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/common/datasourceStorage.ts","webpack://TencentCloudMonitorGrafanaApp/external \"@grafana/data\"","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ckafka/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/external \"@grafana/ui\"","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/clb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tdmq/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/gse/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcdb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/redis_mem/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tdmq_rabbitmq/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tdmq_rocketmq/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/index.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm_block_storage/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/apigateway/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/mr/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/v_clb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cynosdb_mysql/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/scf/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/external \"@grafana/runtime\"","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cls/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/sqlserver/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bmIntraLb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bm_lb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bm_pcx/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cbs/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdn_province/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ceip_summary/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cmq_topic/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cpm/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecdn/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/postgresql/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpc_net_detect/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/waf/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ces/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dc/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcg/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcx/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm_lb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/mongodb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/qaap/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tcaplus/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vbc/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpngw/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpnx/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/lighthouse/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cfs/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cmq/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cvm/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/pcx/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/redis/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tsf/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bwp/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdn/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/lb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/nat_gateway/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ov_cdn/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/../node_modules/tslib/tslib.es6.js","webpack://TencentCloudMonitorGrafanaApp/external \"moment\"","webpack://TencentCloudMonitorGrafanaApp/external \"emotion\"","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tke/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/apigateway/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bmIntraLb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bm_lb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bm_pcx/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bwp/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cbs/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdn/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdn_province/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ceip_summary/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ces/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cfs/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ckafka/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/clb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cls/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cmq/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cmq_topic/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cos/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cpm/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cvm/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cynosdb_mysql/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dc/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcdb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcg/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcx/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecdn/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm_block_storage/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm_lb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/gse/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/lb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/lighthouse/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/mongodb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/mr/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/nat_gateway/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ov_cdn/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/pcx/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/postgresql/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/qaap/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/redis/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/redis_mem/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/scf/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/sqlserver/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tcaplus/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tdmq/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tdmq_rabbitmq/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tdmq_rocketmq/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tke/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tsf/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/v_clb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vbc/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpc_net_detect/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpngw/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpnx/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/waf/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/external \"rxjs\"","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/apigateway/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bmIntraLb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bm_lb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bm_pcx/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bwp/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cbs/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdn/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdn_province/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ceip_summary/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ces/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cfs/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ckafka/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/clb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cls/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cmq/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cmq_topic/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cos/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cpm/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cvm/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cynosdb_mysql/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dc/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcdb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcg/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcx/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecdn/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm_block_storage/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm_lb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/gse/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/lb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/lighthouse/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/mongodb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/mr/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/nat_gateway/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ov_cdn/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/pcx/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/postgresql/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/qaap/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/redis/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/redis_mem/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/scf/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/sqlserver/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tcaplus/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tdmq/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tdmq_rabbitmq/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tdmq_rocketmq/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tke/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tsf/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/v_clb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vbc/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpc_net_detect/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpngw/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpnx/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/waf/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor sync ^.*$","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/MonitorDatasource.ts","webpack://TencentCloudMonitorGrafanaApp/../node_modules/qs/lib/utils.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/qs/lib/formats.js","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/_base/query_filter.ts","webpack://TencentCloudMonitorGrafanaApp/../node_modules/qs/lib/index.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/qs/lib/stringify.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/qs/lib/parse.js","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor sync ^\\.\\/[a-zA-Z]\\w+\\/(datasource)|(query(_def)","webpack://TencentCloudMonitorGrafanaApp/external \"angular\"","webpack://TencentCloudMonitorGrafanaApp/external \"app/core/utils/kbn\"","webpack://TencentCloudMonitorGrafanaApp/external \"app/core/table_model\"","webpack://TencentCloudMonitorGrafanaApp/../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/css-loader/dist/runtime/api.js","webpack://TencentCloudMonitorGrafanaApp/external \"app/plugins/sdk\"","webpack://TencentCloudMonitorGrafanaApp/external \"react-dom\"","webpack://TencentCloudMonitorGrafanaApp/./datasource/query-ctrl/partials/query.editor.html","webpack://TencentCloudMonitorGrafanaApp/../node_modules/eventemitter3/index.js","webpack://TencentCloudMonitorGrafanaApp/./datasource/query-ctrl/css/query_editor.css?c63a","webpack://TencentCloudMonitorGrafanaApp/./datasource/query-ctrl/css/query_editor.css","webpack://TencentCloudMonitorGrafanaApp/./datasource/log-service/index.less?44dc","webpack://TencentCloudMonitorGrafanaApp/./datasource/log-service/index.less","webpack://TencentCloudMonitorGrafanaApp/./datasource/query-ctrl/components/multi_condition.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/query-ctrl/components/custom_select_dropdown.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/common/react-loader.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/query-ctrl/components/cascader.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/types.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/query-ctrl/partials/queryEditorTemplate.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/query-ctrl/query.ctrl.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/query-ctrl/QueryCtrlRender.tsx","webpack://TencentCloudMonitorGrafanaApp/../node_modules/react-use/esm/useLatest.js","webpack://TencentCloudMonitorGrafanaApp/./datasource/log-service/common/model/api.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/log-service/common/constants.tsx","webpack://TencentCloudMonitorGrafanaApp/../node_modules/react-use/esm/useEffectOnce.js","webpack://TencentCloudMonitorGrafanaApp/./datasource/log-service/common/utils.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/log-service/components/TopicSelector.tsx","webpack://TencentCloudMonitorGrafanaApp/./datasource/log-service/LogServiceQueryEditor.tsx","webpack://TencentCloudMonitorGrafanaApp/./datasource/rum-service/query_builder.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/rum-service/RUMMetadataQuery.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/rum-service/query_part.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/rum-service/RUM_query_model.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/rum-service/common/unwrap.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/rum-service/common/toSelectableValue.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/rum-service/common/partListUtils.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/rum-service/components/SegmentSection.tsx","webpack://TencentCloudMonitorGrafanaApp/../node_modules/react-use/node_modules/tslib/tslib.es6.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/react-use/esm/useAsyncFn.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/react-use/esm/useMountedState.js","webpack://TencentCloudMonitorGrafanaApp/./datasource/rum-service/common/useShadowedState.ts","webpack://TencentCloudMonitorGrafanaApp/../node_modules/react-use/esm/usePrevious.js","webpack://TencentCloudMonitorGrafanaApp/./datasource/rum-service/components/Seg.tsx","webpack://TencentCloudMonitorGrafanaApp/./datasource/rum-service/components/FromSection.tsx","webpack://TencentCloudMonitorGrafanaApp/./datasource/rum-service/common/tagUtils.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/rum-service/components/AddButton.tsx","webpack://TencentCloudMonitorGrafanaApp/./datasource/rum-service/components/TagsSection.tsx","webpack://TencentCloudMonitorGrafanaApp/./datasource/rum-service/components/PartListSection.tsx","webpack://TencentCloudMonitorGrafanaApp/./datasource/rum-service/components/styles.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/rum-service/components/InputSection.tsx","webpack://TencentCloudMonitorGrafanaApp/./datasource/rum-service/components/OrderByTimeSection.tsx","webpack://TencentCloudMonitorGrafanaApp/./datasource/rum-service/common/constants.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/rum-service/components/FormatAsSection.tsx","webpack://TencentCloudMonitorGrafanaApp/./datasource/rum-service/RUMServiceQueryEditor.tsx","webpack://TencentCloudMonitorGrafanaApp/./datasource/rum-service/common/useUniqueId.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/rum-service/queryUtils.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/QueryEditor.tsx","webpack://TencentCloudMonitorGrafanaApp/./datasource/VariableQueryEditor.tsx","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/util/isFunction.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/config.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/util/hostReportError.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/Observer.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/util/isArray.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/util/isObject.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/Subscription.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/Subscriber.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/operators/map.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/symbol/observable.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/util/identity.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/util/pipe.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/Observable.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/util/toSubscriber.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/util/canReportError.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/SubjectSubscription.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/Subject.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/operators/refCount.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/observable/ConnectableObservable.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/operators/multicast.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/operators/share.js","webpack://TencentCloudMonitorGrafanaApp/./datasource/log-service/common/format/prestoType.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/log-service/common/format/ConvertSearchResultsToDataFrame.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/log-service/common/format/formatSearchLog.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/log-service/common/format/prepareTimeSeries.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/log-service/common/utils/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/log-service/LogServiceDataSource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/log-service/common/format/ConvertLogContextToDataFrame.ts","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/symbol/iterator.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/util/isArrayLike.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/util/isPromise.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/util/subscribeTo.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/util/subscribeToObservable.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/util/subscribeToArray.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/util/subscribeToPromise.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/util/subscribeToIterable.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/scheduled/scheduled.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/util/isInteropObservable.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/scheduled/scheduleObservable.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/scheduled/schedulePromise.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/scheduled/scheduleArray.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/util/isIterable.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/scheduled/scheduleIterable.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/innerSubscribe.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/operators/mergeMap.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/observable/from.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/rxjs/_esm5/internal/operators/catchError.js","webpack://TencentCloudMonitorGrafanaApp/./datasource/rum-service/RUM_series.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/rum-service/response_parser.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/rum-service/RUMServiceDataSource.tsx","webpack://TencentCloudMonitorGrafanaApp/./datasource/DataSource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/config-editor/ConfigEditor.tsx","webpack://TencentCloudMonitorGrafanaApp/./datasource/module.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","language","enable_intranet_API_mode","cloud_database","cloud_load_balancer","virtual_private_cloud","content_delivery_network","message_queue","direct_connect","cloud_physical_machine","elastic_mapReduce","edge_computing_machine","RUM","CLS","CVM","CDB","CMONGO","POSTGRES","REDIS","REDIS_MEM","SQLSERVER","CYNOSDB_MYSQL","TCAPLUS","TDMYSQL","PCX","BWP","NAT_GATEWAY","VPNGW","VPNX","DCG","CEIP_SUMMARY","VPC_NET_DETECT","VBC","LB","LB_PUBLIC","LB_PRIVATE","LOADBALANCE","CDN","CDN_LOG_DATA","OV_CDN","SCF_V2","CFS","COS","CKAFKA","CMQ","CMQTOPIC","TDMQ","TDMQ_ROCKETMQ","TDMQ_RABBITMQ","DCX","DC","CPM","BM_PCX","BM_LB","BM_INTRA_LB","CES","BLOCK_STORAGE","APIGATEWAY","QAAP","ECM","ECM_BLOCK_STORAGE","ECM_LB","GSE","TKE","ECDN","WAF","multi_scene","lite","cloud_monitor","cloud_log_service","real_user_monitoring","region","log_topic","search_statement","time_unit","seconds","search_description","Language","locale_language","Chinese","setLanguage","getLanguage","options","secretId","service","action","host","version","payload","backendSrv","datasourceId","this","JSON","stringify","nowDate","utc","timestamp","unix","date","format","getHeader","getResourceHeader","res","datasourceRequest","url","method","headers","data","Host","Service","Version","Action","Region","Timestamp","Method","Uri","Query","Body","Headers","resp","authorization","token","intranet","grafanaVersion","window","grafanaBootData","settings","buildInfo","Authorization","toString","defaults","path","generateQueryString","getResourceQueryString","assign","secretKey","querystring","queryString","TcDataSourceId","id","FINACE_REGIONS","SERVICES_API_INFO","api","monitor","cls","cvm","cdb","pcx","vpc","mongodb","clb","postgres","cdn","redis","scf","cfs","ckafka","dc","cynosdb","sqlserver","bm","bmeip","bmvpc","bmlb","es","emr","cmq","cbs","tcaplusdb","dcdb","apigateway","tdmq","tdmq_rabbitmq","tdmq_rocketmq","gaap","ecm","gse","lighthouse","tsf","rum","tke","ecdn","waf","FINACE_HOST","GetServiceAPIInfo","indexOf","find","__","getHostAndPath","GetServiceFromNamespace","namespace","ParseMetricQuery","query","result","queries","split","forEach","item","str","trim","val","parse","e","toLower","ReplaceVariable","templateSrv","scopedVars","field","multiple","varname","varFlag","regResult1","String","match","regResult2","parseVariableFormat","replaceVar","replace","error","isArray","GetDimensions","obj","isEmpty","dimensions","Value","undefined","push","Name","ParseQueryResult","response","instances","timeshift","instanceList","cloneDeep","dataPoints","map","dataPoint","instanceAliasValue","length","isInstanceMatch","_InstanceAliasValue","splice","target","MetricName","datapoints","parseDataPoint","timestamps","values","index","instance","isVariable","GetRequestParams","signObj","signParams","pick","headerSigned","GetRequestParamsV2","sign","SliceLength","total","len","num","Math","ceil","Offset","CoreApp","IS_DEVELOPMENT_ENVIRONMENT","instanceSettings","instanceListCache","extraMetricDims","checkKeys","MetricReqConfig","extrasAlias","queryMonitorExtraConfg","CandiateDimensions","jsonData","Namespace","getOtherAlias","alias","extra","extraAlia","getVariable","getAliasValue","Array","join","formatVarDisplay","displayTpl","instanceAlias","a","b","InstanceAliasList","includes","metricFindQuery","regex","display","instancealias","templateQueryIdMap","isObject","isString","getRegions","getVariableInstances","flatMap","insAlias","text","setInstance","getInstance","instanceCache","fetchMetricData","Promise","resolve","dimensionsFormat","dimKeys","ins","dimensionObject","keyTmp","invalidDim","InvalidDimensions","getInvalidDimensions","extraDimValue","dim_KeyInStorage","dim_KeyInTarget","dim_KeyInMap","dim_KeyInIns","extraSourceMap","getExtraStorage","extraStorage","isStringOrNumber","isNumber","otherAlias","getDimensionsVal","Ekey","tt","getOwnDimenion","dimVal","filter","targets","hide","metricName","reduce","prev","cloneTarget","concat","inst","getDefaultInsObj","insInReq","keys","dimResult","Dimensions","StartTime","range","from","subtract","EndTime","to","Period","period","Instances","getMonitorData","all","then","responses","flatten","getInstanceReqConfig","selfIns","metric","rs","valStr","params","serviceInfo","doRequest","RegionSet","RegionName","RegionState","getMetrics","MetricSet","resFilterFn","resultFilter","getInstances","InstanceReqConfig","interceptor","Limit","request","Error","TotalCount","TotalCnt","param","isValidConfigField","testDatasource","cvmErr","monitorErr","serviceErr","cvmAuthFail","monitorAuthFail","serviceAuthFail","messages","message","compact","uniq","status","title","statusText","code","getFieldsValue","fields","fetchAllFactory","fetcher","_params","omit","Result","firstLists","delta","batchCount","pmList","fill","_","isOffsetPage","acc","cur","lists","list","instanceQueryParamsBaseParse","isFilter","Values","slice","Filters","getNamesapceFromService","serviceName","serviceGroupBy","services","label","groupName","existedGroup","items","isTargetEqual","newTargetString","oldTargetString","newTarget","oldTarget","getTimeShiftInMs","timeShift","parts","exec","amount","parseInt","__WEBPACK_EXTERNAL_MODULE__5__","__WEBPACK_EXTERNAL_MODULE__6__","config","detailConfig","QueryCtrl","newQueryIns","$scope","$rootScope","getDropdown","datasource","getFilterDropdown","directive","template","controller","restrict","scope","showDetail","getDropdownOptions","onChange","store","promisify","type","reject","onsuccess","event","returnMap","msg","onerror","props","initDB","indexedDB","webkitIndexedDB","mozIndexedDB","msIndexedDB","open","onupgradeneeded","db","objectStoreNames","contains","createObjectStore","keyPath","openDB","insertData","storeName","transaction","objectStore","add","oncomplete","addData","isCover","getData","oldData","getObjectStore","newData","requestUpdate","put","seviceName","getAllData","getAll","insKey","cacheWay","setStorage","getStorage","setExtraStorage","EValue","serviceKey","storage","__WEBPACK_EXTERNAL_MODULE__9__","CKAFKAQueryDescriptor","enDescriptor","cnDescriptor","link","min","max","CKAFKA_STATE","metricUnit","topicId","topicName","consumerGroup","partition","Status","InstanceId","SearchWord","TagKey","GetInstanceQueryParams","CKAFKAInstanceAliasList","CKAFKATopicAliasList","CKAFKAInvalidDemensions","Proxy","prop","toLocaleLowerCase","keyInStorage","TopicList","GroupList","PartitionList","TopicId","TopicName","GroupName","PartitionId","__WEBPACK_EXTERNAL_MODULE__11__","queryEditorName","LOADBALANCEFieldsDescriptor","queryEditorConfig","instanceDocUrl","fieldDescriptor","LOADBALANCE_STATE","Port","Protocol","listener","servers","serverPort","LoadBalancerIds","Forward","LoadBalancerName","Domain","LoadBalancerVips","BackendPublicIps","BackendPrivateIps","ProjectId","WithRs","VpcId","SecurityGroup","MasterZone","OrderBy","OrderType","LOADBALANCEListenerAliasList","LOADBALANCEServerAliasList","LOADBALANCEVALIDDIMENSIONS","vip","loadBalancerPort","protocol","lanIp","port","CANDIATEDIMENSIONS","PrivateIpAddresses","ServerPort","TDMQInvalidDemensions","tenantId","tenant","environmentId","TDMQInstanceAliasList","TDMQFilterFieldsDescriptor","CDNPROVINCE_STATE","regionSupported","modifyDimensons","metricItem","metricTmp","EnvironmentId","fleetId","GSEInvalidDemensions","instanceid","fleetid","queuename","GSEInstanceAliasList","FleetId","fleet","queue","GSEFilterFieldsDescriptor","GSE_STATE","v","DCDBInvalidDemensions","nodeid","shardid","ShardId","DCDBInstanceAliasList","NodeId","ShardInstanceId","DCDBFilterFieldsDescriptor","DCDB_STATE","InstanceIds","SearchName","SearchKey","ProjectIds","SubnetId","OrderByType","ExclusterType","ExclusterIds","FilterInstanceType","modifyMetricConf","IsFilterVpc","IsFilterExcluster","RedisMemFieldsDescriptor","REDISMEM_STATE","VpcIds","SubnetIds","InstanceName","UniqVpcIds","UniqSubnetIds","TypeVersion","EngineName","AutoRenew","BillingMode","Type","rnodeid","pnodeid","REDISMEMInstanceAliasList","RedisMemInvalidDemensions","NodeType","node","TDMQRABBITMQInstanceAliasList","TDMQ_STATE","NodeName","group","TDMQROCKETMQInstanceAliasList","instanceIdsChecked","filtersChecked","ClusterIdList","includeVip","NamespaceId","SERVICES","href","hideRegion","Datasources","InitStates","hackModuleName","postgresql","mr","filePath","moduleName","fileName","prefix","toUpperCase","getParams","ECMBLOCKSTORAGEInvalidDemensions","uuid","diskId","ECMBLOCKSTORAGEInstanceAliasList","ECMBLOCKSTORAGEFilterFieldsDescriptor","ECMBLOCKSTORAGE_STATE","DiskId","APIGATEWAYInvalidDemensions","serviceId","environmentName","apiid","apiId","APIGATEWAYInstanceAliasList","environmentList","EnvironmentName","APIGATEWAYFilterFieldsDescriptor","APIGATEWAY_STATE","ServiceId","ServiceName","NotUsagePlanId","Environment","IpVersion","InstanceQueryDescriptor","InvalidDemensions","k","receiver","startsWith","Reflect","has","propKey","Ip","nodeIP","DisplayStrategy","Order","OrderField","Asc","VCLBInvalidDemensions","VCLBInstanceAliasList","VCLBFilterFieldsDescriptor","VCLB_STATE","clbNamespaceMap","public","private","cynosdbMysqlFilterFieldsDescriptor","CYNOSDB_STATE","DbType","CYNOSDBMYSQLInstanceAliasList","CYNOSDBInvalidDemensions","instanceId","SCFQueryDescriptor","SCF_STATE","Description","SCFInstanceAliasList","SCFInvalidDemensions","functionName","SCFDefaultDimensionList","__WEBPACK_EXTERNAL_MODULE__26__","CLSInvalidDemensions","CLSInstanceAliasList","CLSFilterFieldsDescriptor","CLS_STATE","uin","logsetName","logsetId","tagKey","storageType","SQLSERVERInvalidDemensions","resourceId","SQLSERVERInstanceAliasList","SQLSERVERNETFilterFieldsDescriptor","SQLSERVER_STATE","InstanceIdSet","PayMode","VipSet","InstanceNameSet","VersionSet","Zone","BMINTRALBInvalidDemensions","vpcId","BMINTRALBInstanceAliasList","BMINTRALBFilterFieldsDescriptor","BMINTRALB_STATE","BMLBValidMetricsT","isValidMetric","validMetrics","toUpper","CPMInvalidDemensions","BMLBInstanceAliasList","CPMFilterFieldsDescriptor","CPM_STATE","BMPCXInvalidDemensions","peeringConnectionId","BMPCXInstanceAliasList","BMPCXFilterFieldsDescriptor","BMPCX_STATE","VpcPeerConnectionIds","CBSInvalidDemensions","diskname","unInstanceId","CBSInstanceAliasList","CBSFilterFieldsDescriptor","CBS_STATE","DiskIds","ReturnBindAutoSnapshotPolicy","metricObj","dimension","CDNPROVINCEInvalidDemensions","domain","projectid","province","appid","CDNPROVINCEInstanceAliasList","CDNPROVINCEFilterFieldsDescriptor","isp","district","origin","serviceType","projectId","domainType","fullUrlCache","https","originPullProtocol","CEIPInvalidDemensions","eip","CEIPSUMMARYInstanceAliasList","CEIPFilterFieldsDescriptor","CEIP_STATE","subscription","subscriptionId","CPMInstanceAliasList","DeviceClassCode","WanIps","LanIps","Alias","VagueIp","AutoRenewFlag","DeviceType","IsLuckyDevice","ECDNInstanceAliasList","ECDNInvalidDemensions","ECDN_STATE","disable","area","ECDNFilterFieldsDescriptor","_queries","Fuzzy","ECMInvalidDemensions","ECMInstanceAliasList","ECMFilterFieldsDescriptor","ECM_STATE","zone","PostgresFieldsDescriptor","POSTGRESInstanceAliasList","POSTGRES_STATE","PostgreInvalidDemensions","uid","VPCNETInvalidDemensions","netdetectid","netDetectId","VPCNETDETECTInstanceAliasList","VPCNETFilterFieldsDescriptor","VPCNET_STATE","WAFFilterFieldsDescriptor","WAF_STATE","WAFInstanceAliasList","WAFInvalidDemensions","CDBFieldsDescriptor","CDB_STATE","InstanceTypes","Vips","SecurityGroupId","PayTypes","InstanceNames","TaskStatus","EngineVersions","ZoneIds","CdbErrors","OrderDirection","InitFlag","CDBInstanceAliasList","CDBInvalidDemensions","insttype","CESInvalidDemensions","uInstanceId","CESInstanceAliasList","CESFilterFieldsDescriptor","CES_STATE","OrderByKey","IpList","DCFilterFieldsDescriptor","DC_STATE","DirectConnectIds","DCInstanceAliasList","DCInvalidDemensions","directConnectId","directconnectid","DCGInvalidDemensions","directConnectGatewayId","DCGInstanceAliasList","DCGFilterFieldsDescriptor","DCG_STATE","DCXFilterFieldsDescriptor","DCX_STATE","DCXInstanceAliasList","DCXInvalidDemensions","directconnectconnid","directConnectConnId","ECMLBInvalidDemensions","ECMLBInstanceAliasList","ECMLBFilterFieldsDescriptor","MONGODBFieldsDescriptor","MONGODB_STATE","InstanceType","ClusterType","MONGODBInstanceAliasList","MONGODBInvalidDemensions","replica","Replica","Node","QAAPInvalidDemensions","channelId","QAAPInstanceAliasList","QAAPFilterFieldsDescriptor","QAAP_STATE","AccessRegion","RealServerRegion","GroupId","TCAPLUSInvalidDemensions","TCAPLUSInstanceAliasList","TCAPLUSFilterFieldsDescriptor","TCAPLUS_STATE","ClusterId","TableGroupIds","TableName","TableInstanceId","TableIdlType","TableType","ListElementNum","ReservedVolume","ReservedReadQps","ReservedWriteQps","Memo","FileName","FileExtType","FileSize","FileContent","SelectedTables","regonsMap","VBCInvalidDemensions","VBCInstanceAliasList","VBCFilterFieldsDescriptor","VBC_STATE","DRegion","SRegion","state","VPNGWInvalidDemensions","vpnGwId","VPNGWInstanceAliasList","VPNGWFilterFieldsDescriptor","VPNGW_STATE","VPNXInvalidDemensions","vpnConnId","VPNXInstanceAliasList","VPNXFilterFieldsDescriptor","VPNX_STATE","LighthouseFilterFieldsDescriptor","LIGHTHOUSE_STATE","LIGHTHOUSEInstanceAliasList","LighthouseInvalidDemensions","CFSQueryDescriptor","CFS_STATE","FileSystemId","CFSInstanceAliasList","CFSInvalidDemensions","queueId","queueName","QueueName","CVMFilterFieldsDescriptor","CVM_STATE","CVMInstanceAliasList","CVMValidMetricsT","CVMValidMetrics","PCX_STATE","limit","offset","peeringConnectionName","PCXFieldsDescriptor","PCXInstanceAliasList","RedisFieldsDescriptor","REDIS_STATE","REDISInstanceAliasList","RedisInvalidDemensions","redis_uuid","TSFFieldsDescriptor","TSF_STATE","ApplicationType","MicroserviceType","ApplicationResourceTypeList","ApplicationIdList","TSFInstanceAliasList","TSFInvalidDemensions","applicationid","BWPFilterFieldsDescriptor","BWP_STATE","BandwidthPackageIds","BWPInstanceAliasList","BWPInvalidDemensions","bandwidthPackageId","CDNFilterFieldsDescriptor","CDN_STATE","CDNInstanceAliasList","CDNInvalidDemensions","LBFilterDescriptor","LB_STATE","LBInstanceAliasList","LBInvalidDemensions","NATGATEWAYInstanceAliasList","NATGatewayFilterFieldsDescriptor","NATGATEWAY_STATE","NatGatewayIds","NATInvalidDemensions","natId","OVCDNFilterFieldsDescriptor","OVCDN_STATE","OVCDNInstanceAliasList","OVCDNInvalidDemensions","extendStatics","setPrototypeOf","__proto__","__extends","constructor","__WEBPACK_EXTERNAL_MODULE__67__","__WEBPACK_EXTERNAL_MODULE__68__","TKE_STATE","conditions","groupBys","ClusterIds","ClusterName","ClusterStatus","TKEFilterFieldsDescriptor","TKEInstanceAliasList","responseField","getEnvironmentNameList","LoadBalancerType","RegionMap","keyBy","RegionInfoSet","rawSet","getZones","ZoneSet","ZoneName","ZoneId","ZoneState","getConsumerList","MapInfoList","TopicAliasList","consumerGroupCache","getConsumerGroups","groupname","topicid","consumerGoup","GroupDetailList","uniqBy","SubscribedInfos","ConsumerGroupName","SubscribedInfo","partitions","sub","Partition","formatTopicVarDisplay","topic","topicAlias","topicalias","par","ListenerAliasList","ServerAliasList","tagret","getListenerList","LoadBalancerId","formatVariableDisplay","aliasList","getServerList","listenerId","ListenerIds","Listeners","Rules","Targets","elem","listenAlias","lisId","listenerid","serverprivateip","serveralias","serversList","chain","dims","Set","fetchAllSubscription","SubscriptionId","cosURL","Buckets","BucketName","bucket","DeviceClassSet","Product","extraActionMap","DescribeDCDBShards","pickKey","DescribeDCDBInstanceNodeInfo","RegionList","act","getDiskList","instanceObj","getQueueNameList","getFleetList","ReplicaAliasList","replicaAlias","ReplicaSetId","replicasetid","times","SecondaryNum","nodeId","fetchAllNodes","NodeFlag","resultT","doRequestV2","totalCount","getVpcId","VpcSet","getVpcIds","MonitorVersion","getInstanceNodeInfo","nodetype","ndoeTypeIndex","getVersions","Versions","FunctionName","RegionInfos","DescribeTopics","DescribeEnvironments","DescribeRabbitMQNodeList","DescribeRocketMQNamespaces","DescribeRocketMQGroups","variableToArray","variable","tke_cluster_instance_id","Key","Operator","MetricNames","Module","Conditions","GroupBys","Data","Points","point","dimensionSort","dimensionString","timeshiftString","getAllMetrics","public_metrics","private_metrics","edition","__WEBPACK_EXTERNAL_MODULE__125__","init","getInstanceId","getServiceFn","getExtraDropdown","sQuery","onRefresh","onChecked","srcField","dstField","bwpQuery","BWPQueryCtrl","cdbQuery","CDBQueryCtrl","cdnQuery","CDNQueryCtrl","ExtraFields","scfQuery","SCFQueryCtrl","onInstanceChange","getExtraFields","CKAFKAQueryCtrl","element","attrs","$watch","newValue","oldValue","onFieldChange","getVariableId","variableData","getServersDropdown","getServerPortDropdown","serverPortList","cacheMap","getTopicName","onExtraFieldChange","datas","CmqTopicQueryCtrl","cvmQuery","CVMQueryCtrl","dropdownTextConfig","actionMaps","lbQuery","LBQueryCtrl","lighthouseQuery","LighthouseQueryCtrl","replicaId","mongodbQuery","MongoDBQueryCtrl","some","dataT","mrQuery","MrQueryCtrl","natGatewayQuery","NatGatewayQueryCtrl","ovCdnQuery","OVCDNQueryCtrl","pcxQuery","PCXQueryCtrl","redisQuery","RedisQueryCtrl","clearExtrasAlias","redisMemQuery","RedisMemQueryCtrl","evId","tdmqRocketmqQuery","TdmqRocketmqQueryCtrl","addCondition","deleteCondition","targetCondition","getOperator","tsfQuery","TSFQueryCtrl","VBCQueryCtrl","webpackContext","req","webpackContextResolve","_class","getNamespaces","namespaces","getCascaderNamespaces","validServices","getSelectedServices","promises","optionsTemp","promiseTemp","Done","results","getListeners","errorMsg","upperFirst","fnName","argu","hexTable","array","arrayToObject","source","plainObjects","refs","j","pop","compacted","compactQueue","decode","decodeURIComponent","encode","string","out","charCodeAt","charAt","isBuffer","isRegExp","merge","allowPrototypes","mergeTarget","percentTwenties","formatters","RFC1738","RFC3986","SPQueryCtrl","_config","queryDDO","formats","utils","arrayPrefixGenerators","brackets","indices","repeat","toISO","Date","toISOString","delimiter","encoder","encodeValuesOnly","serializeDate","skipNulls","strictNullHandling","generateArrayPrefix","sort","allowDots","formatter","objKeys","opts","TypeError","arrayFormat","joined","addQueryPrefix","arrayLimit","decoder","depth","parameterLimit","parseKeys","givenKey","child","segment","parent","leaf","root","cleanRoot","isNaN","parseArrays","parseObject","ignoreQueryPrefix","tempObj","cleanStr","Infinity","part","bracketEqualsPos","pos","parseValues","newObj","__WEBPACK_EXTERNAL_MODULE__192__","__WEBPACK_EXTERNAL_MODULE__193__","__WEBPACK_EXTERNAL_MODULE__196__","memo","isOldIE","Boolean","document","atob","getTarget","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","stylesInDom","getIndexByIdentifier","identifier","modulesToDom","idCountMap","identifiers","base","count","css","media","sourceMap","references","updater","addStyle","insertStyleElement","style","createElement","attributes","nonce","setAttribute","insert","appendChild","textStore","replaceText","replacement","applyToSingletonTag","remove","styleSheet","cssText","cssNode","createTextNode","childNodes","removeChild","insertBefore","applyToTag","removeAttribute","btoa","unescape","encodeURIComponent","firstChild","singleton","singletonCounter","update","styleIndex","parentNode","removeStyleElement","lastIdentifiers","newList","newLastIdentifiers","_i","_index","useSourceMap","content","cssMapping","sourceMapping","base64","sourceURLs","sources","sourceRoot","cssWithMappingToString","mediaQuery","dedupe","alreadyImportedModules","__WEBPACK_EXTERNAL_MODULE__200__","__WEBPACK_EXTERNAL_MODULE__201__","Events","EE","fn","context","once","addListener","emitter","evt","_events","_eventsCount","clearEvent","EventEmitter","eventNames","events","names","getOwnPropertySymbols","listeners","handlers","ee","listenerCount","emit","a1","a2","a3","a4","a5","args","arguments","removeListener","apply","on","removeAllListeners","off","prefixed","default","exported","locals","___CSS_LOADER_API_IMPORT___","placeholder","maxCond","toInteger","onInputBlur","onChangeInternal","cond","onSelectChange","getSelectedOptions","selectedOptions","option","maxNum","minNum","getOptions","show","oldVariableText","highlightIndex","selectOptions","selectedValue","selected","selectedValues","search","dropdownVisible","updateLinkText","linkText","clearSelections","each","selectionsChanged","keyDown","keyCode","moveHighlight","commitChanges","selectValue","direction","commitChange","excludeOthers","setAllExceptCurrentTo","other","ctrlKey","metaKey","shiftKey","queryChanged","toLowerCase","customSelectDropdown","$compile","$window","$timeout","controllerAs","bindToController","bodyEl","body","linkEl","inputEl","bodyOnClick","$apply","vm","width","focus","RectCompo","componentName","propTypes","separator","changeOnSelect","onSelect","initialValue","allowCustomValue","formatCreateLabel","displayAllSelectedLevels","component","$element","_$scope","_$element","$onInit","entries","_query","setTimeout","render","ServiceType","loadBalance","lbPrivate","lbPublic","mongoDB","mrHDFS","mrHBASE","mrHIVE","mrNODE","mrPRESTO","mrSPARK","mrYARN","mrZOOKEEPER","editorHtml","serviceSwitch","$injector","regions","metricList","periodList","dimensionList","instanceAliasList","showInstanceDetails","cascaderOptions","defaultsDeep","getInstanceAliasList","panelCtrl","onDataReceived","onDataError","cascaderChange","onNamespaceChange","dataList","lastQueryError","lastQuery","anySeriesFromQuery","refId","err","handleQueryCtrlError","initState","refresh","isCascader","onRegionChange","isMetricsNeedUpdate","panel","getMetricNameDesc","findIndex","Meaning","Zh","En","onMetricChange","getInstanceQueryParams","subItem","onInstanceAliasChange","onInstanceQueryChange","checkShowDetail","getTimeDesc","getSearchDesc","angularScope","angularQueryEditor","renderAngularQueryEditor","destroy","loader","scopeProps","ctrl","getAngularQueryComponentScope","load","componentDidMount","forceUpdate","componentDidUpdate","prevProps","legacy","series","timeRange","queryCtrl","components","dashboard","onRunQuery","ref","ServiceTypeOptions","logService","RUMService","defaultQueryInfo","logServiceParams","RUMServiceParams","policy","resultFormat","orderByTime","tags","groupBy","select","queryInfoRuntime","queryType","dataTopic","current","capiRequest","requestOptions","Code","Message","Response","clsCapiRequest","regionCapiRequest","SearchLog","UseNewAnalysis","DescribeLogContext","DescribeRegionsAndZonesRequest","product","DescribeRegions","clsRegions","regionList","RegionId","RegionShortName","RegionTypeMC","RegionType","Location","regionId","Number","regionName","regionShortName","oversea","uuidRegex","effect","getStringVariableNameOptions","getVariables","multi","refValue","TopicSelector","preferLastValue","localStorage","setItem","lastValue","getItem","topicSelectOptionsRef","setRegionList","fetchRegions","labelWidth","Topics","menuPlacement","className","defaultOptions","cacheOptions","loadOptions","filterStr","filters","test","optionsWithVariables","displayName","LogServiceQueryEditor","propsRef","clone","partialOnChange","queryInfo","oldQuery","flexGrow","portalOrigin","onBlur","database","buildExploreQuery","withKey","withMeasurementFilter","measurement","regexEscape","whereConditions","tag","operator","condition","renderTagCondition","q","getTagKeysForMeasurementAndTags","defaultParams","renderer","category","addStrategy","def","updateText","innerExpr","hasMultipleParamsInString","strValue","optional","updateParam","partVal","idx","functionRenderer","parameters","paramType","quote","unshift","Aggregations","Selectors","Transformations","Predictors","Aliasing","Fields","createPart","register","QueryPartDef","groupByTimeFunctions","fieldRenderer","replaceAggregationAddStrategy","selectParts","partModel","morePartsAvailable","addTransformationStrategy","selectModels","dynamicLookup","partCount","renderMode","getCategories","replaceAggregationAdd","updateProjection","groupByParts","updatePersistedParts","hasGroupByTime","g","hasFill","addGroupBy","stringParts","typePart","arg","removeGroupByPart","categories","removeSelect","removeSelectPart","modelsIndex","partIndex","addSelectPart","getMeasurementAndPolicy","interpolate","interpolateQueryStr","defaultFormatFn","includeAll","rawQuery","y","selectText","groupBySection","slimit","tz","renderAdhocFilters","unwrap","toSelectableValue","getPartParams","dynamicParamOptions","paramValues","defParam","makePartList","queryParts","qp","htmlFor","children","styles","theme","spacing","inlineFormMargin","useAsyncFn","deps","initialState","loading","mountedRef","lastCallId","isMounted","_a","set","callback","callId","prevState","useShadowedState","outsideVal","currentVal","setCurrentVal","prevOutsideVal","selectClass","minWidth","onClose","autoFocus","isOpen","onCloseMenu","loadState","doLoad","isLoading","filterByLoadOptions","currentValue","setCurrentValue","spellCheck","onKeyDown","currentTarget","defaultButtonClass","cursor","buttonClassName","disabled","setOpen","as","onClick","getPolicyOptions","getMeasurementOptions","allPolicies","isRegex","getCondition","isFirst","onAdd","operatorOptions","condititonOptions","loadConditionOptions","loadOperatorOptions","onRemove","getTagKeyOptions","getTagValueOptions","op","currentOperator","newTagValue","isCurrentOperatorRegex","onTagChange","newTag","newTags","newT","minimalTag","noRightMarginPaddingClass","paddingRight","marginRight","getContextMenuItems","openMenu","noHorizMarginPaddingClass","paddingLeft","marginLeft","partClass","lineHeight","typography","md","fontSize","size","onParamChange","newParams","isLast","Fragment","getNewPartOptions","onAddNewPart","onRemovePart","pars","paddingRightClass","isWide","OPTIONS","inputId","RESULT_FORMATS","ENABLE_MEASUREMENTS","withTemplateVariableOptions","optionsPromise","filterTags","allTagKeys","RUMServiceQueryEditor","idRefLazy","uniqueId","formatAsId","orderByTimeId","queryCopy","normalizeQuery","selectLists","dynamicSelectPartOptions","Map","getFieldKeysForMeasurement","sel","getTagKeys","groupByList","dynamicGroupByPartOptions","onAppliedChange","newQuery","getAllPolicies","measurementFilter","getAllMeasurementsForTags","inlineLabel","getTagValues","x","listIndex","newSel","changeSelectPart","model","addNewSelectPart","selectModel","tagKeys","getNewGroupByPartOptions","newGroupBy","changeGroupByPart","addNewGroupByPart","isAlertVisiable","app","UnifiedAlerting","setState","firstEnabledService","enabledServices","monitorEnabled","monitorDataSource","logServiceEnabled","RUMServiceEnabled","active","onChangeTab","renderMonitorQueryEditor","renderLogServiceQueryEditor","renderRUMServiceQueryEditor","onQueryChange","definition","grow","tooltip","required","isFunction","_enable_super_gross_mode_that_will_cause_bad_things","hostReportError","empty","closed","next","useDeprecatedSynchronousErrorHandling","complete","UnsubscriptionError","UnsubscriptionErrorImpl","errors","Subscription","unsubscribe","_parentOrParents","_subscriptions","_ctorUnsubscribe","_unsubscribe","flattenUnsubscriptionErrors","teardown","EMPTY","tmp","subscriptions","subscriptionIndex","errs","rxSubscriber","random","_super","Subscriber","destinationOrNext","_this","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","destination","subscriber","_next","_error","_complete","_unsubscribeAndRecycle","SafeSubscriber","_parentSubscriber","observerOrNext","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","project","thisArg","lift","MapOperator","subscribe","MapSubscriber","observable","identity","pipeFromArray","fns","input","Observable","_isScalar","_subscribe","sink","nextOrObserver","toSubscriber","_trySubscribe","observer","closed_1","canReportError","promiseCtor","getPromiseCtor","pipe","operations","toPromise","ObjectUnsubscribedError","ObjectUnsubscribedErrorImpl","SubjectSubscription","subject","observers","subscriberIndex","SubjectSubscriber","Subject","hasError","thrownError","copy","asObservable","AnonymousSubject","refCount","RefCountOperator","connectable","_refCount","refCounter","connection","connect","RefCountSubscriber","sharedConnection","_connection","ConnectableObservable","subjectFactory","_isComplete","getSubject","_subject","connectableObservableDescriptor","connectableProto","writable","ConnectableSubscriber","MulticastOperator","selector","shareSubjectFactory","share","subjectOrSubjectFactory","ProcessorUtils","PrestoAndFieldTypeMap","prestoTypeRegex","fieldType","time","processor","isValid","number","LogFieldReservedName","formatSearchLog","Analysis","AnalysisRecords","analysisColumns","analysisRecords","column","prestoType","analysisColumn","record","parseLogJsonStr","logJsonStr","tagContent","__TAG__","tagValue","ConvertSearchResultsToDataFrame","searchLogResult","frameDTO","ConvertAnalysisJsonToDataFrameDTO","Results","timeField","TIMESTAMP","logField","LogJson","custom","displayMode","sourceField","SOURCE","filenameField","Filename","hostnameField","HostName","metaField","META","hidden","labels","logItem","logJson","meta","preferredVisualisationType","RequestId","SamplingRate","executedQueryString","ConvertLogJsonToDataFrameDTO","DataFrameType","timeSeriesFormat","toTimeSeriesMany","frame","valueFields","labelFields","builders","f","builder","TimeSeriesMany","uniqueValueNames","uniqueValueNamesToType","uniqueLabelKeys","labelKeyToWideIndices","uniqueFactorNamesToWideIndex","fieldIndex","tKey","wideIndices","labelKey","sortedTimeRowIndices","sortedUniqueLabelKeys","uniqueFactorNames","uniqueFactorNamesWithWideIndices","wideRowIndex","labelKeys","longFrame","TimeSeriesLong","addField","timeWideRowIndex","rowValues","wideFieldIndex","wideField","toTimeSeriesLong","CQL_SPLIT_PATTERN","replaceClsQueryWithTemplateSrv","luceneQuery","querySplit","getQueryLucene","sqlQuery","showContextToggle","row","dataFrame","metaValue","rowIndex","PkgId","PkgLogId","getLogRowContext","bTime","BTime","PrevLogs","NextLogs","logContext","LogContextInfos","idField","lineField","contextLog","Content","ConvertLogContextToDataFrame","dataFramePromise","From","To","Loading","frames","processedFrames","timeSeriesMany","valueOf","getLogsVolumeDataProvider","getSymbolIterator","iterator","isArrayLike","isPromise","subscribeTo","obs","promise","iterable","done","return","scheduled","scheduler","isInteropObservable","schedule","scheduleObservable","schedulePromise","scheduleArray","isIterable","scheduleIterable","SimpleInnerSubscriber","notifyNext","notifyError","notifyComplete","SimpleOuterSubscriber","innerValue","innerSubscribe","innerSubscriber","mergeMap","resultSelector","concurrent","POSITIVE_INFINITY","ii","MergeMapOperator","MergeMapSubscriber","hasCompleted","buffer","_tryNext","_innerSub","ish","innerSubscription","shift","CatchOperator","caught","CatchSubscriber","err2","annotation","getTimeSeries","output","columns","seriesName","columnName","_getSeriesName","segments","g1","g2","segIndex","getAnnotations","titleCol","timeCol","timeEndCol","tagsCol","textCol","titleColumn","tagsColumn","textColumn","timeEndColumn","timeEnd","getTable","table","seriesIndex","firstCol","firstTableCol","reordered","rows","RUMResults","normalizedQuery","isValueFirst","isShowMeasurements","serie","addUnique","dfs","selectedParams","allParams","uniqueParams","incrementName","nameIncremenet","getSelectedParams","getTableCols","dfsByLabels","df","getTableRows","transformAnnotationResponse","rsp","colText","colContainsTag","toArray","metrics","getFieldType","firstNotNull","valueType","timeSeriesToDataFrame","timeSeries","displayNameFromDS","responseParser","classicQuery","timeFilter","getTimeFilter","queryTargets","allQueries","fixTimePeriod","interval","__interval","adhocFilters","getAdhocFilters","_seriesQuery","seriesList","rumSeries","interpolated","rangeRaw","timezone","_RUMRequest","fetch","cancelled","handleErrors","isInteger","getRUMTime","roundUp","getTimePeriod","modifyTime","until","oneHour","compareResult","periodCompare","pre_period","units","reg","RegExp","pre","per","logServiceDataSource","tcDatasource","RUMServiceDataSource","DataSource","monitorTargets","logServiceTargets","RUMServiceTargets","EmptyDataQueryResponse","errResponse","every","flat","serviceTestResults","failedResult","SecretFormField","patchJsonData","kv","onOptionsChange","onJsonDataChange","targetName","targetValue","onSecureJsonChange","secureJsonData","onResetSecureJson","secureJsonFields","monitorFilter","position","marginTop","padding","WebkitBoxFlex","borderTop","margin","inputWidth","isConfigured","onReset","English","InlineSwitch","checked","renderRUMConfig","renderLogServiceConfig","renderMonitorConfig","filteredProducts","marginBottom","toChecked","allCheckObject","height","WebkitBoxAlign","alignItems","border","borderRadius","setQueryEditor","setConfigEditor","setVariableQueryEditor"],"mappings":"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","file":"datasource/module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 209);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","const zh_CN = {\n  language: '语言',\n  enable_intranet_API_mode: '开启内网API模式',\n  cloud_database: '云数据库',\n  cloud_load_balancer: '负载均衡',\n  virtual_private_cloud: '私有网络',\n  content_delivery_network: '内容分发网络',\n  message_queue: '消息队列',\n  direct_connect: '专线接入',\n  cloud_physical_machine: '黑石物理服务器',\n  elastic_mapReduce: '弹性 MapReduce',\n  edge_computing_machine: '边缘计算机器',\n  // namespace\n  RUM: '前端性能监控(RUM)',\n  CLS: '日志服务(CLS)',\n  CVM: '云服务器(CVM)',\n  CDB: '云数据库 MySQL(CDB)',\n  CMONGO: '云数据库 MongoDB(CMONGO)',\n  POSTGRES: '云数据库 PostgreSQL(POSTGRES)',\n  REDIS: '云数据库 Redis(REDIS)',\n  REDIS_MEM: '云数据库 Redis内存版(5s)(REDIS_MEM)',\n  SQLSERVER: '云数据库 SQL Server(SQLSERVER)',\n  CYNOSDB_MYSQL: '云数据库 CYNOSDB_MYSQL(CYNOSDB_MYSQL)',\n  TCAPLUS: '云数据库 TcaplusDB(TCAPLUS)',\n  TDMYSQL: '分布式数据库 TDSQL MySQL(TDMYSQL)',\n  PCX: '私有网络-对等连接(PCX)',\n  BWP: '私有网络-带宽包(BWP)',\n  NAT_GATEWAY: '私有网络-NAT 网关(NAT_GATEWAY)',\n  VPNGW: '私有网络-VPN 网关(VPNGW)',\n  VPNX: '私有网络-VPN 通道(VPNX)',\n  DCG: '私有网络-专线网关(DCG)',\n  CEIP_SUMMARY: '私有网络-Anycast 弹性公网IP(CEIP_SUMMARY)',\n  VPC_NET_DETECT: '私有网络-网络探测(VPC_NET_DETECT)',\n  VBC: '私有网络-云联网(VBC)',\n  LB: '私有网络-弹性公网IP(LB)',\n  LB_PUBLIC: '公网负载均衡监控指标(LB_PUBLIC)',\n  LB_PRIVATE: '内网负载均衡四层协议监控指标(LB_PRIVATE)',\n  LOADBALANCE: '内网负载均衡七层协议监控指标(LOADBALANCE)',\n  CDN: '国内域名(CDN)',\n  CDN_LOG_DATA: '省份域名(CDN_LOG_DATA)',\n  OV_CDN: '国外域名(OV_CDN)',\n  SCF_V2: '云函数(SCF)',\n  CFS: '文件存储(CFS)',\n  COS: '对象存储(COS)',\n  CKAFKA: '消息队列 CKafka(CKAFKA)',\n  CMQ: '消息队列-队列服务监控(CMQ)',\n  CMQTOPIC: '消息队列-主题订阅监控(CMQTOPIC)',\n  TDMQ: '消息队列 Pulsar 版(TDMQ)',\n  TDMQ_ROCKETMQ: '消息队列 RocketMQ 版(ROCKETMQ)',\n  TDMQ_RABBITMQ: '消息队列 RabbitMQ 版(RABBITMQ)',\n  DCX: '专线接入-专用通道(DCX)',\n  DC: '专线接入-物理专线(DC)',\n  CPM: '黑石物理服务器(CPM)',\n  BM_PCX: '黑石对等连接(BM_PCX)',\n  BM_LB: '黑石外网负载均衡(BM_LB)',\n  BM_INTRA_LB: '黑石内网负载均衡(BM_INTRA_LB)',\n  CES: 'Elasticsearch指标(CES)',\n  BLOCK_STORAGE: '云硬盘(BLOCK_STORAGE)',\n  APIGATEWAY: 'API 网关(APIGATEWAY)',\n  QAAP: '全球应用加速(GAAP)',\n  ECM: '边缘计算和网络监控(ECM)',\n  ECM_BLOCK_STORAGE: '边缘计算存储监控(ECM_BLOCK_STORAGE)',\n  ECM_LB: '边缘计算负载均衡(ECM_LB)',\n  GSE: '游戏服务器伸缩(GSE)',\n  TKE: '容器服务(TKE)',\n  ECDN: '全站加速网络(ECDN)',\n  WAF: 'Web 应用防火墙(WAF)',\n  // others\n  multi_scene: '多场景版',\n  lite: '精简版',\n  cloud_monitor: '云监控',\n  cloud_log_service: '日志服务',\n  real_user_monitoring: '前端性能监控',\n  region: '地域',\n  log_topic: '日志主题',\n  search_statement: '检索语句',\n  time_unit: 'Time unit',\n  seconds: 'seconds',\n  search_description: '按照具体的查询条件搜索实例，默认拉取前 20 条实例',\n  // region\n  'ap-guangzhou': '华南地区(广州)',\n  'ap-shenzhen-fsi': '华南地区(深圳金融)',\n  'ap-guangzhou-open': '华南地区(广州OPEN)',\n  'ap-shenzhen': '华南地区(深圳)',\n  'ap-qingyuan': '华南地区(清远)',\n  'ap-shanghai': '华东地区(上海)',\n  'ap-shanghai-fsi': '华东地区(上海金融)',\n  'ap-jinan-ec': '华东地区(济南)',\n  'ap-hangzhou-ec': '华东地区(杭州)',\n  'ap-nanjing': '华东地区(南京)',\n  'ap-fuzhou-ec': '华东地区(福州)',\n  'ap-hefei-ec': '华东地区(合肥)',\n  'ap-beijing': '华北地区(北京)',\n  'ap-tianjin': '华北地区(天津)',\n  'ap-beijing-fsi': '华北地区(北京金融)',\n  'ap-shijiazhuang-ec': '华北地区(石家庄)',\n  'ap-wuhan-ec': '华中地区(武汉)',\n  'ap-changsha-ec': '华中地区(长沙)',\n  'ap-zhengzhou-ec': '华中地区(郑州)',\n  'ap-chengdu': '西南地区(成都)',\n  'ap-chongqing': '西南地区(重庆)',\n  'ap-xian-ec': '西北地区(西安)',\n  'ap-shenyang-ec': '东北地区(沈阳)',\n  'ap-taipei': '港澳台地区(中国台北)',\n  'ap-hongkong': '港澳台地区(中国香港)',\n  'ap-seoul': '亚太东北(首尔)',\n  'ap-tokyo': '亚太东北(东京)',\n  'ap-singapore': '亚太东南(新加坡)',\n  'ap-bangkok': '亚太东南(曼谷)',\n  'ap-jakarta': '亚太东南(雅加达)',\n  'na-siliconvalley': '美国西部(硅谷)',\n  'eu-frankfurt': '欧洲地区(法兰克福)',\n  'eu-moscow': '欧洲地区(莫斯科)',\n  'ap-mumbai': '亚太南部(孟买)',\n  'na-ashburn': '美国东部(弗吉尼亚)',\n  'sa-saopaulo': '南美地区(圣保罗)',\n  'na-toronto': '北美地区(多伦多)',\n};\nexport default zh_CN;\n","const en_US = {\n  language: 'Language',\n  enable_intranet_API_mode: 'Enable Intranet API Mode',\n  cloud_database: 'Cloud Database',\n  cloud_load_balancer: 'Cloud Load Balancer',\n  virtual_private_cloud: 'Virtual Private Cloud',\n  content_delivery_network: 'Content Delivery Network',\n  message_queue: 'Message Queue',\n  direct_connect: 'Direct Connect',\n  cloud_physical_machine: 'Cloud Physical Machine',\n  elastic_mapReduce: 'Elastic MapReduce',\n  edge_computing_machine: 'Edge Computing Machine',\n  // namespace\n  RUM: 'Real User Monitoring(RUM)',\n  CLS: 'Cloud Log Service(CLS)',\n  CVM: 'Cloud Virtual Machine(CVM)',\n  CDB: 'TencentDB for MySQL(CDB)',\n  CMONGO: 'TencentDB for MongoDB(CMONGO)',\n  POSTGRES: 'TencentDB for PostgreSQL(POSTGRES)',\n  REDIS: 'TencentDB for Redis(REDIS)',\n  REDIS_MEM: 'TencentDB for Redis(Memory Edition, 5-Second)(REDIS_MEM)',\n  SQLSERVER: 'TencentDB for SQL Server(SQLSERVER)',\n  CYNOSDB_MYSQL: 'TencentDB for CYNOSDB_MYSQL(CYNOSDB_MYSQL)',\n  TCAPLUS: 'TencentDB for TcaplusDB(TCAPLUS)',\n  TDMYSQL: 'TDSQL for MySQL(TDMYSQL)',\n  PCX: 'Peering Connection(PCX)',\n  BWP: 'Bandwidth Packet(BWP)',\n  NAT_GATEWAY: 'NAT Gateway(NAT_GATEWAY)',\n  VPNGW: 'VPN Gateway(VPNGW)',\n  VPNX: 'VPN Tunnel(VPNX)',\n  DCG: 'Direct Connect Gateway(DCG)',\n  CEIP_SUMMARY: 'Anycast EIP(CEIP_SUMMARY)',\n  VPC_NET_DETECT: 'Network Detection(VPC_NET_DETECT)',\n  VBC: 'Cloud Connect Network(VBC)',\n  LB: 'Elastic IP(LB)',\n  LB_PUBLIC: 'Public Network CLB(LB_PUBLIC)',\n  LB_PRIVATE: 'Private Network CLB Layer-4 Protocol(LB_PRIVATE)',\n  LOADBALANCE: 'Private Network CLB Layer-7 Protocol(LOADBALANCE)',\n  CDN: 'Chinese Mainland Domain(CDN)',\n  CDN_LOG_DATA: 'Province(CDN_LOG_DATA)',\n  OV_CDN: 'Overseas Domain(OV_CDN)',\n  SCF_V2: 'Serverless Cloud Function(SCF)',\n  CFS: 'Cloud File Storage(CFS)',\n  COS: 'Cloud Object Storage(COS)',\n  CKAFKA: 'Message Queue CKafka(CKAFKA)',\n  CMQ: 'Message Queue for Queue Service(CMQ)',\n  CMQTOPIC: 'Message Queue for Topic Subscription(CMQTOPIC)',\n  TDMQ: 'Tencent Distributed Message Queue for Pulsar(TDMQ)',\n  TDMQ_ROCKETMQ: 'Tencent Distributed Message Queue for RocketMQ(ROCKETMQ)',\n  TDMQ_RABBITMQ: 'Tencent Distributed Message Queue for RabbitMQ(RABBITMQ)',\n  DCX: 'Direct Connect for Dedicated Tunnel(DCX)',\n  DC: 'Direct Connect for Connection(DC)',\n  CPM: 'Cloud Physical Machine(CPM)',\n  BM_PCX: 'Cloud Physical Machine for Peering Connection(BM_PCX)',\n  BM_LB: 'Cloud Physical Machine for Public Network CLB(BM_LB)',\n  BM_INTRA_LB: 'Cloud Physical Machine for Private Network CLB(BM_INTRA_LB)',\n  CES: 'Elasticsearch Service(CES)',\n  BLOCK_STORAGE: 'Cloud Block Storage(BLOCK_STORAGE)',\n  APIGATEWAY: 'API Gateway(APIGATEWAY)',\n  QAAP: 'Global Application Acceleration Platform(GAAP)',\n  ECM: 'Edge Computing Machine for Computation and Networking(ECM)',\n  ECM_BLOCK_STORAGE: 'Edge Computing Machine for Block Storage(ECM_BLOCK_STORAGE)',\n  ECM_LB: 'Edge Computing Machine for Layer-4 CLB(ECM_LB)',\n  GSE: 'Game Server Elastic-scaling(GSE)',\n  TKE: 'Tencent Kubernetes Engine(TKE)',\n  ECDN: 'Enterprise Content Delivery Network(ECDN)',\n  WAF: 'Web Application Firewall(WAF)',\n  // others\n  multi_scene: 'Multi-Scene',\n  lite: 'Lite',\n  cloud_monitor: 'Cloud Monitor',\n  cloud_log_service: 'Cloud Log Service',\n  real_user_monitoring: 'Real User Monitoring',\n  region: 'Region',\n  log_topic: 'Log Topic',\n  search_statement: 'Search Statement',\n  time_unit: 'Time unit',\n  seconds: 'seconds',\n  search_description:\n    'Search for instances according to specific query conditions, and pull the first 20 instances by default',\n  // region\n  'ap-guangzhou': 'South China(Guangzhou)',\n  'ap-shenzhen-fsi': 'South China(Shenzhen Finance)',\n  'ap-guangzhou-open': 'South China(Guangzhou OPEN)',\n  'ap-shenzhen': 'South China(Shenzhen)',\n  'ap-qingyuan': 'South China(Qingyuan)',\n  'ap-shanghai': 'East China(Shanghai)',\n  'ap-shanghai-fsi': 'East China(Shanghai Finance)',\n  'ap-jinan-ec': 'East China(Jinan)',\n  'ap-hangzhou-ec': 'East China(Hangzhou)',\n  'ap-nanjing': 'East China(Nanjing)',\n  'ap-fuzhou-ec': 'East China(Fuzhou)',\n  'ap-hefei-ec': 'East China(Hefei)',\n  'ap-beijing': 'North China region(Beijing)',\n  'ap-tianjin': 'North China region(Tianjin)',\n  'ap-beijing-fsi': 'North China region(Beijing Finance)',\n  'ap-shijiazhuang-ec': 'North China region(Shijiazhuang)',\n  'ap-wuhan-ec': 'Central China(Wuhan)',\n  'ap-changsha-ec': 'Central China(Changsha)',\n  'ap-zhengzhou-ec': 'Central China(Zhengzhou)',\n  'ap-chengdu': 'Southwest China(Chengdu)',\n  'ap-chongqing': 'Southwest China(Chongqing)',\n  'ap-xian-ec': \"Northwest region(Xi'an)\",\n  'ap-shenyang-ec': 'Northeast China(Shenyang)',\n  'ap-taipei': 'Hong Kong, Macau and Taiwan (China)(Taipei, China)',\n  'ap-hongkong': 'Hong Kong, Macau and Taiwan (China)(Hong Kong, China)',\n  'ap-seoul': 'Northeast Asia(Seoul)',\n  'ap-tokyo': 'Northeast Asia(Tokyo)',\n  'ap-singapore': 'Southeast Asia(Singapore)',\n  'ap-bangkok': 'Southeast Asia(Bangkok)',\n  'ap-jakarta': 'Southeast Asia(Jakarta)',\n  'na-siliconvalley': 'US West(Silicon Valley)',\n  'eu-frankfurt': 'Europe(Frankfurt)',\n  'eu-moscow': 'Europe(Northeastern Europe)',\n  'ap-mumbai': 'South Asia(Mumbai)',\n  'na-ashburn': 'US East(Virginia)',\n  'sa-saopaulo': 'South America(São Paulo)',\n  'na-toronto': 'North America(Toronto)',\n};\nexport default en_US;\n","import zh_CN from './zh_CN';\nimport en_US from './en_US';\n\nlet locale_language = 'zh-CN'\n\nexport enum Language {\n  Chinese = 'zh-CN',\n  English = 'en-US',\n}\n\nexport const t = (key: string) => {\n  if (locale_language === Language.Chinese) {\n    return zh_CN[key]\n  }\n  return en_US[key];\n}\n\nexport const setLanguage = (language: Language) => {\n  locale_language = language;\n}\n\nexport const getLanguage = () => locale_language;","import moment from 'moment';\n\nconst HttpRequestMethod = 'POST';\nconst CanonicalUri = '/';\nconst CanonicalQueryString = '';\nconst ContentType = 'application/json';\n\nexport default class Sign {\n  /**\n   * Tencent Cloud API Signature v3 reference: https://cloud.tencent.com/document/api/213/30654\n   * secretId: SecretId for identifying identity that is applied for on Cloud API Key.\n   * A SecretId corresponds to a unique SecretKey, which is used to generate the request Signature.\n   * secretKey: SecretKey is used to encrypt the signature string and verify the signature string on the server\n   * service: the name of service, which must be consistent with the request domain, such as cvm\n   * action: The name of the API for the desired operation\n   * host: the domain of service，which must be consistent with the request domain, such as cvm.tencentcloudapi.com\n   * version:  PI version, such as 2017-03-12\n   * payload: The request parameters\n   */\n\n  secretId: string;\n\n  service: string;\n  action: string;\n  host: string;\n  version: string;\n  payload: Record<string, any> | string;\n  region: string;\n  timestamp: number;\n  date: string;\n  backendSrv: any;\n  datasourceId: Number;\n  constructor(options) {\n    const { secretId, service, action, host, version, payload = '', region, backendSrv, datasourceId } = options;\n    this.secretId = secretId;\n    // this.secretKey = secretKey;\n    this.service = service;\n    this.action = action;\n    this.host = host;\n    this.version = version;\n    this.payload = typeof payload === 'string' ? payload : JSON.stringify(payload);\n    this.region = region;\n    const nowDate = moment().utc();\n    this.timestamp = nowDate.unix();\n    this.date = nowDate.format('YYYY-MM-DD');\n    this.backendSrv = backendSrv;\n    this.datasourceId = datasourceId;\n  }\n\n  async getHeader() {\n    return this.getResourceHeader();\n  }\n\n  async getResourceHeader() {\n    let res: { authorization?: string; token?: string; intranet?: boolean } = {};\n    try {\n      const resp = await this.backendSrv.datasourceRequest({\n        url: `/api/datasources/${this.datasourceId}/resources/sign_v3`,\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        data: {\n          Host: this.host,\n          Service: this.service,\n          Version: this.version,\n          Action: this.action,\n          Region: this.region,\n          Timestamp: this.timestamp,\n          Method: HttpRequestMethod,\n          Uri: CanonicalUri,\n          Query: CanonicalQueryString,\n          Body: this.payload,\n          Headers: {\n            'content-type': ContentType,\n            host: this.host,\n          },\n        },\n      });\n      res = resp.data;\n    } catch (err) {}\n    const { authorization, token, intranet } = res;\n    const grafanaVersion = (window as any).grafanaBootData?.settings?.buildInfo?.version || '0.0.0';\n    const headers = {\n      Authorization: authorization,\n      'Content-Type': ContentType,\n      'X-TC-Action': this.action,\n      'X-TC-Timestamp': this.timestamp.toString(),\n      'X-TC-Version': this.version,\n      'X-TC-RequestClient': `GF_${grafanaVersion}_PL_CM_${process.env.TENCENT_CLOUD_MONITOR_GRAFANA_PLUGIN_VERSION}`,\n      ...(this.region && {\n        'X-TC-Region': this.region,\n      }),\n      ...(token && {\n        'X-TC-Token': token,\n      }),\n      intranet: intranet,\n    };\n    return headers;\n  }\n}\n","/**\n *\n * @param defaults 为对象\n * secretId\n * secretKey\n * action\n * region\n * host\n */\n\nexport default class SignV2 {\n  defaults: any = {\n    path: '/v2/index.php',\n    method: 'POST',\n  };\n  backendSrv: any;\n  datasourceId: Number;\n  constructor(defaults: any = {}) {\n    this.defaults = Object.assign(this.defaults, defaults);\n    this.defaults.secretKey = '';\n    this.backendSrv = defaults.backendSrv;\n    this.datasourceId = defaults.datasourceId;\n  }\n\n  generateQueryString = async () => {\n    return this.getResourceQueryString();\n  };\n\n  async getResourceQueryString() {\n    let res: { path?: string; querystring?: any; host?: string; intranet?: boolean } = {};\n    try {\n      const { data } = this.defaults;\n      const payload = typeof data === 'string' ? data : JSON.stringify(data);\n      const resp = await this.backendSrv.datasourceRequest({\n        url: `/api/datasources/${this.datasourceId}/resources/sign_v2`,\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        data: {\n          Host: this.defaults.host,\n          Action: this.defaults.action,\n          Version: this.defaults.version,\n          Region: this.defaults.region,\n          Method: this.defaults.method,\n          Uri: this.defaults.path,\n          Query: '',\n          Body: payload,\n        },\n      });\n      res = resp.data;\n    } catch (err) {}\n    const { path, querystring, host, intranet } = res;\n    return { queryString: querystring, path: path, host: host, intranet: intranet };\n  }\n}\n","import _ from 'lodash';\nimport qs from 'qs';\nimport { SERVICES } from '../tc_monitor';\nimport Sign from './sign';\nimport SignV2 from './signV2';\nimport { toDataQueryResponse } from '@grafana/runtime';\nimport { getLanguage } from '../../locale';\n\nimport packageInfo from '../plugin.json';\nexport const TcDataSourceId = packageInfo.id;\n\n// the services of tencentcloud monitor api\nconst FINACE_REGIONS = ['ap-shanghai-fsi', 'ap-shenzhen-fsi'];\nconst SERVICES_API_INFO = {\n  api: {\n    service: 'api',\n    version: '2020-11-06',\n    path: '/api',\n    host: 'api.tencentcloudapi.com',\n  },\n  // monitor api info\n  monitor: {\n    service: 'monitor',\n    version: '2018-07-24',\n    path: '/monitor',\n    host: 'monitor.tencentcloudapi.com',\n  },\n  // cls api info\n  cls: {\n    service: 'cls',\n    version: '2020-10-16',\n    path: '/cls',\n    host: 'cls.tencentcloudapi.com',\n  },\n  // cvm api info\n  cvm: {\n    service: 'cvm',\n    version: '2017-03-12',\n    path: '/cvm',\n    host: 'cvm.tencentcloudapi.com',\n  },\n  // cdb api info\n  cdb: {\n    service: 'cdb',\n    version: '2017-03-20',\n    path: '/cdb',\n    host: 'cdb.tencentcloudapi.com',\n  },\n  // pcx api info\n  pcx: {\n    service: 'pcx',\n    version: '',\n    path: '/pcx',\n    host: 'vpc.api.qcloud.com',\n  },\n  // vpc api info\n  vpc: {\n    service: 'vpc',\n    version: '2017-03-12',\n    path: '/vpc',\n    host: 'vpc.tencentcloudapi.com',\n  },\n  // mongodb api info\n  mongodb: {\n    service: 'mongodb',\n    version: '2019-07-25',\n    path: '/mongodb',\n    host: 'mongodb.tencentcloudapi.com',\n  },\n  // 负载均衡 clb\n  clb: {\n    service: 'clb',\n    version: '2018-03-17',\n    path: '/clb',\n    host: 'clb.tencentcloudapi.com',\n  },\n  // postgresql api info\n  postgres: {\n    service: 'postgres',\n    version: '2017-03-12',\n    path: '/postgres',\n    host: 'postgres.tencentcloudapi.com',\n  },\n  // cdn info\n  cdn: {\n    service: 'cdn',\n    version: '2018-06-06',\n    path: '/cdn',\n    host: 'cdn.tencentcloudapi.com',\n  },\n  // redis info\n  redis: {\n    service: 'redis',\n    version: '2018-04-12',\n    path: '/redis',\n    host: 'redis.tencentcloudapi.com',\n  },\n  scf: {\n    service: 'scf',\n    version: '2018-04-16',\n    path: '/scf',\n    host: 'scf.tencentcloudapi.com',\n  },\n  cfs: {\n    service: 'cfs',\n    version: '2019-07-19',\n    path: '/cfs',\n    host: 'cfs.tencentcloudapi.com',\n  },\n  ckafka: {\n    service: 'ckafka',\n    version: '2019-08-19',\n    path: '/ckafka',\n    host: 'ckafka.tencentcloudapi.com',\n  },\n  // 专线接入实例列表\n  dc: {\n    service: 'dc',\n    version: '2018-04-10',\n    path: '/dc',\n    host: 'dc.tencentcloudapi.com',\n  },\n  // cynosdb实例列表\n  cynosdb: {\n    service: 'cynosdb',\n    version: '2019-01-07',\n    path: '/cynosdb',\n    host: 'cynosdb.tencentcloudapi.com',\n  },\n  // sqlserver实例列表\n  sqlserver: {\n    service: 'sqlserver',\n    version: '2018-03-28',\n    path: '/sqlserver',\n    host: 'sqlserver.tencentcloudapi.com',\n  },\n  // bm实例列表\n  bm: {\n    service: 'bm',\n    version: '2018-04-23',\n    path: '/bm',\n    host: 'bm.tencentcloudapi.com',\n  },\n  bmeip: {\n    service: 'bmeip',\n    version: '2018-06-25',\n    path: '/bmeip',\n    host: 'bmeip.tencentcloudapi.com',\n  },\n  bmvpc: {\n    service: 'bmvpc',\n    version: '2018-06-25',\n    path: '/bmvpc',\n    host: 'bmvpc.tencentcloudapi.com',\n  },\n  bmlb: {\n    service: 'bmlb',\n    version: '2018-06-25',\n    path: '/bmlb',\n    host: 'bmlb.tencentcloudapi.com',\n  },\n  // ES集群实例\n  es: {\n    service: 'es',\n    version: '2018-04-16',\n    path: '/es',\n    host: 'es.tencentcloudapi.com',\n  },\n  // MapReduce\n  emr: {\n    service: 'emr',\n    version: '2019-01-03',\n    path: '/emr',\n    host: 'emr.tencentcloudapi.com',\n  },\n  // CMQ消息队列\n  cmq: {\n    service: 'cmq',\n    version: '2019-03-04',\n    path: '/cmq',\n    host: 'cmq.tencentcloudapi.com',\n  },\n  cbs: {\n    service: 'cbs',\n    version: '2017-03-12',\n    path: '/cbs',\n    host: 'cbs.tencentcloudapi.com',\n  },\n  // tcaplus实例\n  tcaplusdb: {\n    service: 'tcaplusdb',\n    version: '2019-08-23',\n    path: '/tcaplusdb',\n    host: 'tcaplusdb.tencentcloudapi.com',\n  },\n  // tcaplus实例\n  dcdb: {\n    service: 'dcdb',\n    version: '2018-04-11',\n    path: '/dcdb',\n    host: 'dcdb.tencentcloudapi.com',\n  },\n  // apigateway实例\n  apigateway: {\n    service: 'apigateway',\n    version: '2018-08-08',\n    path: '/apigateway',\n    host: 'apigateway.tencentcloudapi.com',\n  },\n  tdmq: {\n    service: 'tdmq',\n    version: '2020-02-17',\n    path: '/tdmq',\n    host: 'tdmq.tencentcloudapi.com',\n  },\n  tdmq_rabbitmq: {\n    service: 'tdmq',\n    version: '2020-02-17',\n    path: '/tdmq',\n    host: 'tdmq.tencentcloudapi.com',\n  },\n  tdmq_rocketmq: {\n    service: 'tdmq',\n    version: '2020-02-17',\n    path: '/tdmq',\n    host: 'tdmq.tencentcloudapi.com',\n  },\n  gaap: {\n    service: 'gaap',\n    version: '2018-05-29',\n    path: '/gaap',\n    host: 'gaap.tencentcloudapi.com',\n  },\n  ecm: {\n    service: 'ecm',\n    version: '2019-07-19',\n    path: '/ecm',\n    host: 'ecm.tencentcloudapi.com',\n  },\n  gse: {\n    service: 'gse',\n    version: '2019-11-12',\n    path: '/gse',\n    host: 'gse.tencentcloudapi.com',\n  },\n  lighthouse: {\n    service: 'lighthouse',\n    version: '2020-03-24',\n    path: '/lighthouse',\n    host: 'lighthouse.tencentcloudapi.com',\n  },\n  tsf: {\n    service: 'tsf',\n    version: '2018-03-26',\n    path: '/tsf',\n    host: 'tsf.tencentcloudapi.com',\n  },\n  rum: {\n    service: 'rum',\n    version: '2021-06-22',\n    path: '/rum',\n    host: 'rum.tencentcloudapi.com',\n  },\n  tke: {\n    service: 'tke',\n    version: '2018-05-25',\n    path: '/tke',\n    host: 'tke.tencentcloudapi.com',\n  },\n  ecdn: {\n    service: 'ecdn',\n    version: '2019-10-12',\n    path: '/ecdn',\n    host: 'ecdn.tencentcloudapi.com',\n  },\n  waf: {\n    service: 'waf',\n    version: '2018-01-25',\n    path: '/waf',\n    host: 'waf.tencentcloudapi.com',\n  },\n  region: {\n    service: 'region',\n    version: '2022-06-27',\n    path: '/region',\n    host: 'region.tencentcloudapi.com',\n  },\n  // 不单独定义lb，因为lb同样用的是vpc的配置，同上\n  // lb: {\n  //   service: 'lb',\n  //   version: '2017-03-12',\n  //   path: '/lb',\n  //   host: 'vpc.tencentcloudapi.com'\n  // }\n  // 负载均衡四层协议 lbPrivate\n  // lbPrivate: {\n  //   service: 'lbPrivate',\n  //   version: '2018-03-17',\n  //   path: '/clb',\n  //   host: 'clb.tencentcloudapi.com',\n  // },\n};\n\nconst FINACE_HOST = {\n  scf: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/scf/shanghai',\n      host: 'scf.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/scf/shenzhen',\n      host: 'scf.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  cfs: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/cfs/shanghai',\n      host: 'cfs.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/cfs/shenzhen',\n      host: 'cfs.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  ckafka: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/ckafka/shanghai',\n      host: 'ckafka.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/ckafka/shenzhen',\n      host: 'ckafka.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  clb: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/clb/shanghai',\n      host: 'clb.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/clb/shenzhen',\n      host: 'clb.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  mongodb: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/mongodb/shanghai',\n      host: 'mongodb.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/mongodb/shenzhen',\n      host: 'mongodb.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  vpc: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/vpc/shanghai',\n      host: 'vpc.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/vpc/shenzhen',\n      host: 'vpc.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  cvm: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/cvm/shanghai',\n      host: 'cvm.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/cvm/shenzhen',\n      host: 'cvm.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  cdb: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/cdb/shanghai',\n      host: 'cdb.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/cdb/shenzhen',\n      host: 'cdb.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  monitor: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/monitor/shanghai',\n      host: 'monitor.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/monitor/shenzhen',\n      host: 'monitor.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  postgres: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/postgres/shanghai',\n      host: 'postgres.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/postgres/shenzhen',\n      host: 'postgres.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  emr: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/emr/shanghai',\n      host: 'emr.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/emr/shenzhen',\n      host: 'emr.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  cmq: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/cmq/shanghai',\n      host: 'cmq.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/cmq/shenzhen',\n      host: 'cmq.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  cls: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/cls/shanghai',\n      host: 'cls.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/cls/shenzhen',\n      host: 'cls.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n};\n\n// 获取对应业务的 API 接口信息\nexport function GetServiceAPIInfo(region, service) {\n  return { ...(SERVICES_API_INFO[service] || {}), ...getHostAndPath(region, service) };\n}\n\n// get host and path for finance regions\nfunction getHostAndPath(region, service) {\n  if (_.indexOf(FINACE_REGIONS, region) === -1) {\n    return {};\n  }\n  return (\n    _.find(\n      _.find(FINACE_HOST, (__, key) => key === service),\n      (__, key) => key === region\n    ) || {}\n  );\n}\n\n// 变量替换指定实例按照那个字段展示\nexport const VARIABLE_ALIAS = 'instancealias';\n\nexport function GetServiceFromNamespace(namespace) {\n  return _.get(\n    _.find(SERVICES, (service) => service.namespace === namespace),\n    'service'\n  );\n}\n// 处理存量target中保存的qce/cvm\nexport function GetLabelFromNamespace(namespace) {\n  return _.get(\n    _.find(SERVICES, (service) => service.namespace === namespace || service.label === namespace),\n    'label'\n  );\n}\n// parse template variable query params\nexport function ParseMetricQuery(query = '') {\n  if (!query) {\n    return {};\n  }\n  const result = {};\n  const queries = _.split(query, '&');\n  _.forEach(queries, (item) => {\n    const str = _.split(item, '=');\n    if (_.trim(_.get(str, '0', ''))) {\n      let val = _.trim(_.get(str, '1', ''));\n      try {\n        val = JSON.parse(val);\n      } catch (e) {\n        // console.log({ val });\n      }\n      result[_.toLower(_.trim(_.get(str, '0', '')))] = val;\n    }\n  });\n  return result;\n}\n\n// parse template variable regex params\nexport function ParseMetricRegex(regex = '') {\n  if (!regex) {\n    return [];\n  }\n  regex = regex.replace(/：/g, ':');\n  regex = regex.replace(/，/g, ',');\n  const regexParams = ParseMetricQuery(regex);\n  const result: any[] = [];\n  _.forEach(regexParams, (value, key) => {\n    if (key === 'tag:tag-key') {\n      const valuesArr = _.split(value, ',');\n      _.forEach(valuesArr, (item) => {\n        const temp = _.split(item, ':');\n        if (temp.length === 2) {\n          result.push({ Name: `tag:${temp[0]}`, Values: temp.slice(1) });\n        }\n      });\n    } else {\n      result.push({ Name: key, Values: _.split(value, ',') });\n    }\n  });\n  return result;\n}\n\n// get the actual value of template variable\nfunction parseVariableFormat(varname: string) {\n  varname = String(varname || '');\n  // $varname\n  let varFlag = false;\n  const regResult1 = varname.match(/^\\${?(\\w+)}?/);\n  if (regResult1) {\n    varFlag = true;\n    varname = `\\$\\{${regResult1[1]}\\:json\\}`;\n  }\n  // [[varname]]\n  const regResult2 = varname.match(/^\\[\\[(\\w+)(\\:\\w+)?\\]\\]/);\n  if (regResult2) {\n    varFlag = true;\n    varname = `\\$\\{${regResult2[1]}\\:json\\}`;\n  }\n  return { varname, varFlag };\n}\n\nexport function ReplaceVariable(templateSrv, scopedVars, field, multiple = false) {\n  const { varname, varFlag } = parseVariableFormat(field);\n  let replaceVar = templateSrv.replace(varname, scopedVars);\n  if (varFlag) {\n    try {\n      replaceVar = JSON.parse(replaceVar);\n    } catch (error) {}\n  }\n  if (!multiple && _.isArray(replaceVar)) {\n    replaceVar = _.get(replaceVar, '0', '');\n  }\n  return replaceVar;\n}\n\n// get dimensions for instance query param\nexport function GetDimensions(obj) {\n  if (_.isEmpty(obj)) {\n    return [];\n  }\n  const dimensions: any[] = [];\n  _.forEach(obj, (item) => {\n    if (item.Value !== null && item.Value !== undefined && item.Value !== '') {\n      dimensions.push({ Name: item.Name, Value: typeof item.Value === 'string' ? item.Value : `${item.Value}` });\n    }\n  });\n  return dimensions;\n}\n\n// parse query data result for panel\nexport function ParseQueryResult(response, instances: any[] = [], timeshift = 0) {\n  const instanceList = _.cloneDeep(instances);\n\n  const dataPoints = _.get(response, 'DataPoints', []);\n  return _.map(dataPoints, (dataPoint) => {\n    let instanceAliasValue = _.get(dataPoint, 'Dimensions[0].Value');\n    for (let i = 0; i < instanceList.length; i++) {\n      if (isInstanceMatch(instanceList[i], _.get(dataPoint, 'Dimensions', []))) {\n        instanceAliasValue = instanceList[i]._InstanceAliasValue;\n        instanceList.splice(i, 1);\n        break;\n      }\n    }\n    return {\n      target: `${response.MetricName} - ${instanceAliasValue}`,\n      datapoints: parseDataPoint(dataPoint, timeshift),\n    };\n  });\n}\n\n// parse tencent cloud monitor response data to grafana panel data\nfunction parseDataPoint(dataPoint, timeshift = 0) {\n  const timestamps = _.get(dataPoint, 'Timestamps', []);\n  const values = _.get(dataPoint, 'Values', []);\n  const result = timestamps.map((timestamp, index) => {\n    return [values[index], timestamp * 1000 + timeshift];\n  });\n\n  return result;\n}\n\n// check whether instance is match or not\nfunction isInstanceMatch(instance, dimensions) {\n  let match = true;\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < dimensions.length; i++) {\n    if (_.get(instance, dimensions[i].Name, '').toString() !== dimensions[i].Value.toString()) {\n      match = false;\n      break;\n    }\n  }\n  return match;\n}\n\n/**\n * 检查某个变量是否模板变量，即是否匹配 ${varnam} 或 [[varname]]\n *\n * @param field 变量字段名\n */\nexport function isVariable(value) {\n  if (value && (value.match(/^\\${?(\\w+)}?/) || value.match(/^\\[\\[(\\w+)(\\:\\w+)?\\]\\]/))) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * 腾讯云 API 3.0 接口协议\n * @param options 接口请求对象 { url: string, data?: object }\n * @param service 产品名字 'cvm'\n * @param signObj 接口请求相关信息 { region?: string, action: string }\n * @param secretId\n * @param secretKey\n */\nexport async function GetRequestParams(options, service, signObj: any = {}, secretId, datasourceId, backendSrv) {\n  const signParams = {\n    secretId,\n    payload: options.data || '',\n    ...signObj,\n    ...(_.pick(GetServiceAPIInfo(signObj.region || '', service), ['service', 'host', 'version']) || {}),\n    backendSrv,\n    datasourceId,\n  };\n  const sign = new Sign(signParams);\n  const { intranet, ...headerSigned } = await sign.getHeader();\n  // 传入x-tc-language实现国际化\n  // zh-CN en-US ko-KR ja-JP\n  options.headers = Object.assign(options.headers || {}, { ...headerSigned }, { 'x-tc-language': getLanguage() });\n  options.method = 'POST';\n  if (intranet) {\n    options.url += '-internal';\n  }\n  return options;\n}\n\n/**\n *  腾讯云 API 2.0 接口协议\n * @param options 接口请求对象 { url: string, data?: object }\n * @param service 产品名字 'cvm'\n * @param signObj 接口请求相关信息 { region?: string, action: string }\n * @param secretId\n * @param secretKey\n */\nexport async function GetRequestParamsV2(\n  options: any = {},\n  service,\n  signObj: any = {},\n  secretId,\n  datasourceId,\n  backendSrv\n) {\n  const data = options.data || {};\n  const signParams = {\n    secretId,\n    data,\n    ...signObj,\n    ...(_.pick(GetServiceAPIInfo(signObj.region || '', service), ['host', 'version']) || {}),\n    backendSrv,\n    datasourceId,\n  };\n  options.method = 'POST';\n  const sign = new SignV2(signParams);\n  options.headers = Object.assign(options.headers || {}, { 'Content-Type': 'application/x-www-form-urlencoded' });\n  const { queryString, path, host, intranet } = await sign.generateQueryString();\n  options.data = qs.stringify({\n    ...options.data,\n    ...queryString,\n    ...(host && { host: host }),\n  });\n  if (intranet) {\n    // TODO: qcloud.com intranet host\n    console.log('got intranet for sign v2');\n  }\n  options.url += path;\n  return options;\n}\n\nexport function SliceLength(total = 0, len = 1) {\n  const result: any[] = [];\n  const num = Math.ceil(total / len);\n  for (let i = 1; i < num; i++) {\n    result.push({ Offset: len * i });\n  }\n  return result;\n}\n\nexport const FilterKeys = ['Namespace', 'Offset', 'Limit', 'SearchKey', 'Description', 'OrderBy', 'Order'];\n\nexport function parseDataFromBackendPlugin(res) {\n  const { data } = toDataQueryResponse(res);\n  return {\n    authorization: _.get(data, '[0].meta.custom', ''),\n  };\n}\n\n/** 当前环境是否为非生产环境 */\nexport const IS_DEVELOPMENT_ENVIRONMENT = !(process.env.NODE_ENV === 'production');\n\n/**\n * @link https://github.com/grafana/grafana/blob/3c6e0e8ef85048af952367751e478c08342e17b4/packages/grafana-data/src/types/app.ts#L12\n */\nexport enum CoreApp {\n  CloudAlerting = 'cloud-alerting',\n  UnifiedAlerting = 'unified-alerting',\n  Dashboard = 'dashboard',\n  Explore = 'explore',\n  Unknown = 'unknown',\n  PanelEditor = 'panel-editor',\n  PanelViewer = 'panel-viewer',\n}\n","import _ from 'lodash';\nimport moment from 'moment';\nimport DatasourceInterface from '../MonitorDatasource';\nimport {\n  GetRequestParams,\n  GetServiceAPIInfo,\n  ReplaceVariable,\n  GetDimensions,\n  ParseQueryResult,\n  SliceLength,\n} from '../../common/constants';\nimport instanceStorage from '../../common/datasourceStorage';\nimport { MetricQuery } from './types';\nimport { getNamesapceFromService, getTimeShiftInMs } from '../../common/utils';\nimport { Language, setLanguage } from '../../../locale';\n\nexport interface TemplateQueryIdType {\n  instance: string;\n  listener?: string;\n}\n\ninterface queryConfigType {\n  dim_KeyInStorage: string;\n  dim_KeyInTarget?: string;\n  dim_KeyInIns?: string;\n  dim_KeyInMap: string;\n}\n\nexport abstract class BaseDatasource implements DatasourceInterface {\n  Namespace?: string;\n  service: string;\n  instanceListCache: any[] = [];\n  extraMetricDims: string[] = [];\n  url: string;\n  instanceSettings: any;\n  backendSrv: any;\n  templateSrv: any;\n  secretId: string;\n  checkKeys: string[] = [];\n  MetricReqConfig: {\n    resultFilter?: Function;\n  } = {};\n  extrasAlias?: string[] = [];\n  /*\n  一个配置：(用于处理除了InstanceId之外的)(Record中的key是指标修正之后的维度，即通过InvalidDemsion处理后)\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget 通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。为空则取即通过InvalidDemsion处理后的key\n  3 dim_KeyInMap 保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。即：templateQueryIdMap中内容。联合上面2的内容筛选出原始sourceMap\n  4 通过这个dim和sourceMap获取维度值。即sourceMap[dim]\n  */\n  queryMonitorExtraConfg: Record<string, queryConfigType> = {};\n  CandiateDimensions?: Record<string, string> = {};\n\n  InstanceReqConfig?: {\n    service?: string;\n    action: string;\n    responseField: string;\n    interceptor?: {\n      request?: (params: unknown) => unknown;\n      response?: (data: unknown) => unknown;\n    };\n  };\n  InvalidDimensions?: Record<string, string>;\n\n  abstract InstanceAliasList: string[];\n  abstract templateQueryIdMap: TemplateQueryIdType; // 必须为标识\n\n  /** @ngInject */\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    this.instanceSettings = instanceSettings;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.url = instanceSettings.url;\n    this.secretId = (instanceSettings.jsonData || {}).secretId || '';\n    setLanguage(instanceSettings.jsonData.language || Language.Chinese);\n  }\n\n  get namespace() {\n    // 需要注意的是this.service来自于原型上，在实例中导入时注入\n    return this.Namespace || getNamesapceFromService(this.service);\n  }\n\n  // 获取额外要显示到图例里的内容\n  getOtherAlias(instance: any, target: any): string {\n    let result = '';\n    const alias = instance._InstanceAliasValue;\n    this.extrasAlias?.forEach((extra) => {\n      const extraAlia = this.getVariable(target[extra]);\n      if (extraAlia && alias.indexOf(extraAlia) === -1) {\n        result += ` - ${extraAlia}`;\n      }\n    });\n    return result;\n  }\n\n  /* 格式化模板变量上的显示 */\n  getAliasValue(instance: Record<string, any>, alias: string) {\n    const result = instance[alias];\n    return Array.isArray(result) ? result.join() : result;\n  }\n\n  formatVarDisplay(instance: Record<string, any>, displayTpl: string | undefined, instanceAlias: string) {\n    // 获取display=aaa${InstanceName}bbb${InstanceId}ccc\n    if (displayTpl) {\n      return displayTpl.replace(/\\$\\{(\\w+)\\}/g, (a, b) => {\n        if (!b || !this.InstanceAliasList.includes(b)) {\n          return '';\n        }\n        return this.getAliasValue(instance, b);\n      });\n    }\n    return this.getAliasValue(instance, instanceAlias);\n  }\n  /**\n   * @param query 模板变量配置填写的 Query 参数对象，由顶层将字符串转换为了对象\n   */\n  async metricFindQuery(query: MetricQuery, regex?: string) {\n    const { action, namespace, display, payload = {} } = query;\n    let { region, instancealias = this.templateQueryIdMap.instance } = query;\n    if (!action || !namespace) {\n      return [];\n    }\n    // 支持payload里传入模板变量\n    if (_.isObject(payload)) {\n      _.forEach(payload, (value, key) => {\n        payload[key] = _.isString(value) ? this.getVariable(value) : value;\n      });\n    }\n\n    // 查询地域列表\n    const regionQuery = action.match(/^DescribeRegions$/i);\n    if (regionQuery) {\n      return this.getRegions();\n    }\n\n    region = this.getVariable(region); // 将模板region转换为真实值\n\n    // 查询实例列表\n    if (region && action.match(/^DescribeInstances/i)) {\n      const result = await this.getVariableInstances(region, payload);\n      instancealias = this.InstanceAliasList.includes(instancealias) ? instancealias : this.templateQueryIdMap.instance;\n\n      const res = result.flatMap((item) => {\n        const insAlias = this.formatVarDisplay(item, display, instancealias);\n\n        item._InstanceAliasValue = insAlias; // FIXME:\n\n        if (!item[instancealias]) return [];\n        return [\n          {\n            text: insAlias,\n            value: item[this.templateQueryIdMap.instance],\n          },\n        ];\n      });\n\n      // 缓存全量实例列表\n      await instanceStorage.setInstance(this.service, result);\n      return res;\n    }\n\n    // 在instance实例的基础上查询其他数据\n    let instance = this.getVariable(query['instance']);\n    if (_.isArray(instance)) instance = instance[0]; // 有额外维度，仅支持实例单选情况\n    if (region && action && instance) {\n      try {\n        // instance = JSON.parse(instance);\n        const instanceCache = await instanceStorage.getInstance(this.service);\n\n        instance = _.cloneDeep(instanceCache.find((item) => item[this.templateQueryIdMap.instance] === instance)) ?? {};\n        // eslint-disable-next-line no-empty\n      } catch (error) {}\n      return this.fetchMetricData(action, region, instance, query);\n    }\n\n    return Promise.resolve([]);\n  }\n  // 获取指标数据\n  async fetchMetricData(action: string, region: string, instance: any, query?: any) {\n    return [];\n  }\n\n  /**\n   * 根据 Panel 的配置项，获取相应的监控数据\n   *\n   * @param options Panel 的配置参数\n   * @return 返回数据数组，示例如下\n   * [\n   *   {\n   *     \"target\": \"AccOuttraffic - ins-123\",\n   *     \"datapoints\": [\n   *       [861, 1450754160000],\n   *       [767, 1450754220000]\n   *     ]\n   *   }\n   * ]\n   */\n  async dimensionsFormat(dimKeys, ins, dimensionObject, target, service, options) {\n    for (let key of dimKeys) {\n      let keyTmp = key;\n      const invalidDim = this.InvalidDimensions || this.getInvalidDimensions(this, target[service]);\n      if (invalidDim[key]) {\n        // 从【维度中】的字段到【实例中】字段的映射。 { functionName: FunctionName }\n        keyTmp = invalidDim[key];\n        ins[key] = ins[keyTmp];\n      }\n\n      let extraDimValue = this.getVariable(target[service][keyTmp]);\n      if (this.queryMonitorExtraConfg[keyTmp]) {\n        const {\n          dim_KeyInStorage,\n          dim_KeyInTarget = keyTmp,\n          dim_KeyInMap,\n          dim_KeyInIns,\n        } = this.queryMonitorExtraConfg[keyTmp];\n        let extraIns = ReplaceVariable(this.templateSrv, options.scopedVars, target[service][dim_KeyInTarget], true);\n        let extraSourceMap: any = {};\n        try {\n          extraSourceMap = JSON.parse(extraIns); // 兼容json字符串的 形式\n        } catch (error) {\n          if (_.isArray(extraIns)) extraIns = extraIns[0]; // 如果多个，取第一个。除了实例ID 暂不支持其他纬度多选\n          const extraStorage = await instanceStorage.getExtraStorage(this.service, dim_KeyInStorage);\n\n          extraSourceMap =\n            extraStorage?.find((item) => {\n              if (_.isArray(item[dim_KeyInMap])) {\n                return item[dim_KeyInMap][0] === extraIns;\n              }\n              return item[dim_KeyInMap] === extraIns;\n            }) ?? {};\n        }\n        const isStringOrNumber = _.isString(extraSourceMap) || _.isNumber(extraSourceMap);\n        // 增加ins实例之外的alias，填入到ins._InstanceAliasValue\n        const insAlias = ins._InstanceAliasValue;\n        const otherAlias = isStringOrNumber ? extraSourceMap : extraSourceMap._InstanceAliasValue;\n        if (otherAlias && insAlias.indexOf(otherAlias) === -1) {\n          ins._InstanceAliasValue += ` - ${otherAlias}`;\n        }\n\n        extraDimValue = isStringOrNumber ? extraSourceMap : extraSourceMap?.[dim_KeyInIns || keyTmp];\n      } else {\n        ins._InstanceAliasValue += this.getOtherAlias(ins, target[service]);\n      }\n\n      if (\n        getTimeShiftInMs(target[service].timeshift) > 0 &&\n        ins._InstanceAliasValue.indexOf(target[service].timeshift) === -1\n      ) {\n        ins._InstanceAliasValue += `_${target[service].timeshift}`;\n      }\n      // 设置instance，针对额外的维度，需要注意模板变量的值\n      // ins[key] = ins[keyTmp] ?? extraDimValue;\n      ins[key] = this.getDimensionsVal(ins, keyTmp, extraDimValue);\n      // cynosdb产品接口返回维度和入参不一致\n      if (this.checkKeys.length > 0) {\n        this.checkKeys.forEach((Ekey) => {\n          ins[Ekey] = ins[key];\n        });\n      }\n      dimensionObject[key] = { Name: key, Value: ins[key] };\n    }\n    // waf特殊处理-客户需求\n    const tt = this.getOwnDimenion(dimensionObject);\n    if (tt) return tt;\n    return dimensionObject;\n  }\n  getOwnDimenion(dimensionObject: any) {\n    return null;\n  }\n  getDimensionsVal(ins: Record<string, any>, key: string, extraDimValue: string) {\n    let dimVal = ins[key];\n    if (_.isEmpty(dimVal) && this.CandiateDimensions[key]) {\n      dimVal = ins[this.CandiateDimensions[key]];\n    }\n    return dimVal ?? extraDimValue;\n  }\n  query(options: any) {\n    const service = this.service!; // 强制声明非空\n\n    const queries = _.filter(options.targets, (item) => {\n      // 过滤无效的查询 target\n      return (\n        item.hide !== true &&\n        !!item.namespace &&\n        !!item[service].metricName &&\n        !_.isEmpty(ReplaceVariable(this.templateSrv, options.scopedVars, item[service].region, false)) &&\n        !_.isEmpty(ReplaceVariable(this.templateSrv, options.scopedVars, item[service].instance, true))\n      );\n    })\n      .reduce((prev, target) => {\n        if (getTimeShiftInMs(target[service].timeshift) > 0) {\n          const cloneTarget = _.cloneDeep(target);\n          cloneTarget[service].timeshift = '';\n          return [...prev, cloneTarget, target];\n        }\n        return [...prev, target];\n      }, [])\n      .map(async (target) => {\n        // 实例 instances 可能为模板变量，需先获取实际值\n        // 针对JSON字符串和id的形式，分开做处理\n        let instances = ReplaceVariable(this.templateSrv, options.scopedVars, target[service].instance, true);\n        const instanceCache = await instanceStorage.getInstance(this.service);\n        const timeshift = getTimeShiftInMs(target[service].timeshift);\n\n        instances = [].concat(instances).map((inst) => {\n          try {\n            return JSON.parse(inst); // 兼容json字符串的 形式\n          } catch (error) {\n            // 如果没拿到缓存，取默认实例组\n            if (!instanceCache) return this.getDefaultInsObj?.(inst);\n            return _.cloneDeep(instanceCache.find((item) => item[this.templateQueryIdMap.instance] === inst)) ?? {};\n          }\n        });\n        const region = ReplaceVariable(this.templateSrv, options.scopedVars, target[service].region, false);\n        const insInReq: any = [];\n        for (let ins of instances) {\n          const dimensionObject = target[service].dimensionObject;\n          // 处理dimensions的值\n          const dimKeys = Object.keys(dimensionObject);\n          const dimResult = await this.dimensionsFormat(dimKeys, ins, dimensionObject, target, service, options);\n          insInReq.push([{ Dimensions: GetDimensions(dimResult) }]);\n        }\n        const data = {\n          StartTime: moment(options.range.from).subtract(timeshift).format(),\n          EndTime: moment(options.range.to).subtract(timeshift).format(),\n          Period: target[service].period || 300,\n          Instances: _.flatMap(insInReq),\n          Namespace: target.namespace,\n          MetricName: target[service].metricName,\n        };\n        return this.getMonitorData(data, region, instances, target[service], options);\n      });\n\n    if (queries.length === 0) {\n      return [];\n    }\n\n    return Promise.all(queries)\n      .then((responses) => {\n        return _.flatten(responses);\n      })\n      .catch((error) => {\n        return [];\n      });\n  }\n  getDefaultInsObj(ins: string) {\n    return {} as any;\n  }\n  getInstanceReqConfig(selfIns: any) {\n    return {} as any;\n  }\n  getInvalidDimensions(selfIns: any, target?: any) {\n    return {} as any;\n  }\n  // 获取某个变量的实际值，this.templateSrv.replace() 函数返回实际值的字符串\n  getVariable(metric?: string) {\n    const rs = this.templateSrv.replace((metric || '').trim());\n    const valStr = rs.match(/\\{([\\w-,]+)\\}/);\n    // 判断是否为多选\n    if (valStr) {\n      return valStr[1].split(',');\n    }\n    return rs;\n  }\n\n  /**\n   * 获取 监控数据\n   * @param params 获取监控数据的请求参数\n   * @param region 地域信息\n   * @param instances 实例列表，用于对返回结果的匹配解析\n   */\n  getMonitorData(params, region, instances, target, options) {\n    const serviceInfo = GetServiceAPIInfo(region, 'monitor');\n    const timeshift = getTimeShiftInMs(target.timeshift);\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: params,\n      },\n      serviceInfo.service,\n      { action: 'GetMonitorData', region }\n    ).then((response) => {\n      return ParseQueryResult(response, instances, timeshift);\n    });\n  }\n\n  getRegions(): any {\n    return this.doRequest(\n      {\n        url: this.url + '/cvm',\n      },\n      'cvm',\n      { action: 'DescribeRegions' }\n    ).then((response) => {\n      return _.filter(\n        _.map(response.RegionSet || [], (item) => {\n          return {\n            text: item.RegionName,\n            value: item.Region,\n            RegionState: item.RegionState,\n          };\n        }),\n        (item) => item.RegionState === 'AVAILABLE'\n      );\n    });\n  }\n\n  getMetrics(region = 'ap-guangzhou'): Promise<any> {\n    const serviceInfo = GetServiceAPIInfo(region, 'monitor');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: {\n          Namespace: this.namespace,\n        },\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeBaseMetrics' }\n    ).then((response) => {\n      const res = _.filter(\n        _.filter(response.MetricSet || [], (item) => !(item.Namespace !== this.namespace || !item.MetricName))\n      );\n      const resFilterFn = this.MetricReqConfig.resultFilter;\n      if (resFilterFn) {\n        return res.map((item) => resFilterFn(item));\n      }\n      return res;\n    });\n  }\n\n  getInstances(region, params = {}) {\n    const {\n      service = this.service,\n      action,\n      responseField: field,\n      interceptor,\n    } = this.InstanceReqConfig || this.getInstanceReqConfig(this);\n    params = { Offset: 0, Limit: 100, ...params };\n    const serviceInfo = GetServiceAPIInfo(region, service);\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: interceptor?.request ? interceptor.request(params) : params,\n      },\n      serviceInfo.service,\n      { region, action }\n    ).then((response) => {\n      // 处理异常，则不按正常的情况处理，直接抛出错误\n      if (response?.Error) {\n        console.error(response.Error);\n        return response;\n      }\n\n      let result;\n      // 先，field处理\n      if (field) {\n        result = _.get(response, field) ?? _.get(response, `Result.${field}`) ?? [];\n      }\n\n      // 后，拦截器处理\n      if (interceptor?.response) {\n        result = interceptor.response(result);\n      }\n      return result;\n    });\n  }\n\n  getVariableInstances(region, query = {}): Promise<any[]> {\n    let result: any[] = [];\n    const params = { ...query, ...{ Offset: 0, Limit: 100 } };\n\n    const {\n      service = this.service,\n      action,\n      responseField: field,\n      interceptor,\n    } = this.InstanceReqConfig || this.getInstanceReqConfig(this);\n\n    const serviceInfo = GetServiceAPIInfo(region, service);\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: interceptor?.request ? interceptor.request(params) : params,\n      },\n      serviceInfo.service,\n      { region, action }\n    ).then((response) => {\n      result = _.get(response, field) ?? _.get(response, `Result.${field}`) ?? [];\n      const total = response.TotalCount ?? response.TotalCnt ?? _.get(response, `Result.TotalCount`) ?? 0;\n      if (result.length >= total) {\n        return interceptor?.response ? interceptor.response(result) : result;\n      } else {\n        const param = SliceLength(total, 100);\n        const promises: any[] = [];\n        _.forEach(param, (item) => {\n          promises.push(this.getInstances(region, { ...item, ...query }));\n        });\n        return Promise.all(promises)\n          .then((responses) => {\n            _.forEach(responses, (item) => {\n              result = _.concat(result, item);\n            });\n            return interceptor?.response ? interceptor.response(result) : result;\n          })\n          .catch((error) => {\n            return interceptor?.response ? interceptor.response(result) : result;\n          });\n      }\n    });\n  }\n\n  // 检查某变量字段是否有值\n  isValidConfigField(field: string) {\n    return field && field.length > 0;\n  }\n\n  testDatasource() {\n    // const { service = this.service, action } = this.InstanceReqConfig;\n    // const serviceInfo = GetServiceAPIInfo('ap-guangzhou', service);\n\n    if (!this.isValidConfigField(this.secretId)) {\n      return {\n        service: this.service,\n        status: 'error',\n        message: 'The SecretId/SecretKey field is required.',\n      };\n    }\n\n    return Promise.all([\n      this.getRegions(),\n      this.getMetrics(),\n      // this.doRequest(\n      //   {\n      //     url: this.url + serviceInfo.path,\n      //     data: {\n      //       Offset: 0,\n      //       Limit: 1,\n      //     },\n      //   },\n      //   service,\n      //   { region: 'ap-guangzhou', action },\n      // ),\n      this.getInstances('ap-guangzhou', {\n        Offset: 0,\n        Limit: 1,\n      }),\n    ])\n      .then((responses) => {\n        const cvmErr = _.get(responses, '[0].Error', {});\n        const monitorErr = _.get(responses, '[1].Error', {});\n        const serviceErr = _.get(responses, '[2].Error', {});\n        // const cvmAuthFail = _.get(cvmErr, 'Code', '').indexOf('AuthFailure') !== -1;\n        // const monitorAuthFail = _.get(monitorErr, 'Code', '').indexOf('AuthFailure') !== -1;\n        // const serviceAuthFail = _.get(serviceErr, 'Code', '').indexOf('AuthFailure') !== -1;\n        const cvmAuthFail = _.get(cvmErr, 'Code', '');\n        const monitorAuthFail = _.get(monitorErr, 'Code', '');\n        const serviceAuthFail = _.get(serviceErr, 'Code', '');\n        if (cvmAuthFail || monitorAuthFail || serviceAuthFail) {\n          const messages: any[] = [];\n          if (cvmAuthFail) {\n            messages.push(_.get(cvmErr, 'Code'));\n          }\n          if (monitorAuthFail) {\n            messages.push(_.get(monitorErr, 'Code'));\n          }\n          if (serviceAuthFail) {\n            messages.push(_.get(serviceErr, 'Code'));\n          }\n          const message = _.join(_.compact(_.uniq(messages)), '; ');\n          return {\n            service: this.service,\n            status: 'error',\n            message,\n          };\n        } else {\n          return {\n            namespace: this.namespace,\n            service: this.service,\n            status: 'success',\n            message: `Successfully queried the ${this.service} service.`,\n            title: 'Success',\n          };\n        }\n      })\n      .catch((error) => {\n        let message = `${this.service} service:`;\n        message += error.statusText ? error.statusText + '; ' : '';\n        if (_.get(error, 'data.error.code', '')) {\n          message += error.data.error.code + '. ' + error.data.error.message;\n        } else if (_.get(error, 'data.error', '')) {\n          message += error.data.error;\n        } else if (_.get(error, 'data', '')) {\n          message += error.data;\n        } else {\n          message += `Cannot connect to ${this.service} service.`;\n        }\n        return {\n          service: this.service,\n          status: 'error',\n          message: message,\n        };\n      });\n  }\n\n  async doRequest(options, service, signObj: any = {}) {\n    options = await GetRequestParams(\n      options,\n      service,\n      signObj,\n      this.secretId,\n      this.instanceSettings.id,\n      this.backendSrv\n    );\n    return this.backendSrv\n      .datasourceRequest(options)\n      .then((response) => {\n        return _.get(response, 'data.Response', {});\n      })\n      .catch((error) => {\n        throw error;\n      });\n  }\n}\n","import _ from 'lodash';\nimport { SERVICES } from '../tc_monitor';\n\n/* 从分页数据获取全量数据 */\nconst PageSize = 50;\nfunction getFieldsValue(value, fields) {\n  return fields.map((item) => _.get(value, item, _.get(value, `Result.${item}`, [])));\n}\n\nexport async function fetchAllFactory(fetcher: (args: any) => Promise<any>, _params: any, field: string | string[]) {\n  const params = { ..._.omit(_params, ['isOffsetPage']) };\n  params.Limit = params.Limit || PageSize; // 默认给个Limit大小为50\n  params.Offset = params.Offset ?? 0; // 默认给个Offset为0\n\n  // 第一次请求，获取总数\n  const rs = (await fetcher(params)) ?? {};\n  const fields = Array.isArray(field) ? field : [field];\n\n  // rs.TotalCount = rs.TotalCount ?? rs.Result.TotalCount ?? [];\n  // const { TotalCount } = rs;\n  const TotalCount = rs.TotalCount ?? rs.Result?.TotalCount ?? rs.TotalCnt ?? rs.Result?.TotalCnt ?? 0;\n  const firstLists = getFieldsValue(rs, fields);\n\n  if (TotalCount === 0 || firstLists[0].length === TotalCount) {\n    // 只有一页，结束\n    return firstLists;\n  }\n\n  // 批量请求\n  const delta = TotalCount - firstLists[0].length;\n  const batchCount = Math.ceil(delta / PageSize);\n  const pmList = new Array(batchCount).fill(0).map((_, index) => {\n    params.Offset = _params.isOffsetPage ? 1 + index : (1 + index) * params.Limit;\n    return fetcher(params);\n  });\n\n  // 合并\n  const resultList = await Promise.all(pmList); // [ {a: [], b[] }, { a: [], b:[] }]\n\n  return resultList.reduce((acc, cur) => {\n    const lists = getFieldsValue(cur, fields);\n    // [[], [], []] + [[], [], []]\n    acc.forEach((list, index) => list.push(...lists[index]));\n    return acc;\n  }, firstLists);\n}\n\n/**\n * 实例列表接口入参处理\n *\n * @param queries 表单键入内容\n * @param isFilter 是否需要设置为Filters格式\n */\nexport function instanceQueryParamsBaseParse(queries: any, isFilter: boolean) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    const Filters: any[] = [];\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          if (isFilter) {\n            Filters.push({ Name: key, Values: _.uniq(item).slice(0, 5) });\n          } else {\n            params[key] = _.uniq(item);\n          }\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          if (isFilter) {\n            Filters.push({ Name: key, Values: _.get(item, 'value', []).slice(0, 5) });\n          } else {\n            params[key] = _.get(item, 'value');\n          }\n        }\n      } else if (item !== null && item !== undefined && item !== '') {\n        if (isFilter) {\n          Filters.push({ Name: key, Values: item });\n        } else {\n          params[key] = item;\n        }\n      }\n    });\n    if (isFilter && Filters.length > 0) {\n      params.Filters = Filters;\n      return params;\n    }\n  }\n  return params;\n}\n\nexport function getNamesapceFromService(serviceName: string) {\n  return _.get(\n    _.find(SERVICES, (service) => service.service === serviceName),\n    'namespace'\n  );\n}\n\nexport function serviceGroupBy(\n  services: { service: string; label: string; namespace: string; href: string; groupName?: string }[]\n) {\n  const result = services.reduce((acc, cur) => {\n    const { namespace, label, groupName = label } = cur;\n\n    const existedGroup = acc.find((item) => item.label === groupName);\n    if (!existedGroup) {\n      acc.push({ label: groupName, value: groupName, items: [{ label, value: namespace }] });\n      return acc;\n    }\n\n    existedGroup.items.push({ label, value: namespace });\n    return acc;\n  }, [] as any[]);\n\n  // 将只有一个子元素的项目进行特殊处理\n  const rs = result.map((item) =>\n    item.items.length === 1 ? { label: item.items[0].label, value: item.items[0].value } : item\n  );\n  return rs;\n}\n\nexport const isTargetEqual = (newTargetString: string, oldTargetString: string, key: string) => {\n  try{\n    const newTarget = JSON.parse(newTargetString);\n    const oldTarget = JSON.parse(oldTargetString);\n    return newTarget[key] === oldTarget[key];\n  }catch(e){\n    return newTargetString === oldTargetString;\n  }\n}\n\nexport const getTimeShiftInMs = (timeShift: any) => {\n  const parts = /^(\\d+)([d|h|m|s])$/.exec(timeShift);\n  if (!parts) {\n    return 0;\n  }\n  const amount = parseInt(parts[1], 10);\n  const unit = parts[2];\n  switch (unit) {\n    case 'd':\n      return amount * 86400 * 1000;\n    case 'h':\n      return amount * 3600 * 1000;\n    case 'm':\n      return amount * 60 * 1000;\n    case 's':\n      return amount * 1000;\n  }\n  return 0;\n}","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","import coreModule from 'grafana/app/core/core_module';\nimport { DetailQueryConfig } from './types';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nfunction classFactory(detailConfig) {\n  return class QueryCtrl {\n    static _config: DetailQueryConfig;\n\n    /** @ngInject */\n    constructor($scope, $rootScope) {\n      Object.assign($scope, detailConfig);\n\n      $scope.getDropdown = (field) => {\n        const service = GetServiceFromNamespace($scope.namespace);\n        return $scope.datasource.getFilterDropdown(service, { field, region: $scope.region });\n      };\n    }\n  };\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"{{instanceDocUrl}}\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in fieldDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputNumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />    \n      <multi-condition\n        ng-if=\"field.type === 'inputNumberMulti'\"\n        type=\"'inputNumber'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        maxNum=\"field.max\"\n        minNum=\"field.min\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputMulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownMulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <gf-form-dropdown \n        ng-if=\"field.type === 'dropdown'\"\n        model=\"target.queries[field.key]\" \n        allow-custom=\"true\" \n        lookup-text=\"true\" \n        get-options=\"getDropdown(field.key)\" \n        css-class=\"min-width-10\"\n        on-change=\"onChange()\">\n      </gf-form-dropdown>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n      <gf-form-switch \n        ng-if=\"field.type === 'switch'\"\n        class=\"gf-form tc-switch\" \n        label-class=\"width-7\" \n        checked=\"target.queries[field.key]\" \n        switch-class=\"max-width-5\"\n      ></gf-form-switch>\n    </div>\n  </div>\n</div>\n  </div>\n`;\nfunction queryDDOFactory(QueryCtrl) {\n  return function queryDDO() {\n    return {\n      template: template,\n      controller: QueryCtrl,\n      restrict: 'E',\n      scope: {\n        target: '=',\n        showDetail: '=',\n        region: '=',\n        datasource: '=',\n        getDropdownOptions: '&',\n        onChange: '&',\n      },\n    };\n  };\n}\n\nexport default (name: string, config: DetailQueryConfig) => {\n  // QueryCtrl._config = config;\n  const newQueryIns = classFactory(config);\n  coreModule.directive(name, queryDDOFactory(newQueryIns));\n};\n","interface DBEvent {\n  target: { result: any; error: any };\n}\n// 数据库结构\ninterface DBTypes {\n  store: StoreType;\n  name?: string;\n  version?: number;\n}\n// store表结构\ninterface StoreType {\n  name: string; // 表名\n  key: string; // 主键名\n  cursorIndex?: { name: string; unique: boolean }[]; // 索引列表\n}\n\n// 数据结构\n// {service: 'cvm', instance: [{ins: 23}]}\ninterface DataType {\n  service: string;\n  [x: string]: any; // 有产品需缓存其他列表\n}\n\n// interface UpdateProps {\n//   storeName: string;\n//   cursorKey: string;\n//   cursorValue?: any;\n//   data: any;\n// }\n\nconst store: StoreType = {\n  name: 'grafanaInstanceList',\n  key: 'service',\n};\nconst promisify = (request: any, type?: string) => {\n  return new Promise<any>((resolve, reject) => {\n    request.onsuccess = (event: DBEvent) => {\n      const returnMap: any = {\n        event: event.target.result,\n        request: request.result,\n        msg: '操作成功',\n      };\n      resolve(returnMap[type || 'msg']);\n    };\n    request.onerror = (event: DBEvent) => reject(event.target.error || '操作失败');\n  });\n};\n// 固定表名和数据库名\nclass IndexedDB {\n  name = 'grafanaDatabase';\n  version = 1;\n\n  constructor(props: DBTypes) {\n    const { name = 'database', version = 1, store } = props;\n    this.name = name;\n    this.version = version;\n\n    this.initDB(store);\n  }\n\n  /**\n   * 初始化数据库\n   * @param store 库表的结构\n   */\n  initDB(store: StoreType) {\n    const indexeddb = window.indexedDB || window.webkitIndexedDB || window.mozIndexedDB || window.msIndexedDB;\n    const request = indexeddb.open(this.name, this.version);\n\n    request.onupgradeneeded = (event: IDBVersionChangeEvent) => {\n      const db = (event.target as IDBOpenDBRequest).result;\n      if (db.objectStoreNames.contains(store.name)) {\n        // 存在表store\n      }\n\n      //  遍历store，设置数据表结构\n      db.createObjectStore(store.name, {\n        keyPath: store.key,\n      });\n    };\n    request.onerror = () => Promise.reject(new Error('初始化数据库失败'));\n    request.onsuccess = () => Promise.resolve('初始化数据库成功');\n  }\n\n  openDB() {\n    const indexeddb = window.indexedDB || window.webkitIndexedDB || window.mozIndexedDB || window.msIndexedDB;\n    const request = indexeddb.open(this.name, this.version);\n\n    return promisify(request, 'event');\n  }\n\n  /**\n   * 新增数据\n   * @param storeName 表名\n   * @param data 添加的数据\n   */\n  async insertData(storeName: string, data: any) {\n    try {\n      // console.time('insertData');\n      const db = await this.openDB();\n      const transaction = db.transaction(storeName, 'readwrite');\n      const objectStore = transaction.objectStore(storeName);\n\n      objectStore.add(data);\n      // console.timeEnd('insertData');\n\n      return new Promise((resolve, reject) => {\n        transaction.oncomplete = function () {\n          // console.timeEnd('insertData');\n          resolve('所有数据插入成功');\n        };\n\n        transaction.onerror = function (event) {\n          reject(event);\n        };\n      });\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n\n  /**\n   * 更新数据\n   * @param props 查询数据的参数以及要修改的值的参数\n   */\n  async addData(data: DataType, isCover?: boolean) {\n    try {\n      // console.log('addData');\n      const storeName = store.name; // 表名\n      const oldData = await this.getData(data.service);\n      const objectStore = await this.getObjectStore(storeName, 'readwrite');\n\n      if (!oldData) {\n        // 不存在则新建\n        this.insertData(storeName, data);\n      }\n      // 存在则更新\n      let newData: any = { ...oldData, ...data };\n      if (isCover) newData = data; // 需要覆盖之前内容\n      // 把更新过的对象放回数据库\n      const requestUpdate = objectStore.put(newData);\n      // console.timeEnd('updateData');\n      return promisify(requestUpdate);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n\n  /**\n   * 获取数据库的值，返回查询到的第一项\n   * @param storeName 表名/存储对象的键\n   * @param cursorKey key\n   * @param cursorValue 要查询索引的值\n   */\n  async getData(seviceName: string) {\n    try {\n      // console.time('getData');\n      const storeName = store.name;\n      const objectStore = await this.getObjectStore(storeName);\n      const request = objectStore.get(seviceName);\n      // console.timeEnd('getData');\n      return promisify(request, 'request');\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n  async getAllData(storeName: string) {\n    try {\n      // console.time('getAllData');\n      const objectStore = await this.getObjectStore(storeName);\n      const request = objectStore.getAll();\n      const result = await promisify(request, 'request');\n      // console.timeEnd('getAllData');\n      return result ? result : [];\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n  /**\n   * 获取对象仓库\n   * @param storeName 表名\n   * @param type readonly 或者 readwrite等\n   */\n  private async getObjectStore(storeName: string, type?: any): Promise<IDBObjectStore> {\n    try {\n      const db = await this.openDB();\n      return db.transaction(storeName, type).objectStore(storeName);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n}\n// console.log('testDDB')\n// const indexDB = new IndexedDB({store});\n// indexDB.addData({service: 'cvm', instance: [{ins: 23}]}).then(e=>{\n//   indexDB.getData('cvm').then(dd=>{console.log({dd})})\n// })\nexport default new IndexedDB({ store });\n","import indexedDB from './indexedDB';\nclass InstanceStorage {\n  // prefix = 'Datasource';\n  // storageKey = 'grafanaInstanceCache';\n  insKey = 'Instances';\n  cacheWay = '';\n  constructor() {}\n  setInstance(service: string, value: Record<string, any>) {\n    return this.setStorage(service, this.insKey, value, true);\n  }\n  async getInstance(service: string) {\n    return this.getStorage(service, this.insKey);\n  }\n  setExtraStorage(service: string, Ekey: string, EValue: Record<string, any>) {\n    return this.setStorage(service, Ekey, EValue, false);\n  }\n  async getExtraStorage(service: string, Ekey: string) {\n    return this.getStorage(service, Ekey);\n  }\n  private setStorage(serviceKey: string, key: string, value: Record<string, any>, isCover = false) {\n    // console.log('set', serviceKey, key, value);\n    return indexedDB.addData(\n      {\n        service: serviceKey,\n        [key]: value,\n      },\n      isCover\n    );\n  }\n  // 获取到模版变量信息\n  private async getStorage(service: string, key?: string) {\n    const storage = await indexedDB.getData(service);\n    // console.log('get', key, storage);\n    return key ? storage?.[key] : storage;\n  }\n}\nexport default new InstanceStorage();\n","module.exports = __WEBPACK_EXTERNAL_MODULE__9__;","import _ from 'lodash';\n\nexport const CKAFKAQueryDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为10，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceId',\n    enDescriptor: 'InstanceId',\n    cnDescriptor: '按照实例ID过滤',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SearchWord',\n    enDescriptor: 'SearchWord',\n    cnDescriptor: '按照实例名称过滤，支持模糊查询',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'TagKey',\n    enDescriptor: 'TagKey',\n    cnDescriptor: '匹配标签key值',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'Status',\n    enDescriptor: 'Status',\n    cnDescriptor: '实例的状态，不填默认返回全部',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '创建中', value: 0 },\n      { text: '运行中', value: 1 },\n      { text: '删除中', value: 2 },\n    ],\n  },\n];\n\nconst CKAFKA_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  topicId: '',\n  topicName: '',\n  consumerGroup: '',\n  partition: '',\n  queries: {\n    Offset: 0,\n    Limit: 10,\n    Status: [],\n    InstanceId: '',\n    SearchWord: '',\n    TagKey: '',\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\nconst CKAFKAInstanceAliasList = ['InstanceId', 'InstanceName'];\nconst CKAFKATopicAliasList = ['TopicId', 'TopicName'];\n// 保存在模板变量value中的key\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n  topicId: 'TopicId',\n  groupName: 'GroupName',\n  partition: 'PartitionId',\n};\n// 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key\nconst CKAFKAInvalidDemensions = new Proxy(\n  {\n    topicId: 'TopicId',\n    topicName: 'TopicName',\n    consumerGroup: 'GroupName',\n    partition: 'PartitionId',\n  },\n  {\n    get: (obj, prop) => {\n      if (String(prop).toLocaleLowerCase() === 'instanceid') return 'InstanceId';\n      return obj[prop];\n    },\n  }\n);\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  TopicList: 'TopicList',\n  GroupList: 'GroupList',\n  PartitionList: 'PartitionList',\n};\n\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  TopicId: {\n    dim_KeyInStorage: keyInStorage.TopicList,\n    dim_KeyInTarget: 'topicId',\n    dim_KeyInMap: templateQueryIdMap.topicId,\n  },\n  // topicName和topicId是同一个storage中的source，所以根据topicId帅选\n  TopicName: {\n    dim_KeyInStorage: keyInStorage.TopicList,\n    dim_KeyInTarget: 'topicId',\n    dim_KeyInMap: templateQueryIdMap.topicId,\n  },\n  GroupName: {\n    dim_KeyInStorage: keyInStorage.GroupList,\n    dim_KeyInTarget: 'consumerGroup',\n    dim_KeyInMap: templateQueryIdMap.groupName,\n  },\n  PartitionId: {\n    dim_KeyInStorage: keyInStorage.PartitionList,\n    dim_KeyInTarget: 'partition',\n    dim_KeyInMap: templateQueryIdMap.partition,\n  },\n};\nexport default CKAFKA_STATE;\nexport {\n  CKAFKAInstanceAliasList,\n  CKAFKATopicAliasList,\n  CKAFKAInvalidDemensions,\n  templateQueryIdMap,\n  keyInStorage,\n  queryMonitorExtraConfg,\n  GetInstanceQueryParams as CKAFKAGetInstanceQueryParams,\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__11__;","import _ from 'lodash';\n\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/LOADBALANCE';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'loadBalanceQuery';\n\nconst ForwardTypes = [\n  { text: '通用的负载均衡', value: 1 },\n  { text: '传统的负载均衡', value: 0 },\n];\n\nconst OrderBy = [\n  { text: 'LoadBalancerName', value: 'LoadBalancerName' },\n  { text: 'CreateTime', value: 'CreateTime' },\n  { text: 'Domain', value: 'Domain' },\n  { text: 'LoadBalancerType', value: 'LoadBalancerType' },\n];\n\nconst OrderType = [\n  { text: '升序', value: 0 },\n  { text: '降序', value: 1 },\n];\n\nconst WithRs = [\n  { text: '没有绑定后端服务', value: 0 },\n  { text: '绑定后端服务', value: 1 },\n  { text: '查询全部', value: -1 },\n];\nconst LOADBALANCEFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n  },\n  {\n    key: 'LoadBalancerIds',\n    enDescriptor: 'LoadBalancer ID',\n    cnDescriptor: '实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerName',\n    enDescriptor: 'LoadBalancer Name',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'Forward',\n    enDescriptor: 'Forward',\n    cnDescriptor: '负载均衡实例类型',\n    link: '',\n    type: 'select',\n    list: ForwardTypes,\n  },\n  {\n    key: 'Domain',\n    enDescriptor: 'Domain',\n    cnDescriptor: '域名，腾讯云为负载均衡实例分配的域名，本参数仅对传统型公网负载均衡才有意义',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'LoadBalancerVips',\n    enDescriptor: 'LoadBalancer Vips',\n    cnDescriptor: '负载均衡实例的 VIP 地址',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'BackendPrivateIps',\n    enDescriptor: 'BackendPrivate Ips',\n    cnDescriptor: '负载均衡绑定的后端服务的内网 IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'BackendPublicIps',\n    enDescriptor: 'BackendPublic Ips',\n    cnDescriptor: '负载均衡绑定的后端服务的外网 IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'ProjectId',\n    enDescriptor: 'Project ID',\n    cnDescriptor: '负载均衡实例所属的项目 ID',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'Vpc ID',\n    cnDescriptor: '负载均衡实例所属私有网络',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SecurityGroup',\n    enDescriptor: 'Security Group',\n    cnDescriptor: '安全组ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'MasterZone',\n    enDescriptor: 'Master Zone',\n    cnDescriptor: '主可用区ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'WithRs',\n    enDescriptor: 'WithRs',\n    cnDescriptor: '负载均衡是否绑定后端服务',\n    link: '',\n    type: 'select',\n    list: WithRs,\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderBy,\n  },\n  {\n    key: 'OrderType',\n    enDescriptor: 'OrderByType',\n    cnDescriptor: '排序方式',\n    link: '',\n    type: 'select',\n    list: OrderType,\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/214/30685',\n  namespace,\n  fieldDescriptor: LOADBALANCEFieldsDescriptor,\n};\nconst LBFields = {\n  LoadBalancerIds: [],\n  Forward: undefined,\n  LoadBalancerName: '',\n  Domain: '',\n  LoadBalancerVips: [],\n  BackendPublicIps: [],\n  BackendPrivateIps: [],\n  Limit: 20,\n  Offset: 0,\n  ProjectId: undefined,\n  WithRs: {},\n  VpcId: '',\n  SecurityGroup: '',\n  MasterZone: '',\n  OrderBy: {},\n  OrderType: {},\n};\n\nconst LOADBALANCE_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'LoadBalancerId',\n  Port: '',\n  Protocol: '',\n  listener: '',\n  servers: '',\n  serverPort: '',\n  // listenerAlias: 'ListenerId',\n  queries: LBFields,\n};\n\n// function GetInstanceQueryParams(queries: any = {}) {\n//   const params: any = {};\n//   if (!_.isEmpty(queries)) {\n//     params.Limit = _.get(queries, 'Limit', 20) || 20;\n//     params.Offset = _.get(queries, 'Offset', 0) || 0;\n//     queries = _.omit(queries, ['Offset', 'Limit']);\n//     _.forEach(queries, (item: any, key) => {\n//       if (_.isArray(item)) {\n//         item = _.compact(item);\n//         if (item.length > 0) {\n//           params[key] = _.uniq(item);\n//         }\n//       } else if (_.isObject(item)) {\n//         if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n//           params[key] = _.get(item, 'value');\n//         }\n//       } else if (_.isNumber(item) || !_.isEmpty(item)) {\n//         params[key] = item;\n//       }\n//     });\n//   }\n//   return params;\n// }\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\nconst InstanceAliasList = ['LoadBalancerId', 'LoadBalancerName', 'LoadBalancerVips'];\nconst LOADBALANCEListenerAliasList = ['ListenerId', 'ListenerName', 'Port'];\nconst LOADBALANCEServerAliasList = ['PrivateIpAddresses', 'InstanceId'];\nconst LOADBALANCEVALIDDIMENSIONS = {\n  vip: 'LoadBalancerVips',\n  // vpcId: 'NumericalVpcId',\n  loadBalancerPort: 'Port',\n  protocol: 'Protocol',\n  lanIp: 'PrivateIpAddresses',\n  port: 'ServerPort',\n};\n// 对于ipv6类型，vip应该取AddressIPv6。\nconst CANDIATEDIMENSIONS = {\n  LoadBalancerVips: 'AddressIPv6',\n};\n// dimensionObject[item] = { Name: item, Value: '' };\n// const LOADBALANCE_INSTANCE_DIMENSIONOBJECTS = {\n//   vip: { Name: 'vip', Value: '' },\n// };\n// const LOADBALANCE_LISTENER_DIMENSIONOBJECTS = {\n//   vip: { Name: 'vip', Value: '' },\n//   loadBalancerPort: { Name: 'loadBalancerPort', Value: '' },\n//   protocol: { Name: 'protocol', Value: '' },\n// };\nconst templateQueryIdMap = {\n  instance: 'LoadBalancerId',\n  listener: 'ListenerId',\n  servers: 'PrivateIpAddresses',\n  port: 'Port',\n};\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  listener: 'ListenerList',\n  servers: 'ServersList',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  Port: {\n    dim_KeyInStorage: keyInStorage.listener,\n    dim_KeyInTarget: 'listener',\n    dim_KeyInMap: templateQueryIdMap.listener,\n  },\n  Protocol: {\n    dim_KeyInStorage: keyInStorage.listener,\n    dim_KeyInTarget: 'listener',\n    dim_KeyInMap: templateQueryIdMap.listener,\n  },\n  PrivateIpAddresses: {\n    dim_KeyInStorage: keyInStorage.servers,\n    dim_KeyInTarget: 'servers',\n    dim_KeyInMap: templateQueryIdMap.servers,\n  },\n  ServerPort: {\n    dim_KeyInStorage: keyInStorage.servers,\n    dim_KeyInTarget: 'serverPort',\n    dim_KeyInIns: 'Port',\n    dim_KeyInMap: templateQueryIdMap.port,\n  },\n};\nexport default LOADBALANCE_STATE;\nexport {\n  LOADBALANCEFieldsDescriptor,\n  InstanceAliasList,\n  LOADBALANCEListenerAliasList,\n  LOADBALANCEServerAliasList,\n  LOADBALANCEVALIDDIMENSIONS,\n  templateQueryIdMap,\n  CANDIATEDIMENSIONS,\n  // LOADBALANCE_LISTENER_DIMENSIONOBJECTS,\n  // LOADBALANCE_INSTANCE_DIMENSIONOBJECTS,\n  queryMonitorExtraConfg,\n  keyInStorage,\n  queryEditorConfig,\n  namespace,\n  queryEditorName,\n  GetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/TDMQ';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'tdmqQuery';\n\nconst TDMQInvalidDemensions = {\n  tenantId: 'ClusterId',\n  tenant: 'ClusterId',\n  topicName: 'TopicName',\n  environmentId: 'EnvironmentId',\n};\n\n// 需和文件名对应\nconst TDMQInstanceAliasList = ['ClusterId', 'ClusterName'];\n\nconst templateQueryIdMap = {\n  instance: 'ClusterId',\n  topicName: 'TopicName',\n  environmentId: 'EnvironmentId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst TDMQFilterFields = {\n  Limit: 20,\n  Offset: 0,\n};\n\nconst TDMQFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n];\n\nconst CDNPROVINCE_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'ClusterId',\n  // 此处key应该是经过TDMQInvalidDemensions处理后的\n  topicName: '',\n  environmentId: '',\n  queries: TDMQFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nconst regionSupported = [\n  { value: 'ap-beijing' },\n  { value: 'ap-chengdu' },\n  { value: 'ap-chongqing' },\n  { value: 'ap-guangzhou' },\n  { value: 'ap-shenzhen-fsi' },\n  { value: 'ap-shanghai' },\n  { value: 'ap-shanghai-fsi' },\n  { value: 'ap-nanjing' },\n  { value: 'ap-hongkong' },\n  { value: 'ap-tokyo' },\n  { value: 'ap-seoul' },\n  { value: 'ap-singapore' },\n  { value: 'ap-bangkok' },\n  { value: 'ap-jakarta' },\n  { value: 'ap-mumbai' },\n  { value: 'eu-frankfurt' },\n  { value: 'eu-moscow' },\n  { value: 'na-ashburn' },\n  { value: 'na-siliconvalley' },\n  { value: 'na-toronto' },\n];\nfunction modifyDimensons(metricItem) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    if (item.Dimensions.indexOf('topicName') !== -1 && item.Dimensions.indexOf('environmentId') === -1) {\n      item.Dimensions.push('environmentId');\n    }\n  });\n  return metricTmp;\n}\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  topicName: 'topicName',\n  environmentId: 'environmentId',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  TopicName: {\n    dim_KeyInStorage: keyInStorage.topicName,\n    dim_KeyInTarget: 'topicName',\n    dim_KeyInMap: templateQueryIdMap.topicName,\n  },\n  EnvironmentId: {\n    dim_KeyInStorage: keyInStorage.environmentId,\n    dim_KeyInTarget: 'environmentId',\n    dim_KeyInMap: templateQueryIdMap.environmentId,\n  },\n};\nexport default CDNPROVINCE_STATE;\nexport {\n  TDMQFilterFieldsDescriptor,\n  templateQueryIdMap,\n  TDMQInstanceAliasList,\n  TDMQInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryMonitorExtraConfg,\n  keyInStorage,\n  modifyDimensons,\n  regionSupported,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as TDMQGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/GSE';\nconst fleetId = 'FleetId'; // 为和cvm其他产品保持一致，即将string[]改为Array<{fleetid: xxx}>,在此声明key\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'gseQuery';\n\nconst GSEInvalidDemensions = {\n  instanceid: 'InstanceId',\n  fleetid: 'FleetId',\n  queuename: 'Name',\n};\n\n// 需和文件名对应\nconst GSEInstanceAliasList = ['InstanceId', 'PrivateIpAddress', 'IpAddress'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n  Name: 'Name',\n  FleetId: fleetId,\n};\n\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  fleet: 'fleet', // 实例队列\n  queue: 'queueName', // 会话队列\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  FleetId: {\n    dim_KeyInStorage: keyInStorage.fleet,\n    dim_KeyInTarget: 'FleetId',\n    dim_KeyInMap: templateQueryIdMap.FleetId,\n  },\n  Name: {\n    dim_KeyInStorage: keyInStorage.queue,\n    dim_KeyInTarget: 'Name',\n    dim_KeyInMap: templateQueryIdMap.Name,\n  },\n};\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst GSEFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  InstanceId: '',\n  FleetId: '',\n};\n\nconst GSEFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceId',\n    enDescriptor: 'resourceName',\n    cnDescriptor: '资源名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'FleetId',\n    enDescriptor: 'tagKey',\n    cnDescriptor: '标签键',\n    link: '',\n    type: 'input',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/1165/42604',\n  namespace,\n  fieldDescriptor: GSEFilterFieldsDescriptor,\n};\n\nconst GSE_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  FleetId: '', //  服务器实例\n  Name: '', // 队列名称\n  queries: GSEFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\n// regions for dropdown\nconst regionSupported = [\n  { value: 'ap-bangkok' },\n  { value: 'ap-beijing' },\n  { value: 'ap-chengdu' },\n  // { value: 'ap-chongqing' },\n  { value: 'ap-guangzhou' },\n  { value: 'ap-hongkong' },\n  { value: 'ap-mumbai' },\n  { value: 'ap-seoul' },\n  { value: 'ap-nanjing' },\n  { value: 'ap-shanghai' },\n  // { value: 'ap-shanghai-fsi' },\n  // { value: 'ap-shenzhen-fsi' },\n  { value: 'ap-singapore' },\n  { value: 'ap-tokyo' },\n  { value: 'eu-frankfurt' },\n  { value: 'na-ashburn' },\n  { value: 'na-siliconvalley' },\n  // { value: 'na-toronto' },\n];\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = item.Dimensions.map((v) => GSEInvalidDemensions[v] || v);\n  });\n  return metricTmp;\n}\nexport default GSE_STATE;\nexport {\n  GSEFilterFieldsDescriptor,\n  templateQueryIdMap,\n  GSEInstanceAliasList,\n  GSEInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  regionSupported,\n  modifyDimensons,\n  queryMonitorExtraConfg,\n  fleetId,\n  keyInStorage,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as GSEGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { isArray, cloneDeep } from 'lodash';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/TDMYSQL';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'dcdbQuery';\n\nconst DCDBInvalidDemensions = {\n  nodeid: 'NodeId',\n  instanceid: 'InstanceId',\n  shardid: 'ShardInstanceId',\n  ShardId: 'ShardInstanceId',\n};\n\n// 需和文件名对应\nconst DCDBInstanceAliasList = ['InstanceId', 'InstanceName'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n  NodeId: 'NodeId',\n  ShardInstanceId: 'ShardInstanceId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst DCDBFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  InstanceIds: [],\n  SearchName: '',\n  SearchKey: '',\n  ProjectIds: [],\n  // IsFilterVpc\n  VpcId: '',\n  SubnetId: '',\n\n  OrderBy: {},\n  OrderByType: {},\n  // IsFilterExcluster: {},\n  ExclusterType: {},\n\n  ExclusterIds: [],\n  FilterInstanceType: {},\n};\n\nconst DCDBFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceIds',\n    enDescriptor: 'InstanceIds',\n    cnDescriptor: '实例 ID 查询',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'SearchName',\n    enDescriptor: 'SearchName',\n    cnDescriptor: '搜索的字段名,当前支持的值有：instancename、vip、all',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SearchKey',\n    enDescriptor: 'SearchKey',\n    cnDescriptor: '搜索的关键字',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'ProjectIds',\n    enDescriptor: 'ProjectIds',\n    cnDescriptor: '按项目 ID 查询',\n    link: '',\n    type: 'inputNumberMulti',\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'VpcId',\n    cnDescriptor: '私有网络 ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SubnetId',\n    enDescriptor: 'SubnetId',\n    cnDescriptor: '私有网络的子网 ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'projectId', value: 'projectId' },\n      { text: 'createtime', value: 'createtime' },\n      { text: 'instancename', value: 'instancename' },\n    ],\n  },\n  {\n    key: 'OrderByType',\n    enDescriptor: 'OrderByType',\n    cnDescriptor: '私有网络 ID',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'desc', value: 'desc' },\n      { text: 'asc', value: 'asc' },\n    ],\n  },\n  {\n    key: 'ExclusterType',\n    enDescriptor: 'ExclusterType',\n    cnDescriptor: '集群类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '非独享集群', value: 1 },\n      { text: '独享集群', value: 2 },\n      { text: '全部', value: 0 },\n      { text: 'asc', value: 'asc' },\n    ],\n  },\n  {\n    key: 'ExclusterIds',\n    enDescriptor: 'ExclusterIds',\n    cnDescriptor: '独享集群ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'FilterInstanceType',\n    enDescriptor: 'FilterInstanceType',\n    cnDescriptor: '实例类型过滤',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '独享实例', value: 1 },\n      { text: '主实例', value: 2 },\n      { text: '灾备实例', value: 3 },\n    ],\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/557/16140',\n  namespace,\n  fieldDescriptor: DCDBFilterFieldsDescriptor,\n};\n\nconst DCDB_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  ShardId: '',\n  NodeId: '',\n  queries: DCDBFilterFields,\n};\nconst modifyMetricConf = {\n  shardid: 'ShardId',\n  instanceid: 'InstanceId',\n  nodeid: 'NodeId',\n};\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = item.Dimensions.map((v) => modifyMetricConf[v] || v);\n  });\n  return metricTmp;\n}\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params = instanceQueryParamsBaseParse(queries, false);\n  // 特殊处理\n  params.IsFilterVpc = false;\n  params.IsFilterExcluster = false;\n  if (params.VpcId || params.SubnetId) params.IsFilterVpc = true;\n  if (params.ExclusterType) params.IsFilterExcluster = true;\n  if (isArray(params.FilterInstanceType)) params.FilterInstanceType = params.FilterInstanceType.join(',');\n  return params;\n}\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  NodeId: 'NodeId',\n  ShardInstanceId: 'ShardId',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  NodeId: {\n    dim_KeyInStorage: keyInStorage.NodeId,\n    dim_KeyInTarget: 'NodeId',\n    dim_KeyInMap: templateQueryIdMap.NodeId,\n  },\n  ShardInstanceId: {\n    dim_KeyInStorage: keyInStorage.ShardInstanceId,\n    dim_KeyInTarget: 'ShardId',\n    dim_KeyInMap: templateQueryIdMap.ShardInstanceId,\n  },\n};\n// 和其他产品的展示保持一致\nconst regionSupported = [\n  { text: '华北地区(北京)', value: 'ap-beijing' },\n  { text: '西南地区(成都)', value: 'ap-chengdu' },\n  { text: '西南地区(重庆)', value: 'ap-chongqing' },\n  { text: '华南地区(广州)', value: 'ap-guangzhou' },\n  { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n  { text: '亚太南部(孟买)', value: 'ap-mumbai' },\n  { text: '华东地区(南京)', value: 'ap-nanjing' },\n  { text: '华东地区(上海)', value: 'ap-shanghai' },\n  { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },\n  { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n  { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n  { text: '亚太东北(东京)', value: 'ap-tokyo' },\n  { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },\n  { text: '美国东部(弗吉尼亚)', value: 'na-ashburn' },\n  { text: '美国西部(硅谷)', value: 'na-siliconvalley' },\n  { text: '北美地区(多伦多)', value: 'na-toronto' },\n];\nexport default DCDB_STATE;\nexport {\n  DCDBFilterFieldsDescriptor,\n  templateQueryIdMap,\n  DCDBInstanceAliasList,\n  DCDBInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  regionSupported,\n  keyInStorage,\n  modifyDimensons,\n  queryMonitorExtraConfg,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as DCDBGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\nconst namespace = 'QCE/REDIS_MEM';\nconst BillingMode = [\n  { text: '按量计费', value: 'postpaid' },\n  { text: '包年包月', value: 'prepaid' },\n];\n\nconst AutoRenew = [\n  { text: '手动续费', value: 0 },\n  { text: '自动续费', value: 1 },\n  { text: '明确不自动续费', value: 2 },\n];\n\nconst Status = [\n  { text: '待初始化', value: 0 },\n  { text: '流程执行中', value: 1 },\n  { text: '运行中', value: 2 },\n  { text: '已隔离', value: -2 },\n  { text: '待删除', value: -3 },\n];\n\nconst TypeVersion = [\n  { text: '单机版', value: 1 },\n  { text: '主从版', value: 2 },\n  { text: '集群版', value: 3 },\n];\n\nconst OrderBy = [\n  { text: 'projectId', value: 'projectId' },\n  { text: 'instancename', value: 'instancename' },\n  { text: 'createtime', value: 'createtime' },\n  { text: 'type', value: 'type' },\n  { text: 'curDeadline', value: 'curDeadline' },\n];\n\nconst OrderType = [\n  { text: '升序', value: 0 },\n  { text: '降序', value: 1 },\n];\nconst Type = [\n  { text: 'Redis老集群版', value: 1 },\n  { text: 'Redis 2.8主从版', value: 2 },\n  { text: 'CKV主从版', value: 3 },\n  { text: 'CKV集群版', value: 4 },\n  { text: 'Redis 2.8单机版', value: 5 },\n  { text: 'Redis 4.0主从版', value: 6 },\n  { text: 'Redis 4.0集群版', value: 7 },\n  { text: 'Redis5.0主从版', value: 8 },\n  { text: 'Redis5.0集群版', value: 9 },\n];\n\nconst RedisFields = {\n  InstanceId: '',\n  OrderBy: '',\n  OrderType: null,\n  VpcIds: [],\n  SubnetIds: [],\n  ProjectIds: [],\n  SearchKey: '',\n  InstanceName: '',\n  UniqVpcIds: [],\n  UniqSubnetIds: [],\n  Status: [],\n  TypeVersion: null,\n  EngineName: '',\n  AutoRenew: null,\n  BillingMode: '',\n  Type: null,\n};\n\nconst RedisMemFieldsDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceId',\n    enDescriptor: 'InstancesId',\n    cnDescriptor: '实例id',\n    type: 'input',\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderBy,\n  },\n  {\n    key: 'OrderType',\n    enDescriptor: 'OrderType',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderType,\n  },\n  {\n    key: 'VpcIds',\n    enDescriptor: 'VpcIds',\n    cnDescriptor: '私有网络ID数组，数组下标从0开始，如果不传则默认选择基础网络，如：47525',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'SubnetIds',\n    enDescriptor: 'SubnetIds',\n    cnDescriptor: '子网ID数组，数组下标从0开始，如：56854',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'ProjectIds',\n    enDescriptor: 'ProjectIds',\n    cnDescriptor: '项目ID 组成的数组',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'SearchKey',\n    enDescriptor: 'SearchKey',\n    cnDescriptor: '查找实例的ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'InstanceName',\n    enDescriptor: 'InstanceName',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'UniqVpcIds',\n    enDescriptor: 'UniqVpcIds',\n    cnDescriptor: '私有网络ID数组，数组下标从0开始，如果不传则默认选择基础网络，如：vpc-sad23jfdfk',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'UniqSubnetIds',\n    enDescriptor: 'UniqSubnetIds',\n    cnDescriptor: '子网ID数组，数组下标从0开始，如：subnet-fdj24n34j2',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'Status',\n    enDescriptor: 'Status',\n    cnDescriptor: '实例状态',\n    multiple: true,\n    type: 'select',\n    list: Status,\n  },\n  {\n    key: 'TypeVersion',\n    enDescriptor: 'TypeVersion',\n    cnDescriptor: '类型版本',\n    link: '',\n    type: 'select',\n    list: TypeVersion,\n  },\n  {\n    key: 'EngineName',\n    enDescriptor: 'EngineName',\n    cnDescriptor: '引擎信息：Redis-2.8，Redis-4.0，CKV',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'AutoRenew',\n    enDescriptor: 'AutoRenew',\n    cnDescriptor: '续费模式',\n    multiple: true,\n    type: 'select',\n    list: AutoRenew,\n  },\n  {\n    key: 'BillingMode',\n    enDescriptor: 'BillingMode',\n    cnDescriptor: '计费模式：postpaid-按量计费；prepaid-包年包月',\n    link: '',\n    type: 'select',\n    list: BillingMode,\n  },\n  {\n    key: 'Type',\n    enDescriptor: 'Type',\n    cnDescriptor: '实例类型',\n    link: '',\n    type: 'select',\n    list: Type,\n  },\n];\n\nconst REDISMEM_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: { ...RedisFields },\n  rnodeid: '',\n  pnodeid: '',\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        // select 单选\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\nconst REDISMEMInstanceAliasList = ['InstanceId', 'InstanceName', 'WanIp'];\n\nconst RedisMemInvalidDemensions = {\n  instanceid: 'InstanceId',\n  rnodeid: 'rnodeid',\n  pnodeid: 'pnodeid',\n};\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n  rnodeid: 'rnodeid',\n  pnodeid: 'pnodeid',\n};\n\nconst NodeType = ['Redis', 'Proxy'];\n\nexport default REDISMEM_STATE;\nexport {\n  RedisMemFieldsDescriptor,\n  RedisMemInvalidDemensions,\n  REDISMEMInstanceAliasList,\n  templateQueryIdMap,\n  namespace,\n  NodeType,\n  GetInstanceQueryParams as REDISMEMGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/RABBITMQ';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'tdmqQuery';\n\nconst TDMQInvalidDemensions = {\n  instanceid: 'InstanceId',\n  node: 'NodeName',\n};\n\n// 需和文件名对应\nconst TDMQRABBITMQInstanceAliasList = ['InstanceId', 'InstanceName'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n  node: 'NodeName',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst TDMQFilterFields = {\n  Limit: 20,\n  Offset: 0,\n};\n\nconst TDMQFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n];\n\nconst TDMQ_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  // 此处key应该是经过TDMQInvalidDemensions处理后的\n  node: '',\n  queries: TDMQFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nconst regionSupported = [\n  { value: 'ap-beijing' },\n  { value: 'ap-chengdu' },\n  { value: 'ap-chongqing' },\n  { value: 'ap-guangzhou' },\n  { value: 'ap-shenzhen-fsi' },\n  { value: 'ap-shanghai' },\n  { value: 'ap-shanghai-fsi' },\n  { value: 'ap-nanjing' },\n  { value: 'ap-hongkong' },\n  { value: 'ap-tokyo' },\n  { value: 'ap-seoul' },\n  { value: 'ap-singapore' },\n  { value: 'ap-bangkok' },\n  { value: 'ap-jakarta' },\n  { value: 'ap-mumbai' },\n  { value: 'eu-frankfurt' },\n  { value: 'eu-moscow' },\n  { value: 'na-ashburn' },\n  { value: 'na-siliconvalley' },\n  { value: 'na-toronto' },\n];\n\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  node: 'NodeName',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  NodeName: {\n    dim_KeyInStorage: keyInStorage.node,\n    dim_KeyInTarget: 'node',\n    dim_KeyInMap: templateQueryIdMap.node,\n  },\n};\nexport default TDMQ_STATE;\nexport {\n  TDMQFilterFieldsDescriptor,\n  templateQueryIdMap,\n  TDMQRABBITMQInstanceAliasList,\n  TDMQInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryMonitorExtraConfg,\n  keyInStorage,\n  regionSupported,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as TDMQGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { FildDescriptorType } from '../_base/types';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/ROCKETMQ';\n\nconst TDMQInvalidDemensions = {\n  tenant: 'ClusterId',\n  namespace: 'NamespaceId',\n  group: 'Name',\n};\n\n// 需和文件名对应\nconst TDMQROCKETMQInstanceAliasList = ['ClusterId', 'ClusterName'];\n\nconst templateQueryIdMap = {\n  instance: 'ClusterId',\n  namespace: 'NamespaceId',\n  group: 'Name',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst TDMQFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  instanceIdsChecked: false,\n  filtersChecked: true,\n  ClusterIdList: [''],\n  Filters: {\n    includeVip: { text: '是', value: 'true' },\n  },\n};\n\nconst TDMQFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'includeVip',\n    enDescriptor: 'includeVip',\n    cnDescriptor: '包含专享集群',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '是', value: 'true' },\n      { text: '否', value: 'false' },\n    ],\n  },\n];\n\nconst TDMQ_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'ClusterId',\n  // 此处key应该是经过TDMQInvalidDemensions处理后的\n  namespace: '',\n  group: '',\n  queries: TDMQFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    if (queries.instanceIdsChecked) {\n      if (_.isArray(queries.ClusterIdList)) {\n        const ClusterIdList = _.compact(queries.ClusterIdList);\n        if (_.uniq(ClusterIdList).length > 0) {\n          params.ClusterIdList = _.uniq(ClusterIdList).slice(0, 100);\n        }\n      }\n    } else if (queries.filtersChecked) {\n      const Filters: any[] = [];\n      _.forEach(queries.Filters, (item: any, key) => {\n        if (Filters.length > 9) {\n          return;\n        }\n        if (_.isArray(item)) {\n          item = _.compact(item);\n          if (item.length > 0) {\n            Filters.push({ Name: key, Values: _.uniq(item).slice(0, 5) });\n          }\n        } else if (_.isObject(item)) {\n          if (!_.isEmpty(_.get(item, 'value', []))) {\n            Filters.push({ Name: key, Values: [_.get(item, 'value', [])].slice(0, 5) });\n          }\n        }\n      });\n      if (Filters.length > 0) {\n        params.Filters = Filters;\n      }\n    }\n  }\n  return params;\n}\nconst regionSupported = [\n  { value: 'ap-beijing' },\n  { value: 'ap-chengdu' },\n  { value: 'ap-chongqing' },\n  { value: 'ap-guangzhou' },\n  { value: 'ap-shenzhen-fsi' },\n  { value: 'ap-shanghai' },\n  { value: 'ap-shanghai-fsi' },\n  { value: 'ap-nanjing' },\n  { value: 'ap-hongkong' },\n  { value: 'ap-tokyo' },\n  { value: 'ap-seoul' },\n  { value: 'ap-singapore' },\n  { value: 'ap-bangkok' },\n  { value: 'ap-jakarta' },\n  { value: 'ap-mumbai' },\n  { value: 'eu-frankfurt' },\n  { value: 'eu-moscow' },\n  { value: 'na-ashburn' },\n  { value: 'na-siliconvalley' },\n  { value: 'na-toronto' },\n];\n\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  namespace: 'NamespaceId',\n  group: 'Name',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  NamespaceId: {\n    dim_KeyInStorage: keyInStorage.namespace,\n    dim_KeyInTarget: 'namespace',\n    dim_KeyInMap: templateQueryIdMap.namespace,\n  },\n  Name: {\n    dim_KeyInStorage: keyInStorage.group,\n    dim_KeyInTarget: 'group',\n    dim_KeyInMap: templateQueryIdMap.group,\n  },\n};\nexport default TDMQ_STATE;\nexport {\n  TDMQFilterFieldsDescriptor,\n  templateQueryIdMap,\n  TDMQROCKETMQInstanceAliasList,\n  TDMQInvalidDemensions,\n  namespace,\n  queryMonitorExtraConfg,\n  keyInStorage,\n  regionSupported,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as TDMQROCKETMQGetInstanceQueryParams,\n};\n","import { t } from '../../locale';\n// name (产品名称), service（对应的真实service）\ninterface ServiceType {\n  service: string;\n  label: string;\n  namespace: string;\n  href: string;\n  groupName?: string;\n  hideRegion?: boolean;\n}\nconst SERVICES: ServiceType[] = [\n  {\n    service: 'cvm',\n    get label() {\n      return t('CVM');\n    },\n    namespace: 'QCE/CVM',\n    href: 'https://cloud.tencent.com/document/api/213/15688',\n  },\n  {\n    service: 'cdb',\n    get label() {\n      return t('CDB');\n    },\n    namespace: 'QCE/CDB',\n    href: 'https://cloud.tencent.com/document/api/236/15829',\n    get groupName() {\n      return t('cloud_database');\n    },\n  },\n  {\n    service: 'mongoDB',\n    get label() {\n      return t('CMONGO');\n    },\n    namespace: 'QCE/CMONGO',\n    href: 'https://cloud.tencent.com/document/api/240/38568',\n    get groupName() {\n      return t('cloud_database');\n    },\n  },\n  {\n    service: 'postgres',\n    get label() {\n      return t('POSTGRES');\n    },\n    namespace: 'QCE/POSTGRES',\n    href: 'https://cloud.tencent.com/document/product/248/45105',\n    get groupName() {\n      return t('cloud_database');\n    },\n  },\n  {\n    service: 'redis',\n    get label() {\n      return t('REDIS');\n    },\n    namespace: 'QCE/REDIS',\n    href: 'https://cloud.tencent.com/document/product/248/45110',\n    get groupName() {\n      return t('cloud_database');\n    },\n  },\n  {\n    service: 'redisMem',\n    get label() {\n      return t('REDIS_MEM');\n    },\n    namespace: 'QCE/REDIS_MEM',\n    href: 'https://cloud.tencent.com/document/product/248/49729',\n    get groupName() {\n      return t('cloud_database');\n    },\n  },\n  {\n    service: 'sqlserver',\n    get label() {\n      return t('SQLSERVER');\n    },\n    namespace: 'QCE/SQLSERVER',\n    href: 'https://cloud.tencent.com/document/product/248/45146',\n    get groupName() {\n      return t('cloud_database');\n    },\n  },\n  {\n    service: 'cynosdbMysql',\n    get label() {\n      return t('CYNOSDB_MYSQL');\n    },\n    namespace: 'QCE/CYNOSDB_MYSQL',\n    href: 'https://cloud.tencent.com/document/product/248/45106',\n    get groupName() {\n      return t('cloud_database');\n    },\n  },\n  {\n    service: 'tcaplus',\n    get label() {\n      return t('TCAPLUS');\n    },\n    namespace: 'QCE/TCAPLUS',\n    href: 'https://cloud.tencent.com/document/product/248/45107',\n    get groupName() {\n      return t('cloud_database');\n    },\n  },\n  {\n    service: 'dcdb',\n    get label() {\n      return t('TDMYSQL');\n    },\n    namespace: 'QCE/TDMYSQL',\n    href: 'https://cloud.tencent.com/document/product/248/45108',\n  },\n  {\n    service: 'pcx',\n    get label() {\n      return t('PCX');\n    },\n    namespace: 'QCE/PCX',\n    href: 'https://cloud.tencent.com/document/product/215/5181',\n    get groupName() {\n      return t('virtual_private_cloud');\n    },\n  },\n  {\n    service: 'bwp',\n    get label() {\n      return t('BWP');\n    },\n    namespace: 'QCE/BWP',\n    href: 'https://cloud.tencent.com/document/api/215/19209',\n    get groupName() {\n      return t('virtual_private_cloud');\n    },\n  },\n  {\n    service: 'natGateway',\n    get label() {\n      return t('NAT_GATEWAY');\n    },\n    namespace: 'QCE/NAT_GATEWAY',\n    href: 'https://cloud.tencent.com/document/api/215/36034',\n    get groupName() {\n      return t('virtual_private_cloud');\n    },\n  },\n  {\n    service: 'vpngw',\n    get label() {\n      return t('VPNGW');\n    },\n    namespace: 'QCE/VPNGW',\n    href: 'https://cloud.tencent.com/document/product/248/45070',\n    get groupName() {\n      return t('virtual_private_cloud');\n    },\n  },\n  {\n    service: 'vpnx',\n    get label() {\n      return t('VPNX');\n    },\n    namespace: 'QCE/VPNX',\n    href: 'https://cloud.tencent.com/document/product/248/45071',\n    get groupName() {\n      return t('virtual_private_cloud');\n    },\n  },\n  {\n    service: 'dcg',\n    get label() {\n      return t('DCG');\n    },\n    namespace: 'QCE/DCG',\n    href: 'https://cloud.tencent.com/document/product/248/45072',\n    get groupName() {\n      return t('virtual_private_cloud');\n    },\n  },\n  {\n    service: 'ceipSummary',\n    get label() {\n      return t('CEIP_SUMMARY');\n    },\n    namespace: 'QCE/CEIP_SUMMARY',\n    href: 'https://cloud.tencent.com/document/product/248/50381',\n    get groupName() {\n      return t('virtual_private_cloud');\n    },\n  },\n  {\n    service: 'vpcNetDetect',\n    get label() {\n      return t('VPC_NET_DETECT');\n    },\n    namespace: 'QCE/VPC_NET_DETECT',\n    href: 'https://cloud.tencent.com/document/product/248/50384',\n    get groupName() {\n      return t('virtual_private_cloud');\n    },\n  },\n  {\n    service: 'vbc',\n    get label() {\n      return t('VBC');\n    },\n    namespace: 'QCE/VBC',\n    href: 'https://cloud.tencent.com/document/product/248/45073',\n    get groupName() {\n      return t('virtual_private_cloud');\n    },\n  },\n  {\n    service: 'lb',\n    get label() {\n      return t('LB');\n    },\n    namespace: 'QCE/LB',\n    href: 'https://cloud.tencent.com/document/product/248/45099',\n    get groupName() {\n      return t('virtual_private_cloud');\n    },\n  },\n  {\n    service: 'lbPublic',\n    get label() {\n      return t('LB_PUBLIC');\n    },\n    namespace: 'QCE/LB_PUBLIC',\n    href: 'https://cloud.tencent.com/document/product/248/51898',\n    get groupName() {\n      return `${t('cloud_load_balancer')}(${t('multi_scene')})`;\n    },\n  },\n  {\n    service: 'lbPrivate',\n    get label() {\n      return t('LB_PRIVATE');\n    },\n    namespace: 'QCE/LB_PRIVATE',\n    href: 'https://cloud.tencent.com/document/product/248/51899',\n    get groupName() {\n      return `${t('cloud_load_balancer')}(${t('multi_scene')})`;\n    },\n  },\n  {\n    service: 'loadBalance',\n    get label() {\n      return t('LOADBALANCE');\n    },\n    namespace: 'QCE/LOADBALANCE',\n    href: 'https://cloud.tencent.com/document/product/248/51901',\n    get groupName() {\n      return `${t('cloud_load_balancer')}(${t('multi_scene')})`;\n    },\n  },\n  {\n    service: 'vClb',\n    get label() {\n      return `${t('cloud_load_balancer')}(${t('lite')})`;\n    },\n    namespace: 'QCE/V_CLB',\n    href: 'https://cloud.tencent.com/document/product/248/51901',\n    get groupName() {\n      return `${t('cloud_load_balancer')}(${t('lite')})`;\n    },\n  },\n  {\n    service: 'cdn',\n    get label() {\n      return t('CDN');\n    },\n    namespace: 'QCE/CDN',\n    hideRegion: true,\n    href: 'https://cloud.tencent.com/document/product/248/50386',\n    get groupName() {\n      return t('content_delivery_network');\n    },\n  },\n  {\n    service: 'cdnProvince',\n    get label() {\n      return t('CDN_LOG_DATA');\n    },\n    namespace: 'QCE/CDN_LOG_DATA',\n    hideRegion: true,\n    href: 'https://cloud.tencent.com/document/product/248/50388',\n    get groupName() {\n      return t('content_delivery_network');\n    },\n  },\n  {\n    service: 'ovCdn',\n    get label() {\n      return t('OV_CDN');\n    },\n    namespace: 'QCE/OV_CDN',\n    hideRegion: true,\n    href: 'https://cloud.tencent.com/document/product/248/50387',\n    get groupName() {\n      return t('content_delivery_network');\n    },\n  },\n  {\n    service: 'scf',\n    get label() {\n      return t('SCF_V2');\n    },\n    namespace: 'QCE/SCF_V2',\n    href: 'https://cloud.tencent.com/document/product/248/45130',\n  },\n  {\n    service: 'cfs',\n    get label() {\n      return t('CFS');\n    },\n    namespace: 'QCE/CFS',\n    href: 'https://cloud.tencent.com/document/product/248/45143',\n  },\n  {\n    service: 'cos',\n    get label() {\n      return t('COS');\n    },\n    namespace: 'QCE/COS',\n    href: 'https://cloud.tencent.com/document/product/248/45140',\n  },\n  {\n    service: 'ckafka',\n    get label() {\n      return t('CKAFKA');\n    },\n    namespace: 'QCE/CKAFKA',\n    href: 'https://cloud.tencent.com/document/product/248/45121',\n    get groupName() {\n      return t('message_queue');\n    },\n  },\n  {\n    service: 'cmq',\n    get label() {\n      return t('CMQ');\n    },\n    namespace: 'QCE/CMQ',\n    href: 'https://cloud.tencent.com/document/product/248/45114',\n    get groupName() {\n      return t('message_queue');\n    },\n  },\n  {\n    service: 'cmqTopic',\n    get label() {\n      return t('CMQTOPIC');\n    },\n    namespace: 'QCE/CMQTOPIC',\n    href: 'https://cloud.tencent.com/document/product/248/45113',\n    get groupName() {\n      return t('message_queue');\n    },\n  },\n  {\n    service: 'tdmq',\n    get label() {\n      return t('TDMQ');\n    },\n    namespace: 'QCE/TDMQ',\n    href: 'https://cloud.tencent.com/document/product/248/51450',\n    get groupName() {\n      return t('message_queue');\n    },\n  },\n  {\n    service: 'tdmqRocketmq',\n    get label() {\n      return t('TDMQ_ROCKETMQ');\n    },\n    namespace: 'QCE/ROCKETMQ',\n    href: 'https://cloud.tencent.com/document/product/248/51450',\n    get groupName() {\n      return t('message_queue');\n    },\n  },\n  {\n    service: 'tdmqRabbitmq',\n    get label() {\n      return t('TDMQ_RABBITMQ');\n    },\n    namespace: 'QCE/RABBITMQ',\n    href: 'https://cloud.tencent.com/document/product/248/51450',\n    get groupName() {\n      return t('message_queue');\n    },\n  },\n  {\n    service: 'dcx',\n    get label() {\n      return t('DCX');\n    },\n    namespace: 'QCE/DCX',\n    href: 'https://cloud.tencent.com/document/product/248/45101',\n    get groupName() {\n      return t('direct_connect');\n    },\n  },\n  {\n    service: 'dc',\n    get label() {\n      return t('DC');\n    },\n    namespace: 'QCE/DC',\n    href: 'https://cloud.tencent.com/document/product/248/45102',\n    get groupName() {\n      return t('direct_connect');\n    },\n  },\n  {\n    service: 'cpm',\n    get label() {\n      return t('CPM');\n    },\n    namespace: 'QCE/CPM',\n    href: 'https://cloud.tencent.com/document/product/248/45881',\n    get groupName() {\n      return t('cloud_physical_machine');\n    },\n  },\n  {\n    service: 'bmPcx',\n    get label() {\n      return t('BM_PCX');\n    },\n    namespace: 'QCE/BM_PCX',\n    href: 'https://cloud.tencent.com/document/product/248/45884',\n    get groupName() {\n      return t('cloud_physical_machine');\n    },\n  },\n  {\n    service: 'bmLb',\n    get label() {\n      return t('BM_LB');\n    },\n    namespace: 'QCE/BM_LB',\n    href: 'https://cloud.tencent.com/document/product/248/45886',\n    get groupName() {\n      return t('cloud_physical_machine');\n    },\n  },\n  {\n    service: 'bmIntraLb',\n    get label() {\n      return t('BM_INTRA_LB');\n    },\n    namespace: 'QCE/BM_INTRA_LB',\n    href: 'https://cloud.tencent.com/document/product/248/45885',\n    get groupName() {\n      return t('cloud_physical_machine');\n    },\n  },\n  {\n    service: 'ces',\n    get label() {\n      return t('CES');\n    },\n    namespace: 'QCE/CES',\n    href: 'https://cloud.tencent.com/document/product/248/45129',\n  },\n  {\n    service: 'mrHDFS',\n    get label() {\n      return `${t('elastic_mapReduce')}(HDFS)`;\n    },\n    namespace: 'QCE/TXMR_HDFS',\n    href: 'https://cloud.tencent.com/document/product/248/44797',\n    get groupName() {\n      return t('elastic_mapReduce');\n    },\n  },\n  {\n    service: 'mrHBASE',\n    get label() {\n      return `${t('elastic_mapReduce')}(HBASE)`;\n    },\n    namespace: 'QCE/TXMR_HBASE',\n    href: 'https://cloud.tencent.com/document/product/248/45567',\n    get groupName() {\n      return t('elastic_mapReduce');\n    },\n  },\n  {\n    service: 'mrHIVE',\n    get label() {\n      return `${t('elastic_mapReduce')}(HIVE)`;\n    },\n    namespace: 'QCE/TXMR_HIVE',\n    href: 'https://cloud.tencent.com/document/product/248/45569',\n    get groupName() {\n      return t('elastic_mapReduce');\n    },\n  },\n  {\n    service: 'mrNODE',\n    get label() {\n      return `${t('elastic_mapReduce')}(NODE)`;\n    },\n    namespace: 'QCE/TXMR_NODE',\n    href: 'https://cloud.tencent.com/document/product/248/45570',\n    get groupName() {\n      return t('elastic_mapReduce');\n    },\n  },\n  {\n    service: 'mrPRESTO',\n    get label() {\n      return `${t('elastic_mapReduce')}(PRESTO)`;\n    },\n    namespace: 'QCE/TXMR_PRESTO',\n    href: 'https://cloud.tencent.com/document/product/248/45571',\n    get groupName() {\n      return t('elastic_mapReduce');\n    },\n  },\n  {\n    service: 'mrSPARK',\n    get label() {\n      return `${t('elastic_mapReduce')}(SPARK)`;\n    },\n    namespace: 'QCE/TXMR_SPARK',\n    href: 'https://cloud.tencent.com/document/product/248/45572',\n    get groupName() {\n      return t('elastic_mapReduce');\n    },\n  },\n  {\n    service: 'mrYARN',\n    get label() {\n      return `${t('elastic_mapReduce')}(YARN)`;\n    },\n    namespace: 'QCE/TXMR_YARN',\n    href: 'https://cloud.tencent.com/document/product/248/45573',\n    get groupName() {\n      return t('elastic_mapReduce');\n    },\n  },\n  {\n    service: 'mrZOOKEEPER',\n    get label() {\n      return `${t('elastic_mapReduce')}(ZOOKEEPER)`;\n    },\n    namespace: 'QCE/TXMR_ZOOKEEPER',\n    href: 'https://cloud.tencent.com/document/product/248/45574',\n    get groupName() {\n      return t('elastic_mapReduce');\n    },\n  },\n  {\n    service: 'cbs',\n    get label() {\n      return t('BLOCK_STORAGE');\n    },\n    namespace: 'QCE/BLOCK_STORAGE',\n    href: 'https://cloud.tencent.com/document/product/362/2345',\n  },\n  {\n    service: 'apigateway',\n    get label() {\n      return t('APIGATEWAY');\n    },\n    namespace: 'QCE/APIGATEWAY',\n    href: 'https://cloud.tencent.com/document/product/248/45127',\n  },\n  {\n    service: 'qaap',\n    get label() {\n      return t('QAAP');\n    },\n    namespace: 'QCE/QAAP',\n    href: 'https://cloud.tencent.com/document/product/608',\n  },\n  {\n    service: 'ecm',\n    get label() {\n      return t('ECM');\n    },\n    hideRegion: true,\n    namespace: 'QCE/ECM',\n    href: 'https://cloud.tencent.com/document/product/1108',\n    get groupName() {\n      return t('edge_computing_machine');\n    },\n  },\n  {\n    service: 'ecmBlockStorage',\n    get label() {\n      return t('ECM_BLOCK_STORAGE');\n    },\n    hideRegion: true,\n    namespace: 'QCE/ECM_BLOCK_STORAGE',\n    href: 'https://cloud.tencent.com/document/product/1108',\n    get groupName() {\n      return t('edge_computing_machine');\n    },\n  },\n  {\n    service: 'ecmLb',\n    get label() {\n      return t('ECM_LB');\n    },\n    hideRegion: true,\n    namespace: 'QCE/ECM_LB',\n    href: 'https://cloud.tencent.com/document/product/1108',\n    get groupName() {\n      return t('edge_computing_machine');\n    },\n  },\n  {\n    service: 'gse',\n    get label() {\n      return t('GSE');\n    },\n    namespace: 'QCE/GSE',\n    href: 'https://cloud.tencent.com/document/product/1165',\n  },\n  {\n    service: 'cls',\n    get label() {\n      return t('CLS');\n    },\n    namespace: 'QCE/CLS',\n    href: 'https://cloud.tencent.com/document/product/614',\n  },\n  {\n    service: 'tke',\n    get label() {\n      return t('TKE');\n    },\n    namespace: 'QCE/TKE2',\n    href: 'https://cloud.tencent.com/document/product/457',\n  },\n  {\n    service: 'ecdn',\n    get label() {\n      return t('ECDN');\n    },\n    namespace: 'QCE/DSA',\n    href: 'https://cloud.tencent.com/document/product/570',\n  },\n  // {\n  //   service: 'lighthouse',\n  //   label: '轻量应用服务器(LIGHTHOUSE)',\n  //   namespace: 'QCE/LIGHTHOUSE',\n  //   href: 'https://cloud.tencent.com/document/product/1207',\n  // },\n  // {\n  //   service: 'tsf',\n  //   label: ' 微服务平台(TSF)',\n  //   namespace: 'QCE/TSF',\n  //   href: 'https://cloud.tencent.com/document/product/649',\n  // },\n  {\n    service: 'waf',\n    get label() {\n      return t('WAF');\n    },\n    // hideRegion: true,\n    namespace: 'QCE/WAF',\n    href: 'https://cloud.tencent.com/document/product/627',\n  },\n];\nconst Datasources = {};\nconst InitStates = {};\nconst InstanceAliasList = {};\nconst GetInstanceQueryParams = {};\n\n/**\n * 由于目录命名不规范，导致需要使用额外逻辑保证正确性。从目录到具体service的映射\n */\nconst hackModuleName = {\n  // lb_loadBalance: 'loadBalance',\n  postgresql: 'postgres',\n  mongodb: 'mongoDB',\n  clb: ['lbPrivate', 'lbPublic', 'loadBalance'],\n  mr: ['mrHDFS', 'mrHBASE', 'mrHIVE', 'mrNODE', 'mrPRESTO', 'mrSPARK', 'mrYARN', 'mrZOOKEEPER'],\n};\n\nconst requireModule = (require as any).context('./', true, /^\\.\\/[a-zA-Z]\\w+\\/(datasource)|(query(_def)?)\\.ts$/);\n\nrequireModule.keys().forEach((filePath) => {\n  let [, moduleName, fileName] = filePath.split('/');\n\n  // hack： 这里是由于产品目录命名不规范,所以才会多这么一段代码\n  moduleName = hackModuleName[moduleName] ?? moduleName;\n\n  // 目录与模块的映射关系，不管是一对一还是一对多，均按数组进行统一处理\n  [].concat(moduleName).forEach((module: string) => {\n    // 这个service就是产品配置中的service，需要注意这里的service是根据目录名称算出来的，因此目录名称一定要和service对应\n    const service = module.replace(/_([a-zA-Z])/g, (_, b) => b.toUpperCase());\n    const prefix = service.toUpperCase(); // 命名规则\n\n    // datasource\n    if (fileName === 'datasource.ts') {\n      const Cls = require(`${filePath}`).default;\n\n      // 想办法为实例注入service，不能为prototype或则类本身注入，因为会造成互相污染，详尽mrDatasource\n      Datasources[`${prefix}Datasource`] = class {\n        constructor(...params) {\n          const target = new Cls(...params, service);\n          target.service = service;\n          // eslint-disable-next-line no-constructor-return\n          return target;\n        }\n      };\n    }\n    // query\n    if (fileName === 'query.ts') {\n      require(`${filePath}`);\n    }\n    // query_def\n    if (fileName === 'query_def.ts') {\n      const alias = `${prefix}InstanceAliasList`;\n      const getParams = `${prefix}GetInstanceQueryParams`;\n\n      const target = require(`${filePath}`);\n\n      InitStates[service] = target.default; // FIXME: 这里需不需要深拷贝？\n      InstanceAliasList[alias] = target[alias] ?? target['InstanceAliasList'];\n      GetInstanceQueryParams[getParams] = target[getParams] ?? target['GetInstanceQueryParams'];\n    }\n  });\n});\n\nexport {\n  InitStates as InitServiceState,\n  SERVICES,\n  Datasources,\n  InstanceAliasList,\n  GetInstanceQueryParams,\n  // DefaultDimensions\n};\n\n// console.log(Datasources, InitStates, InstanceAliasList, GetInstanceQueryParams);\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/ECM_BLOCK_STORAGE';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'ecmBlockStorageQuery';\n\nconst ECMBLOCKSTORAGEInvalidDemensions = {\n  uuid: 'UUID',\n  diskId: 'DiskId',\n};\n\n// 需和文件名对应\nconst ECMBLOCKSTORAGEInstanceAliasList = ['InstanceId', 'InstanceName'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n  diskId: 'DiskId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst ECMBLOCKSTORAGEFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  'zone-name': [],\n  'module-id': [],\n  'module-name': [],\n  'instance-id': [],\n  'instance-name': [],\n  'ip-address': [],\n  'instance-uuid': [],\n  'instance-state': {},\n  'internet-service-provider': [],\n  'instance-family': [],\n  'image-id': [],\n  'vpc-id': [],\n  'subnet-id': [],\n};\n\nconst ECMBLOCKSTORAGEFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'zone-name',\n    enDescriptor: 'zone-name',\n    cnDescriptor: '排列顺序',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'module-id',\n    enDescriptor: 'module-id',\n    cnDescriptor: '模块ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'module-name',\n    enDescriptor: 'module-name',\n    cnDescriptor: '模块名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-id',\n    enDescriptor: 'instance-id',\n    cnDescriptor: '实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-name',\n    enDescriptor: 'instance-name',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'ip-address',\n    enDescriptor: 'ip-address',\n    cnDescriptor: '内网/公网IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-uuid',\n    enDescriptor: 'instance-uuid',\n    cnDescriptor: '实例uuid',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-state',\n    enDescriptor: 'instance-state',\n    cnDescriptor: '实例状态',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '创建中', value: 'PENDING' },\n      { text: '创建失败', value: 'LAUNCH_FAILED' },\n      { text: '运行中', value: 'RUNNING' },\n      { text: '关机', value: 'STOPPED' },\n      { text: '开机中', value: 'STARTING' },\n      { text: '关机中', value: 'STOPPING' },\n      { text: '重启中', value: 'REBOOTING' },\n      { text: '停止待销毁', value: 'SHUTDOWN' },\n      { text: '销毁中', value: 'TERMINATING' },\n    ],\n  },\n  {\n    key: 'internet-service-provider',\n    enDescriptor: 'internet-service-provider',\n    cnDescriptor: '公网IP所属的运营商',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-family',\n    enDescriptor: 'instance-family',\n    cnDescriptor: '机型family',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'image-id',\n    enDescriptor: 'image-id',\n    cnDescriptor: '镜像ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'vpc-id',\n    cnDescriptor: '实例的vpc id',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'subnet-id',\n    enDescriptor: 'subnet-id',\n    cnDescriptor: '实例的subnet id',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/1108/42565',\n  namespace,\n  fieldDescriptor: ECMBLOCKSTORAGEFilterFieldsDescriptor,\n};\n\nconst ECMBLOCKSTORAGE_STATE = {\n  region: 'ap-guangzhou',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  diskId: '',\n  queries: ECMBLOCKSTORAGEFilterFields,\n};\n\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  diskId: 'diskId',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  DiskId: {\n    dim_KeyInStorage: keyInStorage.diskId,\n    dim_KeyInTarget: 'diskId',\n    dim_KeyInMap: templateQueryIdMap.diskId,\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nexport default ECMBLOCKSTORAGE_STATE;\nexport {\n  ECMBLOCKSTORAGEFilterFieldsDescriptor,\n  templateQueryIdMap,\n  ECMBLOCKSTORAGEInstanceAliasList,\n  ECMBLOCKSTORAGEInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  keyInStorage,\n  queryMonitorExtraConfg,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as ECMBLOCKSTORAGEGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/APIGATEWAY';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'apigatewayQuery';\n\nconst APIGATEWAYInvalidDemensions = {\n  serviceId: 'ServiceId',\n  environmentName: 'EnvironmentName',\n  apiid: 'Apiid',\n  apiId: 'Apiid',\n};\n\n// 需和文件名对应\nconst APIGATEWAYInstanceAliasList = ['ServiceId', 'ServiceName'];\n\nconst templateQueryIdMap = {\n  instance: 'ServiceId',\n  environmentName: 'EnvironmentName',\n};\n\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  environmentList: 'EnvironmentList',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  EnvironmentName: {\n    dim_KeyInStorage: keyInStorage.environmentList,\n    dim_KeyInTarget: 'EnvironmentName',\n    dim_KeyInMap: templateQueryIdMap.environmentName,\n  },\n};\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst APIGATEWAYFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  ServiceId: [],\n  ServiceName: [],\n  NotUsagePlanId: [],\n  Environment: [],\n  IpVersion: [],\n};\n\nconst APIGATEWAYFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'ServiceId',\n    enDescriptor: 'ServiceId',\n    cnDescriptor: '服务id',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'ServiceName',\n    enDescriptor: 'ServiceName',\n    cnDescriptor: '服务名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'NotUsagePlanId',\n    enDescriptor: 'NotUsagePlanId',\n    cnDescriptor: 'NotUsagePlanId',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'Environment',\n    enDescriptor: 'Environment',\n    cnDescriptor: '环境名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'IpVersion',\n    enDescriptor: 'IpVersion',\n    cnDescriptor: 'IP版本',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/628/45198',\n  namespace,\n  fieldDescriptor: APIGATEWAYFilterFieldsDescriptor,\n};\n\nconst APIGATEWAY_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'ServiceId',\n  EnvironmentName: '',\n  queries: APIGATEWAYFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\n// regions for dropdown\nconst regionSupported = [\n  { value: 'ap-beijing' },\n  { value: 'ap-chengdu' },\n  { value: 'ap-chongqing' },\n  { value: 'ap-guangzhou' },\n  { value: 'ap-hongkong' },\n  { value: 'ap-mumbai' },\n  { value: 'ap-nanjing' },\n  { value: 'ap-shanghai' },\n  { value: 'ap-shanghai-fsi' },\n  { value: 'ap-shenzhen-fsi' },\n  { value: 'ap-singapore' },\n  { value: 'ap-tokyo' },\n  { value: 'eu-frankfurt' },\n  { value: 'na-ashburn' },\n  { value: 'na-siliconvalley' },\n  { value: 'na-toronto' },\n];\nexport default APIGATEWAY_STATE;\nexport {\n  APIGATEWAYFilterFieldsDescriptor,\n  templateQueryIdMap,\n  APIGATEWAYInstanceAliasList,\n  APIGATEWAYInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  regionSupported,\n  queryMonitorExtraConfg,\n  keyInStorage,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as APIGATEWAYGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\nexport const InstanceQueryDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为10，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceIds',\n    enDescriptor: 'InstanceIds',\n    cnDescriptor: '按照一个或者多个实例ID查询。实例ID形如: emr-xxxxxxxx ',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'OrderField',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '实例ID', value: 'clusterId' },\n      { text: '创建时间', value: 'addTime' },\n      { text: '状态', value: 'status' },\n    ],\n  },\n  {\n    key: 'Asc',\n    enDescriptor: 'Order Direction',\n    cnDescriptor: '排序方式',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '降序', value: 0 },\n      { text: '升序', value: 1 },\n    ],\n  },\n  {\n    key: 'ProjectId',\n    enDescriptor: 'ProjectId',\n    cnDescriptor: '实例所属项目ID',\n    link: '',\n    type: 'inputnumber',\n  },\n  {\n    key: 'DisplayStrategy',\n    enDescriptor: 'DisplayStrategy',\n    cnDescriptor: '集群筛选策略',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '未销毁的实例', value: 'clusterList' },\n      { text: '正常运行的实例', value: 'monitorManage' },\n    ],\n  },\n];\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\n// 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key\nexport const InvalidDemensions = new Proxy(\n  {},\n  {\n    get(target, k, receiver) {\n      if (typeof k === 'string') {\n        if (k.startsWith('id4')) return 'ClusterId'; // id4****\n        if (k.startsWith('host4')) return 'Ip'; // host4***\n      }\n      return Reflect.get(target, k, receiver);\n    },\n    has(target, propKey) {\n      return true;\n    },\n  }\n);\n\nexport const templateQueryIdMap = {\n  instance: 'ClusterId',\n  node: 'Ip',\n};\n\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  node: 'nodeIP',\n};\n\n/**\n * 如果有InstanceId额外的维度，原则上都需要传入此map结构配置\n *\n * `key` 的含义：\n *   经过InvalidDemensions处理后的string。topicId => TopicId。\n *   否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\n *\n * `value` 的含义：\n *   @param {1} dim_KeyInStorage  指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n *   @param {2} dim_KeyInTarget   通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n *                                  默认取通过InvalidDemsion处理后的key\n *   @param {3} dim_KeyInMap      保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n *                                  即：templateQueryIdMap中内容。\n *                                  联合上面 2 的内容筛选出原始sourceMap\n */\nconst queryMonitorExtraConfg = {\n  Ip: {\n    dim_KeyInStorage: keyInStorage.node,\n    dim_KeyInTarget: 'nodeIP',\n    dim_KeyInMap: templateQueryIdMap.node,\n  },\n};\n\n// 与名称挂钩的变量\nconst InstanceAliasList = ['ClusterId', 'ClusterName'];\nexport { InstanceAliasList, GetInstanceQueryParams, queryMonitorExtraConfg, keyInStorage };\n\n// 界面状态模型，default\nexport default {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'ClusterId',\n  nodeIP: '',\n  queries: {\n    Offset: 0,\n    Limit: 10,\n    DisplayStrategy: '',\n    OrderBy: {},\n    Order: {},\n    InstanceIds: [],\n    ProjectId: -1,\n    OrderField: '',\n    Asc: '',\n  },\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/V_CLB';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'vClbQuery';\n\nconst VCLBInvalidDemensions = {\n  InstanceId: 'LoadBalancerId',\n  // vip: 'LoadBalancerVips',\n  // loadBalancerPort: 'Port',\n  // protocol: 'Protocol',\n};\n\n// 要和文件名方式一致，ceip_summary=>CEIPSUMMARY\nconst VCLBInstanceAliasList = ['LoadBalancerId', 'LoadBalancerVips', 'LoadBalancerName'];\n\nconst templateQueryIdMap = {\n  instance: 'LoadBalancerId',\n};\nconst ForwardTypes = [\n  { text: '通用的负载均衡', value: 1 },\n  { text: '传统的负载均衡', value: 0 },\n];\n\nconst OrderBy = [\n  { text: 'LoadBalancerName', value: 'LoadBalancerName' },\n  { text: 'CreateTime', value: 'CreateTime' },\n  { text: 'Domain', value: 'Domain' },\n  { text: 'LoadBalancerType', value: 'LoadBalancerType' },\n];\n\nconst OrderType = [\n  { text: '升序', value: 0 },\n  { text: '降序', value: 1 },\n];\n\nconst WithRs = [\n  { text: '没有绑定后端服务', value: 0 },\n  { text: '绑定后端服务', value: 1 },\n  { text: '查询全部', value: -1 },\n];\nconst VCLBFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n  },\n  {\n    key: 'LoadBalancerIds',\n    enDescriptor: 'LoadBalancer ID',\n    cnDescriptor: '实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerName',\n    enDescriptor: 'LoadBalancer Name',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'Forward',\n    enDescriptor: 'Forward',\n    cnDescriptor: '负载均衡实例类型',\n    link: '',\n    type: 'select',\n    list: ForwardTypes,\n  },\n  {\n    key: 'Domain',\n    enDescriptor: 'Domain',\n    cnDescriptor: '域名，腾讯云为负载均衡实例分配的域名，本参数仅对传统型公网负载均衡才有意义',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'LoadBalancerVips',\n    enDescriptor: 'LoadBalancer Vips',\n    cnDescriptor: '负载均衡实例的 VIP 地址',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'BackendPrivateIps',\n    enDescriptor: 'BackendPrivate Ips',\n    cnDescriptor: '负载均衡绑定的后端服务的内网 IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'BackendPublicIps',\n    enDescriptor: 'BackendPublic Ips',\n    cnDescriptor: '负载均衡绑定的后端服务的外网 IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'ProjectId',\n    enDescriptor: 'Project ID',\n    cnDescriptor: '负载均衡实例所属的项目 ID',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'Vpc ID',\n    cnDescriptor: '负载均衡实例所属私有网络',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SecurityGroup',\n    enDescriptor: 'Security Group',\n    cnDescriptor: '安全组ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'MasterZone',\n    enDescriptor: 'Master Zone',\n    cnDescriptor: '主可用区ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'WithRs',\n    enDescriptor: 'WithRs',\n    cnDescriptor: '负载均衡是否绑定后端服务',\n    link: '',\n    type: 'select',\n    list: WithRs,\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderBy,\n  },\n  {\n    key: 'OrderType',\n    enDescriptor: 'OrderByType',\n    cnDescriptor: '排序方式',\n    link: '',\n    type: 'select',\n    list: OrderType,\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/214/30685',\n  namespace,\n  fieldDescriptor: VCLBFilterFieldsDescriptor,\n};\nconst LBFields = {\n  LoadBalancerIds: [],\n  Forward: undefined,\n  LoadBalancerName: '',\n  Domain: '',\n  LoadBalancerVips: [],\n  BackendPublicIps: [],\n  BackendPrivateIps: [],\n  Limit: 20,\n  Offset: 0,\n  ProjectId: undefined,\n  WithRs: {},\n  VpcId: '',\n  SecurityGroup: '',\n  MasterZone: '',\n  OrderBy: {},\n  OrderType: {},\n};\n\nconst VCLB_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'LoadBalancerId',\n  Port: '',\n  Protocol: '',\n  listener: '',\n  // listenerAlias: 'ListenerId',\n  queries: LBFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\n\n// regions for dropdown\nconst regionSupported = [\n  { value: 'ap-bangkok' },\n  { value: 'ap-beijing' },\n  { value: 'ap-chengdu' },\n  { value: 'ap-chongqing' },\n  { value: 'ap-guangzhou' },\n  { value: 'ap-hongkong' },\n  { value: 'ap-jakarta' },\n  { value: 'ap-mumbai' },\n  { value: 'ap-seoul' },\n  { value: 'ap-nanjing' },\n  { value: 'ap-shanghai' },\n  { value: 'ap-shanghai-fsi' },\n  { value: 'ap-shenzhen-fsi' },\n  { value: 'ap-singapore' },\n  { value: 'ap-tokyo' },\n  { value: 'eu-frankfurt' },\n  { value: 'eu-moscow' },\n  { value: 'na-ashburn' },\n  { value: 'na-siliconvalley' },\n  { value: 'na-toronto' },\n];\nconst clbNamespaceMap = {\n  public: 'QCE/LB_PUBLIC',\n  private: 'QCE/LB_PRIVATE',\n};\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['InstanceId'];\n  });\n  return metricTmp;\n}\nexport default VCLB_STATE;\nexport {\n  VCLBFilterFieldsDescriptor,\n  templateQueryIdMap,\n  VCLBInstanceAliasList,\n  VCLBInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  clbNamespaceMap,\n  modifyDimensons,\n  regionSupported,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as BMLBGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/CYNOSDB_MYSQL';\n\n// 按照驼峰方式命名，和SERVICES保持一致，abcDeF会成为angular组件名字<abc-de-f-query />\nconst queryEditorName = 'cynosdbMysqlQuery';\n\nconst cynosdbMysqlFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  OrderBy: {},\n  OrderByType: {},\n  InstanceIds: [],\n  DbType: {},\n  // Status: '',\n};\n\nconst cynosdbMysqlFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 1000,\n  },\n  {\n    key: 'InstanceIds',\n    enDescriptor: 'InstanceIds',\n    cnDescriptor: '实例id列表',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '创建时间', value: 'CREATETIME' },\n      { text: '过期时间', value: 'PERIODENDTIME' },\n    ],\n  },\n  {\n    key: 'OrderByType',\n    enDescriptor: 'OrderByType',\n    cnDescriptor: '排序类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '升序', value: 'ASC' },\n      { text: '降序', value: 'DESC' },\n    ],\n  },\n  {\n    key: 'DbType',\n    enDescriptor: 'DbType',\n    cnDescriptor: '引擎类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'MYSQL', value: 'MYSQL' },\n      { text: 'POSTGRESQL', value: 'POSTGRESQL' },\n    ],\n  },\n  // {\n  //   key: 'Status',\n  //   enDescriptor: 'Status',\n  //   cnDescriptor: '实例状态',\n  //   link: '',\n  //   type: 'input',\n  // },\n];\n// regions for dropdown\nconst regionSupported = [\n  { value: 'ap-beijing' },\n  { value: 'ap-guangzhou' },\n  { value: 'ap-nanjing' },\n  { value: 'ap-shanghai' },\n];\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/1003/48334',\n  namespace,\n  fieldDescriptor: cynosdbMysqlFilterFieldsDescriptor,\n};\n\nconst CYNOSDB_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: cynosdbMysqlFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\n// 和文件名字一样CYNOSDBMYSQL\nconst CYNOSDBMYSQLInstanceAliasList = ['InstanceId', 'InstanceName'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\n\nconst CYNOSDBInvalidDemensions = {\n  instanceid: 'InstanceId',\n  instanceId: 'InstanceId',\n};\nconst checkKeys = ['instanceId'];\nfunction modifyDimensons(metricItem) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['InstanceId'];\n  });\n  return metricTmp;\n}\n\nexport default CYNOSDB_STATE;\nexport {\n  cynosdbMysqlFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CYNOSDBMYSQLInstanceAliasList,\n  CYNOSDBInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  regionSupported,\n  modifyDimensons,\n  checkKeys,\n  // params前缀为service的全大写\n  GetInstanceQueryParams as CYNOSDBMYSQLGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\nexport const SCFQueryDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'SearchKey',\n    enDescriptor: 'SearchKey',\n    cnDescriptor: '支持FunctionName模糊匹配',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'Namespace',\n    enDescriptor: 'Namespace',\n    cnDescriptor: '云函数命名空间',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'Description',\n    enDescriptor: 'Description',\n    cnDescriptor: '函数描述，支持模糊搜索',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'AddTime', value: 'AddTime' },\n      { text: 'ModTime', value: 'ModTime' },\n      { text: 'FunctionName', value: 'FunctionName' },\n    ],\n  },\n  {\n    key: 'Order',\n    enDescriptor: 'Order Direction',\n    cnDescriptor: '排序方式',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'ASC', value: 'ASC' },\n      { text: 'DESC', value: 'DESC' },\n    ],\n  },\n  // {\n  //   key: 'Filters',\n  //   enDescriptor: 'Filters',\n  //   cnDescriptor: '按照标签键值对进行过滤',\n  //   link: '',\n  //   type: 'dropdownmulti',\n  // },\n];\n\nconst SCF_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'FunctionName',\n  version: '',\n  queries: {\n    Offset: 0,\n    Limit: 20,\n    OrderBy: {},\n    Order: {},\n    SearchKey: '',\n    Namespace: '',\n    Description: '',\n    // Filters:  {},\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\nconst SCFInstanceAliasList = ['FunctionId', 'FunctionName'];\n\n// 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key\nconst SCFInvalidDemensions = {\n  functionName: 'FunctionName',\n  namespace: 'Namespace',\n  version: 'Version',\n};\n\nconst templateQueryIdMap = {\n  instance: 'FunctionName',\n  version: 'Version',\n};\nconst regionSupported = [\n  { value: 'ap-beijing' },\n  { value: 'ap-chengdu' },\n  { value: 'ap-chongqing' },\n  { value: 'ap-guangzhou' },\n  { value: 'ap-hongkong' },\n  { value: 'ap-mumbai' },\n  { value: 'ap-shanghai' },\n  { value: 'ap-shanghai-fsi' },\n  { value: 'ap-shenzhen-fsi' },\n  { value: 'ap-singapore' },\n  { value: 'ap-tokyo' },\n  { value: 'eu-frankfurt' },\n  { value: 'na-siliconvalley' },\n  { value: 'na-toronto' },\n];\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  version: 'version',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  Version: {\n    dim_KeyInStorage: keyInStorage.version,\n    dim_KeyInTarget: 'version',\n    dim_KeyInMap: templateQueryIdMap.version,\n  },\n};\nexport default SCF_STATE;\nexport {\n  SCFInstanceAliasList,\n  SCFInvalidDemensions,\n  queryMonitorExtraConfg,\n  regionSupported,\n  templateQueryIdMap,\n  keyInStorage,\n  GetInstanceQueryParams as SCFGetInstanceQueryParams,\n};\n\n// monitor监控数据默认支持的维度\nexport const SCFDefaultDimensionList = ['functionName', 'namespace', 'version'];\n","module.exports = __WEBPACK_EXTERNAL_MODULE__26__;","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/CLS';\nconst queryEditorName = 'clsQuery';\n\nconst CLSInvalidDemensions = {\n  // instanceid: 'TopicId',\n};\n\n// 需和文件名对应\nconst CLSInstanceAliasList = ['TopicId', 'TopicName'];\n\nconst templateQueryIdMap = {\n  instance: 'TopicId',\n};\n\n// 需要缓存到storage的内容的key列表\n// const keyInStorage = {\n//   fleet: 'fleet', // 实例队列\n//   queue: 'queueName', // 会话队列\n// };\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\n// const queryMonitorExtraConfg = {\n//   FleetId: {\n//     dim_KeyInStorage: keyInStorage.fleet,\n//     dim_KeyInTarget: 'FleetId',\n//     dim_KeyInMap: templateQueryIdMap.FleetId,\n//   },\n//   Name: {\n//     dim_KeyInStorage: keyInStorage.queue,\n//     dim_KeyInTarget: 'Name',\n//     dim_KeyInMap: templateQueryIdMap.Name,\n//   },\n// };\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst CLSFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  topicName: [],\n  topicId: [],\n  logsetName: [],\n  logsetId: [],\n  tagKey: [],\n  'tag:tagKey': [],\n  storageType: {},\n};\n\nconst CLSFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'topicName',\n    enDescriptor: 'topicName',\n    cnDescriptor: '日志主题名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'topicId',\n    enDescriptor: 'topicId',\n    cnDescriptor: '日志主题ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'logsetName',\n    enDescriptor: 'logsetName',\n    cnDescriptor: '日志集名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'logsetId',\n    enDescriptor: 'logsetId',\n    cnDescriptor: '日志集ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'tagKey',\n    enDescriptor: 'tagKey',\n    cnDescriptor: '标签键',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'tag:tagKey',\n    enDescriptor: 'tag - tagKey',\n    cnDescriptor: '标签键值对',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'storageType',\n    enDescriptor: 'storageType',\n    cnDescriptor: '日志主题的存储类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '实时存储', value: 'hot' },\n      { text: '离线存储', value: 'cold' },\n    ],\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/614/56454',\n  namespace,\n  fieldDescriptor: CLSFilterFieldsDescriptor,\n};\n\nconst CLS_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'TopicId',\n  uin: '',\n  queries: CLSFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\n// regions for dropdown\nconst regionSupported = [\n  { value: 'ap-bangkok' },\n  { value: 'ap-beijing' },\n  { value: 'ap-chengdu' },\n  { value: 'ap-chongqing' },\n  { value: 'ap-guangzhou' },\n  { value: 'ap-hongkong' },\n  { value: 'ap-jakarta' },\n  { value: 'ap-mumbai' },\n  { value: 'ap-seoul' },\n  { value: 'ap-nanjing' },\n  { value: 'ap-shanghai' },\n  { value: 'ap-shanghai-fsi' },\n  { value: 'ap-shenzhen-fsi' },\n  { value: 'ap-singapore' },\n  { value: 'ap-tokyo' },\n  { value: 'eu-frankfurt' },\n  { value: 'eu-moscow' },\n  { value: 'na-ashburn' },\n  { value: 'na-siliconvalley' },\n  { value: 'na-toronto' },\n];\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    // item.Dimensions = item.Dimensions.map((v) => CLSInvalidDemensions[v] || v);\n    item.Dimensions = ['uin', 'TopicId'];\n  });\n  return metricTmp;\n}\nexport default CLS_STATE;\nexport {\n  CLSFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CLSInstanceAliasList,\n  CLSInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  regionSupported,\n  modifyDimensons,\n  // queryMonitorExtraConfg,\n  // fleetId,\n  // keyInStorage,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as CLSGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/SQLSERVER';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'sqlserverQuery';\n\nconst SQLSERVERInvalidDemensions = {\n  resourceId: 'InstanceId',\n};\n\nconst SQLSERVERInstanceAliasList = ['InstanceId', 'Name'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst SQLSERVERNETFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  ProjectId: null,\n  Status: {},\n  InstanceIdSet: [],\n  PayMode: {},\n  VpcId: '',\n  SubnetId: '',\n  VipSet: [],\n  InstanceNameSet: [],\n  VersionSet: [],\n  Zone: '',\n};\n\nconst SQLSERVERNETFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'ProjectId',\n    enDescriptor: 'ProjectId',\n    cnDescriptor: '项目ID',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'Status',\n    enDescriptor: 'Status',\n    cnDescriptor: '实例状态',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '申请中', value: 1 },\n      { text: '运行中', value: 2 },\n      { text: '受限运行中 (主备切换中)', value: 3 },\n      { text: '已隔离', value: 4 },\n      { text: '回收中', value: 5 },\n      { text: '已回收', value: 6 },\n      { text: '任务执行中', value: 7 },\n      { text: '已下线', value: 8 },\n      { text: '实例扩容中', value: 9 },\n      { text: '实例迁移中', value: 10 },\n      { text: '只读', value: 11 },\n      { text: '重启中', value: 12 },\n    ],\n  },\n  {\n    key: 'InstanceIdSet',\n    enDescriptor: 'InstanceIdSet',\n    cnDescriptor: '实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'PayMode',\n    enDescriptor: 'PayMode',\n    cnDescriptor: '子网实例ID',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '包年包月', value: 1 },\n      { text: '按量计费', value: 0 },\n    ],\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'VpcId',\n    cnDescriptor: '实例所属VPC的唯一字符串ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SubnetId',\n    enDescriptor: 'SubnetId',\n    cnDescriptor: '实例所属子网的唯一字符串ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'VipSet',\n    enDescriptor: 'VipSet',\n    cnDescriptor: '实例内网地址列表',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'InstanceNameSet',\n    enDescriptor: 'InstanceNameSet',\n    cnDescriptor: '实例名称列表, 模糊查询',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'VersionSet',\n    enDescriptor: 'VersionSet',\n    cnDescriptor: '实例版本代号列表',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'Zone',\n    enDescriptor: 'Zone',\n    cnDescriptor: '实例可用区',\n    link: '',\n    type: 'dropdown',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/238/19969',\n  namespace,\n  fieldDescriptor: SQLSERVERNETFilterFieldsDescriptor,\n};\n\n// regions for dropdown\nconst regionSupported = [\n  { value: 'ap-beijing' },\n  { value: 'ap-chengdu' },\n  { value: 'ap-chongqing' },\n  { value: 'ap-guangzhou' },\n  { value: 'ap-hongkong' },\n  { value: 'ap-nanjing' },\n  { value: 'ap-seoul' },\n  { value: 'ap-shanghai' },\n  { value: 'ap-shanghai-fsi' },\n  { value: 'ap-shenzhen-fsi' },\n  { value: 'ap-singapore' },\n  { value: 'ap-tokyo' },\n  { value: 'eu-moscow' },\n  { value: 'na-siliconvalley' },\n];\nconst SQLSERVER_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: SQLSERVERNETFilterFields,\n};\n\nfunction modifyDimensons(metricItem) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['resourceId'];\n  });\n  return metricTmp;\n}\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\nexport default SQLSERVER_STATE;\nexport {\n  SQLSERVERNETFilterFieldsDescriptor,\n  templateQueryIdMap,\n  SQLSERVERInstanceAliasList,\n  SQLSERVERInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  regionSupported,\n  modifyDimensons,\n  // 对应产品的service的全大写拼接InstanceQueryParams\n  GetInstanceQueryParams as SQLSERVERGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/BM_INTRA_LB';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'bmIntraLbQuery';\n\nconst BMINTRALBInvalidDemensions = {\n  vip: 'LoadBalancerVips',\n  vpcId: 'VpcId',\n};\n\n// 要和文件名方式一致，ceip_summary=>CEIPSUMMARY\nconst BMINTRALBInstanceAliasList = ['LoadBalancerId', 'LoadBalancerVips', 'LoadBalancerName'];\n\nconst templateQueryIdMap = {\n  instance: 'LoadBalancerId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是类型\nconst BMINTRALBFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  LoadBalancerIds: [],\n  LoadBalancerName: [],\n  LoadBalancerVips: [],\n};\n\nconst BMINTRALBFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'LoadBalancerIds',\n    enDescriptor: 'LoadBalancerIds',\n    cnDescriptor: '负载均衡器ID数组',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerName',\n    enDescriptor: 'LoadBalancerName',\n    cnDescriptor: '负载均衡器名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerVips',\n    enDescriptor: 'LoadBalancerVips',\n    cnDescriptor: '负载均衡获得的公网IP地址',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/1027/33280',\n  namespace,\n  fieldDescriptor: BMINTRALBFilterFieldsDescriptor,\n};\n\nconst BMINTRALB_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'LoadBalancerId',\n  queries: BMINTRALBFilterFields,\n};\nconst BMLBValidMetricsT = ['Inpkg', 'Outpkg', 'Intraffic', 'Outtraffic', 'Connum', 'Req'];\nfunction isValidMetric(metric) {\n  const validMetrics = _.map(BMLBValidMetricsT, _.toUpper);\n  return _.indexOf(validMetrics, _.toUpper(metric.MetricName)) !== -1;\n}\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\nexport default BMINTRALB_STATE;\nexport {\n  BMINTRALBFilterFieldsDescriptor,\n  templateQueryIdMap,\n  BMINTRALBInstanceAliasList,\n  BMINTRALBInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  isValidMetric,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as BMINTRALBGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/BM_LB';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'bmLbQuery';\n\nconst CPMInvalidDemensions = {\n  vip: 'LoadBalancerVips',\n};\n\n// 要和文件名方式一致，ceip_summary=>CEIPSUMMARY\nconst BMLBInstanceAliasList = ['LoadBalancerId', 'LoadBalancerVips', 'LoadBalancerName'];\n\nconst templateQueryIdMap = {\n  instance: 'LoadBalancerId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是类型\nconst CPMFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  LoadBalancerIds: [],\n  LoadBalancerName: [],\n  LoadBalancerVips: [],\n};\n\nconst CPMFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'LoadBalancerIds',\n    enDescriptor: 'LoadBalancerIds',\n    cnDescriptor: '负载均衡器ID数组',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerName',\n    enDescriptor: 'LoadBalancerName',\n    cnDescriptor: '负载均衡器名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerVips',\n    enDescriptor: 'LoadBalancerVips',\n    cnDescriptor: '负载均衡获得的公网IP地址',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/1027/33280',\n  namespace,\n  fieldDescriptor: CPMFilterFieldsDescriptor,\n};\n\nconst CPM_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'LoadBalancerId',\n  queries: CPMFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\nconst BMLBValidMetricsT = ['Inpkg', 'Outpkg', 'Intraffic', 'Outtraffic', 'Connum', 'Req'];\nfunction isValidMetric(metric) {\n  const validMetrics = _.map(BMLBValidMetricsT, _.toUpper);\n  return _.indexOf(validMetrics, _.toUpper(metric.MetricName)) !== -1;\n}\nexport default CPM_STATE;\nexport {\n  CPMFilterFieldsDescriptor,\n  templateQueryIdMap,\n  BMLBInstanceAliasList,\n  CPMInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  isValidMetric,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as BMLBGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/BM_PCX';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'bmPcxQuery';\n\nconst BMPCXInvalidDemensions = {\n  peeringConnectionId: 'VpcPeerConnectionId',\n};\n\n// 要和文件名方式一致，ceip_summary=>CEIPSUMMARY\nconst BMPCXInstanceAliasList = ['VpcPeerConnectionId', 'VpcPeerConnectionName'];\n\nconst templateQueryIdMap = {\n  instance: 'VpcPeerConnectionId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是类型\nconst BMPCXFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  VpcPeerConnectionIds: [],\n};\n\nconst BMPCXFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'VpcPeerConnectionIds',\n    enDescriptor: 'VpcPeerConnectionIds',\n    cnDescriptor: '对等连接实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/product/1024/36903',\n  namespace,\n  fieldDescriptor: BMPCXFilterFieldsDescriptor,\n};\n\nconst BMPCX_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'VpcPeerConnectionId',\n  queries: BMPCXFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['peeringConnectionId'];\n  });\n  return metricTmp;\n}\nexport default BMPCX_STATE;\nexport {\n  BMPCXFilterFieldsDescriptor,\n  templateQueryIdMap,\n  BMPCXInstanceAliasList,\n  BMPCXInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as BMPCXGetInstanceQueryParams,\n};\n","import * as _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/BLOCK_STORAGE';\nconst queryEditorName = 'cbsQuery';\n\nconst CBSInvalidDemensions = {\n  diskId: 'DiskId',\n  InstanceId: 'InstanceId',\n  diskname: 'DiskName',\n  unInstanceId: 'InstanceId',\n};\n\nconst CBSInstanceAliasList = ['DiskId', 'DiskName'];\n\nconst templateQueryIdMap = {\n  instance: 'DiskId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst CBSFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  DiskIds: [],\n  OrderField: [],\n  Order: [],\n  ReturnBindAutoSnapshotPolicy: false,\n};\n\nconst CBSFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'DiskIds',\n    enDescriptor: 'DiskIds',\n    cnDescriptor: '云硬盘ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'Order',\n    enDescriptor: 'Order',\n    cnDescriptor: '排列顺序',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '升序排列', value: 'ASC' },\n      { text: '降序排列', value: 'DESC' },\n    ],\n  },\n  {\n    key: 'OrderField',\n    enDescriptor: 'OrderField',\n    cnDescriptor: '排序的依据字段',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '云盘的创建时间排序', value: 'CREATE_TIME' },\n      { text: '云盘的到期时间排序', value: 'DEADLINE' },\n    ],\n  },\n  {\n    key: 'ReturnBindAutoSnapshotPolicy',\n    enDescriptor: 'ReturnBindAutoSnapshotPolicy',\n    cnDescriptor: '否需要返回云盘绑定的定期快照策略ID',\n    link: '',\n    type: 'switch',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/362/16315',\n  namespace,\n  fieldDescriptor: CBSFilterFieldsDescriptor,\n};\n\nconst CBS_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'DiskId',\n  queries: CBSFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\nfunction isValidMetric(metricObj: any = {}) {\n  const dimension = _.get(metricObj, 'Dimensions[0].Dimensions');\n  // console.log('dimension', dimension, dimension.length === 1 && _.indexOf(dimension, 'diskId') !== -1);\n  return dimension.length === 1 && _.indexOf(dimension, 'diskId') !== -1;\n}\nexport default CBS_STATE;\nexport {\n  CBSFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CBSInstanceAliasList,\n  CBSInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  isValidMetric,\n  GetInstanceQueryParams as CBSGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/CDN_LOG_DATA';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'cdnProvinceQuery';\n\nconst CDNPROVINCEInvalidDemensions = {\n  domain: 'Domain',\n  // isp: 'Isp',\n  projectid: 'ProjectId',\n  province: 'district',\n  appid: 'AppId',\n};\n\n// 需和文件名对应\nconst CDNPROVINCEInstanceAliasList = ['Domain', 'ProjectId'];\n\nconst templateQueryIdMap = {\n  instance: 'Domain',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst CDNPROVINCEFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  origin: [],\n  domain: [],\n  resourceId: [],\n  status: {},\n  serviceType: {},\n  projectId: [],\n  domainType: {},\n  fullUrlCache: {},\n  https: {},\n  originPullProtocol: {},\n  tagKey: [],\n};\n\nconst CDNPROVINCEFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'origin',\n    enDescriptor: 'origin',\n    cnDescriptor: '主源站',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'domain',\n    enDescriptor: 'domain',\n    cnDescriptor: '域名',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'resourceId',\n    enDescriptor: 'resourceId',\n    cnDescriptor: '域名id',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'status',\n    enDescriptor: 'status',\n    cnDescriptor: '域名状态',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'online', value: 'online' },\n      { text: 'offline', value: 'offline' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'serviceType',\n    enDescriptor: 'serviceType',\n    cnDescriptor: '业务类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'web', value: 'web' },\n      { text: 'download', value: 'download' },\n      { text: 'media', value: 'media' },\n    ],\n  },\n  {\n    key: 'projectId',\n    enDescriptor: 'projectId',\n    cnDescriptor: '项目ID',\n    link: '',\n    type: 'inputNumberMulti',\n  },\n  {\n    key: 'domainType',\n    enDescriptor: 'domainType',\n    cnDescriptor: '主源站类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '自有源', value: 'cname' },\n      { text: 'cos接入', value: 'cos' },\n    ],\n  },\n  {\n    key: 'fullUrlCache',\n    enDescriptor: 'fullUrlCache',\n    cnDescriptor: '全路径缓存',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '打开', value: 'on' },\n      { text: '关闭', value: 'off' },\n    ],\n  },\n  {\n    key: 'https',\n    enDescriptor: 'https',\n    cnDescriptor: '是否配置https',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'on', value: 'on' },\n      { text: 'off', value: 'off' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'originPullProtocol',\n    enDescriptor: 'originPullProtocol',\n    cnDescriptor: '回源协议类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'http', value: 'http' },\n      { text: 'follow', value: 'follow' },\n      { text: 'https', value: 'https' },\n    ],\n  },\n  {\n    key: 'tagKey',\n    enDescriptor: 'tagKey',\n    cnDescriptor: '标签键',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\nconst CDNPROVINCE_STATE = {\n  region: 'ap-guangzhou',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'Domain',\n  // Isp Province分别在两个接口，单独保存在state\n  isp: '',\n  district: '',\n  queries: CDNPROVINCEFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\n// const regionSupported = [\n//   { text: '华北地区(北京)', value: 'ap-beijing' },\n//   { text: '西南地区(成都)', value: 'ap-chengdu' },\n//   { text: '西南地区(重庆)', value: 'ap-chongqing' },\n//   { text: '华南地区(广州)', value: 'ap-guangzhou' },\n//   { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n//   { text: '亚太南部(孟买)', value: 'ap-mumbai' },\n//   { text: '华东地区(南京)', value: 'ap-nanjing' },\n//   { text: '华东地区(上海)', value: 'ap-shanghai' },\n//   { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },\n//   { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n//   { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n//   { text: '亚太东北(东京)', value: 'ap-tokyo' },\n//   { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },\n//   { text: '美国东部(弗吉尼亚)', value: 'na-ashburn' },\n//   { text: '美国西部(硅谷)', value: 'na-siliconvalley' },\n//   { text: '北美地区(多伦多)', value: 'na-toronto' },\n// ];\nexport default CDNPROVINCE_STATE;\nexport {\n  CDNPROVINCEFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CDNPROVINCEInstanceAliasList,\n  CDNPROVINCEInvalidDemensions,\n  namespace,\n  queryEditorName,\n  // regionSupported,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as CDNPROVINCEGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/CEIP_SUMMARY';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'ceipSummaryQuery';\n\nconst CEIPInvalidDemensions = {\n  vip: 'AddressIp',\n  eip: 'AddressIp',\n};\n\n// 要和文件名方式一致，ceip_summary=>CEIPSUMMARY\nconst CEIPSUMMARYInstanceAliasList = ['AddressId', 'AddressName', 'AddressIp'];\n\nconst templateQueryIdMap = {\n  instance: 'AddressId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst CEIPFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  'address-id': [],\n  'address-name': [],\n  'address-ip': [],\n  'address-status': {},\n  'is-arrears': {},\n  'address-isp': {},\n  'instance-id': [],\n  'private-ip-address': [],\n  'network-interface-id': [],\n};\n\nconst CEIPFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'address-id',\n    enDescriptor: 'address-id',\n    cnDescriptor: ' EIP 的唯一 ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'address-name',\n    enDescriptor: 'address-name',\n    cnDescriptor: 'EIP 名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'address-ip',\n    enDescriptor: 'address-ip',\n    cnDescriptor: 'EIP 的 IP 地址',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'address-status',\n    enDescriptor: 'address-status',\n    cnDescriptor: 'EIP 的状态',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: 'CREATING', value: 'CREATING' },\n      { text: 'BINDING', value: 'BINDING' },\n      { text: 'BIND', value: 'BIND' },\n      { text: 'UNBINDING', value: 'UNBINDING' },\n      { text: 'UNBIND', value: 'UNBIND' },\n      { text: 'OFFLINING', value: 'OFFLINING' },\n      { text: 'BIND_ENI', value: 'BIND_ENI' },\n    ],\n  },\n  {\n    key: 'instance-id',\n    enDescriptor: 'instance-id',\n    cnDescriptor: 'EIP 绑定的实例 ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'private-ip-address',\n    enDescriptor: 'private-ip-address',\n    cnDescriptor: 'EIP 绑定的内网 IP ',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'network-interface-id',\n    enDescriptor: 'network-interface-id',\n    cnDescriptor: ' EIP 绑定的弹性网卡 ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'is-arrears',\n    enDescriptor: 'is-arrears',\n    cnDescriptor: 'EIP 是否欠费',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '欠费状态', value: 'TRUE' },\n      { text: '费用状态正常', value: 'FALSE' },\n    ],\n  },\n  {\n    key: 'address-isp',\n    enDescriptor: 'address-isp',\n    cnDescriptor: '运营商类型',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: 'BGP', value: 'BGP' },\n      { text: 'CMCC', value: 'CMCC' },\n      { text: 'CUCC', value: 'CUCC' },\n      { text: 'CTCC', value: 'CTCC' },\n    ],\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/16702',\n  namespace,\n  fieldDescriptor: CEIPFilterFieldsDescriptor,\n};\n\nconst CEIP_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'AddressId',\n  queries: CEIPFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['eip'];\n  });\n  return metricTmp;\n}\nexport default CEIP_STATE;\nexport {\n  CEIPFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CEIPSUMMARYInstanceAliasList,\n  CEIPInvalidDemensions,\n  namespace,\n  queryEditorName,\n  modifyDimensons,\n  queryEditorConfig,\n  GetInstanceQueryParams as CEIPSUMMARYGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { FildDescriptorType } from '../_base/types';\n\nexport const InstanceQueryDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为10，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 50,\n  },\n  {\n    key: 'TopicName',\n    enDescriptor: 'TopicName',\n    cnDescriptor: '精确匹配TopicName',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'TagKey',\n    enDescriptor: 'TagKey',\n    cnDescriptor: '标签搜索',\n    link: '',\n    type: 'input',\n  },\n];\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\n// 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key\nexport const InvalidDemensions = {\n  topicId: 'TopicId',\n};\n\n// 因为cmq那边，以TopciName为主键\nexport const templateQueryIdMap = {\n  instance: 'TopicName',\n  subscription: 'SubscriptionId',\n};\n\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  subscriptionId: 'subscriptionId',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  subscriptionId: {\n    dim_KeyInStorage: keyInStorage.subscriptionId,\n    dim_KeyInTarget: 'subscriptionId',\n    dim_KeyInMap: templateQueryIdMap.subscription,\n  },\n};\n// 与名称挂钩的变量\nconst InstanceAliasList = ['TopicName', 'TopicId'];\nexport { InstanceAliasList, GetInstanceQueryParams, queryMonitorExtraConfg, keyInStorage };\n\n// 界面状态模型，default\nexport default {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'TopicName',\n  subscriptionId: '',\n  queries: {\n    Offset: 0,\n    Limit: 20,\n    TopicName: '',\n    TagKey: '',\n  },\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/CPM';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'cpmQuery';\n\nconst CPMInvalidDemensions = {\n  instanceId: 'InstanceId',\n  // uniqid: 'InstanceId',\n};\n\nconst CPMInstanceAliasList = ['InstanceId', 'Name'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst CPMFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  DeviceClassCode: '',\n  InstanceIds: [],\n  WanIps: [],\n  LanIps: [],\n  Alias: '',\n  VagueIp: '',\n  AutoRenewFlag: {},\n  VpcId: '',\n  SubnetId: '',\n  DeviceType: {},\n  IsLuckyDevice: {},\n};\n\nconst CPMFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'DeviceClassCode',\n    enDescriptor: 'DeviceClassCode',\n    cnDescriptor: '机型ID',\n    link: '',\n    type: 'dropdown',\n  },\n  {\n    key: 'InstanceIds',\n    enDescriptor: 'InstanceIds',\n    cnDescriptor: '设备ID数组',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'WanIps',\n    enDescriptor: 'WanIps',\n    cnDescriptor: '外网IP数组',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LanIps',\n    enDescriptor: 'LanIps',\n    cnDescriptor: '内网IP数组',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'Alias',\n    enDescriptor: 'Alias',\n    cnDescriptor: '设备名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'VagueIp',\n    enDescriptor: 'VagueIp',\n    cnDescriptor: '模糊IP查询',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'AutoRenewFlag',\n    enDescriptor: 'AutoRenewFlag',\n    cnDescriptor: '自动续费标志',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '不自动续费', value: 0 },\n      { text: '自动续费', value: 1 },\n    ],\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'VpcId',\n    cnDescriptor: '私有网络唯一ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SubnetId',\n    enDescriptor: 'SubnetId',\n    cnDescriptor: '子网唯一ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'DeviceType',\n    enDescriptor: 'DeviceType',\n    cnDescriptor: '子网实例ID',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '计算型', value: 'compute' },\n      { text: '标准型', value: 'standard' },\n      { text: '存储型', value: 'storage' },\n    ],\n  },\n  {\n    key: 'IsLuckyDevice',\n    enDescriptor: 'IsLuckyDevice',\n    cnDescriptor: '竞价实例机器过滤',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '非竞价实例机器', value: 0 },\n      { text: '竞价实例的机器', value: 1 },\n    ],\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/386/32904',\n  namespace,\n  fieldDescriptor: CPMFilterFieldsDescriptor,\n};\n\nconst CPM_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: CPMFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\n\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['instanceId'];\n  });\n  return metricTmp;\n}\nexport default CPM_STATE;\nexport {\n  CPMFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CPMInstanceAliasList,\n  CPMInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as CPMGetInstanceQueryParams,\n};\n","import { cloneDeep, compact, forEach, get, isArray, isEmpty, isObject, omit, uniq } from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\n\nconst namespace = 'QCE/DSA';\nconst queryEditorName = 'ecdnQuery';\n\nconst ECDNInstanceAliasList = ['Domain'];\n\nconst templateQueryIdMap = {\n  instance: 'Domain',\n};\n\nconst ECDNInvalidDemensions = {\n  domain: 'Domain',\n  projectid: 'ProjectId',\n};\n\nconst ECDN_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'Domain',\n  queries: {\n    Limit: 100,\n    Offset: 0,\n    origin: [],\n    domain: [],\n    resourceId: [],\n    status: [],\n    disable: [],\n    projectId: [],\n    fullUrlCache: [],\n    https: [],\n    originPullProtocol: [],\n    area: [],\n    tagKey: [],\n  },\n};\n\nconst ECDNFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'origin',\n    enDescriptor: 'Origin',\n    cnDescriptor: '主源站',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'domain',\n    enDescriptor: 'Domain',\n    cnDescriptor: '域名',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'resourceId',\n    enDescriptor: 'ResourceId',\n    cnDescriptor: '域名id',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'status',\n    enDescriptor: 'Status',\n    cnDescriptor: '域名状态',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'online', value: 'online' },\n      { text: 'offline', value: 'offline' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'disable',\n    enDescriptor: 'Disable',\n    cnDescriptor: '域名封禁状态',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'normal', value: 'normal' },\n      { text: 'unlicensed', value: 'unlicensed' },\n    ],\n  },\n  {\n    key: 'projectId',\n    enDescriptor: 'ProjectId',\n    cnDescriptor: '项目ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'fullUrlCache',\n    enDescriptor: 'FullUrlCache',\n    cnDescriptor: '全路径缓存',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'on', value: 'on' },\n      { text: 'off', value: 'off' },\n    ],\n  },\n  {\n    key: 'https',\n    enDescriptor: 'Https',\n    cnDescriptor: '是否配置https',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'on', value: 'on' },\n      { text: 'off', value: 'off' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'originPullProtocol',\n    enDescriptor: 'OriginPullProtocol',\n    cnDescriptor: '回源协议类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'http', value: 'http' },\n      { text: 'https', value: 'https' },\n      { text: 'follow', value: 'follow' },\n    ],\n  },\n  {\n    key: 'area',\n    enDescriptor: 'Area',\n    cnDescriptor: '加速区域',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'mainland', value: 'mainland' },\n      { text: 'overseas', value: 'overseas' },\n      { text: 'global', value: 'global' },\n    ],\n  },\n  {\n    key: 'tagKey',\n    enDescriptor: 'TagKey',\n    cnDescriptor: '标签键',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/570/42462',\n  namespace,\n  fieldDescriptor: ECDNFilterFieldsDescriptor,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!isEmpty(queries)) {\n    params.Limit = get(queries, 'Limit', 20) || 20;\n    params.Offset = get(queries, 'Offset', 0) || 0;\n    const _queries = omit(queries, ['Offset', 'Limit']);\n    const Filters: any[] = [];\n    forEach(_queries, (item: any, key) => {\n      if (isArray(item)) {\n        item = compact(item);\n        if (item.length > 0) {\n          Filters.push({ Name: key, Value: uniq(item).slice(0, 5) });\n        }\n      } else if (isObject(item)) {\n        if (!isEmpty(get(item, 'value', []))) {\n          Filters.push({ Name: key, Value: [get(item, 'value', [])].slice(0, 5) });\n        }\n      }\n    });\n    if (Filters.length > 0) {\n      params.Filters = Filters.map((item) => {\n        if (item.Name === 'domain') {\n          return { ...item, Fuzzy: true };\n        }\n        return item;\n      });\n      return params;\n    }\n  }\n  return params;\n}\n\nfunction modifyDimensons(metricItem) {\n  const metricTmp = cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['domain', 'projectid'];\n  });\n  return metricTmp;\n}\n\nexport default ECDN_STATE;\n\nexport {\n  ECDNFilterFieldsDescriptor,\n  templateQueryIdMap,\n  ECDNInstanceAliasList,\n  ECDNInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  GetInstanceQueryParams as ECDNGetInstanceQueryParams,\n};\n","import * as _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/ECM';\nconst queryEditorName = 'ecmQuery';\n\nconst ECMInvalidDemensions = {\n  // diskId: 'InstanceId',\n  uuid: 'UUID',\n  // unInstanceId: 'InstanceId',\n};\n\nconst ECMInstanceAliasList = ['InstanceId', 'InstanceName'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst ECMFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  zone: [],\n  'zone-name': [],\n  'module-id': [],\n  'module-name': [],\n  'instance-id': [],\n  'instance-name': [],\n  'ip-address': [],\n  'instance-uuid': [],\n  'instance-state': {},\n  'internet-service-provider': [],\n  'instance-family': [],\n  'image-id': [],\n  'vpc-id': [],\n  'subnet-id': [],\n};\n\nconst ECMFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'zone',\n    enDescriptor: 'zone',\n    cnDescriptor: '可用区英文标识',\n    link: '',\n    type: 'dropdownMulti',\n  },\n  {\n    key: 'zone-name',\n    enDescriptor: 'zone-name',\n    cnDescriptor: '排列顺序',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'module-id',\n    enDescriptor: 'module-id',\n    cnDescriptor: '模块ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'module-name',\n    enDescriptor: 'module-name',\n    cnDescriptor: '模块名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-id',\n    enDescriptor: 'instance-id',\n    cnDescriptor: '实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-name',\n    enDescriptor: 'instance-name',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'ip-address',\n    enDescriptor: 'ip-address',\n    cnDescriptor: '内网/公网IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-uuid',\n    enDescriptor: 'instance-uuid',\n    cnDescriptor: '实例uuid',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-state',\n    enDescriptor: 'instance-state',\n    cnDescriptor: '实例状态',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '创建中', value: 'PENDING' },\n      { text: '创建失败', value: 'LAUNCH_FAILED' },\n      { text: '运行中', value: 'RUNNING' },\n      { text: '关机', value: 'STOPPED' },\n      { text: '开机中', value: 'STARTING' },\n      { text: '关机中', value: 'STOPPING' },\n      { text: '重启中', value: 'REBOOTING' },\n      { text: '停止待销毁', value: 'SHUTDOWN' },\n      { text: '销毁中', value: 'TERMINATING' },\n    ],\n  },\n  {\n    key: 'internet-service-provider',\n    enDescriptor: 'internet-service-provider',\n    cnDescriptor: '公网IP所属的运营商',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-family',\n    enDescriptor: 'instance-family',\n    cnDescriptor: '机型family',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'image-id',\n    enDescriptor: 'image-id',\n    cnDescriptor: '镜像ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'vpc-id',\n    cnDescriptor: '实例的vpc id',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'subnet-id',\n    enDescriptor: 'subnet-id',\n    cnDescriptor: '实例的subnet id',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/1108/42565',\n  namespace,\n  fieldDescriptor: ECMFilterFieldsDescriptor,\n};\n\nconst ECM_STATE = {\n  region: 'ap-guangzhou',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: ECMFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\n// function isValidMetric(metricObj: any = {}) {\n//   const dimension = _.get(metricObj, 'Dimensions[0].Dimensions');\n//   // console.log('dimension', dimension, dimension.length === 1 && _.indexOf(dimension, 'diskId') !== -1);\n//   return dimension.length === 1 &&( _.indexOf(dimension, 'UUID') !== -1 || _.indexOf(dimension, 'uuid') !== -1);\n// }\n\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['UUID'];\n  });\n  return metricTmp;\n}\nexport default ECM_STATE;\nexport {\n  ECMFilterFieldsDescriptor,\n  templateQueryIdMap,\n  ECMInstanceAliasList,\n  ECMInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  GetInstanceQueryParams as ECMGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nconst namespace = 'QCE/POSTGRES';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'postgresQuery';\n\nconst PostgresFields = {\n  'db-instance-id': [],\n  'db-instance-name': [],\n};\n\nconst PostgresFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'db-instance-id',\n    enDescriptor: 'DB Instance ID',\n    cnDescriptor: 'DB 实例ID',\n    link: '',\n    type: 'inputMulti',\n    min: 0,\n  },\n  {\n    key: 'db-instance-name',\n    enDescriptor: 'DB Instance Name',\n    cnDescriptor: 'DB 实例名称',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/409/16773',\n  namespace,\n  fieldDescriptor: PostgresFieldsDescriptor,\n};\nconst POSTGRESInstanceAliasList = ['DBInstanceId', 'DBInstanceName'];\n\nconst POSTGRES_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'DBInstanceId',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    Filters: { ...PostgresFields },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['resourceId'];\n  });\n  return metricTmp;\n}\nconst PostgreInvalidDemensions = {\n  uid: 'DBInstanceId',\n  resourceId: 'DBInstanceId',\n};\nconst templateQueryIdMap = {\n  instance: 'DBInstanceId',\n};\nexport default POSTGRES_STATE;\n\nexport {\n  PostgresFieldsDescriptor,\n  POSTGRESInstanceAliasList,\n  templateQueryIdMap,\n  modifyDimensons,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  PostgreInvalidDemensions,\n  GetInstanceQueryParams as POSTGRESGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/VPC_NET_DETECT';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'vpcNetDetectQuery';\n\nconst VPCNETInvalidDemensions = {\n  netdetectid: 'NetDetectId',\n  netDetectId: 'NetDetectId',\n};\n\nconst VPCNETDETECTInstanceAliasList = ['NetDetectId', 'NetDetectName'];\n\nconst templateQueryIdMap = {\n  instance: 'NetDetectId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst VPCNETFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  'vpc-id': [],\n  'net-detect-id': [],\n  'subnet-id': [],\n  'net-detect-name': [],\n};\n\nconst VPCNETFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'vpc-id',\n    cnDescriptor: 'VPC实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'net-detect-id',\n    enDescriptor: 'net-detect-id',\n    cnDescriptor: '网络探测实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'subnet-id',\n    enDescriptor: 'subnet-id',\n    cnDescriptor: '子网实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'net-detect-name',\n    enDescriptor: 'net-detect-name',\n    cnDescriptor: '网络探测名称',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/38696',\n  namespace,\n  fieldDescriptor: VPCNETFilterFieldsDescriptor,\n};\n\nconst VPCNET_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'NetDetectId',\n  queries: VPCNETFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['netDetectId'];\n  });\n  return metricTmp;\n}\nexport default VPCNET_STATE;\nexport {\n  VPCNETFilterFieldsDescriptor,\n  templateQueryIdMap,\n  VPCNETDETECTInstanceAliasList,\n  VPCNETInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  GetInstanceQueryParams as VPCNETDETECTGetInstanceQueryParams,\n};\n","import * as _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/WAF';\nconst queryEditorName = 'wafQuery';\nconst WAFFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  origin: [],\n  domain: [],\n  resourceId: [],\n  status: {},\n  serviceType: {},\n  projectId: [],\n  domainType: {},\n  fullUrlCache: {},\n  https: {},\n  originPullProtocol: {},\n  tagKey: [],\n};\n\nconst WAFFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'origin',\n    enDescriptor: 'origin',\n    cnDescriptor: '主源站',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'domain',\n    enDescriptor: 'domain',\n    cnDescriptor: '域名',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'resourceId',\n    enDescriptor: 'resourceId',\n    cnDescriptor: '域名id',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'status',\n    enDescriptor: 'status',\n    cnDescriptor: '域名状态',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'online', value: 'online' },\n      { text: 'offline', value: 'offline' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'serviceType',\n    enDescriptor: 'serviceType',\n    cnDescriptor: '业务类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'web', value: 'web' },\n      { text: 'download', value: 'download' },\n      { text: 'media', value: 'media' },\n    ],\n  },\n  {\n    key: 'projectId',\n    enDescriptor: 'projectId',\n    cnDescriptor: '项目ID',\n    link: '',\n    type: 'inputNumberMulti',\n  },\n  {\n    key: 'domainType',\n    enDescriptor: 'domainType',\n    cnDescriptor: '主源站类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '自有源', value: 'cname' },\n      { text: 'cos接入', value: 'cos' },\n    ],\n  },\n  {\n    key: 'fullUrlCache',\n    enDescriptor: 'fullUrlCache',\n    cnDescriptor: '全路径缓存',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '打开', value: 'on' },\n      { text: '关闭', value: 'off' },\n    ],\n  },\n  {\n    key: 'https',\n    enDescriptor: 'https',\n    cnDescriptor: '是否配置https',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'on', value: 'on' },\n      { text: 'off', value: 'off' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'originPullProtocol',\n    enDescriptor: 'originPullProtocol',\n    cnDescriptor: '回源协议类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'http', value: 'http' },\n      { text: 'follow', value: 'follow' },\n      { text: 'https', value: 'https' },\n    ],\n  },\n  {\n    key: 'tagKey',\n    enDescriptor: 'tagKey',\n    cnDescriptor: '标签键',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/228/41118',\n  namespace,\n  fieldDescriptor: WAFFilterFieldsDescriptor,\n};\nconst WAF_STATE = {\n  region: 'ap-guangzhou',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'Domain',\n  queries: WAFFilterFields,\n};\nconst regionSupported = [\n  { value: 'ap-beijing' },\n  { value: 'ap-chengdu' },\n  { value: 'ap-chongqing' },\n  { value: 'ap-guangzhou' },\n  { value: 'ap-hongkong' },\n  { value: 'ap-nanjing' },\n  { value: 'ap-shanghai' },\n  { value: 'ap-shanghai-fsi' },\n  { value: 'ap-seoul' },\n  { value: 'ap-singapore' },\n];\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\n\nconst WAFInstanceAliasList = ['Domain', 'ProjectId'];\n\nconst WAFInvalidDemensions = {\n  projectId: 'ProjectId',\n  domain: 'Domain',\n};\nconst templateQueryIdMap = {\n  instance: 'Domain',\n};\nexport default WAF_STATE;\nexport {\n  WAFFilterFieldsDescriptor,\n  templateQueryIdMap,\n  WAFInstanceAliasList,\n  WAFInvalidDemensions,\n  namespace,\n  regionSupported,\n  queryEditorName,\n  queryEditorConfig,\n  GetInstanceQueryParams as WAFGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\nconst InstanceTypes = [\n  { text: '主实例', value: 1 },\n  { text: '备灾实例', value: 2 },\n  { text: '只读实例', value: 3 },\n];\n\nconst Status = [\n  { text: '创建中', value: 0 },\n  { text: '运行中', value: 1 },\n  { text: '隔离中', value: 4 },\n  { text: '已隔离', value: 5 },\n];\n\nconst PayTypes = [\n  { text: '包年包月', value: 0 },\n  { text: '小时计费', value: 1 },\n];\n\nconst TaskStatus = [\n  { text: '没有任务', value: 0 },\n  { text: '升级中', value: 1 },\n  { text: '数据导入中', value: 2 },\n  { text: '开放Slave中', value: 3 },\n  { text: '外网访问开通中', value: 4 },\n  { text: '批量操作执行中', value: 5 },\n  { text: '回档中', value: 6 },\n  { text: '外网访问关闭中', value: 7 },\n  { text: '密码修改中', value: 8 },\n  { text: '实例名修改中', value: 9 },\n  { text: '重启中', value: 10 },\n  { text: '自建迁移中', value: 12 },\n  { text: '删除库表中', value: 13 },\n  { text: '灾备实例创建同步中', value: 14 },\n  { text: '升级待切换', value: 15 },\n  { text: '升级切换中', value: 16 },\n  { text: '升级切换完成', value: 17 },\n];\n\nconst EngineVersions = [\n  { text: '5.1', value: '5.1' },\n  { text: '5.5', value: '5.5' },\n  { text: '5.6', value: '5.6' },\n  { text: '5.7', value: '5.7' },\n];\n\nconst OrderBy = [\n  { text: 'InstanceId', value: 'InstanceId' },\n  { text: 'InstanceName', value: 'InstanceName' },\n  { text: 'CreateTime', value: 'CreateTime' },\n  { text: 'DeadlineTime', value: 'DeadlineTime' },\n];\n\nconst OrderDirection = [\n  { text: 'ASC', value: 'ASC' },\n  { text: 'DESC', value: 'DESC' },\n];\n\nconst InitFlag = [\n  { text: '未初始化', value: 0 },\n  { text: '初始化', value: 1 },\n];\n\nconst CdbErrors = [\n  { text: '未锁定', value: 0 },\n  { text: '锁定', value: 1 },\n];\n\nconst CDBFields = {\n  ProjectId: '',\n  InstanceTypes: {},\n  Vips: [],\n  Status: {},\n  Offset: 0,\n  Limit: 20,\n  SecurityGroupId: '',\n  PayTypes: {},\n  InstanceNames: [],\n  TaskStatus: {},\n  EngineVersions: {},\n  VpcIds: [],\n  ZoneIds: [],\n  SubnetIds: [],\n  CdbErrors: {},\n  OrderBy: {},\n  OrderDirection: {},\n  InstanceIds: [],\n  InitFlag: {},\n};\n\nconst CDBFieldsDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceNames',\n    enDescriptor: 'Instance Name',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'InstanceIds',\n    enDescriptor: 'Instance ID',\n    cnDescriptor: '实例ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'ZoneIds',\n    enDescriptor: 'Zone ID',\n    cnDescriptor: '可用区的ID',\n    link: '',\n    type: 'dropdownmulti',\n  },\n  {\n    key: 'InstanceTypes',\n    enDescriptor: 'Instance Type',\n    cnDescriptor: '实例类型',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: InstanceTypes,\n  },\n  {\n    key: 'EngineVersions',\n    enDescriptor: 'Engine Version',\n    cnDescriptor: '实例数据库引擎版本',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: EngineVersions,\n  },\n  {\n    key: 'TaskStatus',\n    enDescriptor: 'Task Status',\n    cnDescriptor: '实例任务',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: TaskStatus,\n  },\n  {\n    key: 'InitFlag',\n    enDescriptor: 'Init Flag',\n    cnDescriptor: '实例初始化状态',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: InitFlag,\n  },\n  {\n    key: 'PayTypes',\n    enDescriptor: 'Pay Type',\n    cnDescriptor: '付费类型',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: PayTypes,\n  },\n  {\n    key: 'CdbErrors',\n    enDescriptor: 'CDB Errors',\n    cnDescriptor: '实例锁定标记',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: CdbErrors,\n  },\n  {\n    key: 'Status',\n    enDescriptor: 'Status',\n    cnDescriptor: '实例状态',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: Status,\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderBy,\n  },\n  {\n    key: 'OrderDirection',\n    enDescriptor: 'Order Direction',\n    cnDescriptor: '排序方式',\n    link: '',\n    type: 'select',\n    list: OrderDirection,\n  },\n  {\n    key: 'Vips',\n    enDescriptor: 'Vip',\n    cnDescriptor: '实例内网IP地址',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'VpcIds',\n    enDescriptor: 'Vpc ID',\n    cnDescriptor: '私有网络ID',\n    link: 'https://cloud.tencent.com/document/api/215/15778',\n    type: 'inputmulti',\n  },\n  {\n    key: 'SubnetIds',\n    enDescriptor: 'Subnet ID',\n    cnDescriptor: '子网ID',\n    link: 'https://cloud.tencent.com/document/api/215/15784',\n    type: 'inputmulti',\n  },\n  {\n    key: 'ProjectId',\n    enDescriptor: 'Project ID',\n    cnDescriptor: '项目ID',\n    link: 'https://cloud.tencent.com/document/product/378/4400',\n    type: 'input',\n  },\n  { \n    key: 'SecurityGroupId',\n    enDescriptor: 'Security Group ID',\n    cnDescriptor: '安全组ID',\n    link: 'https://cloud.tencent.com/document/api/236/15854',\n    type: 'input',\n  },\n];\n\nconst CDB_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: { ...CDBFields },\n};\n\nconst CDBInstanceAliasList = ['InstanceId', 'InstanceName', 'Vip'];\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\nfunction isValidMetric(metricObj: any = {}) {\n  const dimension = _.get(metricObj, 'Dimensions[0].Dimensions');\n  return (\n    dimension.length === 2 &&\n    ((_.indexOf(dimension, 'instanceid') !== -1 && _.indexOf(dimension, 'insttype') !== -1) ||\n      (_.indexOf(dimension, 'InstanceId') !== -1 && _.indexOf(dimension, 'InstanceType') !== -1))\n  );\n}\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = item.Dimensions.map((i) => CDBInvalidDemensions[i] || i);\n  });\n  return metricTmp;\n}\nconst CDBInvalidDemensions = {\n  instanceid: 'InstanceId',\n  insttype: 'InstanceType',\n  region: 'Region',\n};\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\nexport default CDB_STATE;\n\nexport {\n  CDBFieldsDescriptor,\n  CDBInstanceAliasList,\n  templateQueryIdMap,\n  CDBInvalidDemensions,\n  isValidMetric,\n  modifyDimensons,\n  GetInstanceQueryParams as CDBGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/CES';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'cesQuery';\n\nconst CESInvalidDemensions = {\n  uInstanceId: 'InstanceId',\n};\n\nconst CESInstanceAliasList = ['InstanceId', 'InstanceName'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是类型\nconst CESFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  InstanceIds: [],\n  InstanceNames: [],\n  OrderByKey: {},\n  OrderByType: {},\n  IpList: [],\n};\n\nconst CESFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceIds',\n    enDescriptor: 'InstanceIds',\n    cnDescriptor: '集群实例ID列表',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'InstanceNames',\n    enDescriptor: 'InstanceNames',\n    cnDescriptor: '集群实例名称列表',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'OrderByKey',\n    enDescriptor: 'OrderByKey',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '实例ID', value: 1 },\n      { text: '实例名称', value: 2 },\n      { text: '可用区', value: 3 },\n      { text: '创建时间', value: 4 },\n    ],\n  },\n  {\n    key: 'OrderByType',\n    enDescriptor: 'OrderByType',\n    cnDescriptor: '排序方式',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '升序', value: 0 },\n      { text: '降序', value: 1 },\n    ],\n  },\n  {\n    key: 'IpList',\n    enDescriptor: 'IpList',\n    cnDescriptor: '私有网络vip列表',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/845/30631',\n  namespace,\n  fieldDescriptor: CESFilterFieldsDescriptor,\n};\n\nconst CES_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: CESFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\nexport default CES_STATE;\nexport {\n  CESFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CESInstanceAliasList,\n  CESInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as CESGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/DC';\nconst queryEditorName = 'dcQuery';\n\nconst DCFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  DirectConnectIds: [],\n};\n\nconst DCFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'DirectConnectIds',\n    enDescriptor: 'DirectConnectIds',\n    cnDescriptor: '物理专线 ID',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/216/34826',\n  namespace,\n  fieldDescriptor: DCFilterFieldsDescriptor,\n};\n\nconst DC_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'DirectConnectId',\n  queries: DCFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\n\nconst DCInstanceAliasList = ['DirectConnectId', 'DirectConnectName'];\n\nconst templateQueryIdMap = {\n  instance: 'DirectConnectId',\n};\n\nconst DCInvalidDemensions = {\n  directConnectId: 'DirectConnectId',\n  directconnectid: 'DirectConnectId',\n};\nfunction modifyDimensons(metricItem) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['directConnectId'];\n  });\n  return metricTmp;\n}\nexport default DC_STATE;\nexport {\n  DCFilterFieldsDescriptor,\n  templateQueryIdMap,\n  DCInstanceAliasList,\n  DCInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  GetInstanceQueryParams as DCGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/DCG';\nconst queryEditorName = 'dcgQuery';\n\nconst DCGInvalidDemensions = {\n  directConnectGatewayId: 'DirectConnectGatewayId',\n};\n\nconst DCGInstanceAliasList = ['DirectConnectGatewayId', 'DirectConnectGatewayName'];\n\nconst templateQueryIdMap = {\n  instance: 'DirectConnectGatewayId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst DCGFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  'direct-connect-gateway-id': [],\n  'direct-connect-gateway-name': [],\n  'direct-connect-gateway-ip': [],\n  'gateway-type': {},\n  'network-type': {},\n  'ccn-id': [],\n  'vpc-id': [],\n};\n\nconst DCGFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'direct-connect-gateway-id',\n    enDescriptor: 'direct-connect-gateway-id',\n    cnDescriptor: '专线网关唯一ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'direct-connect-gateway-name',\n    enDescriptor: 'direct-connect-gateway-name',\n    cnDescriptor: '专线网关名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'direct-connect-gateway-ip',\n    enDescriptor: 'direct-connect-gateway-ip',\n    cnDescriptor: '专线网关IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'gateway-type',\n    enDescriptor: 'gateway-type',\n    cnDescriptor: '网关类型',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '普通型', value: 'NORMAL' },\n      { text: 'NAT型', value: 'NAT' },\n    ],\n  },\n  {\n    key: 'network-type',\n    enDescriptor: 'network-type',\n    cnDescriptor: '网络类型',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '私有网络类型', value: 'VPC' },\n      { text: '云联网类型', value: 'CCN' },\n    ],\n  },\n  {\n    key: 'ccn-id',\n    enDescriptor: 'ccn-id',\n    cnDescriptor: '专线网关所在云联网ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'vpc-id',\n    cnDescriptor: '专线网关所在私有网络ID',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/30644',\n  namespace,\n  fieldDescriptor: DCGFilterFieldsDescriptor,\n};\n\nconst DCG_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'DirectConnectGatewayId',\n  queries: DCGFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nexport default DCG_STATE;\nexport {\n  DCGFilterFieldsDescriptor,\n  templateQueryIdMap,\n  DCGInstanceAliasList,\n  DCGInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  GetInstanceQueryParams as DCGGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/DCX';\nconst queryEditorName = 'dcxQuery';\n\nconst DCXFilterFields = {\n  'direct-connect-tunnel-name': [],\n  'direct-connect-tunnel-id': [],\n  'direct-connect-id': [],\n};\n\nconst DCXFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'direct-connect-tunnel-name',\n    enDescriptor: 'direct-connect-tunnel-name',\n    cnDescriptor: '专用通道名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'direct-connect-tunnel-id',\n    enDescriptor: 'direct-connect-tunnel-id',\n    cnDescriptor: '专用通道实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'direct-connect-id',\n    enDescriptor: 'direct-connect-id',\n    cnDescriptor: '物理专线实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/216/19819',\n  namespace,\n  fieldDescriptor: DCXFilterFieldsDescriptor,\n};\n\nconst DCX_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'DirectConnectTunnelId',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    ...DCXFilterFields,\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\n\nconst DCXInstanceAliasList = ['DirectConnectTunnelId', 'DirectConnectTunnelName'];\n\nconst templateQueryIdMap = {\n  instance: 'DirectConnectTunnelId',\n};\n\nconst DCXInvalidDemensions = {\n  directconnectconnid: 'DirectConnectTunnelId',\n  directConnectConnId: 'DirectConnectTunnelId',\n};\nfunction modifyDimensons(metricItem) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['directConnectConnId'];\n  });\n  return metricTmp;\n}\nexport default DCX_STATE;\nexport {\n  DCXFilterFieldsDescriptor,\n  templateQueryIdMap,\n  DCXInstanceAliasList,\n  DCXInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  GetInstanceQueryParams as DCXGetInstanceQueryParams,\n};\n","import * as _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/ECM_LB';\nconst queryEditorName = 'ecmLbQuery';\n\nconst ECMLBInvalidDemensions = {\n  vip: 'LoadBalancerVips',\n};\n\nconst ECMLBInstanceAliasList = ['LoadBalancerId', 'LoadBalancerName'];\n\nconst templateQueryIdMap = {\n  instance: 'LoadBalancerId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst ECMLBFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  LoadBalancerIds: [],\n  LoadBalancerName: [],\n  LoadBalancerVips: [],\n  BackendPrivateIps: [],\n  VpcId: '',\n};\n\nconst ECMLBFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'LoadBalancerIds',\n    enDescriptor: 'LoadBalancerIds',\n    cnDescriptor: '负载均衡器ID数组',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerName',\n    enDescriptor: 'LoadBalancerName',\n    cnDescriptor: '负载均衡器名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerVips',\n    enDescriptor: 'LoadBalancerVips',\n    cnDescriptor: '负载均衡获得的公网IP地址',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'BackendPrivateIps',\n    enDescriptor: 'BackendPrivateIps',\n    cnDescriptor: '绑定的后端服务的内网 IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'VpcId',\n    cnDescriptor: '实例所属私有网络唯一ID',\n    link: '',\n    type: 'input',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/1108/48459',\n  namespace,\n  fieldDescriptor: ECMLBFilterFieldsDescriptor,\n};\n\nconst ECM_STATE = {\n  region: 'ap-guangzhou',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'LoadBalancerId',\n  queries: ECMLBFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\n// function isValidMetric(metricObj: any = {}) {\n//   const dimension = _.get(metricObj, 'Dimensions[0].Dimensions');\n//   // console.log('dimension', dimension, dimension.length === 1 && _.indexOf(dimension, 'diskId') !== -1);\n//   return dimension.length === 1 &&( _.indexOf(dimension, 'UUID') !== -1 || _.indexOf(dimension, 'uuid') !== -1);\n// }\n\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    // item.Dimensions = ['UUID'];\n  });\n  return metricTmp;\n}\nexport default ECM_STATE;\nexport {\n  ECMLBFilterFieldsDescriptor,\n  templateQueryIdMap,\n  ECMLBInstanceAliasList,\n  ECMLBInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  GetInstanceQueryParams as ECMLBGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nconst InstanceTypes = [\n  { text: '所有实例', value: 0 },\n  { text: '正式实例', value: 1 },\n  { text: '临时实例', value: 2 },\n  { text: '只读实例', value: 3 },\n  { text: '正式，只读，灾备实例', value: -1 },\n];\n\nconst ClusterTypes = [\n  { text: '副本集实例', value: 0 },\n  { text: '分片实例', value: 1 },\n  { text: '所有实例', value: -1 },\n];\n\nconst Status = [\n  { text: '待初始化', value: 0 },\n  { text: '流程执行中', value: 1 },\n  { text: '实例有效', value: 2 },\n  { text: '实例已过期', value: -2 },\n];\n\nconst PayMode = [\n  { text: '按量计费', value: 0 },\n  { text: '包年包月', value: 1 },\n  { text: '按量包年包月计费', value: -1 },\n];\n\nconst OrderBy = [\n  { text: 'ProjectId', value: 'ProjectId' },\n  { text: 'InstanceName', value: 'InstanceName' },\n  { text: 'CreateTime', value: 'CreateTime' },\n];\n\nconst OrderByType = [\n  { text: '升序', value: 'ASC' },\n  { text: '降序', value: 'DESC' },\n];\n\nconst MongoDBFields = {\n  InstanceIds: [],\n  InstanceType: {},\n  ClusterType: {},\n  Status: [],\n  VpcId: '',\n  SubnetId: '',\n  PayMode: {},\n  Limit: 20,\n  Offset: 0,\n  OrderBy: '',\n  OrderByType: '',\n};\n\nconst MONGODBFieldsDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceIds',\n    enDescriptor: 'InstancesIds',\n    cnDescriptor: '实例名称',\n    type: 'inputmulti',\n  },\n  {\n    key: 'InstanceType',\n    enDescriptor: 'InstanceType',\n    cnDescriptor: '实例类型',\n    link: '',\n    type: 'select',\n    list: InstanceTypes,\n  },\n  {\n    key: 'ClusterType',\n    enDescriptor: 'ClusterType',\n    cnDescriptor: '集群类型',\n    link: '',\n    type: 'select',\n    list: ClusterTypes,\n  },\n  {\n    key: 'Status',\n    enDescriptor: 'Status',\n    cnDescriptor: '实例状态',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: Status,\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'VpcId',\n    cnDescriptor: '私有网络的ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SubnetId',\n    enDescriptor: 'SubnetId',\n    cnDescriptor: '私有网络的子网ID，基础网络则不传该参数。入参设置该参数的同时，必须设置相应的VpcId',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'PayMode',\n    enDescriptor: 'PayMode',\n    cnDescriptor: '付费类型',\n    link: '',\n    type: 'select',\n    list: PayMode,\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderBy,\n  },\n  {\n    key: 'OrderByType',\n    enDescriptor: 'OrderByType',\n    cnDescriptor: '排序方式',\n    link: '',\n    type: 'select',\n    list: OrderByType,\n  },\n];\n\nconst MONGODB_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: { ...MongoDBFields },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        // select 单选\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\nconst MONGODBInstanceAliasList = ['InstanceId', 'InstanceName'];\n\nconst MONGODBInvalidDemensions = {\n  target: 'InstanceId',\n};\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n  replica: 'ReplicaSetId',\n};\n\nconst queryMonitorExtraConfg = {\n  Replica: {\n    dim_KeyInStorage: 'ReplicaSets',\n    dim_KeyInTarget: 'replica',\n    dim_KeyInMap: 'ReplicaSetId',\n    dim_KeyInIns: 'ReplicaSetId',\n  },\n  Node: {\n    dim_KeyInStorage: 'ReplicaNodeSets',\n    dim_KeyInTarget: 'node',\n    dim_KeyInMap: 'NodeId',\n    dim_KeyInIns: 'NodeId',\n  },\n};\nexport default MONGODB_STATE;\nexport {\n  MONGODBFieldsDescriptor,\n  MONGODBInvalidDemensions,\n  MONGODBInstanceAliasList,\n  templateQueryIdMap,\n  queryMonitorExtraConfg,\n  GetInstanceQueryParams as MONGODBGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/QAAP';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'qaapQuery';\n\nconst QAAPInvalidDemensions = {\n  channelId: 'InstanceId',\n};\n\nconst QAAPInstanceAliasList = ['InstanceId'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst QAAPFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  ProjectId: [],\n  AccessRegion: [],\n  RealServerRegion: [],\n  GroupId: [],\n};\n\nconst QAAPFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'ProjectId',\n    enDescriptor: 'ProjectId',\n    cnDescriptor: '项目ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'AccessRegion',\n    enDescriptor: 'AccessRegion',\n    cnDescriptor: '接入地域',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'RealServerRegion',\n    enDescriptor: 'RealServerRegion',\n    cnDescriptor: '源站地域',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'GroupId',\n    enDescriptor: 'GroupId',\n    cnDescriptor: '通道组ID',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/608/36963',\n  namespace,\n  fieldDescriptor: QAAPFilterFieldsDescriptor,\n};\n\nconst QAAP_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: QAAPFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  // metricTmp.Dimensions.forEach((item) => {\n  //   item.Dimensions = ['netDetectId'];\n  // });\n  return metricTmp;\n}\nexport default QAAP_STATE;\nexport {\n  QAAPFilterFieldsDescriptor,\n  templateQueryIdMap,\n  QAAPInstanceAliasList,\n  QAAPInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  GetInstanceQueryParams as QAAPGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/TCAPLUS';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'tcaplusQuery';\n\nconst TCAPLUSInvalidDemensions = {\n  // TableInstanceId: 'TableInstanceId',\n  // ClusterId: 'ClusterId',\n};\n\n// 需和文件名对应\nconst TCAPLUSInstanceAliasList = ['TableInstanceId', 'TableName'];\n\nconst templateQueryIdMap = {\n  instance: 'TableInstanceId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是类型\nconst TCAPLUSFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  ClusterId: '',\n  TableGroupIds: [],\n\n  TableName: '',\n  TableInstanceId: '',\n  TableIdlType: {},\n  TableType: {},\n  ListElementNum: null,\n  ReservedVolume: null,\n  ReservedReadQps: null,\n  ReservedWriteQps: null,\n  Memo: '',\n  FileName: '',\n  FileExtType: '',\n  FileSize: null,\n  FileContent: '',\n};\n\nconst TCAPLUSFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'ClusterId',\n    enDescriptor: 'ClusterId',\n    cnDescriptor: '表格所属集群ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'TableGroupIds',\n    enDescriptor: 'TableGroupIds',\n    cnDescriptor: '表格组ID列表',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'TableName',\n    enDescriptor: 'TableName',\n    cnDescriptor: '表格名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'TableInstanceId',\n    enDescriptor: 'TableInstanceId',\n    cnDescriptor: '表实例ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'TableIdlType',\n    enDescriptor: 'TableIdlType',\n    cnDescriptor: '表格描述语言类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'PROTO', value: 'PROTO' },\n      { text: 'TDR', value: 'TDR' },\n    ],\n  },\n  {\n    key: 'TableType',\n    enDescriptor: 'TableType',\n    cnDescriptor: '表格数据结构类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'GENERIC', value: 'GENERIC' },\n      { text: 'LIST', value: 'LIST' },\n    ],\n  },\n  {\n    key: 'ListElementNum',\n    enDescriptor: 'ListElementNum',\n    cnDescriptor: 'LIST表元素个数',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'ReservedVolume',\n    enDescriptor: 'ReservedVolume',\n    cnDescriptor: '表格预留容量（GB）',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'ReservedReadQps',\n    enDescriptor: 'ReservedReadQps',\n    cnDescriptor: '表格预留读CU',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'ReservedWriteQps',\n    enDescriptor: 'ReservedWriteQps',\n    cnDescriptor: '表格预留写CU',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'Memo',\n    enDescriptor: 'Memo',\n    cnDescriptor: '表格备注信息',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'FileName',\n    enDescriptor: 'FileName',\n    cnDescriptor: 'Key回档文件名，回档专用',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'FileExtType',\n    enDescriptor: 'FileExtType',\n    cnDescriptor: 'Key回档文件扩展名，回档专用',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'FileSize',\n    enDescriptor: 'FileSize',\n    cnDescriptor: 'Key回档文件大小，回档专用',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'FileContent',\n    enDescriptor: 'FileContent',\n    cnDescriptor: 'Key回档文件内容，回档专用',\n    link: '',\n    type: 'input',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/596/39664',\n  namespace,\n  fieldDescriptor: TCAPLUSFilterFieldsDescriptor,\n};\n\nconst TCAPLUS_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'TableInstanceId',\n  queries: TCAPLUSFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  params.Limit = _.get(queries, 'Limit', 20) || 20;\n  params.Offset = _.get(queries, 'Offset', 0) || 0;\n  params.ClusterId = _.get(queries, 'ClusterId', '') || '';\n  params.TableGroupIds = _.get(queries, 'TableGroupIds', []) || [];\n  queries = _.omit(queries, ['Offset', 'Limit', 'TableGroupIds', 'ClusterId']);\n  const SelectedTables: any[] = [];\n  _.forEach(queries, (item: any, key) => {\n    if (_.isArray(item)) {\n      item = _.compact(item);\n      if (item.length > 0) {\n        SelectedTables[key] = _.uniq(item);\n      }\n    } else if (_.isObject(item)) {\n      if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n        SelectedTables[key] = _.get(item, 'value');\n      }\n    } else if (_.isNumber(item) || !_.isEmpty(item)) {\n      SelectedTables[key] = item;\n    }\n  });\n  params.SelectedTables = SelectedTables;\n  return params;\n}\n// 和其他产品的展示保持一致\nconst regonsMap = {\n  'ap-beijing': '华北地区(北京)',\n  'ap-guangzhou': '华南地区(广州)',\n  'ap-hongkong': '港澳台地区(中国香港)',\n  'ap-seoul': '亚太东北(首尔)',\n  'ap-shanghai': '华东地区(上海)',\n  'ap-singapore': '亚太东南(新加坡)',\n  'ap-tokyo': '亚太东北(东京)',\n  'eu-frankfurt': '欧洲地区(法兰克福)',\n  'na-ashburn': '美国东部(弗吉尼亚)',\n  'na-siliconvalley': '美国西部(硅谷)',\n};\nexport default TCAPLUS_STATE;\nexport {\n  TCAPLUSFilterFieldsDescriptor,\n  templateQueryIdMap,\n  TCAPLUSInstanceAliasList,\n  TCAPLUSInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  regonsMap,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as TCAPLUSGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/VBC';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'vbcQuery';\n\nconst VBCInvalidDemensions = {\n  // CcnId: 'CcnId',\n};\n\n// 需和文件名对应\nconst VBCInstanceAliasList = ['CcnId', 'CcnName'];\n\nconst templateQueryIdMap = {\n  instance: 'CcnId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst VBCFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  'ccn-id': [],\n  'ccn-name': [],\n  'ccn-description': [],\n  state: {},\n};\n\nconst VBCFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'ccn-id',\n    enDescriptor: 'ccn-id',\n    cnDescriptor: 'CCN实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'ccn-name',\n    enDescriptor: 'ccn-name',\n    cnDescriptor: 'CCN名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'ccn-description',\n    enDescriptor: 'ccn-description',\n    cnDescriptor: 'CCN描述',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'state',\n    enDescriptor: 'state',\n    cnDescriptor: '实例状态',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '隔离中', value: 'ISOLATED' },\n      { text: '运行中', value: 'AVAILABLE' },\n    ],\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/19199',\n  namespace,\n  fieldDescriptor: VBCFilterFieldsDescriptor,\n};\n\nconst VBC_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'CcnId',\n  DRegion: '',\n  SRegion: '',\n  queries: VBCFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\n// const regionSupported = [\n//   { text: '华北地区(北京)', value: 'ap-beijing' },\n//   { text: '西南地区(成都)', value: 'ap-chengdu' },\n//   { text: '西南地区(重庆)', value: 'ap-chongqing' },\n//   { text: '华南地区(广州)', value: 'ap-guangzhou' },\n//   { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n//   { text: '亚太南部(孟买)', value: 'ap-mumbai' },\n//   { text: '华东地区(南京)', value: 'ap-nanjing' },\n//   { text: '华东地区(上海)', value: 'ap-shanghai' },\n//   { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },\n//   { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n//   { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n//   { text: '亚太东北(东京)', value: 'ap-tokyo' },\n//   { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },\n//   { text: '美国东部(弗吉尼亚)', value: 'na-ashburn' },\n//   { text: '美国西部(硅谷)', value: 'na-siliconvalley' },\n//   { text: '北美地区(多伦多)', value: 'na-toronto' },\n// ];\nexport default VBC_STATE;\nexport {\n  VBCFilterFieldsDescriptor,\n  templateQueryIdMap,\n  VBCInstanceAliasList,\n  VBCInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  // regionSupported,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as VBCGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/VPNGW';\nconst queryEditorName = 'vpngwQuery';\n\nconst VPNGWInvalidDemensions = {\n  vpnGwId: 'VpnGatewayId',\n};\n\nconst VPNGWInstanceAliasList = ['VpnGatewayId', 'VpnGatewayName'];\n\nconst templateQueryIdMap = {\n  instance: 'VpnGatewayId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst VPNGWFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  'vpc-id': [],\n  'vpn-gateway-id': [],\n  'vpn-gateway-name': [],\n  type: {},\n  'public-ip-address': [],\n  'renew-flag': {},\n  zone: [],\n};\n\nconst VPNGWFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'vpc-id',\n    cnDescriptor: 'VPC实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpn-gateway-id',\n    enDescriptor: 'vpn-gateway-id',\n    cnDescriptor: 'VPN实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpn-gateway-name',\n    enDescriptor: 'vpn-gateway-name',\n    cnDescriptor: 'VPN实例名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'type',\n    enDescriptor: 'type',\n    cnDescriptor: 'VPN网关类型',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: 'IPSEC', value: 'IPSEC' },\n      { text: 'SSL', value: 'SSL' },\n    ],\n  },\n  {\n    key: 'public-ip-address',\n    enDescriptor: 'public-ip-address',\n    cnDescriptor: '公网IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'renew-flag',\n    enDescriptor: 'renew-flag',\n    cnDescriptor: '网关续费类型',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '手动续费', value: 'NOTIFY_AND_MANUAL_RENEW' },\n      { text: '自动续费', value: 'NOTIFY_AND_AUTO_RENEW' },\n    ],\n  },\n  {\n    key: 'zone',\n    enDescriptor: 'zone',\n    cnDescriptor: 'VPN所在可用区',\n    link: '',\n    type: 'dropdownMulti',\n  },\n];\n\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/17514',\n  namespace,\n  fieldDescriptor: VPNGWFilterFieldsDescriptor,\n};\n\nconst VPNGW_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'VpnGatewayId',\n  queries: VPNGWFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nexport default VPNGW_STATE;\nexport {\n  VPNGWFilterFieldsDescriptor,\n  templateQueryIdMap,\n  VPNGWInstanceAliasList,\n  VPNGWInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  GetInstanceQueryParams as VPNGWGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/VPNX';\nconst queryEditorName = 'vpnxQuery';\n\nconst VPNXInvalidDemensions = {\n  vpnConnId: 'VpnConnectionId',\n};\n\nconst VPNXInstanceAliasList = ['VpnConnectionId', 'VpnConnectionName'];\n\nconst templateQueryIdMap = {\n  instance: 'VpnConnectionId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst VPNXFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  'vpc-id': [],\n  'vpn-gateway-id': [],\n  'customer-gateway-id': [],\n  'vpn-connection-name': [],\n  'vpn-connection-id': [],\n};\n\nconst VPNXFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'vpc-id',\n    cnDescriptor: 'VPC实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpn-gateway-id',\n    enDescriptor: 'vpn-gateway-id',\n    cnDescriptor: 'VPN实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'customer-gateway-id ',\n    enDescriptor: 'customer-gateway-id ',\n    cnDescriptor: '对端网关实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpn-connection-name',\n    enDescriptor: 'vpn-connection-name',\n    cnDescriptor: '通道名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpn-connection-id',\n    enDescriptor: 'vpn-connection-id',\n    cnDescriptor: '通道实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/17515',\n  namespace,\n  fieldDescriptor: VPNXFilterFieldsDescriptor,\n};\n\nconst VPNX_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'VpnConnectionId',\n  queries: VPNXFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nexport default VPNX_STATE;\nexport {\n  VPNXFilterFieldsDescriptor,\n  templateQueryIdMap,\n  VPNXInstanceAliasList,\n  VPNXInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  GetInstanceQueryParams as VPNXGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\nconst LighthouseStateType = [\n  { text: '创建中', value: 'PENDING' },\n  { text: '创建失败', value: 'LAUNCH_FAILED' },\n  { text: '运行中', value: 'RUNNING' },\n  { text: '关机', value: 'STOPPED' },\n  { text: '开机中', value: 'STARTING' },\n  { text: '关机中', value: 'STOPPING' },\n  { text: '重启中', value: 'REBOOTING' },\n  { text: '停止待销毁', value: 'SHUTDOWN' },\n  { text: '销毁中', value: 'TERMINATING' },\n];\n\nconst LighthouseFilterFields = {\n  zone: [],\n  'instance-name': [],\n  'instance-state': {},\n  'private-ip-address': [],\n  'public-ip-address': [],\n};\n\nconst LighthouseFilterFieldsDescriptor = [\n  {\n    key: 'instance-name',\n    enDescriptor: 'Instance Name',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'private-ip-address',\n    enDescriptor: 'Private IP Address',\n    cnDescriptor: '实例主网卡的内网IP',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'public-ip-address',\n    enDescriptor: 'Public IP Address',\n    cnDescriptor: '实例主网卡的公网IP',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'zone',\n    enDescriptor: 'Zone',\n    cnDescriptor: '可用区',\n    link: '',\n    type: 'dropdownmulti',\n  },\n  {\n    key: 'instance-state',\n    enDescriptor: 'Instance State',\n    cnDescriptor: '实例状态',\n    link: '',\n    type: 'select',\n    list: LighthouseStateType,\n  },\n];\n\nconst LIGHTHOUSE_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    instanceIdsChecked: false,\n    filtersChecked: false,\n    InstanceIds: [''],\n    Filters: { ...LighthouseFilterFields },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    if (queries.instanceIdsChecked) {\n      if (_.isArray(queries.InstanceIds)) {\n        const InstanceIds = _.compact(queries.InstanceIds);\n        if (_.uniq(InstanceIds).length > 0) {\n          params.InstanceIds = _.uniq(InstanceIds).slice(0, 100);\n        }\n      }\n    } else if (queries.filtersChecked) {\n      const Filters: any[] = [];\n      _.forEach(queries.Filters, (item: any, key) => {\n        if (Filters.length > 9) {\n          return;\n        }\n        if (_.isArray(item)) {\n          item = _.compact(item);\n          if (item.length > 0) {\n            Filters.push({ Name: key, Values: _.uniq(item).slice(0, 5) });\n          }\n        } else if (_.isObject(item)) {\n          if (!_.isEmpty(_.get(item, 'value', []))) {\n            Filters.push({ Name: key, Values: _.get(item, 'value', []).slice(0, 5) });\n          }\n        }\n      });\n      if (Filters.length > 0) {\n        params.Filters = Filters;\n      }\n    }\n  }\n  return params;\n}\n\nconst LIGHTHOUSEInstanceAliasList = ['InstanceId', 'InstanceName', 'PrivateIpAddresses', 'PublicIpAddresses'];\n\nconst LighthouseInvalidDemensions = {\n  instanceid: 'InstanceId',\n};\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\n\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['InstanceId'];\n  });\n  return metricTmp;\n}\n\nexport default LIGHTHOUSE_STATE;\n\nexport {\n  LighthouseFilterFieldsDescriptor,\n  LIGHTHOUSEInstanceAliasList,\n  LighthouseInvalidDemensions,\n  templateQueryIdMap,\n  modifyDimensons,\n  GetInstanceQueryParams as LIGHTHOUSEGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\nexport const CFSQueryDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'FileSystemId',\n    enDescriptor: 'File System Id',\n    cnDescriptor: '文件系统 ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'VpcId',\n    cnDescriptor: '私有网络（VPC） ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SubnetId',\n    enDescriptor: 'SubnetId',\n    cnDescriptor: '子网 ID',\n    link: '',\n    type: 'input',\n  },\n];\n\nconst CFS_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'FileSystemId',\n  version: '',\n  queries: {\n    Offset: 0,\n    Limit: 20,\n    FileSystemId: '',\n    VpcId: '',\n    SubnetId: '',\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\nconst CFSInstanceAliasList = ['FileSystemId', 'FsName'];\n\n// 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key\nconst CFSInvalidDemensions = {\n  // functionName: 'FunctionName',\n  // namespace: 'Namespace'\n};\n\nconst regionSupported = [\n  { value: 'ap-beijing' },\n  { value: 'ap-chengdu' },\n  { value: 'ap-chongqing' },\n  { value: 'ap-guangzhou' },\n  { value: 'ap-hongkong' },\n  { value: 'ap-mumbai' },\n  { value: 'ap-nanjing' },\n  { value: 'ap-seoul' },\n  { value: 'ap-shanghai' },\n  { value: 'ap-shanghai-fsi' },\n  { value: 'ap-shenzhen-fsi' },\n  { value: 'ap-singapore' },\n  { value: 'ap-tokyo' },\n  { value: 'eu-frankfurt' },\n  { value: 'na-siliconvalley' },\n  { value: 'na-toronto' },\n];\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\nexport default CFS_STATE;\nexport {\n  CFSInstanceAliasList,\n  CFSInvalidDemensions,\n  templateQueryIdMap,\n  regionSupported,\n  GetInstanceQueryParams as CFSGetInstanceQueryParams,\n};\n\n// monitor监控数据默认支持的维度\n// export const SCFDefaultDimensionList = ['functionName', 'namespace', 'version'];\n","import _ from 'lodash';\nimport { FildDescriptorType } from '../_base/types';\n\nexport const InstanceQueryDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为10，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 50,\n  },\n  {\n    key: 'QueueName',\n    enDescriptor: 'QueueName',\n    cnDescriptor: '精确匹配QueueName',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'TagKey',\n    enDescriptor: 'TagKey',\n    cnDescriptor: '标签搜索',\n    link: '',\n    type: 'input',\n  },\n];\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\n// 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key\nexport const InvalidDemensions = {\n  queueId: 'QueueId',\n  queueName: 'QueueName',\n};\n\nexport const templateQueryIdMap = {\n  instance: 'QueueName',\n};\n\n// 与名称挂钩的变量\nconst InstanceAliasList = ['QueueName', 'QueueId'];\nexport { InstanceAliasList, GetInstanceQueryParams };\n\n// 界面状态模型，default\nexport default {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'QueueName',\n  queries: {\n    Offset: 0,\n    Limit: 20,\n    QueueName: '',\n    TagKey: '',\n  },\n};\n","import _ from 'lodash';\nconst instanceChargeTypes = [\n  { text: '预付费', value: 'PREPAID' },\n  { text: '后付费', value: 'POSTPAID_BY_HOUR' },\n  { text: 'CDH付费', value: 'CDHPAID' },\n];\n\nconst CVMFilterFields = {\n  zone: [],\n  'project-id': [],\n  'host-id': [],\n  'vpc-id': [],\n  'subnet-id': [],\n  'instance-id': [],\n  'security-group-id': [],\n  'instance-name': [],\n  'instance-charge-type': {},\n  'private-ip-address': [],\n  'public-ip-address': [],\n  'tag-key': [],\n};\n\nconst CVMFilterFieldsDescriptor = [\n  {\n    key: 'zone',\n    enDescriptor: 'Zone',\n    cnDescriptor: '可用区',\n    link: '',\n    type: 'dropdownmulti',\n  },\n  {\n    key: 'project-id',\n    enDescriptor: 'Project ID',\n    cnDescriptor: '项目ID',\n    link: 'https://cloud.tencent.com/document/api/378/4400',\n    type: 'inputNumbermulti',\n  },\n  {\n    key: 'host-id',\n    enDescriptor: 'CDH ID',\n    cnDescriptor: 'CDH ID',\n    link: 'https://cloud.tencent.com/document/product/416/19730',\n    type: 'inputmulti',\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'VPC ID',\n    cnDescriptor: 'VPC ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'subnet-id',\n    enDescriptor: 'Subnet ID',\n    cnDescriptor: '子网ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'instance-id',\n    enDescriptor: 'Instance ID',\n    cnDescriptor: '实例ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'security-group-id',\n    enDescriptor: 'Security Group ID',\n    cnDescriptor: '安全组ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'instance-name',\n    enDescriptor: 'Instance Name',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'tag-key',\n    enDescriptor: '标签简',\n    cnDescriptor: '标签简',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'instance-charge-type',\n    enDescriptor: 'Instance Charge Type',\n    cnDescriptor: '实例计费模式',\n    link: '',\n    type: 'select',\n    list: instanceChargeTypes,\n  },\n  {\n    key: 'private-ip-address',\n    enDescriptor: 'Private IP Address',\n    cnDescriptor: '实例主网卡的内网IP',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'public-ip-address',\n    enDescriptor: 'Public IP Address',\n    cnDescriptor: '实例主网卡的公网IP，包含实例创建时自动分配的IP和实例创建后手动绑定的弹性IP',\n    link: '',\n    type: 'inputmulti',\n  },\n];\n\nconst CVM_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    instanceIdsChecked: false,\n    filtersChecked: false,\n    InstanceIds: [''],\n    Filters: { ...CVMFilterFields },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    if (queries.instanceIdsChecked) {\n      if (_.isArray(queries.InstanceIds)) {\n        const InstanceIds = _.compact(queries.InstanceIds);\n        if (_.uniq(InstanceIds).length > 0) {\n          params.InstanceIds = _.uniq(InstanceIds).slice(0, 100);\n        }\n      }\n    } else if (queries.filtersChecked) {\n      const Filters: any[] = [];\n      _.forEach(queries.Filters, (item: any, key) => {\n        if (Filters.length > 9) {\n          return;\n        }\n        if (_.isArray(item)) {\n          item = _.compact(item);\n          if (item.length > 0) {\n            Filters.push({ Name: key, Values: _.uniq(item).slice(0, 5) });\n          }\n        } else if (_.isObject(item)) {\n          if (!_.isEmpty(_.get(item, 'value', []))) {\n            Filters.push({ Name: key, Values: _.get(item, 'value', []).slice(0, 5) });\n          }\n        }\n      });\n      if (Filters.length > 0) {\n        params.Filters = Filters;\n      }\n    }\n  }\n  return params;\n}\n\nconst CVMInstanceAliasList = ['InstanceId', 'InstanceName', 'PrivateIpAddresses', 'PublicIpAddresses'];\n\nconst CVMValidMetricsT = [\n  'CPUUsage',\n  'CpuLoadavg',\n  'Cpuloadavg5m',\n  'Cpuloadavg15m',\n  'BaseCpuUsage',\n  'GpuMemTotal',\n  'GpuMemUsage',\n  'GpuMemUsed',\n  'GpuPowDraw',\n  'GpuPowLimit',\n  'GpuPowUsage',\n  'GpuTemp',\n  'GpuUtil',\n  'LanOuttraffic',\n  'LanIntraffic',\n  'LanOutpkg',\n  'LanInpkg',\n  'WanOuttraffic',\n  'WanIntraffic',\n  'WanOutpkg',\n  'WanInpkg',\n  'AccOuttraffic',\n  'TcpCurrEstab',\n  'TimeOffset',\n  'MemUsed',\n  'MemUsage',\n  'CvmDiskUsage',\n  'BaseCpuUsage',\n  'VmDiskReadIops',\n];\n// const CVMInvalidDemensions = {\n//   'vm_uuid': 'InstanceId',\n//   'vmUuid': 'InstanceId',\n// };\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\nfunction isValidMetric(metric) {\n  const CVMValidMetrics = _.map(CVMValidMetricsT, _.toUpper);\n  return _.indexOf(CVMValidMetrics, _.toUpper(metric.MetricName)) !== -1;\n}\nfunction modifyDimensons(metricItem) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['InstanceId'];\n  });\n  return metricTmp;\n}\nexport default CVM_STATE;\nexport {\n  CVMFilterFieldsDescriptor,\n  CVMInstanceAliasList,\n  isValidMetric,\n  modifyDimensons,\n  templateQueryIdMap,\n  // CVMInvalidDemensions,\n  GetInstanceQueryParams as CVMGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nconst namespace = 'QCE/PCX';\n\nconst PCXFields = {\n  limit: 20,\n  offset: 0,\n  peeringConnectionId: '',\n  peeringConnectionName: '',\n  vpcId: '',\n  state: undefined,\n};\n\nconst PCX_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'peeringConnectionId',\n  queries: { ...PCXFields },\n};\n\nconst StateTypes = [\n  { text: '申请中', value: 0 },\n  { text: '连接成功', value: 1 },\n  { text: '已过期', value: 2 },\n  { text: '对端已拒绝', value: 3 },\n  { text: '对端已删除', value: 4 },\n];\n\nconst PCXFieldsDescriptor = [\n  {\n    key: 'offset',\n    enDescriptor: 'offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'limit',\n    enDescriptor: 'limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为50',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 50,\n  },\n  {\n    key: 'peeringConnectionId',\n    enDescriptor: 'PeeringConnection Id',\n    cnDescriptor: '私有网络对等连接 ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'peeringConnectionName',\n    enDescriptor: 'PeeringConnection Name',\n    cnDescriptor: '对等连接名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'vpcId',\n    enDescriptor: 'vpcId',\n    cnDescriptor: '发起方私有网络 ID 值',\n    link: 'https://cloud.tencent.com/document/api/215/1372',\n    type: 'dropdown',\n  },\n  {\n    key: 'state',\n    enDescriptor: 'state',\n    cnDescriptor: '连接状态',\n    link: '',\n    type: 'select',\n    list: StateTypes,\n  },\n];\n\nconst PCXInstanceAliasList = ['peeringConnectionId', 'peeringConnectionName'];\n\nconst templateQueryIdMap = {\n  instance: 'peeringConnectionId',\n};\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.limit = _.get(queries, 'limit', 20) || 20;\n    params.offset = _.get(queries, 'offset', 0) || 0;\n    queries = _.omit(queries, ['offset', 'limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\nexport default PCX_STATE;\n\nexport {\n  PCXInstanceAliasList,\n  PCXFieldsDescriptor,\n  templateQueryIdMap,\n  namespace,\n  GetInstanceQueryParams as PCXGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nconst BillingMode = [\n  { text: '按量计费', value: 'postpaid' },\n  { text: '包年包月', value: 'prepaid' },\n];\n\nconst AutoRenew = [\n  { text: '手动续费', value: 0 },\n  { text: '自动续费', value: 1 },\n  { text: '明确不自动续费', value: 2 },\n];\n\nconst Status = [\n  { text: '待初始化', value: 0 },\n  { text: '流程执行中', value: 1 },\n  { text: '运行中', value: 2 },\n  { text: '已隔离', value: -2 },\n  { text: '待删除', value: -3 },\n];\n\nconst TypeVersion = [\n  { text: '单机版', value: 1 },\n  { text: '主从版', value: 2 },\n  { text: '集群版', value: 3 },\n];\n\nconst OrderBy = [\n  { text: 'projectId', value: 'projectId' },\n  { text: 'instancename', value: 'instancename' },\n  { text: 'createtime', value: 'createtime' },\n  { text: 'type', value: 'type' },\n  { text: 'curDeadline', value: 'curDeadline' },\n];\n\nconst OrderType = [\n  { text: '升序', value: 0 },\n  { text: '降序', value: 1 },\n];\nconst Type = [\n  { text: 'Redis老集群版', value: 1 },\n  { text: 'Redis 2.8主从版', value: 2 },\n  { text: 'CKV主从版', value: 3 },\n  { text: 'CKV集群版', value: 4 },\n  { text: 'Redis 2.8单机版', value: 5 },\n  { text: 'Redis 4.0主从版', value: 6 },\n  { text: 'Redis 4.0集群版', value: 7 },\n  { text: 'Redis5.0主从版', value: 8 },\n  { text: 'Redis5.0集群版', value: 9 },\n];\n\nconst RedisFields = {\n  InstanceId: '',\n  OrderBy: '',\n  OrderType: null,\n  VpcIds: [],\n  SubnetIds: [],\n  ProjectIds: [],\n  SearchKey: '',\n  InstanceName: '',\n  UniqVpcIds: [],\n  UniqSubnetIds: [],\n  Status: [],\n  TypeVersion: null,\n  EngineName: '',\n  AutoRenew: null,\n  BillingMode: '',\n  Type: null,\n};\n\nconst RedisFieldsDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceId',\n    enDescriptor: 'InstancesId',\n    cnDescriptor: '实例id',\n    type: 'input',\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderBy,\n  },\n  {\n    key: 'OrderType',\n    enDescriptor: 'OrderType',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderType,\n  },\n  {\n    key: 'VpcIds',\n    enDescriptor: 'VpcIds',\n    cnDescriptor: '私有网络ID数组，数组下标从0开始，如果不传则默认选择基础网络，如：47525',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'SubnetIds',\n    enDescriptor: 'SubnetIds',\n    cnDescriptor: '子网ID数组，数组下标从0开始，如：56854',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'ProjectIds',\n    enDescriptor: 'ProjectIds',\n    cnDescriptor: '项目ID 组成的数组',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'SearchKey',\n    enDescriptor: 'SearchKey',\n    cnDescriptor: '查找实例的ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'InstanceName',\n    enDescriptor: 'InstanceName',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'UniqVpcIds',\n    enDescriptor: 'UniqVpcIds',\n    cnDescriptor: '私有网络ID数组，数组下标从0开始，如果不传则默认选择基础网络，如：vpc-sad23jfdfk',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'UniqSubnetIds',\n    enDescriptor: 'UniqSubnetIds',\n    cnDescriptor: '子网ID数组，数组下标从0开始，如：subnet-fdj24n34j2',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'Status',\n    enDescriptor: 'Status',\n    cnDescriptor: '实例状态',\n    multiple: true,\n    type: 'select',\n    list: Status,\n  },\n  {\n    key: 'TypeVersion',\n    enDescriptor: 'TypeVersion',\n    cnDescriptor: '类型版本',\n    link: '',\n    type: 'select',\n    list: TypeVersion,\n  },\n  {\n    key: 'EngineName',\n    enDescriptor: 'EngineName',\n    cnDescriptor: '引擎信息：Redis-2.8，Redis-4.0，CKV',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'AutoRenew',\n    enDescriptor: 'AutoRenew',\n    cnDescriptor: '续费模式',\n    multiple: true,\n    type: 'select',\n    list: AutoRenew,\n  },\n  {\n    key: 'BillingMode',\n    enDescriptor: 'BillingMode',\n    cnDescriptor: '计费模式：postpaid-按量计费；prepaid-包年包月',\n    link: '',\n    type: 'select',\n    list: BillingMode,\n  },\n  {\n    key: 'Type',\n    enDescriptor: 'Type',\n    cnDescriptor: '实例类型',\n    link: '',\n    type: 'select',\n    list: Type,\n  },\n];\n\nconst REDIS_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: { ...RedisFields },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        // select 单选\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\nfunction isValidMetric(metricObj: any = {}) {\n  const dimension = _.get(metricObj, 'Dimensions[0].Dimensions');\n  return dimension.length === 1 && _.indexOf(dimension, 'instanceid') !== -1;\n}\n\nconst REDISInstanceAliasList = ['InstanceId', 'InstanceName', 'WanIp'];\n\nconst RedisInvalidDemensions = {\n  redis_uuid: 'InstanceId',\n  instanceid: 'InstanceId',\n};\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\nexport default REDIS_STATE;\nexport {\n  RedisFieldsDescriptor,\n  RedisInvalidDemensions,\n  templateQueryIdMap,\n  REDISInstanceAliasList,\n  isValidMetric,\n  GetInstanceQueryParams as REDISGetInstanceQueryParams,\n};\n","import { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst ApplicationType = [\n  { text: '所有', value: '' },\n  { text: '容器应用', value: 'C' },\n  { text: '普通应用/虚拟机应用', value: 'V' },\n];\n\nconst MicroserviceType = [\n  { text: '所有', value: '' },\n  { text: '普通应用', value: 'N' },\n  { text: 'Mesh应用', value: 'M' },\n  { text: '微服务网关应用', value: 'G' },\n  { text: '原生应用', value: 'NATIVE' },\n];\n\nconst ApplicationResourceType = [\n  { text: '默认资源类型', value: 'DEF' },\n  { text: '微服务网关资源', value: 'GW' },\n];\n\nconst TSFFieldsDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'SearchWord',\n    enDescriptor: 'SearchWord',\n    cnDescriptor: '搜索关键字',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'ApplicationIdList',\n    enDescriptor: 'ApplicationIdList',\n    cnDescriptor: '应用ID 组成的数组',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'ApplicationType',\n    enDescriptor: 'ApplicationType',\n    cnDescriptor: '应用类型',\n    link: '',\n    type: 'select',\n    list: ApplicationType,\n  },\n  {\n    key: 'MicroserviceType',\n    enDescriptor: 'MicroserviceType',\n    cnDescriptor: '应用的微服务类型',\n    link: '',\n    type: 'select',\n    list: MicroserviceType,\n  },\n  {\n    key: 'ApplicationResourceTypeList',\n    enDescriptor: 'ApplicationResourceTypeList',\n    cnDescriptor: '应用资源类型数组',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: ApplicationResourceType,\n  },\n];\n\nconst TSF_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'ApplicationId',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    SearchWord: '',\n    OrderBy: '',\n    OrderType: null,\n    ApplicationType: '',\n    MicroserviceType: '',\n    ApplicationResourceTypeList: [],\n    ApplicationIdList: [],\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\n\nconst TSFInstanceAliasList = ['ApplicationId', 'ApplicationName'];\n\nconst TSFInvalidDemensions = {\n  applicationid: 'ApplicationId',\n};\n\nconst templateQueryIdMap = {\n  instance: 'ApplicationId',\n};\n\nexport default TSF_STATE;\nexport {\n  TSFInvalidDemensions,\n  templateQueryIdMap,\n  TSFInstanceAliasList,\n  TSFFieldsDescriptor,\n  GetInstanceQueryParams as TSFGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nconst networkTypes = [\n  { text: 'BGP', value: 'BGP' },\n  { text: 'SINGLEISP', value: 'SINGLEISP' },\n  { text: 'ANYCAST', value: 'ANYCAST' },\n];\n\nconst chargeTypes = [\n  { text: 'top5计费', value: 'TOP5_POSTPAID_BY_MONTH' },\n  { text: '月95计费', value: 'PERCENT95_POSTPAID_BY_MONTH' },\n];\nconst BWPFilterFields = {\n  'bandwidth-package_id': [],\n  'bandwidth-package-name': [],\n  'network-type': [],\n  'charge-type': [],\n};\n\nconst BWPFilterFieldsDescriptor = [\n  {\n    key: 'bandwidth-package_id',\n    enDescriptor: 'BandwidthPackage Id',\n    cnDescriptor: '带宽包ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'bandwidth-package-name',\n    enDescriptor: 'BandwidthPackage Name',\n    cnDescriptor: '带宽包名称',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'network-type',\n    enDescriptor: 'network type',\n    cnDescriptor: '带宽包类型',\n    link: '',\n    type: 'select',\n    list: networkTypes,\n  },\n  {\n    key: 'charge-type',\n    enDescriptor: 'charge type',\n    cnDescriptor: '带宽包计费类型',\n    link: '',\n    type: 'select',\n    list: chargeTypes,\n  },\n];\n\nconst BWP_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'BandwidthPackageId',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    instanceIdsChecked: false,\n    filtersChecked: false,\n    BandwidthPackageIds: [''],\n    Filters: { ...BWPFilterFields },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    if (queries.instanceIdsChecked) {\n      if (_.isArray(queries.BandwidthPackageIds)) {\n        const BandwidthPackageIds = _.compact(queries.BandwidthPackageIds);\n        if (_.uniq(BandwidthPackageIds).length > 0) {\n          params.BandwidthPackageIds = _.uniq(BandwidthPackageIds).slice(0, 100);\n        }\n      }\n    } else if (queries.filtersChecked) {\n      const Filters: any[] = [];\n      _.forEach(queries.Filters, (item: any, key) => {\n        if (Filters.length > 9) {\n          return;\n        }\n        if (_.isArray(item)) {\n          item = _.compact(item);\n          if (item.length > 0) {\n            Filters.push({ Name: key, Values: _.uniq(item).slice(0, 5) });\n          }\n        } else if (_.isObject(item)) {\n          if (!_.isEmpty(_.get(item, 'value', []))) {\n            Filters.push({ Name: key, Values: _.get(item, 'value', []).slice(0, 5) });\n          }\n        }\n      });\n      if (Filters.length > 0) {\n        params.Filters = Filters;\n      }\n    }\n  }\n  return params;\n}\n\nconst BWPInstanceAliasList = ['BandwidthPackageId', 'BandwidthPackageName'];\n\nconst templateQueryIdMap = {\n  instance: 'BandwidthPackageId',\n};\n\nconst BWPInvalidDemensions = {\n  bandwidthPackageId: 'BandwidthPackageId',\n};\nexport default BWP_STATE;\nexport {\n  BWPFilterFieldsDescriptor,\n  templateQueryIdMap,\n  BWPInstanceAliasList,\n  BWPInvalidDemensions,\n  GetInstanceQueryParams as BWPGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nconst CDNFilterFields = {\n  origin: [],\n  domain: [],\n  resourceId: [],\n  status: {},\n  serviceType: {},\n  projectId: [],\n  domainType: {},\n  fullUrlCache: {},\n  https: {},\n  originPullProtocol: {},\n  tagKey: [],\n};\n\nconst CDNFilterFieldsDescriptor = [\n  {\n    key: 'origin',\n    enDescriptor: 'origin',\n    cnDescriptor: '主源站',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'domain',\n    enDescriptor: 'domain',\n    cnDescriptor: '域名',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'resourceId',\n    enDescriptor: 'resourceId',\n    cnDescriptor: '域名id',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'status',\n    enDescriptor: 'status',\n    cnDescriptor: '域名状态',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'online', value: 'online' },\n      { text: 'offline', value: 'offline' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'serviceType',\n    enDescriptor: 'serviceType',\n    cnDescriptor: '业务类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'web', value: 'web' },\n      { text: 'download', value: 'download' },\n      { text: 'media', value: 'media' },\n    ],\n  },\n  {\n    key: 'projectId',\n    enDescriptor: 'projectId',\n    cnDescriptor: '项目ID',\n    link: '',\n    type: 'inputNumbermulti',\n  },\n  {\n    key: 'domainType',\n    enDescriptor: 'domainType',\n    cnDescriptor: '主源站类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '自有源', value: 'cname' },\n      { text: 'cos接入', value: 'cos' },\n    ],\n  },\n  {\n    key: 'fullUrlCache',\n    enDescriptor: 'fullUrlCache',\n    cnDescriptor: '全路径缓存',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '打开', value: 'on' },\n      { text: '关闭', value: 'off' },\n    ],\n  },\n  {\n    key: 'https',\n    enDescriptor: 'https',\n    cnDescriptor: '是否配置https',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'on', value: 'on' },\n      { text: 'off', value: 'off' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'originPullProtocol',\n    enDescriptor: 'originPullProtocol',\n    cnDescriptor: '回源协议类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'http', value: 'http' },\n      { text: 'follow', value: 'follow' },\n      { text: 'https', value: 'https' },\n    ],\n  },\n  {\n    key: 'tagKey',\n    enDescriptor: 'tagKey',\n    cnDescriptor: '标签键',\n    link: '',\n    type: 'inputmulti',\n  },\n];\n\nconst CDN_STATE = {\n  region: 'ap-guangzhou',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'Domain',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    Filters: { ...CDNFilterFields },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    const Filters: any[] = [];\n    _.forEach(queries.Filters, (item: any, key) => {\n      // console.log('item', item, queries);\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          Filters.push({ Name: key, Value: _.uniq(item).slice(0, 5) });\n        }\n      } else if (_.isObject(item)) {\n        if (!_.isEmpty(_.get(item, 'value', []))) {\n          Filters.push({ Name: key, Value: _.get(item, 'value', []).slice(0, 5) });\n        }\n      }\n    });\n    if (Filters.length > 0) {\n      params.Filters = Filters;\n    }\n  }\n  return params;\n}\n\nconst CDNInstanceAliasList = ['Domain', 'ProjectId'];\n\nconst CDNInvalidDemensions = {\n  projectId: 'ProjectId',\n  domain: 'Domain',\n};\nconst templateQueryIdMap = {\n  instance: 'Domain',\n};\nexport default CDN_STATE;\nexport {\n  CDNFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CDNInstanceAliasList,\n  CDNInvalidDemensions,\n  GetInstanceQueryParams as CDNGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\n// export const LBQueryDescriptor = [{\n//   key: 'Offset',\n//   enDescriptor: 'Offset',\n//   cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n//   link: '',\n//   type: 'inputnumber',\n//   min: 0,\n// },\n// {\n//   key: 'Limit',\n//   enDescriptor: 'Limit',\n//   cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为2000',\n//   link: '',\n//   type: 'inputnumber',\n//   min: 1,\n//   max: 2000,\n// },\n// {\n//   key: 'AddressId',\n//   enDescriptor: 'Address Id',\n//   cnDescriptor: '标识 EIP 的唯一 ID ',\n//   link: '',\n//   type: 'inputmulti',\n// }\n// ];\n\nexport const LBFilterDescriptor = [\n  {\n    key: 'address-id',\n    enDescriptor: 'Address ID',\n    cnDescriptor: 'EIP 的唯一 ID ',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'address-name',\n    enDescriptor: 'Address Name',\n    cnDescriptor: 'EIP 名称 ',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'address-ip',\n    enDescriptor: 'Address IP',\n    cnDescriptor: 'EIP 的 IP 地址 ',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'address-status',\n    enDescriptor: 'Address Status',\n    cnDescriptor: 'EIP 的状态',\n    link: '',\n    type: 'select',\n    list: [\n      { value: 'CREATING', text: 'CREATING' },\n      { value: 'BINDING', text: 'BINDING' },\n      { value: 'BIND', text: 'BIND' },\n      { value: 'UNBINDING', text: 'UNBINDING' },\n      { value: 'UNBIND', text: 'UNBIND' },\n      { value: 'OFFLINING', text: 'OFFLINING' },\n      { value: 'BIND_ENI', text: 'BIND_ENI' },\n    ],\n  },\n  {\n    key: 'instance-id',\n    enDescriptor: 'Instance ID',\n    cnDescriptor: '实例ID ',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'private-ip-address',\n    enDescriptor: 'Private IP Address',\n    cnDescriptor: 'EIP 绑定的内网 IP',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'network-interface-id',\n    enDescriptor: 'Network Interface ID',\n    cnDescriptor: 'EIP 绑定的弹性网卡 ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'is-arrears',\n    enDescriptor: 'Arrears',\n    cnDescriptor: 'EIP 是否欠费 ',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '正常', value: 'FALSE' },\n      { text: '欠费', value: 'TRUE' },\n    ],\n  },\n];\n\n// const LBFilterFields = {\n//   \"address-id\": [],\n//   \"address-name\": [],\n//   \"address-ip\": [],\n//   \"address-status \": [],\n//   \"instance-id \": [],\n//   \"private-ip-address\": [],\n//   \"network-interface-id \": [],\n//   \"is-arrears \": [],\n// };\n\nconst InstanceKey = 'AddressIds';\nconst LB_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'AddressId',\n  version: '',\n  queries: {\n    Offset: 0,\n    Limit: 20,\n    [InstanceKey]: [''],\n    Filters: {\n      'address-id': [],\n      'address-name': [],\n      'address-ip': [],\n      'address-status ': [],\n      'instance-id ': [],\n      'private-ip-address': [],\n      'network-interface-id ': [],\n      'is-arrears ': [],\n    },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    if (queries.instanceIdsChecked) {\n      if (_.isArray(queries[InstanceKey])) {\n        const InstanceIds = _.compact(queries[InstanceKey]);\n        if (_.uniq(InstanceIds).length > 0) {\n          params[InstanceKey] = _.uniq(InstanceIds).slice(0, 100);\n        }\n      }\n    } else if (queries.filtersChecked) {\n      const Filters: any[] = [];\n      _.forEach(queries.Filters, (item: any, key) => {\n        if (Filters.length > 9) {\n          return;\n        }\n        if (_.isArray(item)) {\n          item = _.compact(item);\n          if (item.length > 0) {\n            Filters.push({ Name: key, Values: _.uniq(item).slice(0, 5) });\n          }\n        } else if (_.isObject(item)) {\n          if (!_.isEmpty(_.get(item, 'value', []))) {\n            Filters.push({ Name: key, Values: _.get(item, 'value', []).slice(0, 5) });\n          }\n        }\n      });\n      if (Filters.length > 0) {\n        params.Filters = Filters;\n      }\n    }\n  }\n  return params;\n}\n\nconst LBInstanceAliasList = ['AddressId', 'AddressName', 'AddressIp'];\n\n// 维度eip对应于实例中的哪个字段？映射\nconst LBInvalidDemensions = {\n  eip: 'AddressIp',\n};\n\nconst templateQueryIdMap = {\n  instance: 'AddressId',\n};\n// 从monitor维度到LB实例对应字段的映射\n// export const metric2Instance = {\n//   functionName: 'FunctionName',\n//   namespace: 'Namespace'\n// };\n\nexport default LB_STATE;\nexport {\n  LBInstanceAliasList,\n  LBInvalidDemensions,\n  templateQueryIdMap,\n  GetInstanceQueryParams as LBGetInstanceQueryParams,\n};\n\n// monitor监控数据默认支持的维度\n// export const LBDefaultDimensionList = ['functionName', 'namespace', 'version'];\n","import _ from 'lodash';\n\nconst NATGATEWAYInstanceAliasList = ['NatGatewayId', 'NatGatewayName'];\n\nconst NATGatewayFilterFields = {\n  'nat-gateway-id': [],\n  'nat-gateway-name': [],\n  'vpc-id': [],\n};\n\nconst NATGatewayFilterFieldsDescriptor = [\n  {\n    key: 'nat-gateway-id',\n    enDescriptor: 'NatGateway ID',\n    cnDescriptor: 'NAT网关统一 ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'nat-gateway-name',\n    enDescriptor: 'NatGateway Name',\n    cnDescriptor: 'NatGateway Name',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'VPC ID',\n    cnDescriptor: '私有网络 ID',\n    link: '',\n    type: 'inputmulti',\n  },\n];\n\nconst NATGATEWAY_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'NatGatewayId',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    instanceIdsChecked: false,\n    filtersChecked: false,\n    NatGatewayIds: [''],\n    Filters: { ...NATGatewayFilterFields },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    if (queries.instanceIdsChecked) {\n      if (_.isArray(queries.NatGatewayIds)) {\n        const NatGatewayIds = _.compact(queries.NatGatewayIds);\n        if (_.uniq(NatGatewayIds).length > 0) {\n          params.InstanceIds = _.uniq(NatGatewayIds).slice(0, 100);\n        }\n      }\n    } else if (queries.filtersChecked) {\n      const Filters: any[] = [];\n      _.forEach(queries.Filters, (item: any, key) => {\n        if (Filters.length > 9) {\n          return;\n        }\n        if (_.isArray(item)) {\n          item = _.compact(item);\n          if (item.length > 0) {\n            Filters.push({ Name: key, Values: _.uniq(item).slice(0, 5) });\n          }\n        } else if (_.isObject(item)) {\n          if (!_.isEmpty(_.get(item, 'value', []))) {\n            Filters.push({ Name: key, Values: _.get(item, 'value', []).slice(0, 5) });\n          }\n        }\n      });\n      if (Filters.length > 0) {\n        params.Filters = Filters;\n      }\n    }\n  }\n  return params;\n}\n\nconst templateQueryIdMap = {\n  instance: 'NatGatewayId',\n};\n\nconst NATInvalidDemensions = {\n  natId: 'NatGatewayId',\n};\n\nexport default NATGATEWAY_STATE;\nexport {\n  NATGatewayFilterFieldsDescriptor,\n  NATGATEWAYInstanceAliasList,\n  templateQueryIdMap,\n  NATInvalidDemensions,\n  GetInstanceQueryParams as NATGATEWAYGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nconst CDNFilterFields = {\n  origin: [],\n  domain: [],\n  resourceId: [],\n  status: [],\n  serviceType: [],\n  projectId: [],\n  domainType: [],\n  fullUrlCache: [],\n  https: [],\n  originPullProtocol: [],\n  tagKey: [],\n};\n\nconst OVCDNFilterFieldsDescriptor = [\n  {\n    key: 'origin',\n    enDescriptor: 'origin',\n    cnDescriptor: '主源站',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'domain',\n    enDescriptor: 'domain',\n    cnDescriptor: '域名',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'resourceId',\n    enDescriptor: 'resourceId',\n    cnDescriptor: '域名id',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'status',\n    enDescriptor: 'status',\n    cnDescriptor: '域名状态',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'online', value: 'online' },\n      { text: 'offline', value: 'offline' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'serviceType',\n    enDescriptor: 'serviceType',\n    cnDescriptor: '业务类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'web', value: 'web' },\n      { text: 'download', value: 'download' },\n      { text: 'media', value: 'media' },\n    ],\n  },\n  {\n    key: 'projectId',\n    enDescriptor: 'projectId',\n    cnDescriptor: '项目ID',\n    link: '',\n    type: 'inputNumbermulti',\n  },\n  {\n    key: 'domainType',\n    enDescriptor: 'domainType',\n    cnDescriptor: '主源站类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '自有源', value: 'cname' },\n      { text: 'cos接入', value: 'cos' },\n    ],\n  },\n  {\n    key: 'fullUrlCache',\n    enDescriptor: 'fullUrlCache',\n    cnDescriptor: '全路径缓存',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '打开', value: 'on' },\n      { text: '关闭', value: 'off' },\n    ],\n  },\n  {\n    key: 'https',\n    enDescriptor: 'https',\n    cnDescriptor: '是否配置https',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'on', value: 'on' },\n      { text: 'off', value: 'off' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'originPullProtocol',\n    enDescriptor: 'originPullProtocol',\n    cnDescriptor: '回源协议类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'http', value: 'http' },\n      { text: 'follow', value: 'follow' },\n      { text: 'https', value: 'https' },\n    ],\n  },\n  {\n    key: 'tagKey',\n    enDescriptor: 'tagKey',\n    cnDescriptor: '标签键',\n    link: '',\n    type: 'inputmulti',\n  },\n];\n\nconst OVCDN_STATE = {\n  region: 'ap-guangzhou',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'Domain',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    Filters: { ...CDNFilterFields },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    const Filters: any[] = [];\n    _.forEach(queries.Filters, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          Filters.push({ Name: key, Value: _.uniq(item).slice(0, 5) });\n        }\n      } else if (_.isObject(item)) {\n        if (!_.isEmpty(_.get(item, 'value', []))) {\n          Filters.push({ Name: key, Value: _.get(item, 'value', []).slice(0, 5) });\n        }\n      }\n    });\n    if (Filters.length > 0) {\n      params.Filters = Filters;\n    }\n  }\n  return params;\n}\n\nconst OVCDNInstanceAliasList = ['Domain', 'ResourceId'];\n\nconst OVCDNInvalidDemensions = {\n  projectId: 'ProjectId',\n  domain: 'Domain',\n};\nconst templateQueryIdMap = {\n  instance: 'Domain',\n};\nexport default OVCDN_STATE;\nexport {\n  OVCDNFilterFieldsDescriptor,\n  OVCDNInstanceAliasList,\n  templateQueryIdMap,\n  OVCDNInvalidDemensions,\n  GetInstanceQueryParams as OVCDNGetInstanceQueryParams,\n};\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__67__;","module.exports = __WEBPACK_EXTERNAL_MODULE__68__;","import _ from 'lodash';\n\nconst TKE_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'ClusterId',\n  conditions: [],\n  groupBys: '',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    instanceIdsChecked: false,\n    filtersChecked: true,\n    ClusterIds: [''],\n    Filters: {\n      ClusterName: [],\n      ClusterType: [],\n      ClusterStatus: [],\n      'tag-key': [],\n    },\n  },\n};\n\nconst TKEFilterFieldsDescriptor = [\n  {\n    key: 'ClusterName',\n    enDescriptor: 'Cluster Name',\n    cnDescriptor: '集群名',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'ClusterType',\n    enDescriptor: 'Cluster Type',\n    cnDescriptor: '集群类型',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'ClusterStatus',\n    enDescriptor: 'Cluster Status',\n    cnDescriptor: '集群状态',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'Tags',\n    enDescriptor: 'Tags',\n    cnDescriptor: '标签键值对',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'VPC',\n    cnDescriptor: 'VPC',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'tag-key',\n    enDescriptor: 'Tag Key',\n    cnDescriptor: '标签键',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'tag-value',\n    enDescriptor: 'Tag Value',\n    cnDescriptor: '标签值',\n    link: '',\n    type: 'inputmulti',\n  },\n];\n\nconst TKEInstanceAliasList = ['ClusterId', 'ClusterName'];\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    if (queries.instanceIdsChecked) {\n      if (_.isArray(queries.InstanceIds)) {\n        const InstanceIds = _.compact(queries.InstanceIds);\n        if (_.uniq(InstanceIds).length > 0) {\n          params.InstanceIds = _.uniq(InstanceIds).slice(0, 100);\n        }\n      }\n    } else if (queries.filtersChecked) {\n      const Filters: any[] = [];\n      _.forEach(queries.Filters, (item: any, key) => {\n        if (Filters.length > 9) {\n          return;\n        }\n        if (_.isArray(item)) {\n          item = _.compact(item);\n          if (item.length > 0) {\n            Filters.push({ Name: key, Values: _.uniq(item).slice(0, 5) });\n          }\n        } else if (_.isObject(item)) {\n          if (!_.isEmpty(_.get(item, 'value', []))) {\n            Filters.push({ Name: key, Values: _.get(item, 'value', []).slice(0, 5) });\n          }\n        }\n      });\n      if (Filters.length > 0) {\n        params.Filters = Filters;\n      }\n    }\n  }\n  return params;\n}\n\nexport default TKE_STATE;\n\nexport { TKEFilterFieldsDescriptor, TKEInstanceAliasList, GetInstanceQueryParams as TKEGetInstanceQueryParams };\n","import {\n  APIGATEWAYInstanceAliasList,\n  APIGATEWAYInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  regionSupported,\n  keyInStorage,\n  queryMonitorExtraConfg,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport instanceStorage from '../../common/datasourceStorage';\nimport { t } from '../../../locale';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = APIGATEWAYInstanceAliasList;\n  InvalidDimensions = APIGATEWAYInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'apigateway',\n    action: 'DescribeServicesStatus',\n    responseField: 'ServiceSet',\n  };\n\n  keyInStorage = keyInStorage;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // getFilterDropdown({ field }) {\n  //   return super.getRegions();\n  // }\n  getRegions() {\n    return Promise.resolve(regionSupported.map(({ value }) => ({ value, text: t(value) })));\n  }\n  async getEnvironmentNameList(params: any) {\n    const { region, instanceId } = params;\n    const serviceInfo = GetServiceAPIInfo(region, this.service);\n\n    // 从分页数据，获取全量数据\n    const res = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action: 'DescribeServiceEnvironmentList' }\n        );\n      },\n      {\n        ServiceId: instanceId,\n      },\n      'EnvironmentList'\n    );\n    const [rs] = res;\n    return rs;\n  }\n  async fetchMetricData(action: string, region: string, instance: any) {\n    // console.log({ action, region, instance });\n    if (action === 'DescribeServiceEnvironmentList') {\n      const rs = await this.getEnvironmentNameList({ region, instanceId: instance[this.templateQueryIdMap.instance] });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[this.templateQueryIdMap.environmentName];\n        return {\n          text: o[this.templateQueryIdMap.environmentName],\n          value: o[this.templateQueryIdMap.environmentName],\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage.environmentList, rs);\n      return result;\n    }\n    return [];\n  }\n}\n","import {\n  BMINTRALBInstanceAliasList,\n  BMINTRALBInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  isValidMetric,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { t } from '../../../locale';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = BMINTRALBInstanceAliasList;\n  InvalidDimensions = BMINTRALBInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'bmlb',\n    action: 'DescribeLoadBalancers',\n    responseField: 'LoadBalancerSet',\n    interceptor: {\n      request: (params) => ({\n        ...params,\n        LoadBalancerType: 'internal',\n      }), // 设置一些请求参数的 默认值\n    },\n  };\n  RegionMap = {};\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // 重写getRegion\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/bm',\n      },\n      'bm',\n      { action: 'DescribeRegions', region: 'ap-guangzhou' }\n    ).then((response) => {\n      // 缓存，后面获取可用区zone\n      this.RegionMap = _.keyBy(response.RegionInfoSet, 'Region');\n      return _.map(response.RegionInfoSet || [], (item) => {\n        return {\n          text: t(item.Region),\n          value: item.Region,\n        };\n      });\n    });\n  }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        if (isValidMetric(item)) {\n          return item;\n        }\n        return null;\n      })\n    );\n  }\n}\n","import { BMLBInstanceAliasList, CPMInvalidDemensions, namespace, templateQueryIdMap, isValidMetric } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { t } from '../../../locale';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = BMLBInstanceAliasList;\n  InvalidDimensions = CPMInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'bmlb',\n    action: 'DescribeLoadBalancers',\n    responseField: 'LoadBalancerSet',\n    interceptor: {\n      request: (params) => ({\n        ...params,\n        LoadBalancerType: 'open',\n      }), // 设置一些请求参数的 默认值\n    },\n  };\n  RegionMap = {};\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        if (isValidMetric(item)) {\n          return item;\n        }\n        return null;\n      })\n    );\n  }\n  // 重写getRegion\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/bm',\n      },\n      'bm',\n      { action: 'DescribeRegions', region: 'ap-guangzhou' }\n    ).then((response) => {\n      // 缓存，后面获取可用区zone\n      this.RegionMap = _.keyBy(response.RegionInfoSet, 'Region');\n      return _.map(response.RegionInfoSet || [], (item) => {\n        return {\n          text: t(item.Region),\n          value: item.Region,\n        };\n      });\n    });\n  }\n}\n","import {\n  BMPCXInstanceAliasList,\n  BMPCXInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { t } from '../../../locale';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = BMPCXInstanceAliasList;\n  InvalidDimensions = BMPCXInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'bmvpc',\n    action: 'DescribeVpcPeerConnections',\n    responseField: 'VpcPeerConnectionSet',\n  };\n  MetricReqConfig = {\n    resultFilter: modifyDimensons,\n  };\n  RegionMap = {};\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // 重写getRegion\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/bm',\n      },\n      'bm',\n      { action: 'DescribeRegions', region: 'ap-guangzhou' }\n    ).then((response) => {\n      // 缓存，后面获取可用区zone\n      this.RegionMap = _.keyBy(response.RegionInfoSet, 'Region');\n      return _.map(response.RegionInfoSet || [], (item) => {\n        return {\n          text: t(item.Region),\n          value: item.Region,\n        };\n      });\n    });\n  }\n}\n","import { BWPInstanceAliasList, BWPInvalidDemensions } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class BWPDatasource extends BaseDatasource {\n  Namespace = 'QCE/BWP';\n  InstanceAliasList = BWPInstanceAliasList;\n  InvalidDimensions = BWPInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'BandwidthPackageId',\n  };\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeBandwidthPackages',\n    responseField: 'BandwidthPackageSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import { CBSInstanceAliasList, CBSInvalidDemensions, namespace, templateQueryIdMap, isValidMetric } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = CBSInstanceAliasList;\n  InvalidDimensions = CBSInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'cbs',\n    action: 'DescribeDisks',\n    responseField: 'DiskSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.filter(rawSet, isValidMetric);\n  }\n}\n","import _ from 'lodash';\nimport { CDBInstanceAliasList, CDBInvalidDemensions, isValidMetric, modifyDimensons, templateQueryIdMap } from './query_def';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class CDBDatasource extends BaseDatasource {\n  Namespace = 'QCE/CDB';\n  InstanceAliasList = CDBInstanceAliasList;\n  InvalidDimensions = CDBInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'InstanceId',\n  };\n  InstanceReqConfig = {\n    service: 'cdb',\n    action: 'DescribeDBInstances',\n    responseField: 'Items',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        if (isValidMetric(item)) {\n          return modifyDimensons(item);\n        }\n        return null;\n      })\n    );\n  }\n  /**\n   * 获取 可用区\n   * @param region 地域信息\n   */\n  getZones(region) {\n    const serviceInfo = GetServiceAPIInfo(region, 'cvm');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeZones' }\n    ).then((response) => {\n      return _.filter(\n        _.map(response.ZoneSet || [], (item) => {\n          return { text: item.ZoneName, value: item.ZoneId, ZoneState: item.ZoneState, Zone: item.Zone };\n        }),\n        (item) => item.ZoneState === 'AVAILABLE'\n      );\n    });\n  }\n  // 仅对维度组合是InstanceId和InstanceType的指标，其他指标不支持\n  getDefaultInsObj(ins: string) {\n    return {\n      [templateQueryIdMap.instance]: ins,\n      InstanceType: 1,\n    }\n  }\n}\n","import _ from 'lodash';\nimport { CDNInstanceAliasList, CDNInvalidDemensions } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class CDNDatasource extends BaseDatasource {\n  Namespace = 'QCE/CDN';\n  InstanceAliasList = CDNInstanceAliasList;\n  InvalidDimensions = CDNInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'Domain',\n  };\n  InstanceReqConfig = {\n    service: 'cdn',\n    action: 'DescribeDomains',\n    responseField: 'Domains',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async metricFindQuery(query: any, regex?: string) {\n    return super.metricFindQuery({ ...query, ...{ region: 'ap-guangzhou' } }, regex);\n  }\n}\n","import { CDNPROVINCEInstanceAliasList, CDNPROVINCEInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = CDNPROVINCEInstanceAliasList;\n  InvalidDimensions = CDNPROVINCEInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'cdn',\n    action: 'DescribeDomains',\n    responseField: 'Domains',\n  };\n  extrasAlias = ['isp', 'district'];\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // getFilterDropdown({ field }) {\n  //   return super.getRegions();\n  // }\n  async metricFindQuery(query: any, regex?: string) {\n    return super.metricFindQuery({ ...query, ...{ region: 'ap-guangzhou' } }, regex);\n  }\n  async getConsumerList(params: any) {\n    const { region, field } = params;\n    const serviceInfo = GetServiceAPIInfo(region, 'cdn');\n\n    // 从分页数据，获取全量数据\n    const rs = await this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: {\n          Name: field,\n        },\n      },\n      serviceInfo.service,\n      { action: 'DescribeMapInfo' }\n    );\n    return (rs.MapInfoList || []).map((o) => {\n      return {\n        text: o.Name,\n        value: o.Name,\n      };\n    });\n  }\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    if (action === 'DescribeMapInfo') {\n      const { name: field } = query;\n      const rs = await this.getConsumerList({ region, field });\n      return rs;\n    }\n    return [];\n  }\n}\n","import {\n  CEIPSUMMARYInstanceAliasList,\n  CEIPInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = CEIPSUMMARYInstanceAliasList;\n  InvalidDimensions = CEIPInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeAddresses',\n    responseField: 'AddressSet',\n    interceptor: {\n      request: (params) => {\n        const { Filters } = params;\n        if (!Filters) {\n          params.Filters = [];\n        }\n        params.Filters.push({\n          Name: 'address-type',\n          Values: ['AnycastEIP'],\n        });\n        return params;\n      }, // 设置一些请求参数的 默认值\n      // response: (data: unknown[]) =>[\n      //   {\n      //     AddressId: 'AddressId',\n      //     AddressIp: '111.22.3.4'\n      //   },\n      // ],\n    },\n  };\n  MetricReqConfig = {\n    resultFilter: modifyDimensons,\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  // async getInstances(region, params = {}) {\n  //   const rawSet = await super.getInstances(region, params);\n  //   return rawSet.filter((item) => item.AddressType === 'AnycastEIP');\n  // }\n\n  // async getVariableInstances(region, query = {}) {\n  //   const rawSet = await super.getVariableInstances(region, query);\n  //   return rawSet.filter((item) => item.AddressType === 'AnycastEIP');\n  // }\n}\n","import { CESInstanceAliasList, CESInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = CESInstanceAliasList;\n  InvalidDimensions = CESInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'es',\n    action: 'DescribeInstances',\n    responseField: 'InstanceList',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import _ from 'lodash';\nimport { BaseDatasource } from '../_base/datasource';\nimport { CFSInstanceAliasList, CFSInvalidDemensions, regionSupported } from './query_def';\nimport { t } from '../../../locale'\nexport default class CFSDatasource extends BaseDatasource {\n  InstanceKey: string;\n  Namespace: string;\n  InstanceAliasList: string[];\n  InvalidDimensions: Record<string, string>;\n  templateQueryIdMap = {\n    instance: 'FileSystemId',\n  };\n  extrasAlias = ['version'];\n  InstanceReqConfig: { service?: string | undefined; action: string; responseField: string };\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n\n    this.Namespace = 'QCE/CFS';\n    this.InstanceAliasList = CFSInstanceAliasList;\n    this.InvalidDimensions = CFSInvalidDemensions;\n    this.InstanceReqConfig = {\n      service: 'cfs',\n      action: 'DescribeCfsFileSystems',\n      responseField: 'FileSystems',\n    };\n  }\n  getRegions() {\n    return Promise.resolve(regionSupported.map(({ value }) => ({ value, text: t(value) })));\n  }\n}\n","import _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport { BaseDatasource } from '../_base/datasource';\nimport {\n  CKAFKAInstanceAliasList,\n  CKAFKATopicAliasList,\n  CKAFKAInvalidDemensions,\n  templateQueryIdMap,\n  keyInStorage,\n  queryMonitorExtraConfg,\n} from './query_def';\n\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class CKFKADatasource extends BaseDatasource {\n  Namespace = 'QCE/CKAFKA';\n  InstanceAliasList = CKAFKAInstanceAliasList;\n  TopicAliasList = CKAFKATopicAliasList;\n  InvalidDimensions = CKAFKAInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'ckafka',\n    action: 'DescribeInstances',\n    responseField: 'InstanceList',\n  };\n  extraMetricDims = ['topicId'];\n  // extrasAlias = ['topicId', 'consumerGroup', 'partition'];\n  keyInStorage = keyInStorage;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  consumerGroupCache = {};\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getConsumerGroups(region, params) {\n    const serviceInfo = GetServiceAPIInfo(region, 'ckafka');\n    let { InstanceId, groupname = '', topicid = '' } = params;\n    groupname = this.getVariable(groupname); // 将模板转换为真实值\n    topicid = this.getVariable(topicid); // 将模板转换为真实值\n    try {\n      groupname = JSON.parse(groupname)[templateQueryIdMap.groupName];\n      topicid = JSON.parse(topicid)[templateQueryIdMap.topicId];\n    } catch (e) {}\n    let consumerGoup = this.consumerGroupCache[InstanceId];\n    if (!consumerGoup) {\n      // 从分页数据，获取全量数据\n      consumerGoup = await fetchAllFactory(\n        (data) => {\n          return this.doRequest(\n            {\n              url: this.url + serviceInfo.path,\n              data,\n            },\n            serviceInfo.service,\n            { region, action: 'DescribeConsumerGroup' }\n          );\n        },\n        _.pick(params, 'InstanceId'),\n        ['GroupListForMonitor', 'TopicListForMonitor', 'PartitionListForMonitor', 'GroupList']\n      );\n      this.consumerGroupCache[InstanceId] = consumerGoup;\n    }\n\n    let [GroupList, TopicList, PartitionList, GroupDetailList] = consumerGoup;\n    // 无重复数组\n    TopicList = _.uniqBy(TopicList, (item) => (item as any).TopicId);\n    GroupList = _.uniqBy(GroupList, (item) => (item as any).GroupName);\n    PartitionList = _.uniqBy(PartitionList, (item) => (item as any).PartitionId);\n    GroupDetailList = _.uniqBy(GroupDetailList, (item) => (item as any).ConsumerGroupName);\n    // 如果传入消费者信息，consumergroupname，获取该用户的订阅信息列表\n    const SubscribedInfos = GroupDetailList.find((d) => d.ConsumerGroupName === groupname)?.SubscribedInfo || [];\n    // 这里为了兼容PartitonList格式，最后转化为数组对象的方式\n    const partitions =\n      SubscribedInfos.find((sub) => sub.TopicId === topicid)?.Partition?.map((p) => ({\n        [templateQueryIdMap.partition]: p,\n      })) || [];\n    return {\n      GroupList,\n      TopicList:\n        SubscribedInfos.length > 0\n          ? SubscribedInfos.map(({ TopicId, TopicName }) => ({ TopicId, TopicName }))\n          : TopicList,\n      PartitionList: partitions.length > 0 ? partitions : PartitionList,\n    };\n  }\n  formatTopicVarDisplay(topic: Record<string, any>, displayTpl: string | undefined, topicAlias: string) {\n    if (displayTpl) {\n      return displayTpl.replace(/\\$\\{(\\w+)\\}/g, (a, b) => {\n        if (!b || !this.TopicAliasList.includes(b)) {\n          return '';\n        }\n        return this.getAliasValue(topic, b);\n      });\n    }\n    return this.getAliasValue(topic, topicAlias);\n  }\n  // 查询指标下的数据\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    let { topicalias, groupname, topicid } = query;\n    const result = await this.getConsumerGroups(region, {\n      InstanceId: instance.InstanceId,\n      groupname,\n      topicid,\n    });\n    let { display } = query;\n    const { TopicList, GroupList, PartitionList } = result;\n    topicalias = this.TopicAliasList.includes(topicalias) ? topicalias : this.templateQueryIdMap.topicId;\n\n    const rs = {\n      GroupList: GroupList.map((group) => {\n        group._InstanceAliasValue = group.GroupName;\n        return {\n          text: group.GroupName,\n          value: group[templateQueryIdMap.groupName],\n        };\n      }),\n      TopicList: TopicList.map((topic) => {\n        const topicAlias = this.formatTopicVarDisplay(topic, display, topicalias);\n        topic._InstanceAliasValue = topicAlias || topic[templateQueryIdMap.topicId];\n        return {\n          text: topicAlias || topic[templateQueryIdMap.topicId],\n          value: topic[templateQueryIdMap.topicId], // 为了获取多维度的值，这里完全可以使用JSON.stringify()将整个对象放进去\n          TopicName: topic.TopicName,\n        };\n      }),\n      PartitionList: PartitionList.map((par) => {\n        par._InstanceAliasValue = par[templateQueryIdMap.partition];\n        return {\n          text: par[templateQueryIdMap.partition],\n          value: par[templateQueryIdMap.partition],\n        };\n      }),\n    };\n    await instanceStorage.setExtraStorage(this.service, this.keyInStorage.TopicList, TopicList);\n    await instanceStorage.setExtraStorage(this.service, this.keyInStorage.GroupList, GroupList);\n    await instanceStorage.setExtraStorage(this.service, this.keyInStorage.PartitionList, PartitionList);\n    // console.log({ res1, res2, res3 });\n    // console.log({rs});\n    // 根据action返回指定的维度数据列表\n    switch (action) {\n      case 'DescribeTopicList':\n        return rs.TopicList;\n      case 'DescribeGroup':\n        return rs.GroupList;\n      case 'DescribePartion':\n        return rs.PartitionList;\n      default:\n        return [];\n    }\n  }\n\n  // async getOtherAlias(datapoints) {\n  //   let dimension;\n  //   for(let j = 0; j < datapoints.Dimensions.length; j++){\n  //     if(datapoints.Dimensions[j] !== 'InstanceName'){\n  //       dimension.push(datapoints.Dimensions[j])\n  //     }\n  //   }\n  //   console.log(dimension);\n\n  //   return dimension\n  // }\n}\n","import {\n  InstanceAliasList,\n  LOADBALANCEListenerAliasList,\n  LOADBALANCEServerAliasList,\n  LOADBALANCEVALIDDIMENSIONS,\n  templateQueryIdMap,\n  keyInStorage,\n  CANDIATEDIMENSIONS,\n  queryMonitorExtraConfg,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class DCDatasource extends BaseDatasource {\n  // Namespace = namespace;\n  InstanceAliasList = InstanceAliasList;\n  ListenerAliasList = LOADBALANCEListenerAliasList;\n  ServerAliasList = LOADBALANCEServerAliasList;\n  CandiateDimensions = CANDIATEDIMENSIONS;\n  // InvalidDimensions = LOADBALANCEVALIDDIMENSIONS;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  // InstanceReqConfig = {\n  //   service: 'clb',\n  //   action: 'DescribeLoadBalancers',\n  //   responseField: 'LoadBalancerSet',\n  // };\n  keyInStorage = keyInStorage;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // getFilterDropdown({ field }) {\n  //   return super.getRegions();\n  // }\n  getInvalidDimensions(selfIns: any, tagret: any) {\n    if (selfIns.service === 'lbPrivate' || (selfIns.service === 'lbPublic' && tagret.servers))\n      return { ...LOADBALANCEVALIDDIMENSIONS, vpcId: 'NumericalVpcId' };\n    return LOADBALANCEVALIDDIMENSIONS;\n  }\n  getInstanceReqConfig(selfIns: any) {\n    const res: any = {\n      service: 'clb',\n      action: 'DescribeLoadBalancers',\n      responseField: 'LoadBalancerSet',\n    };\n    if (selfIns.service === 'lbPrivate' || selfIns.service === 'loadBalance') {\n      res.interceptor = {\n        request: (param) => ({ ...param, LoadBalancerType: 'INTERNAL' }),\n      };\n    }\n    if (selfIns.service === 'lbPublic') {\n      res.interceptor = {\n        request: (param) => ({ ...param, LoadBalancerType: 'OPEN' }),\n      };\n    }\n    return res;\n  }\n  async getListenerList(params: any) {\n    const { region, instanceId } = params;\n    const serviceInfo = GetServiceAPIInfo(region, 'clb');\n\n    // 从分页数据，获取全量数据\n    const res = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action: 'DescribeListeners' }\n        );\n      },\n      {\n        LoadBalancerId: instanceId,\n      },\n      'Listeners'\n    );\n    const [rs] = res;\n    return rs;\n  }\n  formatVariableDisplay(data: Record<string, any>, displayTpl: string | undefined, alias: string, aliasList: string[]) {\n    if (displayTpl) {\n      return displayTpl.replace(/\\$\\{(\\w+)\\}/g, (a, b) => {\n        if (!b || !aliasList.includes(b)) {\n          return '';\n        }\n        return this.getAliasValue(data, b);\n      });\n    }\n    return this.getAliasValue(data, alias);\n  }\n  async getServerList(params: any) {\n    const { region, instanceId, listenerId } = params;\n    const serviceInfo = GetServiceAPIInfo(region, 'clb');\n\n    const res = await this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: { LoadBalancerId: instanceId, ListenerIds: [listenerId] },\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeTargets' }\n    );\n    const { Listeners } = res;\n    const serversList = _.reduce(\n      Listeners,\n      (prev, item) => {\n        const { Rules, Targets } = item;\n        if (!_.isEmpty(Rules)) {\n          return _.concat(prev, _.flatten(_.map(Rules, (elem) => (_.isEmpty(elem.Targets) ? [] : elem.Targets))));\n        }\n        if (!_.isEmpty(Targets)) {\n          return _.concat(prev, Targets);\n        }\n        return prev;\n      },\n      []\n    );\n    return serversList;\n  }\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    const { display } = query;\n    if (action === 'DescribeListeners') {\n      const rs = await this.getListenerList({ region, instanceId: instance[this.templateQueryIdMap.instance] });\n      let { listeneralias } = query;\n      listeneralias = this.ListenerAliasList.includes(listeneralias) ? listeneralias : this.templateQueryIdMap.listener;\n      const result = rs.flatMap((o) => {\n        const listenAlias = this.formatVariableDisplay(o, display, listeneralias, this.ListenerAliasList);\n        const lisId = o[this.templateQueryIdMap.listener];\n        o._InstanceAliasValue = listenAlias || lisId;\n        // if (!o[listeneralias]) return [];\n        return {\n          text: listenAlias || lisId,\n          value: lisId,\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage.listener, rs);\n      return result;\n    }\n    if (action === 'DescribeServer' || action === 'DescribeServerPort') {\n      const { listenerid, serverprivateip, serveralias } = query;\n      const serverPrivateIp = this.getVariable(serverprivateip);\n      const serversList = await this.getServerList({\n        region,\n        instanceId: instance[this.templateQueryIdMap.instance],\n        listenerId: this.getVariable(listenerid),\n      });\n      const serverAlias = this.ServerAliasList.includes(serveralias) ? serveralias : this.templateQueryIdMap.servers;\n      const result = _.chain(serversList)\n        .filter((item) => {\n          if (action === 'DescribeServer') {\n            return true;\n          }\n          return serverPrivateIp === _.get(item, 'PrivateIpAddresses.0');\n        })\n        .map((item) => {\n          const alias = this.formatVariableDisplay(item, display, serverAlias, this.ServerAliasList);\n          const id = item[this.templateQueryIdMap.servers][0];\n          item._InstanceAliasValue = alias || id;\n          return action === 'DescribeServer'\n            ? {\n                text: alias || id,\n                value: id,\n              }\n            : {\n                text: `${_.get(item, 'Port')}`,\n                value: _.get(item, 'Port'),\n              };\n        })\n        .value();\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage.servers, serversList);\n      return action === 'DescribeServer' ? result : _.uniqBy(result, 'text');\n    }\n    return [];\n  }\n}\n","import {\n  CLSInstanceAliasList,\n  CLSInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  regionSupported,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { t } from '../../../locale';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = CLSInstanceAliasList;\n  InvalidDimensions = CLSInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'cls',\n    action: 'DescribeTopics',\n    responseField: 'Topics',\n  };\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // getFilterDropdown({ field }) {\n  //   return super.getRegions();\n  // }\n  getRegions() {\n    return Promise.resolve(regionSupported.map(({ value }) => ({ value, text: t(value) })));\n  }\n  // async getInstances(region, params = {}) {\n  //   const superRes = await super.getInstances(region, params);\n  //   console.log({ superRes });\n  // }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        return modifyDimensons(item);\n      })\n    );\n  }\n}\n","import { BaseDatasource } from '../_base/datasource';\nimport { InvalidDemensions, InstanceAliasList, templateQueryIdMap } from './query_def';\n\nexport default class CmqDatasource extends BaseDatasource {\n  InvalidDimensions: Record<string, string> = InvalidDemensions;\n  InstanceAliasList: string[] = InstanceAliasList;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'cmq',\n    action: 'DescribeQueueDetail',\n    responseField: 'QueueSet',\n  };\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawMetric = await super.getMetrics(region);\n    return rawMetric.map((metric) => {\n      let dims = metric.Dimensions[0].Dimensions;\n      dims = Array.from(new Set([...dims, 'queueId', 'queueName']));\n      metric.Dimensions[0].Dimensions = dims;\n      return metric;\n    });\n  }\n}\n","import { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport { BaseDatasource } from '../_base/datasource';\nimport {\n  InvalidDemensions,\n  InstanceAliasList,\n  templateQueryIdMap,\n  keyInStorage,\n  queryMonitorExtraConfg,\n} from './query_def';\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class CmqTopicDatasource extends BaseDatasource {\n  Namespace = 'QCE/CMQTOPIC';\n  InvalidDimensions: Record<string, string> = InvalidDemensions;\n  InstanceAliasList: string[] = InstanceAliasList;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'cmq',\n    action: 'DescribeTopicDetail',\n    responseField: 'TopicSet',\n  };\n  keyInStorage = keyInStorage;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  extraMetricDims = ['subscriptionId']; // 多选\n\n  async fetchAllSubscription(region: string, params: any) {\n    const serviceInfo = GetServiceAPIInfo(region, 'cmq');\n    // console.log(serviceInfo, 'serviceinfo');\n\n    // 从分页数据，获取全量数据\n    const rs = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action: 'DescribeSubscriptionDetail' }\n        );\n      },\n      params,\n      'SubscriptionSet'\n    );\n\n    return rs[0];\n  }\n\n  async fetchMetricData(action: string, region: string, instance: any) {\n    let result;\n    switch (action) {\n      case 'DescribeSubscriptionDetail':\n        result = await this.fetchAllSubscription(region, { TopicName: instance.TopicName });\n        // eslint-disable-next-line no-case-declarations\n        const rs = result.map((item) => {\n          item._InstanceAliasValue = item.SubscriptionId;\n          return { text: item.SubscriptionId, value: item[templateQueryIdMap.subscription] };\n        });\n        await instanceStorage.setExtraStorage(this.service, this.keyInStorage.subscriptionId, result);\n        return rs;\n      default:\n        return [];\n    }\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawMetric = await super.getMetrics(region);\n    return rawMetric.map((metric) => {\n      let dims = metric.Dimensions[0].Dimensions;\n      dims.push('topicId');\n      if (['NumOfNotify', 'NumOfSuccNotify'].includes(metric.MetricName)) {\n        dims.push('subscriptionId');\n      }\n\n      dims = Array.from(new Set(dims));\n      metric.Dimensions[0].Dimensions = dims;\n      return metric;\n    });\n  }\n}\n","import { BaseDatasource } from '../_base/datasource';\n\ninterface BucketListResult {\n  Owner: { ID: 'string'; DisplayName: 'string' };\n  Buckets: { Name: string; Region: string }[];\n}\n\nexport default class CosDatasource extends BaseDatasource {\n  InvalidDimensions: Record<string, string> = {};\n  InstanceAliasList: string[] = ['BucketName'];\n  templateQueryIdMap = {\n    instance: 'BucketName',\n  };\n  InstanceReqConfig = {} as any; // 不必要的配置\n  cosURL: string;\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n    this.cosURL = `/api/datasources/${this.instanceSettings.id}/resources/tc_cos_list`;\n  }\n  async getInstances(region: string) {\n    return this.backendSrv\n      .datasourceRequest({\n        url: this.cosURL,\n        method: 'GET',\n        params: { region },\n        headers: { 'Content-Type': 'application/json' },\n      })\n      .then((res) => {\n        let { data }: { data: BucketListResult } = res;\n        data = data || ({} as any);\n        let { Buckets } = data;\n        Buckets = Buckets || [];\n\n        // name contains appid，see detail https://cloud.tencent.com/document/product/436/8291\n        return Buckets.map((item) => ({\n          ...item,\n          BucketName: item.Name,\n          bucket: item.Name,\n          appid: item.Name.split('-').slice(-1)[0],\n        }));\n      });\n  }\n\n  async getVariableInstances(region) {\n    return this.getInstances(region);\n  }\n}\n","import {\n  CPMInstanceAliasList,\n  CPMInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport _ from 'lodash';\nimport { t } from '../../../locale';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = CPMInstanceAliasList;\n  InvalidDimensions = CPMInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'bm',\n    action: 'DescribeDevices',\n    responseField: 'DeviceInfoSet',\n  };\n  RegionMap = {};\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // 重写getRegion\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/bm',\n      },\n      'bm',\n      { action: 'DescribeRegions', region: 'ap-guangzhou' }\n    ).then((response) => {\n      // 缓存，后面获取可用区zone\n      this.RegionMap = _.keyBy(response.RegionInfoSet, 'Region');\n      return _.map(response.RegionInfoSet || [], (item) => {\n        return {\n          text: t(item.Region),\n          value: item.Region,\n        };\n      });\n    });\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.map((item) => modifyDimensons(item));\n  }\n\n  getFilterDropdown({ field, region }) {\n    if (field === 'DeviceClassCode') {\n      const serviceInfo = GetServiceAPIInfo(region, 'bm');\n      return this.doRequest(\n        {\n          url: this.url + serviceInfo.path,\n        },\n        'bm',\n        { region, action: 'DescribeDeviceClass' }\n      ).then((response) => {\n        return _.map(response.DeviceClassSet || [], (item) => {\n          return { text: item.DeviceClassCode, value: item.DeviceClassCode };\n        });\n      });\n    }\n    return [];\n  }\n}\n","import _ from 'lodash';\nimport { CVMInstanceAliasList, isValidMetric, modifyDimensons } from './query_def';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class CVMDatasource extends BaseDatasource {\n  Namespace = 'QCE/CVM';\n  InstanceAliasList = CVMInstanceAliasList;\n  InvalidDimensions = {};\n  templateQueryIdMap = {\n    instance: 'InstanceId',\n  };\n  InstanceReqConfig = {\n    service: 'cvm',\n    action: 'DescribeInstances',\n    responseField: 'InstanceSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        if (isValidMetric(item)) {\n          return modifyDimensons(item);\n        }\n        return null;\n      })\n    );\n  }\n\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/api',\n        data: { Product: 'cvm' },\n      },\n      'api',\n      { action: 'DescribeRegions' }\n    ).then((response) => {\n      return _.filter(\n        _.map(response.RegionSet || [], (item) => {\n          return {\n            text: item.RegionName,\n            value: item.Region,\n            RegionState: item.RegionState,\n          };\n        }),\n        (item) => item.RegionState === 'AVAILABLE'\n      );\n    });\n  }\n\n  getZones(region) {\n    const serviceInfo = GetServiceAPIInfo(region, 'api');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: { Product: 'cvm' },\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeZones' }\n    ).then((response) => {\n      return _.filter(\n        _.map(response.ZoneSet || [], (item) => {\n          return { text: item.ZoneName, value: item.Zone, ZoneState: item.ZoneState, Zone: item.Zone };\n        }),\n        (item) => item.ZoneState === 'AVAILABLE'\n      );\n    });\n  }\n}\n","import {\n  CYNOSDBMYSQLInstanceAliasList,\n  CYNOSDBInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  modifyDimensons,\n  checkKeys,\n} from './query_def';\nimport _ from 'lodash';\nimport { BaseDatasource } from '../_base/datasource';\n// import { t } from '../../../locale';\n\nexport default class CYNOSDBMYSQLDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = CYNOSDBMYSQLInstanceAliasList;\n  InvalidDimensions = CYNOSDBInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  checkKeys = checkKeys;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'cynosdb',\n    action: 'DescribeInstances',\n    responseField: 'InstanceSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.map((item) => modifyDimensons(item));\n  }\n  // getRegions() {\n  //   return Promise.resolve(regionSupported.map(({ value }) => ({ value, text: t(value) })));\n  // }\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/api',\n        data: { Product: 'cynosdbmysql' },\n      },\n      'api',\n      { action: 'DescribeRegions' }\n    ).then((response) => {\n      return _.filter(\n        _.map(response.RegionSet || [], (item) => {\n          return {\n            text: item.RegionName,\n            value: item.Region,\n            RegionState: item.RegionState,\n          };\n        }),\n        (item) => item.RegionState === 'AVAILABLE'\n      );\n    });\n  }\n  // 仅对维度组合是InstanceId的指标，其他指标不支持\n  getDefaultInsObj(ins: string) {\n    return {\n      [templateQueryIdMap.instance]: ins,\n    }\n  }\n}\n","import { DCInstanceAliasList, DCInvalidDemensions, namespace, modifyDimensons } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = DCInstanceAliasList;\n  InvalidDimensions = DCInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'DirectConnectId',\n  };\n  InstanceReqConfig = {\n    service: 'dc',\n    action: 'DescribeDirectConnects',\n    responseField: 'DirectConnectSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.map((item) => modifyDimensons(item));\n  }\n}\n","import {\n  DCDBInstanceAliasList,\n  DCDBInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  modifyDimensons,\n  keyInStorage,\n  queryMonitorExtraConfg,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport instanceStorage from '../../common/datasourceStorage';\nimport { t } from '../../../locale';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = DCDBInstanceAliasList;\n  InvalidDimensions = DCDBInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'dcdb',\n    action: 'DescribeDCDBInstances',\n    responseField: 'Instances',\n  };\n  keyInStorage = keyInStorage;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  extraActionMap = {\n    DescribeDCDBShards: {\n      service: 'dcdb',\n      action: 'DescribeDCDBShards',\n      responseField: 'Shards',\n      pickKey: 'ShardInstanceId',\n    },\n    DescribeDCDBInstanceNodeInfo: {\n      service: 'dcdb',\n      action: 'DescribeDCDBInstanceNodeInfo',\n      responseField: 'NodesInfo',\n      pickKey: 'NodeId',\n    },\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // 重写getRegion, 入参的region用广州\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/dcdb',\n      },\n      'dcdb',\n      { action: 'DescribeDCDBSaleInfo', region: 'ap-guangzhou' }\n    ).then((response) => {\n      return _.map(response.RegionList || [], (item) => {\n        return {\n          text: t(item.Region),\n          value: item.Region,\n          RegionState: item.RegionState,\n        };\n      });\n    });\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        return modifyDimensons(item);\n      })\n    );\n  }\n  async getConsumerList(params: any) {\n    const { region, action: act, payload } = params;\n    const { service, action, responseField } = this.extraActionMap[act];\n\n    const serviceInfo = GetServiceAPIInfo(region, service);\n\n    // 从分页数据，获取全量数据\n    const rs = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action }\n        );\n      },\n      payload,\n      responseField\n    );\n    return rs[0];\n  }\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    const payload: any = {\n      InstanceId: instance[this.templateQueryIdMap.instance],\n      Limit: 100,\n    };\n    if (Object.keys(this.extraActionMap).indexOf(action) !== -1) {\n      const rs = await this.getConsumerList({ region, action, payload });\n      const { pickKey } = this.extraActionMap[action];\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[this.templateQueryIdMap[pickKey]];\n        return {\n          text: o[this.templateQueryIdMap[pickKey]],\n          value: o[this.templateQueryIdMap[pickKey]],\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage[pickKey], rs);\n      return result;\n    }\n    return [];\n  }\n}\n","import { DCGInstanceAliasList, DCGInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = DCGInstanceAliasList;\n  InvalidDimensions = DCGInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeDirectConnectGateways',\n    responseField: 'DirectConnectGatewaySet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import { DCXInstanceAliasList, DCXInvalidDemensions, namespace, modifyDimensons } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class DCXDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = DCXInstanceAliasList;\n  InvalidDimensions = DCXInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'DirectConnectTunnelId',\n  };\n  InstanceReqConfig = {\n    service: 'dc',\n    action: 'DescribeDirectConnectTunnels',\n    responseField: 'DirectConnectTunnelSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.map((item) => modifyDimensons(item));\n  }\n}\n","import { BaseDatasource } from '../_base/datasource';\nimport {\n  ECDNInstanceAliasList,\n  ECDNInvalidDemensions,\n  modifyDimensons,\n  namespace,\n  templateQueryIdMap,\n} from './query_def';\n\nexport default class ECDNDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = ECDNInstanceAliasList;\n  InvalidDimensions = ECDNInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'ecdn',\n    action: 'DescribeDomains',\n    responseField: 'Domains',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.map((item) => modifyDimensons(item));\n  }\n}\n","import {\n  ECMInstanceAliasList,\n  ECMInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = ECMInstanceAliasList;\n  InvalidDimensions = ECMInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'ecm',\n    action: 'DescribeInstances',\n    responseField: 'InstanceSet',\n  };\n  MetricReqConfig = {\n    resultFilter: modifyDimensons,\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async metricFindQuery(query: any, regex?: string) {\n    return super.metricFindQuery({ ...query, ...{ region: 'ap-guangzhou' } }, regex);\n  }\n}\n","import {\n  ECMBLOCKSTORAGEInstanceAliasList,\n  ECMBLOCKSTORAGEInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  queryMonitorExtraConfg,\n  keyInStorage,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = ECMBLOCKSTORAGEInstanceAliasList;\n  InvalidDimensions = ECMBLOCKSTORAGEInvalidDemensions;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  templateQueryIdMap = templateQueryIdMap;\n  keyInStorage = keyInStorage;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'ecm',\n    action: 'DescribeInstances',\n    responseField: 'InstanceSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async getDiskList(params: any) {\n    const { payload } = params;\n    const { InstanceId } = payload;\n    const instanceCache = await instanceStorage.getInstance(this.service);\n    const instanceObj: any =\n      _.cloneDeep(instanceCache.find((item) => item[this.templateQueryIdMap.instance] === InstanceId)) ?? {};\n    const { DataDisks: dataDisks } = instanceObj;\n    return dataDisks;\n  }\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    const payload: any = {\n      InstanceId: instance,\n      Limit: 100,\n    };\n    const rs = await this.getDiskList({ region, action, payload });\n    const result = rs.map((o) => {\n      o._InstanceAliasValue = o[this.templateQueryIdMap.diskId];\n      return {\n        text: o[this.templateQueryIdMap.diskId],\n        value: o[this.templateQueryIdMap.diskId],\n      };\n    });\n    await instanceStorage.setExtraStorage(this.service, this.keyInStorage.diskId, rs);\n    return result;\n  }\n}\n","import { ECMLBInstanceAliasList, ECMLBInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = ECMLBInstanceAliasList;\n  InvalidDimensions = ECMLBInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'ecm',\n    action: 'DescribeLoadBalancers',\n    responseField: 'LoadBalancerSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async metricFindQuery(query: any, regex?: string) {\n    return super.metricFindQuery({ ...query, ...{ region: 'ap-guangzhou' } }, regex);\n  }\n}\n","import {\n  GSEInstanceAliasList,\n  GSEInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  regionSupported,\n  keyInStorage,\n  queryMonitorExtraConfg,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport instanceStorage from '../../common/datasourceStorage';\nimport { t } from '../../../locale';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = GSEInstanceAliasList;\n  InvalidDimensions = GSEInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'gse',\n    action: 'DescribeInstances',\n    responseField: 'Instances',\n  };\n\n  keyInStorage = keyInStorage;\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // getFilterDropdown({ field }) {\n  //   return super.getRegions();\n  // }\n  getRegions() {\n    return Promise.resolve(regionSupported.map(({ value }) => ({ value, text: t(value) })));\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        return modifyDimensons(item);\n      })\n    );\n  }\n  async getQueueNameList(params: any) {\n    const { region } = params;\n    const serviceInfo = GetServiceAPIInfo(region, this.service);\n\n    // 从分页数据，获取全量数据\n    const res = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action: 'DescribeGameServerSessionQueues' }\n        );\n      },\n      {},\n      'GameServerSessionQueues'\n    );\n    const [rs] = res;\n    return rs;\n  }\n  async getFleetList(params: any) {\n    const { region } = params;\n    const serviceInfo = GetServiceAPIInfo(region, this.service);\n\n    // 从分页数据，获取全量数据\n    const res = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action: 'ListFleets' }\n        );\n      },\n      {},\n      'FleetIds'\n    );\n    const [rs] = res;\n    return rs.map((r) => ({ [this.templateQueryIdMap.FleetId]: r }));\n  }\n  async fetchMetricData(action: string, region: string, instance: any) {\n    // console.log({ action, region, instance });\n    if (action === 'DescribeGameServerSessionQueues') {\n      const rs = await this.getQueueNameList({ region, instanceId: instance[this.templateQueryIdMap.instance] });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[this.templateQueryIdMap.Name];\n        return {\n          text: o[this.templateQueryIdMap.Name],\n          value: o[this.templateQueryIdMap.Name],\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage.queue, rs);\n      return result;\n    }\n    if (action === 'ListFleets') {\n      const rs = await this.getFleetList({ region, instanceId: instance[this.templateQueryIdMap.instance] });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[this.templateQueryIdMap.FleetId];\n        return {\n          text: o[this.templateQueryIdMap.FleetId],\n          value: o[this.templateQueryIdMap.FleetId],\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage.fleet, rs);\n      return result;\n    }\n    return [];\n  }\n}\n","import _ from 'lodash';\nimport { BaseDatasource } from '../_base/datasource';\nimport { LBInstanceAliasList, LBInvalidDemensions } from './query_def';\n\nexport default class SCFDatasource extends BaseDatasource {\n  Namespace = 'QCE/LB';\n  InstanceAliasList = LBInstanceAliasList;\n  InvalidDimensions = LBInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'AddressId',\n  };\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeAddresses',\n    responseField: 'AddressSet',\n    interceptor: {\n      request: (params) => {\n        const { Filters } = params;\n        if (!Filters) {\n          params.Filters = [];\n        }\n        params.Filters.push({\n          Name: 'address-type',\n          Values: ['EIP'],\n        });\n        return params;\n      }, // 设置一些请求参数的 默认值\n    },\n  };\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.filter((item) =>\n      /* hack：这里多加了筛选条件，是因为后端数据不准确，坑啊！ 只拿取包含eip的指标 */\n      item.Dimensions?.[0]?.Dimensions?.includes('eip')\n    );\n  }\n\n  // async getInstances(region, params = {}) {\n  //   const rawSet = await super.getInstances(region, params);\n  //   /* hack：这里多加了筛选条件，是因为后端数据不准确，坑啊！ 只拿取包含eip的指标 */\n  //   return rawSet.filter((item) => item.AddressType === 'EIP');\n  // }\n\n  // async getVariableInstances(region, query = {}) {\n  //   const rawSet = await super.getVariableInstances(region, query);\n  //   return rawSet.filter((item) => item.AddressType === 'EIP');\n  // }\n}\n","import _ from 'lodash';\nimport {\n  LIGHTHOUSEInstanceAliasList,\n  templateQueryIdMap,\n  LighthouseInvalidDemensions,\n  modifyDimensons,\n} from './query_def';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class LighthouseDatasource extends BaseDatasource {\n  Namespace = 'QCE/LIGHTHOUSE';\n  InstanceAliasList = LIGHTHOUSEInstanceAliasList;\n  InvalidDimensions = LighthouseInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'lighthouse',\n    action: 'DescribeInstances',\n    responseField: 'InstanceSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/api',\n        data: { Product: 'lighthouse' },\n      },\n      'api',\n      { action: 'DescribeRegions' }\n    ).then((response) => {\n      return _.filter(\n        _.map(response.RegionSet || [], (item) => {\n          return {\n            text: item.RegionName,\n            value: item.Region,\n            RegionState: item.RegionState,\n          };\n        }),\n        (item) => item.RegionState === 'AVAILABLE'\n      );\n    });\n  }\n\n  getZones(region) {\n    const serviceInfo = GetServiceAPIInfo(region, 'api');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: { Product: 'lighthouse' },\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeZones' }\n    ).then((response) => {\n      return _.filter(\n        _.map(response.ZoneSet || [], (item) => {\n          return { text: item.ZoneName, value: item.Zone, ZoneState: item.ZoneState, Zone: item.Zone };\n        }),\n        (item) => item.ZoneState === 'AVAILABLE'\n      );\n    });\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        return modifyDimensons(item);\n      })\n    );\n  }\n}\n","import _ from 'lodash';\nimport {\n  MONGODBInstanceAliasList,\n  MONGODBInvalidDemensions,\n  templateQueryIdMap,\n  queryMonitorExtraConfg,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class MONGODBDatasource extends BaseDatasource {\n  Namespace = 'QCE/CMONGO';\n  InstanceAliasList = MONGODBInstanceAliasList;\n  ReplicaAliasList = ['ReplicaSetId', 'ReplicaSetName'];\n  templateQueryIdMap = templateQueryIdMap;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n\n  InstanceReqConfig = {\n    service: 'mongodb',\n    action: 'DescribeDBInstances',\n    responseField: 'InstanceDetails',\n  };\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  getInvalidDimensions(selfIns: any, target: any) {\n    if (target.node && target.node !== '') {\n      return { target: 'Node' };\n    }\n    if (target.replica && target.replica !== '') {\n      return { target: 'Replica' };\n    }\n    return MONGODBInvalidDemensions;\n  }\n  formatVariableDisplay(data: Record<string, any>, displayTpl: string | undefined, alias: string, aliasList: string[]) {\n    if (displayTpl) {\n      return displayTpl.replace(/\\$\\{(\\w+)\\}/g, (a, b) => {\n        if (!b || !aliasList.includes(b)) {\n          return '';\n        }\n        return this.getAliasValue(data, b);\n      });\n    }\n    return this.getAliasValue(data, alias);\n  }\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    const { display } = query;\n    if (action === 'DescribeReplicas') {\n      const [res] = await this.getInstances(region, { InstanceIds: [instance[this.templateQueryIdMap.instance]] });\n      let { replicaalias } = query;\n      replicaalias = this.ReplicaAliasList.includes(replicaalias) ? replicaalias : this.templateQueryIdMap.replica;\n      const result = _.map(_.get(res, 'ReplicaSets', []), (item) => {\n        const replicaAlias = this.formatVariableDisplay(item, display, replicaalias, this.ReplicaAliasList);\n        item._InstanceAliasValue = replicaAlias || item[this.templateQueryIdMap.replica];\n        return { text: item.ReplicaSetId, value: item.ReplicaSetId };\n      });\n      await instanceStorage.setExtraStorage(\n        this.service,\n        this.queryMonitorExtraConfg.Replica.dim_KeyInStorage,\n        _.get(res, 'ReplicaSets', [])\n      );\n      return result;\n    }\n    if (action === 'DescribeReplicaNodes') {\n      const [res] = await this.getInstances(region, { InstanceIds: [instance[this.templateQueryIdMap.instance]] });\n      const { replicasetid } = query;\n      const targetReplica = _.find(_.get(res, 'ReplicaSets', []), { ReplicaSetId: this.getVariable(replicasetid) });\n      let result = _.times(targetReplica.SecondaryNum, (index) => {\n        const nodeId = `${targetReplica.ReplicaSetId}-node-slave${index}`;\n        return { text: nodeId, value: nodeId };\n      });\n      if (targetReplica) {\n        result = [\n          { text: `${targetReplica.ReplicaSetId}-node-primary`, value: `${targetReplica.ReplicaSetId}-node-primary` },\n          ...result,\n        ];\n      }\n      await instanceStorage.setExtraStorage(\n        this.service,\n        this.queryMonitorExtraConfg.Node.dim_KeyInStorage,\n        result.map((item) => ({ NodeId: item.value, _InstanceAliasValue: item.value }))\n      );\n      return result;\n    }\n\n    return [];\n  }\n}\n","import { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport { BaseDatasource } from '../_base/datasource';\nimport {\n  InvalidDemensions,\n  InstanceAliasList,\n  templateQueryIdMap,\n  keyInStorage,\n  queryMonitorExtraConfg,\n} from './query_def';\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class MrHdfsDatasource extends BaseDatasource {\n  InvalidDimensions: Record<string, string> = InvalidDemensions;\n  InstanceAliasList: string[] = InstanceAliasList;\n  templateQueryIdMap = templateQueryIdMap;\n  extrasAlias = [];\n  keyInStorage = keyInStorage;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  InstanceReqConfig = {\n    service: 'emr',\n    action: 'DescribeInstances',\n    responseField: 'ClusterList',\n    interceptor: {\n      request: (params) => ({\n        ...params,\n        DisplayStrategy: params.DisplayStrategy || 'monitorManage',\n        ProjectId: params.ProjectId || -1,\n      }), // 设置一些请求参数的 默认值\n      response: (data: any[]) => data.map(({ ClusterId, ClusterName }) => ({ ClusterId, ClusterName })),\n    },\n  };\n\n  async fetchAllNodes(region: string, params: any) {\n    const serviceInfo = GetServiceAPIInfo(region, 'emr');\n\n    // 从分页数据，获取全量数据\n    const rs = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action: 'DescribeClusterNodes' }\n        );\n      },\n      { ...params, isOffsetPage: true },\n      'NodeList'\n    );\n\n    // return rs[0].map((item) => ({ text: item.Ip, value: item.Ip }));\n    return rs[0];\n  }\n\n  async fetchMetricData(action: string, region: string, instance: any) {\n    let result;\n    switch (action) {\n      case 'DescribeClusterNodes': {\n        const resultT = await this.fetchAllNodes(region, { InstanceId: instance.ClusterId, NodeFlag: 'all' });\n        result = resultT.map((item) => {\n          item._InstanceAliasValue = item[templateQueryIdMap.node];\n          return { text: item[templateQueryIdMap.node], value: item[templateQueryIdMap.node] };\n        });\n        await instanceStorage.setExtraStorage(this.service, this.keyInStorage.node, resultT);\n\n        return result;\n      }\n      default:\n        return [];\n    }\n  }\n}\n","import _ from 'lodash';\nimport { NATGATEWAYInstanceAliasList, NATInvalidDemensions } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class NATGATEWAYDatasource extends BaseDatasource {\n  Namespace = 'QCE/NAT_GATEWAY';\n  InstanceAliasList = NATGATEWAYInstanceAliasList;\n  InvalidDimensions = NATInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'NatGatewayId',\n  };\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeNatGateways',\n    responseField: 'NatGatewaySet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import _ from 'lodash';\nimport { OVCDNInstanceAliasList, OVCDNInvalidDemensions } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class OVCDNDatasource extends BaseDatasource {\n  Namespace = 'QCE/OV_CDN';\n  InstanceAliasList = OVCDNInstanceAliasList;\n  InvalidDimensions = OVCDNInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'Domain',\n  };\n  InstanceReqConfig = {\n    service: 'cdn',\n    action: 'DescribeDomains',\n    responseField: 'Domains',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async metricFindQuery(query: any, regex?: string) {\n    return super.metricFindQuery({ ...query, ...{ region: 'ap-guangzhou' } }, regex);\n  }\n}\n","import { PCXInstanceAliasList, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo, GetRequestParamsV2, SliceLength } from '../../common/constants';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = PCXInstanceAliasList;\n  InvalidDimensions = {};\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'xx',\n    action: 'xx',\n    responseField: 'xx',\n  };\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  getInstances(region = 'ap-guangzhou', params = {}) {\n    params = { offset: 0, limit: 50, ...params };\n    const serviceInfo = GetServiceAPIInfo(region, 'pcx');\n    return this.doRequestV2(\n      {\n        url: this.url + serviceInfo.path,\n        data: params,\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeVpcPeeringConnections' }\n    ).then((response) => {\n      return response.data || [];\n    });\n  }\n\n  /**\n   * 模板变量中获取全量的 PCX 实例列表\n   * @param region 地域信息\n   */\n  getVariableInstances(region, query) {\n    let result: any[] = [];\n    const params = { Offset: 0, Limit: 50, ...query };\n    const serviceInfo = GetServiceAPIInfo(region, 'pcx');\n    return this.doRequestV2(\n      {\n        url: this.url + serviceInfo.path,\n        data: params,\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeVpcPeeringConnections' }\n    ).then((response) => {\n      result = response.data || [];\n      const total = response.totalCount || 0;\n      if (result.length >= total) {\n        return result;\n      } else {\n        const param = SliceLength(total, 50);\n        const promises: any[] = [];\n        _.forEach(param, (item) => {\n          promises.push(this.getInstances(region, item));\n        });\n        return Promise.all(promises)\n          .then((responses) => {\n            _.forEach(responses, (item) => {\n              result = _.concat(result, item);\n            });\n            return result;\n          })\n          .catch((error) => {\n            return result;\n          });\n      }\n    });\n  }\n\n  getVpcId(region, params: any = {}) {\n    params = { Offset: 0, Limit: 20, ...params };\n    // TODO 等待腾讯云接口查问题\n    params.Offset = String(params.Offset);\n    params.Limit = String(params.Limit);\n    const serviceInfo = GetServiceAPIInfo(region, 'vpc');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: params,\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeVpcs' }\n    ).then((response) => {\n      return _.map(response.VpcSet || [], (item) => ({ text: item.VpcId, value: item.VpcId }));\n    });\n  }\n\n  getVpcIds(region) {\n    let result: any[] = [];\n    const params: any = { Offset: 0, Limit: 100 };\n    // TODO 等待腾讯云接口查问题\n    params.Offset = String(params.Offset);\n    params.Limit = String(params.Limit);\n    const serviceInfo = GetServiceAPIInfo(region, 'vpc');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: params,\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeVpcs' }\n    ).then((response) => {\n      result = _.map(response.VpcSet || [], (item) => ({ text: item.VpcId, value: item.VpcId }));\n      const total = response.TotalCount || 0;\n      if (result.length >= total) {\n        return result;\n      } else {\n        const param = SliceLength(total, 100);\n        const promises: any[] = [];\n        _.forEach(param, (item) => {\n          promises.push(this.getVpcId(region, item));\n        });\n        return Promise.all(promises)\n          .then((responses) => {\n            _.forEach(responses, (item) => {\n              result = _.concat(result, item);\n            });\n            return result;\n          })\n          .catch((error) => {\n            return result;\n          });\n      }\n    });\n  }\n\n  /**\n   * 腾讯云 API 2.0 请求接口\n   * @param options\n   * @param service\n   * @param signObj\n   */\n  async doRequestV2(options, service, signObj: any = {}) {\n    options = await GetRequestParamsV2(\n      options,\n      service,\n      signObj,\n      this.secretId,\n      this.instanceSettings.id,\n      this.backendSrv\n    );\n    return this.backendSrv\n      .datasourceRequest(options)\n      .then((response) => {\n        return _.get(response, 'data', {});\n      })\n      .catch((error) => {\n        throw error;\n      });\n  }\n}\n","import _ from 'lodash';\nimport {\n  POSTGRESInstanceAliasList,\n  PostgreInvalidDemensions,\n  namespace,\n  modifyDimensons,\n  templateQueryIdMap,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class CDBDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = POSTGRESInstanceAliasList;\n  InvalidDimensions = PostgreInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'postgres',\n    action: 'DescribeDBInstances',\n    responseField: 'DBInstanceSet',\n  };\n\n  MetricReqConfig = {\n    resultFilter: modifyDimensons,\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import { get } from 'lodash';\nimport { QAAPInstanceAliasList, QAAPInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class QAAPDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = QAAPInstanceAliasList;\n  InvalidDimensions = QAAPInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'gaap',\n    action: 'DescribeProxies',\n    responseField: 'ProxySet',\n    interceptor: {\n      // response: (data: unknown[]) =>[\n      //   {\n      //     \"NetDetectId\": \"netd-12345678\",\n      //   },\n      // ],\n    },\n  };\n  // MetricReqConfig = {\n  //   resultFilter: modifyDimensons,\n  // };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.filter(\n      (item) =>\n        get(item, 'Dimensions.length') === 1 &&\n        get(item, 'Dimensions[0].Dimensions.length') === 1 &&\n        get(item, 'Dimensions[0].Dimensions[0]') === 'channelId'\n    );\n  }\n}\n","import _ from 'lodash';\nimport { REDISInstanceAliasList, RedisInvalidDemensions, isValidMetric } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class REDISDatasource extends BaseDatasource {\n  Namespace = 'QCE/REDIS';\n  InstanceAliasList = REDISInstanceAliasList;\n  InvalidDimensions = RedisInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'InstanceId',\n  };\n  InstanceReqConfig = {\n    service: 'redis',\n    action: 'DescribeInstances',\n    responseField: 'InstanceSet',\n    interceptor: {\n      request: (params) => ({ ...params, MonitorVersion: '1m' }),\n    },\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.filter((item) => isValidMetric(item));\n  }\n}\n","import _ from 'lodash';\nimport {\n  REDISMEMInstanceAliasList,\n  namespace,\n  RedisMemInvalidDemensions,\n  templateQueryIdMap,\n  NodeType,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\n\nexport default class REDISDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = REDISMEMInstanceAliasList;\n  InvalidDimensions = RedisMemInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  extrasAlias = [RedisMemInvalidDemensions.pnodeid, RedisMemInvalidDemensions.rnodeid];\n  InstanceReqConfig = {\n    service: 'redis',\n    action: 'DescribeInstances',\n    responseField: 'InstanceSet',\n    interceptor: {\n      request: (params) => ({ ...params, MonitorVersion: '5s' }),\n    },\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getInstanceNodeInfo(params: any) {\n    const { region, instanceId } = params;\n    const serviceInfo = GetServiceAPIInfo(region, 'redis');\n\n    const res = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action: 'DescribeInstanceNodeInfo' }\n        );\n      },\n      {\n        InstanceId: instanceId,\n      },\n      NodeType\n    );\n\n    return res;\n  }\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    if (action === 'DescribeInstanceNodeInfo') {\n      const rs = await this.getInstanceNodeInfo({ region, instanceId: instance[this.templateQueryIdMap.instance] });\n      const { nodetype } = query;\n      const ndoeTypeIndex = NodeType.indexOf(nodetype);\n      return ndoeTypeIndex === -1\n        ? []\n        : _.map(rs[ndoeTypeIndex], (item) => ({ text: item.NodeId, value: item.NodeId }));\n    }\n    return [];\n  }\n}\n","import _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { BaseDatasource } from '../_base/datasource';\nimport {\n  SCFInstanceAliasList,\n  SCFInvalidDemensions,\n  regionSupported,\n  queryMonitorExtraConfg,\n  keyInStorage,\n  templateQueryIdMap,\n} from './query_def';\nimport instanceStorage from '../../common/datasourceStorage';\nimport { t } from '../../../locale';\n\nexport default class SCFDatasource extends BaseDatasource {\n  InstanceKey: string;\n  Namespace: string;\n  InstanceAliasList: string[];\n  InvalidDimensions: Record<string, string>;\n  templateQueryIdMap = templateQueryIdMap;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  keyInStorage = keyInStorage;\n  InstanceReqConfig: { service?: string | undefined; action: string; responseField: string };\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n\n    this.Namespace = 'QCE/SCF_V2';\n    this.InstanceAliasList = SCFInstanceAliasList;\n    this.InvalidDimensions = SCFInvalidDemensions;\n    this.InstanceReqConfig = {\n      service: 'scf',\n      action: 'ListFunctions',\n      responseField: 'Functions',\n    };\n  }\n\n  getRegions() {\n    return Promise.resolve(regionSupported.map(({ value }) => ({ value, text: t(value) })));\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.filter(\n      (item) =>\n        /* hack：这里多加了筛选条件，是因为后端数据不准确，坑啊！ 只拿取包含functionName的指标 */\n        item.Dimensions?.[0]?.Dimensions?.includes('functionName') &&\n        item.Dimensions?.[0]?.Dimensions?.includes('namespace') &&\n        !item.MetricName.startsWith('Name')\n    );\n  }\n\n  getVersions(region, params) {\n    const serviceInfo = GetServiceAPIInfo(region, 'scf');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: params,\n      },\n      serviceInfo.service,\n      { region, action: 'ListVersionByFunction' }\n    ).then((response) => {\n      return response.Versions;\n    });\n  }\n\n  async fetchMetricData(action: string, region: string, instance: any) {\n    // console.log({ action, region, instance });\n    if (action === 'ListVersionByFunction') {\n      const rs = await this.getVersions(region, { FunctionName: instance[this.templateQueryIdMap.instance] });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[this.templateQueryIdMap.version];\n        return {\n          text: o[this.templateQueryIdMap.version],\n          value: o[this.templateQueryIdMap.version],\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage.version, rs);\n      return result;\n    }\n    return [];\n  }\n}\n","import {\n  SQLSERVERInstanceAliasList,\n  SQLSERVERInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  regionSupported,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport _ from 'lodash';\nimport { t } from '../../../locale';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = SQLSERVERInstanceAliasList;\n  InvalidDimensions = SQLSERVERInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'sqlserver',\n    action: 'DescribeDBInstances',\n    responseField: 'DBInstances',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(rawSet.map((item) => modifyDimensons(item)));\n  }\n  getRegions() {\n    return Promise.resolve(regionSupported.map(({ value }) => ({ value, text: t(value) })));\n  }\n  getFilterDropdown({ field, region }) {\n    if (field === 'Zone') {\n      const serviceInfo = GetServiceAPIInfo(region, 'cvm');\n      return this.doRequest(\n        {\n          url: this.url + serviceInfo.path,\n        },\n        serviceInfo.service,\n        { region, action: 'DescribeZones' }\n      ).then((response) => {\n        return _.filter(\n          _.map(response.ZoneSet || [], (item) => {\n            return { text: item.ZoneName, value: item.Zone, ZoneState: item.ZoneState, Zone: item.Zone };\n          }),\n          (item) => item.ZoneState === 'AVAILABLE'\n        );\n      });\n    }\n    return [];\n  }\n}\n","import {\n  TCAPLUSInstanceAliasList,\n  TCAPLUSInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { t } from '../../../locale';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = TCAPLUSInstanceAliasList;\n  InvalidDimensions = TCAPLUSInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'tcaplusdb',\n    action: 'DescribeTables',\n    responseField: 'TableInfos',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // 重写getRegion\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/tcaplusdb',\n      },\n      'tcaplusdb',\n      { action: 'DescribeRegions', region: 'ap-guangzhou' }\n    ).then((response) => {\n      return _.map(response.RegionInfos || [], (item) => {\n        return {\n          text: t(item.RegionName),\n          value: item.RegionName,\n        };\n      });\n    });\n  }\n}\n","import {\n  TDMQInstanceAliasList,\n  TDMQInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  regionSupported,\n  modifyDimensons,\n  queryMonitorExtraConfg,\n  keyInStorage,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport instanceStorage from '../../common/datasourceStorage';\nimport { t } from '../../../locale';\n\nexport default class TDMQDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = TDMQInstanceAliasList;\n  InvalidDimensions = TDMQInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  keyInStorage = keyInStorage;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'tdmq',\n    action: 'DescribeClusters',\n    responseField: 'ClusterSet',\n  };\n  extraActionMap = {\n    DescribeTopics: {\n      service: 'tdmq',\n      action: 'DescribeTopics',\n      responseField: 'TopicSets',\n      pickKey: 'topicName',\n    },\n    DescribeEnvironments: {\n      service: 'tdmq',\n      action: 'DescribeEnvironments',\n      responseField: 'EnvironmentSet',\n      pickKey: 'environmentId',\n    },\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // getFilterDropdown({ field }) {\n  //   return super.getRegions();\n  // }\n  getRegions() {\n    return Promise.resolve(regionSupported.map(({ value }) => ({ value, text: t(value) })));\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(rawSet.map((item) => modifyDimensons(item)));\n  }\n\n  async getConsumerList(params: any) {\n    const { region, action: act, payload } = params;\n    const { service, action, responseField } = this.extraActionMap[act];\n\n    const serviceInfo = GetServiceAPIInfo(region, service);\n\n    // 从分页数据，获取全量数据\n    const rs = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action }\n        );\n      },\n      payload,\n      responseField\n    );\n    // console.log({ rs });\n    return rs[0];\n  }\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    const payload: any = {\n      Limit: 100,\n      ClusterId: instance[this.templateQueryIdMap.instance],\n    };\n    if (Object.keys(this.extraActionMap).indexOf(action) !== -1) {\n      if (action === 'DescribeTopics') {\n        payload.EnvironmentId = this.getVariable(query['environmentid']);\n      }\n      const rs = await this.getConsumerList({ region, action, payload });\n      const { pickKey } = this.extraActionMap[action];\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[this.templateQueryIdMap[pickKey]];\n        return {\n          text: o[this.templateQueryIdMap[pickKey]],\n          value: o[this.templateQueryIdMap[pickKey]],\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage[pickKey], rs);\n      return result;\n    }\n    return [];\n  }\n}\n","import {\n  TDMQRABBITMQInstanceAliasList,\n  TDMQInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  regionSupported,\n  queryMonitorExtraConfg,\n  keyInStorage,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport instanceStorage from '../../common/datasourceStorage';\nimport { t } from '../../../locale';\n\nexport default class TDMQDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = TDMQRABBITMQInstanceAliasList;\n  InvalidDimensions = TDMQInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  keyInStorage = keyInStorage;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'tdmq',\n    action: 'DescribeRabbitMQVipInstances',\n    responseField: 'Instances',\n  };\n  extraActionMap = {\n    DescribeRabbitMQNodeList: {\n      service: 'tdmq',\n      action: 'DescribeRabbitMQNodeList',\n      responseField: 'NodeList',\n      pickKey: 'node',\n    },\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  getRegions() {\n    return Promise.resolve(regionSupported.map(({ value }) => ({ value, text: t(value) })));\n  }\n\n  async getConsumerList(params: any) {\n    const { region, action: act, payload } = params;\n    const { service, action, responseField } = this.extraActionMap[act];\n\n    const serviceInfo = GetServiceAPIInfo(region, service);\n\n    // 从分页数据，获取全量数据\n    const rs = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action }\n        );\n      },\n      payload,\n      responseField\n    );\n    return rs[0];\n  }\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    const payload: any = {\n      Limit: 100,\n      InstanceId: instance[this.templateQueryIdMap.instance],\n    };\n    if (Object.keys(this.extraActionMap).indexOf(action) !== -1) {\n      const rs = await this.getConsumerList({ region, action, payload });\n      const { pickKey } = this.extraActionMap[action];\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[this.templateQueryIdMap[pickKey]];\n        return {\n          text: o[this.templateQueryIdMap[pickKey]],\n          value: o[this.templateQueryIdMap[pickKey]],\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage[pickKey], rs);\n      return result;\n    }\n    return [];\n  }\n}\n","import {\n  TDMQROCKETMQInstanceAliasList,\n  TDMQInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  regionSupported,\n  queryMonitorExtraConfg,\n  keyInStorage,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport instanceStorage from '../../common/datasourceStorage';\nimport { t } from '../../../locale';\n\nexport default class TDMQDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = TDMQROCKETMQInstanceAliasList;\n  InvalidDimensions = TDMQInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  keyInStorage = keyInStorage;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'tdmq',\n    action: 'DescribeRocketMQClusters',\n    responseField: 'ClusterList',\n    interceptor: {\n      response: (result) =>\n        _.map(result, (item) => ({\n          ...item,\n          ClusterId: _.get(item, 'Info.ClusterId', ''),\n          ClusterName: _.get(item, 'Info.ClusterName', ''),\n        })),\n    },\n  };\n  extraActionMap = {\n    DescribeRocketMQNamespaces: {\n      service: 'tdmq',\n      action: 'DescribeRocketMQNamespaces',\n      responseField: 'Namespaces',\n      pickKey: 'namespace',\n    },\n    DescribeRocketMQGroups: {\n      service: 'tdmq',\n      action: 'DescribeRocketMQGroups',\n      responseField: 'Groups',\n      pickKey: 'group',\n    },\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.filter((item) => !item.Dimensions?.[0]?.Dimensions?.includes('rmqcluster'));\n  }\n\n  getRegions() {\n    return Promise.resolve(regionSupported.map(({ value }) => ({ value, text: t(value) })));\n  }\n\n  async getConsumerList(params: any) {\n    const { region, action: act, payload } = params;\n    const { service, action, responseField } = this.extraActionMap[act];\n\n    const serviceInfo = GetServiceAPIInfo(region, service);\n\n    // 从分页数据，获取全量数据\n    const rs = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action }\n        );\n      },\n      payload,\n      responseField\n    );\n    return rs[0];\n  }\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    const payload: any = {\n      Limit: 100,\n      ClusterId: instance[this.templateQueryIdMap.instance],\n    };\n    if (Object.keys(this.extraActionMap).indexOf(action) !== -1) {\n      if (action === 'DescribeRocketMQGroups') {\n        payload.NamespaceId = this.getVariable(query['clusternamespace']);\n      }\n      const rs = await this.getConsumerList({ region, action, payload });\n      const { pickKey } = this.extraActionMap[action];\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[this.templateQueryIdMap[pickKey]];\n        return {\n          text: o[this.templateQueryIdMap[pickKey]],\n          value: o[this.templateQueryIdMap[pickKey]],\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage[pickKey], rs);\n      return result;\n    }\n    return [];\n  }\n}\n","import { map, flatten, reduce, isEmpty, filter, split, sortBy, findIndex, trim, isArray, isString } from 'lodash';\nimport { GetServiceAPIInfo, ReplaceVariable } from '../../common/constants';\nimport { getTimeShiftInMs } from '../../common/utils';\nimport { BaseDatasource } from '../_base/datasource';\n\nconst variableToArray = (variable) => {\n  if (isEmpty(variable)) {\n    return [];\n  }\n  if (isArray(variable)) {\n    return variable;\n  }\n  if (isString(variable)) {\n    return split(variable, ',').map((item) => trim(item));\n  }\n  return [];\n};\n\nexport default class TKEDatasource extends BaseDatasource {\n  InstanceAliasList = ['ClusterId', 'ClusterName'];\n  templateQueryIdMap = {\n    instance: 'ClusterId',\n  };\n  InvalidDimensions = {\n    tke_cluster_instance_id: 'ClusterId',\n  };\n  InstanceReqConfig = {\n    service: 'tke',\n    action: 'DescribeClusters',\n    responseField: 'Clusters',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  getMonitorData(params: any, region: any, instances: any, target: any, options: any) {\n    const serviceInfo = GetServiceAPIInfo(region, 'monitor');\n    const timeshift = getTimeShiftInMs(target.timeshift);\n    const conditions = reduce(\n      target.conditions,\n      (prev, item) => {\n        if (isEmpty(item.Key) || isEmpty(item.Operator) || isEmpty(item.Value)) {\n          return prev;\n        }\n        return [\n          ...filter(prev, (e) => e.Key !== item.Key),\n          {\n            Key: ReplaceVariable(this.templateSrv, options.scopedVars, item.Key, false),\n            Operator: ReplaceVariable(this.templateSrv, options.scopedVars, item.Operator, false),\n            Value: variableToArray(ReplaceVariable(this.templateSrv, options.scopedVars, item.Value, true)),\n          },\n        ];\n      },\n      [{ Key: 'tke_cluster_instance_id', Operator: '=', Value: instances.map((item) => item['ClusterId']) }]\n    );\n\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: {\n          Period: params.Period,\n          MetricNames: [params.MetricName],\n          Module: 'monitor',\n          Namespace: 'QCE/TKE',\n          EndTime: params.EndTime,\n          StartTime: params.StartTime,\n          Conditions: conditions,\n          GroupBys: variableToArray(ReplaceVariable(this.templateSrv, options.scopedVars, target.groupBys, true)),\n        },\n      },\n      serviceInfo.service,\n      { action: 'DescribeStatisticData', region }\n    ).then((response) => {\n      return flatten(\n        map(response.Data, (data) => {\n          return map(data.Points, (point) => {\n            const dimensionSort = sortBy(point.Dimensions, ['Name']);\n            const dimensionString = [\n              ...dimensionSort.splice(findIndex(dimensionSort, { Name: 'tke_cluster_instance_id' }), 1),\n              ...dimensionSort,\n            ]\n              .map((dimension) => dimension.Value)\n              .join(' - ');\n            const timeshiftString = timeshift > 0 ? `_${target.timeshift}` : '';\n            return {\n              target: `${data.MetricName} - ${dimensionString}${timeshiftString}`,\n              datapoints: map(point.Values, (value) => [value.Value, value.Timestamp * 1000 + timeshift]),\n            };\n          });\n        })\n      );\n    });\n  }\n}\n","import _ from 'lodash';\nimport { TSFInvalidDemensions, TSFInstanceAliasList, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class TSFDatasource extends BaseDatasource {\n  Namespace = 'QCE/TSF';\n  InstanceAliasList = TSFInstanceAliasList;\n  InvalidDimensions = TSFInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'tsf',\n    action: 'DescribeApplications',\n    responseField: 'Content',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import {\n  VCLBInstanceAliasList,\n  VCLBInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  clbNamespaceMap,\n  regionSupported,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { t } from '../../../locale';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = VCLBInstanceAliasList;\n  InvalidDimensions = VCLBInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'clb',\n    action: 'DescribeLoadBalancers',\n    responseField: 'LoadBalancerSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  getRegions() {\n    return Promise.resolve(regionSupported.map(({ value }) => ({ value, text: t(value) })));\n  }\n  async getAllMetrics(region: string) {\n    const serviceInfo = GetServiceAPIInfo(region, 'monitor');\n    const { MetricSet: public_metrics } = await this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: {\n          Namespace: clbNamespaceMap.public,\n        },\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeBaseMetrics' }\n    );\n    const { MetricSet: private_metrics } = await this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: {\n          Namespace: clbNamespaceMap.private,\n        },\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeBaseMetrics' }\n    );\n    const res = Object.values(_.keyBy(_.concat(private_metrics, public_metrics), 'MetricName'));\n    return res.map((t) => modifyDimensons(t));\n  }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await this.getAllMetrics(region);\n    return _.compact(rawSet);\n  }\n}\n","import { VBCInstanceAliasList, VBCInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = VBCInstanceAliasList;\n  InvalidDimensions = VBCInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeCcns',\n    responseField: 'CcnSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  getFilterDropdown({ field }) {\n    return super.getRegions();\n  }\n}\n","import {\n  VPCNETDETECTInstanceAliasList,\n  VPCNETInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = VPCNETDETECTInstanceAliasList;\n  InvalidDimensions = VPCNETInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeNetDetects',\n    responseField: 'NetDetectSet',\n    interceptor: {\n      // response: (data: unknown[]) =>[\n      //   {\n      //     \"NetDetectId\": \"netd-12345678\",\n      //   },\n      // ],\n    },\n  };\n  MetricReqConfig = {\n    resultFilter: modifyDimensons,\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import { VPNGWInstanceAliasList, VPNGWInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = VPNGWInstanceAliasList;\n  InvalidDimensions = VPNGWInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeVpnGateways',\n    responseField: 'VpnGatewaySet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  getFilterDropdown({ field, region }) {\n    if (field === 'zone') {\n      const serviceInfo = GetServiceAPIInfo(region, 'cvm');\n      return this.doRequest(\n        {\n          url: this.url + serviceInfo.path,\n        },\n        serviceInfo.service,\n        { region, action: 'DescribeZones' }\n      ).then((response) => {\n        return _.filter(\n          _.map(response.ZoneSet || [], (item) => {\n            return { text: item.ZoneName, value: item.Zone, ZoneState: item.ZoneState, Zone: item.Zone };\n          }),\n          (item) => item.ZoneState === 'AVAILABLE'\n        );\n      });\n    }\n    return [];\n  }\n}\n","import { VPNXInstanceAliasList, VPNXInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = VPNXInstanceAliasList;\n  InvalidDimensions = VPNXInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeVpnConnections',\n    responseField: 'VpnConnectionSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import _ from 'lodash';\nimport {\n  WAFInstanceAliasList,\n  WAFInvalidDemensions,\n  templateQueryIdMap,\n  namespace,\n  regionSupported,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport { t } from '../../../locale';\n\nexport default class CDNDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = WAFInstanceAliasList;\n  InvalidDimensions = WAFInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    // service: 'waf',\n    action: 'DescribeDomains',\n    responseField: 'Domains',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  getRegions() {\n    return Promise.resolve(regionSupported.map(({ value }) => ({ value, text: t(value) })));\n  }\n  async metricFindQuery(query: any, regex?: string) {\n    return super.metricFindQuery({ ...query, ...{ region: 'ap-guangzhou' } }, regex);\n  }\n\n  getOwnDimenion(dimensionObject: any) {\n    return {\n      ...dimensionObject,\n      edition: {\n        Name: 'edition',\n        Value: 0,\n      },\n    };\n  }\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__125__;","import coreModule from 'grafana/app/core/core_module';\nimport { APIGATEWAYFilterFieldsDescriptor, templateQueryIdMap, queryEditorName, namespace } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.APIGATEWAYFilterFieldsDescriptor = APIGATEWAYFilterFieldsDescriptor;\n      $scope.namespace = namespace;\n    };\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      const service = GetServiceFromNamespace($scope.namespace);\n      // console.log({namespace, service});\n      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance)[templateQueryIdMap.instance];\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n    $scope.getExtraDropdown = async (target) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      const instanceId = $scope.getInstanceId();\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const rs = await $scope.datasource.getServiceFn(service, 'getEnvironmentNameList')({ region, instanceId });\n\n      const result = rs.map((o) => {\n        return {\n          text: o.EnvironmentName,\n          value: JSON.stringify(o),\n        };\n      });\n      return result;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/45073\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in APIGATEWAYFilterFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputNumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />    \n      <multi-condition\n        ng-if=\"field.type === 'inputNumberMulti'\"\n        type=\"'inputNumber'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        maxNum=\"field.max\"\n        minNum=\"field.min\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputMulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- 起始区域 目的区域等 -->\n  <div>\n    <div class=\"gf-form-inline\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">EnvironmentName</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target.EnvironmentName\" allow-custom=\"true\" lookup-text=\"true\"  get-options=\"getExtraDropdown(target)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive(queryEditorName, sQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { BWPFilterFieldsDescriptor } from './query_def';\n\nexport class BWPQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.BWPFilterFieldsDescriptor = BWPFilterFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        case 'zone':\n          return $scope.getZones();\n        default:\n          return [];\n      }\n    };\n\n    $scope.getZones = () => {\n      if (!$scope.region) {\n        return [];\n      }\n      return $scope.datasource.getZones('cvm', $scope.region);\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/213/15728\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        单次请求返回的数量，默认为20，最小值为1，最大值为100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      BandwidthPackageIds\n      <info-popover mode=\"right-normal\">\n        带宽包唯一ID列表，参数不支持同时指定 BandwidthPackageIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n      switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n  <multi-condition type=\"'input'\" max-cond=\"100\" value=\"target.queries.BandwidthPackageIds\" on-change=\"onChange()\">\n  </multi-condition>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      Filters\n      <info-popover mode=\"right-normal\">\n        过滤条件，每次请求的 Filters 的上限为10，Filter.Values 的上限为5。参数不支持同时指定 BandwidthPackageIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n      on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n  <div class=\"gf-form-inline\" ng-repeat=\"field in BWPFilterFieldsDescriptor\">\n    <label class=\"gf-form-label width-14\">\n      {{ field.key }}\n      <info-popover mode=\"right-normal\">\n        {{ field.cnDescriptor }}\n        <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n      </info-popover>\n    </label>\n    <multi-condition\n      ng-if=\"field.type === 'dropdownmulti'\"\n      type=\"'dropdown'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      get-options=\"getDropdown(field.key)\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputNumbermulti'\"\n      type=\"'inputNumber'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      maxNum=\"field.max\"\n      minNum=\"field.min\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputmulti'\"\n      type=\"'input'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <custom-select-dropdown\n      ng-if=\"field.type === 'select'\"\n      value=\"target.queries.Filters[field.key]\"\n      options=\"field.list\"\n      multiple=\"true\"\n      on-change=\"onChange()\"\n    ></custom-select-dropdown>\n  </div>\n</div>\n\n</div>\n`;\n\nexport function bwpQuery() {\n  return {\n    template: template,\n    controller: BWPQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('bwpQuery', bwpQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { CDBFieldsDescriptor } from './query_def';\n\nexport class CDBQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.CDBFieldsDescriptor = CDBFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        case 'ZoneIds':\n          return $scope.getZones();\n        default:\n          return [];\n      }\n    };\n\n    $scope.getZones = () => {\n      if (!$scope.region) {\n        return [];\n      }\n      return $scope.datasource.getZones('cdb', $scope.region);\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/236/15872\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in CDBFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n`;\n\nexport function cdbQuery() {\n  return {\n    template: template,\n    controller: CDBQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('cdbQuery', cdbQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { CDNFilterFieldsDescriptor } from './query_def';\n\nexport class CDNQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.CDNFilterFieldsDescriptor = CDNFilterFieldsDescriptor;\n    };\n\n    // $scope.onChecked = (srcField, dstField) => {\n    //   if ($scope.target.queries[srcField] === true) {\n    //     $scope.target.queries[dstField] = false;\n    //   }\n    //   $scope.onChange();\n    // };\n\n    // $scope.getDropdown = (field) => {\n    //   switch (field) {\n    //     case 'zone':\n    //       return $scope.getZones();\n    //     default:\n    //       return [];\n    //   }\n    // };\n\n    // $scope.getZones = () => {\n    //   if (!$scope.region) {\n    //     return [];\n    //   }\n    //   return $scope.datasource.getZones('cvm', $scope.region);\n    // };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/228/41118\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        单次请求返回的数量，默认为20，最小值为1，最大值为100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\" ng-repeat=\"field in CDNFilterFieldsDescriptor\">\n<label class=\"gf-form-label width-14\">\n  {{ field.key }}\n  <info-popover mode=\"right-normal\">\n    {{ field.cnDescriptor }}\n    <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n  </info-popover>\n</label>\n<multi-condition\n  ng-if=\"field.type === 'inputNumbermulti'\"\n  type=\"'inputNumber'\"\n  max-cond=\"5\"\n  value=\"target.queries.Filters[field.key]\"\n  maxNum=\"field.max\"\n  minNum=\"field.min\"\n  on-change=\"onChange()\"\n></multi-condition>\n<multi-condition\n  ng-if=\"field.type === 'inputmulti'\"\n  type=\"'input'\"\n  max-cond=\"5\"\n  value=\"target.queries.Filters[field.key]\"\n  on-change=\"onChange()\"\n></multi-condition>\n<custom-select-dropdown\n  ng-if=\"field.type === 'select'\"\n  value=\"target.queries.Filters[field.key]\"\n  options=\"field.list\"\n  multiple=\"true\"\n  on-change=\"onChange()\"\n></custom-select-dropdown>\n</div>\n\n</div>\n`;\n\nexport function cdnQuery() {\n  return {\n    template: template,\n    controller: CDNQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('cdnQuery', cdnQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { CDNPROVINCEFilterFieldsDescriptor, queryEditorName, namespace } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nconst ExtraFields = [\n  {\n    label: 'Isp',\n    field: 'isp',\n  },\n  {\n    label: 'Province',\n    field: 'district',\n  },\n];\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.CDNPROVINCEFilterFieldsDescriptor = CDNPROVINCEFilterFieldsDescriptor;\n      $scope.ExtraFields = ExtraFields;\n      $scope.namespace = namespace;\n    };\n\n    $scope.getExtraDropdown = async (target, field) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const rs = await $scope.datasource.getServiceFn(service, 'getConsumerList')({ region, field });\n      return rs;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Domains are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/228/41118\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\" ng-repeat=\"field in CDNPROVINCEFilterFieldsDescriptor\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <input\n          ng-if=\"field.type === 'inputNumber'\"\n          style=\"margin-right:2px\"\n          type=\"number\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n          ng-min=\"field.min\"\n          ng-max=\"field.max\"\n        />\n        <input\n          ng-if=\"field.type === 'input'\"\n          style=\"margin-right:2px\"\n          type=\"text\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n        />    \n        <multi-condition\n          ng-if=\"field.type === 'inputNumberMulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputMulti'\"\n          type=\"'input'\"\n          value=\"target.queries[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries[field.key]\"\n          options=\"field.list\"\n          multiple=\"field.multiple || false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n\n<!-- 起始区域 目的区域等 -->\n  <div>\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in ExtraFields\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(target, extra.field)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive(queryEditorName, sQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { CFSQueryDescriptor } from './query_def';\n\nexport class SCFQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.CFSQueryDescriptor = CFSQueryDescriptor;\n    };\n\n    $scope.getVersions = async (target) => {\n      // console.log(2222);\n\n      // return [{ text: 1, value: 1 }];\n      // console.log(target, 'target');\n      const { instance, region } = target;\n      const fetcher = $scope.datasource.getServiceFn('scf', 'getVersions');\n      if (!instance || !region) return [];\n\n      return fetcher(region, { FunctionName: JSON.parse(instance).FunctionName }).then((res) => {\n        // console.log(res, 'res');\n\n        return res;\n      });\n    };\n    // $scope.onChecked = (srcField, dstField) => {\n    //   if ($scope.target.queries[srcField] === true) {\n    //     $scope.target.queries[dstField] = false;\n    //   }\n    //   $scope.onChange();\n    // };\n\n    // $scope.getDropdown = (field) => {\n    //   switch (field) {\n    //     case 'zone':\n    //       return $scope.getZones();\n    //     default:\n    //       return [];\n    //   }\n    // };\n\n    // $scope.getZones = () => {\n    //   if (!$scope.region) {\n    //     return [];\n    //   }\n    //   return $scope.datasource.getZones('cvm', $scope.region);\n    // };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n  FileSystems are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/582/38170\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in CFSQueryDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n  </div>\n`;\n\nexport function scfQuery() {\n  return {\n    template: template,\n    controller: SCFQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\ncoreModule.directive('cfsQuery', scfQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { CKAFKAQueryDescriptor, templateQueryIdMap } from './query_def';\nimport { isTargetEqual } from '../../common/utils';\n\nconst ExtraFields = [\n  {\n    label: 'ConsumerGroup',\n    field: 'consumerGroup',\n  },\n  {\n    label: 'TopicId',\n    field: 'topicId',\n  },\n  {\n    label: 'Partition',\n    field: 'partition',\n  },\n];\n\nexport class CKAFKAQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.CKAFKAQueryDescriptor = CKAFKAQueryDescriptor;\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        default:\n          return [];\n      }\n    };\n    $scope.onInstanceChange = (n, o) => {\n      if(isTargetEqual(n,o,'LoadBalancerId')) return;\n      $scope.target.consumerGroup = '';\n      $scope.target.topicId = '';\n      $scope.target.topicName = '';\n      $scope.target.partition = '';\n    };\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}));\n    };\n\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      instance = $scope.datasource.getServiceFn('ckafka', 'getVariable')(instance);\n      if (Array.isArray(instance)) instance = instance[0];\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance).InstanceId;\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n\n    $scope.getExtraDropdown = async (target, field) => {\n      const InstanceId = $scope.getInstanceId();\n      const fetcher = $scope.datasource.getServiceFn('ckafka', 'getConsumerGroups');\n      const region = $scope.datasource.getServiceFn('ckafka', 'getVariable')(target.region);\n      const res = await fetcher(region, { InstanceId, groupname: target.consumerGroup, topicid: target.topicId });\n\n      const { TopicList, GroupList, PartitionList } = res;\n      const data = {\n        GroupList: GroupList.map((group) => {\n          group._InstanceAliasValue = group.GroupName;\n          return {\n            text: group.GroupName,\n            value: JSON.stringify(group),\n          };\n        }),\n        TopicList: TopicList.map((topic) => {\n          topic._InstanceAliasValue = topic[templateQueryIdMap.topicId];\n          return {\n            text: topic[templateQueryIdMap.topicId],\n            value: JSON.stringify(topic), // 为了获取多维度的值，这里完全可以使用JSON.stringify()将整个对象放进去\n          };\n        }),\n        PartitionList: PartitionList.map((par) => {\n          par._InstanceAliasValue = par[templateQueryIdMap.partition];\n          return {\n            text: String(par[templateQueryIdMap.partition]),\n            value: JSON.stringify(par),\n          };\n        }),\n      };\n\n      switch (field) {\n        case 'consumerGroup':\n          return data.GroupList;\n        case 'topicId':\n          return data.TopicList;\n        case 'partition':\n          return data.PartitionList;\n      }\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/583/18582\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in CKAFKAQueryDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- 主题，消费分组，分区 -->\n  <div ng-if=\"target.instance\">\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getExtraDropdown(target, extra.field)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  </div>\n`;\n\nexport function scfQuery() {\n  return {\n    template: template,\n    controller: CKAFKAQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n      instance: '=',\n    },\n    link: (scope, element, attrs) => {\n      scope.$watch('target.instance', (newValue, oldValue) => {\n        scope.onInstanceChange?.(newValue, oldValue);\n      });\n    },\n  };\n}\ncoreModule.directive('ckafkaQuery', scfQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { get, chain } from 'lodash';\nimport { LOADBALANCEFieldsDescriptor, templateQueryIdMap, namespace } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\nimport { isTargetEqual } from '../../common/utils';\n\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.LOADBALANCEFieldsDescriptor = LOADBALANCEFieldsDescriptor;\n      $scope.serversList = [];\n    };\n    $scope.onFieldChange = (field) => {\n      $scope.onRefresh();\n    };\n    $scope.onInstanceChange = (n, o) => {\n      if(isTargetEqual(n,o,'InstanceId')) return;\n      $scope.target.listener = '';\n      $scope.target.servers = '';\n      $scope.target.serverPort = '';\n    };\n    $scope.getVariableId = (data, type) => {\n      let variableData = data;\n      const service = GetServiceFromNamespace(namespace);\n\n      variableData = $scope.datasource.getServiceFn(service, 'getVariable')(variableData);\n      if (!variableData) {\n        return '';\n      }\n      try {\n        variableData = JSON.parse(variableData)[templateQueryIdMap[type]];\n      } catch (error) {\n        // console.log();\n      }\n      return variableData;\n    };\n    $scope.getExtraDropdown = async (target) => {\n      const { instance } = $scope.target;\n      const service = GetServiceFromNamespace(namespace);\n      const instanceId = $scope.getVariableId(instance, 'instance');\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const rs = await $scope.datasource.getServiceFn(service, 'getListenerList')({ region, instanceId });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[templateQueryIdMap.listener];\n        return {\n          text: o[templateQueryIdMap.listener],\n          value: JSON.stringify(o),\n        };\n      });\n      return result;\n    };\n    $scope.getServersDropdown = async (target) => {\n      const { instance, listener } = $scope.target;\n      const service = GetServiceFromNamespace(namespace);\n      const instanceId = $scope.getVariableId(instance, 'instance');\n      const listenerId = $scope.getVariableId(listener, 'listener');\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const serversList = await $scope.datasource.getServiceFn(\n        service,\n        'getServerList'\n      )({ region, instanceId, listenerId });\n      $scope.serversList = serversList;\n      const res = chain(serversList)\n        .map((item) => {\n          item._InstanceAliasValue = get(item, 'PrivateIpAddresses.0');\n          return {\n            text: get(item, 'PrivateIpAddresses.0'),\n            value: JSON.stringify(item),\n          };\n        })\n        .uniqBy('text')\n        .value();\n      return res;\n    };\n    $scope.getServerPortDropdown = async (target) => {\n      const { servers } = $scope.target;\n      let serverPortList: any[] = [];\n      try {\n        const serversSource = JSON.parse(servers);\n        serverPortList = chain($scope.serversList)\n          .filter((item) => get(serversSource, 'PrivateIpAddresses.0') === get(item, 'PrivateIpAddresses.0'))\n          .map((item) => {\n            item._InstanceAliasValue = get(item, 'Port');\n            return {\n              text: `${get(item, 'Port')}`,\n              value: JSON.stringify(item),\n            };\n          })\n          .value();\n      } catch (error) {}\n      return serverPortList;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Functions are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/214/30685\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\" ng-repeat=\"field in LOADBALANCEFieldsDescriptor\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <input\n          ng-if=\"field.type === 'inputNumber'\"\n          style=\"margin-right:2px\"\n          type=\"number\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n          ng-min=\"field.min\"\n          ng-max=\"field.max\"\n        />\n        <input\n          ng-if=\"field.type === 'input'\"\n          style=\"margin-right:2px\"\n          type=\"text\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n        />\n        <multi-condition\n          ng-if=\"field.type === 'inputNumberMulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputMulti'\"\n          type=\"'input'\"\n          value=\"target.queries[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries[field.key]\"\n          options=\"field.list\"\n          multiple=\"field.multiple || false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!--Listener维度部分-->\n<div class=\"gf-form-inline\" ng-if=\"target.instance\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label query-keyword width-9\">\n      Listeners\n      <info-popover mode=\"right-normal\">\n        可不选择监听器，这时通过实例维度查询监控数据\n      </info-popover>\n    </label>\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n      <gf-form-dropdown model=\"target.listener\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getExtraDropdown(target)\"\n        on-change=\"onRefresh()\" css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n  </div>\n</div>\n<div class=\"gf-form-inline\" ng-if=\"target.listener && namespace !== '${namespace}'\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label query-keyword width-9\">Servers</label>\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n      <gf-form-dropdown model=\"target.servers\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getServersDropdown(target)\"\n        on-change=\"onRefresh()\" css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n  </div>\n</div>\n<div class=\"gf-form-inline\" ng-if=\"target.servers && namespace !== '${namespace}'\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label query-keyword width-9\">ServerPort</label>\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n      <gf-form-dropdown model=\"target.serverPort\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getServerPortDropdown(target)\"\n        on-change=\"onRefresh()\" css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n  </div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      namespace: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n    link: (scope, element, attrs) => {\n      scope.$watch('target.instance', (newValue, oldValue) => {\n        scope.onInstanceChange?.(newValue, oldValue);\n      });\n    },\n  };\n}\ncoreModule.directive('clbQuery', sQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { CLSFilterFieldsDescriptor, queryEditorName } from './query_def';\n\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.GSEFilterFieldsDescriptor = CLSFilterFieldsDescriptor;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/45073\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in GSEFilterFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputNumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />    \n      <multi-condition\n        ng-if=\"field.type === 'inputNumberMulti'\"\n        type=\"'inputNumber'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        maxNum=\"field.max\"\n        minNum=\"field.min\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputMulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- 起始区域 目的区域等 -->\n<div>\n  <div class=\"gf-form-inline\" >\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label query-keyword width-9\">uin</label>\n      <input\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.uin\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />    \n    </div>\n  </div>\n</div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive(queryEditorName, sQuery);\n","import createQuery from '../_base/query';\nimport { InstanceQueryDescriptor } from './query_def';\n\ncreateQuery('cmqQuery', {\n  fieldDescriptor: InstanceQueryDescriptor,\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/406/42624',\n  namespace: 'QCE/CMQ',\n});\n","import coreModule from 'grafana/app/core/core_module';\nimport { InstanceQueryDescriptor } from './query_def';\n\nconst ExtraFields = [\n  {\n    label: 'Subscription(订阅)',\n    field: 'subscriptionId',\n  },\n];\n\nexport class CmqTopicQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.InstanceQueryDescriptor = InstanceQueryDescriptor;\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        default:\n          return [];\n      }\n    };\n\n    // 各个实例下的订阅，由于不想每次都重复发请求，所以这里做了一层缓存，数据结构为{ [instanceId]: {   } }\n    $scope.cacheMap = {};\n\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}));\n    };\n\n    $scope.getTopicName = () => {\n      let { instance } = $scope.target;\n      instance = $scope.datasource.getServiceFn('cmqTopic', 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance).TopicName;\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n\n    $scope.onExtraFieldChange = (field) => {\n      $scope.onRefresh();\n    };\n\n    $scope.getExtraDropdown = async (target, field) => {\n      if (field === 'subscriptionId') {\n        const TopicName = $scope.getTopicName();\n        let data = $scope.cacheMap[TopicName];\n\n        if (!data) {\n          const region = $scope.datasource.getServiceFn('cmqTopic', 'getVariable')(target.region);\n          const fetcher = $scope.datasource.getServiceFn('cmqTopic', 'fetchAllSubscription');\n          const datas = await fetcher(region, { TopicName });\n          data = datas.map((item) => {\n            item._InstanceAliasValue = item.SubscriptionId;\n            return { text: item.SubscriptionId, value: JSON.stringify(item) };\n          });\n        }\n\n        // 缓存\n        $scope.cacheMap[TopicName] = data;\n        return data;\n      }\n      return [];\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/406/42637\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in InstanceQueryDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- 主题的ui -->\n  <div ng-if=\"target.instance\">\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"true\" get-options=\"getExtraDropdown(target, extra.field)\"\n            on-change=\"onExtraFieldChange(extra.field)\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  </div>\n`;\n\nexport function scfQuery() {\n  return {\n    template: template,\n    controller: CmqTopicQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive('cmqTopicQuery', scfQuery);\n","import _ from 'lodash';\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\n// 与名称挂钩的变量\nconst InstanceAliasList = ['BucketName'];\nexport { InstanceAliasList, GetInstanceQueryParams };\n\n// 界面状态模型，default\nexport default {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'BucketName',\n  queries: {},\n};\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { CVMFilterFieldsDescriptor } from './query_def';\n\nexport class CVMQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.CVMFilterFieldsDescriptor = CVMFilterFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        case 'zone':\n          return $scope.getZones();\n        default:\n          return [];\n      }\n    };\n\n    $scope.getZones = () => {\n      if (!$scope.region) {\n        return [];\n      }\n      return $scope.datasource.getZones('cvm', $scope.region);\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/213/15728\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        单次请求返回的数量，默认为20，最小值为1，最大值为100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      InstanceIds\n      <info-popover mode=\"right-normal\">\n        实例 ID，每次请求的实例的上限为100，参数不支持同时指定 InstanceIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n      switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n  <multi-condition type=\"'input'\" max-cond=\"100\" value=\"target.queries.InstanceIds\" on-change=\"onChange()\">\n  </multi-condition>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      Filters\n      <info-popover mode=\"right-normal\">\n        过滤条件，每次请求的 Filters 的上限为10，Filter.Values 的上限为5。参数不支持同时指定 InstanceIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n      on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n  <div class=\"gf-form-inline\" ng-repeat=\"field in CVMFilterFieldsDescriptor\">\n    <label class=\"gf-form-label width-14\">\n      {{ field.key }}\n      <info-popover mode=\"right-normal\">\n        {{ field.cnDescriptor }}\n        <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n      </info-popover>\n    </label>\n    <multi-condition\n      ng-if=\"field.type === 'dropdownmulti'\"\n      type=\"'dropdown'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      get-options=\"getDropdown(field.key)\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputNumbermulti'\"\n      type=\"'inputNumber'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      maxNum=\"field.max\"\n      minNum=\"field.min\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputmulti'\"\n      type=\"'input'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <custom-select-dropdown\n      ng-if=\"field.type === 'select'\"\n      value=\"target.queries.Filters[field.key]\"\n      options=\"field.list\"\n      multiple=\"true\"\n      on-change=\"onChange()\"\n    ></custom-select-dropdown>\n  </div>\n</div>\n\n</div>\n`;\n\nexport function cvmQuery() {\n  return {\n    template: template,\n    controller: CVMQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('cvmQuery', cvmQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { DCDBFilterFieldsDescriptor, queryEditorName, namespace, templateQueryIdMap } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nconst ExtraFields = [\n  {\n    label: 'nodeid',\n    field: 'NodeId',\n    action: 'DescribeDCDBInstanceNodeInfo',\n  },\n  {\n    label: 'shardid',\n    field: 'ShardId',\n    action: 'DescribeDCDBShards',\n  },\n];\nconst dropdownTextConfig = {\n  DescribeDCDBInstanceNodeInfo: 'NodeId',\n  DescribeDCDBShards: 'ShardInstanceId',\n};\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.DCDBFilterFieldsDescriptor = DCDBFilterFieldsDescriptor;\n      $scope.ExtraFields = ExtraFields;\n      $scope.namespace = namespace;\n    };\n\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      const service = GetServiceFromNamespace($scope.namespace);\n      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance)[templateQueryIdMap.instance];\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}) || item.label in ($scope.dims ?? {}));\n    };\n    $scope.getExtraDropdown = async (target, action) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const instanceId = $scope.getInstanceId();\n      const payload: any = {\n        InstanceId: instanceId,\n        Limit: 100,\n      };\n      const rs = await $scope.datasource.getServiceFn(service, 'getConsumerList')({ region, action, payload });\n\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[templateQueryIdMap[dropdownTextConfig[action]]];\n        return {\n          text: o[templateQueryIdMap[dropdownTextConfig[action]]],\n          value: JSON.stringify(o),\n        };\n      });\n      return result;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Functions are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/50388\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\" ng-repeat=\"field in DCDBFilterFieldsDescriptor\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <input\n          ng-if=\"field.type === 'inputNumber'\"\n          style=\"margin-right:2px\"\n          type=\"number\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n          ng-min=\"field.min\"\n          ng-max=\"field.max\"\n        />\n        <input\n          ng-if=\"field.type === 'input'\"\n          style=\"margin-right:2px\"\n          type=\"text\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n        />    \n        <multi-condition\n          ng-if=\"field.type === 'inputNumberMulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputMulti'\"\n          type=\"'input'\"\n          value=\"target.queries[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries[field.key]\"\n          options=\"field.list\"\n          multiple=\"field.multiple || false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n\n<!-- 起始区域 目的区域等 -->\n  <div>\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(target, extra.action)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive(queryEditorName, sQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { ECMBLOCKSTORAGEFilterFieldsDescriptor, queryEditorName, namespace, templateQueryIdMap } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nconst ExtraFields = [\n  // {\n  //   label: 'nodeid',\n  //   field: 'NodeId',\n  //   action: 'DescribeInstanceNodeInfo',\n  // },\n  {\n    label: 'diskId',\n    field: 'diskId',\n  },\n];\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.ECMBLOCKSTORAGEFilterFieldsDescriptor = ECMBLOCKSTORAGEFilterFieldsDescriptor;\n      $scope.ExtraFields = ExtraFields;\n      $scope.namespace = namespace;\n    };\n\n    // $scope.getInstanceId = () => {\n    //   let { instance } = $scope.target;\n    //   const service = GetServiceFromNamespace($scope.namespace);\n    //   instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n    //   if (!instance) {\n    //     return '';\n    //   }\n    //   try {\n    //     instance = JSON.parse(instance)[templateQueryIdMap.instance];\n    //   } catch (error) {\n    //     console.log();\n    //   }\n    //   return instance;\n    // };\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}) || item.label in ($scope.dims ?? {}));\n    };\n    $scope.getExtraDropdown = (target, action) => {\n      let { instance } = target;\n      const service = GetServiceFromNamespace($scope.namespace);\n      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n      try {\n        instance = JSON.parse(instance);\n        const { DataDisks: dataDisks } = instance;\n        return dataDisks.map((o) => {\n          o._InstanceAliasValue = o[templateQueryIdMap.diskId];\n          return {\n            text: o[templateQueryIdMap.diskId],\n            value: JSON.stringify(o),\n          };\n        });\n      } catch (error) {\n        // console.log('instance error', instance);\n        const payload: any = {\n          InstanceId: instance,\n        };\n        const rs = $scope.datasource.getServiceFn(service, 'getDiskList')({ payload });\n        const result = rs.map((o) => {\n          return {\n            text: o[templateQueryIdMap.diskId],\n            value: JSON.stringify(o),\n          };\n        });\n        return result;\n      }\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Functions are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/50388\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\" ng-repeat=\"field in ECMBLOCKSTORAGEFilterFieldsDescriptor\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <input\n          ng-if=\"field.type === 'inputNumber'\"\n          style=\"margin-right:2px\"\n          type=\"number\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n          ng-min=\"field.min\"\n          ng-max=\"field.max\"\n        />\n        <input\n          ng-if=\"field.type === 'input'\"\n          style=\"margin-right:2px\"\n          type=\"text\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n        />    \n        <multi-condition\n          ng-if=\"field.type === 'inputNumberMulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputMulti'\"\n          type=\"'input'\"\n          value=\"target.queries[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries[field.key]\"\n          options=\"field.list\"\n          multiple=\"field.multiple || false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n\n<!-- 起始区域 目的区域等 -->\n  <div>\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(target)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive(queryEditorName, sQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { GSEFilterFieldsDescriptor, templateQueryIdMap, queryEditorName, namespace } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nconst ExtraFields = [\n  {\n    label: 'fleetId',\n    field: 'FleetId',\n  },\n  {\n    label: 'queueName',\n    field: 'Name',\n  },\n];\nconst actionMaps = {\n  FleetId: 'getFleetList',\n  Name: 'getQueueNameList',\n};\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.GSEFilterFieldsDescriptor = GSEFilterFieldsDescriptor;\n      $scope.namespace = namespace;\n    };\n\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}));\n    };\n\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      const service = GetServiceFromNamespace($scope.namespace);\n      // console.log({namespace, service});\n      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance)[templateQueryIdMap.instance];\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n    $scope.getExtraDropdown = async (target, field) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      const instanceId = $scope.getInstanceId();\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      // const rs = await $scope.datasource.getServiceFn(service, 'getEnvironmentNameList')({ region, instanceId });\n      let rs = await $scope.datasource.getServiceFn(service, actionMaps[field])({ region, instanceId });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[templateQueryIdMap[field]];\n        return {\n          text: o[templateQueryIdMap[field]],\n          value: JSON.stringify(o),\n        };\n      });\n      return result;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/45073\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in GSEFilterFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputNumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />    \n      <multi-condition\n        ng-if=\"field.type === 'inputNumberMulti'\"\n        type=\"'inputNumber'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        maxNum=\"field.max\"\n        minNum=\"field.min\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputMulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- 起始区域 目的区域等 -->\n<div>\n  <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n      <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n        <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getExtraDropdown(target, extra.field)\"\n          on-change=\"onRefresh()\" css-class=\"min-width-10\">\n        </gf-form-dropdown>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive(queryEditorName, sQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { LBFilterDescriptor } from './query_def';\n\nexport class LBQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      // $scope.LBQueryDescriptor = LBQueryDescriptor;\n      $scope.LBFilterDescriptor = LBFilterDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        case 'zone':\n          return $scope.getZones();\n        default:\n          return [];\n      }\n    };\n\n    $scope.getZones = () => {\n      if (!$scope.region) {\n        return [];\n      }\n      return $scope.datasource.getZones('cvm', $scope.region);\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/215/16702\">Click here to get API doc.</a>\n</label>\n\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        单次请求返回的数量，默认为20，最小值为1，最大值为100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      AddressIds\n      <info-popover mode=\"right-normal\">\n        实例 ID，每次请求的实例的上限为100，参数不支持同时指定 AddressIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n      switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n  <multi-condition type=\"'input'\" max-cond=\"100\" value=\"target.queries.AddressIds\" on-change=\"onChange()\">\n  </multi-condition>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      Filters\n      <info-popover mode=\"right-normal\">\n        过滤条件，每次请求的 Filters 的上限为10，Filter.Values 的上限为5。参数不支持同时指定 AddressIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n      on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n  </div>\n</div>\n\n<!--Filters部分-->\n<div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n  <div class=\"gf-form-inline\" ng-repeat=\"field in LBFilterDescriptor\">\n    <label class=\"gf-form-label width-14\">\n      {{ field.key }}\n      <info-popover mode=\"right-normal\">\n        {{ field.cnDescriptor }}\n        <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n      </info-popover>\n    </label>\n    <multi-condition\n      ng-if=\"field.type === 'dropdownmulti'\"\n      type=\"'dropdown'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      get-options=\"getDropdown(field.key)\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputNumbermulti'\"\n      type=\"'inputNumber'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      maxNum=\"field.max\"\n      minNum=\"field.min\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputmulti'\"\n      type=\"'input'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <custom-select-dropdown\n      ng-if=\"field.type === 'select'\"\n      value=\"target.queries.Filters[field.key]\"\n      options=\"field.list\"\n      multiple=\"true\"\n      on-change=\"onChange()\"\n    ></custom-select-dropdown>\n  </div>\n</div>\n\n</div>\n`;\n\nexport function lbQuery() {\n  return {\n    template: template,\n    controller: LBQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('lbQuery', lbQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { LighthouseFilterFieldsDescriptor } from './query_def';\n\nexport class LighthouseQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.LighthouseFilterFieldsDescriptor = LighthouseFilterFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        case 'zone':\n          return $scope.getZones();\n        default:\n          return [];\n      }\n    };\n\n    $scope.getZones = () => {\n      if (!$scope.region) {\n        return [];\n      }\n      return $scope.datasource.getZones('lighthouse', $scope.region);\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/1207/47573\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        Offset\n        <info-popover mode=\"right-normal\">\n          偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n        </info-popover>\n      </label>\n      <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n    </div>\n  </div>\n  <div class=\"gf-form-inline\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        Limit\n        <info-popover mode=\"right-normal\">\n          单次请求返回的数量，默认为20，最小值为1，最大值为100\n        </info-popover>\n      </label>\n      <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n    </div>\n  </div>\n  <div class=\"gf-form-inline\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-9\">\n        InstanceIds\n        <info-popover mode=\"right-normal\">\n          实例 ID，每次请求的实例的上限为100，参数不支持同时指定 InstanceIds 和 Filters\n        </info-popover>\n      </label>\n      <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n        switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n    </div>\n  </div>\n  <div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n    <multi-condition type=\"'input'\" max-cond=\"100\" value=\"target.queries.InstanceIds\" on-change=\"onChange()\">\n    </multi-condition>\n  </div>\n  <div class=\"gf-form-inline\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-9\">\n        Filters\n        <info-popover mode=\"right-normal\">\n          过滤条件，每次请求的 Filters 的上限为10，Filter.Values 的上限为5。参数不支持同时指定 InstanceIds 和 Filters\n        </info-popover>\n      </label>\n      <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n        on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n    </div>\n  </div>\n  <div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n    <div class=\"gf-form-inline\" ng-repeat=\"field in LighthouseFilterFieldsDescriptor\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        get-options=\"getDropdown(field.key)\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputNumbermulti'\"\n        type=\"'inputNumber'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        maxNum=\"field.max\"\n        minNum=\"field.min\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries.Filters[field.key]\"\n        options=\"field.list\"\n        multiple=\"true\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n`;\n\nexport function lighthouseQuery() {\n  return {\n    template: template,\n    controller: LighthouseQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('lighthouseQuery', lighthouseQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { map, get, find, times } from 'lodash';\nimport { MONGODBFieldsDescriptor, templateQueryIdMap } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nexport class MongoDBQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.MONGODBFieldsDescriptor = MONGODBFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        default:\n          return [];\n      }\n    };\n\n    $scope.onInstanceChange = (n, o) => {\n      if (n === o) {\n        return;\n      }\n      $scope.target.replica = '';\n      $scope.target.node = '';\n    };\n\n    $scope.getVariableId = (data, type) => {\n      let variableData = data;\n      const service = GetServiceFromNamespace('QCE/CMONGO');\n\n      variableData = $scope.datasource.getServiceFn(service, 'getVariable')(variableData);\n      if (!variableData) {\n        return '';\n      }\n      try {\n        variableData = JSON.parse(variableData)[templateQueryIdMap[type]];\n      } catch (error) {\n        // console.log();\n      }\n      return variableData;\n    };\n\n    $scope.getExtraDropdown = async (target, type) => {\n      const { instance, replica } = $scope.target;\n      const service = GetServiceFromNamespace('QCE/CMONGO');\n      const instanceId = $scope.getVariableId(instance, 'instance');\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const [res] = await $scope.datasource.getServiceFn(service, 'getInstances')(region, {\n        InstanceIds: [instanceId],\n      });\n      if (type === 'replica') {\n        return map(get(res, 'ReplicaSets', []), (item) => {\n          item._InstanceAliasValue = item.ReplicaSetId;\n          return { text: item.ReplicaSetId, value: JSON.stringify(item) };\n        });\n      }\n      if (type === 'node' && replica !== '') {\n        const replicaId = $scope.getVariableId(replica, 'replica');\n        const targetReplica = find(get(res, 'ReplicaSets', []), { ReplicaSetId: replicaId });\n        const options = times(targetReplica.SecondaryNum, (index) => {\n          const nodeId = `${targetReplica.ReplicaSetId}-node-slave${index}`;\n          return {\n            text: nodeId,\n            value: JSON.stringify({ NodeId: nodeId, _InstanceAliasValue: `${targetReplica.ReplicaSetId} - ${nodeId}` }),\n          };\n        });\n        return [\n          {\n            text: `${targetReplica.ReplicaSetId}-node-primary`,\n            value: JSON.stringify({\n              NodeId: `${targetReplica.ReplicaSetId}-node-primary`,\n              _InstanceAliasValue: `${targetReplica.ReplicaSetId} - ${`${targetReplica.ReplicaSetId}-node-primary`}`,\n            }),\n          },\n          ...options,\n        ];\n      }\n      return [];\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/240/35769\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in MONGODBFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <gf-form-dropdown\n        ng-if=\"field.type === 'dropdown'\"\n        model=\"target.queries[field.key]\"\n        allow-custom=\"true\"\n        lookup-text=\"true\"\n        get-options=\"getDropdown(field.key)\"\n        on-change=\"onChange()\"\n        css-class=\"min-width-10\"\n      ></gf-form-dropdown>\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<div class=\"gf-form-inline\" ng-if=\"target.instance\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label query-keyword width-9\">\n      Replica\n    </label>\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n      <gf-form-dropdown model=\"target.replica\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getExtraDropdown(target, 'replica')\"\n        on-change=\"onRefresh()\" css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n  </div>\n</div>\n\n<div class=\"gf-form-inline\" ng-if=\"target.replica\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label query-keyword width-9\">\n      Node\n    </label>\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n      <gf-form-dropdown model=\"target.node\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getExtraDropdown(target, 'node')\"\n        on-change=\"onRefresh()\" css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n  </div>\n</div>\n`;\n\nexport function mongodbQuery() {\n  return {\n    template: template,\n    controller: MongoDBQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      onRefresh: '&',\n      onChange: '&',\n    },\n    link: (scope, element, attrs) => {\n      scope.$watch('target.instance', (newValue, oldValue) => {\n        scope.onInstanceChange?.(newValue, oldValue);\n      });\n    },\n  };\n}\n\ncoreModule.directive('mongodbQuery', mongodbQuery);\n","import { InstanceQueryDescriptor, templateQueryIdMap } from './query_def';\nimport coreModule from 'grafana/app/core/core_module';\n\nconst ExtraFields = [\n  {\n    label: 'NodeIP',\n    field: 'nodeIP',\n  },\n];\n\nexport class MrQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.InstanceQueryDescriptor = InstanceQueryDescriptor;\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        default:\n          return [];\n      }\n    };\n\n    // 各个实例下的订阅，由于不想每次都重复发请求，所以这里做了一层缓存，数据结构为{ [instanceId]: {   } }\n    $scope.cacheMap = {};\n\n    $scope.getExtraFields = () => {\n      return Object.keys($scope.dims ?? {}).some((item: string) => item.startsWith('host4')) ? ExtraFields : [];\n      // return ExtraFields;\n    };\n\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      instance = $scope.datasource.getServiceFn('mrHDFS', 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance).ClusterId;\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n\n    $scope.onExtraFieldChange = (field) => {\n      $scope.onRefresh();\n    };\n\n    $scope.getExtraDropdown = async (target, field) => {\n      if (field === 'nodeIP') {\n        const InstanceId = $scope.getInstanceId();\n        let data = $scope.cacheMap[InstanceId];\n\n        if (!data) {\n          const region = $scope.datasource.getServiceFn('mrHDFS', 'getVariable')(target.region);\n          const fetcher = $scope.datasource.getServiceFn('mrHDFS', 'fetchAllNodes');\n          const dataT = await fetcher(region, { InstanceId, NodeFlag: 'all' });\n          data = dataT.map((item) => {\n            item._InstanceAliasValue = item[templateQueryIdMap.node];\n            return {\n              text: item[templateQueryIdMap.node],\n              value: JSON.stringify(item),\n            };\n          });\n        }\n\n        // 缓存\n        $scope.cacheMap[InstanceId] = data;\n        return data;\n      }\n      return [];\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/589/34266\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in InstanceQueryDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n<!-- 主题的ui -->\n  <div ng-if=\"target.instance\">\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(target, extra.field)\"\n            on-change=\"onExtraFieldChange(extra.field)\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  </div>\n`;\n\nexport function mrQuery() {\n  return {\n    template: template,\n    controller: MrQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive('mrQuery', mrQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { NATGatewayFilterFieldsDescriptor } from './query_def';\n\nexport class NatGatewayQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.NATGatewayFilterFieldsDescriptor = NATGatewayFilterFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        default:\n          return [];\n      }\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/215/36034\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        单次请求返回的数量，默认为20，最小值为1，最大值为100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-10\">\n      NatGatewayIds\n      <info-popover mode=\"right-normal\">\n        NAT网关统一 ID，参数不支持同时指定 NatGatewayIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n      switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n  <multi-condition type=\"'input'\" value=\"target.queries.NatGatewayIds\" on-change=\"onChange()\">\n  </multi-condition>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-10\">\n      Filters\n      <info-popover mode=\"right-normal\">\n        过滤条件，参数不支持同时指定NatGatewayIds和Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n      on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n  <div class=\"gf-form-inline\" ng-repeat=\"field in NATGatewayFilterFieldsDescriptor\">\n    <label class=\"gf-form-label width-14\">\n      {{ field.key }}\n      <info-popover mode=\"right-normal\">\n        {{ field.cnDescriptor }}\n        <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n      </info-popover>\n    </label>\n    <multi-condition\n      ng-if=\"field.type === 'dropdownmulti'\"\n      type=\"'dropdown'\"\n      value=\"target.queries.Filters[field.key]\"\n      get-options=\"getDropdown(field.key)\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputNumbermulti'\"\n      type=\"'inputNumber'\"\n      value=\"target.queries.Filters[field.key]\"\n      maxNum=\"field.max\"\n      minNum=\"field.min\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputmulti'\"\n      type=\"'input'\"\n      value=\"target.queries.Filters[field.key]\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <custom-select-dropdown\n      ng-if=\"field.type === 'select'\"\n      value=\"target.queries.Filters[field.key]\"\n      options=\"field.list\"\n      multiple=\"true\"\n      on-change=\"onChange()\"\n    ></custom-select-dropdown>\n  </div>\n</div>\n\n</div>\n`;\n\nexport function natGatewayQuery() {\n  return {\n    template: template,\n    controller: NatGatewayQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('natGatewayQuery', natGatewayQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { OVCDNFilterFieldsDescriptor } from './query_def';\n\nexport class OVCDNQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.OVCDNFilterFieldsDescriptor = OVCDNFilterFieldsDescriptor;\n    };\n\n    // $scope.onChecked = (srcField, dstField) => {\n    //   if ($scope.target.queries[srcField] === true) {\n    //     $scope.target.queries[dstField] = false;\n    //   }\n    //   $scope.onChange();\n    // };\n\n    // $scope.getDropdown = (field) => {\n    //   switch (field) {\n    //     case 'zone':\n    //       return $scope.getZones();\n    //     default:\n    //       return [];\n    //   }\n    // };\n\n    // $scope.getZones = () => {\n    //   if (!$scope.region) {\n    //     return [];\n    //   }\n    //   return $scope.datasource.getZones('cvm', $scope.region);\n    // };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/213/15728\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        单次请求返回的数量，默认为20，最小值为1，最大值为100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\" ng-repeat=\"field in OVCDNFilterFieldsDescriptor\">\n<label class=\"gf-form-label width-14\">\n  {{ field.key }}\n  <info-popover mode=\"right-normal\">\n    {{ field.cnDescriptor }}\n    <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n  </info-popover>\n</label>\n<multi-condition\n  ng-if=\"field.type === 'inputNumbermulti'\"\n  type=\"'inputNumber'\"\n  max-cond=\"5\"\n  value=\"target.queries.Filters[field.key]\"\n  maxNum=\"field.max\"\n  minNum=\"field.min\"\n  on-change=\"onChange()\"\n></multi-condition>\n<multi-condition\n  ng-if=\"field.type === 'inputmulti'\"\n  type=\"'input'\"\n  max-cond=\"5\"\n  value=\"target.queries.Filters[field.key]\"\n  on-change=\"onChange()\"\n></multi-condition>\n<custom-select-dropdown\n  ng-if=\"field.type === 'select'\"\n  value=\"target.queries.Filters[field.key]\"\n  options=\"field.list\"\n  multiple=\"true\"\n  on-change=\"onChange()\"\n></custom-select-dropdown>\n</div>\n\n</div>\n`;\n\nexport function ovCdnQuery() {\n  return {\n    template: template,\n    controller: OVCDNQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('ovCdnQuery', ovCdnQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { PCXFieldsDescriptor } from './query_def';\n\nexport class PCXQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.PCXFieldsDescriptor = PCXFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        case 'vpcId':\n          return $scope.getVpcIds();\n        default:\n          return [];\n      }\n    };\n\n    $scope.getVpcIds = () => {\n      if (!$scope.region) {\n        return [];\n      }\n      return $scope.datasource.getVpcIds('pcx', $scope.region);\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/215/2101\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in PCXFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <gf-form-dropdown\n        ng-if=\"field.type === 'dropdown'\"\n        model=\"target.queries[field.key]\"\n        allow-custom=\"true\"\n        lookup-text=\"true\"\n        get-options=\"getDropdown(field.key)\"\n        on-change=\"onChange()\"\n        css-class=\"min-width-10\"\n      ></gf-form-dropdown>\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n\n</div>\n`;\n\nexport function pcxQuery() {\n  return {\n    template: template,\n    controller: PCXQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('pcxQuery', pcxQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { RedisFieldsDescriptor } from './query_def';\n\nexport class RedisQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.RedisFieldsDescriptor = RedisFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        default:\n          return [];\n      }\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/240/35769\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in RedisFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <gf-form-dropdown\n        ng-if=\"field.type === 'dropdown'\"\n        model=\"target.queries[field.key]\"\n        allow-custom=\"true\"\n        lookup-text=\"true\"\n        get-options=\"getDropdown(field.key)\"\n        on-change=\"onChange()\"\n        css-class=\"min-width-10\"\n      ></gf-form-dropdown>\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n\n</div>\n`;\n\nexport function redisQuery() {\n  return {\n    template: template,\n    controller: RedisQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('redisQuery', redisQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { map } from 'lodash';\nimport { RedisMemFieldsDescriptor, templateQueryIdMap, NodeType, namespace } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nexport class RedisMemQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.RedisMemFieldsDescriptor = RedisMemFieldsDescriptor;\n    };\n\n    $scope.clearExtrasAlias = () => {\n      $scope.target.rnodeid = '';\n      $scope.target.pnodeid = '';\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        default:\n          return [];\n      }\n    };\n\n    $scope.getVariableId = (data, type) => {\n      let variableData = data;\n      const service = GetServiceFromNamespace(namespace);\n\n      variableData = $scope.datasource.getServiceFn(service, 'getVariable')(variableData);\n      if (!variableData) {\n        return '';\n      }\n      try {\n        variableData = JSON.parse(variableData)[templateQueryIdMap[type]];\n      } catch (error) {}\n      return variableData;\n    };\n\n    $scope.getExtraDropdown = async (target, nodetype) => {\n      const { instance } = $scope.target;\n      const service = GetServiceFromNamespace(namespace);\n      const instanceId = $scope.getVariableId(instance, 'instance');\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const rs = await $scope.datasource.getServiceFn(service, 'getInstanceNodeInfo')({ region, instanceId });\n\n      const ndoeTypeIndex = NodeType.indexOf(nodetype);\n      return ndoeTypeIndex === -1 ? [] : map(rs[ndoeTypeIndex], (item) => ({ text: item.NodeId, value: item.NodeId }));\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/240/35769\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in RedisMemFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <gf-form-dropdown\n        ng-if=\"field.type === 'dropdown'\"\n        model=\"target.queries[field.key]\"\n        allow-custom=\"true\"\n        lookup-text=\"true\"\n        get-options=\"getDropdown(field.key)\"\n        on-change=\"onChange()\"\n        css-class=\"min-width-10\"\n      ></gf-form-dropdown>\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n\n</div>\n\n<div class=\"gf-form-inline\" ng-if=\"target.instance && dims.rnodeid\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label query-keyword width-9\">\n      RedisNode\n    </label>\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n      <gf-form-dropdown model=\"target.rnodeid\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getExtraDropdown(target, 'Redis')\"\n        on-change=\"onRefresh()\" css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n  </div>\n</div>\n<div class=\"gf-form-inline\" ng-if=\"target.instance && dims.pnodeid\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label query-keyword width-9\">\n      ProxyNode\n    </label>\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n      <gf-form-dropdown model=\"target.pnodeid\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getExtraDropdown(target, 'Proxy')\"\n        on-change=\"onRefresh()\" css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n  </div>\n</div>\n`;\n\nexport function redisMemQuery() {\n  return {\n    template: template,\n    controller: RedisMemQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n    link: (scope, element, attrs) => {\n      scope.$watch('target.instance', () => {\n        scope.clearExtrasAlias?.();\n      });\n      scope.$watch('target.metricName', () => {\n        scope.clearExtrasAlias?.();\n      });\n    },\n  };\n}\n\ncoreModule.directive('redisMemQuery', redisMemQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { SCFQueryDescriptor, templateQueryIdMap } from './query_def';\n\nexport class SCFQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.SCFQueryDescriptor = SCFQueryDescriptor;\n    };\n\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      instance = $scope.datasource.getServiceFn('scf', 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance).FunctionName;\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n\n    $scope.getVersions = async (target) => {\n      // console.log(2222);\n\n      // return [{ text: 1, value: 1 }];\n      // console.log(target, 'target');\n      // let { instance, region } = target;\n      const FunctionName = $scope.getInstanceId();\n      const region = $scope.datasource.getServiceFn('scf', 'getVariable')(target.region);\n      if (!FunctionName || !region) return [];\n\n      const fetcher = $scope.datasource.getServiceFn('scf', 'getVersions');\n\n      return fetcher(region, { FunctionName }).then((res) => {\n        // console.log(res, 'res');\n        const result = res.map((o) => {\n          o._InstanceAliasValue = o[templateQueryIdMap.version];\n          return {\n            text: o[templateQueryIdMap.version],\n            value: JSON.stringify(o),\n          };\n        });\n        return result;\n      });\n    };\n    // $scope.onChecked = (srcField, dstField) => {\n    //   if ($scope.target.queries[srcField] === true) {\n    //     $scope.target.queries[dstField] = false;\n    //   }\n    //   $scope.onChange();\n    // };\n\n    // $scope.getDropdown = (field) => {\n    //   switch (field) {\n    //     case 'zone':\n    //       return $scope.getZones();\n    //     default:\n    //       return [];\n    //   }\n    // };\n\n    // $scope.getZones = () => {\n    //   if (!$scope.region) {\n    //     return [];\n    //   }\n    //   return $scope.datasource.getZones('cvm', $scope.region);\n    // };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/583/18582\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in SCFQueryDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- version部分 -->\n<div class=\"gf-form-inline\" ng-if=\"target.instance\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label query-keyword width-9\">Version</label>\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n      <gf-form-dropdown model=\"target.version\" allow-custom=\"false\" get-options=\"getVersions(target)\"\n        on-change=\"onRefresh()\" css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n  </div>\n</div>\n\n  </div>\n`;\n\nexport function scfQuery() {\n  return {\n    template: template,\n    controller: SCFQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n    },\n  };\n}\ncoreModule.directive('scfQuery', scfQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { TDMQFilterFieldsDescriptor, queryEditorName, namespace, templateQueryIdMap } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nconst ExtraFields = [\n  {\n    label: 'environmentId',\n    field: 'environmentId',\n    action: 'DescribeEnvironments',\n  },\n  {\n    label: 'topicName',\n    field: 'topicName',\n    action: 'DescribeTopics',\n  },\n];\n\nconst dropdownTextConfig = {\n  DescribeTopics: 'topicName',\n  DescribeEnvironments: 'environmentId',\n};\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.TDMQFilterFieldsDescriptor = TDMQFilterFieldsDescriptor;\n      $scope.ExtraFields = ExtraFields;\n      $scope.namespace = namespace;\n    };\n\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      const service = GetServiceFromNamespace($scope.namespace);\n      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance)[templateQueryIdMap.instance];\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}) || item.label in ($scope.dims ?? {}));\n    };\n    $scope.getExtraDropdown = async (target, action) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const payload: any = {\n        Limit: 100,\n        ClusterId: $scope.getInstanceId(),\n      };\n      if (action === 'DescribeTopics') {\n        let evId = $scope.target.environmentId;\n        try {\n          evId = JSON.parse(evId);\n          evId = evId[templateQueryIdMap.environmentId];\n        } catch (e) {}\n        payload.EnvironmentId = evId;\n      }\n\n      const rs = await $scope.datasource.getServiceFn(service, 'getConsumerList')({ region, action, payload });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[templateQueryIdMap[dropdownTextConfig[action]]];\n        return {\n          text: o[templateQueryIdMap[dropdownTextConfig[action]]],\n          label: o[templateQueryIdMap[dropdownTextConfig[action]]],\n          value: JSON.stringify(o),\n        };\n      });\n      return result;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Functions are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/50388\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\" ng-repeat=\"field in TDMQFilterFieldsDescriptor\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <input\n          ng-if=\"field.type === 'inputNumber'\"\n          style=\"margin-right:2px\"\n          type=\"number\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n          ng-min=\"field.min\"\n          ng-max=\"field.max\"\n        />\n        <input\n          ng-if=\"field.type === 'input'\"\n          style=\"margin-right:2px\"\n          type=\"text\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n        />    \n        <multi-condition\n          ng-if=\"field.type === 'inputNumberMulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputMulti'\"\n          type=\"'input'\"\n          value=\"target.queries[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries[field.key]\"\n          options=\"field.list\"\n          multiple=\"field.multiple || false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n\n<!-- 起始区域 目的区域等 -->\n  <div>\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(target, extra.action)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive(queryEditorName, sQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { TDMQFilterFieldsDescriptor, namespace, templateQueryIdMap } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nconst ExtraFields = [\n  {\n    label: 'Node',\n    field: 'node',\n    action: 'DescribeRabbitMQNodeList',\n  },\n];\n\nconst dropdownTextConfig = {\n  DescribeRabbitMQNodeList: 'node',\n};\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.TDMQFilterFieldsDescriptor = TDMQFilterFieldsDescriptor;\n      $scope.ExtraFields = ExtraFields;\n      $scope.namespace = namespace;\n    };\n\n    $scope.clearExtrasAlias = () => {\n      $scope.target.node = '';\n    };\n\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      const service = GetServiceFromNamespace($scope.namespace);\n      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance)[templateQueryIdMap.instance];\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}) || item.label in ($scope.dims ?? {}));\n    };\n    $scope.getExtraDropdown = async (target, action) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const payload: any = {\n        Limit: 100,\n        InstanceId: $scope.getInstanceId(),\n      };\n\n      const rs = await $scope.datasource.getServiceFn(service, 'getConsumerList')({ region, action, payload });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[templateQueryIdMap[dropdownTextConfig[action]]];\n        return {\n          text: o[templateQueryIdMap[dropdownTextConfig[action]]],\n          label: o[templateQueryIdMap[dropdownTextConfig[action]]],\n          value: JSON.stringify(o),\n        };\n      });\n      return result;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Functions are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/50388\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\" ng-repeat=\"field in TDMQFilterFieldsDescriptor\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <input\n          ng-if=\"field.type === 'inputNumber'\"\n          style=\"margin-right:2px\"\n          type=\"number\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n          ng-min=\"field.min\"\n          ng-max=\"field.max\"\n        />\n        <input\n          ng-if=\"field.type === 'input'\"\n          style=\"margin-right:2px\"\n          type=\"text\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n        />    \n        <multi-condition\n          ng-if=\"field.type === 'inputNumberMulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputMulti'\"\n          type=\"'input'\"\n          value=\"target.queries[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries[field.key]\"\n          options=\"field.list\"\n          multiple=\"field.multiple || false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n\n<!-- 起始区域 目的区域等 -->\n  <div>\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" get-options=\"getExtraDropdown(target, extra.action)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n    link: (scope, element, attrs) => {\n      scope.$watch('target.instance', () => {\n        scope.clearExtrasAlias?.();\n      });\n      scope.$watch('target.metricName', () => {\n        scope.clearExtrasAlias?.();\n      });\n    },\n  };\n}\ncoreModule.directive('tdmqRabbitmqQuery', sQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { TDMQFilterFieldsDescriptor, namespace, templateQueryIdMap } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nconst ExtraFields = [\n  {\n    label: 'Namespace',\n    field: 'namespace',\n    action: 'DescribeRocketMQNamespaces',\n  },\n  {\n    label: 'Group',\n    field: 'group',\n    action: 'DescribeRocketMQGroups',\n  },\n];\n\nconst dropdownTextConfig = {\n  DescribeRocketMQNamespaces: 'namespace',\n  DescribeRocketMQGroups: 'group',\n};\nexport class TdmqRocketmqQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.TDMQFilterFieldsDescriptor = TDMQFilterFieldsDescriptor;\n      $scope.ExtraFields = ExtraFields;\n      $scope.namespace = namespace;\n    };\n\n    $scope.clearExtrasAlias = () => {\n      $scope.target.namespace = '';\n      $scope.target.group = '';\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      const service = GetServiceFromNamespace($scope.namespace);\n      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance)[templateQueryIdMap.instance];\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}) || item.label in ($scope.dims ?? {}));\n    };\n    $scope.getExtraDropdown = async (target, action) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const payload: any = {\n        Limit: 100,\n        ClusterId: $scope.getInstanceId(),\n      };\n      if (action === 'DescribeRocketMQGroups') {\n        let namespace = $scope.target.namespace;\n        try {\n          namespace = JSON.parse(namespace)[templateQueryIdMap.namespace];\n        } catch (e) {}\n        payload.NamespaceId = $scope.datasource.getServiceFn(service, 'getVariable')(namespace);\n      }\n\n      const rs = await $scope.datasource.getServiceFn(service, 'getConsumerList')({ region, action, payload });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[templateQueryIdMap[dropdownTextConfig[action]]];\n        return {\n          text: o[templateQueryIdMap[dropdownTextConfig[action]]],\n          value: JSON.stringify(o),\n        };\n      });\n      return result;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Functions are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/50388\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          Offset\n          <info-popover mode=\"right-normal\">\n            偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n          </info-popover>\n        </label>\n        <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n      </div>\n    </div>\n    <div class=\"gf-form-inline\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          Limit\n          <info-popover mode=\"right-normal\">\n            单次请求返回的数量，默认为20，最小值为1，最大值为100\n          </info-popover>\n        </label>\n        <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n      </div>\n    </div>\n    <div class=\"gf-form-inline\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-9\">\n          ClusterIdList\n          <info-popover mode=\"right-normal\">\n            实例 ID，每次请求的实例的上限为100，参数不支持同时指定 ClusterIdList 和 Filters\n          </info-popover>\n        </label>\n        <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n          switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n      </div>\n    </div>\n    <div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n      <multi-condition type=\"'input'\" max-cond=\"100\" value=\"target.queries.ClusterIdList\" on-change=\"onChange()\">\n      </multi-condition>\n    </div>\n    <div class=\"gf-form-inline\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-9\">\n          Filters\n          <info-popover mode=\"right-normal\">\n            过滤条件，每次请求的 Filters 的上限为10，Filter.Values 的上限为5。参数不支持同时指定 ClusterIdList 和 Filters\n          </info-popover>\n        </label>\n        <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n          on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n      </div>\n    </div>\n    <div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n      <div class=\"gf-form-inline\" ng-repeat=\"field in TDMQFilterFieldsDescriptor\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <multi-condition\n          ng-if=\"field.type === 'dropdownmulti'\"\n          type=\"'dropdown'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          get-options=\"getDropdown(field.key)\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputNumbermulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputmulti'\"\n          type=\"'input'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries.Filters[field.key]\"\n          options=\"field.list\"\n          multiple=\"false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n\n<!-- 起始区域 目的区域等 -->\n  <div>\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"true\" get-options=\"getExtraDropdown(target, extra.action)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport function tdmqRocketmqQuery() {\n  return {\n    template: template,\n    controller: TdmqRocketmqQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n    link: (scope, element, attrs) => {\n      scope.$watch('target.instance', () => {\n        scope.clearExtrasAlias?.();\n      });\n      scope.$watch('target.metricName', () => {\n        scope.clearExtrasAlias?.();\n      });\n    },\n  };\n}\ncoreModule.directive('tdmqRocketmqQuery', tdmqRocketmqQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { isEmpty } from 'lodash';\nimport { TKEFilterFieldsDescriptor } from './query_def';\n\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.TKEFilterFieldsDescriptor = TKEFilterFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.addCondition = () => {\n      $scope.target.conditions.push({ Key: '', Operator: '=', Value: '' });\n    };\n\n    $scope.deleteCondition = (index) => {\n      const targetCondition = $scope.target.conditions[index];\n      if (isEmpty(targetCondition.Key) || isEmpty(targetCondition.Operator) || isEmpty(targetCondition.Value)) {\n        $scope.target.conditions.splice(index, 1);\n      } else {\n        $scope.target.conditions.splice(index, 1);\n        $scope.onRefresh();\n      }\n    };\n\n    $scope.getOperator = () => {\n      return Promise.resolve([\n        { text: '=', value: '=' },\n        { text: 'in', value: 'in' },\n      ]);\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Functions are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/50388\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          Offset\n          <info-popover mode=\"right-normal\">\n            偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n          </info-popover>\n        </label>\n        <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n      </div>\n    </div>\n    <div class=\"gf-form-inline\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          Limit\n          <info-popover mode=\"right-normal\">\n            单次请求返回的数量，默认为20，最小值为1，最大值为100\n          </info-popover>\n        </label>\n        <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n      </div>\n    </div>\n    <div class=\"gf-form-inline\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-9\">\n          ClusterIdList\n          <info-popover mode=\"right-normal\">\n            实例 ID，每次请求的实例的上限为100，参数不支持同时指定 ClusterIdList 和 Filters\n          </info-popover>\n        </label>\n        <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n          switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n      </div>\n    </div>\n    <div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n      <multi-condition type=\"'input'\" max-cond=\"100\" value=\"target.queries.ClusterIdList\" on-change=\"onChange()\">\n      </multi-condition>\n    </div>\n    <div class=\"gf-form-inline\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-9\">\n          Filters\n          <info-popover mode=\"right-normal\">\n            过滤条件，每次请求的 Filters 的上限为10，Filter.Values 的上限为5。参数不支持同时指定 ClusterIdList 和 Filters\n          </info-popover>\n        </label>\n        <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n          on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n      </div>\n    </div>\n    <div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n      <div class=\"gf-form-inline\" ng-repeat=\"field in TKEFilterFieldsDescriptor\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <input\n          ng-if=\"field.type === 'input'\"\n          style=\"margin-right:2px\"\n          type=\"text\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n        />   \n        <multi-condition\n          ng-if=\"field.type === 'dropdownmulti'\"\n          type=\"'dropdown'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          get-options=\"getDropdown(field.key)\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputNumbermulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputmulti'\"\n          type=\"'input'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries.Filters[field.key]\"\n          options=\"field.list\"\n          multiple=\"false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"gf-form-inline\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label query-keyword width-9\">Conditions</label>\n      <div>\n        <div class=\"gf-form\" ng-repeat=\"condition in target.conditions\">\n          <input class=\"gf-form-input width-10 tc-condition-input\" type=\"text\" ng-model=\"target.conditions[$index].Key\" ng-blur=\"onRefresh()\"></input>\n          <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n            <gf-form-dropdown model=\"target.conditions[$index].Operator\" get-options=\"getOperator()\" on-change=\"onRefresh()\" allow-custom=\"true\" css-class=\"min-width-5\">\n            </gf-form-dropdown>\n          </div>\n          <input class=\"gf-form-input width-10 tc-condition-input\" type=\"text\" ng-model=\"target.conditions[$index].Value\" ng-blur=\"onRefresh()\"></input>\n          <label class=\"gf-form-label pointer\" ng-click=\"deleteCondition($index)\">\n            <i class=\"fa fa-minus\"></i>\n          </label>\n          <label class=\"gf-form-label pointer\" ng-click=\"addCondition()\" ng-if=\"$last\">\n            <i class=\"fa fa-plus\"></i>\n          </label>\n        </div>\n        <div class=\"gf-form\" ng-if=\"target.conditions.length === 0\">\n          <label class=\"gf-form-label pointer\" ng-click=\"addCondition()\">\n            <i class=\"fa fa-plus\"></i>\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"gf-form-inline\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label query-keyword width-9\">GroupBy</label>\n      <input class=\"gf-form-input width-15\" type=\"text\" ng-model=\"target.groupBys\" ng-blur=\"onRefresh()\"></input>\n    </div>\n  </div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive('tkeQuery', sQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { TSFFieldsDescriptor } from './query_def';\n\nexport class TSFQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.TSFFieldsDescriptor = TSFFieldsDescriptor;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/649/36090\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in TSFFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n\n</div>\n`;\n\nexport function tsfQuery() {\n  return {\n    template: template,\n    controller: TSFQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('tsfQuery', tsfQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { VBCFilterFieldsDescriptor, namespace } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nconst ExtraFields: any = [\n  // {\n  //   label: 'SRegion',\n  //   field: 'SRegion',\n  // },\n  // {\n  //   label: 'DRegion',\n  //   field: 'DRegion',\n  // },\n];\n\nexport class VBCQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.VBCFilterFieldsDescriptor = VBCFilterFieldsDescriptor;\n      $scope.namespace = namespace;\n    };\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}));\n    };\n\n    $scope.getExtraDropdown = (field) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      // return $scope.datasource.getServiceFn(service, 'getFilterDropdown')({ field })\n      return $scope.datasource.getFilterDropdown(service, { field });\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/45073\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in VBCFilterFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputNumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />    \n      <multi-condition\n        ng-if=\"field.type === 'inputNumberMulti'\"\n        type=\"'inputNumber'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        maxNum=\"field.max\"\n        minNum=\"field.min\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputMulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- 起始区域 目的区域等 -->\n  <div>\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(extra.field)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport function scfQuery() {\n  return {\n    template: template,\n    controller: VBCQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive('vbcQuery', scfQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","var map = {\n\t\".\": 19,\n\t\"./\": 19,\n\t\"./MonitorDatasource\": 182,\n\t\"./MonitorDatasource.ts\": 182,\n\t\"./_base/datasource\": 3,\n\t\"./_base/datasource.ts\": 3,\n\t\"./_base/query\": 7,\n\t\"./_base/query.ts\": 7,\n\t\"./_base/query_filter\": 185,\n\t\"./_base/query_filter.ts\": 185,\n\t\"./_base/types\": 186,\n\t\"./_base/types.ts\": 186,\n\t\"./apigateway/datasource\": 70,\n\t\"./apigateway/datasource.ts\": 70,\n\t\"./apigateway/query\": 126,\n\t\"./apigateway/query.ts\": 126,\n\t\"./apigateway/query_def\": 21,\n\t\"./apigateway/query_def.ts\": 21,\n\t\"./bmIntraLb/datasource\": 71,\n\t\"./bmIntraLb/datasource.ts\": 71,\n\t\"./bmIntraLb/query\": 127,\n\t\"./bmIntraLb/query.ts\": 127,\n\t\"./bmIntraLb/query_def\": 29,\n\t\"./bmIntraLb/query_def.ts\": 29,\n\t\"./bm_lb/datasource\": 72,\n\t\"./bm_lb/datasource.ts\": 72,\n\t\"./bm_lb/query\": 128,\n\t\"./bm_lb/query.ts\": 128,\n\t\"./bm_lb/query_def\": 30,\n\t\"./bm_lb/query_def.ts\": 30,\n\t\"./bm_pcx/datasource\": 73,\n\t\"./bm_pcx/datasource.ts\": 73,\n\t\"./bm_pcx/query\": 129,\n\t\"./bm_pcx/query.ts\": 129,\n\t\"./bm_pcx/query_def\": 31,\n\t\"./bm_pcx/query_def.ts\": 31,\n\t\"./bwp/datasource\": 74,\n\t\"./bwp/datasource.ts\": 74,\n\t\"./bwp/query\": 130,\n\t\"./bwp/query.ts\": 130,\n\t\"./bwp/query_def\": 61,\n\t\"./bwp/query_def.ts\": 61,\n\t\"./cbs/datasource\": 75,\n\t\"./cbs/datasource.ts\": 75,\n\t\"./cbs/query\": 131,\n\t\"./cbs/query.ts\": 131,\n\t\"./cbs/query_def\": 32,\n\t\"./cbs/query_def.ts\": 32,\n\t\"./cdb/datasource\": 76,\n\t\"./cdb/datasource.ts\": 76,\n\t\"./cdb/query\": 132,\n\t\"./cdb/query.ts\": 132,\n\t\"./cdb/query_def\": 42,\n\t\"./cdb/query_def.ts\": 42,\n\t\"./cdn/datasource\": 77,\n\t\"./cdn/datasource.ts\": 77,\n\t\"./cdn/query\": 133,\n\t\"./cdn/query.ts\": 133,\n\t\"./cdn/query_def\": 62,\n\t\"./cdn/query_def.ts\": 62,\n\t\"./cdn_province/datasource\": 78,\n\t\"./cdn_province/datasource.ts\": 78,\n\t\"./cdn_province/query\": 134,\n\t\"./cdn_province/query.ts\": 134,\n\t\"./cdn_province/query_def\": 33,\n\t\"./cdn_province/query_def.ts\": 33,\n\t\"./ceip_summary/datasource\": 79,\n\t\"./ceip_summary/datasource.ts\": 79,\n\t\"./ceip_summary/query\": 135,\n\t\"./ceip_summary/query.ts\": 135,\n\t\"./ceip_summary/query_def\": 34,\n\t\"./ceip_summary/query_def.ts\": 34,\n\t\"./ces/datasource\": 80,\n\t\"./ces/datasource.ts\": 80,\n\t\"./ces/query\": 136,\n\t\"./ces/query.ts\": 136,\n\t\"./ces/query_def\": 43,\n\t\"./ces/query_def.ts\": 43,\n\t\"./cfs/datasource\": 81,\n\t\"./cfs/datasource.ts\": 81,\n\t\"./cfs/query\": 137,\n\t\"./cfs/query.ts\": 137,\n\t\"./cfs/query_def\": 55,\n\t\"./cfs/query_def.ts\": 55,\n\t\"./ckafka/datasource\": 82,\n\t\"./ckafka/datasource.ts\": 82,\n\t\"./ckafka/query\": 138,\n\t\"./ckafka/query.ts\": 138,\n\t\"./ckafka/query_def\": 10,\n\t\"./ckafka/query_def.ts\": 10,\n\t\"./clb/datasource\": 83,\n\t\"./clb/datasource.ts\": 83,\n\t\"./clb/query\": 139,\n\t\"./clb/query.ts\": 139,\n\t\"./clb/query_def\": 12,\n\t\"./clb/query_def.ts\": 12,\n\t\"./cls/datasource\": 84,\n\t\"./cls/datasource.ts\": 84,\n\t\"./cls/query\": 140,\n\t\"./cls/query.ts\": 140,\n\t\"./cls/query_def\": 27,\n\t\"./cls/query_def.ts\": 27,\n\t\"./cmq/datasource\": 85,\n\t\"./cmq/datasource.ts\": 85,\n\t\"./cmq/query\": 141,\n\t\"./cmq/query.ts\": 141,\n\t\"./cmq/query_def\": 56,\n\t\"./cmq/query_def.ts\": 56,\n\t\"./cmq_topic/datasource\": 86,\n\t\"./cmq_topic/datasource.ts\": 86,\n\t\"./cmq_topic/query\": 142,\n\t\"./cmq_topic/query.ts\": 142,\n\t\"./cmq_topic/query_def\": 35,\n\t\"./cmq_topic/query_def.ts\": 35,\n\t\"./cos/datasource\": 87,\n\t\"./cos/datasource.ts\": 87,\n\t\"./cos/query_def\": 143,\n\t\"./cos/query_def.ts\": 143,\n\t\"./cpm/datasource\": 88,\n\t\"./cpm/datasource.ts\": 88,\n\t\"./cpm/query\": 144,\n\t\"./cpm/query.ts\": 144,\n\t\"./cpm/query_def\": 36,\n\t\"./cpm/query_def.ts\": 36,\n\t\"./cvm/datasource\": 89,\n\t\"./cvm/datasource.ts\": 89,\n\t\"./cvm/query\": 145,\n\t\"./cvm/query.ts\": 145,\n\t\"./cvm/query_def\": 57,\n\t\"./cvm/query_def.ts\": 57,\n\t\"./cynosdb_mysql/datasource\": 90,\n\t\"./cynosdb_mysql/datasource.ts\": 90,\n\t\"./cynosdb_mysql/query\": 146,\n\t\"./cynosdb_mysql/query.ts\": 146,\n\t\"./cynosdb_mysql/query_def\": 24,\n\t\"./cynosdb_mysql/query_def.ts\": 24,\n\t\"./dc/datasource\": 91,\n\t\"./dc/datasource.ts\": 91,\n\t\"./dc/query\": 147,\n\t\"./dc/query.ts\": 147,\n\t\"./dc/query_def\": 44,\n\t\"./dc/query_def.ts\": 44,\n\t\"./dcdb/datasource\": 92,\n\t\"./dcdb/datasource.ts\": 92,\n\t\"./dcdb/query\": 148,\n\t\"./dcdb/query.ts\": 148,\n\t\"./dcdb/query_def\": 15,\n\t\"./dcdb/query_def.ts\": 15,\n\t\"./dcg/datasource\": 93,\n\t\"./dcg/datasource.ts\": 93,\n\t\"./dcg/query\": 149,\n\t\"./dcg/query.ts\": 149,\n\t\"./dcg/query_def\": 45,\n\t\"./dcg/query_def.ts\": 45,\n\t\"./dcx/datasource\": 94,\n\t\"./dcx/datasource.ts\": 94,\n\t\"./dcx/query\": 150,\n\t\"./dcx/query.ts\": 150,\n\t\"./dcx/query_def\": 46,\n\t\"./dcx/query_def.ts\": 46,\n\t\"./ecdn/datasource\": 95,\n\t\"./ecdn/datasource.ts\": 95,\n\t\"./ecdn/query\": 151,\n\t\"./ecdn/query.ts\": 151,\n\t\"./ecdn/query_def\": 37,\n\t\"./ecdn/query_def.ts\": 37,\n\t\"./ecm/datasource\": 96,\n\t\"./ecm/datasource.ts\": 96,\n\t\"./ecm/query\": 152,\n\t\"./ecm/query.ts\": 152,\n\t\"./ecm/query_def\": 38,\n\t\"./ecm/query_def.ts\": 38,\n\t\"./ecm_block_storage/datasource\": 97,\n\t\"./ecm_block_storage/datasource.ts\": 97,\n\t\"./ecm_block_storage/query\": 153,\n\t\"./ecm_block_storage/query.ts\": 153,\n\t\"./ecm_block_storage/query_def\": 20,\n\t\"./ecm_block_storage/query_def.ts\": 20,\n\t\"./ecm_lb/datasource\": 98,\n\t\"./ecm_lb/datasource.ts\": 98,\n\t\"./ecm_lb/query\": 154,\n\t\"./ecm_lb/query.ts\": 154,\n\t\"./ecm_lb/query_def\": 47,\n\t\"./ecm_lb/query_def.ts\": 47,\n\t\"./gse/datasource\": 99,\n\t\"./gse/datasource.ts\": 99,\n\t\"./gse/query\": 155,\n\t\"./gse/query.ts\": 155,\n\t\"./gse/query_def\": 14,\n\t\"./gse/query_def.ts\": 14,\n\t\"./index\": 19,\n\t\"./index.ts\": 19,\n\t\"./lb/datasource\": 100,\n\t\"./lb/datasource.ts\": 100,\n\t\"./lb/query\": 156,\n\t\"./lb/query.ts\": 156,\n\t\"./lb/query_def\": 63,\n\t\"./lb/query_def.ts\": 63,\n\t\"./lighthouse/datasource\": 101,\n\t\"./lighthouse/datasource.ts\": 101,\n\t\"./lighthouse/query\": 157,\n\t\"./lighthouse/query.ts\": 157,\n\t\"./lighthouse/query_def\": 54,\n\t\"./lighthouse/query_def.ts\": 54,\n\t\"./mongodb/datasource\": 102,\n\t\"./mongodb/datasource.ts\": 102,\n\t\"./mongodb/query\": 158,\n\t\"./mongodb/query.ts\": 158,\n\t\"./mongodb/query_def\": 48,\n\t\"./mongodb/query_def.ts\": 48,\n\t\"./mr/datasource\": 103,\n\t\"./mr/datasource.ts\": 103,\n\t\"./mr/query\": 159,\n\t\"./mr/query.ts\": 159,\n\t\"./mr/query_def\": 22,\n\t\"./mr/query_def.ts\": 22,\n\t\"./nat_gateway/datasource\": 104,\n\t\"./nat_gateway/datasource.ts\": 104,\n\t\"./nat_gateway/query\": 160,\n\t\"./nat_gateway/query.ts\": 160,\n\t\"./nat_gateway/query_def\": 64,\n\t\"./nat_gateway/query_def.ts\": 64,\n\t\"./ov_cdn/datasource\": 105,\n\t\"./ov_cdn/datasource.ts\": 105,\n\t\"./ov_cdn/query\": 161,\n\t\"./ov_cdn/query.ts\": 161,\n\t\"./ov_cdn/query_def\": 65,\n\t\"./ov_cdn/query_def.ts\": 65,\n\t\"./pcx/datasource\": 106,\n\t\"./pcx/datasource.ts\": 106,\n\t\"./pcx/query\": 162,\n\t\"./pcx/query.ts\": 162,\n\t\"./pcx/query_def\": 58,\n\t\"./pcx/query_def.ts\": 58,\n\t\"./postgresql/datasource\": 107,\n\t\"./postgresql/datasource.ts\": 107,\n\t\"./postgresql/query\": 163,\n\t\"./postgresql/query.ts\": 163,\n\t\"./postgresql/query_def\": 39,\n\t\"./postgresql/query_def.ts\": 39,\n\t\"./qaap/datasource\": 108,\n\t\"./qaap/datasource.ts\": 108,\n\t\"./qaap/query\": 164,\n\t\"./qaap/query.ts\": 164,\n\t\"./qaap/query_def\": 49,\n\t\"./qaap/query_def.ts\": 49,\n\t\"./redis/datasource\": 109,\n\t\"./redis/datasource.ts\": 109,\n\t\"./redis/query\": 165,\n\t\"./redis/query.ts\": 165,\n\t\"./redis/query_def\": 59,\n\t\"./redis/query_def.ts\": 59,\n\t\"./redis_mem/datasource\": 110,\n\t\"./redis_mem/datasource.ts\": 110,\n\t\"./redis_mem/query\": 166,\n\t\"./redis_mem/query.ts\": 166,\n\t\"./redis_mem/query_def\": 16,\n\t\"./redis_mem/query_def.ts\": 16,\n\t\"./scf/datasource\": 111,\n\t\"./scf/datasource.ts\": 111,\n\t\"./scf/query\": 167,\n\t\"./scf/query.ts\": 167,\n\t\"./scf/query_def\": 25,\n\t\"./scf/query_def.ts\": 25,\n\t\"./sqlserver/datasource\": 112,\n\t\"./sqlserver/datasource.ts\": 112,\n\t\"./sqlserver/query\": 168,\n\t\"./sqlserver/query.ts\": 168,\n\t\"./sqlserver/query_def\": 28,\n\t\"./sqlserver/query_def.ts\": 28,\n\t\"./tcaplus/datasource\": 113,\n\t\"./tcaplus/datasource.ts\": 113,\n\t\"./tcaplus/query\": 169,\n\t\"./tcaplus/query.ts\": 169,\n\t\"./tcaplus/query_def\": 50,\n\t\"./tcaplus/query_def.ts\": 50,\n\t\"./tdmq/datasource\": 114,\n\t\"./tdmq/datasource.ts\": 114,\n\t\"./tdmq/query\": 170,\n\t\"./tdmq/query.ts\": 170,\n\t\"./tdmq/query_def\": 13,\n\t\"./tdmq/query_def.ts\": 13,\n\t\"./tdmq_rabbitmq/datasource\": 115,\n\t\"./tdmq_rabbitmq/datasource.ts\": 115,\n\t\"./tdmq_rabbitmq/query\": 171,\n\t\"./tdmq_rabbitmq/query.ts\": 171,\n\t\"./tdmq_rabbitmq/query_def\": 17,\n\t\"./tdmq_rabbitmq/query_def.ts\": 17,\n\t\"./tdmq_rocketmq/datasource\": 116,\n\t\"./tdmq_rocketmq/datasource.ts\": 116,\n\t\"./tdmq_rocketmq/query\": 172,\n\t\"./tdmq_rocketmq/query.ts\": 172,\n\t\"./tdmq_rocketmq/query_def\": 18,\n\t\"./tdmq_rocketmq/query_def.ts\": 18,\n\t\"./tke/datasource\": 117,\n\t\"./tke/datasource.ts\": 117,\n\t\"./tke/query\": 173,\n\t\"./tke/query.ts\": 173,\n\t\"./tke/query_def\": 69,\n\t\"./tke/query_def.ts\": 69,\n\t\"./tsf/datasource\": 118,\n\t\"./tsf/datasource.ts\": 118,\n\t\"./tsf/query\": 174,\n\t\"./tsf/query.ts\": 174,\n\t\"./tsf/query_def\": 60,\n\t\"./tsf/query_def.ts\": 60,\n\t\"./v_clb/datasource\": 119,\n\t\"./v_clb/datasource.ts\": 119,\n\t\"./v_clb/query\": 175,\n\t\"./v_clb/query.ts\": 175,\n\t\"./v_clb/query_def\": 23,\n\t\"./v_clb/query_def.ts\": 23,\n\t\"./vbc/datasource\": 120,\n\t\"./vbc/datasource.ts\": 120,\n\t\"./vbc/query\": 176,\n\t\"./vbc/query.ts\": 176,\n\t\"./vbc/query_def\": 51,\n\t\"./vbc/query_def.ts\": 51,\n\t\"./vpc_net_detect/datasource\": 121,\n\t\"./vpc_net_detect/datasource.ts\": 121,\n\t\"./vpc_net_detect/query\": 177,\n\t\"./vpc_net_detect/query.ts\": 177,\n\t\"./vpc_net_detect/query_def\": 40,\n\t\"./vpc_net_detect/query_def.ts\": 40,\n\t\"./vpngw/datasource\": 122,\n\t\"./vpngw/datasource.ts\": 122,\n\t\"./vpngw/query\": 178,\n\t\"./vpngw/query.ts\": 178,\n\t\"./vpngw/query_def\": 52,\n\t\"./vpngw/query_def.ts\": 52,\n\t\"./vpnx/datasource\": 123,\n\t\"./vpnx/datasource.ts\": 123,\n\t\"./vpnx/query\": 179,\n\t\"./vpnx/query.ts\": 179,\n\t\"./vpnx/query_def\": 53,\n\t\"./vpnx/query_def.ts\": 53,\n\t\"./waf/datasource\": 124,\n\t\"./waf/datasource.ts\": 124,\n\t\"./waf/query\": 180,\n\t\"./waf/query.ts\": 180,\n\t\"./waf/query_def\": 41,\n\t\"./waf/query_def.ts\": 41\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 181;","import _ from 'lodash';\nimport { Datasources, SERVICES } from './index';\nimport { GetServiceFromNamespace, ParseMetricQuery } from '../common/constants';\nimport { serviceGroupBy } from '../common/utils';\nimport { LoadingState } from '@grafana/data';\n\nexport default interface DatasourceInterface {\n  instanceSettings: any;\n  backendSrv: any;\n  templateSrv: any;\n  query: (options: any) => any;\n  testDatasource: () => any;\n  metricFindQuery: (query: any) => any;\n  getRegions?: (service: string) => any;\n  getMetrics: (service: string, region: string) => any;\n  getInstances: (service: string, region: string, params: any) => any;\n  getZones?: (service: string, region: string) => any;\n}\n\nexport class TCMonitorDatasource implements DatasourceInterface {\n  instanceSettings: any;\n  backendSrv: any;\n  templateSrv: any;\n\n  /** @ngInject */\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    this.instanceSettings = instanceSettings;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    _.forEach(Datasources, (_class: any, key) => {\n      this[key] = new _class(this.instanceSettings, this.backendSrv, this.templateSrv);\n    });\n  }\n\n  // 根据 Datasource Config 配置时勾选的监控服务项，获取相应的命名空间\n  getNamespaces() {\n    const namespaces: any[] = [];\n    _.forEach(SERVICES, (service) => {\n      if (this.instanceSettings.jsonData[service.service] === true) {\n        // namespaces.push(service.namespace);\n        namespaces.push(service);\n      }\n    });\n    return namespaces;\n  }\n\n  getCascaderNamespaces() {\n    const validServices = SERVICES.filter((service) => this.instanceSettings.jsonData[service.service]);\n    return serviceGroupBy(validServices);\n  }\n\n  getSelectedServices() {\n    const namespaces = this.getNamespaces();\n    return _.map(namespaces, ({ namespace }) => {\n      return GetServiceFromNamespace(namespace);\n    });\n  }\n\n  /**\n   * 根据 Panel 的配置项，获取相应的监控数据\n   *\n   * @param options Panel 的配置参数，示例如下\n   *  {\n   *     cacheTimeout: undefined,\n   *     dashboardId: 41,\n   *     interval: \"30s\",\n   *     intervalMs: 30000,\n   *     maxDataPoints: 554,\n   *     panelId: 2,\n   *     range: {\n   *        from: Moment,\n   *        to: Moment,\n   *        raw: {from: \"now-6h\", to: \"now\"}\n   *     },\n   *     rangeRaw: {from: \"now-6h\", to: \"now\"},\n   *     scopedVars: {__interval: {…}, __interval_ms: {…}}\n   *     targets: [\n   *       {\n   *          namespace: \"QCE/CVM\",\n   *          refId: \"A\",\n   *          service: \"cvm\",\n   *          showInstanceDetails: false,\n   *          cvm: {\n   *            dimensionObject: {InstanceId: {…}}\n   *            instance: \"\",\n   *            instanceAlias: \"InstanceId\",\n   *            metricName: \"AccOuttraffic\",\n   *            metricUnit: \"MB\",\n   *            period: 10,\n   *            queries: {Filters: {…}, InstanceIds: Array(1), Limit: 20, Offset: 0, filtersChecked: false, …},\n   *            region: \"ap-beijing\"\n   *          },\n   *          cdb: {},\n   *       },\n   *     ],\n   *     timezone: \"browser\"\n   *   }\n   * @return 返回数据对象，示例如下\n   * {\n   *   data: [\n   *     {\n   *       \"target\": \"AccOuttraffic - ins-123\",\n   *       \"datapoints\": [\n   *         [861, 1450754160000],\n   *         [767, 1450754220000]\n   *       ]\n   *     }\n   *   ]\n   * }\n   */\n  query(options: any) {\n    const promises: any[] = [];\n    const services = this.getSelectedServices();\n    _.forEach(services, (service) => {\n      const optionsTemp = _.cloneDeep(options);\n      const targets = _.filter(optionsTemp.targets, (item) => item.service === service);\n      optionsTemp.targets = targets;\n      if (optionsTemp.targets.length > 0) {\n        const promiseTemp = this[`${_.toUpper(service)}Datasource`].query(optionsTemp);\n        if (promiseTemp) {\n          promises.push(promiseTemp);\n        }\n      }\n    });\n    if (promises.length === 0) {\n      return Promise.resolve({ data: [], state: LoadingState.Done });\n    }\n    return Promise.all(promises).then((results) => {\n      return { data: _.flatten(results), state: LoadingState.Done };\n    });\n  }\n\n  /**\n   * 获取模板变量的选择项列表\n   *\n   * @param query 模板变量配置填写的 Query 参数字符串\n   */\n  metricFindQuery(query: string, options?: any) {\n    const queries = ParseMetricQuery(query);\n    const service = GetServiceFromNamespace(queries['namespace'] || '');\n\n    if (_.isEmpty(queries) || !queries['namespace'] || !queries['action'] || !service) {\n      return Promise.resolve([]);\n    }\n    if (this[`${_.toUpper(service)}Datasource`].metricFindQuery) {\n      const result = this[`${_.toUpper(service)}Datasource`].metricFindQuery(\n        queries,\n        _.get(options, 'variable.regex', undefined)\n      );\n      if (result) {\n        return result;\n      }\n    }\n    return Promise.resolve([]);\n  }\n\n  /**\n   * 获取地域列表\n   * @param service\n   */\n  getRegions(service) {\n    if (this[`${_.toUpper(service)}Datasource`].getRegions) {\n      return this[`${_.toUpper(service)}Datasource`].getRegions();\n    }\n    return [];\n  }\n\n  /**\n   * 获取监控指标列表\n   * @param service\n   * @param region\n   */\n  getMetrics(service, region) {\n    return this[`${_.toUpper(service)}Datasource`].getMetrics(region);\n  }\n\n  /**\n   * 获取可用区列表\n   * @param service\n   * @param region\n   */\n  getZones(service, region) {\n    if (this[`${_.toUpper(service)}Datasource`].getZones) {\n      return this[`${_.toUpper(service)}Datasource`].getZones(region);\n    }\n    return [];\n  }\n\n  /**\n   * 获取filter中dropdown列表\n   * @param service\n   * @param param\n   */\n  getFilterDropdown(service, param) {\n    if (this[`${_.toUpper(service)}Datasource`].getFilterDropdown) {\n      return this[`${_.toUpper(service)}Datasource`].getFilterDropdown(param);\n    }\n    return [];\n  }\n\n  /**\n   * 获取实例列表\n   * @param service\n   * @param region\n   * @param params\n   */\n  getInstances(service, region, params) {\n    return this[`${_.toUpper(service)}Datasource`].getInstances(region, params);\n  }\n\n  /**\n   * 获取监听器列表\n   * @param service\n   * @param region\n   * @param params\n   */\n  getListeners(service, region, instance) {\n    if (!this[`${_.toUpper(service)}Datasource`].getListeners) {\n      return [];\n    }\n    return this[`${_.toUpper(service)}Datasource`].getListeners(region, instance);\n  }\n\n  /**\n   * 获取 私有网络列表\n   * @param service\n   */\n  getVpcIds(service, region) {\n    if (this[`${_.toUpper(service)}Datasource`].getVpcIds) {\n      return this[`${_.toUpper(service)}Datasource`].getVpcIds(region);\n    }\n  }\n\n  // 在 Datasource Config 配置时，验证 SerectId、SerectKey 的有效性，并测试勾选的监控服务项的对应 API 连通性\n  testDatasource() {\n    const promises: any[] = [];\n    const services = this.getSelectedServices();\n    _.forEach(services, (service) => {\n      promises.push(this[`${_.toUpper(service)}Datasource`].testDatasource());\n    });\n    if (promises.length === 0) {\n      return Promise.resolve(null);\n    }\n\n    return Promise.all(promises).then((results) => {\n      let status = 'success';\n      let message = 'DataSource Connection OK';\n\n      const errorMsg = _.reduce(\n        results,\n        (acc, cur) => {\n          if (cur.status === 'error') {\n            if (acc === '') acc += 'Oops! Found an error in: ';\n            acc += `${cur.service}: ${cur.message}; \\n`;\n          }\n          return acc;\n        },\n        ''\n      );\n\n      if (errorMsg) {\n        status = 'error';\n        message = errorMsg;\n      }\n\n      return {\n        status,\n        message,\n        title: _.upperFirst(status),\n      };\n    });\n  }\n\n  getServiceFn(service, fnName) {\n    return (...argu) => {\n      if (!this[`${_.toUpper(service)}Datasource`][fnName]) {\n        return [];\n      }\n      return this[`${_.toUpper(service)}Datasource`][fnName](...argu);\n    };\n  }\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    var obj;\n\n    while (queue.length) {\n        var item = queue.pop();\n        obj = item.obj[item.prop];\n\n        if (Array.isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n\n    return obj;\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (Array.isArray(target)) {\n            target.push(source);\n        } else if (typeof target === 'object') {\n            if (options.plainObjects || options.allowPrototypes || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (Array.isArray(target) && !Array.isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (Array.isArray(target) && Array.isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                if (target[i] && typeof target[i] === 'object') {\n                    target[i] = merge(target[i], item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str) {\n    try {\n        return decodeURIComponent(str.replace(/\\+/g, ' '));\n    } catch (e) {\n        return str;\n    }\n};\n\nvar encode = function encode(str) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = typeof str === 'string' ? str : String(str);\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    return compactQueue(queue);\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (obj === null || typeof obj === 'undefined') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    merge: merge\n};\n","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nmodule.exports = {\n    'default': 'RFC3986',\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return value;\n        }\n    },\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n","import coreModule from 'grafana/app/core/core_module';\nimport { DetailQueryConfig } from './types';\n\nclass SPQueryCtrl {\n  static _config: DetailQueryConfig;\n\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    Object.assign($scope, SPQueryCtrl._config);\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"{{instanceDocUrl}}\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        单次请求返回的数量，默认为20，最小值为1，最大值为100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      InstanceIds\n      <info-popover mode=\"right-normal\">\n        实例 ID，每次请求的实例的上限为100，参数不支持同时指定 InstanceIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n      switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n  <multi-condition type=\"'input'\" max-cond=\"100\" value=\"target.queries.InstanceIds\" on-change=\"onChange()\">\n  </multi-condition>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      Filters\n      <info-popover mode=\"right-normal\">\n        过滤条件，每次请求的 Filters 的上限为10，Filter.Values 的上限为5。参数不支持同时指定 InstanceIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n      on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n  <div class=\"gf-form-inline\" ng-repeat=\"field in CVMFilterFieldsDescriptor\">\n    <label class=\"gf-form-label width-14\">\n      {{ field.key }}\n      <info-popover mode=\"right-normal\">\n        {{ field.cnDescriptor }}\n        <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n      </info-popover>\n    </label>\n    <multi-condition\n      ng-if=\"field.type === 'dropdownmulti'\"\n      type=\"'dropdown'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      get-options=\"getDropdown(field.key)\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputNumbermulti'\"\n      type=\"'inputNumber'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      maxNum=\"field.max\"\n      minNum=\"field.min\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputmulti'\"\n      type=\"'input'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <custom-select-dropdown\n      ng-if=\"field.type === 'select'\"\n      value=\"target.queries.Filters[field.key]\"\n      options=\"field.list\"\n      multiple=\"true\"\n      on-change=\"onChange()\"\n    ></custom-select-dropdown>\n  </div>\n</div>\n</div>\n`;\n\nexport function queryDDO() {\n  return {\n    template: template,\n    controller: SPQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\nexport default (name: string, config: DetailQueryConfig) => {\n  SPQueryCtrl._config = config;\n  coreModule.directive(name, queryDDO);\n};\n","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching\n        return prefix + '[]';\n    },\n    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching\n        return prefix;\n    }\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaults = {\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar stringify = function stringify( // eslint-disable-line func-name-matching\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter,\n    encodeValuesOnly\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (Array.isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        if (Array.isArray(obj)) {\n            values = values.concat(stringify(\n                obj[key],\n                generateArrayPrefix(prefix, key),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly\n            ));\n        } else {\n            values = values.concat(stringify(\n                obj[key],\n                prefix + (allowDots ? '.' + key : '[' + key + ']'),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly\n            ));\n        }\n    }\n\n    return values;\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = opts ? utils.assign({}, opts) : {};\n\n    if (options.encoder !== null && options.encoder !== undefined && typeof options.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var delimiter = typeof options.delimiter === 'undefined' ? defaults.delimiter : options.delimiter;\n    var strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n    var skipNulls = typeof options.skipNulls === 'boolean' ? options.skipNulls : defaults.skipNulls;\n    var encode = typeof options.encode === 'boolean' ? options.encode : defaults.encode;\n    var encoder = typeof options.encoder === 'function' ? options.encoder : defaults.encoder;\n    var sort = typeof options.sort === 'function' ? options.sort : null;\n    var allowDots = typeof options.allowDots === 'undefined' ? false : options.allowDots;\n    var serializeDate = typeof options.serializeDate === 'function' ? options.serializeDate : defaults.serializeDate;\n    var encodeValuesOnly = typeof options.encodeValuesOnly === 'boolean' ? options.encodeValuesOnly : defaults.encodeValuesOnly;\n    if (typeof options.format === 'undefined') {\n        options.format = formats['default'];\n    } else if (!Object.prototype.hasOwnProperty.call(formats.formatters, options.format)) {\n        throw new TypeError('Unknown format option provided.');\n    }\n    var formatter = formats.formatters[options.format];\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (Array.isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (options.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = options.arrayFormat;\n    } else if ('indices' in options) {\n        arrayFormat = options.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (sort) {\n        objKeys.sort(sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        keys = keys.concat(stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            strictNullHandling,\n            skipNulls,\n            encode ? encoder : null,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            formatter,\n            encodeValuesOnly\n        ));\n    }\n\n    var joined = keys.join(delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    parameterLimit: 1000,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n\n    for (var i = 0; i < parts.length; ++i) {\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder);\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder);\n            val = options.decoder(part.slice(pos + 1), defaults.decoder);\n        }\n        if (has.call(obj, key)) {\n            obj[key] = [].concat(obj[key]).concat(val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options) {\n    var leaf = val;\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]') {\n            obj = [];\n            obj = obj.concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys\n        // that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while ((segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options);\n};\n\nmodule.exports = function (str, opts) {\n    var options = opts ? utils.assign({}, opts) : {};\n\n    if (options.decoder !== null && options.decoder !== undefined && typeof options.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    options.ignoreQueryPrefix = options.ignoreQueryPrefix === true;\n    options.delimiter = typeof options.delimiter === 'string' || utils.isRegExp(options.delimiter) ? options.delimiter : defaults.delimiter;\n    options.depth = typeof options.depth === 'number' ? options.depth : defaults.depth;\n    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : defaults.arrayLimit;\n    options.parseArrays = options.parseArrays !== false;\n    options.decoder = typeof options.decoder === 'function' ? options.decoder : defaults.decoder;\n    options.allowDots = typeof options.allowDots === 'boolean' ? options.allowDots : defaults.allowDots;\n    options.plainObjects = typeof options.plainObjects === 'boolean' ? options.plainObjects : defaults.plainObjects;\n    options.allowPrototypes = typeof options.allowPrototypes === 'boolean' ? options.allowPrototypes : defaults.allowPrototypes;\n    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : defaults.parameterLimit;\n    options.strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options);\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n","var map = {\n\t\"./_base/query.ts\": 7,\n\t\"./apigateway/datasource\": 70,\n\t\"./apigateway/datasource.ts\": 70,\n\t\"./apigateway/query.ts\": 126,\n\t\"./apigateway/query_def.ts\": 21,\n\t\"./bmIntraLb/datasource\": 71,\n\t\"./bmIntraLb/datasource.ts\": 71,\n\t\"./bmIntraLb/query.ts\": 127,\n\t\"./bmIntraLb/query_def.ts\": 29,\n\t\"./bm_lb/datasource\": 72,\n\t\"./bm_lb/datasource.ts\": 72,\n\t\"./bm_lb/query.ts\": 128,\n\t\"./bm_lb/query_def.ts\": 30,\n\t\"./bm_pcx/datasource\": 73,\n\t\"./bm_pcx/datasource.ts\": 73,\n\t\"./bm_pcx/query.ts\": 129,\n\t\"./bm_pcx/query_def.ts\": 31,\n\t\"./bwp/datasource\": 74,\n\t\"./bwp/datasource.ts\": 74,\n\t\"./bwp/query.ts\": 130,\n\t\"./bwp/query_def.ts\": 61,\n\t\"./cbs/datasource\": 75,\n\t\"./cbs/datasource.ts\": 75,\n\t\"./cbs/query.ts\": 131,\n\t\"./cbs/query_def.ts\": 32,\n\t\"./cdb/datasource\": 76,\n\t\"./cdb/datasource.ts\": 76,\n\t\"./cdb/query.ts\": 132,\n\t\"./cdb/query_def.ts\": 42,\n\t\"./cdn/datasource\": 77,\n\t\"./cdn/datasource.ts\": 77,\n\t\"./cdn/query.ts\": 133,\n\t\"./cdn/query_def.ts\": 62,\n\t\"./cdn_province/datasource\": 78,\n\t\"./cdn_province/datasource.ts\": 78,\n\t\"./cdn_province/query.ts\": 134,\n\t\"./cdn_province/query_def.ts\": 33,\n\t\"./ceip_summary/datasource\": 79,\n\t\"./ceip_summary/datasource.ts\": 79,\n\t\"./ceip_summary/query.ts\": 135,\n\t\"./ceip_summary/query_def.ts\": 34,\n\t\"./ces/datasource\": 80,\n\t\"./ces/datasource.ts\": 80,\n\t\"./ces/query.ts\": 136,\n\t\"./ces/query_def.ts\": 43,\n\t\"./cfs/datasource\": 81,\n\t\"./cfs/datasource.ts\": 81,\n\t\"./cfs/query.ts\": 137,\n\t\"./cfs/query_def.ts\": 55,\n\t\"./ckafka/datasource\": 82,\n\t\"./ckafka/datasource.ts\": 82,\n\t\"./ckafka/query.ts\": 138,\n\t\"./ckafka/query_def.ts\": 10,\n\t\"./clb/datasource\": 83,\n\t\"./clb/datasource.ts\": 83,\n\t\"./clb/query.ts\": 139,\n\t\"./clb/query_def.ts\": 12,\n\t\"./cls/datasource\": 84,\n\t\"./cls/datasource.ts\": 84,\n\t\"./cls/query.ts\": 140,\n\t\"./cls/query_def.ts\": 27,\n\t\"./cmq/datasource\": 85,\n\t\"./cmq/datasource.ts\": 85,\n\t\"./cmq/query.ts\": 141,\n\t\"./cmq/query_def.ts\": 56,\n\t\"./cmq_topic/datasource\": 86,\n\t\"./cmq_topic/datasource.ts\": 86,\n\t\"./cmq_topic/query.ts\": 142,\n\t\"./cmq_topic/query_def.ts\": 35,\n\t\"./cos/datasource\": 87,\n\t\"./cos/datasource.ts\": 87,\n\t\"./cos/query_def.ts\": 143,\n\t\"./cpm/datasource\": 88,\n\t\"./cpm/datasource.ts\": 88,\n\t\"./cpm/query.ts\": 144,\n\t\"./cpm/query_def.ts\": 36,\n\t\"./cvm/datasource\": 89,\n\t\"./cvm/datasource.ts\": 89,\n\t\"./cvm/query.ts\": 145,\n\t\"./cvm/query_def.ts\": 57,\n\t\"./cynosdb_mysql/datasource\": 90,\n\t\"./cynosdb_mysql/datasource.ts\": 90,\n\t\"./cynosdb_mysql/query.ts\": 146,\n\t\"./cynosdb_mysql/query_def.ts\": 24,\n\t\"./dc/datasource\": 91,\n\t\"./dc/datasource.ts\": 91,\n\t\"./dc/query.ts\": 147,\n\t\"./dc/query_def.ts\": 44,\n\t\"./dcdb/datasource\": 92,\n\t\"./dcdb/datasource.ts\": 92,\n\t\"./dcdb/query.ts\": 148,\n\t\"./dcdb/query_def.ts\": 15,\n\t\"./dcg/datasource\": 93,\n\t\"./dcg/datasource.ts\": 93,\n\t\"./dcg/query.ts\": 149,\n\t\"./dcg/query_def.ts\": 45,\n\t\"./dcx/datasource\": 94,\n\t\"./dcx/datasource.ts\": 94,\n\t\"./dcx/query.ts\": 150,\n\t\"./dcx/query_def.ts\": 46,\n\t\"./ecdn/datasource\": 95,\n\t\"./ecdn/datasource.ts\": 95,\n\t\"./ecdn/query.ts\": 151,\n\t\"./ecdn/query_def.ts\": 37,\n\t\"./ecm/datasource\": 96,\n\t\"./ecm/datasource.ts\": 96,\n\t\"./ecm/query.ts\": 152,\n\t\"./ecm/query_def.ts\": 38,\n\t\"./ecm_block_storage/datasource\": 97,\n\t\"./ecm_block_storage/datasource.ts\": 97,\n\t\"./ecm_block_storage/query.ts\": 153,\n\t\"./ecm_block_storage/query_def.ts\": 20,\n\t\"./ecm_lb/datasource\": 98,\n\t\"./ecm_lb/datasource.ts\": 98,\n\t\"./ecm_lb/query.ts\": 154,\n\t\"./ecm_lb/query_def.ts\": 47,\n\t\"./gse/datasource\": 99,\n\t\"./gse/datasource.ts\": 99,\n\t\"./gse/query.ts\": 155,\n\t\"./gse/query_def.ts\": 14,\n\t\"./lb/datasource\": 100,\n\t\"./lb/datasource.ts\": 100,\n\t\"./lb/query.ts\": 156,\n\t\"./lb/query_def.ts\": 63,\n\t\"./lighthouse/datasource\": 101,\n\t\"./lighthouse/datasource.ts\": 101,\n\t\"./lighthouse/query.ts\": 157,\n\t\"./lighthouse/query_def.ts\": 54,\n\t\"./mongodb/datasource\": 102,\n\t\"./mongodb/datasource.ts\": 102,\n\t\"./mongodb/query.ts\": 158,\n\t\"./mongodb/query_def.ts\": 48,\n\t\"./mr/datasource\": 103,\n\t\"./mr/datasource.ts\": 103,\n\t\"./mr/query.ts\": 159,\n\t\"./mr/query_def.ts\": 22,\n\t\"./nat_gateway/datasource\": 104,\n\t\"./nat_gateway/datasource.ts\": 104,\n\t\"./nat_gateway/query.ts\": 160,\n\t\"./nat_gateway/query_def.ts\": 64,\n\t\"./ov_cdn/datasource\": 105,\n\t\"./ov_cdn/datasource.ts\": 105,\n\t\"./ov_cdn/query.ts\": 161,\n\t\"./ov_cdn/query_def.ts\": 65,\n\t\"./pcx/datasource\": 106,\n\t\"./pcx/datasource.ts\": 106,\n\t\"./pcx/query.ts\": 162,\n\t\"./pcx/query_def.ts\": 58,\n\t\"./postgresql/datasource\": 107,\n\t\"./postgresql/datasource.ts\": 107,\n\t\"./postgresql/query.ts\": 163,\n\t\"./postgresql/query_def.ts\": 39,\n\t\"./qaap/datasource\": 108,\n\t\"./qaap/datasource.ts\": 108,\n\t\"./qaap/query.ts\": 164,\n\t\"./qaap/query_def.ts\": 49,\n\t\"./redis/datasource\": 109,\n\t\"./redis/datasource.ts\": 109,\n\t\"./redis/query.ts\": 165,\n\t\"./redis/query_def.ts\": 59,\n\t\"./redis_mem/datasource\": 110,\n\t\"./redis_mem/datasource.ts\": 110,\n\t\"./redis_mem/query.ts\": 166,\n\t\"./redis_mem/query_def.ts\": 16,\n\t\"./scf/datasource\": 111,\n\t\"./scf/datasource.ts\": 111,\n\t\"./scf/query.ts\": 167,\n\t\"./scf/query_def.ts\": 25,\n\t\"./sqlserver/datasource\": 112,\n\t\"./sqlserver/datasource.ts\": 112,\n\t\"./sqlserver/query.ts\": 168,\n\t\"./sqlserver/query_def.ts\": 28,\n\t\"./tcaplus/datasource\": 113,\n\t\"./tcaplus/datasource.ts\": 113,\n\t\"./tcaplus/query.ts\": 169,\n\t\"./tcaplus/query_def.ts\": 50,\n\t\"./tdmq/datasource\": 114,\n\t\"./tdmq/datasource.ts\": 114,\n\t\"./tdmq/query.ts\": 170,\n\t\"./tdmq/query_def.ts\": 13,\n\t\"./tdmq_rabbitmq/datasource\": 115,\n\t\"./tdmq_rabbitmq/datasource.ts\": 115,\n\t\"./tdmq_rabbitmq/query.ts\": 171,\n\t\"./tdmq_rabbitmq/query_def.ts\": 17,\n\t\"./tdmq_rocketmq/datasource\": 116,\n\t\"./tdmq_rocketmq/datasource.ts\": 116,\n\t\"./tdmq_rocketmq/query.ts\": 172,\n\t\"./tdmq_rocketmq/query_def.ts\": 18,\n\t\"./tke/datasource\": 117,\n\t\"./tke/datasource.ts\": 117,\n\t\"./tke/query.ts\": 173,\n\t\"./tke/query_def.ts\": 69,\n\t\"./tsf/datasource\": 118,\n\t\"./tsf/datasource.ts\": 118,\n\t\"./tsf/query.ts\": 174,\n\t\"./tsf/query_def.ts\": 60,\n\t\"./v_clb/datasource\": 119,\n\t\"./v_clb/datasource.ts\": 119,\n\t\"./v_clb/query.ts\": 175,\n\t\"./v_clb/query_def.ts\": 23,\n\t\"./vbc/datasource\": 120,\n\t\"./vbc/datasource.ts\": 120,\n\t\"./vbc/query.ts\": 176,\n\t\"./vbc/query_def.ts\": 51,\n\t\"./vpc_net_detect/datasource\": 121,\n\t\"./vpc_net_detect/datasource.ts\": 121,\n\t\"./vpc_net_detect/query.ts\": 177,\n\t\"./vpc_net_detect/query_def.ts\": 40,\n\t\"./vpngw/datasource\": 122,\n\t\"./vpngw/datasource.ts\": 122,\n\t\"./vpngw/query.ts\": 178,\n\t\"./vpngw/query_def.ts\": 52,\n\t\"./vpnx/datasource\": 123,\n\t\"./vpnx/datasource.ts\": 123,\n\t\"./vpnx/query.ts\": 179,\n\t\"./vpnx/query_def.ts\": 53,\n\t\"./waf/datasource\": 124,\n\t\"./waf/datasource.ts\": 124,\n\t\"./waf/query.ts\": 180,\n\t\"./waf/query_def.ts\": 41\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 191;","module.exports = __WEBPACK_EXTERNAL_MODULE__192__;","module.exports = __WEBPACK_EXTERNAL_MODULE__193__;","module.exports = __WEBPACK_EXTERNAL_MODULE__196__;","\"use strict\";\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && btoa) {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","module.exports = __WEBPACK_EXTERNAL_MODULE__200__;","module.exports = __WEBPACK_EXTERNAL_MODULE__201__;","module.exports = \"<query-editor-row query-ctrl=\\\"ctrl\\\" class=\\\"generic-datasource-query-row\\\" has-text-edit-mode=\\\"true\\\">\\n  <div class=\\\"gf-form-inline\\\">\\n    <div class=\\\"gf-form\\\">\\n      <label class=\\\"gf-form-label query-keyword width-9\\\">Namespace</label>\\n      <div class=\\\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\\\">\\n        <gf-cascader\\n          ng-if=\\\"ctrl.isCascader\\\"\\n          style=\\\"width: 160px\\\"\\n          change-on-select=\\\"false\\\"\\n          options=\\\"ctrl.cascaderOptions\\\"\\n          on-select=\\\"ctrl.cascaderChange(_query)\\\"\\n          initial-value=\\\"{{ctrl.target.namespace}}\\\"\\n        ></gf-cascader>\\n\\n        <gf-form-dropdown\\n          ng-if=\\\"!ctrl.isCascader\\\"\\n          model=\\\"ctrl.target.namespace\\\"\\n          lookup-text=\\\"true\\\"\\n          get-options=\\\"ctrl.getNamespaces($query)\\\"\\n          on-change=\\\"ctrl.onNamespaceChange()\\\"\\n          css-class=\\\"min-width-10\\\"\\n        >\\n        </gf-form-dropdown>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"gf-form-inline\\\" ng-if=\\\"!ctrl.hideRegion\\\">\\n    <div class=\\\"gf-form\\\">\\n      <label class=\\\"gf-form-label query-keyword width-9\\\">Region</label>\\n      <div class=\\\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\\\">\\n        <gf-form-dropdown\\n          model=\\\"ctrl.target[ctrl.target.service].region\\\"\\n          allow-custom=\\\"true\\\"\\n          lookup-text=\\\"true\\\"\\n          get-options=\\\"ctrl.getRegions($query)\\\"\\n          on-change=\\\"ctrl.onRegionChange()\\\"\\n          css-class=\\\"min-width-10\\\"\\n          disabled\\n        >\\n        </gf-form-dropdown>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"gf-form-inline\\\">\\n    <div class=\\\"gf-form\\\">\\n      <label class=\\\"gf-form-label query-keyword width-9\\\">MetricName</label>\\n      <div class=\\\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\\\">\\n        <gf-form-dropdown\\n          model=\\\"ctrl.target[ctrl.target.service].metricName\\\"\\n          allow-custom=\\\"true\\\"\\n          lookup-text=\\\"true\\\"\\n          get-options=\\\"ctrl.getMetrics($query)\\\"\\n          on-change=\\\"ctrl.onMetricChange()\\\"\\n          css-class=\\\"min-width-10\\\"\\n        >\\n        </gf-form-dropdown>\\n      </div>\\n    </div>\\n    <div class=\\\"gf-form gf-form-label--grow\\\" ng-if=\\\"!!ctrl.getMetricNameDesc()\\\">\\n      <label class=\\\"gf-form-label gf-form-label--grow\\\">({{ctrl.getMetricNameDesc()}})</label>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"gf-form-inline\\\" style=\\\"align-items: center\\\">\\n    <div class=\\\"gf-form\\\">\\n      <label class=\\\"gf-form-label query-keyword width-9\\\">Period</label>\\n      <div class=\\\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\\\">\\n        <select\\n          class=\\\"gf-form-input min-width-10\\\"\\n          ng-change=\\\"ctrl.refresh()\\\"\\n          ng-model=\\\"ctrl.target[ctrl.target.service].period\\\"\\n          ng-options=\\\"f for f in ctrl.sortedPeriodList\\\"\\n        ></select>\\n      </div>\\n    </div>\\n    <span style=\\\"margin-left: 8px; font-size: 12px\\\">({{ctrl.getTimeDesc()}})</span>\\n  </div>\\n\\n  <div class=\\\"gf-form-inline\\\" style=\\\"align-items: center\\\">\\n    <div class=\\\"gf-form\\\">\\n      <label class=\\\"gf-form-label query-keyword width-9\\\">Timeshift</label>\\n      <input\\n        class=\\\"gf-form-input width-10\\\"\\n        ng-model=\\\"ctrl.target[ctrl.target.service].timeshift\\\"\\n        ng-blur=\\\"ctrl.refresh()\\\"\\n      ></input>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"gf-form-inline\\\">\\n    <div class=\\\"gf-form\\\">\\n      <label class=\\\"gf-form-label query-keyword width-9\\\">Instance</label>\\n      <div class=\\\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\\\">\\n        <select\\n          class=\\\"gf-form-input min-width-8\\\"\\n          ng-change=\\\"ctrl.onInstanceAliasChange()\\\"\\n          ng-model=\\\"ctrl.target[ctrl.target.service].instanceAlias\\\"\\n          ng-options=\\\"f.value as f.text for f in ctrl.instanceAliasList\\\"\\n        ></select>\\n      </div>\\n      <div class=\\\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\\\">\\n        <gf-form-dropdown\\n          model=\\\"ctrl.target[ctrl.target.service].instance\\\"\\n          allow-custom=\\\"true\\\"\\n          lookup-text=\\\"true\\\"\\n          get-options=\\\"ctrl.getInstances($query)\\\"\\n          on-change=\\\"ctrl.onInstanceChange()\\\"\\n          css-class=\\\"min-width-10\\\"\\n        >\\n        </gf-form-dropdown>\\n      </div>\\n    </div>\\n    <div class=\\\"gf-form\\\" ng-if=\\\"!ctrl.isVariable('instance')\\\">\\n      <label class=\\\"gf-form-label width-7\\\">Show Details</label>\\n      <gf-form-switch\\n        class=\\\"gf-form tc-switch\\\"\\n        label-class=\\\"width-7\\\"\\n        checked=\\\"ctrl.target.showInstanceDetails\\\"\\n        switch-class=\\\"max-width-5\\\"\\n      ></gf-form-switch>\\n    </div>\\n    <div class=\\\"gf-form gf-form-label--grow\\\">\\n      <!-- this is explain how much items will display to user -->\\n      <label class=\\\"gf-form-label gf-form-label--grow\\\">({{ctrl.getSearchDesc()}})</label>\\n    </div>\\n  </div>\\n</query-editor-row>\\n\";","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--8-1!../../../../node_modules/postcss-loader/src/index.js??ref--8-2!../../../../node_modules/sass-loader/dist/cjs.js!./query_editor.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(true);\n// Module\nexports.push([module.id, \".tc-sub-params{margin-top:4px;margin-left:125px}.tc-sub-params .gf-form-inline{min-height:42px}.tc-sub-params .gf-form-inline .gf-form-label{margin-bottom:2px}.tc-sub-params .tc-info-label{margin-bottom:6px}.tc-sub-params .tc-info-label>a{margin-left:10px}.tc-switch{border-left:1px solid #262628;margin-bottom:0 !important}.tc-condition-block{margin-right:10px;display:inline-block}.tc-condition-block .tc-condition-input{border-radius:0}.tc-condition-block .tc-condition-minus{vertical-align:top;border-radius:0 3px 3px 0}.tc-condition-block .tc-condition-dropdown{display:inline-block}.tc-condition-block>input{display:inline-block;margin-right:0}.tc-condition-block>label{display:inline-block}.tc-condition-add{display:inline-block;vertical-align:top}.tc-condition-add>label{border-radius:3px}.filtered-color{color:#ff851b}.secret-tips{position:absolute;right:-25px;border-radius:2px;background:#1b1b1b;padding:10px;top:-35px;width:300px;border:1px solid #2c3235}.secret-tips-tri{position:absolute;width:15px;height:15px;left:-8px;top:60px;background:#1b1b1b;border:1px solid #2c3235;border-top:0;border-right:0;transform:rotate(45deg)}.rc-cascader-menu-item{min-width:160px;font-size:14px}\", \"\",{\"version\":3,\"sources\":[\"query_editor.css\"],\"names\":[],\"mappings\":\"AAAA,eAAe,cAAc,CAAC,iBAAiB,CAAC,+BAA+B,eAAe,CAAC,8CAA8C,iBAAiB,CAAC,8BAA8B,iBAAiB,CAAC,gCAAgC,gBAAgB,CAAC,WAAW,6BAA6B,CAAC,0BAA0B,CAAC,oBAAoB,iBAAiB,CAAC,oBAAoB,CAAC,wCAAwC,eAAe,CAAC,wCAAwC,kBAAkB,CAAC,yBAAyB,CAAC,2CAA2C,oBAAoB,CAAC,0BAA0B,oBAAoB,CAAC,cAAc,CAAC,0BAA0B,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,CAAC,wBAAwB,iBAAiB,CAAC,gBAAgB,aAAa,CAAC,aAAa,iBAAiB,CAAC,WAAW,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,wBAAwB,CAAC,iBAAiB,iBAAiB,CAAC,UAAU,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,kBAAkB,CAAC,wBAAwB,CAAC,YAAY,CAAC,cAAc,CAAC,uBAAuB,CAAC,uBAAuB,eAAe,CAAC,cAAc\",\"file\":\"query_editor.css\",\"sourcesContent\":[\".tc-sub-params{margin-top:4px;margin-left:125px}.tc-sub-params .gf-form-inline{min-height:42px}.tc-sub-params .gf-form-inline .gf-form-label{margin-bottom:2px}.tc-sub-params .tc-info-label{margin-bottom:6px}.tc-sub-params .tc-info-label>a{margin-left:10px}.tc-switch{border-left:1px solid #262628;margin-bottom:0 !important}.tc-condition-block{margin-right:10px;display:inline-block}.tc-condition-block .tc-condition-input{border-radius:0}.tc-condition-block .tc-condition-minus{vertical-align:top;border-radius:0 3px 3px 0}.tc-condition-block .tc-condition-dropdown{display:inline-block}.tc-condition-block>input{display:inline-block;margin-right:0}.tc-condition-block>label{display:inline-block}.tc-condition-add{display:inline-block;vertical-align:top}.tc-condition-add>label{border-radius:3px}.filtered-color{color:#ff851b}.secret-tips{position:absolute;right:-25px;border-radius:2px;background:#1b1b1b;padding:10px;top:-35px;width:300px;border:1px solid #2c3235}.secret-tips-tri{position:absolute;width:15px;height:15px;left:-8px;top:60px;background:#1b1b1b;border:1px solid #2c3235;border-top:0;border-right:0;transform:rotate(45deg)}.rc-cascader-menu-item{min-width:160px;font-size:14px}\"]}]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--10-1!../../../node_modules/postcss-loader/src/index.js??ref--10-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-3!./index.less\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(true);\n// Module\nexports.push([module.id, \".log-service-monospaced-font-family {\\n  font-family: RobotoMono-Regular, monospace, Roboto, sans-serif;\\n}\\n.log-service-monospaced-font-family button,\\n.log-service-monospaced-font-family input,\\n.log-service-monospaced-font-family select,\\n.log-service-monospaced-font-family textarea {\\n  font-family: RobotoMono-Regular, monospace, Roboto, sans-serif;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"index.less\"],\"names\":[],\"mappings\":\"AAAA;EACE,8DAA8D;AAChE;AACA;;;;EAIE,8DAA8D;AAChE\",\"file\":\"index.less\",\"sourcesContent\":[\".log-service-monospaced-font-family {\\n  font-family: RobotoMono-Regular, monospace, Roboto, sans-serif;\\n}\\n.log-service-monospaced-font-family button,\\n.log-service-monospaced-font-family input,\\n.log-service-monospaced-font-family select,\\n.log-service-monospaced-font-family textarea {\\n  font-family: RobotoMono-Regular, monospace, Roboto, sans-serif;\\n}\\n\"]}]);\n// Exports\nmodule.exports = exports;\n","import coreModule from 'grafana/app/core/core_module';\nimport _ from 'lodash';\nimport { isDefined } from 'angular';\n\n// mutilple conditions directive for instance query params\nexport class MultiConditionCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.type = $scope.type || 'input';\n      $scope.placeholder = isDefined($scope.placeholder) ? $scope.placeholder : '';\n      $scope.value = isDefined($scope.value) ? $scope.value : [];\n      $scope.maxCond = _.toInteger($scope.maxCond) > 0 ? _.toInteger($scope.maxCond) : -1;\n    };\n\n    $scope.onInputBlur = () => {\n      $scope.onChangeInternal();\n    };\n\n    $scope.deleteCondition = (index) => {\n      $scope.value.splice(index, 1);\n      $scope.onChangeInternal();\n    };\n\n    $scope.addCondition = (cond) => {\n      $scope.value.push(cond);\n      $scope.onChangeInternal();\n    };\n\n    $scope.onChangeInternal = () => {\n      $scope.onChange({ value: $scope.value });\n    };\n\n    $scope.onSelectChange = (value) => {\n      $scope.onChange({ value });\n    };\n\n    $scope.getSelectedOptions = () => {\n      const selectedOptions = _.filter(\n        $scope.options,\n        (item) => _.get($scope.value, 'value', []).indexOf(item.value) !== -1\n      );\n      return selectedOptions.length > 0\n        ? _.map(selectedOptions, (option) => `${option.text}: ${option.value}`).join('; ')\n        : undefined;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div ng-if=\"type === 'input'\">\n  <div ng-repeat=\"v in value track by $index\" class=\"gf-form tc-condition-block\">\n    <input class=\"gf-form-input width-10 tc-condition-input\" type=\"text\" ng-model=\"value[$index]\" placeholder=\"{{placeholder}}\"\n      ng-blur=\"onInputBlur()\"></input>\n    <label class=\"gf-form-label pointer tc-condition-minus\">\n      <a class=\"pointer\" ng-click=\"deleteCondition($index)\">\n        <i class=\"fa fa-minus\"></i>\n      </a>\n    </label>\n  </div>\n  <div class=\"gf-form tc-condition-add\">\n    <label class=\"gf-form-label query-part\" ng-if=\"maxCond === -1 || value.length < maxCond\">\n      <a class=\"pointer\" ng-click=\"addCondition('')\">\n        <i class=\"fa fa-plus\"></i>\n      </a>\n    </label>\n  </div>\n</div>\n\n<div ng-if=\"type === 'inputNumber'\">\n  <div ng-repeat=\"v in value track by $index\" class=\"gf-form tc-condition-block\">\n    <input type=\"number\" ng-model=\"value[$index]\" ng-blur=\"onInputBlur()\" class=\"gf-form-input width-10 tc-condition-input\"\n      ng-min=\"minNum\" ng-max=\"maxNum\" ng-change=\"onChangeInternal()\">\n    <label class=\"gf-form-label pointer tc-condition-minus\">\n      <a class=\"pointer\" ng-click=\"deleteCondition($index)\">\n        <i class=\"fa fa-minus\"></i>\n      </a>\n    </label>\n  </div>\n  <div class=\"gf-form tc-condition-add\">\n    <label class=\"gf-form-label query-part\" ng-if=\"maxCond === -1 || value.length < maxCond\">\n      <a class=\"pointer\" ng-click=\"addCondition(undefined)\">\n        <i class=\"fa fa-plus\"></i>\n      </a>\n    </label>\n  </div>\n</div>\n\n<div class=\"gf-form\" ng-if=\"type === 'select'\">\n  <custom-select-dropdown value=\"value\" multiple=\"true\" options=\"options\" on-change=\"onSelectChange(value)\"></custom-select-dropdown>\n  <label class=\"gf-form-label tc-info-label\" ng-if=\"getSelectedOptions()\">\n    {{getSelectedOptions()}}\n  </label>\n</div>\n\n<div ng-if=\"type === 'dropdown'\">\n  <div ng-repeat=\"v in value track by $index\" class=\"gf-form tc-condition-block\" style=\"vertical-align: top;\">\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent tc-condition-dropdown\">\n      <gf-form-dropdown model=\"value[$index]\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getOptions()\" on-change=\"onChangeInternal()\"\n        css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n    <label class=\"gf-form-label pointer tc-condition-minus\">\n      <a class=\"pointer\" ng-click=\"deleteCondition($index)\">\n        <i class=\"fa fa-minus\"></i>\n      </a>\n    </label>\n  </div>\n  <div class=\"gf-form tc-condition-add\">\n    <label class=\"gf-form-label query-part\" ng-if=\"maxCond === -1 || value.length < maxCond\">\n      <a class=\"pointer\" ng-click=\"addCondition('')\">\n        <i class=\"fa fa-plus\"></i>\n      </a>\n    </label>\n  </div>\n</div>\n\n<!-- <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n  <gf-form-dropdown model=\"ctrl.target.cvm.instance\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"ctrl.getInstances($query)\"\n    on-change=\"ctrl.onInstanceChange()\" css-class=\"min-width-10\">\n  </gf-form-dropdown>\n</div> -->\n`;\n\nexport function multiCondition() {\n  return {\n    template: template,\n    controller: MultiConditionCtrl,\n    restrict: 'E',\n    scope: {\n      type: '=',\n      value: '=',\n      maxCond: '=?',\n      placeholder: '=?',\n      options: '=?',\n      maxNum: '=?',\n      minNum: '=?',\n      multiple: '=?',\n      onChange: '&',\n      getOptions: '&',\n    },\n  };\n}\n\ncoreModule.directive('multiCondition', multiCondition);\n","import angular from 'angular';\nimport _ from 'lodash';\nimport coreModule from 'grafana/app/core/core_module';\n\nexport class CustomSelectDropdownCtrl {\n  dropdownVisible: any;\n  highlightIndex: any;\n  linkText: any;\n  oldVariableText: any;\n  selectOptions: any;\n  options: any;\n  value: any;\n  search: any;\n  multiple: boolean | undefined;\n  selectedValues: any;\n  variable: any;\n\n  hide: any;\n  onChange: any;\n\n  /** @ngInject */\n  constructor() {}\n\n  show() {\n    this.oldVariableText = _.get(this.value, 'text', '');\n    this.highlightIndex = -1;\n\n    this.selectOptions = _.cloneDeep(this.options);\n    _.map(this.selectOptions, (option) => {\n      const selectedValue = _.get(this.value, 'value');\n      if (!selectedValue) {\n        option.selected = false;\n      } else if (_.isArray(selectedValue)) {\n        option.selected = _.indexOf(selectedValue, option.value) !== -1 ? true : false;\n      } else {\n        option.selected = selectedValue === option.value;\n      }\n    });\n\n    this.selectedValues = _.filter(this.selectOptions, { selected: true });\n\n    this.search = {\n      query: '',\n      options: this.selectOptions.slice(0, Math.min(this.selectOptions.length, 1000)),\n    };\n\n    this.dropdownVisible = true;\n  }\n\n  updateLinkText() {\n    this.linkText = _.get(this.value, 'text', '');\n  }\n\n  clearSelections() {\n    _.each(this.selectOptions, (option) => {\n      option.selected = false;\n    });\n\n    this.selectionsChanged(false);\n  }\n\n  keyDown(evt) {\n    if (evt.keyCode === 27) {\n      this.hide();\n    }\n    if (evt.keyCode === 40) {\n      this.moveHighlight(1);\n    }\n    if (evt.keyCode === 38) {\n      this.moveHighlight(-1);\n    }\n    if (evt.keyCode === 13) {\n      if (this.search.options.length === 0) {\n        this.commitChanges();\n      } else {\n        this.selectValue(this.search.options[this.highlightIndex], {}, true, false);\n      }\n    }\n    if (evt.keyCode === 32) {\n      this.selectValue(this.search.options[this.highlightIndex], {}, false, false);\n    }\n  }\n\n  moveHighlight(direction) {\n    this.highlightIndex = (this.highlightIndex + direction) % this.search.options.length;\n  }\n\n  selectValue(option, event, commitChange?, excludeOthers?) {\n    if (!option) {\n      return;\n    }\n    option.selected = this.multiple ? !option.selected : true;\n\n    commitChange = commitChange || false;\n    excludeOthers = excludeOthers || false;\n\n    const setAllExceptCurrentTo = (newValue) => {\n      _.each(this.selectOptions, (other) => {\n        if (option !== other) {\n          other.selected = newValue;\n        }\n      });\n    };\n\n    // commit action (enter key), should not deselect it\n    if (commitChange) {\n      option.selected = true;\n    }\n\n    if (excludeOthers) {\n      setAllExceptCurrentTo(false);\n      commitChange = true;\n    } else if (!this.multiple) {\n      setAllExceptCurrentTo(false);\n      commitChange = true;\n    } else if (event.ctrlKey || event.metaKey || event.shiftKey) {\n      commitChange = true;\n      setAllExceptCurrentTo(false);\n    }\n\n    this.selectionsChanged(commitChange);\n  }\n\n  selectionsChanged(commitChange) {\n    this.selectedValues = _.filter(this.selectOptions, { selected: true });\n    this.value.value = _.map(this.selectedValues, 'value');\n    this.value.text = _.map(this.selectedValues, 'text').join(' + ');\n    if (!this.multiple) {\n      this.value.value = _.get(this.selectedValues, '0.value', '');\n    }\n\n    if (commitChange) {\n      this.commitChanges();\n    }\n  }\n\n  commitChanges() {\n    this.dropdownVisible = false;\n\n    this.updateLinkText();\n\n    if (this.value.text !== this.oldVariableText) {\n      this.onChange({ value: this.value });\n    }\n  }\n\n  queryChanged() {\n    this.highlightIndex = -1;\n    this.search.options = _.filter(this.selectOptions, (option) => {\n      return option.text.toLowerCase().indexOf(this.search.query.toLowerCase()) !== -1;\n    });\n\n    this.search.options = this.search.options.slice(0, Math.min(this.search.options.length, 1000));\n  }\n\n  init() {\n    if (_.isEmpty(this.value)) {\n      this.value = { text: '', value: this.multiple ? [] : '' };\n    }\n    this.updateLinkText();\n  }\n}\n\nconst template = `\n<div class=\"variable-link-wrapper\">\n  <a ng-click=\"vm.show()\" class=\"variable-value-link min-width-10\">\n    {{vm.linkText}}\n    <i class=\"fa fa-caret-down\" style=\"font-size:12px;float:right;position:relative;top:4px\"></i>\n  </a>\n\n  <input\n    type=\"text\"\n    class=\"gf-form-input\"\n    style=\"display: none\"\n    ng-keydown=\"vm.keyDown($event)\"\n    ng-model=\"vm.search.query\"\n    ng-change=\"vm.queryChanged()\"\n  ></input>\n\n  <div class=\"variable-value-dropdown\" ng-if=\"vm.dropdownVisible\" ng-class=\"{'multi': vm.multiple, 'single': !vm.multiple}\">\n    <div class=\"variable-options-wrapper\">\n      <div class=\"variable-options-column\">\n        <a class=\"variable-options-column-header\" ng-if=\"!!vm.multiple\" ng-class=\"{'many-selected': vm.selectedValues.length > 1}\"\n          bs-tooltip=\"'Clear selections'\" data-placement=\"top\" ng-click=\"vm.clearSelections()\">\n          <span class=\"variable-option-icon\"></span>\n          Selected ({{vm.selectedValues.length}})\n        </a>\n        <a class=\"variable-option pointer\" ng-repeat=\"option in vm.search.options\" ng-class=\"{'selected': option.selected, 'highlighted': $index === vm.highlightIndex}\"\n          ng-click=\"vm.selectValue(option, $event)\">\n          <span class=\"variable-option-icon\"></span>\n          <span>{{option.text}}</span>\n        </a>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\n/** @ngInject */\nexport function customSelectDropdown($compile, $window, $timeout, $rootScope) {\n  return {\n    restrict: 'E',\n    scope: { options: '=', multiple: '=', value: '=', onChange: '&' },\n    template: template,\n    controller: 'CustomSelectDropdownCtrl',\n    controllerAs: 'vm',\n    bindToController: true,\n    link: (scope, elem) => {\n      const bodyEl = angular.element($window.document.body);\n      const linkEl = elem.find('.variable-value-link');\n      const inputEl = elem.find('input');\n\n      function bodyOnClick(e) {\n        if (elem.has(e.target).length === 0) {\n          scope.$apply(() => {\n            scope.vm.commitChanges();\n          });\n        }\n      }\n\n      function openDropdown() {\n        inputEl.css('width', Math.max(linkEl.width(), 136) + 'px');\n\n        inputEl.show();\n        linkEl.hide();\n\n        inputEl.focus();\n        $timeout(\n          () => {\n            bodyEl.on('click', bodyOnClick);\n          },\n          0,\n          false\n        );\n      }\n\n      function switchToLink() {\n        inputEl.hide();\n        linkEl.show();\n        bodyEl.off('click', bodyOnClick);\n      }\n\n      scope.$watch('vm.dropdownVisible', (newValue) => {\n        if (newValue) {\n          openDropdown();\n        } else {\n          switchToLink();\n        }\n      });\n\n      scope.vm.init();\n    },\n  };\n}\n\ncoreModule.controller('CustomSelectDropdownCtrl', CustomSelectDropdownCtrl);\ncoreModule.directive('customSelectDropdown', customSelectDropdown);\n","import coreModule from 'grafana/app/core/core_module';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst genController = (component) =>\n  class Controller {\n    _$scope: any;\n    _$element: any;\n\n    /** @ngInject */\n    constructor($scope, $element) {\n      this._$scope = $scope;\n      this._$element = $element;\n    }\n\n    $onInit() {\n      // extract porps\n      const props = Object.entries(this._$scope).reduce((acc, [key, value]) => {\n        if (!key.startsWith('$')) {\n          if (typeof value === 'function') {\n            acc[key] = (...args) => value({ _query: args.length === 1 ? args[0] : args });\n          } else {\n            acc[key] = value;\n          }\n        }\n        return acc;\n      }, {} as any);\n\n      // wating dom mounted\n      setTimeout(() => {\n        ReactDOM.render(React.createElement(component, props), this._$element[0]);\n      });\n    }\n  };\n\nexport function loadReactComponent(\n  RectCompo: React.ComponentType,\n  componentName: string,\n  propTypes: Record<string, string>\n) {\n  coreModule.directive(componentName, () => ({\n    template: `<div class=\"${componentName}\"></div>`,\n    controller: genController(RectCompo),\n    restrict: 'E',\n    scope: propTypes,\n    replace: true,\n  }));\n}\n","import { Cascader } from '@grafana/ui';\nimport { loadReactComponent } from '../../common/react-loader';\n\nloadReactComponent(Cascader, 'gfCascader', {\n  separator: '@?',\n  placeholder: '@?',\n  options: '<',\n  changeOnSelect: '<?',\n  onSelect: '&',\n  width: '@?',\n  initialValue: '@?',\n  allowCustomValue: '<?',\n  formatCreateLabel: '&?',\n  displayAllSelectedLevels: '<?',\n});\n","/** 此文件放置通用业务的配置项，用于区分业务类型 */\nimport { DataQuery, DataSourceJsonData } from '@grafana/data';\nimport { RUMQuery } from './rum-service/types';\nimport { t, Language } from '../locale'\n\nexport const enum ServiceType {\n  monitor = 'monitor',\n  logService = 'logService',\n  RUMService = 'RUMService'\n}\n\nexport const ServiceTypeOptions = [\n  { value: ServiceType.monitor, get label() { return t('cloud_monitor') } },\n  { value: ServiceType.logService, get label() { return t('cloud_log_service') }  },\n  { value: ServiceType.RUMService, get label() { return t('real_user_monitoring') }  },\n];\n\nexport interface QueryInfo extends DataQuery {\n  /** 数据源Query针对的查询服务，监控 or 日志 */\n  serviceType?: ServiceType;\n  logServiceParams?: {\n    region: string;\n    TopicId: string;\n    Query: string;\n  };\n  RUMServiceParams?: RUMQuery \n}\n\nexport const defaultQueryInfo: Omit<QueryInfo, 'refId'> = {\n  serviceType: ServiceType.logService,\n  logServiceParams: {\n    region: '',\n    TopicId: '',\n    Query: '',\n  },\n  RUMServiceParams: {\n    policy: \"default\",\n    resultFormat: \"time_series\",\n    orderByTime: \"ASC\",\n    tags: [],\n    groupBy: [\n      {\n        type: \"time\",\n        params: [\"$__interval\"]\n      },\n      {\n        type: \"fill\",\n        params: [\"null\"]\n      }\n    ],\n    select: [\n      [\n        {\n          type: \"field\",\n          params: [\"value\"]\n        },\n        {\n          type: \"mean\",\n          params: []\n        }\n      ]\n    ]\n  }\n};\n\n/** QueryInfo的运行时版本，用于将query中的不合法字段进去移除，保证query是个QueryInfo类型的数据 */\nexport const queryInfoRuntime: Required<QueryInfo> = {\n  refId: '',\n  hide: false,\n  key: '',\n  queryType: '',\n  dataTopic: null as any,\n  datasource: '',\n\n  serviceType: defaultQueryInfo.serviceType,\n  logServiceParams: defaultQueryInfo.logServiceParams,\n  RUMServiceParams: defaultQueryInfo.RUMServiceParams,\n};\n\n/** 变量数据类型。字符场景为云监控配置，对象场景由内部字段决定 */\nexport interface VariableQuery {\n  serviceType: ServiceType;\n  queryString: string;\n  logServiceParams?: QueryInfo['logServiceParams'];\n};\n\n/**\n * These are options configured for each DataSource instance.\n */\nexport interface MyDataSourceOptions extends DataSourceJsonData {\n  secretId?: string;\n  /** 控制是否开启日志服务功能 */\n  logServiceEnabled?: boolean;\n  /** 控制是否开启前端性能监控 */\n  RUMServiceEnabled?: boolean;\n  /** 根据 product.service 字段，判断云监控功能是否开启。字段混杂，不写入类型声明中 */\n  // [product.service]?: boolean\n  intranet?: boolean;\n  language?: Language;\n}\n\n/**\n * Value that is used in the backend, but never sent over HTTP to the frontend\n */\nexport interface MySecureJsonData {\n  secretKey: string;\n}\n","import editorHtmlTmp from './query.editor.html';\nimport { SERVICES } from '../../tc_monitor';\n\nconst hackModuleName = {\n  loadBalance: 'clb',\n  lbPrivate: 'clb',\n  lbPublic: 'clb',\n  mongoDB: 'mongodb',\n\n  // MapReduce\n  mrHDFS: 'mr',\n  mrHBASE: 'mr',\n  mrHIVE: 'mr',\n  mrNODE: 'mr',\n  mrPRESTO: 'mr',\n  mrSPARK: 'mr',\n  mrYARN: 'mr',\n  mrZOOKEEPER: 'mr',\n};\n\nexport const editorHtml = (function () {\n  let str = editorHtmlTmp;\n  SERVICES.forEach(({ service }) => {\n    const serviceSwitch = hackModuleName[service] || service.replace(/([A-Z])/g, '-$1').toLowerCase();\n    str += `<${serviceSwitch}-query\n      ng-if=\"ctrl.target.service==='${service}'\"\n      target=\"ctrl.target.${service}\"\n      namespace=\"ctrl.target.namespace\"\n      show-detail=\"ctrl.checkShowDetail('instance')\"\n      datasource=\"ctrl.datasource\"\n      on-change=\"ctrl.onInstanceQueryChange()\"\n      on-refresh=\"ctrl.refresh()\"\n      dims=\"ctrl.target.${service}.dimensionObject\"\n      region=\"ctrl.getVariable(ctrl.target.${service}.region)\"\n    ></${serviceSwitch}-query>`;\n  });\n  const footStr = `\n    <div class=\"gf-form\" ng-show=\"ctrl.lastQueryError\">\n      <pre class=\"gf-form-pre alert alert-error\">{{ctrl.lastQueryError}}</pre>\n    </div>\n  </query-editor-row>`;\n  return str + footStr;\n})();\n","import { QueryCtrl } from 'grafana/app/plugins/sdk';\nimport _ from 'lodash';\n\nimport { GetServiceFromNamespace, ReplaceVariable, isVariable } from '../common/constants';\nimport { InitServiceState, InstanceAliasList, GetInstanceQueryParams, SERVICES } from '../tc_monitor';\n\nimport './components/multi_condition';\nimport './components/custom_select_dropdown';\nimport './components/cascader';\nimport './css/query_editor.css';\nimport { editorHtml } from './partials/queryEditorTemplate';\nimport { t, getLanguage, Language } from '../../locale'\nexport class TCMonitorDatasourceQueryCtrl extends QueryCtrl {\n  // static templateUrl = 'datasource/partials/query.editor.html';\n  static template = editorHtml;\n  datasource: any;\n  panelCtrl: any;\n  namespaces: string[] = [];\n  regions: any[] = [];\n  instanceList: any[] = [];\n  // listenerList: any[] = [];\n  metricList: any[] = [];\n  periodList: number[] = [];\n  dimensionList: any[] = [];\n  instanceAliasList: any[] = [];\n  // listenerAliasList: any[] = [];\n  target: {\n    refId: string;\n    service: string;\n    namespace: string;\n    showInstanceDetails: boolean;\n  };\n  defaults = {\n    namespace: '',\n    service: '',\n    showInstanceDetails: false,\n    ...InitServiceState,\n  };\n\n  cascaderOptions: any = [];\n\n  lastQuery: string;\n  lastQueryError?: string;\n\n  isMetricsNeedUpdate: boolean;\n  hideRegion: boolean;\n\n  $scope: any;\n\n  /** @ngInject */\n  // eslint-disable-next-line @typescript-eslint/no-parameter-properties\n  constructor($scope, $injector, private templateSrv) {\n    super($scope, $injector);\n    this.$scope = $scope;\n    this.cascaderOptions = this.datasource.getCascaderNamespaces();\n    this.namespaces = this.datasource.getNamespaces();\n    // 当数据源的命名空间列表存在时，设置相应的默认值\n    if (this.namespaces.length > 0) {\n      // if (_.indexOf(this.namespaces, this.target.namespace) === -1) {\n      //   this.target.namespace = this.namespaces[0];\n      // }\n      this.target.namespace =\n        this.target.namespace ?? this.cascaderOptions[0]?.items?.[0].value ?? this.cascaderOptions[0].value;\n      this.target.service = GetServiceFromNamespace(this.target.namespace) || '';\n    }\n    this.hideRegion = !!SERVICES.find((o) => o.service === this.target.service)?.hideRegion;\n    _.defaultsDeep(this.target, this.defaults);\n    this.instanceAliasList = this.getInstanceAliasList(this.target.service);\n    // this.listenerAliasList = this.getListenerAliasList(this.target.service);\n    this.panelCtrl.events.on('data-received', this.onDataReceived.bind(this), $scope);\n    this.panelCtrl.events.on('data-error', this.onDataError.bind(this), $scope);\n  }\n\n  get sortedPeriodList() {\n    return this.periodList.sort((a, b) => a - b);\n  }\n  get isCascader() {\n    return this.cascaderOptions.length > 1;\n  }\n  cascaderChange(namespace) {\n    this.target.namespace = namespace;\n    this.onNamespaceChange();\n  }\n\n  onDataReceived(dataList) {\n    this.lastQueryError = undefined;\n    this.lastQuery = '';\n\n    const anySeriesFromQuery: any = _.find(dataList, { refId: this.target.refId });\n    if (anySeriesFromQuery) {\n      this.lastQuery = anySeriesFromQuery.query;\n    }\n  }\n\n  onDataError(err) {\n    this.handleQueryCtrlError(err);\n  }\n\n  handleQueryCtrlError(err) {\n    if (_.get(err, 'query.refId') !== this.target.refId) {\n      return;\n    }\n\n    if (_.get(err, 'error.data.error.innererror', undefined)) {\n      if (_.get(err, 'error.data.error.innererror.innererror', undefined)) {\n        this.lastQueryError = _.get(err, 'error.data.error.innererror.innererror.message');\n      } else {\n        this.lastQueryError = _.get(err, 'error.data.error.innererror.message');\n      }\n    } else if (_.get(err, 'error.data.error', undefined)) {\n      this.lastQueryError = _.get(err, 'error.data.error.message');\n    } else if (_.get(err, 'error.data', undefined)) {\n      this.lastQueryError = _.get(err, 'error.data.message');\n    } else if (_.get(err, 'data.error', undefined)) {\n      this.lastQueryError = _.get(err, 'data.error.message');\n      // eslint-disable-next-line no-empty\n    } else if (err.data?.message) {\n    } else if (_.get(err, 'data.message', undefined)) {\n      this.lastQueryError = _.get(err, 'data.message');\n    } else {\n      this.lastQueryError = err;\n    }\n  }\n\n  /**\n   * 获取实例展示字段的选择列表\n   *\n   * @param service 监控服务名\n   */\n  getInstanceAliasList(service) {\n    if (!service) {\n      return [];\n    }\n    return _.map(InstanceAliasList[`${_.toUpper(service)}InstanceAliasList`] || [], (item) => ({\n      text: `As ${item}`,\n      value: item,\n    }));\n  }\n  getNamespaces(query) {\n    return _.map(this.namespaces, (o: any) => ({ text: o.label, value: o.namespace })); // TODO: 为什么对对象排序不行呢？？？？待解决\n  }\n  onNamespaceChange() {\n    const service = GetServiceFromNamespace(this.target.namespace) || '';\n    this.hideRegion = !!SERVICES.find((o) => o.service === service)?.hideRegion;\n    this.regions = [];\n    this.metricList = [];\n    this.periodList = [];\n    this.dimensionList = [];\n    this.instanceList = [];\n    // this.listenerList = [];\n\n    const initState = InitServiceState[service];\n    this.target[service] = _.cloneDeep(initState);\n    this.target.service = service;\n\n    this.instanceAliasList = this.getInstanceAliasList(service);\n    // this.listenerAliasList = this.getListenerAliasList(service);\n\n    this.refresh();\n    if (this.isCascader) this.$scope.$apply();\n  }\n\n  /**\n   * 获取地域列表\n   * output:\n   *  [\n   *    {\n   *      \"Region\": \"ap-beijing\",\n   *      \"RegionName\": \"华北地区(北京)\",\n   *      \"RegionState\": \"AVAILABLE\"\n   *    },\n   *    {\n   *      \"Region\": \"ap-guangzhou\",\n   *      \"RegionName\": \"华南地区(广州)\",\n   *      \"RegionState\": \"AVAILABLE\"\n   *    }\n   *  ]\n   */\n  getRegions(query) {\n    const service = this.target.service;\n    if (!service || _.startsWith('$')) {\n      return [];\n    }\n    if (this.regions.length) {\n      return this.regions;\n    }\n    return this.datasource\n      .getRegions(service)\n      .then((list) => {\n        this.regions = list;\n        return list;\n      })\n      .catch(this.handleQueryCtrlError.bind(this));\n  }\n\n  onRegionChange() {\n    const service = this.target.service;\n    this.target[service].instance = '';\n    this.instanceList = [];\n    // this.listenerList = [];\n    this.isMetricsNeedUpdate = true;\n    _.forEach(this.target[service].dimensionObject, (__, key) => {\n      this.target[service].dimensionObject[key] = { Name: key, Value: '' };\n    });\n    this.target[service].queries = _.cloneDeep(InitServiceState[service].queries);\n    this.getInstances();\n    this.refresh();\n  }\n\n  /**\n   * 获取模板变量的实际值\n   *\n   * @param variable 模板变量的名字\n   * @param multiple 是否允许多选，如果为 false，返回实际值数组的第一个值\n   */\n  getVariable(variable: string, multiple: boolean) {\n    return ReplaceVariable(this.templateSrv, this.panelCtrl.panel.scopedVars, variable, multiple);\n  }\n\n  getMetricNameDesc() {\n    const service = this.target.service;\n    const index = _.findIndex(this.metricList, (item) => item.MetricName === this.target[service].metricName);\n    if (index === -1) {\n      return '';\n    }\n    return getLanguage() === Language.Chinese ? this.metricList[index].Meaning.Zh : this.metricList[index].Meaning.En;\n  }\n\n  getMetrics(query) {\n    const service = this.target.service;\n    const region = this.getVariable(_.get(this.target[service], 'region', ''), false);\n\n    if (!service || !region) {\n      return [];\n    }\n    if (!this.isMetricsNeedUpdate && this.metricList.length > 0) {\n      return _.map(this.metricList, (item) => ({ text: item.MetricName, value: item.MetricName }));\n    }\n    return this.datasource\n      .getMetrics(service, region)\n      .then((list) => {\n        this.metricList = list;\n        this.isMetricsNeedUpdate = false;\n        const index = _.findIndex(this.metricList, (item) => item.MetricName === this.target[service].metricName);\n        if (index !== -1) {\n          this.periodList = _.get(this.metricList[index], 'Period', []);\n          this.dimensionList = _.get(this.metricList[index], 'Dimensions.0.Dimensions', []);\n        }\n        return _.map(list, (item) => ({ text: item.MetricName, value: item.MetricName }));\n      })\n      .catch(this.handleQueryCtrlError.bind(this));\n  }\n\n  onMetricChange() {\n    const service = this.target.service;\n    let periodList = [];\n    let dimensionList = [];\n    const dimensionObject: any = {};\n    let metricUnit = '';\n    const index = _.findIndex(this.metricList, (item) => item.MetricName === this.target[service].metricName);\n    if (index !== -1) {\n      periodList = _.get(this.metricList[index], 'Period', []);\n      dimensionList = _.get(this.metricList[index], 'Dimensions.0.Dimensions', []);\n      // dimensionList = dimensionList.length > 0 ? dimensionList : (DefaultDimensions[service] ?? []);\n      metricUnit = _.get(this.metricList[index], 'Unit', '');\n    }\n    _.forEach(dimensionList, (item) => {\n      dimensionObject[item] = { Name: item, Value: '' };\n    });\n    this.periodList = periodList;\n    this.dimensionList = dimensionList;\n    this.target[service].period =\n      periodList.length > 0 ? (_.indexOf(periodList, 300) === -1 ? periodList[0] : 300) : undefined;\n    this.target[service].dimensionObject = dimensionObject;\n    this.target[service].metricUnit = metricUnit;\n    this.refresh();\n  }\n\n  getInstances() {\n    const service = this.target.service;\n    const region = this.getVariable(_.get(this.target[service], 'region', ''), false);\n    if (!service || !region) {\n      return [];\n    }\n    const params = this.getInstanceQueryParams(service);\n    return this.datasource\n      .getInstances(service, region, params)\n      .then((list) => {\n        this.instanceList = list;\n        const instanceAlias = this.target[service].instanceAlias; // InstanceId\n        const instances: any[] = [];\n        _.forEach(list, (item) => {\n          // 根据 instanceAlias，确定实例展示字段，并保存至 _InstanceAliasValue，用于 constants.ts 的监控数据解析函数 ParseQueryResult\n          const instanceAliasValue = _.get(item, instanceAlias);\n          // console.log({instanceAliasValue}); 遍历出所有的InstanceId\n          if (instanceAliasValue) {\n            if (typeof instanceAliasValue === 'string') {\n              item._InstanceAliasValue = instanceAliasValue;\n              instances.push({ text: instanceAliasValue, value: JSON.stringify(item) });\n            } else if (_.isArray(instanceAliasValue)) {\n              _.forEach(instanceAliasValue, (subItem) => {\n                item._InstanceAliasValue = subItem;\n                instances.push({ text: subItem, value: JSON.stringify(item) });\n              });\n            }\n          }\n        });\n        return instances;\n      })\n      .catch(this.handleQueryCtrlError.bind(this));\n  }\n  onInstanceChange(v) {\n    // const service = this.target.service;\n    // if (this.target[service].listener) {\n    //   this.target[service].listener = '';\n    // }\n    // if (this.target[service].servers) {\n    //   this.target[service].servers = '';\n    // }\n    // if (this.target[service].serverPort) {\n    //   this.target[service].serverPort = '';\n    // }\n    this.refresh();\n  }\n\n  // getListeners() {\n  //   const service = this.target.service;\n  //   const region = this.getVariable(_.get(this.target[service], 'region', ''), false);\n  //   const instance = this.getVariable(_.get(this.target[service], 'instance', ''), false);\n  //   if (!service || !region) {\n  //     return [];\n  //   }\n  //   let instanceMap = {};\n  //   // console.log({instance});\n  //   try {\n  //     instanceMap = JSON.parse(instance);\n  //   } catch (e) {\n  //     console.log(e);\n  //   }\n  //   const idKey = IdKeys[service];\n  //   const instanceId = _.get(instanceMap, idKey);\n  //   return this.datasource.getListeners(service, region, instanceId)\n  //     .then(list => {\n  //       this.listenerList = list;\n  //       const listenerAlias = this.target[service].listenerAlias;\n  //       const listeners: any[] = [];\n  //       _.forEach(list, (item) => {\n  //         const listenerAliasValue = _.get(item, listenerAlias);\n  //         if (listenerAliasValue) {\n  //           if (typeof listenerAliasValue === 'string') {\n  //             item._listenerAliasValue = listenerAliasValue;\n  //             listeners.push({ text: listenerAliasValue, value: JSON.stringify(item) });\n  //           } else if (_.isArray(listenerAliasValue)) {\n  //             _.forEach(listenerAliasValue, (subItem) => {\n  //               item._listenerAliasValue = subItem;\n  //               listeners.push({ text: subItem, value: JSON.stringify(item) });\n  //             });\n  //           }\n  //         }\n  //       });\n  //       // console.log({listeners});\n  //       return listeners;\n  //     })\n  //     .catch(this.handleQueryCtrlError.bind(this));\n  // }\n  /**\n   * 获取实例请求接口的请求参数\n   *\n   * @param service 监控服务名\n   */\n  getInstanceQueryParams(service) {\n    const queries = this.target[service].queries;\n    if (GetInstanceQueryParams[`${_.toUpper(service)}GetInstanceQueryParams`]) {\n      return GetInstanceQueryParams[`${_.toUpper(service)}GetInstanceQueryParams`](queries);\n    } else {\n      return {};\n    }\n  }\n\n  onInstanceAliasChange() {\n    // 仅当 instance 字段不是模板变量时，执行以下操作\n    if (!this.isVariable('instance')) {\n      const service = this.target.service;\n      this.target[service].instance = '';\n      this.refresh();\n    }\n  }\n\n  onInstanceQueryChange() {\n    // 仅当 instance 字段不是模板变量时，执行以下操作\n    if (!this.isVariable('instance')) {\n      const service = this.target.service;\n      this.target[service].instance = '';\n      this.instanceList = [];\n      _.forEach(this.target[service].dimensionObject, (__, key) => {\n        this.target[service].dimensionObject[key] = { Name: key, Value: '' };\n      });\n      this.refresh();\n    }\n  }\n  isVariable(field) {\n    const service = this.target.service;\n    const value = this.target[service]?.[field];\n    return isVariable(value);\n  }\n  checkShowDetail(field) {\n    return !this.isVariable(field) && this.target.showInstanceDetails;\n  }\n  getTimeDesc() {\n    return `${t('time_unit')}: ${t('seconds')}`\n  }\n  getSearchDesc() {\n    return t('search_description')\n  }\n}\n","import {\n  DataQuery,\n  DataSourceApi,\n  EventBusExtended,\n  LoadingState,\n  PanelModel,\n  QueryEditorProps,\n  TimeRange,\n  toLegacyResponseData,\n} from '@grafana/data';\nimport { DashboardModel } from 'grafana/app/features/dashboard/model';\nimport React, { PureComponent } from 'react';\nimport { AngularComponent, getAngularLoader } from '@grafana/runtime';\nimport EventEmitter from 'eventemitter3';\n\ninterface AngularQueryComponentScope<TQuery extends DataQuery> {\n  target: TQuery;\n  panel: PanelModel;\n  dashboard: DashboardModel;\n  events: EventBusExtended;\n  refresh: () => void;\n  render: () => void;\n  datasource: DataSourceApi<TQuery> | null;\n  toggleEditorMode?: () => void;\n  getCollapsedText?: () => string;\n  range: TimeRange;\n}\n\ninterface QueryCtrlProps extends QueryEditorProps<DataSourceApi<any>> {\n  queryCtrl: any;\n}\n\nexport class QueryCtrlRender<TQuery extends DataQuery> extends PureComponent<QueryCtrlProps> {\n  element: HTMLElement | null;\n  angularScope: AngularQueryComponentScope<TQuery> | null = null;\n  angularQueryEditor: AngularComponent | null = null;\n  // 直接使用EventEmitter，模拟下angular组件提供的events\n  events = new EventEmitter();\n\n  componentDidMount() {\n    if (process.env.NODE_ENV !== 'production') {\n      (window as any).ctrlRender = this;\n    }\n    setTimeout(() => {\n      this.forceUpdate();\n    });\n  }\n\n  componentDidUpdate(prevProps: QueryCtrlProps) {\n    const { data, range } = this.props;\n    if (data !== prevProps.data && data) {\n      if (data.state === LoadingState.Done) {\n        const legacy = data.series.map((v) => toLegacyResponseData(v));\n        this.events.emit('data-received', legacy);\n      } else if (data.state === LoadingState.Error) {\n        this.events.emit('data-error', data.error);\n      }\n      if (this.angularScope) {\n        this.angularScope.range = range!;\n      }\n    }\n    if (!this.element || this.angularQueryEditor) {\n      return;\n    }\n    this.renderAngularQueryEditor();\n  }\n\n  getAngularQueryComponentScope(): AngularQueryComponentScope<TQuery> {\n    const { query, queries, range: timeRange, datasource, queryCtrl } = this.props;\n    datasource.components = {\n      QueryCtrl: queryCtrl,\n    };\n\n    const panel = { scopedVars: {}, targets: queries || [] } as unknown as PanelModel; // new PanelModel({ targets: queries });\n    const dashboard = {} as unknown as DashboardModel;\n\n    return {\n      datasource: datasource,\n      target: query as unknown as TQuery,\n      panel: panel,\n      dashboard: dashboard,\n      refresh: () => {\n        this.props.onChange(query);\n        this.props.onRunQuery();\n      },\n      render: () => () => console.log('legacy render function called, it does nothing'),\n      events: this.events as any,\n      range: timeRange!,\n    };\n  }\n\n  renderAngularQueryEditor = () => {\n    if (!this.element) {\n      return;\n    }\n    if (this.angularQueryEditor) {\n      this.angularQueryEditor.destroy();\n      this.angularQueryEditor = null;\n    }\n\n    const loader = getAngularLoader();\n    const template = '<plugin-component type=\"query-ctrl\" />';\n    const scopeProps = { ctrl: this.getAngularQueryComponentScope() };\n\n    this.angularQueryEditor = loader.load(this.element, scopeProps, template);\n    this.angularScope = scopeProps.ctrl;\n  };\n\n  render() {\n    return (\n      <div\n        ref={(element) => {\n          this.element = element;\n        }}\n      />\n    );\n  }\n}\n","import { useRef } from 'react';\nvar useLatest = function (value) {\n    var ref = useRef(value);\n    ref.current = value;\n    return ref;\n};\nexport default useLatest;\n","import * as TYPES from './types';\nimport { GetRequestParams, GetServiceAPIInfo } from '../../../common/constants';\nimport { DataSourceInstanceSettings } from '@grafana/data';\nimport { getBackendSrv, getTemplateSrv } from '@grafana/runtime';\nimport _ from 'lodash';\nimport { IApiError, IRegionItem, IResourceRegionInfo } from './interface';\n\n/**\n * 云API请求\n * 入参 data内字段 请全部大写\n * 出参 全部大写，不再转换\n */\nexport interface IRequestParam {\n  region: string;\n  action: string;\n  data: any;\n}\n\nexport interface ICapiRequestParam extends IRequestParam {\n  serviceType: string;\n}\n\n/** 通用请求参数。instanceSettings目前无法单例化，后续尝试优化API请求调用方法 */\ninterface IRequestOpts {\n  // 用于调用后端 Sign 方法\n  instanceSettings: DataSourceInstanceSettings;\n  // internal?: boolean;\n  // clientTimeout?: number;\n}\n\n/**\n * 云API请求\n */\nexport async function capiRequest({ serviceType, region, action, data }: ICapiRequestParam, opts: IRequestOpts) {\n  const { instanceSettings } = opts;\n  const serviceInfo = GetServiceAPIInfo(region, serviceType);\n  const requestOptions = await GetRequestParams(\n    { url: instanceSettings.url + serviceInfo.path, data },\n    serviceType,\n    {\n      region: getTemplateSrv().replace(region),\n      action,\n    },\n    '', // 这个参数内部没有使用？\n    instanceSettings.id,\n    getBackendSrv()\n  );\n  return getBackendSrv()\n    .datasourceRequest(requestOptions)\n    .then((response) => {\n      const result = _.get(response, 'data.Response', {});\n      if (result.Error) {\n        // eslint-disable-next-line no-throw-literal,@typescript-eslint/consistent-type-assertions\n        throw {\n          name: result.Error.Code,\n          code: result.Error.Code,\n          message: result.Error.Message,\n          data: {\n            Response: result,\n          },\n        } as IApiError;\n      }\n      return result;\n    })\n    .catch((error: Error) => {\n      console.error('error', error);\n      throw error;\n    });\n}\n\n/**\n * CLS 云api v3 请求\n */\nexport async function clsCapiRequest({ action, region, data = {} }: IRequestParam, opts: IRequestOpts) {\n  return capiRequest(\n    {\n      serviceType: 'cls',\n      region,\n      action,\n      data: data,\n    },\n    {\n      ...opts,\n    }\n  );\n}\n\n/**\n * REGION 云api v3 请求\n */\nexport async function regionCapiRequest({ action, region, data = {} }: IRequestParam, opts: IRequestOpts) {\n  return capiRequest(\n    {\n      serviceType: 'region',\n      region,\n      action,\n      data: data,\n    },\n    {\n      ...opts,\n    }\n  );\n}\n\n/** 本接口用于搜索日志, 该接口除受默认接口请求频率限制外，针对单个日志主题，并发数不能超过15 */\nexport async function SearchLog(\n  data: TYPES.SearchLogParams,\n  region: string,\n  opts: IRequestOpts\n): Promise<TYPES.SearchLogResult> {\n  return clsCapiRequest(\n    {\n      action: 'SearchLog',\n      region,\n      data: {\n        UseNewAnalysis: true,\n        ...data,\n      },\n    },\n    opts\n  );\n}\n\n/** 本接口用于搜索日志上下文附近的内容 */\nexport async function DescribeLogContext(\n  data: TYPES.DescribeLogContextParams,\n  region: string,\n  opts: IRequestOpts\n): Promise<TYPES.DescribeLogContextResult> {\n  return clsCapiRequest(\n    {\n      action: 'DescribeLogContext',\n      data,\n      region,\n    },\n    opts\n  );\n}\n\n/**  本接口用于获取日志主题列表，支持分页 */\nexport async function DescribeTopics(\n  data: TYPES.DescribeTopicsParams,\n  region: string,\n  opts: IRequestOpts\n): Promise<TYPES.DescribeTopicsResult> {\n  return clsCapiRequest(\n    {\n      action: 'DescribeTopics',\n      data,\n      region,\n    },\n    opts\n  );\n}\n\n/**\n * @description 请求当前用户支持cls所有地域，已做白名单过滤\n */\nasync function DescribeRegionsAndZonesRequest(product: string, opts?: IRequestOpts): Promise<IResourceRegionInfo[]> {\n  return regionCapiRequest(\n    { action: 'DescribeRegionsAndZones', data: { Product: product }, region: 'ap-guangzhou' },\n    opts\n  ).then((data) => data.ResourceRegionSet);\n}\n\nexport async function DescribeRegions(opts?: IRequestOpts): Promise<{ regionList: IRegionItem[] }> {\n  return DescribeRegionsAndZonesRequest('cls', opts).then((clsRegions) => ({\n    regionList: (clsRegions || []).map(\n      ({ Region, RegionId, RegionName, RegionShortName, RegionTypeMC, RegionType, Location }) => {\n        const regionItem: IRegionItem = {\n          region: Region,\n          regionId: Number(RegionId),\n          regionName: RegionName,\n          regionShortName: RegionShortName,\n\n          oversea: typeof RegionTypeMC === 'number' ? Boolean(RegionTypeMC) : RegionType === '海外',\n          area: Location,\n        };\n        return regionItem;\n      }\n    ),\n  }));\n}\n","\n\nexport const uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n","import { useEffect } from 'react';\nvar useEffectOnce = function (effect) {\n    useEffect(effect, []);\n};\nexport default useEffectOnce;\n","import { SelectableValue } from '@grafana/data';\nimport { getTemplateSrv } from '@grafana/runtime';\n\nexport function getStringVariableNameOptions(): SelectableValue<string>[] {\n  const variables = getTemplateSrv()\n    .getVariables()\n    .filter((item) => ['adhoc', 'datasource', 'interval', 'interval'].indexOf(item.type) === -1);\n  const notMultiVariables = variables.filter((item) => !(item as any)?.multi);\n  return notMultiVariables.map((item) => {\n    const refValue = `\\$\\{${item.name}\\}`;\n    return { value: refValue, label: refValue };\n  });\n}\n","import React, { FC, useCallback, useEffect, useRef, useState } from 'react';\nimport { DescribeRegions, DescribeTopics, Filter, IRegionItem, ITopicIdentifier } from '../common/model';\nimport { InlineField, InlineFieldRow, Select, AsyncSelect } from '@grafana/ui';\nimport {  uuidRegex } from '../common/constants';\nimport { useEffectOnce } from 'react-use';\nimport { DataSourceApi, SelectableValue } from '@grafana/data';\nimport { getStringVariableNameOptions } from '../common/utils';\nimport { t } from '../../../locale';\n\ninterface Props {\n  value: ITopicIdentifier;\n  onChange: (v: ITopicIdentifier) => void;\n  datasource: DataSourceApi;\n  /** 组件首次渲染，且未设置地域和日志主题时，默认使用上次编辑的填写的内容 */\n  preferLastValue?: boolean;\n}\n\nexport const TopicSelector: FC<Props> = React.memo((props) => {\n  const { value, preferLastValue = true, datasource } = props;\n\n  const onChange = useCallback(\n    (v: ITopicIdentifier) => {\n      try {\n        localStorage.setItem('LogServiceTopicSelectorDefaultValue', JSON.stringify(v));\n      } catch (e) {}\n      props.onChange(v);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n  useEffectOnce(() => {\n    if (preferLastValue && !value.region && !value.TopicId) {\n      try {\n        const lastValue: ITopicIdentifier = JSON.parse(localStorage.getItem('LogServiceTopicSelectorDefaultValue'));\n        if (lastValue?.region && lastValue.TopicId) {\n          onChange(lastValue);\n        }\n      } catch (e) {}\n    }\n  });\n  const topicSelectOptionsRef = useRef<SelectableValue<string>>([]);\n  const [regionList, setRegionList] = useState<IRegionItem[]>([]);\n  useEffect(() => {\n    fetchRegions();\n  }, []);\n\n  const fetchRegions = useCallback(async () => {\n    try {\n      const { regionList } = await DescribeRegions({ instanceSettings: (datasource as any).instanceSettings });\n      setRegionList(regionList);\n    } catch (e) {}\n  }, []);\n\n  return (\n    <InlineFieldRow>\n      <InlineField label={t('region')} labelWidth={20}>\n        <Select\n          value={value.region}\n          onChange={(option) => {\n            const region = option.value;\n            DescribeTopics({ Limit: 1 }, region, { instanceSettings: (datasource as any).instanceSettings })\n              .then((result) => {\n                topicSelectOptionsRef.current = result.Topics?.map((item) => ({\n                  value: item.TopicId,\n                  label: `${item.TopicName} (${item.TopicId})`,\n                }));\n                onChange({\n                  region: option.value,\n                  TopicId: result.Topics?.[0]?.TopicId || '',\n                });\n              })\n              .catch((e) => {\n                onChange({\n                  region: option.value,\n                  TopicId: '',\n                });\n              });\n          }}\n          menuPlacement=\"bottom\"\n          options={[\n            ...regionList.map((item) => ({\n              label: `${item.area}(${item.regionName})`,\n              value: item.region,\n            })),\n            ...getStringVariableNameOptions()\n          ]}\n          width={25}\n          className=\"log-service-monospaced-font-family\"\n        />\n      </InlineField>\n      <InlineField label={t('log_topic')} labelWidth={20}>\n        <AsyncSelect<string>\n          // 地域变更时，自动重新出发请求\n          key={value.region}\n          width={50}\n          defaultOptions\n          cacheOptions={false}\n          loadOptions={async (filterStr) => {\n            const filters: Filter[] = [];\n            if (filterStr) {\n              if (uuidRegex.test(filterStr)) {\n                filters.push({ Key: 'topicId', Values: [filterStr] });\n              } else {\n                filters.push({ Key: 'topicName', Values: [filterStr] });\n              }\n            }\n            const options = await DescribeTopics({ Filters: filters, Limit: 100 }, value.region, {\n              instanceSettings: (datasource as any).instanceSettings,\n            }).then((result) => {\n              return result.Topics.map((item) => ({\n                value: item.TopicId,\n                label: `${item.TopicName} (${item.TopicId})`,\n              }));\n            });\n            const optionsWithVariables = [\n              ...options,\n              ...getStringVariableNameOptions().filter((item) => item.value?.includes(filterStr)),\n            ];\n            topicSelectOptionsRef.current = optionsWithVariables;\n            return optionsWithVariables;\n          }}\n          value={\n            topicSelectOptionsRef?.current?.find((item) => item.value === value.TopicId) || {\n              value: value.TopicId,\n              label: value.TopicId,\n            }\n          }\n          onChange={(e) => {\n            onChange({\n              region: value.region,\n              TopicId: e.value,\n            });\n          }}\n          className=\"log-service-monospaced-font-family\"\n        />\n      </InlineField>\n    </InlineFieldRow>\n  );\n});\n\nTopicSelector.displayName = 'TopicSelector';\n","import { DataSourceApi, QueryEditorProps } from '@grafana/data';\nimport { defaultQueryInfo, MyDataSourceOptions, QueryInfo, queryInfoRuntime } from '../types';\nimport React, { FC, useCallback } from 'react';\nimport { useLatest } from 'react-use';\nimport { InlineLabel, QueryField } from '@grafana/ui';\nimport { TopicSelector } from './components/TopicSelector';\nimport { TcDataSourceId } from '../common/constants';\nimport { t } from '../../locale';\nimport _ from 'lodash';\nimport './index.less';\n\ntype Props = QueryEditorProps<DataSourceApi<any>, QueryInfo, MyDataSourceOptions>;\n\nexport const LogServiceQueryEditor: FC<Props> = React.memo((props: Props) => {\n  const propsRef = useLatest(props);\n  const { query, datasource } = props;\n  const logServiceParams = query.logServiceParams || _.clone(defaultQueryInfo.logServiceParams)!;\n\n  const partialOnChange = useCallback(\n    (queryInfo: Partial<QueryInfo>) => {\n      const { onChange, query } = propsRef.current;\n      // 使用queryInfoRuntime作为配置模板，清除其他不存在的配置字段。\n      const oldQuery = _.pick(query, Object.keys(queryInfoRuntime));\n      onChange({ ...oldQuery, ...queryInfo } as unknown as QueryInfo);\n    },\n    [propsRef]\n  );\n  return (\n    <div>\n      <TopicSelector\n        value={{ region: logServiceParams.region, TopicId: logServiceParams.TopicId }}\n        onChange={(v) => {\n          partialOnChange({\n            logServiceParams: {\n              ...(propsRef.current?.query?.logServiceParams || ({} as any)),\n              ...v,\n            },\n          });\n        }}\n        datasource={datasource}\n      />\n      <div style={{ display: 'flex' }}>\n        <InlineLabel width={20}>{t('search_statement')}</InlineLabel>\n        <div style={{ flexGrow: 1 }}>\n          <QueryField\n            portalOrigin={TcDataSourceId}\n            placeholder={`e.g. _SOURCE__: 127.0.0.1 AND \"http/1.0\"`}\n            query={logServiceParams.Query}\n            onChange={(v) => {\n              partialOnChange({\n                logServiceParams: {\n                  ...(propsRef.current?.query?.logServiceParams || ({} as any)),\n                  Query: v,\n                },\n              });\n            }}\n            // By default QueryField calls onChange if onBlur is not defined, this will trigger a rerender\n            // And slate will claim the focus, making it impossible to leave the field.\n            onBlur={() => {}}\n          />\n        </div>\n      </div>\n    </div>\n  );\n});\n\nLogServiceQueryEditor.displayName = 'LogServiceQueryEditor';\n","import { reduce } from 'lodash';\nimport kbn from 'grafana/app/core/utils/kbn';\n\nfunction renderTagCondition(tag: { operator: any; value: string; condition: any; key: string }, index: number) {\n  // FIXME: merge this function with RUM_query_model/renderTagCondition\n  let str = '';\n  let operator = tag.operator;\n  let value = tag.value;\n  if (index > 0) {\n    str = (tag.condition.toLowerCase() || 'AND') + ' ';\n  }\n\n  if (!operator) {\n    if (/^\\/.*\\/$/.test(tag.value)) {\n      operator = '=~';\n    } else {\n      operator = '=';\n    }\n  }\n\n  // quote value unless regex or number, or if empty-string\n  if (value === '' || (operator !== '=~' && operator !== '!~')) {\n    value = \"'\" + value.replace(/\\\\/g, '\\\\\\\\').replace(/\\'/g, \"\\\\'\") + \"'\";\n  }\n\n  return str + '\"' + tag.key + '\" ' + operator + ' ' + value;\n}\n\nexport class RUMQueryBuilder {\n  // eslint-disable-next-line @typescript-eslint/no-parameter-properties\n  constructor(private target: { measurement: any; tags: any; policy?: any }, private database?: string) {}\n\n  buildExploreQuery(type: string, withKey?: string, withMeasurementFilter?: string): string {\n    let query = '';\n    let measurement;\n    let policy;\n\n    if (type === 'TAG_KEYS') {\n      query = 'show tag keys';\n      measurement = this.target.measurement;\n      policy = this.target.policy;\n    } else if (type === 'TAG_VALUES') {\n      query = 'show tag values';\n      measurement = this.target.measurement;\n      policy = this.target.policy;\n    } else if (type === 'MEASUREMENTS') {\n      query = 'show measurements';\n      if (withMeasurementFilter) {\n        // we do a case-insensitive regex-based lookup\n        query += ' with measurement =~ /(?i)' + kbn.regexEscape(withMeasurementFilter) + '/';\n      }\n    } else if (type === 'FIELDS') {\n      measurement = this.target.measurement;\n      policy = this.target.policy;\n\n      if (!measurement.match('^/.*/')) {\n        measurement = '\"' + measurement + '\"';\n\n        if (policy && policy !== 'default') {\n          policy = '\"' + policy + '\"';\n          measurement = policy + '.' + measurement;\n        }\n      }\n\n      return 'show field keys from ' + measurement;\n    } else if (type === 'RETENTION POLICIES') {\n      query = 'show retention policies on \"' + this.database + '\"';\n      return query;\n    }\n\n    if (measurement) {\n      if (!measurement.match('^/.*/') && !measurement.match(/^merge\\(.*\\)/)) {\n        measurement = '\"' + measurement + '\"';\n      }\n\n      if (policy && policy !== 'default') {\n        policy = '\"' + policy + '\"';\n        measurement = policy + '.' + measurement;\n      }\n\n      query += ' from ' + measurement;\n    }\n\n    if (withKey) {\n      query += ' with key = \"' + withKey + '\"';\n    }\n\n    if (this.target.tags && this.target.tags.length > 0) {\n      const whereConditions = reduce(\n        this.target.tags,\n        (memo, tag) => {\n          if (type === 'MEASUREMENTS' && tag.key === 'id') {\n            return memo;\n          }\n          // do not add a condition for the key we want to explore for\n          if (tag.key === withKey) {\n            return memo;\n          }\n\n          // value operators not supported in these types of queries\n          if (tag.operator === '>' || tag.operator === '<') {\n            return memo;\n          }\n\n          memo.push(renderTagCondition(tag, memo.length));\n          return memo;\n        },\n        [] as string[]\n      );\n\n      if (whereConditions.length > 0) {\n        query += ' where ' + whereConditions.join(' ');\n      }\n    }\n\n    if (type === 'MEASUREMENTS') {\n      query += ' limit 100';\n      // Solve issue #2524 by limiting the number of measurements returned\n      // LIMIT must be after WITH MEASUREMENT and WHERE clauses\n      // This also could be used for TAG KEYS and TAG VALUES, if desired\n    }\n\n    return query;\n  }\n}\n","import { RUMQueryTag } from './types';\nimport { RUMQueryBuilder } from './query_builder';\nimport { ServiceType } from '../types';\nimport { DataSource } from '../DataSource';\n\nconst runExploreQuery = (\n  type: string,\n  withKey: string | undefined,\n  withMeasurementFilter: string | undefined,\n  target: { measurement: string | undefined; tags: RUMQueryTag[]; policy: string | undefined },\n  datasource: DataSource\n): Promise<Array<{ text: string }>> => {\n  const builder = new RUMQueryBuilder(target);\n  const q = builder.buildExploreQuery(type, withKey, withMeasurementFilter);\n  return datasource.metricFindQuery({\n    serviceType: ServiceType.RUMService,\n    queryString: q,\n  }, undefined);\n};\n\nexport async function getAllPolicies(datasource: DataSource): Promise<string[]> {\n  const target = { tags: [], measurement: undefined, policy: undefined };\n  const data = await runExploreQuery('RETENTION POLICIES', undefined, undefined, target, datasource);\n  return data.map((item) => item.text);\n}\n\nexport async function getAllMeasurementsForTags(\n  measurementFilter: string | undefined,\n  tags: RUMQueryTag[],\n  datasource: DataSource\n): Promise<string[]> {\n  const target = { tags, measurement: undefined, policy: undefined };\n  const data = await runExploreQuery('MEASUREMENTS', undefined, measurementFilter, target, datasource);\n  return data.map((item) => item.text);\n}\n\nexport async function getTagKeysForMeasurementAndTags(\n  measurement: string | undefined,\n  policy: string | undefined,\n  tags: RUMQueryTag[],\n  datasource: DataSource\n): Promise<string[]> {\n  const target = { tags, measurement, policy };\n  const data = await runExploreQuery('TAG_KEYS', undefined, undefined, target, datasource);\n  return data.map((item) => item.text);\n}\n\nexport async function getTagValues(\n  tagKey: string,\n  measurement: string | undefined,\n  policy: string | undefined,\n  tags: RUMQueryTag[],\n  datasource: DataSource\n): Promise<string[]> {\n  const target = { tags, measurement, policy };\n  const data = await runExploreQuery('TAG_VALUES', tagKey, undefined, target, datasource);\n  return data.map((item) => item.text);\n}\n\nexport async function getFieldKeysForMeasurement(\n  measurement: string,\n  policy: string | undefined,\n  datasource: DataSource\n): Promise<string[]> {\n  const target = { tags: [], measurement, policy };\n  const data = await runExploreQuery('FIELDS', undefined, undefined, target, datasource);\n  return data.map((item) => item.text);\n}\n","import { clone, each, map } from 'lodash';\n\nexport class QueryPartDef {\n  type: string;\n  params: any[];\n  defaultParams: any[];\n  renderer: any;\n  category: any;\n  addStrategy: any;\n\n  constructor(options: any) {\n    this.type = options.type;\n    this.params = options.params;\n    this.defaultParams = options.defaultParams;\n    this.renderer = options.renderer;\n    this.category = options.category;\n    this.addStrategy = options.addStrategy;\n  }\n}\n\nexport class QueryPart {\n  part: any;\n  def: QueryPartDef;\n  params: any[];\n  text: string;\n\n  constructor(part: any, def: any) {\n    this.part = part;\n    this.def = def;\n    if (!this.def) {\n      // eslint-disable-next-line no-throw-literal\n      throw { message: 'Could not find query part ' + part.type };\n    }\n\n    part.params = part.params || clone(this.def.defaultParams);\n    this.params = part.params;\n    this.text = '';\n    this.updateText();\n  }\n\n  render(innerExpr: string) {\n    return this.def.renderer(this, innerExpr);\n  }\n\n  hasMultipleParamsInString(strValue: string, index: number) {\n    if (strValue.indexOf(',') === -1) {\n      return false;\n    }\n\n    return this.def.params[index + 1] && this.def.params[index + 1].optional;\n  }\n\n  updateParam(strValue: string, index: number) {\n    // handle optional parameters\n    // if string contains ',' and next param is optional, split and update both\n    if (this.hasMultipleParamsInString(strValue, index)) {\n      each(strValue.split(','), (partVal, idx) => {\n        this.updateParam(partVal.trim(), idx);\n      });\n      return;\n    }\n\n    if (strValue === '' && this.def.params[index].optional) {\n      this.params.splice(index, 1);\n    } else {\n      this.params[index] = strValue;\n    }\n\n    this.part.params = this.params;\n    this.updateText();\n  }\n\n  updateText() {\n    if (this.params.length === 0) {\n      this.text = this.def.type + '()';\n      return;\n    }\n\n    let text = this.def.type + '(';\n    text += this.params.join(', ');\n    text += ')';\n    this.text = text;\n  }\n}\n\nexport function functionRenderer(part: any, innerExpr: string) {\n  const str = part.def.type + '(';\n  const parameters = map(part.params, (value, index) => {\n    const paramType = part.def.params[index];\n    if (paramType.type === 'time') {\n      if (value === 'auto') {\n        value = '$__interval';\n      }\n    }\n    if (paramType.quote === 'single') {\n      return \"'\" + value + \"'\";\n    } else if (paramType.quote === 'double') {\n      return '\"' + value + '\"';\n    }\n\n    return value;\n  });\n\n  if (innerExpr) {\n    parameters.unshift(innerExpr);\n  }\n  return str + parameters.join(', ') + ')';\n}\n\nexport function suffixRenderer(part: QueryPart, innerExpr: string) {\n  return innerExpr + ' ' + part.params[0];\n}\n\nexport function identityRenderer(part: QueryPart, innerExpr: string) {\n  return part.params[0];\n}\n\nexport function quotedIdentityRenderer(part: QueryPart, innerExpr: string) {\n  return '\"' + part.params[0] + '\"';\n}\n\nconst index: any[] = [];\nconst categories: any = {\n  Aggregations: [],\n  Selectors: [],\n  Transformations: [],\n  Predictors: [],\n  Math: [],\n  Aliasing: [],\n  Fields: [],\n};\n\nfunction createPart(part: any): any {\n  const def = index[part.type];\n  if (!def) {\n    // eslint-disable-next-line no-throw-literal\n    throw { message: 'Could not find query part ' + part.type };\n  }\n\n  return new QueryPart(part, def);\n}\n\nfunction register(options: any) {\n  index[options.type] = new QueryPartDef(options);\n  options.category.push(index[options.type]);\n}\n\nconst groupByTimeFunctions: any[] = [];\n\nfunction aliasRenderer(part: { params: string[] }, innerExpr: string) {\n  // eslint-disable-next-line no-useless-concat\n  return innerExpr + ' AS ' + '\"' + part.params[0] + '\"';\n}\n\nfunction fieldRenderer(part: { params: string[] }, innerExpr: any) {\n  if (part.params[0] === '*') {\n    return '*';\n  }\n  return '\"' + part.params[0] + '\"';\n}\n\nfunction replaceAggregationAddStrategy(selectParts: any[], partModel: { def: { type: string } }) {\n  // look for existing aggregation\n  for (let i = 0; i < selectParts.length; i++) {\n    const part = selectParts[i];\n    if (part.def.category === categories.Aggregations) {\n      if (part.def.type === partModel.def.type) {\n        return;\n      }\n      // count distinct is allowed\n      if (part.def.type === 'count' && partModel.def.type === 'distinct') {\n        break;\n      }\n      // remove next aggregation if distinct was replaced\n      if (part.def.type === 'distinct') {\n        const morePartsAvailable = selectParts.length >= i + 2;\n        if (partModel.def.type !== 'count' && morePartsAvailable) {\n          const nextPart = selectParts[i + 1];\n          if (nextPart.def.category === categories.Aggregations) {\n            selectParts.splice(i + 1, 1);\n          }\n        } else if (partModel.def.type === 'count') {\n          if (!morePartsAvailable || selectParts[i + 1].def.type !== 'count') {\n            selectParts.splice(i + 1, 0, partModel);\n          }\n          return;\n        }\n      }\n      selectParts[i] = partModel;\n      return;\n    }\n    if (part.def.category === categories.Selectors) {\n      selectParts[i] = partModel;\n      return;\n    }\n  }\n\n  selectParts.splice(1, 0, partModel);\n}\n\nfunction addTransformationStrategy(selectParts: any[], partModel: any) {\n  let i;\n  // look for index to add transformation\n  for (i = 0; i < selectParts.length; i++) {\n    const part = selectParts[i];\n    if (part.def.category === categories.Math || part.def.category === categories.Aliasing) {\n      break;\n    }\n  }\n\n  selectParts.splice(i, 0, partModel);\n}\n\nfunction addMathStrategy(selectParts: any[], partModel: any) {\n  const partCount = selectParts.length;\n  if (partCount > 0) {\n    // if last is math, replace it\n    if (selectParts[partCount - 1].def.type === 'math') {\n      selectParts[partCount - 1] = partModel;\n      return;\n    }\n    // if next to last is math, replace it\n    if (partCount > 1 && selectParts[partCount - 2].def.type === 'math') {\n      selectParts[partCount - 2] = partModel;\n      return;\n    } else if (selectParts[partCount - 1].def.type === 'alias') {\n      // if last is alias add it before\n      selectParts.splice(partCount - 1, 0, partModel);\n      return;\n    }\n  }\n  selectParts.push(partModel);\n}\n\nfunction addAliasStrategy(selectParts: any[], partModel: any) {\n  const partCount = selectParts.length;\n  if (partCount > 0) {\n    // if last is alias, replace it\n    if (selectParts[partCount - 1].def.type === 'alias') {\n      selectParts[partCount - 1] = partModel;\n      return;\n    }\n  }\n  selectParts.push(partModel);\n}\n\nfunction addFieldStrategy(selectParts: any, partModel: any, query: { selectModels: any[][] }) {\n  // copy all parts\n  const parts = map(selectParts, (part: any) => {\n    return createPart({ type: part.def.type, params: clone(part.params) });\n  });\n\n  query.selectModels.push(parts);\n}\n\nregister({\n  type: 'field',\n  addStrategy: addFieldStrategy,\n  category: categories.Fields,\n  params: [{ type: 'field', dynamicLookup: true }],\n  defaultParams: ['value'],\n  renderer: fieldRenderer,\n});\n\n// Aggregations\nregister({\n  type: 'count',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Aggregations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'distinct',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Aggregations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'integral',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Aggregations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'mean',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Aggregations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'median',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Aggregations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'mode',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Aggregations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'sum',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Aggregations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\n// transformations\n\nregister({\n  type: 'derivative',\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [\n    {\n      name: 'duration',\n      type: 'interval',\n      options: ['1s', '10s', '1m', '5m', '10m', '15m', '1h'],\n    },\n  ],\n  defaultParams: ['10s'],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'spread',\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'non_negative_derivative',\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [\n    {\n      name: 'duration',\n      type: 'interval',\n      options: ['1s', '10s', '1m', '5m', '10m', '15m', '1h'],\n    },\n  ],\n  defaultParams: ['10s'],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'difference',\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'non_negative_difference',\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'moving_average',\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [{ name: 'window', type: 'int', options: [5, 10, 20, 30, 40] }],\n  defaultParams: [10],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'cumulative_sum',\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'stddev',\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'time',\n  category: groupByTimeFunctions,\n  params: [\n    {\n      name: 'interval',\n      type: 'time',\n      options: ['$__interval', '1m', '5m', '10m', '15m', '1h'],\n    },\n  ],\n  defaultParams: ['$__interval'],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'fill',\n  category: groupByTimeFunctions,\n  params: [\n    {\n      name: 'fill',\n      type: 'string',\n      options: ['none', 'null', '0', 'previous', 'linear'],\n    },\n  ],\n  defaultParams: ['null'],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'elapsed',\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [\n    {\n      name: 'duration',\n      type: 'interval',\n      options: ['1s', '10s', '1m', '5m', '10m', '15m', '1h'],\n    },\n  ],\n  defaultParams: ['10s'],\n  renderer: functionRenderer,\n});\n\n// predictions\nregister({\n  type: 'holt_winters',\n  addStrategy: addTransformationStrategy,\n  category: categories.Predictors,\n  params: [\n    { name: 'number', type: 'int', options: [5, 10, 20, 30, 40] },\n    { name: 'season', type: 'int', options: [0, 1, 2, 5, 10] },\n  ],\n  defaultParams: [10, 2],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'holt_winters_with_fit',\n  addStrategy: addTransformationStrategy,\n  category: categories.Predictors,\n  params: [\n    { name: 'number', type: 'int', options: [5, 10, 20, 30, 40] },\n    { name: 'season', type: 'int', options: [0, 1, 2, 5, 10] },\n  ],\n  defaultParams: [10, 2],\n  renderer: functionRenderer,\n});\n\n// Selectors\nregister({\n  type: 'bottom',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Selectors,\n  params: [{ name: 'count', type: 'int' }],\n  defaultParams: [3],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'first',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Selectors,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'last',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Selectors,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'max',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Selectors,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'min',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Selectors,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'percentile',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Selectors,\n  params: [{ name: 'nth', type: 'int' }],\n  defaultParams: [95],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'top',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Selectors,\n  params: [{ name: 'count', type: 'int' }],\n  defaultParams: [3],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'tag',\n  category: groupByTimeFunctions,\n  params: [{ name: 'tag', type: 'string', dynamicLookup: true }],\n  defaultParams: ['tag'],\n  renderer: fieldRenderer,\n});\n\nregister({\n  type: 'math',\n  addStrategy: addMathStrategy,\n  category: categories.Math,\n  params: [{ name: 'expr', type: 'string' }],\n  defaultParams: [' / 100'],\n  renderer: suffixRenderer,\n});\n\nregister({\n  type: 'alias',\n  addStrategy: addAliasStrategy,\n  category: categories.Aliasing,\n  params: [{ name: 'name', type: 'string', quote: 'double' }],\n  defaultParams: ['alias'],\n  renderMode: 'suffix',\n  renderer: aliasRenderer,\n});\n\nexport default {\n  create: createPart,\n  getCategories: () => {\n    return categories;\n  },\n  replaceAggregationAdd: replaceAggregationAddStrategy,\n};\n","import { map, find, filter, indexOf, cloneDeep } from 'lodash';\nimport queryPart from './query_part';\nimport kbn from 'grafana/app/core/utils/kbn';\nimport { RUMQuery, RUMQueryTag } from './types';\nimport { ScopedVars } from '@grafana/data';\nimport { TemplateSrv } from '@grafana/runtime';\nimport { defaultQueryInfo } from '../types';\n\n\nexport default class RUMQueryModel {\n  target: RUMQuery;\n  selectModels: any[] = [];\n  queryBuilder: any;\n  groupByParts: any;\n  templateSrv: any;\n  scopedVars: any;\n  refId?: string;\n\n  /** @ngInject */\n  constructor(target: RUMQuery, templateSrv?: TemplateSrv, scopedVars?: ScopedVars) {\n    this.target = target;\n    this.templateSrv = templateSrv;\n    this.scopedVars = scopedVars;\n\n    target.policy = target.policy || defaultQueryInfo.RUMServiceParams.policy;\n    target.resultFormat = target.resultFormat || defaultQueryInfo.RUMServiceParams.resultFormat;\n    target.orderByTime = target.orderByTime || defaultQueryInfo.RUMServiceParams.orderByTime;\n    target.tags = target.tags || cloneDeep(defaultQueryInfo.RUMServiceParams.tags);\n    target.groupBy = target.groupBy || cloneDeep(defaultQueryInfo.RUMServiceParams.groupBy);\n    target.select = target.select || cloneDeep(defaultQueryInfo.RUMServiceParams.select);\n\n    this.updateProjection();\n  }\n\n  updateProjection() {\n    this.selectModels = map(this.target.select, (parts: any) => {\n      return map(parts, queryPart.create);\n    });\n    this.groupByParts = map(this.target.groupBy, queryPart.create);\n  }\n\n  updatePersistedParts() {\n    this.target.select = map(this.selectModels, (selectParts) => {\n      return map(selectParts, (part: any) => {\n        return { type: part.def.type, params: part.params };\n      });\n    });\n  }\n\n  hasGroupByTime() {\n    return find(this.target.groupBy, (g: any) => g.type === 'time');\n  }\n\n  hasFill() {\n    return find(this.target.groupBy, (g: any) => g.type === 'fill');\n  }\n\n  addGroupBy(value: string) {\n    let stringParts = value.match(/^(\\w+)\\((.*)\\)$/);\n\n    if (!stringParts || !this.target.groupBy) {\n      return;\n    }\n\n    const typePart = stringParts[1];\n    const arg = stringParts[2];\n    const partModel = queryPart.create({ type: typePart, params: [arg] });\n    const partCount = this.target.groupBy.length;\n\n    if (partCount === 0) {\n      this.target.groupBy.push(partModel.part);\n    } else if (typePart === 'time') {\n      this.target.groupBy.splice(0, 0, partModel.part);\n    } else if (typePart === 'tag') {\n      if (this.target.groupBy[partCount - 1].type === 'fill') {\n        this.target.groupBy.splice(partCount - 1, 0, partModel.part);\n      } else {\n        this.target.groupBy.push(partModel.part);\n      }\n    } else {\n      this.target.groupBy.push(partModel.part);\n    }\n\n    this.updateProjection();\n  }\n\n  removeGroupByPart(part: { def: { type: string } }, index: number) {\n    const categories = queryPart.getCategories();\n\n    if (part.def.type === 'time') {\n      // remove fill\n      this.target.groupBy = filter(this.target.groupBy, (g: any) => g.type !== 'fill');\n      // remove aggregations\n      this.target.select = map(this.target.select, (s: any) => {\n        return filter(s, (part: any) => {\n          const partModel = queryPart.create(part);\n          if (partModel.def.category === categories.Aggregations) {\n            return false;\n          }\n          if (partModel.def.category === categories.Selectors) {\n            return false;\n          }\n          return true;\n        });\n      });\n    }\n\n    this.target.groupBy!.splice(index, 1);\n    this.updateProjection();\n  }\n\n  removeSelect(index: number) {\n    this.target.select!.splice(index, 1);\n    this.updateProjection();\n  }\n\n  removeSelectPart(selectParts: any[], part: any) {\n    // if we remove the field remove the whole statement\n    if (part.def.type === 'field') {\n      if (this.selectModels.length > 1) {\n        const modelsIndex = indexOf(this.selectModels, selectParts);\n        this.selectModels.splice(modelsIndex, 1);\n      }\n    } else {\n      const partIndex = indexOf(selectParts, part);\n      selectParts.splice(partIndex, 1);\n    }\n\n    this.updatePersistedParts();\n  }\n\n  addSelectPart(selectParts: any[], type: string) {\n    const partModel = queryPart.create({ type: type });\n    partModel.def.addStrategy(selectParts, partModel, this);\n    this.updatePersistedParts();\n  }\n\n  getMeasurementAndPolicy(interpolate: any) {\n    let policy = this.target.policy;\n    let measurement = this.target.measurement || 'measurement';\n\n    if (!measurement.match('^/.*/$')) {\n      measurement = '\"' + measurement + '\"';\n    } else if (interpolate) {\n      measurement = this.templateSrv.replace(measurement, this.scopedVars, 'regex');\n    }\n\n    if (policy !== 'default') {\n      policy = '\"' + this.target.policy + '\".';\n    } else {\n      policy = '';\n    }\n\n    return policy + measurement;\n  }\n\n  interpolateQueryStr(value: any[], variable: { multi: any; includeAll: any }, defaultFormatFn: any) {\n    // if no multi or include all do not regexEscape\n    if (!variable.multi && !variable.includeAll) {\n      return value;\n    }\n\n    if (typeof value === 'string') {\n      return kbn.regexEscape(value);\n    }\n\n    const escapedValues = map(value, kbn.regexEscape);\n    return '(' + escapedValues.join('|') + ')';\n  }\n\n  render(interpolate?: boolean) {\n    const target = this.target;\n\n    if (target.rawQuery) {\n      if (interpolate) {\n        return this.templateSrv.replace(target.query, this.scopedVars, this.interpolateQueryStr);\n      } else {\n        return target.query;\n      }\n    }\n\n    let query = 'select ';\n    let i; let y;\n    for (i = 0; i < this.selectModels.length; i++) {\n      const parts = this.selectModels[i];\n      let selectText = '';\n      for (y = 0; y < parts.length; y++) {\n        const part = parts[y];\n        selectText = part.render(selectText);\n      }\n\n      if (i > 0) {\n        query += ', ';\n      }\n      query += selectText;\n    }\n\n    query += ' from ' + this.getMeasurementAndPolicy(interpolate) + ' where ';\n    const conditions = map(target.tags, (tag, index) => {\n      return this.renderTagCondition(tag, index, interpolate);\n    });\n\n    if (conditions.length > 0) {\n      query += '(' + conditions.join(' ') + ') and ';\n    }\n\n    query += '$timeFilter';\n\n    let groupBySection = '';\n    for (i = 0; i < this.groupByParts.length; i++) {\n      const part = this.groupByParts[i];\n      if (i > 0) {\n        // for some reason fill has no separator\n        groupBySection += part.def.type === 'fill' ? ' ' : ', ';\n      }\n      groupBySection += part.render('');\n    }\n\n    if (groupBySection.length) {\n      query += ' group by ' + groupBySection;\n    }\n\n    if (target.fill) {\n      query += ' fill(' + target.fill + ')';\n    }\n\n    if (target.orderByTime === 'DESC') {\n      query += ' order by time desc';\n    }\n\n    if (target.limit) {\n      query += ' limit ' + target.limit;\n    }\n\n    if (target.slimit) {\n      query += ' slimit ' + target.slimit;\n    }\n\n    if (target.tz) {\n      query += \" tz('\" + target.tz + \"')\";\n    }\n\n    return query;\n  }\n\n  renderAdhocFilters(filters: any[]) {\n    const conditions = map(filters, (tag, index) => {\n      return this.renderTagCondition(tag, index, true);\n    });\n    return conditions.join(' ');\n  }\n\n  private renderTagCondition(tag: RUMQueryTag, index: number, interpolate?: boolean) {\n    // FIXME: merge this function with query_builder/renderTagCondition\n    let str = '';\n    let operator = tag.operator;\n    let value = tag.value;\n    if (index > 0) {\n      str = (tag.condition.toLowerCase() || 'and') + ' ';\n    }\n\n    if (!operator) {\n      if (/^\\/.*\\/$/.test(value)) {\n        operator = '=~';\n      } else {\n        operator = '=';\n      }\n    }\n\n    // quote value unless regex\n    if (operator !== '=~' && operator !== '!~') {\n      if (interpolate) {\n        value = this.templateSrv.replace(value, this.scopedVars);\n      }\n      if (operator !== '>' && operator !== '<') {\n        value = \"'\" + value.replace(/\\\\/g, '\\\\\\\\').replace(/\\'/g, \"\\\\'\") + \"'\";\n      }\n    } else if (interpolate) {\n      value = this.templateSrv.replace(value, this.scopedVars, 'regex');\n    }\n\n    return str + '\"' + tag.key + '\" ' + operator + ' ' + value;\n  }\n}","export function unwrap<T>(value: T | null | undefined): T {\n  if (value === null) {\n    throw new Error('value must not be nullish');\n  }\n  return value;\n}\n","import { SelectableValue } from '@grafana/data';\n\nexport function toSelectableValue<T extends string>(t: T): SelectableValue<T> {\n  return { label: t, value: t };\n}\n","import { RUMQuery, RUMQueryPart } from '../types';\nimport { SelectableValue } from '@grafana/data';\nimport { PartParams } from '../components/PartListSection';\nimport RUMQueryModel from '../RUM_query_model';\nimport { unwrap } from './unwrap';\nimport queryPart, { QueryPartDef } from '../query_part';\nimport { toSelectableValue } from './toSelectableValue';\n\ntype Categories = Record<string, QueryPartDef[]>;\n\nexport function getNewSelectPartOptions(): SelectableValue[] {\n  const categories: Categories = queryPart.getCategories();\n  const options: SelectableValue[] = [];\n\n  const keys = Object.keys(categories);\n\n  keys.forEach((key) => {\n    const children: SelectableValue[] = categories[key].map((x) => toSelectableValue(x.type));\n\n    options.push({\n      label: key,\n      options: children,\n    });\n  });\n\n  return options;\n}\n\nexport async function getNewGroupByPartOptions(\n  query: RUMQuery,\n  getTagKeys: () => Promise<string[]>\n): Promise<Array<SelectableValue<string>>> {\n  const tagKeys = await getTagKeys();\n  const queryCopy = { ...query }; // the query-model mutates the query\n  const model = new RUMQueryModel(queryCopy);\n  const options: Array<SelectableValue<string>> = [];\n  if (!model.hasFill()) {\n    options.push(toSelectableValue('fill(null)'));\n  }\n  if (!model.hasGroupByTime()) {\n    options.push(toSelectableValue('time($interval)'));\n  }\n  tagKeys.forEach((key) => {\n    options.push(toSelectableValue(`tag(${key})`));\n  });\n  return options;\n}\n\ninterface Part {\n  name: string;\n  params: PartParams;\n};\n\nfunction getPartParams(part: RUMQueryPart, dynamicParamOptions: Map<string, () => Promise<string[]>>): PartParams {\n  // NOTE: the way the system is constructed,\n  // there always can only be one possible dynamic-lookup\n  // field. in case of select it is the field,\n  // in case of group-by it is the tag\n  const def = queryPart.create(part).def;\n\n  // we switch the numbers to strings, it will work that way too,\n  // and it makes the code simpler\n  const paramValues = (part.params ?? []).map((p) => p.toString());\n\n  if (paramValues.length !== def.params.length) {\n    throw new Error('Invalid query-segment');\n  }\n\n  return paramValues.map((val, index) => {\n    const defParam = def.params[index];\n    if (defParam.dynamicLookup) {\n      return {\n        value: val,\n        options: unwrap(dynamicParamOptions.get(`${def.type}_${index}`)),\n      };\n    }\n\n    if (defParam.options !== null || defParam.options !== undefined) {\n      return {\n        value: val,\n        options: () => Promise.resolve(defParam.options),\n      };\n    }\n\n    return {\n      value: val,\n      options: null,\n    };\n  });\n}\n\nexport function makePartList(\n  queryParts: RUMQueryPart[],\n  dynamicParamOptions: Map<string, () => Promise<string[]>>\n): Part[] {\n  return queryParts.map((qp) => {\n    return {\n      name: qp.type,\n      params: getPartParams(qp, dynamicParamOptions),\n    };\n  });\n}\n","import React from 'react';\nimport { css } from 'emotion';\nimport { GrafanaTheme } from '@grafana/data';\nimport { InlineLabel, useStyles, InlineFieldRow } from '@grafana/ui';\n\n/**\n * Horizontal section for editor components.\n *\n * @alpha\n */\nexport const SegmentSection = ({\n  label,\n  htmlFor,\n  children,\n  fill,\n}: {\n  // Name of the section\n  label: string;\n  // htmlFor for the label\n  htmlFor?: string;\n  // List of components in the section\n  children: React.ReactNode;\n  // Fill the space at the end\n  fill?: boolean;\n}) => {\n  const styles = useStyles(getStyles);\n  return (\n    <InlineFieldRow>\n      <InlineLabel htmlFor={htmlFor} width={12} className={styles.label}>\n        {label}\n      </InlineLabel>\n      {children}\n      {fill && (\n        <div className={styles.fill}>\n          <InlineLabel>{' '}</InlineLabel>\n        </div>\n      )}\n    </InlineFieldRow>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme) => ({\n  label: css`\n    color: #33a2e5;\n  `,\n  fill: css`\n    flex-grow: 1;\n    margin-bottom: ${theme.spacing.inlineFormMargin};\n  `,\n});\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { __assign } from \"tslib\";\nimport { useCallback, useRef, useState } from 'react';\nimport useMountedState from './useMountedState';\nexport default function useAsyncFn(fn, deps, initialState) {\n    if (deps === void 0) { deps = []; }\n    if (initialState === void 0) { initialState = { loading: false }; }\n    var lastCallId = useRef(0);\n    var isMounted = useMountedState();\n    var _a = useState(initialState), state = _a[0], set = _a[1];\n    var callback = useCallback(function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var callId = ++lastCallId.current;\n        if (!state.loading) {\n            set(function (prevState) { return (__assign(__assign({}, prevState), { loading: true })); });\n        }\n        return fn.apply(void 0, args).then(function (value) {\n            isMounted() && callId === lastCallId.current && set({ value: value, loading: false });\n            return value;\n        }, function (error) {\n            isMounted() && callId === lastCallId.current && set({ error: error, loading: false });\n            return error;\n        });\n    }, deps);\n    return [state, callback];\n}\n","import { useCallback, useEffect, useRef } from 'react';\nexport default function useMountedState() {\n    var mountedRef = useRef(false);\n    var get = useCallback(function () { return mountedRef.current; }, []);\n    useEffect(function () {\n        mountedRef.current = true;\n        return function () {\n            mountedRef.current = false;\n        };\n    }, []);\n    return get;\n}\n","import { useState, useEffect } from 'react';\nimport { usePrevious } from 'react-use';\n\nexport function useShadowedState<T>(outsideVal: T): [T, (newVal: T) => void] {\n  const [currentVal, setCurrentVal] = useState(outsideVal);\n  const prevOutsideVal = usePrevious(outsideVal);\n\n  useEffect(() => {\n    const isOutsideValChanged = prevOutsideVal !== outsideVal;\n    // if the value changes from the outside, we accept it into the state\n    // (we only set it if it is different from the current value)\n    if (isOutsideValChanged && currentVal !== outsideVal) {\n      setCurrentVal(outsideVal);\n    }\n  }, [outsideVal, currentVal, prevOutsideVal]);\n\n  return [currentVal, setCurrentVal];\n}\n","import { useEffect, useRef } from 'react';\nexport default function usePrevious(state) {\n    var ref = useRef();\n    useEffect(function () {\n        ref.current = state;\n    });\n    return ref.current;\n}\n","import React, { useState, useEffect } from 'react';\nimport { cx, css } from 'emotion';\nimport { SelectableValue } from '@grafana/data';\nimport { useAsyncFn } from 'react-use';\nimport { InlineLabel, Select, AsyncSelect, Input } from '@grafana/ui';\nimport { useShadowedState } from '../common/useShadowedState';\n\n// this file is a simpler version of `grafana-ui / SegmentAsync.tsx`\n// with some changes:\n// 1. click-outside does not select the value. i think it's better to be explicit here.\n// 2. we set a min-width on the select-element to handle cases where the `value`\n//    is very short, like \"x\", and then you click on it and the select opens,\n//    and it tries to be as short as \"x\" and it does not work well.\n\n// NOTE: maybe these changes could be migrated into the SegmentAsync later\n\ntype SelVal = SelectableValue<string>;\n\n// when allowCustomValue is true, there is no way to enforce the selectableValue\n// enum-type, so i just go with `string`\n\ntype LoadOptions = (filter: string) => Promise<SelVal[]>;\n\ninterface Props {\n  value: string;\n  buttonClassName?: string;\n  loadOptions?: LoadOptions;\n  // if filterByLoadOptions is false,\n  // loadOptions is only executed once,\n  // when the select-box opens,\n  // and as you write, the list gets filtered\n  // by the select-box.\n  // if filterByLoadOptions is true,\n  // as you write the loadOptions is executed again and again,\n  // and it is relied on to filter the results.\n  filterByLoadOptions?: boolean;\n  onChange: (v: SelVal) => void;\n  allowCustomValue?: boolean;\n  disabled?: boolean\n};\n\nconst selectClass = css({\n  minWidth: '160px',\n});\n\ninterface SelProps {\n  loadOptions: LoadOptions;\n  filterByLoadOptions?: boolean;\n  onClose: () => void;\n  onChange: (v: SelVal) => void;\n  allowCustomValue?: boolean;\n}\n\ninterface SelReloadProps {\n  loadOptions: (filter: string) => Promise<SelVal[]>;\n  onClose: () => void;\n  onChange: (v: SelVal) => void;\n  allowCustomValue?: boolean;\n}\n\n// when a custom value is written into a select-box,\n// by default the new value is prefixed with \"Create:\",\n// and that sounds confusing because here we do not create\n// anything. we change this to just be the entered string.\nconst formatCreateLabel = (v: string) => v;\n\nconst SelReload = ({ loadOptions, allowCustomValue, onChange, onClose }: SelReloadProps): JSX.Element => {\n  // here we rely on the fact that writing text into the <AsyncSelect/>\n  // does not cause a re-render of the current react component.\n  // this way there is only a single render-call,\n  // so there is only a single `debouncedLoadOptions`.\n  // if we want ot make this \"re-render safe,\n  // we will have to put the debounced call into an useRef,\n  // and probably have an useEffect\n  // const debouncedLoadOptions = debouncePromise(loadOptions, 1000, { leading: true });\n  return (\n    <div className={selectClass}>\n      <AsyncSelect\n        formatCreateLabel={formatCreateLabel}\n        defaultOptions\n        autoFocus\n        isOpen\n        onCloseMenu={onClose}\n        allowCustomValue={allowCustomValue}\n        loadOptions={loadOptions}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\ninterface SelSingleLoadProps {\n  loadOptions: (filter: string) => Promise<SelVal[]>;\n  onClose: () => void;\n  onChange: (v: SelVal) => void;\n  allowCustomValue?: boolean;\n}\n\nconst SelSingleLoad = ({ loadOptions, allowCustomValue, onChange, onClose }: SelSingleLoadProps): JSX.Element => {\n  const [loadState, doLoad] = useAsyncFn(loadOptions, [loadOptions]);\n\n  useEffect(() => {\n    doLoad('');\n  }, [doLoad, loadOptions]);\n\n  return (\n    <div className={selectClass}>\n      <Select\n        isLoading={loadState.loading}\n        formatCreateLabel={formatCreateLabel}\n        autoFocus\n        isOpen\n        onCloseMenu={onClose}\n        allowCustomValue={allowCustomValue}\n        options={loadState.value ?? []}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nconst Sel = ({ loadOptions, filterByLoadOptions, allowCustomValue, onChange, onClose }: SelProps): JSX.Element => {\n  // unfortunately <Segment/> and <SegmentAsync/> have somewhat different behavior,\n  // so the simplest approach was to just create two separate wrapper-components\n  return filterByLoadOptions ? (\n    <SelReload loadOptions={loadOptions} allowCustomValue={allowCustomValue} onChange={onChange} onClose={onClose} />\n  ) : (\n    <SelSingleLoad\n      loadOptions={loadOptions}\n      allowCustomValue={allowCustomValue}\n      onChange={onChange}\n      onClose={onClose}\n    />\n  );\n};\n\ninterface InpProps {\n  initialValue: string;\n  onChange: (newVal: string) => void;\n  onClose: () => void;\n}\n\nconst Inp = ({ initialValue, onChange, onClose }: InpProps): JSX.Element => {\n  const [currentValue, setCurrentValue] = useShadowedState(initialValue);\n\n  return (\n    <Input\n      autoFocus\n      type=\"text\"\n      spellCheck={false}\n      onBlur={onClose}\n      onKeyDown={(e) => {\n        if (e.key === 'Enter') {\n          onChange(currentValue);\n        }\n      }}\n      onChange={(e) => {\n        setCurrentValue(e.currentTarget.value);\n      }}\n      value={currentValue}\n    />\n  );\n};\n\nconst defaultButtonClass = css({\n  width: 'auto',\n  cursor: 'pointer',\n});\n\nexport const Seg = ({\n  value,\n  buttonClassName,\n  loadOptions,\n  filterByLoadOptions,\n  allowCustomValue,\n  onChange,\n  disabled\n}: Props): JSX.Element => {\n  const [isOpen, setOpen] = useState(false);\n  if (!isOpen) {\n    const className = cx(defaultButtonClass, buttonClassName);\n    return (\n      <InlineLabel\n        as=\"button\"\n        className={className}\n        onClick={() => {\n          setOpen(!disabled);\n        }}\n      >\n        {value}\n      </InlineLabel>\n    );\n  } else {\n    if (loadOptions !== undefined) {\n      return (\n        <Sel\n          loadOptions={loadOptions}\n          filterByLoadOptions={filterByLoadOptions ?? false}\n          allowCustomValue={allowCustomValue}\n          onChange={(v) => {\n            setOpen(false);\n            onChange(v);\n          }}\n          onClose={() => {\n            setOpen(false);\n          }}\n        />\n      );\n    } else {\n      return (\n        <Inp\n          initialValue={value}\n          onClose={() => {\n            setOpen(false);\n          }}\n          onChange={(v) => {\n            setOpen(false);\n            onChange({ value: v, label: v });\n          }}\n        />\n      );\n    }\n  }\n};\n","import React from 'react';\nimport { Seg } from './Seg';\nimport { toSelectableValue } from '../common/toSelectableValue';\n\nconst DEFAULT_POLICY = 'default';\n\ninterface Props {\n  onChange: (policy: string | undefined, measurement: string | undefined) => void;\n  policy: string | undefined;\n  measurement: string | undefined;\n  getPolicyOptions: () => Promise<string[]>;\n  getMeasurementOptions: (filter: string) => Promise<string[]>;\n};\n\nexport const FromSection = ({\n  policy,\n  measurement,\n  onChange,\n  getPolicyOptions,\n  getMeasurementOptions,\n}: Props): JSX.Element => {\n  const handlePolicyLoadOptions = async () => {\n    const allPolicies = await getPolicyOptions();\n    // if `default` does not exist in the list of policies, we add it\n    const allPoliciesWithDefault = allPolicies.some((p) => p === 'default')\n      ? allPolicies\n      : [DEFAULT_POLICY, ...allPolicies];\n\n    return allPoliciesWithDefault.map(toSelectableValue);\n  };\n\n  const handleMeasurementLoadOptions = async (filter: string) => {\n    const allMeasurements = await getMeasurementOptions(filter);\n    return allMeasurements.map(toSelectableValue);\n  };\n\n  return (\n    <>\n      <Seg\n        allowCustomValue\n        value={policy ?? 'using default policy'}\n        loadOptions={handlePolicyLoadOptions}\n        onChange={(v) => {\n          onChange(v.value, measurement);\n        }}\n      />\n      <Seg\n        allowCustomValue\n        value={measurement ?? 'select measurement'}\n        loadOptions={handleMeasurementLoadOptions}\n        filterByLoadOptions\n        onChange={(v) => {\n          onChange(policy, v.value);\n        }}\n      />\n    </>\n  );\n};\n","import { RUMQueryTag } from '../types';\n\nfunction isRegex(text: string): boolean {\n  return /^\\/.*\\/$/.test(text);\n}\n\n// FIXME: sync these to the query-string-generation-code\n// probably it's in rum_query_model.ts\nexport function getOperator(tag: RUMQueryTag): string {\n  return tag.operator ?? (isRegex(tag.value) ? '=~' : '=');\n}\n\n// FIXME: sync these to the query-string-generation-code\n// probably it's in rum_query_model.ts\nexport function getCondition(tag: RUMQueryTag, isFirst: boolean): string | undefined {\n  return isFirst ? undefined : tag.condition ?? 'AND';\n}\n\nexport function adjustOperatorIfNeeded(currentOperator: string, newTagValue: string): string {\n  const isCurrentOperatorRegex = currentOperator === '=~' || currentOperator === '!~';\n  const isNewTagValueRegex = isRegex(newTagValue);\n\n  if (isNewTagValueRegex) {\n    return isCurrentOperatorRegex ? currentOperator : '=~';\n  } else {\n    return isCurrentOperatorRegex ? '=' : currentOperator;\n  }\n}\n","import React from 'react';\nimport { SelectableValue } from '@grafana/data';\nimport { Seg } from './Seg';\nimport { unwrap } from '../common/unwrap';\n\ninterface Props {\n  loadOptions: () => Promise<SelectableValue[]>;\n  allowCustomValue?: boolean;\n  onAdd: (v: string) => void;\n};\n\nexport const AddButton = ({ loadOptions, allowCustomValue, onAdd }: Props): JSX.Element => {\n  return (\n    <Seg\n      value=\"+\"\n      loadOptions={loadOptions}\n      allowCustomValue={allowCustomValue}\n      onChange={(v) => {\n        onAdd(unwrap(v.value));\n      }}\n    />\n  );\n};\n","import React from 'react';\nimport { SelectableValue } from '@grafana/data';\nimport { Seg } from './Seg';\nimport { RUMQueryTag } from '../types';\nimport { toSelectableValue } from '../common/toSelectableValue';\nimport { adjustOperatorIfNeeded, getCondition, getOperator } from '../common/tagUtils';\nimport { AddButton } from './AddButton';\n\ntype KnownOperator = '=' | '!=' | '<>' | '<' | '>' | '=~' | '!~';\nconst knownOperators: KnownOperator[] = ['=', '!=', '<>', '<', '>', '=~', '!~'];\n\ntype KnownCondition = 'AND' | 'OR';\nconst knownConditions: KnownCondition[] = ['AND', 'OR'];\n\nconst operatorOptions: Array<SelectableValue<KnownOperator>> = knownOperators.map(toSelectableValue);\nconst condititonOptions: Array<SelectableValue<KnownCondition>> = knownConditions.map(toSelectableValue);\n\ninterface Props {\n  tags: RUMQueryTag[];\n  onChange: (tags: RUMQueryTag[]) => void;\n  getTagKeyOptions: () => Promise<string[]>;\n  getTagValueOptions: (key: string) => Promise<string[]>;\n};\n\ninterface TagProps {\n  tag: RUMQueryTag;\n  isFirst: boolean;\n  onRemove: () => void;\n  onChange: (tag: RUMQueryTag) => void;\n  getTagKeyOptions: () => Promise<string[]>;\n  getTagValueOptions: (key: string) => Promise<string[]>;\n};\n\nconst loadConditionOptions = () => Promise.resolve(condititonOptions);\n\nconst loadOperatorOptions = () => Promise.resolve(operatorOptions);\n\nconst Tag = ({ tag, isFirst, onRemove, onChange, getTagKeyOptions, getTagValueOptions }: TagProps): JSX.Element => {\n  const operator = getOperator(tag);\n  const condition = getCondition(tag, isFirst);\n\n  const getTagKeySegmentOptions = () => {\n    return getTagKeyOptions()\n      .catch((err) => {\n        // in this UI element we add a special item to the list of options,\n        // that is used to remove the element.\n        // this causes a problem: if `getTagKeyOptions` fails with an error,\n        // the remove-filter option is never added to the list,\n        // and the UI element can not be removed.\n        // to avoid it, we catch any potential errors coming from `getTagKeyOptions`,\n        // log the error, and pretend that the list of options is an empty list.\n        // this way the remove-item option can always be added to the list.\n        console.error(err);\n        return [];\n      })\n      .then((tags) => [{ label: '-- remove filter --', value: undefined }, ...tags.map(toSelectableValue)]);\n  };\n\n  const getTagValueSegmentOptions = () => {\n    return getTagValueOptions(tag.key).then((tags) => tags.map(toSelectableValue));\n  };\n\n  return (\n    <div className=\"gf-form\">\n      {condition !== undefined && (\n        <Seg\n          value={condition}\n          loadOptions={loadConditionOptions}\n          disabled\n          onChange={(v) => {\n            onChange({ ...tag, condition: v.value });\n          }}\n        />\n      )}\n      <Seg\n        allowCustomValue\n        value={tag.key}\n        loadOptions={getTagKeySegmentOptions}\n        onChange={(v) => {\n          const { value } = v;\n          if (value === undefined) {\n            onRemove();\n          } else {\n            onChange({ ...tag, key: value ?? '' });\n          }\n        }}\n      />\n      <Seg\n        value={operator}\n        loadOptions={loadOperatorOptions}\n        onChange={(op) => {\n          onChange({ ...tag, operator: op.value });\n        }}\n      />\n      <Seg\n        allowCustomValue\n        value={tag.value}\n        loadOptions={getTagValueSegmentOptions}\n        onChange={(v) => {\n          const value = v.value ?? '';\n          onChange({ ...tag, value, operator: adjustOperatorIfNeeded(operator, value) });\n        }}\n      />\n    </div>\n  );\n};\n\nexport const TagsSection = ({ tags, onChange, getTagKeyOptions, getTagValueOptions }: Props): JSX.Element => {\n  const onTagChange = (newTag: RUMQueryTag, index: number) => {\n    const newTags = tags.map((tag, i) => {\n      return index === i ? newTag : tag;\n    });\n    onChange(newTags);\n  };\n\n  const onTagRemove = (index: number) => {\n    const newTags = tags.filter((t, i) => i !== index);\n    onChange(newTags);\n  };\n\n  const getTagKeySegmentOptions = () => {\n    return getTagKeyOptions().then((tags) => tags.map(toSelectableValue));\n  };\n\n  const addNewTag = (tagKey: string, isFirst: boolean) => {\n    const minimalTag: RUMQueryTag = {\n      key: tagKey,\n      value: 'select tag value',\n    };\n\n    const newTag: RUMQueryTag = {\n      key: minimalTag.key,\n      value: minimalTag.value,\n      operator: getOperator(minimalTag),\n      condition: getCondition(minimalTag, isFirst),\n    };\n\n    onChange([...tags, newTag]);\n  };\n\n  return (\n    <>\n      {tags.map((t, i) => (\n        <Tag\n          tag={t}\n          isFirst={i === 0}\n          key={i}\n          onChange={(newT) => {\n            onTagChange(newT, i);\n          }}\n          onRemove={() => {\n            onTagRemove(i);\n          }}\n          getTagKeyOptions={getTagKeyOptions}\n          getTagValueOptions={getTagValueOptions}\n        />\n      ))}\n      <AddButton\n        allowCustomValue\n        loadOptions={getTagKeySegmentOptions}\n        onAdd={(v) => {\n          addNewTag(v, tags.length === 0);\n        }}\n      />\n    </>\n  );\n};\n","import React, { useMemo } from 'react';\nimport { cx, css } from 'emotion';\nimport { WithContextMenu, useTheme } from '@grafana/ui';\nimport { SelectableValue, GrafanaTheme } from '@grafana/data';\nimport { Seg } from './Seg';\nimport { unwrap } from '../common/unwrap';\nimport { toSelectableValue } from '../common/toSelectableValue';\nimport { AddButton } from './AddButton';\n\nexport type PartParams = Array<{\n  value: string;\n  options: (() => Promise<string[]>) | null;\n}>;\n\ninterface Props {\n  parts: Array<{\n    name: string;\n    params: PartParams;\n  }>;\n  getNewPartOptions: () => Promise<SelectableValue[]>;\n  onChange: (partIndex: number, paramValues: string[]) => void;\n  onRemovePart: (index: number) => void;\n  onAddNewPart: (type: string) => void;\n};\n\nconst renderRemovableNameMenuItems = (onClick: () => void) => {\n  return [{ items: [{ label: 'remove', onClick  }] }]\n};\n\nconst noRightMarginPaddingClass = css({\n  paddingRight: '0',\n  marginRight: '0',\n});\n\nconst RemovableName = ({ name, onRemove }: { name: string; onRemove: () => void }) => {\n  return (\n    <WithContextMenu getContextMenuItems={() => renderRemovableNameMenuItems(onRemove)}>\n      {({ openMenu }) => (\n        <button className={cx('gf-form-label', noRightMarginPaddingClass)} onClick={openMenu}>\n          {name}\n        </button>\n      )}\n    </WithContextMenu>\n  );\n};\n\ninterface PartProps {\n  name: string;\n  params: PartParams;\n  onRemove: () => void;\n  onChange: (paramValues: string[]) => void;\n}\n\nconst noHorizMarginPaddingClass = css({\n  paddingLeft: '0',\n  paddingRight: '0',\n  marginLeft: '0',\n  marginRight: '0',\n});\n\nconst getPartClass = (theme: GrafanaTheme) => {\n  return cx(\n    'gf-form-label',\n    css({\n      paddingLeft: '0',\n      // gf-form-label class makes certain css attributes incorrect\n      // for the selectbox-dropdown, so we have to \"reset\" them back\n      lineHeight: theme.typography.lineHeight.md,\n      fontSize: theme.typography.size.base,\n    })\n  );\n};\n\nconst Part = ({ name, params, onChange, onRemove }: PartProps): JSX.Element => {\n  const theme = useTheme();\n  const partClass = useMemo(() => getPartClass(theme), [theme]);\n\n  const onParamChange = (par: string, i: number) => {\n    const newParams = params.map((p) => p.value);\n    newParams[i] = par;\n    onChange(newParams);\n  };\n\n  return (\n    <div className={partClass}>\n      <RemovableName name={name} onRemove={onRemove} />(\n      {params.map((p, i) => {\n        const { value, options } = p;\n        const isLast = i === params.length - 1;\n        const loadOptions =\n          options !== null ? () => options().then((items) => items.map(toSelectableValue)) : undefined;\n        return (\n          <React.Fragment key={i}>\n            <Seg\n              allowCustomValue\n              value={value}\n              buttonClassName={noHorizMarginPaddingClass}\n              loadOptions={loadOptions}\n              onChange={(v) => {\n                onParamChange(unwrap(v.value), i);\n              }}\n            />\n            {!isLast && ','}\n          </React.Fragment>\n        );\n      })}\n      )\n    </div>\n  );\n};\n\nexport const PartListSection = ({\n  parts,\n  getNewPartOptions,\n  onAddNewPart,\n  onRemovePart,\n  onChange,\n}: Props): JSX.Element => {\n  return (\n    <>\n      {parts.map((part, index) => (\n        <Part\n          key={index}\n          name={part.name}\n          params={part.params}\n          onRemove={() => {\n            onRemovePart(index);\n          }}\n          onChange={(pars) => {\n            onChange(index, pars);\n          }}\n        />\n      ))}\n      <AddButton loadOptions={getNewPartOptions} onAdd={onAddNewPart} />\n    </>\n  );\n};\n","import { css } from 'emotion';\n\nexport const paddingRightClass = css({\n  paddingRight: '4px',\n});\n","import React from 'react';\nimport { cx } from 'emotion';\nimport { Input } from '@grafana/ui';\nimport { useShadowedState } from '../common/useShadowedState';\nimport { paddingRightClass } from './styles';\n\ninterface Props {\n  value: string | undefined;\n  onChange: (value: string | undefined) => void;\n  isWide?: boolean;\n  placeholder?: string;\n};\n\nexport const InputSection = ({ value, onChange, isWide, placeholder }: Props): JSX.Element => {\n  const [currentValue, setCurrentValue] = useShadowedState(value);\n\n  const onBlur = () => {\n    // we send empty-string as undefined\n    const newValue = currentValue === '' ? undefined : currentValue;\n    onChange(newValue);\n  };\n\n  return (\n    <Input\n      placeholder={placeholder}\n      className={cx(isWide ?? false ? 'width-14' : 'width-8', paddingRightClass)}\n      type=\"text\"\n      spellCheck={false}\n      onBlur={onBlur}\n      onChange={(e) => {\n        setCurrentValue(e.currentTarget.value);\n      }}\n      value={currentValue ?? ''}\n    />\n  );\n};\n","import React from 'react';\nimport { cx } from 'emotion';\nimport { SelectableValue } from '@grafana/data';\nimport { unwrap } from '../common/unwrap';\nimport { Select } from '@grafana/ui';\nimport { paddingRightClass } from './styles';\n\ntype Mode = 'ASC' | 'DESC';\n\nconst OPTIONS: Array<SelectableValue<Mode>> = [\n  { label: 'ascending', value: 'ASC' },\n  { label: 'descending', value: 'DESC' },\n];\n\nconst className = cx('width-9', paddingRightClass);\n\ninterface Props {\n  value: Mode;\n  onChange: (value: Mode) => void;\n  inputId?: string;\n};\n\nexport const OrderByTimeSection = ({ value, onChange, inputId }: Props): JSX.Element => {\n  return (\n    <Select<Mode>\n      inputId={inputId}\n      className={className}\n      onChange={(v) => {\n        onChange(unwrap(v.value));\n      }}\n      value={value}\n      options={OPTIONS}\n    />\n  );\n};\n","import { SelectableValue } from '@grafana/data';\nimport { ResultFormat } from '../types';\n\nexport const RESULT_FORMATS: Array<SelectableValue<ResultFormat>> = [\n  { label: 'Time series', value: 'time_series' },\n  { label: 'Table', value: 'table' },\n  { label: 'Logs', value: 'logs' },\n];\n\nexport const DEFAULT_RESULT_FORMAT: ResultFormat = 'time_series';\n\nexport const ENABLE_MEASUREMENTS: Array<string> = [\n  'log_url_statistics',\n  'event_url_statistics',\n  'pv_url_statistics',\n  'user_event_user_event_unique',\n  'uv_project_unique',\n  'uv_page_unique',\n  'custom_url_info',\n  'custom_url_statistics',\n  'fetch_url_info',\n  'fetch_url_statistics',\n  'fetch_project_statistics',\n  'set_data_url_statistics',\n  'performance_page_statistics',\n  'performance_project_statistics',\n  'static_url_source',\n  'static_resource_statistics',\n  'static_project_statistics', \n  'webvitals_page_statistics',\n  'webvitals_project_statistics',\n]\n","import { Select } from '@grafana/ui';\nimport { cx } from 'emotion';\nimport { ResultFormat } from '../types';\nimport React from 'react';\nimport { unwrap } from '../common/unwrap';\nimport { RESULT_FORMATS } from '../common/constants';\nimport { paddingRightClass } from './styles';\n\ninterface Props {\n  inputId?: string;\n  format: ResultFormat;\n  onChange: (newFormat: ResultFormat) => void;\n};\n\nconst className = cx('width-8', paddingRightClass);\n\nexport const FormatAsSection = ({ format, inputId, onChange }: Props): JSX.Element => {\n  return (\n    <Select<ResultFormat>\n      inputId={inputId}\n      className={className}\n      onChange={(v) => {\n        onChange(unwrap(v.value));\n      }}\n      value={format}\n      options={RESULT_FORMATS}\n    />\n  );\n};\n","import React, { useMemo, FC, useEffect } from 'react';\nimport { css } from 'emotion';\nimport { QueryEditorProps, GrafanaTheme } from '@grafana/data';\nimport { InlineLabel, useStyles } from '@grafana/ui';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport {\n  getAllMeasurementsForTags,\n  getAllPolicies,\n  getFieldKeysForMeasurement,\n  getTagKeysForMeasurementAndTags,\n  getTagValues,\n} from './RUMMetadataQuery';\nimport {\n  normalizeQuery,\n  addNewSelectPart,\n  removeSelectPart,\n  addNewGroupByPart,\n  removeGroupByPart,\n  changeSelectPart,\n  changeGroupByPart,\n} from './queryUtils';\nimport { getNewSelectPartOptions, getNewGroupByPartOptions, makePartList } from './common/partListUtils';\nimport { SegmentSection } from './components/SegmentSection';\nimport { FromSection } from './components/FromSection';\nimport { TagsSection } from './components/TagsSection';\nimport { PartListSection } from './components/PartListSection';\nimport { InputSection } from './components/InputSection';\nimport { OrderByTimeSection } from './components/OrderByTimeSection';\nimport { FormatAsSection } from './components/FormatAsSection';\nimport { useUniqueId } from './common/useUniqueId';\nimport { DEFAULT_RESULT_FORMAT } from './common/constants';\nimport { RUMQuery, RUMQueryTag } from './types';\nimport { defaultQueryInfo, MyDataSourceOptions, QueryInfo } from '../types';\nimport { clone } from 'lodash';\nimport { DataSource } from '../DataSource';\n\ntype Props = QueryEditorProps<DataSource, QueryInfo, MyDataSourceOptions>;\n\nfunction getTemplateVariableOptions() {\n  return (\n    getTemplateSrv()\n      .getVariables()\n      // we make them regex-params, i'm not 100% sure why.\n      // probably because this way multi-value variables work ok too.\n      .map((v) => `/^$${v.name}$/`)\n  );\n}\n\n// helper function to make it easy to call this from the widget-render-code\nfunction withTemplateVariableOptions(optionsPromise: Promise<string[]>): Promise<string[]> {\n  return optionsPromise.then((options) => [...getTemplateVariableOptions(), ...options]);\n}\n\nfunction filterTags(parts: RUMQueryTag[], allTagKeys: Set<string>): RUMQueryTag[] {\n  return parts.filter((t) => allTagKeys.has(t.key));\n}\n\nexport const RUMServiceQueryEditor: FC<Props> = React.memo((props: Props) => {\n  const uniqueId = useUniqueId();\n  const formatAsId = `rum-qe-format-as-${uniqueId}`;\n  const orderByTimeId = `rum-qe-order-by${uniqueId}`;\n\n  const styles = useStyles(getStyles);\n\n  const { datasource, onChange, query: queryInfo  } = props;\n  const query = normalizeQuery(queryInfo.RUMServiceParams || clone(defaultQueryInfo.RUMServiceParams));\n  const { measurement, policy } = query;\n\n  useEffect(() => {\n    if (!queryInfo.RUMServiceParams) {\n      onChange({ ...queryInfo, RUMServiceParams: clone(defaultQueryInfo.RUMServiceParams) })\n    }\n  }, [onChange, queryInfo]);\n\n  const allTagKeys = useMemo(() => {\n    return getTagKeysForMeasurementAndTags(measurement, policy, [], datasource)\n      .then((tags) => {\n        return new Set(tags);\n      })\n      .catch((err) => {\n        console.error('getTagKeysForMeasurementAndTags', err);\n        return new Set('');\n      });\n  }, [measurement, policy, datasource]);\n\n  const selectLists = useMemo(() => {\n    const dynamicSelectPartOptions = new Map([\n      [\n        'field_0',\n        () => {\n          return measurement !== undefined\n            ? getFieldKeysForMeasurement(measurement, policy, datasource)\n            : Promise.resolve([]);\n        },\n      ],\n    ]);\n    return (query.select ?? []).map((sel) => makePartList(sel, dynamicSelectPartOptions));\n  }, [measurement, policy, query.select, datasource]);\n\n  // the following function is not complicated enough to memoize, but it's result\n  // is used in both memoized and un-memoized parts, so we have no choice\n  const getTagKeys = useMemo(() => {\n    return () =>\n      allTagKeys.then((keys) =>\n        getTagKeysForMeasurementAndTags(measurement, policy, filterTags(query.tags ?? [], keys), datasource)\n      );\n  }, [measurement, policy, query.tags, datasource, allTagKeys]);\n\n  const groupByList = useMemo(() => {\n    const dynamicGroupByPartOptions = new Map([['tag_0', getTagKeys]]);\n\n    return makePartList(query.groupBy ?? [], dynamicGroupByPartOptions);\n  }, [getTagKeys, query.groupBy]);\n\n  const onAppliedChange = (newQuery: RUMQuery) => {\n    props.onChange({\n      ...props.query,\n      RUMServiceParams: newQuery,\n    });\n    props.onRunQuery();\n  };\n  const handleFromSectionChange = (p: string | undefined, m: string | undefined) => {\n    onAppliedChange({\n      ...query,\n      policy: p,\n      measurement: m,\n    });\n  };\n\n  const handleTagsSectionChange = (tags: RUMQueryTag[]) => {\n    // we set empty-arrays to undefined\n    onAppliedChange({\n      ...query,\n      tags: tags.length === 0 ? undefined : tags,\n    });\n  };\n\n  return (\n    <div>\n      <SegmentSection label=\"FROM\" fill={true}>\n        <FromSection\n          policy={policy}\n          measurement={measurement}\n          getPolicyOptions={() => getAllPolicies(datasource)}\n          getMeasurementOptions={(filter) =>\n            withTemplateVariableOptions(\n              allTagKeys.then((keys) =>\n                getAllMeasurementsForTags(\n                  filter === '' ? undefined : filter,\n                  filterTags(query.tags ?? [], keys),\n                  datasource\n                )\n              )\n            )\n          }\n          onChange={handleFromSectionChange}\n        />\n        <InlineLabel width=\"auto\" className={styles.inlineLabel}>\n          WHERE\n        </InlineLabel>\n        <TagsSection\n          tags={query.tags ?? []}\n          onChange={handleTagsSectionChange}\n          getTagKeyOptions={getTagKeys}\n          getTagValueOptions={(key: string) =>\n            withTemplateVariableOptions(\n              allTagKeys.then((keys) =>\n                getTagValues(key, measurement, policy, filterTags(query.tags ?? [], keys), datasource)\n              )\n            )\n          }\n        />\n      </SegmentSection>\n      {selectLists.map((sel, index) => (\n        <SegmentSection key={index} label={index === 0 ? 'SELECT' : ''} fill={true}>\n          <PartListSection\n            parts={sel}\n            getNewPartOptions={() => Promise.resolve(getNewSelectPartOptions())}\n            onChange={(partIndex, newParams) => {\n              const newQuery = changeSelectPart(query, index, partIndex, newParams);\n              onAppliedChange(newQuery);\n            }}\n            onAddNewPart={(type) => {\n              onAppliedChange(addNewSelectPart(query, type, index));\n            }}\n            onRemovePart={(partIndex) => {\n              onAppliedChange(removeSelectPart(query, partIndex, index));\n            }}\n          />\n        </SegmentSection>\n      ))}\n      <SegmentSection label=\"GROUP BY\" fill={true}>\n        <PartListSection\n          parts={groupByList}\n          getNewPartOptions={() => getNewGroupByPartOptions(query, getTagKeys)}\n          onChange={(partIndex, newParams) => {\n            const newQuery = changeGroupByPart(query, partIndex, newParams);\n            onAppliedChange(newQuery);\n          }}\n          onAddNewPart={(type) => {\n            onAppliedChange(addNewGroupByPart(query, type));\n          }}\n          onRemovePart={(partIndex) => {\n            onAppliedChange(removeGroupByPart(query, partIndex));\n          }}\n        />\n      </SegmentSection>\n      <SegmentSection label=\"TIMEZONE\" fill={true}>\n        <InputSection\n          placeholder=\"(optional)\"\n          value={query.tz}\n          onChange={(tz) => {\n            onAppliedChange({ ...query, tz });\n          }}\n        />\n        <InlineLabel htmlFor={orderByTimeId} width=\"auto\" className={styles.inlineLabel}>\n          ORDER BY TIME\n        </InlineLabel>\n        <OrderByTimeSection\n          inputId={orderByTimeId}\n          value={query.orderByTime === 'DESC' ? 'DESC' : 'ASC' /* FIXME: make this shared with RUM_query_model */}\n          onChange={(v) => {\n            onAppliedChange({ ...query, orderByTime: v });\n          }}\n        />\n      </SegmentSection>\n      <SegmentSection label=\"LIMIT\" fill={true}>\n        <InputSection\n          placeholder=\"(optional)\"\n          value={query.limit?.toString()}\n          onChange={(limit) => {\n            onAppliedChange({ ...query, limit });\n          }}\n        />\n        <InlineLabel width=\"auto\" className={styles.inlineLabel}>\n          SLIMIT\n        </InlineLabel>\n        <InputSection\n          placeholder=\"(optional)\"\n          value={query.slimit?.toString()}\n          onChange={(slimit) => {\n            onAppliedChange({ ...query, slimit });\n          }}\n        />\n      </SegmentSection>\n      <SegmentSection htmlFor={formatAsId} label=\"FORMAT AS\" fill={true}>\n        <FormatAsSection\n          inputId={formatAsId}\n          format={query.resultFormat ?? DEFAULT_RESULT_FORMAT}\n          onChange={(format) => {\n            onAppliedChange({ ...query, resultFormat: format });\n          }}\n        />\n        {query.resultFormat !== 'table' && (\n          <>\n            <InlineLabel width=\"auto\" className={styles.inlineLabel}>\n              ALIAS\n            </InlineLabel>\n            <InputSection\n              isWide\n              placeholder=\"Naming pattern\"\n              value={query.alias}\n              onChange={(alias) => {\n                onAppliedChange({ ...query, alias });\n              }}\n            />\n          </>\n        )}\n      </SegmentSection>\n    </div>\n  );\n});\n\nfunction getStyles(theme: GrafanaTheme) {\n  return {\n    inlineLabel: css`\n      color: #33a2e5;\n    `,\n  };\n}\n\nRUMServiceQueryEditor.displayName = 'RUMServiceQueryEditor';\n","import { useRef } from 'react';\nimport { uniqueId } from 'lodash';\n\nexport function useUniqueId(): string {\n  // we need to lazy-init this ref.\n  // otherwise we would call `uniqueId`\n  // on every render. unfortunately\n  // useRef does not have lazy-init builtin,\n  // like useState does. we do it manually.\n  const idRefLazy = useRef<string | null>(null);\n\n  if (idRefLazy.current === null) {\n    idRefLazy.current = uniqueId();\n  }\n\n  return idRefLazy.current;\n}\n","import { cloneDeep } from 'lodash';\nimport RUMQueryModel from './RUM_query_model';\nimport { RUMQuery } from './types';\n\nexport function normalizeQuery(query: RUMQuery): RUMQuery {\n  // we return the original query if there is no need to update it\n  if (\n    query.policy !== undefined &&\n    query.resultFormat !== undefined &&\n    query.orderByTime !== undefined &&\n    query.tags !== undefined &&\n    query.groupBy !== undefined &&\n    query.select !== undefined\n  ) {\n    return query;\n  }\n\n  // FIXME: we should move the whole normalizeQuery logic here,\n  // and then have RUMQueryModel call this function,\n  // to concentrate the whole logic here\n\n  const queryCopy = cloneDeep(query); // the query-model mutates the query\n  return new RUMQueryModel(queryCopy).target;\n}\n\nexport function addNewSelectPart(query: RUMQuery, type: string, index: number): RUMQuery {\n  const queryCopy = cloneDeep(query); // the query-model mutates the query\n  const model = new RUMQueryModel(queryCopy);\n  model.addSelectPart(model.selectModels[index], type);\n  return model.target;\n}\n\nexport function removeSelectPart(query: RUMQuery, partIndex: number, index: number): RUMQuery {\n  const queryCopy = cloneDeep(query); // the query-model mutates the query\n  const model = new RUMQueryModel(queryCopy);\n  const selectModel = model.selectModels[index];\n  model.removeSelectPart(selectModel, selectModel[partIndex]);\n  return model.target;\n}\n\nexport function changeSelectPart(\n  query: RUMQuery,\n  listIndex: number,\n  partIndex: number,\n  newParams: string[]\n): RUMQuery {\n  // we need to make shallow copy of `query.select` down to `query.select[listIndex][partIndex]`\n  const newSel = [...(query.select ?? [])];\n  newSel[listIndex] = [...newSel[listIndex]];\n  newSel[listIndex][partIndex] = {\n    ...newSel[listIndex][partIndex],\n    params: newParams,\n  };\n  return { ...query, select: newSel };\n}\n\nexport function addNewGroupByPart(query: RUMQuery, type: string): RUMQuery {\n  const queryCopy = cloneDeep(query); // the query-model mutates the query\n  const model = new RUMQueryModel(queryCopy);\n  model.addGroupBy(type);\n  return model.target;\n}\n\nexport function removeGroupByPart(query: RUMQuery, partIndex: number): RUMQuery {\n  const queryCopy = cloneDeep(query); // the query-model mutates the query\n  const model = new RUMQueryModel(queryCopy);\n  model.removeGroupByPart(model.groupByParts[partIndex], partIndex);\n  return model.target;\n}\n\nexport function changeGroupByPart(query: RUMQuery, partIndex: number, newParams: string[]): RUMQuery {\n  // we need to make shallow copy of `query.groupBy` down to `query.groupBy[partIndex]`\n  const newGroupBy = [...(query.groupBy ?? [])];\n  newGroupBy[partIndex] = {\n    ...newGroupBy[partIndex],\n    params: newParams,\n  };\n  return { ...query, groupBy: newGroupBy };\n}\n","import React, { PureComponent } from 'react';\nimport { DataSourceApi, QueryEditorProps } from '@grafana/data';\nimport { TCMonitorDatasourceQueryCtrl } from './query-ctrl/query.ctrl';\nimport { QueryCtrlRender } from './query-ctrl/QueryCtrlRender';\nimport { MyDataSourceOptions, QueryInfo, ServiceType, ServiceTypeOptions } from './types';\nimport { Alert, Tab, TabContent, TabsBar } from '@grafana/ui';\nimport { LogServiceQueryEditor } from './log-service/LogServiceQueryEditor';\nimport { RUMServiceQueryEditor } from './rum-service/RUMServiceQueryEditor';\nimport { DataSource } from './DataSource';\nimport { setLanguage, Language } from '../locale';\nimport { CoreApp } from './common/constants';\n\ntype Props = QueryEditorProps<DataSource, QueryInfo, MyDataSourceOptions>;\nexport class QueryEditor extends PureComponent<Props> {\n  state = {\n    isAlertVisiable: false,\n  };\n\n  constructor(props) {\n    super(props);\n    setLanguage(props.datasource.instanceSettings.jsonData.language || Language.Chinese);\n  }\n\n  componentDidMount() {\n    const { query } = this.props;\n    // @ts-ignore\n    const app = this.props.app as CoreApp;\n    if (app === CoreApp.UnifiedAlerting) {\n      //  告警页面\n      this.partialOnChange({ serviceType: ServiceType.logService });\n      return;\n    }\n    const firstEnabledService = this.enabledServices[0];\n    if (!query.serviceType && firstEnabledService) {\n      this.partialOnChange({ serviceType: firstEnabledService });\n    }\n  }\n\n  partialOnChange = (queryInfo: Partial<QueryInfo>) => {\n    const { onChange, query: oldQuery } = this.props;\n    // @ts-ignore\n    const app = this.props.app as CoreApp;\n    const newQuery = { ...oldQuery, ...queryInfo } as unknown as QueryInfo;\n    if (app === CoreApp.UnifiedAlerting) {\n      //  告警页面\n      if (newQuery.serviceType === ServiceType.logService) {\n        onChange(newQuery);\n        this.setState({\n          isAlertVisiable: false,\n        });\n      } else {\n        this.setState({\n          isAlertVisiable: true,\n        });\n      }\n    } else {\n      onChange(newQuery);\n    }\n  };\n\n  get enabledServices() {\n    const { datasource } = this.props;\n    const monitorEnabled = datasource?.monitorDataSource.getNamespaces().length > 0;\n    const logServiceEnabled = Boolean(datasource?.instanceSettings.jsonData['logServiceEnabled']);\n    const RUMServiceEnabled = Boolean(datasource?.instanceSettings.jsonData['RUMServiceEnabled']);\n    return [\n      monitorEnabled && ServiceType.monitor,\n      logServiceEnabled && ServiceType.logService,\n      RUMServiceEnabled && ServiceType.RUMService,\n    ].filter(Boolean);\n  }\n\n  render() {\n    const { datasource, query: queryInfo } = this.props;\n    const { isAlertVisiable } = this.state;\n    if (!datasource) {\n      return <div>loading</div>;\n    }\n    return (\n      <div>\n        {this.enabledServices.length > 1 && (\n          <TabsBar>\n            {ServiceTypeOptions.filter((item) => this.enabledServices.includes(item.value)).map((item) => (\n              <Tab\n                key={item.value}\n                label={item.label}\n                active={queryInfo.serviceType === item.value}\n                onChangeTab={() => {\n                  this.partialOnChange({ serviceType: item.value });\n                }}\n              />\n            ))}\n          </TabsBar>\n        )}\n        <TabContent>\n          {queryInfo.serviceType === ServiceType.monitor && this.renderMonitorQueryEditor()}\n          {queryInfo.serviceType === ServiceType.logService && this.renderLogServiceQueryEditor()}\n          {queryInfo.serviceType === ServiceType.RUMService && this.renderRUMServiceQueryEditor()}\n        </TabContent>\n        {isAlertVisiable && <Alert title=\"目前仅 CLS日志服务 数据源支持告警\" />}\n      </div>\n    );\n  }\n\n  renderMonitorQueryEditor() {\n    const monitorDataSource: DataSourceApi = (this.props.datasource as any).monitorDataSource;\n    return (\n      monitorDataSource && (\n        <QueryCtrlRender {...this.props} queryCtrl={TCMonitorDatasourceQueryCtrl} datasource={monitorDataSource} />\n      )\n    );\n  }\n\n  renderLogServiceQueryEditor() {\n    return <LogServiceQueryEditor {...this.props} />;\n  }\n\n  renderRUMServiceQueryEditor() {\n    const { query, onChange, onRunQuery, datasource } = this.props;\n    return (\n      <RUMServiceQueryEditor query={query} onChange={onChange} onRunQuery={onRunQuery} datasource={datasource as any} />\n    );\n  }\n}\n","import { InlineField, InlineFieldRow, Input, RadioButtonGroup } from '@grafana/ui';\nimport React, { useCallback } from 'react';\nimport { defaultQueryInfo, ServiceType, ServiceTypeOptions, VariableQuery } from './types';\nimport { DataSource } from './DataSource';\nimport { LogServiceQueryEditor } from './log-service/LogServiceQueryEditor';\nimport { useLatest } from 'react-use';\nimport { clone, isString } from 'lodash';\n\ninterface VariableQueryProps {\n  query: VariableQuery;\n  onChange: (v: VariableQuery, definition: string) => void;\n  datasource: DataSource;\n}\n\nconst InfoPopver: React.FC<any> = () => {\n  return (\n    <a target=\"_blank\" href=\"https://cloud.tencent.com/document/product/248/54510\">\n      Click here for more information of query\n    </a>\n  );\n};\nexport const VariableQueryEditor: React.FC<VariableQueryProps> = (props) => {\n  const propsRef = useLatest(props);\n  const { query, datasource } = props;\n\n  const onQueryChange = useCallback(\n    (newQuery: VariableQuery) => {\n      const { onChange } = propsRef.current;\n      let definition;\n      if (newQuery.serviceType === ServiceType.logService) {\n        definition = `SQL:  ${newQuery.logServiceParams?.Query}`;\n      } else {\n        definition = newQuery.queryString;\n      }\n      onChange?.(newQuery, definition);\n    },\n    [propsRef]\n  );\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField label=\"服务类型\" labelWidth={20}>\n          <RadioButtonGroup\n            options={ServiceTypeOptions}\n            value={isString(query) ? ServiceType.monitor : query.serviceType}\n            onChange={(type) => {\n              if (type === ServiceType.monitor) {\n                onQueryChange({\n                  serviceType: type,\n                  queryString: '',\n                });\n              }\n              if (type === ServiceType.logService){\n                onQueryChange({\n                  serviceType: type,\n                  queryString: '',\n                  logServiceParams: clone(defaultQueryInfo.logServiceParams),\n                });\n              }\n              if (type === ServiceType.RUMService) {\n                onQueryChange({\n                  serviceType: type,\n                  queryString: '',\n                });\n              }\n            }}\n          />\n        </InlineField>\n      </InlineFieldRow>\n      {query.serviceType === ServiceType.logService && (\n        <>\n          {/* 复用编辑模式的日志主题输入组件 */}\n          <LogServiceQueryEditor\n            datasource={datasource}\n            query={query as unknown as any}\n            onRunQuery={() => {}}\n            onChange={(v) => {\n              onQueryChange({\n                serviceType: ServiceType.logService,\n                queryString: '',\n                logServiceParams: v.logServiceParams,\n              });\n            }}\n          />\n        </>\n      )}\n      {query.serviceType === ServiceType.RUMService && (\n        <InlineFieldRow>\n          <InlineField label=\"查询语句\" labelWidth={20} grow tooltip={InfoPopver}>\n            <Input\n              name=\"query\"\n              required\n              placeholder=\"metric name or tags query\"\n              onChange={(e) => onQueryChange({\n                serviceType: ServiceType.RUMService,\n                queryString: e.currentTarget.value\n              })}\n              value={isString(query) ? query : query.queryString}\n            />\n          </InlineField>\n        </InlineFieldRow>\n      )}\n      {(isString(query) || query.serviceType === ServiceType.monitor) && (\n        <InlineFieldRow>\n          <InlineField label=\"查询语句\" labelWidth={20} grow tooltip={InfoPopver}>\n            <Input\n              name=\"query\"\n              required\n              onChange={(e) => onQueryChange({\n                serviceType: ServiceType.monitor,\n                queryString: e.currentTarget.value\n              })}\n              value={isString(query) ? query : query.queryString}\n            />\n          </InlineField>\n        </InlineFieldRow>\n      )}\n    </>\n  );\n};\nVariableQueryEditor.displayName = 'VariableQueryEditor';\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isFunction(x) {\n    return typeof x === 'function';\n}\n//# sourceMappingURL=isFunction.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar _enable_super_gross_mode_that_will_cause_bad_things = false;\nexport var config = {\n    Promise: undefined,\n    set useDeprecatedSynchronousErrorHandling(value) {\n        if (value) {\n            var error = /*@__PURE__*/ new Error();\n            /*@__PURE__*/ console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n        }\n        else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n            /*@__PURE__*/ console.log('RxJS: Back to a better error behavior. Thank you. <3');\n        }\n        _enable_super_gross_mode_that_will_cause_bad_things = value;\n    },\n    get useDeprecatedSynchronousErrorHandling() {\n        return _enable_super_gross_mode_that_will_cause_bad_things;\n    },\n};\n//# sourceMappingURL=config.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function hostReportError(err) {\n    setTimeout(function () { throw err; }, 0);\n}\n//# sourceMappingURL=hostReportError.js.map\n","/** PURE_IMPORTS_START _config,_util_hostReportError PURE_IMPORTS_END */\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nexport var empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) {\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            throw err;\n        }\n        else {\n            hostReportError(err);\n        }\n    },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var isArray = /*@__PURE__*/ (function () { return Array.isArray || (function (x) { return x && typeof x.length === 'number'; }); })();\n//# sourceMappingURL=isArray.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isObject(x) {\n    return x !== null && typeof x === 'object';\n}\n//# sourceMappingURL=isObject.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar UnsubscriptionErrorImpl = /*@__PURE__*/ (function () {\n    function UnsubscriptionErrorImpl(errors) {\n        Error.call(this);\n        this.message = errors ?\n            errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ') : '';\n        this.name = 'UnsubscriptionError';\n        this.errors = errors;\n        return this;\n    }\n    UnsubscriptionErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\n    return UnsubscriptionErrorImpl;\n})();\nexport var UnsubscriptionError = UnsubscriptionErrorImpl;\n//# sourceMappingURL=UnsubscriptionError.js.map\n","/** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_UnsubscriptionError PURE_IMPORTS_END */\nimport { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nvar Subscription = /*@__PURE__*/ (function () {\n    function Subscription(unsubscribe) {\n        this.closed = false;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._ctorUnsubscribe = true;\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    Subscription.prototype.unsubscribe = function () {\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parentOrParents = _a._parentOrParents, _ctorUnsubscribe = _a._ctorUnsubscribe, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (_parentOrParents instanceof Subscription) {\n            _parentOrParents.remove(this);\n        }\n        else if (_parentOrParents !== null) {\n            for (var index = 0; index < _parentOrParents.length; ++index) {\n                var parent_1 = _parentOrParents[index];\n                parent_1.remove(this);\n            }\n        }\n        if (isFunction(_unsubscribe)) {\n            if (_ctorUnsubscribe) {\n                this._unsubscribe = undefined;\n            }\n            try {\n                _unsubscribe.call(this);\n            }\n            catch (e) {\n                errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n            }\n        }\n        if (isArray(_subscriptions)) {\n            var index = -1;\n            var len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject(sub)) {\n                    try {\n                        sub.unsubscribe();\n                    }\n                    catch (e) {\n                        errors = errors || [];\n                        if (e instanceof UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n                        }\n                        else {\n                            errors.push(e);\n                        }\n                    }\n                }\n            }\n        }\n        if (errors) {\n            throw new UnsubscriptionError(errors);\n        }\n    };\n    Subscription.prototype.add = function (teardown) {\n        var subscription = teardown;\n        if (!teardown) {\n            return Subscription.EMPTY;\n        }\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (!(subscription instanceof Subscription)) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default: {\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n            }\n        }\n        var _parentOrParents = subscription._parentOrParents;\n        if (_parentOrParents === null) {\n            subscription._parentOrParents = this;\n        }\n        else if (_parentOrParents instanceof Subscription) {\n            if (_parentOrParents === this) {\n                return subscription;\n            }\n            subscription._parentOrParents = [_parentOrParents, this];\n        }\n        else if (_parentOrParents.indexOf(this) === -1) {\n            _parentOrParents.push(this);\n        }\n        else {\n            return subscription;\n        }\n        var subscriptions = this._subscriptions;\n        if (subscriptions === null) {\n            this._subscriptions = [subscription];\n        }\n        else {\n            subscriptions.push(subscription);\n        }\n        return subscription;\n    };\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexport { Subscription };\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var rxSubscriber = /*@__PURE__*/ (function () {\n    return typeof Symbol === 'function'\n        ? /*@__PURE__*/ Symbol('rxSubscriber')\n        : '@@rxSubscriber_' + /*@__PURE__*/ Math.random();\n})();\nexport var $$rxSubscriber = rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map\n","/** PURE_IMPORTS_START tslib,_util_isFunction,_Observer,_Subscription,_internal_symbol_rxSubscriber,_config,_util_hostReportError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nvar Subscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Subscriber, _super);\n    function Subscriber(destinationOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this.syncErrorValue = null;\n        _this.syncErrorThrown = false;\n        _this.syncErrorThrowable = false;\n        _this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                _this.destination = emptyObserver;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    _this.destination = emptyObserver;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n                        _this.destination = destinationOrNext;\n                        destinationOrNext.add(_this);\n                    }\n                    else {\n                        _this.syncErrorThrowable = true;\n                        _this.destination = new SafeSubscriber(_this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                _this.syncErrorThrowable = true;\n                _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);\n                break;\n        }\n        return _this;\n    }\n    Subscriber.prototype[rxSubscriberSymbol] = function () { return this; };\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _parentOrParents = this._parentOrParents;\n        this._parentOrParents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parentOrParents = _parentOrParents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription));\nexport { Subscriber };\nvar SafeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = _this;\n        if (isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== emptyObserver) {\n                context = Object.create(observerOrNext);\n                if (isFunction(context.unsubscribe)) {\n                    _this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = _this.unsubscribe.bind(_this);\n            }\n        }\n        _this._context = context;\n        _this._next = next;\n        _this._error = error;\n        _this._complete = complete;\n        return _this;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            var useDeprecatedSynchronousErrorHandling = config.useDeprecatedSynchronousErrorHandling;\n            if (this._error) {\n                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                if (useDeprecatedSynchronousErrorHandling) {\n                    throw err;\n                }\n                hostReportError(err);\n            }\n            else {\n                if (useDeprecatedSynchronousErrorHandling) {\n                    _parentSubscriber.syncErrorValue = err;\n                    _parentSubscriber.syncErrorThrown = true;\n                }\n                else {\n                    hostReportError(err);\n                }\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                throw err;\n            }\n            else {\n                hostReportError(err);\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        if (!config.useDeprecatedSynchronousErrorHandling) {\n            throw new Error('bad call');\n        }\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                parent.syncErrorValue = err;\n                parent.syncErrorThrown = true;\n                return true;\n            }\n            else {\n                hostReportError(err);\n                return true;\n            }\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\nexport { SafeSubscriber };\n//# sourceMappingURL=Subscriber.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nvar MapOperator = /*@__PURE__*/ (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nexport { MapOperator };\nvar MapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.count = 0;\n        _this.thisArg = thisArg || _this;\n        return _this;\n    }\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber));\n//# sourceMappingURL=map.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var observable = /*@__PURE__*/ (function () { return typeof Symbol === 'function' && Symbol.observable || '@@observable'; })();\n//# sourceMappingURL=observable.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function identity(x) {\n    return x;\n}\n//# sourceMappingURL=identity.js.map\n","/** PURE_IMPORTS_START _identity PURE_IMPORTS_END */\nimport { identity } from './identity';\nexport function pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nexport function pipeFromArray(fns) {\n    if (fns.length === 0) {\n        return identity;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\n//# sourceMappingURL=pipe.js.map\n","/** PURE_IMPORTS_START _util_canReportError,_util_toSubscriber,_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nvar Observable = /*@__PURE__*/ (function () {\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            sink.add(operator.call(sink, this.source));\n        }\n        else {\n            sink.add(this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n                this._subscribe(sink) :\n                this._trySubscribe(sink));\n        }\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            if (sink.syncErrorThrowable) {\n                sink.syncErrorThrowable = false;\n                if (sink.syncErrorThrown) {\n                    throw sink.syncErrorValue;\n                }\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                sink.syncErrorThrown = true;\n                sink.syncErrorValue = err;\n            }\n            if (canReportError(sink)) {\n                sink.error(err);\n            }\n            else {\n                console.warn(err);\n            }\n        }\n    };\n    Observable.prototype.forEach = function (next, promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                try {\n                    next(value);\n                }\n                catch (err) {\n                    reject(err);\n                    if (subscription) {\n                        subscription.unsubscribe();\n                    }\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        return source && source.subscribe(subscriber);\n    };\n    Observable.prototype[Symbol_observable] = function () {\n        return this;\n    };\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipeFromArray(operations)(this);\n    };\n    Observable.prototype.toPromise = function (promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexport { Observable };\nfunction getPromiseCtor(promiseCtor) {\n    if (!promiseCtor) {\n        promiseCtor = config.Promise || Promise;\n    }\n    if (!promiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return promiseCtor;\n}\n//# sourceMappingURL=Observable.js.map\n","/** PURE_IMPORTS_START _Subscriber,_symbol_rxSubscriber,_Observer PURE_IMPORTS_END */\nimport { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nexport function toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriberSymbol]) {\n            return nextOrObserver[rxSubscriberSymbol]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber(emptyObserver);\n    }\n    return new Subscriber(nextOrObserver, error, complete);\n}\n//# sourceMappingURL=toSubscriber.js.map\n","/** PURE_IMPORTS_START _Subscriber PURE_IMPORTS_END */\nimport { Subscriber } from '../Subscriber';\nexport function canReportError(observer) {\n    while (observer) {\n        var _a = observer, closed_1 = _a.closed, destination = _a.destination, isStopped = _a.isStopped;\n        if (closed_1 || isStopped) {\n            return false;\n        }\n        else if (destination && destination instanceof Subscriber) {\n            observer = destination;\n        }\n        else {\n            observer = null;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=canReportError.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar ObjectUnsubscribedErrorImpl = /*@__PURE__*/ (function () {\n    function ObjectUnsubscribedErrorImpl() {\n        Error.call(this);\n        this.message = 'object unsubscribed';\n        this.name = 'ObjectUnsubscribedError';\n        return this;\n    }\n    ObjectUnsubscribedErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\n    return ObjectUnsubscribedErrorImpl;\n})();\nexport var ObjectUnsubscribedError = ObjectUnsubscribedErrorImpl;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map\n","/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from './Subscription';\nvar SubjectSubscription = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        var _this = _super.call(this) || this;\n        _this.subject = subject;\n        _this.subscriber = subscriber;\n        _this.closed = false;\n        return _this;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription));\nexport { SubjectSubscription };\n//# sourceMappingURL=SubjectSubscription.js.map\n","/** PURE_IMPORTS_START tslib,_Observable,_Subscriber,_Subscription,_util_ObjectUnsubscribedError,_SubjectSubscription,_internal_symbol_rxSubscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nvar SubjectSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        return _this;\n    }\n    return SubjectSubscriber;\n}(Subscriber));\nexport { SubjectSubscriber };\nvar Subject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Subject, _super);\n    function Subject() {\n        var _this = _super.call(this) || this;\n        _this.observers = [];\n        _this.closed = false;\n        _this.isStopped = false;\n        _this.hasError = false;\n        _this.thrownError = null;\n        return _this;\n    }\n    Subject.prototype[rxSubscriberSymbol] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable));\nexport { Subject };\nvar AnonymousSubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        var _this = _super.call(this) || this;\n        _this.destination = destination;\n        _this.source = source;\n        return _this;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexport { AnonymousSubject };\n//# sourceMappingURL=Subject.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function refCount() {\n    return function refCountOperatorFunction(source) {\n        return source.lift(new RefCountOperator(source));\n    };\n}\nvar RefCountOperator = /*@__PURE__*/ (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        var _this = _super.call(this, destination) || this;\n        _this.connectable = connectable;\n        return _this;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=refCount.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_Observable,_Subscriber,_Subscription,_operators_refCount PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { SubjectSubscriber } from '../Subject';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\nvar ConnectableObservable = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ConnectableObservable, _super);\n    function ConnectableObservable(source, subjectFactory) {\n        var _this = _super.call(this) || this;\n        _this.source = source;\n        _this.subjectFactory = subjectFactory;\n        _this._refCount = 0;\n        _this._isComplete = false;\n        return _this;\n    }\n    ConnectableObservable.prototype._subscribe = function (subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    };\n    ConnectableObservable.prototype.getSubject = function () {\n        var subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    };\n    ConnectableObservable.prototype.connect = function () {\n        var connection = this._connection;\n        if (!connection) {\n            this._isComplete = false;\n            connection = this._connection = new Subscription();\n            connection.add(this.source\n                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription.EMPTY;\n            }\n        }\n        return connection;\n    };\n    ConnectableObservable.prototype.refCount = function () {\n        return higherOrderRefCount()(this);\n    };\n    return ConnectableObservable;\n}(Observable));\nexport { ConnectableObservable };\nexport var connectableObservableDescriptor = /*@__PURE__*/ (function () {\n    var connectableProto = ConnectableObservable.prototype;\n    return {\n        operator: { value: null },\n        _refCount: { value: 0, writable: true },\n        _subject: { value: null, writable: true },\n        _connection: { value: null, writable: true },\n        _subscribe: { value: connectableProto._subscribe },\n        _isComplete: { value: connectableProto._isComplete, writable: true },\n        getSubject: { value: connectableProto.getSubject },\n        connect: { value: connectableProto.connect },\n        refCount: { value: connectableProto.refCount }\n    };\n})();\nvar ConnectableSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ConnectableSubscriber, _super);\n    function ConnectableSubscriber(destination, connectable) {\n        var _this = _super.call(this, destination) || this;\n        _this.connectable = connectable;\n        return _this;\n    }\n    ConnectableSubscriber.prototype._error = function (err) {\n        this._unsubscribe();\n        _super.prototype._error.call(this, err);\n    };\n    ConnectableSubscriber.prototype._complete = function () {\n        this.connectable._isComplete = true;\n        this._unsubscribe();\n        _super.prototype._complete.call(this);\n    };\n    ConnectableSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (connectable) {\n            this.connectable = null;\n            var connection = connectable._connection;\n            connectable._refCount = 0;\n            connectable._subject = null;\n            connectable._connection = null;\n            if (connection) {\n                connection.unsubscribe();\n            }\n        }\n    };\n    return ConnectableSubscriber;\n}(SubjectSubscriber));\nvar RefCountOperator = /*@__PURE__*/ (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        var _this = _super.call(this, destination) || this;\n        _this.connectable = connectable;\n        return _this;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=ConnectableObservable.js.map\n","/** PURE_IMPORTS_START _observable_ConnectableObservable PURE_IMPORTS_END */\nimport { connectableObservableDescriptor } from '../observable/ConnectableObservable';\nexport function multicast(subjectOrSubjectFactory, selector) {\n    return function multicastOperatorFunction(source) {\n        var subjectFactory;\n        if (typeof subjectOrSubjectFactory === 'function') {\n            subjectFactory = subjectOrSubjectFactory;\n        }\n        else {\n            subjectFactory = function subjectFactory() {\n                return subjectOrSubjectFactory;\n            };\n        }\n        if (typeof selector === 'function') {\n            return source.lift(new MulticastOperator(subjectFactory, selector));\n        }\n        var connectable = Object.create(source, connectableObservableDescriptor);\n        connectable.source = source;\n        connectable.subjectFactory = subjectFactory;\n        return connectable;\n    };\n}\nvar MulticastOperator = /*@__PURE__*/ (function () {\n    function MulticastOperator(subjectFactory, selector) {\n        this.subjectFactory = subjectFactory;\n        this.selector = selector;\n    }\n    MulticastOperator.prototype.call = function (subscriber, source) {\n        var selector = this.selector;\n        var subject = this.subjectFactory();\n        var subscription = selector(subject).subscribe(subscriber);\n        subscription.add(source.subscribe(subject));\n        return subscription;\n    };\n    return MulticastOperator;\n}());\nexport { MulticastOperator };\n//# sourceMappingURL=multicast.js.map\n","/** PURE_IMPORTS_START _multicast,_refCount,_Subject PURE_IMPORTS_END */\nimport { multicast } from './multicast';\nimport { refCount } from './refCount';\nimport { Subject } from '../Subject';\nfunction shareSubjectFactory() {\n    return new Subject();\n}\nexport function share() {\n    return function (source) { return refCount()(multicast(shareSubjectFactory)(source)); };\n}\n//# sourceMappingURL=share.js.map\n","import moment from 'moment';\nimport { IAnalysisColumn } from '../model/interface';\nimport { FieldType } from '@grafana/data';\n\nconst ProcessorUtils = {\n  timestampWithTimeZoneRegex: /(\\w+)\\[[\\w/]+]/g,\n};\n\n/** Presto类型与FieldType转化表\n * @doc https://iwiki.woa.com/pages/viewpage.action?pageId=905584985 */\nconst PrestoAndFieldTypeMap: Omit<IAnalysisColumn, 'Name' | 'Type'>[] = [\n  /** 时间类型分为两类，包含日期和不包含日期 */\n  {\n    prestoTypeRegex: /^timestamp with time zone$/,\n    fieldType: FieldType.time,\n    // 包含时区的时间数据，可能带有额外的zone信息，这里进行清理。eg: 2021-11-26T18:41:24+08:00[Asia/Shanghai]\n    processor: (value: string) => {\n      const newValue = String(value).replace(ProcessorUtils.timestampWithTimeZoneRegex, '$1');\n      if (moment(newValue).isValid()) {\n        return newValue;\n      }\n      return value;\n    },\n  },\n  {\n    prestoTypeRegex: /^timestamp$|^date$|^datetime$/,\n    fieldType: FieldType.time,\n    // processor: moment,\n  },\n  {\n    prestoTypeRegex: /^time$/,\n    fieldType: FieldType.time,\n    // processor: null,\n  },\n  /** 数字类型。整数、浮点数、定点数 */\n  {\n    prestoTypeRegex: /^tinyint$|^samllint$|^integer$|^bigint$|^long$/,\n    fieldType: FieldType.number,\n    // processor: Number,\n  },\n  {\n    prestoTypeRegex: /^real$|^double$|^decimal$/,\n    fieldType: FieldType.number,\n    // processor: Number,\n  },\n  /** 字符串。字符串和单字符 */\n  {\n    prestoTypeRegex: /^varchar$|^char$|^text$|^keyword$/,\n    fieldType: FieldType.string,\n    // processor: String,\n  },\n  {\n    prestoTypeRegex: /^boolean$/,\n    fieldType: FieldType.boolean,\n    // processor: Boolean,\n  },\n\n  /** 未定情况，做简单降级方案 */\n  {\n    prestoTypeRegex: /^uuid$/,\n    fieldType: FieldType.string,\n    // processor: String,\n  },\n  {\n    prestoTypeRegex: /^ipaddress$/,\n    fieldType: FieldType.string,\n    // processor: String,\n  },\n  {\n    prestoTypeRegex: /^array\\(.*\\)$/,\n    fieldType: FieldType.other,\n    // processor: Array.from,\n  },\n  {\n    prestoTypeRegex: /^json$/,\n    fieldType: FieldType.other,\n    // processor: JSON.parse,\n  },\n  {\n    prestoTypeRegex: /^map\\(.*\\)$/, // /^map\\([\\w\\s,]+,[\\w\\s,]+\\)$/,\n    fieldType: FieldType.other,\n    // processor: (i) => i,\n  },\n  {\n    prestoTypeRegex: /^varbinary$/,\n    fieldType: FieldType.other,\n    // processor: Array.from,\n  },\n  {\n    prestoTypeRegex: /^interval$/,\n    fieldType: FieldType.other,\n    // processor: String,\n  },\n  {\n    prestoTypeRegex: /^row$/,\n    fieldType: FieldType.other,\n    // processor: String,\n  },\n];\n\nexport function getFieldTypeByPrestoType(prestoType: string): Omit<IAnalysisColumn, 'Name' | 'Type'> {\n  return (\n    PrestoAndFieldTypeMap.find((item) => item.prestoTypeRegex.test(prestoType)) || {\n      prestoTypeRegex: /.*/,\n      fieldType: FieldType.other,\n    }\n  );\n}\n","import { ISearchLogResult, ITopicInfo } from '../model';\nimport { DataFrame, DataFrameDTO, FieldDTO, FieldType, toDataFrame } from '@grafana/data';\nimport _ from 'lodash';\nimport { parseLogJsonStr } from './formatSearchLog';\n\n/** 将SearchResults结果，处理为DataFrame */\nexport function ConvertSearchResultsToDataFrame(\n  searchLogResult: ISearchLogResult,\n  topic: Partial<ITopicInfo>\n): DataFrame {\n  const frameDTO = searchLogResult.Analysis\n    ? ConvertAnalysisJsonToDataFrameDTO(searchLogResult)\n    : ConvertLogJsonToDataFrameDTO(searchLogResult, topic);\n  return toDataFrame(frameDTO);\n}\n\nfunction ConvertAnalysisJsonToDataFrameDTO(searchLogResult: ISearchLogResult): DataFrameDTO {\n  const { analysisRecords = [], analysisColumns = [] } = searchLogResult ?? {};\n\n  const fields: FieldDTO[] = analysisColumns.map((column) => {\n    const values = analysisRecords.map((r) => r?.[column.Name!]);\n    return {\n      name: column.Name,\n      type: column.fieldType as any,\n      values,\n    };\n  });\n  return {\n    name: '',\n    fields,\n  };\n}\n\nexport const enum LogFieldReservedName {\n  TIMESTAMP = '__TIMESTAMP__',\n  LogJson = '__LogJson__',\n  SOURCE = '__SOURCE__',\n  Filename = '__FILENAME__',\n  HostName = '__HOSTNAME__',\n  META = '__META__',\n}\n\nfunction ConvertLogJsonToDataFrameDTO(searchLogResult: ISearchLogResult, topic: Partial<ITopicInfo>): DataFrameDTO {\n  const { Results = [] } = searchLogResult;\n  // Log场景的处理方式，参考文档\n  // Grafana logSeriesToLogsModel方法（https://github.com/grafana/grafana/blob/faca526c169a9a61f119b6fc2819f5a8dfff7ed7/public/app/core/logs_model.ts#L315）\n  // Grafana testData数据源 runLogsStream方法（https://github.com/grafana/grafana/blob/faca526c169a9a61f119b6fc2819f5a8dfff7ed7/public/app/plugins/datasource/testdata/runStreams.ts#L131）\n\n  const timeField: FieldDTO<number> = {\n    name: LogFieldReservedName.TIMESTAMP,\n    type: FieldType.time,\n    values: [],\n  };\n  const logField: FieldDTO<string> = {\n    name: LogFieldReservedName.LogJson,\n    // 这里使用字符串类型，标识此内容为 核心日志内容\n    type: FieldType.string,\n    config: {\n      custom: { displayMode: 'json-view' },\n    },\n    values: [],\n  };\n  const sourceField: FieldDTO<string> = {\n    name: LogFieldReservedName.SOURCE,\n    type: FieldType.string,\n    values: [],\n  };\n  const filenameField: FieldDTO<string> = {\n    name: LogFieldReservedName.Filename,\n    type: FieldType.string,\n    values: [],\n  };\n  const hostnameField: FieldDTO<string> = {\n    name: LogFieldReservedName.HostName,\n    type: FieldType.string,\n    values: [],\n  };\n  const metaField: FieldDTO<any> = {\n    // 用于支持 Explore 功能上下文能力\n    name: LogFieldReservedName.META,\n    type: FieldType.other,\n    config: {\n      custom: {\n        hidden: true,\n      },\n    },\n    labels: { region: topic.region, TopicId: topic.TopicId },\n    values: [],\n  };\n\n  Results.forEach((logItem) => {\n    (timeField.values as number[]).push(logItem['Time']);\n    (sourceField.values as string[]).push(logItem['Source']);\n    (filenameField.values as string[]).push(logItem['FileName']);\n    (hostnameField.values as string[]).push(logItem['HostName']);\n    (metaField.values as any[]).push(JSON.stringify(_.pick(logItem, ['PkgId', 'PkgLogId'])));\n    try {\n      const logJson = parseLogJsonStr(logItem.LogJson);\n\n      /** 使用 LogsParsers.JSON 进行自动解析\n       * 展示问题优化跟踪：https://github.com/grafana/grafana/issues/54959\n       */\n      // 这里的值可以是 string | object, Grafana内部自动进行序列化处理。\n      (logField.values as string[]).push(JSON.stringify(logJson));\n\n      /** 使用 LogsParsers.logfmt 进行自动解析，缩略展示上更友好，但是LogDetail提取会有问题 */\n      // let logStr = '';\n      // Object.entries(logJson).forEach(([k, v])=>{\n      //   logStr += `${k}=${_.isObject(v) ? JSON.stringify(v) : `${v}` } `\n      // });\n      // (logField.values as string[]).push(logStr);\n    } catch (e) {}\n  });\n\n  const frameDTO: DataFrameDTO = {\n    name: '',\n    meta: {\n      preferredVisualisationType: 'logs',\n      custom: {\n        RequestId: (searchLogResult as any).RequestId,\n        SamplingRate: searchLogResult.SamplingRate,\n      },\n      executedQueryString: searchLogResult.Query,\n    },\n    fields: [timeField, logField, sourceField, filenameField, hostnameField, metaField],\n  };\n  return frameDTO;\n}\n","import { IAnalysisColumn, ISearchLogResult, TYPES } from '../model';\n\nimport { getFieldTypeByPrestoType } from './prestoType';\n\nexport function formatSearchLog(param: TYPES.SearchLogResult): ISearchLogResult {\n  const { Analysis, AnalysisRecords = [], Columns = [] } = param;\n  const analysisColumns: IAnalysisColumn[] = [];\n  const analysisRecords: Object[] = [];\n  if (Analysis) {\n    Columns.forEach((column) => {\n      const analysisColumn = getFieldTypeByPrestoType(column.Type);\n      analysisColumns.push({\n        ...column,\n        ...analysisColumn,\n      });\n    });\n    AnalysisRecords.forEach((record) => {\n      try {\n        analysisRecords.push(JSON.parse(record));\n      } catch (e) {\n        analysisRecords.push({});\n      }\n    });\n\n    for (const column of analysisColumns) {\n      if (column.processor) {\n        analysisRecords.forEach((record) => {\n          // eslint-disable-next-line no-param-reassign\n          record[column.Name] = column.processor(record[column.Name]);\n        });\n      }\n    }\n  }\n  return {\n    ...param,\n    analysisRecords,\n    analysisColumns,\n  };\n}\n\n/** 解析stringify的日志，并处理 __TAG__字段 */\nexport function parseLogJsonStr(logJsonStr: string): Record<string, any> {\n  try {\n    const logJson = JSON.parse(logJsonStr);\n    const tagContent = logJson['__TAG__'];\n    delete logJson.__TAG__;\n    if (tagContent) {\n      Object.entries(tagContent).forEach(([tagKey, tagValue]) => {\n        logJson[`__TAG__.${tagKey}`] = tagValue;\n      });\n    }\n    return logJson;\n  } catch (e) {\n    console.error('parseLogJsonStr', e);\n    return {};\n  }\n}\n","/* eslint-disable eqeqeq,no-eq-null,max-depth,guard-for-in,no-fallthrough */\n// @link: https://github.com/grafana/grafana/blob/b4faee786f3c3c1e09543ef768f2e2daee429ec7/public/app/core/components/TransformersUI/prepareTimeSeries/prepareTimeSeries.ts\nimport { DataFrame, FieldType, Field, MutableDataFrame, ArrayVector } from '@grafana/data';\n\nexport enum DataFrameType {\n  TimeSeriesWide = 'timeseries-wide',\n  TimeSeriesLong = 'timeseries-long',\n  TimeSeriesMany = 'timeseries-many',\n}\n\ntype Labels = Record<string, string>;\n/**\n * There is currently an effort to figure out consistent names\n * for the various formats/types we produce and use.\n *\n * This transformer will eventually include the required metadata that can assert\n * a DataFrame[] is of a given type\n *\n * @internal -- TBD\n */\nexport enum timeSeriesFormat {\n  TimeSeriesWide = 'wide', // [time,...values]\n  TimeSeriesMany = 'many', // All frames have [time,number]\n  TimeSeriesLong = 'long',\n}\n\n/**\n * Convert to [][time,number]\n */\nexport function toTimeSeriesMany(data: DataFrame[]): DataFrame[] {\n  if (!Array.isArray(data) || data.length === 0) {\n    return data;\n  }\n\n  const result: DataFrame[] = [];\n  for (const frame of toTimeSeriesLong(data)) {\n    const timeField = frame.fields[0];\n    if (!timeField || timeField.type !== FieldType.time) {\n      continue;\n    }\n    const valueFields: Field[] = [];\n    const labelFields: Field[] = [];\n    for (const field of frame.fields) {\n      switch (field.type) {\n        case FieldType.number:\n        case FieldType.boolean:\n          valueFields.push(field);\n          break;\n        case FieldType.string:\n          labelFields.push(field);\n          break;\n      }\n    }\n\n    for (const field of valueFields) {\n      if (labelFields.length) {\n        // new frame for each label key\n        interface frameBuilder {\n          time: number[];\n          value: number[];\n          key: string;\n          labels: Labels;\n        }\n        const builders = new Map<string, frameBuilder>();\n        for (let i = 0; i < frame.length; i++) {\n          const time = timeField.values.get(i);\n          const value = field.values.get(i);\n          if (value === undefined || time == null) {\n            continue; // skip values left over from join\n          }\n\n          const key = labelFields.map((f) => f.values.get(i)).join('/');\n          let builder = builders.get(key);\n          if (!builder) {\n            builder = {\n              key,\n              time: [],\n              value: [],\n              labels: {},\n            };\n            for (const label of labelFields) {\n              builder.labels[label.name] = label.values.get(i);\n            }\n            builders.set(key, builder);\n          }\n          builder.time.push(time);\n          builder.value.push(value);\n        }\n\n        // Add a frame for each distinct value\n        builders.forEach((b) => {\n          result.push({\n            name: frame.name,\n            refId: frame.refId,\n            meta: {\n              ...frame.meta,\n              type: DataFrameType.TimeSeriesMany,\n            } as any,\n            fields: [\n              {\n                ...timeField,\n                values: new ArrayVector(b.time),\n              },\n              {\n                ...field,\n                values: new ArrayVector(b.value),\n                labels: b.labels,\n              },\n            ],\n            length: b.time.length,\n          });\n        });\n      } else {\n        result.push({\n          name: frame.name,\n          refId: frame.refId,\n          meta: {\n            ...frame.meta,\n            type: DataFrameType.TimeSeriesMany,\n          } as any,\n          fields: [timeField, field],\n          length: frame.length,\n        });\n      }\n    }\n  }\n  return result;\n}\n\nfunction toTimeSeriesLong(data: DataFrame[]): DataFrame[] {\n  if (!Array.isArray(data) || data.length === 0) {\n    return data;\n  }\n\n  const result: DataFrame[] = [];\n  for (const frame of data) {\n    let timeField: Field | undefined;\n    const uniqueValueNames: string[] = [];\n    const uniqueValueNamesToType: Record<string, FieldType> = {};\n    const uniqueLabelKeys: Record<string, boolean> = {};\n    const labelKeyToWideIndices: Record<string, number[]> = {};\n    const uniqueFactorNamesToWideIndex: Record<string, number> = {};\n\n    for (let fieldIndex = 0; fieldIndex < frame.fields.length; fieldIndex++) {\n      const field = frame.fields[fieldIndex];\n\n      switch (field.type) {\n        case FieldType.string:\n        case FieldType.boolean:\n          if (field.name in uniqueFactorNamesToWideIndex) {\n            // TODO error?\n          } else {\n            uniqueFactorNamesToWideIndex[field.name] = fieldIndex;\n            uniqueLabelKeys[field.name] = true;\n          }\n          break;\n        case FieldType.time:\n          if (!timeField) {\n            timeField = field;\n            break;\n          }\n        default: {\n          if (field.name in uniqueValueNamesToType) {\n            const type = uniqueValueNamesToType[field.name];\n\n            if (field.type !== type) {\n              // TODO error?\n              continue;\n            }\n          } else {\n            uniqueValueNamesToType[field.name] = field.type;\n            uniqueValueNames.push(field.name);\n          }\n\n          const tKey = JSON.stringify(field.labels);\n          const wideIndices = labelKeyToWideIndices[tKey];\n\n          if (wideIndices !== undefined) {\n            wideIndices.push(fieldIndex);\n          } else {\n            labelKeyToWideIndices[tKey] = [fieldIndex];\n          }\n\n          if (field.labels != null) {\n            for (const labelKey in field.labels) {\n              uniqueLabelKeys[labelKey] = true;\n            }\n          }\n        }\n      }\n    }\n\n    if (!timeField) {\n      continue;\n    }\n\n    interface TimeWideRowIndex {\n      time: any;\n      wideRowIndex: number;\n    }\n    const sortedTimeRowIndices: TimeWideRowIndex[] = [];\n    const sortedUniqueLabelKeys: string[] = [];\n    const uniqueFactorNames: string[] = [];\n    const uniqueFactorNamesWithWideIndices: string[] = [];\n\n    for (let wideRowIndex = 0; wideRowIndex < frame.length; wideRowIndex++) {\n      sortedTimeRowIndices.push({ time: timeField.values.get(wideRowIndex), wideRowIndex });\n    }\n\n    for (const labelKeys in labelKeyToWideIndices) {\n      sortedUniqueLabelKeys.push(labelKeys);\n    }\n    for (const labelKey in uniqueLabelKeys) {\n      uniqueFactorNames.push(labelKey);\n    }\n    for (const name in uniqueFactorNamesToWideIndex) {\n      uniqueFactorNamesWithWideIndices.push(name);\n    }\n\n    sortedTimeRowIndices.sort((a, b) => a.time - b.time);\n    sortedUniqueLabelKeys.sort();\n    uniqueFactorNames.sort();\n    uniqueValueNames.sort();\n\n    const longFrame = new MutableDataFrame({\n      ...frame,\n      meta: { ...frame.meta, type: DataFrameType.TimeSeriesLong } as any,\n      fields: [{ name: timeField.name, type: timeField.type }],\n    });\n\n    for (const name of uniqueValueNames) {\n      longFrame.addField({ name, type: uniqueValueNamesToType[name] });\n    }\n\n    for (const name of uniqueFactorNames) {\n      longFrame.addField({ name, type: FieldType.string });\n    }\n\n    for (const timeWideRowIndex of sortedTimeRowIndices) {\n      const { time, wideRowIndex } = timeWideRowIndex;\n\n      for (const labelKeys of sortedUniqueLabelKeys) {\n        const rowValues: Record<string, any> = {};\n\n        for (const name of uniqueFactorNamesWithWideIndices) {\n          rowValues[name] = frame.fields[uniqueFactorNamesToWideIndex[name]].values.get(wideRowIndex);\n        }\n\n        let index = 0;\n\n        for (const wideFieldIndex of labelKeyToWideIndices[labelKeys]) {\n          const wideField = frame.fields[wideFieldIndex];\n\n          if (index === 0 && wideField.labels != null) {\n            for (const labelKey in wideField.labels) {\n              rowValues[labelKey] = wideField.labels[labelKey];\n            }\n          }\n          index += 1;\n\n          rowValues[wideField.name] = wideField.values.get(wideRowIndex);\n        }\n\n        rowValues[timeField.name] = time;\n        longFrame.add(rowValues);\n      }\n    }\n\n    result.push(longFrame);\n  }\n\n  return result;\n}\n","import { getTemplateSrv } from '@grafana/runtime';\n\n/**\n * 检索语法切割正则\n */\nexport const CQL_SPLIT_PATTERN = /(\\s*\\|\\s*)(select\\b.*)/i;\n\n/**\n * @param queryString 用户输入的原始检索语句\n * @description 判断用户是要检索原始日志，还是图表分析\n */\nexport function isQueryContainSql(queryString: string): boolean {\n  const pattern = CQL_SPLIT_PATTERN;\n  return pattern.test(queryString);\n}\n\n/**\n * 解析query，获取前面原始数据部分\n */\nexport function getQueryLucene(queryString = ''): string {\n  const querySplit = queryString.split(CQL_SPLIT_PATTERN);\n  let luceneQuery = '';\n  if (querySplit.length === 1) {\n    // 未得到有效切分项，说明是纯 lucene 查询\n    luceneQuery = queryString;\n  } else if (querySplit.length >= 2) {\n    luceneQuery = querySplit[0];\n  } else {\n    // 逻辑死区，不可能出现\n    return '';\n  }\n  return luceneQuery;\n}\n\nexport function replaceClsQueryWithTemplateSrv(queryString: string, scopedVars: any = {}): string {\n  const luceneQuery = getQueryLucene(queryString ?? '');\n  const sqlQuery = (queryString ?? '').slice(luceneQuery.length);\n  const Query =\n    getTemplateSrv().replace(luceneQuery, scopedVars, 'lucene') + getTemplateSrv().replace(sqlQuery, scopedVars, 'raw');\n  return Query;\n}\n","import { MyDataSourceOptions, QueryInfo } from '../types';\nimport {\n  DataFrame,\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceApi,\n  DataSourceInstanceSettings,\n  FieldType,\n  LoadingState,\n  LogRowModel,\n  MetricFindValue,\n} from '@grafana/data';\nimport { Observable } from 'rxjs';\nimport { share } from 'rxjs/operators';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport { DescribeLogContext, LogInfo, SearchLog } from './common/model';\nimport {\n  ConvertLogContextToDataFrame,\n  ConvertSearchResultsToDataFrame,\n  formatSearchLog,\n  LogFieldReservedName,\n} from './common/format';\nimport { RowContextOptions } from '@grafana/ui/components/Logs/LogRowContextProvider';\nimport moment from 'moment';\nimport { toTimeSeriesMany } from './common/format/prepareTimeSeries';\nimport { replaceClsQueryWithTemplateSrv } from './common/utils/query';\n\nexport class LogServiceDataSource extends DataSourceApi<QueryInfo, MyDataSourceOptions> {\n  private readonly instanceSettings: DataSourceInstanceSettings<MyDataSourceOptions>;\n  constructor(instanceSettings: DataSourceInstanceSettings<MyDataSourceOptions>) {\n    super(instanceSettings);\n    this.instanceSettings = instanceSettings;\n  }\n\n  query(request: DataQueryRequest<QueryInfo>) {\n    const { range, targets, scopedVars } = request;\n    const [from, to] = [range.from, range.to].map((item) => item.valueOf()) as number[];\n    const requestTargets = targets.map<QueryInfo>((target) => {\n      const region = target.logServiceParams?.region ? getTemplateSrv().replace(target.logServiceParams.region) : '';\n      const TopicId = target.logServiceParams?.TopicId ? getTemplateSrv().replace(target.logServiceParams.TopicId) : '';\n      const Query = replaceClsQueryWithTemplateSrv(target.logServiceParams?.Query || '', scopedVars);\n      return {\n        ...target,\n        logServiceParams: {\n          region,\n          TopicId,\n          Query,\n        },\n      };\n    });\n\n    const dataFramePromise: Promise<DataFrame>[] = requestTargets\n      .filter((target) => !target.hide && target.logServiceParams.region && target.logServiceParams.TopicId)\n      .map((target) => {\n        return SearchLog(\n          {\n            TopicId: target.logServiceParams.TopicId,\n            Query: target.logServiceParams.Query,\n            From: from,\n            To: to,\n          },\n          target.logServiceParams.region,\n          { instanceSettings: this.instanceSettings }\n        ).then((result) => {\n          return ConvertSearchResultsToDataFrame(formatSearchLog(result), {\n            region: target.logServiceParams.region,\n            TopicId: target.logServiceParams.TopicId,\n          });\n        });\n      });\n\n    const output$ = new Observable<DataQueryResponse>((subscriber) => {\n      subscriber.next({ data: [], state: LoadingState.Loading });\n\n      Promise.all(dataFramePromise)\n        .then((frames) => {\n          const processedFrames = [];\n          for (const frame of frames) {\n            // 如果是 Analysis 场景，且返回内容可转化为 TimeSeriesMany, 则进行处理以绘制时序图\n            if (!frame?.meta?.preferredVisualisationType) {\n              const fieldTypeSet = new Set();\n              frame.fields.forEach((field) => fieldTypeSet.add(field.type));\n              if (\n                fieldTypeSet.has(FieldType.time) &&\n                fieldTypeSet.has(FieldType.string) &&\n                fieldTypeSet.has(FieldType.number)\n              ) {\n                const timeSeriesMany = toTimeSeriesMany([frame]);\n                if (frame.fields.filter((item) => item.type === 'number')?.length === 1) {\n                  timeSeriesMany.forEach((item) => {\n                    item.fields.forEach((field) => {\n                      if (field.type === FieldType.number) {\n                        field.name = '';\n                      }\n                    });\n                  });\n                }\n                processedFrames.splice(frame.fields.length, 0, ...timeSeriesMany);\n                continue;\n              }\n            }\n            processedFrames.push(frame);\n          }\n          subscriber.next({ data: processedFrames, state: LoadingState.Done });\n        })\n        .catch((e) => {\n          subscriber.next({\n            data: [],\n            state: LoadingState.Error,\n            error: {\n              ...e,\n              message: e?.message || e?.data?.message,\n            },\n          });\n        });\n    }).pipe(share());\n    return output$;\n  }\n\n  async metricFindQuery(query: QueryInfo['logServiceParams'], options): Promise<MetricFindValue[]> {\n    const logServiceParams = query;\n    const region = logServiceParams?.region ? getTemplateSrv().replace(logServiceParams.region) : '';\n    const TopicId = logServiceParams?.TopicId ? getTemplateSrv().replace(logServiceParams.TopicId) : '';\n    const Query = replaceClsQueryWithTemplateSrv(logServiceParams.Query);\n    if (!options.range) {\n      return [];\n    }\n    if (region && TopicId && Query) {\n      const { analysisColumns, analysisRecords } = formatSearchLog(\n        await SearchLog(\n          {\n            TopicId: TopicId,\n            Query: Query,\n            From: options.range!.from.valueOf(),\n            To: options.range!.to.valueOf(),\n          },\n          region,\n          {\n            instanceSettings: this.instanceSettings,\n          }\n        )\n      );\n      if (analysisColumns.length > 0 && analysisRecords.length > 0) {\n        const firstColumn = analysisColumns[0];\n        return analysisRecords.map((record) => {\n          return {\n            text: record[firstColumn.Name],\n            value: record[firstColumn.Name],\n          };\n        });\n      }\n    }\n    return [];\n  }\n\n  async testDatasource() {\n    if (!this.instanceSettings.jsonData['logServiceEnabled']) {\n      return null;\n    }\n    try {\n      // 使用SearchLog接口直接查询日志，根据是否遇到鉴权错误，判断秘钥合法性\n      await SearchLog(\n        {\n          TopicId: '',\n          Query: '',\n          From: moment().subtract(1, 'h').valueOf(),\n          To: moment().valueOf(),\n        },\n        'ap-shanghai',\n        {\n          instanceSettings: this.instanceSettings,\n        }\n      );\n      return {\n        status: 'success',\n        message: 'DatSource Connection OK',\n      };\n    } catch (e) {\n      if (e?.code && e.code !== 'AuthFailure.SignatureFailure') {\n        return {\n          status: 'success',\n          message: 'DatSource Connection OK',\n        };\n      } else {\n        return {\n          status: 'error',\n          title: e.code,\n          message: e.message,\n        };\n      }\n    }\n  }\n\n  /** histogram support\n   * @link https://github.com/grafana/grafana/blob/942be4215afaea27757fb3a034126452aaf3fab2/public/app/plugins/datasource/loki/datasource.ts#L115-L115\n   */\n  getLogsVolumeDataProvider(request: DataQueryRequest<QueryInfo>): Observable<DataQueryResponse> | undefined {\n    return undefined;\n  }\n\n  /** context disabled */\n  showContextToggle = (row: LogRowModel) => {\n    /** ConvertLogJsonToDataFrameDTO 函数中，将上下文相关值处理为 LogFieldReservedName.META field */\n    const metaField = row.dataFrame.fields.find((item) => item.name === LogFieldReservedName.META);\n    try {\n      if (metaField?.labels?.region && metaField?.labels.TopicId) {\n        const metaValue: Pick<LogInfo, 'PkgId' | 'PkgLogId'> = JSON.parse(metaField.values.get(row.rowIndex));\n        if (metaValue?.PkgId && metaValue?.PkgLogId) {\n          return true;\n        }\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getLogRowContext = async (row: LogRowModel, options: RowContextOptions) => {\n    const { limit = 10, direction = 'BACKWARD' } = options;\n    const timeField = row.dataFrame.fields.find((item) => item.name === LogFieldReservedName.TIMESTAMP);\n    const metaField = row.dataFrame.fields.find((item) => item.name === LogFieldReservedName.META);\n    if (!timeField || !metaField?.labels || !limit) {\n      return { data: [], state: LoadingState.Done };\n    }\n\n    try {\n      const metaValue: Pick<LogInfo, 'PkgId' | 'PkgLogId'> = JSON.parse(metaField.values.get(row.rowIndex));\n      const bTime = moment(timeField.values.get(row.rowIndex)).format('YYYY-MM-DD HH:MM:SS.SSS');\n      const logContext = await DescribeLogContext(\n        {\n          TopicId: metaField?.labels.TopicId,\n          BTime: bTime,\n          PkgId: metaValue.PkgId,\n          PkgLogId: Number(metaValue.PkgLogId),\n          PrevLogs: direction === 'BACKWARD' ? limit : 0,\n          NextLogs: direction !== 'BACKWARD' ? limit : 0,\n        },\n        metaField?.labels.region,\n        { instanceSettings: this.instanceSettings }\n      );\n      const frame = ConvertLogContextToDataFrame(logContext);\n      return {\n        data: [frame],\n        state: LoadingState.Done,\n      };\n    } catch (e) {\n      return {\n        data: [],\n        state: LoadingState.Error,\n        error: e,\n      };\n    }\n  };\n}\n","import { DescribeLogContextResult } from '../model';\nimport { DataFrameDTO, FieldType, toDataFrame, DataFrame, FieldDTO } from '@grafana/data';\nimport { parseLogJsonStr } from './formatSearchLog';\n\nexport function ConvertLogContextToDataFrame(logContext: DescribeLogContextResult): DataFrame {\n  const { LogContextInfos = [] } = logContext;\n\n  const timeField: FieldDTO<number> = {\n    name: 'ts',\n    type: FieldType.time,\n    config: { displayName: 'Time' },\n    values: [],\n  };\n  const idField: FieldDTO<string | number> = {\n    name: 'id',\n    type: FieldType.string,\n    values: [],\n  };\n  const lineField: FieldDTO<string> = {\n    name: 'line',\n    type: FieldType.string,\n    values: [],\n  };\n\n  LogContextInfos.forEach((item) => {\n    (timeField.values as number[]).unshift(item.BTime);\n    (idField.values as (string | number)[]).unshift(item.PkgLogId);\n    let contextLog;\n    try {\n      contextLog = JSON.stringify(parseLogJsonStr(item.Content) as any);\n    } catch (e) {\n      contextLog = item.Content;\n    }\n    (lineField.values as string[]).unshift(contextLog);\n  });\n\n  const frameDTO: DataFrameDTO = {\n    name: '',\n    meta: {\n      custom: {\n        RequestId: (logContext as any).RequestId,\n      },\n    },\n    fields: [timeField, lineField, idField],\n  };\n  return toDataFrame(frameDTO);\n}\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function getSymbolIterator() {\n    if (typeof Symbol !== 'function' || !Symbol.iterator) {\n        return '@@iterator';\n    }\n    return Symbol.iterator;\n}\nexport var iterator = /*@__PURE__*/ getSymbolIterator();\nexport var $$iterator = iterator;\n//# sourceMappingURL=iterator.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var isArrayLike = (function (x) { return x && typeof x.length === 'number' && typeof x !== 'function'; });\n//# sourceMappingURL=isArrayLike.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isPromise(value) {\n    return !!value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\n//# sourceMappingURL=isPromise.js.map\n","/** PURE_IMPORTS_START _subscribeToArray,_subscribeToPromise,_subscribeToIterable,_subscribeToObservable,_isArrayLike,_isPromise,_isObject,_symbol_iterator,_symbol_observable PURE_IMPORTS_END */\nimport { subscribeToArray } from './subscribeToArray';\nimport { subscribeToPromise } from './subscribeToPromise';\nimport { subscribeToIterable } from './subscribeToIterable';\nimport { subscribeToObservable } from './subscribeToObservable';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport var subscribeTo = function (result) {\n    if (!!result && typeof result[Symbol_observable] === 'function') {\n        return subscribeToObservable(result);\n    }\n    else if (isArrayLike(result)) {\n        return subscribeToArray(result);\n    }\n    else if (isPromise(result)) {\n        return subscribeToPromise(result);\n    }\n    else if (!!result && typeof result[Symbol_iterator] === 'function') {\n        return subscribeToIterable(result);\n    }\n    else {\n        var value = isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n        var msg = \"You provided \" + value + \" where a stream was expected.\"\n            + ' You can provide an Observable, Promise, Array, or Iterable.';\n        throw new TypeError(msg);\n    }\n};\n//# sourceMappingURL=subscribeTo.js.map\n","/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport var subscribeToObservable = function (obj) {\n    return function (subscriber) {\n        var obs = obj[Symbol_observable]();\n        if (typeof obs.subscribe !== 'function') {\n            throw new TypeError('Provided object does not correctly implement Symbol.observable');\n        }\n        else {\n            return obs.subscribe(subscriber);\n        }\n    };\n};\n//# sourceMappingURL=subscribeToObservable.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var subscribeToArray = function (array) {\n    return function (subscriber) {\n        for (var i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n            subscriber.next(array[i]);\n        }\n        subscriber.complete();\n    };\n};\n//# sourceMappingURL=subscribeToArray.js.map\n","/** PURE_IMPORTS_START _hostReportError PURE_IMPORTS_END */\nimport { hostReportError } from './hostReportError';\nexport var subscribeToPromise = function (promise) {\n    return function (subscriber) {\n        promise.then(function (value) {\n            if (!subscriber.closed) {\n                subscriber.next(value);\n                subscriber.complete();\n            }\n        }, function (err) { return subscriber.error(err); })\n            .then(null, hostReportError);\n        return subscriber;\n    };\n};\n//# sourceMappingURL=subscribeToPromise.js.map\n","/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nexport var subscribeToIterable = function (iterable) {\n    return function (subscriber) {\n        var iterator = iterable[Symbol_iterator]();\n        do {\n            var item = void 0;\n            try {\n                item = iterator.next();\n            }\n            catch (err) {\n                subscriber.error(err);\n                return subscriber;\n            }\n            if (item.done) {\n                subscriber.complete();\n                break;\n            }\n            subscriber.next(item.value);\n            if (subscriber.closed) {\n                break;\n            }\n        } while (true);\n        if (typeof iterator.return === 'function') {\n            subscriber.add(function () {\n                if (iterator.return) {\n                    iterator.return();\n                }\n            });\n        }\n        return subscriber;\n    };\n};\n//# sourceMappingURL=subscribeToIterable.js.map\n","/** PURE_IMPORTS_START _scheduleObservable,_schedulePromise,_scheduleArray,_scheduleIterable,_util_isInteropObservable,_util_isPromise,_util_isArrayLike,_util_isIterable PURE_IMPORTS_END */\nimport { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nexport function scheduled(input, scheduler) {\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return scheduleObservable(input, scheduler);\n        }\n        else if (isPromise(input)) {\n            return schedulePromise(input, scheduler);\n        }\n        else if (isArrayLike(input)) {\n            return scheduleArray(input, scheduler);\n        }\n        else if (isIterable(input) || typeof input === 'string') {\n            return scheduleIterable(input, scheduler);\n        }\n    }\n    throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\n//# sourceMappingURL=scheduled.js.map\n","/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport function isInteropObservable(input) {\n    return input && typeof input[Symbol_observable] === 'function';\n}\n//# sourceMappingURL=isInteropObservable.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport function scheduleObservable(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var sub = new Subscription();\n        sub.add(scheduler.schedule(function () {\n            var observable = input[Symbol_observable]();\n            sub.add(observable.subscribe({\n                next: function (value) { sub.add(scheduler.schedule(function () { return subscriber.next(value); })); },\n                error: function (err) { sub.add(scheduler.schedule(function () { return subscriber.error(err); })); },\n                complete: function () { sub.add(scheduler.schedule(function () { return subscriber.complete(); })); },\n            }));\n        }));\n        return sub;\n    });\n}\n//# sourceMappingURL=scheduleObservable.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function schedulePromise(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var sub = new Subscription();\n        sub.add(scheduler.schedule(function () {\n            return input.then(function (value) {\n                sub.add(scheduler.schedule(function () {\n                    subscriber.next(value);\n                    sub.add(scheduler.schedule(function () { return subscriber.complete(); }));\n                }));\n            }, function (err) {\n                sub.add(scheduler.schedule(function () { return subscriber.error(err); }));\n            });\n        }));\n        return sub;\n    });\n}\n//# sourceMappingURL=schedulePromise.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function scheduleArray(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var sub = new Subscription();\n        var i = 0;\n        sub.add(scheduler.schedule(function () {\n            if (i === input.length) {\n                subscriber.complete();\n                return;\n            }\n            subscriber.next(input[i++]);\n            if (!subscriber.closed) {\n                sub.add(this.schedule());\n            }\n        }));\n        return sub;\n    });\n}\n//# sourceMappingURL=scheduleArray.js.map\n","/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nexport function isIterable(input) {\n    return input && typeof input[Symbol_iterator] === 'function';\n}\n//# sourceMappingURL=isIterable.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_iterator PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nexport function scheduleIterable(input, scheduler) {\n    if (!input) {\n        throw new Error('Iterable cannot be null');\n    }\n    return new Observable(function (subscriber) {\n        var sub = new Subscription();\n        var iterator;\n        sub.add(function () {\n            if (iterator && typeof iterator.return === 'function') {\n                iterator.return();\n            }\n        });\n        sub.add(scheduler.schedule(function () {\n            iterator = input[Symbol_iterator]();\n            sub.add(scheduler.schedule(function () {\n                if (subscriber.closed) {\n                    return;\n                }\n                var value;\n                var done;\n                try {\n                    var result = iterator.next();\n                    value = result.value;\n                    done = result.done;\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return;\n                }\n                if (done) {\n                    subscriber.complete();\n                }\n                else {\n                    subscriber.next(value);\n                    this.schedule();\n                }\n            }));\n        }));\n        return sub;\n    });\n}\n//# sourceMappingURL=scheduleIterable.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_Observable,_util_subscribeTo PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from './Subscriber';\nimport { Observable } from './Observable';\nimport { subscribeTo } from './util/subscribeTo';\nvar SimpleInnerSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SimpleInnerSubscriber, _super);\n    function SimpleInnerSubscriber(parent) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        return _this;\n    }\n    SimpleInnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(value);\n    };\n    SimpleInnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error);\n        this.unsubscribe();\n    };\n    SimpleInnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete();\n        this.unsubscribe();\n    };\n    return SimpleInnerSubscriber;\n}(Subscriber));\nexport { SimpleInnerSubscriber };\nvar ComplexInnerSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ComplexInnerSubscriber, _super);\n    function ComplexInnerSubscriber(parent, outerValue, outerIndex) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        _this.outerValue = outerValue;\n        _this.outerIndex = outerIndex;\n        return _this;\n    }\n    ComplexInnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this);\n    };\n    ComplexInnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error);\n        this.unsubscribe();\n    };\n    ComplexInnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return ComplexInnerSubscriber;\n}(Subscriber));\nexport { ComplexInnerSubscriber };\nvar SimpleOuterSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SimpleOuterSubscriber, _super);\n    function SimpleOuterSubscriber() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SimpleOuterSubscriber.prototype.notifyNext = function (innerValue) {\n        this.destination.next(innerValue);\n    };\n    SimpleOuterSubscriber.prototype.notifyError = function (err) {\n        this.destination.error(err);\n    };\n    SimpleOuterSubscriber.prototype.notifyComplete = function () {\n        this.destination.complete();\n    };\n    return SimpleOuterSubscriber;\n}(Subscriber));\nexport { SimpleOuterSubscriber };\nvar ComplexOuterSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ComplexOuterSubscriber, _super);\n    function ComplexOuterSubscriber() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ComplexOuterSubscriber.prototype.notifyNext = function (_outerValue, innerValue, _outerIndex, _innerSub) {\n        this.destination.next(innerValue);\n    };\n    ComplexOuterSubscriber.prototype.notifyError = function (error) {\n        this.destination.error(error);\n    };\n    ComplexOuterSubscriber.prototype.notifyComplete = function (_innerSub) {\n        this.destination.complete();\n    };\n    return ComplexOuterSubscriber;\n}(Subscriber));\nexport { ComplexOuterSubscriber };\nexport function innerSubscribe(result, innerSubscriber) {\n    if (innerSubscriber.closed) {\n        return undefined;\n    }\n    if (result instanceof Observable) {\n        return result.subscribe(innerSubscriber);\n    }\n    return subscribeTo(result)(innerSubscriber);\n}\n//# sourceMappingURL=innerSubscribe.js.map\n","/** PURE_IMPORTS_START tslib,_map,_observable_from,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { map } from './map';\nimport { from } from '../observable/from';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    if (typeof resultSelector === 'function') {\n        return function (source) { return source.pipe(mergeMap(function (a, i) { return from(project(a, i)).pipe(map(function (b, ii) { return resultSelector(a, b, i, ii); })); }, concurrent)); };\n    }\n    else if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return function (source) { return source.lift(new MergeMapOperator(project, concurrent)); };\n}\nvar MergeMapOperator = /*@__PURE__*/ (function () {\n    function MergeMapOperator(project, concurrent) {\n        if (concurrent === void 0) {\n            concurrent = Number.POSITIVE_INFINITY;\n        }\n        this.project = project;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.concurrent));\n    };\n    return MergeMapOperator;\n}());\nexport { MergeMapOperator };\nvar MergeMapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, concurrent) {\n        if (concurrent === void 0) {\n            concurrent = Number.POSITIVE_INFINITY;\n        }\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.concurrent = concurrent;\n        _this.hasCompleted = false;\n        _this.buffer = [];\n        _this.active = 0;\n        _this.index = 0;\n        return _this;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish) {\n        var innerSubscriber = new SimpleInnerSubscriber(this);\n        var destination = this.destination;\n        destination.add(innerSubscriber);\n        var innerSubscription = innerSubscribe(ish, innerSubscriber);\n        if (innerSubscription !== innerSubscriber) {\n            destination.add(innerSubscription);\n        }\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n        this.unsubscribe();\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (innerValue) {\n        this.destination.next(innerValue);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function () {\n        var buffer = this.buffer;\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(SimpleOuterSubscriber));\nexport { MergeMapSubscriber };\nexport var flatMap = mergeMap;\n//# sourceMappingURL=mergeMap.js.map\n","/** PURE_IMPORTS_START _Observable,_util_subscribeTo,_scheduled_scheduled PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { scheduled } from '../scheduled/scheduled';\nexport function from(input, scheduler) {\n    if (!scheduler) {\n        if (input instanceof Observable) {\n            return input;\n        }\n        return new Observable(subscribeTo(input));\n    }\n    else {\n        return scheduled(input, scheduler);\n    }\n}\n//# sourceMappingURL=from.js.map\n","/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function catchError(selector) {\n    return function catchErrorOperatorFunction(source) {\n        var operator = new CatchOperator(selector);\n        var caught = source.lift(operator);\n        return (operator.caught = caught);\n    };\n}\nvar CatchOperator = /*@__PURE__*/ (function () {\n    function CatchOperator(selector) {\n        this.selector = selector;\n    }\n    CatchOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n    };\n    return CatchOperator;\n}());\nvar CatchSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(CatchSubscriber, _super);\n    function CatchSubscriber(destination, selector, caught) {\n        var _this = _super.call(this, destination) || this;\n        _this.selector = selector;\n        _this.caught = caught;\n        return _this;\n    }\n    CatchSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var result = void 0;\n            try {\n                result = this.selector(err, this.caught);\n            }\n            catch (err2) {\n                _super.prototype.error.call(this, err2);\n                return;\n            }\n            this._unsubscribeAndRecycle();\n            var innerSubscriber = new SimpleInnerSubscriber(this);\n            this.add(innerSubscriber);\n            var innerSubscription = innerSubscribe(result, innerSubscriber);\n            if (innerSubscription !== innerSubscriber) {\n                this.add(innerSubscription);\n            }\n        }\n    };\n    return CatchSubscriber;\n}(SimpleOuterSubscriber));\n//# sourceMappingURL=catchError.js.map\n","import { each, map, includes, flatten, keys } from 'lodash';\nimport TableModel from 'grafana/app/core/table_model';\nimport { FieldType, QueryResultMeta, TimeSeries, TableData } from '@grafana/data';\n\nexport default class RUMSeries {\n  refId?: string;\n  series: any;\n  alias: any;\n  annotation: any;\n  meta?: QueryResultMeta;\n\n  constructor(options: { series: any; alias?: any; annotation?: any; meta?: QueryResultMeta; refId?: string }) {\n    this.series = options.series;\n    this.alias = options.alias;\n    this.annotation = options.annotation;\n    this.meta = options.meta;\n    this.refId = options.refId;\n  }\n\n  getTimeSeries(): TimeSeries[] {\n    const output: TimeSeries[] = [];\n    let i;\n    let j;\n\n    if (this.series.length === 0) {\n      return output;\n    }\n\n    each(this.series, (series) => {\n      const columns = series.columns.length;\n      const tags = map(series.tags, (value, key) => {\n        return key + ': ' + value;\n      });\n\n      for (j = 1; j < columns; j++) {\n        let seriesName = series.name;\n        const columnName = series.columns[j];\n        if (columnName !== 'value') {\n          seriesName = seriesName + '.' + columnName;\n        }\n\n        if (this.alias) {\n          seriesName = this._getSeriesName(series, j);\n        } else if (series.tags) {\n          seriesName = seriesName + ' {' + tags.join(', ') + '}';\n        }\n\n        const datapoints = [];\n        if (series.values) {\n          for (i = 0; i < series.values.length; i++) {\n            datapoints[i] = [series.values[i][j], series.values[i][0]];\n          }\n        }\n\n        output.push({\n          title: seriesName,\n          target: seriesName,\n          datapoints: datapoints,\n          tags: series.tags,\n          meta: this.meta,\n          refId: this.refId,\n        });\n      }\n    });\n\n    return output;\n  }\n\n  _getSeriesName(series: any, index: number) {\n    const regex = /\\$(\\w+)|\\[\\[([\\s\\S]+?)\\]\\]/g;\n    const segments = series.name.split('.');\n\n    return this.alias.replace(regex, (match: any, g1: any, g2: any) => {\n      const group = g1 || g2;\n      const segIndex = parseInt(group, 10);\n\n      if (group === 'm' || group === 'measurement') {\n        return series.name;\n      }\n      if (group === 'col') {\n        return series.columns[index];\n      }\n      if (!isNaN(segIndex)) {\n        return segments[segIndex] ?? match;\n      }\n      if (group.indexOf('tag_') !== 0) {\n        return match;\n      }\n\n      const tag = group.replace('tag_', '');\n      if (!series.tags) {\n        return match;\n      }\n      return series.tags[tag];\n    });\n  }\n\n  getAnnotations() {\n    const list: any[] = [];\n\n    each(this.series, (series) => {\n      let titleCol: any = null;\n      let timeCol: any = null;\n      let timeEndCol: any = null;\n      const tagsCol: any = [];\n      let textCol: any = null;\n\n      each(series.columns, (column, index) => {\n        if (column === 'time') {\n          timeCol = index;\n          return;\n        }\n        if (column === 'sequence_number') {\n          return;\n        }\n        if (column === this.annotation.titleColumn) {\n          titleCol = index;\n          return;\n        }\n        if (includes((this.annotation.tagsColumn || '').replace(' ', '').split(','), column)) {\n          tagsCol.push(index);\n          return;\n        }\n        if (column === this.annotation.textColumn) {\n          textCol = index;\n          return;\n        }\n        if (column === this.annotation.timeEndColumn) {\n          timeEndCol = index;\n          return;\n        }\n        // legacy case\n        if (!titleCol && textCol !== index) {\n          titleCol = index;\n        }\n      });\n\n      each(series.values, (value) => {\n        const data = {\n          annotation: this.annotation,\n          time: Number(new Date(value[timeCol])),\n          title: value[titleCol],\n          timeEnd: value[timeEndCol],\n          // Remove empty values, then split in different tags for comma separated values\n          tags: flatten(\n            tagsCol\n              .filter((t: any) => {\n                return value[t];\n              })\n              .map((t: any) => {\n                return value[t].split(',');\n              })\n          ),\n          text: value[textCol],\n        };\n\n        list.push(data);\n      });\n    });\n\n    return list;\n  }\n\n  getTable(): TableData {\n    const table = new TableModel();\n    let i;\n    let j;\n\n    // @ts-ignore\n    table.refId = this.refId;\n    // @ts-ignore\n    table.meta = this.meta;\n\n    if (this.series.length === 0) {\n      return table;\n    }\n\n    // the order is:\n    // - first the first item from the value-array (this is often (always?) the timestamp)\n    // - then all the tag-values\n    // - then the rest of the value-array\n    //\n    // we have to keep this order both in table.columns and table.rows\n\n    each(this.series, (series: any, seriesIndex: number) => {\n      if (seriesIndex === 0) {\n        const firstCol = series.columns[0];\n        // Check the first column's name, if it is `time`, we\n        // mark it as having the type time\n        const firstTableCol = firstCol === 'time' ? { text: 'Time', type: FieldType.time } : { text: firstCol };\n        table.columns.push(firstTableCol);\n        each(keys(series.tags), (key) => {\n          table.columns.push({ text: key });\n        });\n        for (j = 1; j < series.columns.length; j++) {\n          table.columns.push({ text: series.columns[j] });\n        }\n      }\n\n      if (series.values) {\n        for (i = 0; i < series.values.length; i++) {\n          const values = series.values[i];\n          const reordered = [values[0]];\n          if (series.tags) {\n            for (const key in series.tags) {\n              if (series.tags.hasOwnProperty(key)) {\n                reordered.push(series.tags[key]);\n              }\n            }\n          }\n          for (j = 1; j < values.length; j++) {\n            reordered.push(values[j]);\n          }\n          table.rows.push(reordered);\n        }\n      }\n    });\n\n    return table;\n  }\n}\n","import { AnnotationEvent, DataFrame, DataQuery, FieldType, QueryResultMeta } from '@grafana/data';\nimport { toDataQueryResponse } from '@grafana/runtime';\nimport TableModel from 'grafana/app/core/table_model';\nimport { each, flatten, groupBy, isArray } from 'lodash';\nimport { ENABLE_MEASUREMENTS } from './common/constants';\nimport { RUMQuery } from './types';\n\nexport default class ResponseParser {\n  parse(query: string, results: { results: any }) {\n    if (!results?.results || results.results.length === 0) {\n      return [];\n    }\n\n    const RUMResults = results.results[0];\n    if (!RUMResults.series) {\n      return [];\n    }\n\n    const normalizedQuery = query.toLowerCase();\n    const isValueFirst =\n      normalizedQuery.indexOf('show field keys') >= 0 || normalizedQuery.indexOf('show retention policies') >= 0;\n    const isShowMeasurements = normalizedQuery.indexOf('show measurements') >= 0\n\n    const res = new Set<string>();\n    each(RUMResults.series, (serie) => {\n      each(serie.values, (value) => {\n        if (isArray(value)) {\n          // In general, there are 2 possible shapes for the returned value.\n          // The first one is a two-element array,\n          // where the first element is somewhat a metadata value:\n          // the tag name for SHOW TAG VALUES queries,\n          // the time field for SELECT queries, etc.\n          // The second shape is an one-element array,\n          // that is containing an immediate value.\n          // For example, SHOW FIELD KEYS queries return such shape.\n          // Note, pre-0.11 versions return\n          // the second shape for SHOW TAG VALUES queries\n          // (while the newer versions—first).\n\n          if (isValueFirst) {\n            addUnique(res, value[0]);\n          } else if (value[1] !== undefined) {\n            addUnique(res, value[1]);\n          } else {\n            addUnique(res, value[0]);\n          }\n        } else {\n          addUnique(res, value);\n        }\n      });\n    });\n\n    if (isShowMeasurements) {\n      return Array.from(res).filter(item => ENABLE_MEASUREMENTS.includes(item)).map((v) => ({ text: v }));\n    }\n\n    return Array.from(res).map((v) => ({ text: v }));\n  }\n\n  getTable(dfs: DataFrame[], target: RUMQuery, meta: QueryResultMeta): TableModel {\n    let table = new TableModel();\n\n    if (dfs.length > 0) {\n      // @ts-ignore\n      table.meta = {\n        ...meta,\n        executedQueryString: dfs[0].meta?.executedQueryString,\n      };\n      // @ts-ignore\n      table.refId = target.refId;\n      table = getTableCols(dfs, table, target);\n\n      // if group by tag(s) added\n      if (dfs[0].fields[1]?.labels) {\n        let dfsByLabels: any = groupBy(dfs, (df: DataFrame) =>\n          df.fields[1].labels ? Object.values(df.fields[1].labels!) : null\n        );\n        const labels = Object.keys(dfsByLabels);\n        dfsByLabels = Object.values(dfsByLabels);\n\n        for (let i = 0; i < dfsByLabels.length; i++) {\n          table = getTableRows(dfsByLabels[i], table, [...labels[i].split(',')]);\n        }\n      } else {\n        table = getTableRows(dfs, table, []);\n      }\n    }\n\n    return table;\n  }\n\n  async transformAnnotationResponse(options: any, data: any, target: RUMQuery): Promise<AnnotationEvent[]> {\n    const rsp = toDataQueryResponse(data, [target] as DataQuery[]);\n\n    if (rsp) {\n      const table = this.getTable(rsp.data, target, {});\n      const list: any[] = [];\n      let titleCol: any = null;\n      let timeCol: any = null;\n      let timeEndCol: any = null;\n      const tagsCol: any = [];\n      let textCol: any = null;\n\n      each(table.columns, (column, index) => {\n        if (column.text.toLowerCase() === 'time') {\n          timeCol = index;\n          return;\n        }\n        if (column.text === options.annotation.titleColumn) {\n          titleCol = index;\n          return;\n        }\n        if (colContainsTag(column.text, options.annotation.tagsColumn)) {\n          tagsCol.push(index);\n          return;\n        }\n        if (column.text.includes(options.annotation.textColumn)) {\n          textCol = index;\n          return;\n        }\n        if (column.text === options.annotation.timeEndColumn) {\n          timeEndCol = index;\n          return;\n        }\n        // legacy case\n        if (!titleCol && textCol !== index) {\n          titleCol = index;\n        }\n      });\n\n      each(table.rows, (value) => {\n        const data = {\n          annotation: options.annotation,\n          time: Number(new Date(value[timeCol])),\n          title: value[titleCol],\n          timeEnd: value[timeEndCol],\n          // Remove empty values, then split in different tags for comma separated values\n          tags: flatten(\n            tagsCol\n              .filter((t: any) => {\n                return value[t];\n              })\n              .map((t: any) => {\n                return value[t].split(',');\n              })\n          ),\n          text: value[textCol],\n        };\n\n        list.push(data);\n      });\n\n      return list;\n    }\n    return [];\n  }\n}\n\nfunction colContainsTag(colText: string, tagsColumn: string): boolean {\n  const tags = (tagsColumn || '').replace(' ', '').split(',');\n  for (let tag of tags) {\n    if (colText.includes(tag)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction getTableCols(dfs: DataFrame[], table: TableModel, target: RUMQuery): TableModel {\n  const selectedParams = getSelectedParams(target);\n\n  dfs[0].fields.forEach((field) => {\n    // Time col\n    if (field.name === 'time') {\n      table.columns.push({ text: 'Time', type: FieldType.time });\n    }\n\n    // Group by (label) column(s)\n    else if (field.name === 'value') {\n      if (field.labels) {\n        Object.keys(field.labels).forEach((key) => {\n          table.columns.push({ text: key });\n        });\n      }\n    }\n  });\n\n  // Get cols for annotationQuery\n  if (dfs[0].refId === 'metricFindQuery') {\n    dfs.forEach((field) => {\n      if (field.name) {\n        table.columns.push({ text: field.name });\n      }\n    });\n  }\n\n  // Select (metric) column(s)\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < selectedParams.length; i++) {\n    table.columns.push({ text: selectedParams[i] });\n  }\n\n  return table;\n}\n\nfunction getTableRows(dfs: DataFrame[], table: TableModel, labels: string[]): TableModel {\n  const values = dfs[0].fields[0].values.toArray();\n\n  for (let i = 0; i < values.length; i++) {\n    const time = values[i];\n    const metrics = dfs.map((df: DataFrame) => {\n      return df.fields[1] ? df.fields[1].values.toArray()[i] : null;\n    });\n    if (metrics.indexOf(null) < 0) {\n      table.rows.push([time, ...labels, ...metrics]);\n    }\n  }\n  return table;\n}\n\nexport function getSelectedParams(target: RUMQuery): string[] {\n  let allParams: string[] = [];\n  target.select?.forEach((select) => {\n    const selector = select.filter((x) => x.type !== 'field');\n    if (selector.length > 0) {\n      allParams.push(selector[0].type);\n    } else {\n      if (select[0]?.params?.[0]) {\n        allParams.push(select[0].params[0].toString());\n      }\n    }\n  });\n\n  let uniqueParams: string[] = [];\n  allParams.forEach((param) => {\n    uniqueParams.push(incrementName(param, param, uniqueParams, 0));\n  });\n\n  return uniqueParams;\n}\n\nfunction incrementName(name: string, nameIncremenet: string, params: string[], index: number): string {\n  if (params.indexOf(nameIncremenet) > -1) {\n    index++;\n    return incrementName(name, name + '_' + index, params, index);\n  }\n  return nameIncremenet;\n}\n\nfunction addUnique(s: Set<string>, value: string | number) {\n  s.add(value.toString());\n}\n","import { cloneDeep, isString, map as _map, get } from 'lodash';\nimport { Observable, of, throwError, from } from 'rxjs';\nimport { catchError, map, mergeMap } from 'rxjs/operators';\nimport { getBackendSrv, getTemplateSrv, TemplateSrv } from '@grafana/runtime';\nimport {\n  ArrayVector,\n  DataFrame,\n  DataQueryError,\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceInstanceSettings,\n  MetricFindValue,\n  dateMath,\n  DataSourceApi,\n  FieldType,\n  QueryResultMeta,\n  TIME_SERIES_TIME_FIELD_NAME,\n  TIME_SERIES_VALUE_FIELD_NAME,\n  TimeSeries,\n  LoadingState,\n  RawTimeRange,\n} from '@grafana/data';\nimport RUMQueryModel from './RUM_query_model';\nimport RUMSeries from './RUM_series';\nimport ResponseParser from './response_parser';\nimport { GetRequestParams, GetServiceAPIInfo } from '../../datasource/common/constants';\nimport { MyDataSourceOptions, QueryInfo } from '../types';\nimport { RUMOptions, RUMQuery } from './types';\nimport { RUMQueryBuilder } from './query_builder';\n\n// we detect the field type based on the value-array\nfunction getFieldType(values: unknown[]): FieldType {\n  // the values-array may contain a lot of nulls.\n  // we need the first not-null item\n  const firstNotNull = values.find((v) => v !== null);\n\n  if (firstNotNull === undefined) {\n    // we could not find any not-null values\n    return FieldType.number;\n  }\n\n  const valueType = typeof firstNotNull;\n\n  switch (valueType) {\n    case 'string':\n      return FieldType.string;\n    case 'boolean':\n      return FieldType.boolean;\n    case 'number':\n      return FieldType.number;\n    default:\n      throw new Error(`RUM: invalid value type ${valueType}`);\n  }\n}\n\n// this conversion function is specialized to work with the timeseries\n// data returned by getTimeSeries()\nfunction timeSeriesToDataFrame(timeSeries: TimeSeries): DataFrame {\n  const times: number[] = [];\n  const values: unknown[] = [];\n\n  // the data we process here is not correctly typed.\n  // the typescript types say every data-point is number|null,\n  // but in fact it can be string or boolean too.\n\n  const points = timeSeries.datapoints;\n  for (const point of points) {\n    values.push(point[0]);\n    times.push(point[1] as number);\n  }\n\n  const timeField = {\n    name: TIME_SERIES_TIME_FIELD_NAME,\n    type: FieldType.time,\n    config: {},\n    values: new ArrayVector<number>(times),\n  };\n\n  const valueField = {\n    name: TIME_SERIES_VALUE_FIELD_NAME,\n    type: getFieldType(values),\n    config: {\n      displayNameFromDS: timeSeries.title,\n    },\n    values: new ArrayVector<unknown>(values),\n    labels: timeSeries.tags,\n  };\n\n  const fields = [timeField, valueField];\n\n  return {\n    name: timeSeries.target,\n    refId: timeSeries.refId,\n    meta: timeSeries.meta,\n    fields,\n    length: values.length,\n  };\n}\n\nexport default class RUMServiceDataSource extends DataSourceApi<QueryInfo, MyDataSourceOptions> {\n  type: string;\n  url: string;\n  responseParser: any;\n  private readonly instanceSettings: DataSourceInstanceSettings<MyDataSourceOptions>;\n  private readonly templateSrv: TemplateSrv;\n\n  constructor(instanceSettings: DataSourceInstanceSettings<RUMOptions>) {\n    super(instanceSettings);\n\n    this.instanceSettings = instanceSettings;\n    this.templateSrv = getTemplateSrv();\n    this.responseParser = new ResponseParser();\n    this.type = 'RUMService';\n  }\n\n  query(request: DataQueryRequest<QueryInfo>): Promise<DataQueryResponse> | Observable<DataQueryResponse> {\n    return this.classicQuery(request);\n  }\n\n  classicQuery(options: any): Observable<DataQueryResponse> {\n    let timeFilter = this.getTimeFilter(options);\n    const scopedVars = options.scopedVars;\n    const targets = cloneDeep(options.targets);\n    const queryTargets: any[] = [];\n\n    let i;\n    let y;\n\n    let allQueries = _map(targets, (target) => {\n      if (target.hide) {\n        return '';\n      }\n      target.RUMServiceParams = this.fixTimePeriod(target.RUMServiceParams, options);\n      queryTargets.push(target);\n\n      // backward compatibility\n      scopedVars.interval = scopedVars.__interval;\n\n      return new RUMQueryModel(target.RUMServiceParams, this.templateSrv, scopedVars).render(true);\n    }).reduce((acc, current) => {\n      if (current !== '') {\n        acc += ';' + current;\n      }\n      return acc;\n    });\n\n    if (allQueries === '') {\n      return of({ data: [] });\n    }\n\n    // add global adhoc filters to timeFilter\n    // @ts-ignore\n    const adhocFilters = this.templateSrv.getAdhocFilters(this.name);\n    if (adhocFilters.length > 0) {\n      const tmpQuery = new RUMQueryModel({}, this.templateSrv, scopedVars);\n      timeFilter += ' AND ' + tmpQuery.renderAdhocFilters(adhocFilters);\n    }\n\n    // replace grafana variables\n    scopedVars.timeFilter = { value: timeFilter };\n\n    // replace templated variables\n    allQueries = this.templateSrv.replace(allQueries, scopedVars);\n\n    return this._seriesQuery(allQueries, options).pipe(\n      map((data: any) => {\n        if (!data || !data.results) {\n          return { data: [] };\n        }\n\n        const seriesList = [];\n        for (i = 0; i < data.results.length; i++) {\n          const result = data.results[i];\n          if (!result || !result.series) {\n            continue;\n          }\n\n          const target = queryTargets[i];\n          let alias = target.RUMServiceParams.alias;\n          if (alias) {\n            alias = this.templateSrv.replace(target.RUMServiceParams.alias, options.scopedVars);\n          }\n\n          const meta: QueryResultMeta = {\n            executedQueryString: data.executedQueryString,\n          };\n\n          const rumSeries = new RUMSeries({\n            refId: target.refId,\n            series: data.results[i].series,\n            alias: alias,\n            meta,\n          });\n\n          switch (target.RUMServiceParams.resultFormat) {\n            case 'logs':\n              meta.preferredVisualisationType = 'logs';\n            // eslint-disable-next-line no-fallthrough\n            case 'table': {\n              seriesList.push(rumSeries.getTable());\n              break;\n            }\n            default: {\n              const timeSeries = rumSeries.getTimeSeries();\n              for (y = 0; y < timeSeries.length; y++) {\n                seriesList.push(timeSeriesToDataFrame(timeSeries[y]));\n              }\n              break;\n            }\n          }\n        }\n\n        return { data: seriesList, state: LoadingState.Done };\n      })\n    );\n  }\n\n  async metricFindQuery(query: string, options?: any): Promise<MetricFindValue[]> {\n    const interpolated = this.templateSrv.replace(query, undefined, 'regex');\n\n    return this._seriesQuery(interpolated, options)\n      .toPromise()\n      .then((resp) => {\n        return this.responseParser.parse(query, resp);\n      });\n  }\n\n  _seriesQuery(query: string, options?: any) {\n    if (!query) {\n      return of({ results: [] });\n    }\n\n    if (options?.range) {\n      const timeFilter = this.getTimeFilter({ rangeRaw: options.range, timezone: options.timezone });\n      query = query.replace('$timeFilter', timeFilter);\n    }\n\n    return this._RUMRequest(query);\n  }\n\n  _RUMRequest(query) {\n    const serviceType = 'rum';\n    const serviceInfo = GetServiceAPIInfo('', serviceType);\n\n    return from(\n      GetRequestParams(\n        { url: this.instanceSettings.url + serviceInfo.path, data: { Query: btoa(query) } },\n        serviceType,\n        { action: 'DescribeGrafanaData' },\n        '',\n        this.instanceSettings.id,\n        getBackendSrv()\n      )\n    ).pipe(\n      mergeMap((requestOptions) => {\n        return getBackendSrv()\n          .fetch(requestOptions)\n          .pipe(\n            map((result: any) => {\n              if (get(result, 'data.Response.Error')) {\n                // eslint-disable-next-line no-throw-literal\n                throw {\n                  message: 'RUM Error: ' + get(result, 'data.Response.Error.Message'),\n                  data: result.data,\n                  cancelled: true,\n                };\n              }\n              const jsonData = get(result, 'data.Response.Result');\n              const data = JSON.parse(jsonData);\n              data.executedQueryString = query;\n\n              if (data) {\n                if (data.error) {\n                  // eslint-disable-next-line no-throw-literal\n                  throw {\n                    message: 'RUM Error: ' + data.error,\n                    data,\n                  };\n                }\n                if (data.results) {\n                  const errors = data.results.filter((elem: any) => elem.error);\n\n                  if (errors.length > 0) {\n                    // eslint-disable-next-line no-throw-literal\n                    throw {\n                      message: 'RUM Error: ' + errors[0].error,\n                      data,\n                    };\n                  }\n                }\n              }\n              return data;\n            }),\n            catchError((err) => {\n              if (err.cancelled) {\n                return of(err);\n              }\n\n              return throwError(this.handleErrors(err));\n            })\n          );\n      })\n    );\n  }\n\n  handleErrors(err: any) {\n    const error: DataQueryError = {\n      message: err?.status || err?.message || 'Unknown error during query transaction. Please check JS console logs.',\n    };\n\n    if ((Number.isInteger(err.status) && err.status !== 0) || err.status >= 300) {\n      if (err.data?.error) {\n        error.message = 'RUM Error: ' + err.data.error;\n        error.data = err.data;\n        // @ts-ignore\n        error.config = err.config;\n      } else {\n        error.message = 'Network Error: ' + err.statusText + '(' + err.status + ')';\n        error.data = err.data;\n        // @ts-ignore\n        error.config = err.config;\n      }\n    }\n\n    return error;\n  }\n\n  getTimeFilter(options: any) {\n    const from = this.getRUMTime(options.rangeRaw.from, false, options.timezone);\n    const until = this.getRUMTime(options.rangeRaw.to, true, options.timezone);\n\n    return 'time >= ' + from + ' and time <= ' + until;\n  }\n\n  getRUMTime(date: any, roundUp: any, timezone: any) {\n    if (isString(date)) {\n      if (date === 'now') {\n        return 'now()';\n      }\n\n      const parts = /^now-(\\d+)([dhms])$/.exec(date);\n      if (parts) {\n        const amount = parseInt(parts[1], 10);\n        const unit = parts[2];\n        return 'now() - ' + amount + unit;\n      }\n      date = dateMath.parse(date, roundUp, timezone);\n    }\n\n    return date.valueOf() + 'ms';\n  }\n\n  fixTimePeriod(target: any, options: any) {\n    const period = this.getTimePeriod(options.rangeRaw, options.timezone);\n\n    target.groupBy?.forEach((groupBy: any) => {\n      if (groupBy.type === 'time' && groupBy.params[0] !== '1d') {\n        target = this.modifyTime(target, period);\n      }\n    });\n    return target;\n  }\n\n  getTimePeriod(rangeRaw: RawTimeRange, timezone: string): string {\n    const from = dateMath.parse(rangeRaw.from, false, timezone)?.valueOf();\n    const until = dateMath.parse(rangeRaw.to, true, timezone)?.valueOf();\n    const oneHour = 1000 * 60 * 60;\n    let range = 0;\n    let period = '1m';\n    if (from && until) {\n      range = until - from;\n    }\n    // 12h\n    if (range <= oneHour * 12) {\n      period = '1m';\n    }\n    // 3d\n    else if (range <= oneHour * 24 * 3) {\n      period = '30m';\n    }\n    // 7d\n    else if (range <= oneHour * 24 * 7) {\n      period = '1h';\n    } else {\n      period = '1d';\n    }\n    return period;\n  }\n\n  // 修改查询聚合周期\n  modifyTime(query: RUMQuery, period: string): RUMQuery {\n    if (!query.groupBy) {\n      return query;\n    }\n    for (const item of query.groupBy) {\n      if (item.type === 'time') {\n        const compareResult = this.periodCompare(String(item.params?.[0]) || '', period);\n        const isPeriodInparamsSmaller = compareResult && compareResult < 0;\n        // !compareResult代表输入的时间粒度无效\n        if (!compareResult || isPeriodInparamsSmaller) {\n          item.params = [period];\n        }\n        return query;\n      }\n    }\n    return query;\n  }\n  /**\n   * @param pre_period 粒度\n   * @param period 粒度\n   * @return 负数代表小于；0代表=；正数代表大于; null代表无效\n   */\n  periodCompare(pre_period: string, period: string): number | null {\n    const units = ['s', 'm', 'h', 'd'];\n    const reg = new RegExp(`(^\\\\d+)([${units.join('')}]$)`);\n    const pre = reg.exec(pre_period);\n    const per = reg.exec(period);\n    if (!pre || !per) {\n      return null;\n    }\n    if (units.indexOf(pre[2]) - units.indexOf(per[2])) {\n      return units.indexOf(pre[2]) - units.indexOf(per[2]);\n    }\n    return Number(pre[1]) - Number(per[1]);\n  }\n\n  testDatasource(): Promise<any> {\n    if (!this.instanceSettings.jsonData['RUMServiceEnabled']) {\n      return null;\n    }\n    const queryBuilder = new RUMQueryBuilder({ measurement: '', tags: [] }, '');\n    const query = queryBuilder.buildExploreQuery('MEASUREMENTS');\n\n    return this._seriesQuery(query)\n      .toPromise()\n      .then((res: any) => {\n        const error = get(res, 'data.Response.Error');\n        if (error) {\n          return { status: 'error', message: error?.Message };\n        }\n        return { status: 'success', message: 'Data source is working' };\n      })\n      .catch((err: any) => {\n        return { status: 'error', message: err.message };\n      });\n  }\n}\n","import * as _ from 'lodash';\nimport {\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceInstanceSettings,\n  LoadingState,\n  LogRowModel,\n  MetricFindValue,\n} from '@grafana/data';\nimport { combineLatest, Observable, of, from } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DataSourceWithBackend, getBackendSrv, getTemplateSrv } from '@grafana/runtime';\nimport { TCMonitorDatasource } from './tc_monitor/MonitorDatasource';\nimport { MyDataSourceOptions, QueryInfo, ServiceType, VariableQuery } from './types';\nimport { LogServiceDataSource } from './log-service/LogServiceDataSource';\nimport RUMServiceDataSource from './rum-service/RUMServiceDataSource';\nimport { IS_DEVELOPMENT_ENVIRONMENT } from './common/constants';\n\n/** 顶层数据源，内部根据配置与请求情况，请求具体的业务（monitor or logService） */\nexport class DataSource extends DataSourceWithBackend<QueryInfo, MyDataSourceOptions> {\n  readonly instanceSettings: DataSourceInstanceSettings<MyDataSourceOptions>;\n  readonly monitorDataSource: TCMonitorDatasource;\n  readonly logServiceDataSource: LogServiceDataSource;\n  readonly RUMServiceDataSource: RUMServiceDataSource;\n\n  constructor(instanceSettings: DataSourceInstanceSettings<MyDataSourceOptions>) {\n    super(instanceSettings);\n    this.instanceSettings = instanceSettings;\n    if (IS_DEVELOPMENT_ENVIRONMENT) {\n      (window as any).tcDatasource = this;\n    }\n\n    this.monitorDataSource = new TCMonitorDatasource(this.instanceSettings, getBackendSrv(), getTemplateSrv()) as any;\n    (this.monitorDataSource as any).meta = this.meta;\n    this.logServiceDataSource = new LogServiceDataSource(this.instanceSettings);\n    (this.logServiceDataSource as any).meta = this.meta;\n    this.RUMServiceDataSource = new RUMServiceDataSource(this.instanceSettings);\n    (this.RUMServiceDataSource as any).meta = this.meta;\n  }\n\n  query(request: DataQueryRequest<QueryInfo>): Observable<DataQueryResponse> {\n    const monitorTargets: QueryInfo[] = [];\n    const logServiceTargets: QueryInfo[] = [];\n    const RUMServiceTargets: QueryInfo[] = [];\n    for (const target of request.targets) {\n      if (target.serviceType === ServiceType.logService) {\n        logServiceTargets.push(target);\n      } else if (target.serviceType === ServiceType.RUMService) {\n        RUMServiceTargets.push(target);\n      } else {\n        monitorTargets.push(target);\n      }\n    }\n\n    const EmptyDataQueryResponse: DataQueryResponse = { data: [], state: LoadingState.Done };\n    return combineLatest<DataQueryResponse[]>([\n      monitorTargets.length\n        ? from(\n            this.monitorDataSource.query({\n              ..._.clone(_.omit(request, 'targets')),\n              targets: monitorTargets,\n            })\n          )\n        : of(EmptyDataQueryResponse),\n      logServiceTargets.length\n        ? this.logServiceDataSource.query({\n            ..._.clone(_.omit(request, 'targets')),\n            targets: logServiceTargets,\n          })\n        : of(EmptyDataQueryResponse),\n      RUMServiceTargets.length\n        ? this.RUMServiceDataSource.query({\n            ..._.clone(_.omit(request, 'targets')),\n            targets: RUMServiceTargets,\n          })\n        : of(EmptyDataQueryResponse),\n    ]).pipe(\n      map((responses: DataQueryResponse[]): DataQueryResponse => {\n        const errResponse = responses.find((item) => item.state === LoadingState.Error);\n        if (errResponse) {\n          return errResponse;\n        }\n        if (!responses.every((item) => item.state === LoadingState.Done)) {\n          return { data: [], state: LoadingState.Loading };\n        }\n        return {\n          data: responses.map((item) => item.data).flat(1),\n          state: LoadingState.Done,\n        };\n      })\n    );\n  }\n\n  async testDatasource() {\n    // 如果子服务没有开启，则返回null\n    const serviceTestResults = (\n      await Promise.all([this.monitorDataSource.testDatasource(), this.logServiceDataSource.testDatasource(), this.RUMServiceDataSource.testDatasource()])\n    ).filter(Boolean);\n\n    if (serviceTestResults.length === 0) {\n      return {\n        status: 'error',\n        message: \"Nothing configured. At least one of the API's services must be configured.\",\n      };\n    }\n\n    const failedResult = serviceTestResults.find((item) => item?.status !== 'success');\n    if (failedResult) {\n      return failedResult;\n    } else {\n      return serviceTestResults[0];\n    }\n  }\n\n  async metricFindQuery(query: string | VariableQuery, options): Promise<MetricFindValue[]> {\n    if (_.isString(query) || query.serviceType === ServiceType.monitor) {\n      return this.monitorDataSource.metricFindQuery(_.isString(query) ? query : query.queryString, options);\n    }\n    if (query.serviceType === ServiceType.logService){\n      return this.logServiceDataSource.metricFindQuery(query.logServiceParams, options);\n    }\n    if (query.serviceType === ServiceType.RUMService){\n      return this.RUMServiceDataSource.metricFindQuery(query.queryString, options);\n    }\n    return [];\n  }\n\n  getLogRowContext = (row: LogRowModel, options) => {\n    return this.logServiceDataSource.getLogRowContext(row, options);\n  };\n\n  showContextToggle = (row: LogRowModel) => {\n    return false;\n    // return this.logServiceDataSource.showContextToggle(row);\n  };\n}\n","import React, { FormEvent, PureComponent } from 'react';\nimport { LegacyForms, InlineFieldRow, InlineField, Input, Switch, Select } from '@grafana/ui';\nimport { DataSourcePluginOptionsEditorProps, SelectableValue } from '@grafana/data';\nimport { MyDataSourceOptions, MySecureJsonData } from '../types';\nimport { SERVICES } from '../tc_monitor';\nimport { t, setLanguage, Language } from '../../locale'\nconst { SecretFormField } = LegacyForms;\n\ntype Props = DataSourcePluginOptionsEditorProps<MyDataSourceOptions, MySecureJsonData>;\n\ninterface State {\n  monitorFilter: string;\n}\n\nexport class ConfigEditor extends PureComponent<Props, State> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      monitorFilter: '',\n    };\n    setLanguage(props.options.jsonData.language || Language.Chinese)\n  }\n\n  patchJsonData = (kv: Record<string, any>) => {\n    const { onOptionsChange, options } = this.props;\n    if (kv) {\n      const jsonData = {\n        ...options.jsonData,\n        ...kv,\n      };\n      onOptionsChange({ ...options, jsonData });\n    }\n  };\n\n  onJsonDataChange = (event: FormEvent<HTMLInputElement>) => {\n    const { onOptionsChange, options } = this.props;\n    const targetName = event?.currentTarget?.name;\n    const targetValue = (event?.currentTarget?.value || '').trim();\n    if (targetName) {\n      const jsonData = {\n        ...options.jsonData,\n        [targetName]: targetValue,\n      };\n      onOptionsChange({ ...options, jsonData });\n    }\n  };\n\n  // Secure field (only sent to the backend)\n  onSecureJsonChange = (event: FormEvent<HTMLInputElement>) => {\n    const { onOptionsChange, options } = this.props;\n    const targetName = event?.currentTarget?.name;\n    const targetValue = (event?.currentTarget?.value || '').trim();\n    if (targetName) {\n      onOptionsChange({\n        ...options,\n        secureJsonData: {\n          ...options.secureJsonData,\n          [targetName]: targetValue,\n        },\n      });\n    }\n  };\n\n  onResetSecureJson = (key: string) => {\n    const { onOptionsChange, options } = this.props;\n    if (key) {\n      onOptionsChange({\n        ...options,\n        secureJsonFields: {\n          ...options.secureJsonFields,\n          [key]: false,\n        },\n        secureJsonData: {\n          ...options.secureJsonData,\n          [key]: '',\n        },\n      });\n    }\n  };\n\n  render() {\n    const { options } = this.props;\n    const { jsonData, secureJsonFields, secureJsonData } = options;\n    return (\n      <>\n        <div>\n          <h3 className=\"page-heading\">Security Credentials</h3>\n          <div\n            className=\"card-item\"\n            style={{\n              position: 'relative',\n              marginTop: '16px',\n              padding: '16px',\n              WebkitBoxFlex: 1,\n              flexGrow: 1,\n              borderTop: '3px solid rgb(50, 115, 217)',\n            }}\n          >\n            <div>\n              <h4>Initialize Tencent Cloud Monitor Grafana App</h4>\n              <p>\n                To initialize the App and connect it to your Tencent Cloud service you will need a SecretId and a\n                SecretKey for you Tencent Cloud account.\n                <br />\n                <b>SecretId</b> is used to identify the identity of the API caller.\n                <br />\n                <b>SecretKey</b> is used to encrypt the signature and validate the signature of the server-side.\n              </p>\n            </div>\n            <div>\n              <h5>User Permission</h5>\n              <p>\n                If you are using a\n                <a\n                  className=\"highlight-word\"\n                  href=\"https://intl.cloud.tencent.com/document/product/598/13674\"\n                  target=\"_blank\"\n                  style={{ margin: '0 4px' }}\n                >\n                  sub-user\n                </a>\n                account, you should at least own read permission to the cloud products you wish to monitor.\n              </p>\n              <a className=\"highlight-word\" href=\"https://console.cloud.tencent.com/cam/capi\" target=\"_blank\">\n                Generate a new Tencent Cloud API key\n              </a>\n            </div>\n          </div>\n        </div>\n\n        <div style={{ marginTop: 20 }}>\n          <InlineFieldRow>\n            <InlineField label=\"SecretId\" labelWidth={20} required={true}>\n              <Input\n                width={50}\n                required={true}\n                value={jsonData.secretId}\n                name=\"secretId\"\n                onChange={this.onJsonDataChange}\n              />\n            </InlineField>\n          </InlineFieldRow>\n          <InlineFieldRow>\n            <SecretFormField\n              label=\"SecretKey\"\n              labelWidth={10}\n              inputWidth={25}\n              type=\"password\"\n              name=\"secretKey\"\n              value={secureJsonData?.secretKey || ''}\n              isConfigured={secureJsonFields?.secretKey}\n              onChange={this.onSecureJsonChange}\n              onReset={() => {\n                this.onResetSecureJson('secretKey');\n              }}\n            />\n          </InlineFieldRow>\n          <InlineFieldRow style={{ marginTop: '10px' }}>\n            <InlineField label={t('language')} labelWidth={20}>\n              <Select\n                value={jsonData.language || Language.Chinese}\n                className=\"width-10\"\n                options={[{ value: Language.English, label: 'English' }, { value: Language.Chinese, label: '简体中文' }]}\n                onChange={(option: SelectableValue<Language>) => {\n                  setLanguage(option.value)\n                  this.patchJsonData({\n                    language: option.value,\n                  });\n                }}\n              />\n            </InlineField>\n          </InlineFieldRow>\n          <InlineFieldRow style={{ marginTop: '10px' }}>\n            <InlineField label={t('enable_intranet_API_mode')} labelWidth={20}>\n              <InlineSwitch\n                value={jsonData.intranet}\n                onChange={(e) => {\n                  // onIntranetChange\n                  this.patchJsonData({\n                    intranet: e.currentTarget.checked,\n                  });\n                }}\n              />\n            </InlineField>\n          </InlineFieldRow>\n        </div>\n\n        {this.renderRUMConfig()}\n        {this.renderLogServiceConfig()}\n        {this.renderMonitorConfig()}\n      </>\n    );\n  }\n\n  renderRUMConfig() {\n    const { options } = this.props;\n    const { jsonData } = options;\n    return (\n      <div style={{ marginTop: 30 }}>\n        <h3 className=\"page-heading\">Real User Monitoring</h3>\n        <InlineFieldRow>\n          <InlineField labelWidth={40} label={t('RUM')}>\n            <InlineSwitch\n              value={jsonData.RUMServiceEnabled}\n              onChange={(e) => {\n                this.patchJsonData({\n                  RUMServiceEnabled: e.currentTarget.checked,\n                });\n              }}\n            />\n          </InlineField>\n        </InlineFieldRow>\n      </div>\n    )\n  }\n\n  renderLogServiceConfig() {\n    const { options } = this.props;\n    const { jsonData } = options;\n    return (\n      <div style={{ marginTop: 30 }}>\n        <h3 className=\"page-heading\">Log Service</h3>\n        <InlineFieldRow>\n          <InlineField labelWidth={40} label={t('CLS')}>\n            <InlineSwitch\n              value={jsonData.logServiceEnabled}\n              onChange={(e) => {\n                this.patchJsonData({\n                  logServiceEnabled: e.currentTarget.checked,\n                });\n              }}\n            />\n          </InlineField>\n        </InlineFieldRow>\n      </div>\n    );\n  }\n\n  renderMonitorConfig() {\n    const { options } = this.props;\n    const { jsonData } = options;\n    const { monitorFilter } = this.state;\n    // 使用 product 表示云监控业务下的云产品\n    const filteredProducts = SERVICES.filter((item) => item.label.toLowerCase().includes(monitorFilter.toLowerCase()));\n    return (\n      <div style={{ marginTop: 30 }}>\n        <h3 className=\"page-heading\">Monitor Services</h3>\n        <InlineFieldRow style={{ marginBottom: 10 }}>\n          <InlineField>\n            <Input\n              placeholder=\"Input keyword to filter...\"\n              width={40}\n              value={monitorFilter}\n              onChange={(e) => {\n                this.setState({\n                  monitorFilter: e.currentTarget.value,\n                });\n              }}\n            />\n          </InlineField>\n          <InlineField label=\"Select All\" style={{ marginLeft: 20 }}>\n            <InlineSwitch\n              value={filteredProducts.every((product) => jsonData[product.service])}\n              onChange={(e) => {\n                const toChecked = e.currentTarget.checked;\n                const allCheckObject = {};\n                filteredProducts.forEach((product) => {\n                  allCheckObject[product.service] = toChecked;\n                });\n                this.patchJsonData(allCheckObject);\n              }}\n            />\n          </InlineField>\n        </InlineFieldRow>\n        {filteredProducts.map((product) => {\n          return (\n            <InlineFieldRow key={product.service}>\n              <InlineField\n                labelWidth={55}\n                label={product.label}\n                tooltip={\n                  <a target=\"_blank\" href={product.href}>\n                    {`Click here for more information of ${product.label}.`}\n                  </a>\n                }\n              >\n                <InlineSwitch\n                  value={Boolean(jsonData[product.service])}\n                  onChange={(e) => {\n                    this.patchJsonData({\n                      [product.service]: e.currentTarget.checked,\n                    });\n                  }}\n                />\n              </InlineField>\n            </InlineFieldRow>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\n// @grafana/ui 7.3.6版本不含 InlineSwitch 组件，这里打个补丁。提升最小支持版本后，可移除\nfunction InlineSwitch(props) {\n  return (\n    <div\n      style={{\n        padding: '0px 8px',\n        height: 32,\n        display: 'inline-flex',\n        WebkitBoxAlign: 'center',\n        alignItems: 'center',\n        // background: '#F4F5F5',\n        border: '1px solid rgba(204, 204, 220, 0.15)',\n        borderRadius: 2,\n      }}\n    >\n      <Switch {...props} />\n    </div>\n  );\n}\n","import { DataSourcePlugin } from '@grafana/data';\nimport { QueryEditor } from './QueryEditor';\nimport { VariableQueryEditor } from './VariableQueryEditor';\nimport { DataSource } from './DataSource';\nimport { ConfigEditor } from './config-editor/ConfigEditor';\n\nexport const plugin = new DataSourcePlugin<any>(DataSource)\n  .setQueryEditor(QueryEditor)\n  .setConfigEditor(ConfigEditor)\n  .setVariableQueryEditor(VariableQueryEditor);\n"],"sourceRoot":""}