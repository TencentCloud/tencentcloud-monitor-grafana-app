{"version":3,"sources":["webpack://TencentCloudMonitorGrafanaApp/webpack/bootstrap","webpack://TencentCloudMonitorGrafanaApp/external \"lodash\"","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/_base/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/common/sign.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/common/signV2.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/common/constants.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/common/utils.ts","webpack://TencentCloudMonitorGrafanaApp/external \"app/core/core_module\"","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/_base/query.ts","webpack://TencentCloudMonitorGrafanaApp/../node_modules/crypto-js/core.js","webpack://TencentCloudMonitorGrafanaApp/./datasource/common/indexedDB.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/common/datasourceStorage.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/index.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tdmq/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcdb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/gse/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/../node_modules/crypto-js/cipher-core.js","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/clb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm_block_storage/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/apigateway/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ckafka/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/v_clb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cynosdb_mysql/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/scf/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/sqlserver/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/external \"@grafana/runtime\"","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bmIntraLb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bm_lb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bm_pcx/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cbs/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdn_province/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ceip_summary/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cmq_topic/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cpm/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/postgresql/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tcaplus/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpc_net_detect/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ces/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dc/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcg/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcx/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm_lb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/qaap/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/redis_mem/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vbc/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpngw/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpnx/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/waf/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cfs/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cmq/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cvm/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/mr/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/pcx/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/redis/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/../node_modules/crypto-js/enc-base64.js","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bwp/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdn/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/lb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/mongodb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/nat_gateway/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ov_cdn/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/../node_modules/crypto-js/evpkdf.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/crypto-js/md5.js","webpack://TencentCloudMonitorGrafanaApp/external \"moment\"","webpack://TencentCloudMonitorGrafanaApp/external \"angular\"","webpack://TencentCloudMonitorGrafanaApp/../node_modules/crypto-js/x64-core.js","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/apigateway/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bmIntraLb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bm_lb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bm_pcx/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bwp/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cbs/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdn/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdn_province/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ceip_summary/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ces/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cfs/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ckafka/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/clb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cmq/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cmq_topic/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cos/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cpm/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cvm/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cynosdb_mysql/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dc/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcdb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcg/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcx/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm_block_storage/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm_lb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/gse/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/lb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/mongodb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/mr/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/nat_gateway/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ov_cdn/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/pcx/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/postgresql/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/qaap/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/redis/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/redis_mem/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/scf/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/sqlserver/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tcaplus/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tdmq/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/v_clb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vbc/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpc_net_detect/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpngw/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpnx/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/waf/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/../node_modules/crypto-js/sha1.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/crypto-js/hmac.js","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/apigateway/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bmIntraLb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bm_lb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bm_pcx/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bwp/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cbs/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdn/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdn_province/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ceip_summary/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ces/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cfs/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ckafka/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/clb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cmq/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cmq_topic/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cos/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cpm/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cvm/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cynosdb_mysql/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dc/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcdb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcg/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcx/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm_block_storage/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm_lb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/gse/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/lb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/mongodb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/mr/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/nat_gateway/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ov_cdn/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/pcx/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/postgresql/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/qaap/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/redis/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/redis_mem/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/scf/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/sqlserver/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tcaplus/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tdmq/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/v_clb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vbc/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpc_net_detect/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpngw/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpnx/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/waf/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor sync ^.*$","webpack://TencentCloudMonitorGrafanaApp/../node_modules/qs/lib/utils.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/qs/lib/formats.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/crypto-js/sha256.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/crypto-js/sha512.js","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/_base/query_filter.ts","webpack://TencentCloudMonitorGrafanaApp/../node_modules/qs/lib/index.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/dot-qs/index.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/crypto-js/index.js","webpack://TencentCloudMonitorGrafanaApp/external \"app/plugins/sdk\"","webpack://TencentCloudMonitorGrafanaApp/external \"@grafana/ui\"","webpack://TencentCloudMonitorGrafanaApp/external \"react\"","webpack://TencentCloudMonitorGrafanaApp/external \"react-dom\"","webpack://TencentCloudMonitorGrafanaApp/./datasource/partials/query.editor.html","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor sync ^\\.\\/[a-zA-Z]\\w+\\/(datasource)|(query(_def)","webpack://TencentCloudMonitorGrafanaApp/../node_modules/qs/lib/stringify.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/qs/lib/parse.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/dot-qs/lib/dot-querystring.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/@grafana/toolkit/node_modules/webpack/buildin/module.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/crypto-js/lib-typedarrays.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/crypto-js/enc-utf16.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/crypto-js/sha224.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/crypto-js/sha384.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/crypto-js/sha3.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/crypto-js/ripemd160.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/crypto-js/pbkdf2.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/crypto-js/mode-cfb.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/crypto-js/mode-ctr.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/crypto-js/mode-ctr-gladman.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/crypto-js/mode-ofb.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/crypto-js/mode-ecb.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/crypto-js/pad-ansix923.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/crypto-js/pad-iso10126.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/crypto-js/pad-iso97971.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/crypto-js/pad-zeropadding.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/crypto-js/pad-nopadding.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/crypto-js/format-hex.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/crypto-js/aes.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/crypto-js/tripledes.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/crypto-js/rc4.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/crypto-js/rabbit.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/crypto-js/rabbit-legacy.js","webpack://TencentCloudMonitorGrafanaApp/./datasource/css/query_editor.css?eb2b","webpack://TencentCloudMonitorGrafanaApp/../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://TencentCloudMonitorGrafanaApp/./datasource/css/query_editor.css","webpack://TencentCloudMonitorGrafanaApp/../node_modules/css-loader/dist/runtime/api.js","webpack://TencentCloudMonitorGrafanaApp/./datasource/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/components/multi_condition.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/components/custom_select_dropdown.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/common/react-loader.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/components/cascader.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/partials/queryEditorTemplate.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/query.ctrl.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/config.ctrl.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/module.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","instanceSettings","backendSrv","templateSrv","instanceListCache","extraMetricDims","checkKeys","MetricReqConfig","extrasAlias","queryMonitorExtraConfg","this","url","secretId","jsonData","Namespace","service","getOtherAlias","instance","target","result","alias","_InstanceAliasValue","forEach","extra","extraAlia","indexOf","getAliasValue","Array","isArray","join","formatVarDisplay","displayTpl","instanceAlias","replace","a","b","InstanceAliasList","includes","metricFindQuery","query","regex","action","namespace","display","payload","region","instancealias","templateQueryIdMap","match","getRegions","getVariable","getVariableInstances","res","flatMap","item","insAlias","text","setInstance","getInstance","instanceCache","cloneDeep","find","fetchMetricData","Promise","resolve","dimensionsFormat","dimKeys","ins","dimensionObject","options","keyTmp","invalidDim","InvalidDimensions","getInvalidDimensions","extraDimValue","dim_KeyInStorage","dim_KeyInTarget","dim_KeyInMap","scopedVars","extraSourceMap","JSON","parse","getExtraStorage","extraStorage","otherAlias","length","Ekey","Name","Value","queries","filter","targets","hide","metricName","isEmpty","map","instances","concat","inst","error","insInReq","keys","dimResult","push","Dimensions","data","StartTime","range","from","format","EndTime","to","Period","period","Instances","MetricName","getMonitorData","all","then","responses","flatten","getInstanceReqConfig","selfIns","metric","rs","trim","valStr","split","params","serviceInfo","doRequest","path","response","RegionSet","RegionName","Region","RegionState","getMetrics","MetricSet","resFilterFn","resultFilter","getInstances","InstanceReqConfig","field","interceptor","Offset","Limit","request","Error","total","TotalCount","TotalCnt","param","isValidConfigField","testDatasource","cvmErr","monitorErr","serviceErr","cvmAuthFail","monitorAuthFail","serviceAuthFail","messages","message","compact","uniq","status","title","statusText","code","signObj","id","datasourceRequest","host","version","datasourceId","stringify","nowDate","utc","timestamp","unix","date","getHeader","method","Query","Host","Service","Version","Action","Timestamp","Method","Uri","Body","Headers","refId","authorization","parseDataFromBackendPlugin","grafanaVersion","window","grafanaBootData","settings","buildInfo","Authorization","toString","defaults","generateQueryString","signer","Path","queryString","generateSignature","para","sort","queryStr","val","isNaN","slice","sign","secretKey","str","assign","FINACE_REGIONS","SERVICES_API_INFO","api","monitor","cvm","cdb","pcx","vpc","mongodb","clb","postgres","cdn","redis","scf","cfs","ckafka","dc","cynosdb","sqlserver","bm","bmeip","bmvpc","bmlb","es","emr","cmq","cbs","tcaplusdb","dcdb","apigateway","tdmq","gaap","ecm","gse","FINACE_HOST","GetServiceAPIInfo","__","getHostAndPath","GetServiceFromNamespace","ParseMetricQuery","e","toLower","ReplaceVariable","multiple","varname","varFlag","regResult1","String","regResult2","parseVariableFormat","replaceVar","GetDimensions","obj","dimensions","undefined","ParseQueryResult","instanceList","dataPoints","dataPoint","instanceAliasValue","isInstanceMatch","splice","datapoints","parseDataPoint","timestamps","values","index","isVariable","GetRequestParams","signParams","pick","headerSigned","headers","GetRequestParamsV2","SliceLength","len","num","Math","ceil","getFieldsValue","fields","fetchAllFactory","fetcher","_params","Result","firstLists","delta","batchCount","pmList","fill","_","reduce","acc","cur","lists","list","instanceQueryParamsBaseParse","isFilter","omit","Values","isObject","isNumber","Filters","getNamesapceFromService","serviceName","serviceGroupBy","services","label","groupName","existedGroup","items","__WEBPACK_EXTERNAL_MODULE__4__","config","detailConfig","QueryCtrl","newQueryIns","$scope","$rootScope","getDropdown","datasource","getFilterDropdown","directive","template","controller","restrict","scope","showDetail","getDropdownOptions","onChange","CryptoJS","F","subtype","C","C_lib","lib","Base","extend","overrides","mixIn","init","$super","apply","arguments","properties","propertyName","clone","WordArray","words","sigBytes","encoder","Hex","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","random","nBytes","rcache","m_w","m_z","mask","_r","C_enc","enc","hexChars","bite","hexStr","hexStrLength","parseInt","substr","Latin1","latin1Chars","fromCharCode","latin1Str","latin1StrLength","charCodeAt","Utf8","decodeURIComponent","escape","utf8Str","unescape","encodeURIComponent","BufferedBlockAlgorithm","reset","_data","_nDataBytes","_append","_process","doFlush","dataWords","dataSigBytes","blockSize","nBlocksReady","nWordsReady","max","_minBufferSize","nBytesReady","min","offset","_doProcessBlock","processedWords","C_algo","Hasher","cfg","_doReset","update","messageUpdate","finalize","_doFinalize","_createHelper","hasher","_createHmacHelper","HMAC","algo","store","promisify","type","reject","onsuccess","event","returnMap","msg","onerror","props","initDB","indexedDB","webkitIndexedDB","mozIndexedDB","msIndexedDB","open","onupgradeneeded","db","objectStoreNames","contains","createObjectStore","keyPath","openDB","insertData","storeName","transaction","objectStore","add","oncomplete","addData","isCover","getData","oldData","getObjectStore","newData","requestUpdate","put","seviceName","getAllData","getAll","insKey","cacheWay","setStorage","getStorage","setExtraStorage","EValue","serviceKey","storage","SERVICES","href","hideRegion","Datasources","InitStates","GetInstanceQueryParams","hackModuleName","postgresql","mr","filePath","moduleName","fileName","prefix","toUpperCase","getParams","queryEditorName","TDMQInvalidDemensions","tenantId","topicName","environmentId","TDMQInstanceAliasList","TDMQFilterFieldsDescriptor","enDescriptor","cnDescriptor","link","CDNPROVINCE_STATE","metricUnit","regionSupported","modifyDimensons","metricItem","metricTmp","keyInStorage","TopicName","EnvironmentId","DCDBInvalidDemensions","nodeid","instanceid","shardid","ShardId","DCDBInstanceAliasList","NodeId","ShardInstanceId","DCDBFilterFieldsDescriptor","queryEditorConfig","instanceDocUrl","fieldDescriptor","DCDB_STATE","InstanceIds","SearchName","SearchKey","ProjectIds","VpcId","SubnetId","OrderBy","OrderByType","ExclusterType","ExclusterIds","FilterInstanceType","modifyMetricConf","v","IsFilterVpc","IsFilterExcluster","fleetId","GSEInvalidDemensions","fleetid","queuename","GSEInstanceAliasList","FleetId","fleet","queue","GSEFilterFieldsDescriptor","GSE_STATE","InstanceId","Base64","EvpKDF","Cipher","C_mode","BlockCipherMode","CBC","Pkcs7","CipherParams","OpenSSLFormatter","SerializableCipher","OpenSSLKdf","PasswordBasedCipher","createEncryptor","_ENC_XFORM_MODE","createDecryptor","_DEC_XFORM_MODE","xformMode","_xformMode","_key","process","dataUpdate","keySize","ivSize","selectCipherStrategy","cipher","encrypt","decrypt","ciphertext","StreamCipher","iv","Encryptor","Decryptor","_cipher","_iv","xorBlock","block","_prevBlock","processBlock","encryptBlock","thisBlock","decryptBlock","pad","blockSizeBytes","nPaddingBytes","paddingWord","paddingWords","padding","unpad","BlockCipher","modeCreator","_mode","__creator","finalProcessedBlocks","cipherParams","formatter","OpenSSL","salt","openSSLStr","ciphertextWords","encryptor","cipherCfg","algorithm","_parse","kdf","execute","password","compute","derivedParams","LOADBALANCEFieldsDescriptor","LOADBALANCE_STATE","Port","Protocol","listener","LoadBalancerIds","Forward","LoadBalancerName","Domain","LoadBalancerVips","BackendPublicIps","BackendPrivateIps","ProjectId","WithRs","SecurityGroup","MasterZone","OrderType","LOADBALANCEListenerAliasList","LOADBALANCEVALIDDIMENSIONS","vip","loadBalancerPort","protocol","ECMBLOCKSTORAGEInvalidDemensions","uuid","diskId","ECMBLOCKSTORAGEInstanceAliasList","ECMBLOCKSTORAGEFilterFieldsDescriptor","ECMBLOCKSTORAGE_STATE","DiskId","APIGATEWAYInvalidDemensions","serviceId","environmentName","apiid","apiId","APIGATEWAYInstanceAliasList","environmentList","EnvironmentName","APIGATEWAYFilterFieldsDescriptor","APIGATEWAY_STATE","ServiceId","ServiceName","NotUsagePlanId","Environment","IpVersion","CKAFKAQueryDescriptor","CKAFKA_STATE","topicId","consumerGroup","partition","Status","SearchWord","TagKey","CKAFKAInstanceAliasList","CKAFKATopicAliasList","CKAFKAInvalidDemensions","instanceId","TopicList","GroupList","PartitionList","TopicId","GroupName","Partition","VCLBInvalidDemensions","VCLBInstanceAliasList","VCLBFilterFieldsDescriptor","VCLB_STATE","clbNamespaceMap","public","private","cynosdbMysqlFilterFieldsDescriptor","CYNOSDB_STATE","DbType","CYNOSDBMYSQLInstanceAliasList","CYNOSDBInvalidDemensions","SCFQueryDescriptor","SCF_STATE","Order","Description","SCFInstanceAliasList","SCFInvalidDemensions","functionName","SCFDefaultDimensionList","SQLSERVERInvalidDemensions","resourceId","SQLSERVERInstanceAliasList","SQLSERVERNETFilterFieldsDescriptor","SQLSERVER_STATE","InstanceIdSet","PayMode","VipSet","InstanceNameSet","VersionSet","Zone","__WEBPACK_EXTERNAL_MODULE__21__","BMINTRALBInvalidDemensions","vpcId","BMINTRALBInstanceAliasList","BMINTRALBFilterFieldsDescriptor","BMINTRALB_STATE","BMLBValidMetricsT","isValidMetric","validMetrics","toUpper","CPMInvalidDemensions","BMLBInstanceAliasList","CPMFilterFieldsDescriptor","CPM_STATE","BMPCXInvalidDemensions","peeringConnectionId","BMPCXInstanceAliasList","BMPCXFilterFieldsDescriptor","BMPCX_STATE","VpcPeerConnectionIds","CBSInvalidDemensions","diskname","unInstanceId","CBSInstanceAliasList","CBSFilterFieldsDescriptor","CBS_STATE","DiskIds","OrderField","ReturnBindAutoSnapshotPolicy","metricObj","dimension","CDNPROVINCEInvalidDemensions","domain","projectid","province","appid","CDNPROVINCEInstanceAliasList","CDNPROVINCEFilterFieldsDescriptor","isp","district","origin","serviceType","projectId","domainType","fullUrlCache","https","originPullProtocol","tagKey","CEIPInvalidDemensions","eip","CEIPSUMMARYInstanceAliasList","CEIPFilterFieldsDescriptor","CEIP_STATE","InstanceQueryDescriptor","InvalidDemensions","subscription","subscriptionId","CPMInstanceAliasList","DeviceClassCode","WanIps","LanIps","Alias","VagueIp","AutoRenewFlag","DeviceType","IsLuckyDevice","ECMInvalidDemensions","ECMInstanceAliasList","ECMFilterFieldsDescriptor","ECM_STATE","zone","PostgresFieldsDescriptor","POSTGRESInstanceAliasList","POSTGRES_STATE","PostgreInvalidDemensions","uid","TCAPLUSInvalidDemensions","TCAPLUSInstanceAliasList","TCAPLUSFilterFieldsDescriptor","TCAPLUS_STATE","ClusterId","TableGroupIds","TableName","TableInstanceId","TableIdlType","TableType","ListElementNum","ReservedVolume","ReservedReadQps","ReservedWriteQps","Memo","FileName","FileExtType","FileSize","FileContent","SelectedTables","regonsMap","VPCNETInvalidDemensions","netdetectid","netDetectId","VPCNETDETECTInstanceAliasList","VPCNETFilterFieldsDescriptor","VPCNET_STATE","CESInvalidDemensions","uInstanceId","CESInstanceAliasList","CESFilterFieldsDescriptor","CES_STATE","InstanceNames","OrderByKey","IpList","DCFilterFieldsDescriptor","DC_STATE","DirectConnectIds","DCInstanceAliasList","DCInvalidDemensions","directConnectId","directconnectid","DCGInvalidDemensions","directConnectGatewayId","DCGInstanceAliasList","DCGFilterFieldsDescriptor","DCG_STATE","DCXFilterFieldsDescriptor","DCX_STATE","DCXInstanceAliasList","DCXInvalidDemensions","directconnectconnid","directConnectConnId","ECMLBInvalidDemensions","ECMLBInstanceAliasList","ECMLBFilterFieldsDescriptor","QAAPInvalidDemensions","channelId","QAAPInstanceAliasList","QAAPFilterFieldsDescriptor","QAAP_STATE","AccessRegion","RealServerRegion","GroupId","RedisMemFieldsDescriptor","REDISMEM_STATE","VpcIds","SubnetIds","InstanceName","UniqVpcIds","UniqSubnetIds","TypeVersion","EngineName","AutoRenew","BillingMode","Type","REDISMEMInstanceAliasList","RedisMemInvalidDemensions","VBCInvalidDemensions","VBCInstanceAliasList","VBCFilterFieldsDescriptor","VBC_STATE","DRegion","SRegion","state","VPNGWInvalidDemensions","vpnGwId","VPNGWInstanceAliasList","VPNGWFilterFieldsDescriptor","VPNGW_STATE","VPNXInvalidDemensions","vpnConnId","VPNXInstanceAliasList","VPNXFilterFieldsDescriptor","VPNX_STATE","WAFFilterFieldsDescriptor","WAF_STATE","WAFInstanceAliasList","WAFInvalidDemensions","CDBFieldsDescriptor","CDB_STATE","InstanceTypes","Vips","SecurityGroupId","PayTypes","TaskStatus","EngineVersions","ZoneIds","CdbErrors","OrderDirection","InitFlag","CDBInstanceAliasList","CDBInvalidDemensions","insttype","CFSQueryDescriptor","CFS_STATE","FileSystemId","CFSInstanceAliasList","CFSInvalidDemensions","queueId","queueName","QueueName","CVMFilterFieldsDescriptor","CVM_STATE","instanceIdsChecked","filtersChecked","CVMInstanceAliasList","CVMValidMetricsT","CVMValidMetrics","Proxy","k","receiver","startsWith","Reflect","has","propKey","nodeIP","DisplayStrategy","Asc","PCX_STATE","limit","peeringConnectionName","PCXFieldsDescriptor","PCXInstanceAliasList","RedisFieldsDescriptor","REDIS_STATE","REDISInstanceAliasList","RedisInvalidDemensions","redis_uuid","_map","base64Chars","triplet","j","charAt","paddingChar","base64Str","base64StrLength","reverseMap","_reverseMap","paddingIndex","bits1","bits2","parseLoop","BWPFilterFieldsDescriptor","BWP_STATE","BandwidthPackageIds","BWPInstanceAliasList","BWPInvalidDemensions","bandwidthPackageId","CDNFilterFieldsDescriptor","CDN_STATE","CDNInstanceAliasList","CDNInvalidDemensions","LBFilterDescriptor","LB_STATE","LBInstanceAliasList","LBInvalidDemensions","MONGODBFieldsDescriptor","MONGODB_STATE","InstanceType","ClusterType","MONGODBInstanceAliasList","MONGODBInvalidDemensions","NATGATEWAYInstanceAliasList","NATGatewayFilterFieldsDescriptor","NATGATEWAY_STATE","NatGatewayIds","NATInvalidDemensions","natId","OVCDNFilterFieldsDescriptor","OVCDN_STATE","OVCDNInstanceAliasList","OVCDNInvalidDemensions","MD5","iterations","derivedKey","derivedKeyWords","T","abs","sin","_hash","M","offset_i","M_offset_i","H","M_offset_0","M_offset_1","M_offset_2","M_offset_3","M_offset_4","M_offset_5","M_offset_6","M_offset_7","M_offset_8","M_offset_9","M_offset_10","M_offset_11","M_offset_12","M_offset_13","M_offset_14","M_offset_15","FF","GG","HH","II","nBitsTotal","nBitsLeft","nBitsTotalH","floor","nBitsTotalL","hash","H_i","x","HmacMD5","__WEBPACK_EXTERNAL_MODULE__61__","__WEBPACK_EXTERNAL_MODULE__62__","X32WordArray","C_x64","x64","Word","high","low","toX32","x64Words","x64WordsLength","x32Words","x64Word","wordsLength","responseField","getEnvironmentNameList","LoadBalancerType","RegionMap","keyBy","RegionInfoSet","RegionDescription","rawSet","getZones","ZoneSet","ZoneName","ZoneId","ZoneState","getConsumerList","MapInfoList","TopicAliasList","getConsumerGroups","uniqBy","formatTopicVarDisplay","topic","topicAlias","topicalias","group","par","ListenerAliasList","getListenerList","LoadBalancerId","formatListenerVarDisplay","listenerAlias","listenAlias","lisId","dims","Set","fetchAllSubscription","SubscriptionId","cosURL","Buckets","BucketName","bucket","regionList","DeviceClassSet","Product","extraActionMap","DescribeDCDBShards","pickKey","DescribeDCDBInstanceNodeInfo","act","getDiskList","instanceObj","getQueueNameList","getFleetList","ClusterName","fetchAllNodes","Ip","NodeFlag","doRequestV2","totalCount","getVpcId","VpcSet","getVpcIds","MonitorVersion","getVersions","Versions","FunctionName","RegionInfos","DescribeTopics","DescribeEnvironments","getAllMetrics","public_metrics","private_metrics","W","SHA1","HmacSHA1","_hasher","hasherBlockSize","hasherBlockSizeBytes","oKey","_oKey","iKey","_iKey","oKeyWords","iKeyWords","innerHash","getInstanceId","getServiceFn","getExtraDropdown","sQuery","onRefresh","onChecked","srcField","dstField","bwpQuery","BWPQueryCtrl","cdbQuery","CDBQueryCtrl","cdnQuery","CDNQueryCtrl","ExtraFields","scfQuery","SCFQueryCtrl","consumerGroupCacheMap","getExtraFields","CKAFKAQueryCtrl","onFieldChange","cacheMap","getTopicName","onExtraFieldChange","datas","CmqTopicQueryCtrl","cvmQuery","CVMQueryCtrl","dropdownTextConfig","actionMaps","lbQuery","LBQueryCtrl","mongodbQuery","MongoDBQueryCtrl","some","mrQuery","MrQueryCtrl","natGatewayQuery","NatGatewayQueryCtrl","ovCdnQuery","OVCDNQueryCtrl","pcxQuery","PCXQueryCtrl","redisQuery","RedisQueryCtrl","redisMemQuery","RedisMemQueryCtrl","evId","VBCQueryCtrl","webpackContext","req","webpackContextResolve","hexTable","array","arrayToObject","source","plainObjects","prop","refs","pop","compacted","compactQueue","decode","encode","string","out","isBuffer","constructor","isRegExp","merge","allowPrototypes","mergeTarget","percentTwenties","formatters","RFC1738","RFC3986","K","isPrime","sqrtN","sqrt","factor","getFractionalBits","nPrime","pow","SHA256","f","g","h","gamma0x","gamma0","gamma1x","gamma1","maj","sigma0","t1","HmacSHA256","X64Word","X64WordArray","X64Word_create","SHA512","H0","H1","H2","H3","H4","H5","H6","H7","H0h","H0l","H1h","H1l","H2h","H2l","H3h","H3l","H4h","H4l","H5h","H5l","H6h","H6l","H7h","H7l","ah","al","bh","bl","ch","cl","dh","dl","eh","el","fh","fl","gh","gl","hh","hl","Wi","Wih","Wil","gamma0xh","gamma0xl","gamma0h","gamma0l","gamma1xh","gamma1xl","gamma1h","gamma1l","Wi7","Wi7h","Wi7l","Wi16","Wi16h","Wi16l","t1l","chh","chl","majh","majl","sigma0h","sigma0l","sigma1h","sigma1l","Ki","Kih","Kil","t1h","t2l","HmacSHA512","SPQueryCtrl","_config","queryDDO","formats","__WEBPACK_EXTERNAL_MODULE__173__","__WEBPACK_EXTERNAL_MODULE__174__","__WEBPACK_EXTERNAL_MODULE__175__","__WEBPACK_EXTERNAL_MODULE__176__","utils","arrayPrefixGenerators","brackets","indices","repeat","toISO","Date","toISOString","delimiter","encodeValuesOnly","serializeDate","skipNulls","strictNullHandling","generateArrayPrefix","allowDots","objKeys","opts","TypeError","arrayFormat","joined","addQueryPrefix","arrayLimit","decoder","depth","parameterLimit","parseKeys","givenKey","child","segment","exec","parent","chain","leaf","root","cleanRoot","parseArrays","parseObject","ignoreQueryPrefix","tempObj","cleanStr","Infinity","parts","part","bracketEqualsPos","pos","parseValues","newObj","dotQs","prevDotQs","_this","arrayStyle","_forEach","iterator","arr","noConflict","notint","brancketSeparator","initialBrancket","ret","pair","epos","base","substring","baseKey","remainKey","brancketMatch","spos","search","test","memo","_dump","parents","checkedParents","flats","_buf","webpackPolyfill","deprecate","paths","children","ArrayBuffer","superInit","typedArray","Uint8Array","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","buffer","byteOffset","byteLength","typedArrayByteLength","swapEndian","word","Utf16","Utf16BE","utf16Chars","codePoint","utf16Str","utf16StrLength","Utf16LE","SHA224","HmacSHA224","SHA384","HmacSHA384","RHO_OFFSETS","PI_INDEXES","ROUND_CONSTANTS","y","newY","LFSR","roundConstantMsw","roundConstantLsw","bitPosition","SHA3","outputLength","_state","nBlockSizeLanes","M2i","M2i1","lane","round","tMsw","tLsw","Tx","Tx4","Tx1","Tx1Msw","Tx1Lsw","laneIndex","laneMsw","laneLsw","rhoOffset","TPiLane","T0","state0","TLane","Tx1Lane","Tx2Lane","roundConstant","blockSizeBits","outputLengthBytes","outputLengthLanes","hashWords","HmacSHA3","_zl","_zr","_sl","_sr","_hl","_hr","RIPEMD160","ar","br","cr","dr","er","hr","zl","zr","sl","sr","f1","f2","f3","f4","f5","rotl","z","HmacRIPEMD160","PBKDF2","hmac","blockIndex","blockIndexWords","blockWords","blockWordsLength","intermediate","intermediateWords","CFB","generateKeystreamAndEncrypt","keystream","CTR","counter","_counter","CTRGladman","incWord","b1","b2","b3","incCounter","OFB","_keystream","ECB","AnsiX923","lastBytePos","Ansix923","Iso10126","Iso97971","ZeroPadding","NoPadding","input","SBOX","INV_SBOX","SUB_MIX_0","SUB_MIX_1","SUB_MIX_2","SUB_MIX_3","INV_SUB_MIX_0","INV_SUB_MIX_1","INV_SUB_MIX_2","INV_SUB_MIX_3","xi","sx","x2","x4","x8","RCON","AES","_nRounds","_keyPriorReset","keyWords","ksRows","keySchedule","_keySchedule","ksRow","invKeySchedule","_invKeySchedule","invKsRow","_doCryptBlock","nRounds","s0","s1","s2","s3","t0","t2","t3","PC1","PC2","BIT_SHIFTS","SBOX_P","0","SBOX_MASK","DES","keyBits","keyBitPos","subKeys","_subKeys","nSubKey","subKey","bitShift","invSubKeys","_invSubKeys","_lBlock","_rBlock","exchangeLR","exchangeRL","lBlock","rBlock","TripleDES","_des1","_des2","_des3","RC4","keySigBytes","S","_S","keyByteIndex","keyByte","_i","_j","generateKeystreamWord","keystreamWord","RC4Drop","drop","C_","G","Rabbit","X","_X","_C","_b","nextState","IV","IV_0","IV_1","i0","i2","i1","i3","gx","ga","gb","RabbitLegacy","content","default","exported","locals","isOldIE","Boolean","document","atob","getTarget","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","stylesInDom","getIndexByIdentifier","identifier","modulesToDom","idCountMap","identifiers","count","css","media","sourceMap","references","updater","addStyle","insertStyleElement","style","createElement","attributes","nonce","setAttribute","insert","appendChild","textStore","replaceText","replacement","applyToSingletonTag","remove","styleSheet","cssText","cssNode","createTextNode","childNodes","removeChild","insertBefore","applyToTag","removeAttribute","btoa","firstChild","singleton","singletonCounter","styleIndex","parentNode","removeStyleElement","lastIdentifiers","newList","newLastIdentifiers","_index","___CSS_LOADER_API_IMPORT___","useSourceMap","cssMapping","sourceMapping","base64","sourceURLs","sources","sourceRoot","cssWithMappingToString","mediaQuery","dedupe","alreadyImportedModules","_class","getNamespaces","namespaces","getCascaderNamespaces","validServices","getSelectedServices","promises","optionsTemp","promiseTemp","results","getListeners","errorMsg","upperFirst","fnName","argu","placeholder","maxCond","toInteger","onInputBlur","onChangeInternal","deleteCondition","addCondition","cond","onSelectChange","getSelectedOptions","selectedOptions","option","maxNum","minNum","getOptions","show","oldVariableText","highlightIndex","selectOptions","selectedValue","selected","selectedValues","dropdownVisible","updateLinkText","linkText","clearSelections","each","selectionsChanged","keyDown","evt","keyCode","moveHighlight","commitChanges","selectValue","direction","commitChange","excludeOthers","setAllExceptCurrentTo","newValue","other","ctrlKey","metaKey","shiftKey","queryChanged","toLowerCase","customSelectDropdown","$compile","$window","$timeout","controllerAs","bindToController","elem","bodyEl","element","body","linkEl","inputEl","bodyOnClick","$apply","vm","$watch","width","focus","on","off","RectCompo","componentName","propTypes","separator","changeOnSelect","onSelect","initialValue","allowCustomValue","formatCreateLabel","displayAllSelectedLevels","component","$element","_$scope","_$element","$onInit","entries","_query","args","setTimeout","render","loadBalance","lbPrivate","lbPublic","mongoDB","mrHDFS","mrHBASE","mrHIVE","mrNODE","mrPRESTO","mrSPARK","mrYARN","mrZOOKEEPER","editorHtml","serviceSwitch","$injector","regions","metricList","periodList","dimensionList","instanceAliasList","showInstanceDetails","cascaderOptions","defaultsDeep","getInstanceAliasList","panelCtrl","events","onDataReceived","onDataError","cascaderChange","onNamespaceChange","dataList","lastQueryError","lastQuery","anySeriesFromQuery","err","handleQueryCtrlError","initState","refresh","isCascader","onRegionChange","isMetricsNeedUpdate","variable","panel","getMetricNameDesc","findIndex","Meaning","Zh","onMetricChange","getInstanceQueryParams","subItem","onInstanceChange","onInstanceAliasChange","onInstanceQueryChange","checkShowDetail","filterKey","secretKeyCache","current","filteredLabel","getFitleredLabel","filteredList","every","resetSecret","secureJsonFields","onSecretKeyChange","secureJsonData","RegExp","checkSecretId","isValid","checkSecretKey","templateUrl"],"mappings":"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","file":"datasource/module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 211);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","import _ from 'lodash';\nimport moment from 'moment';\nimport DatasourceInterface from '../../datasource';\nimport {\n  GetRequestParams,\n  GetServiceAPIInfo,\n  ReplaceVariable,\n  GetDimensions,\n  ParseQueryResult,\n  SliceLength,\n} from '../../common/constants';\nimport instanceStorage from '../../common/datasourceStorage';\nimport { MetricQuery } from './types';\nimport { getNamesapceFromService } from '../../common/utils';\n\nexport interface TemplateQueryIdType {\n  instance: string;\n  listener?: string;\n}\n\ninterface queryConfigType {\n  dim_KeyInStorage: string;\n  dim_KeyInTarget?: string;\n  dim_KeyInMap: string;\n}\n\nexport abstract class BaseDatasource implements DatasourceInterface {\n  Namespace?: string;\n  service: string;\n  instanceListCache: any[] = [];\n  extraMetricDims: string[] = [];\n  url: string;\n  instanceSettings: any;\n  backendSrv: any;\n  templateSrv: any;\n  secretId: string;\n  checkKeys: string[] = [];\n  MetricReqConfig: {\n    resultFilter?: Function;\n  } = {};\n  extrasAlias?: string[] = [];\n  /*\n  一个配置：(用于处理除了InstanceId之外的)(Record中的key是指标修正之后的维度，即通过InvalidDemsion处理后)\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget 通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。为空则取即通过InvalidDemsion处理后的key\n  3 dim_KeyInMap 保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。即：templateQueryIdMap中内容。联合上面2的内容筛选出原始sourceMap\n  4 通过这个dim和sourceMap获取维度值。即sourceMap[dim]\n  */\n  queryMonitorExtraConfg: Record<string, queryConfigType> = {};\n\n  InstanceReqConfig?: {\n    service?: string;\n    action: string;\n    responseField: string;\n    interceptor?: {\n      request?: (params: unknown) => unknown;\n      response?: (data: unknown) => unknown;\n    };\n  };\n\n  InvalidDimensions?: Record<string, string>;\n\n  abstract InstanceAliasList: string[];\n  abstract templateQueryIdMap: TemplateQueryIdType; // 必须为标识\n\n  /** @ngInject */\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    this.instanceSettings = instanceSettings;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.url = instanceSettings.url;\n    this.secretId = (instanceSettings.jsonData || {}).secretId || '';\n  }\n\n  get namespace() {\n    // 需要注意的是this.service来自于原型上，在实例中导入时注入\n    return this.Namespace || getNamesapceFromService(this.service);\n  }\n\n  // 获取额外要显示到图例里的内容\n  getOtherAlias(instance: any, target: any): string {\n    let result = '';\n    const alias = instance._InstanceAliasValue;\n    this.extrasAlias?.forEach((extra) => {\n      const extraAlia = target[extra];\n      if (extraAlia && alias.indexOf(extraAlia) === -1) {\n        result += ` - ${extraAlia}`;\n      }\n    });\n    return result;\n  }\n\n  /* 格式化模板变量上的显示 */\n  getAliasValue(instance: Record<string, any>, alias: string) {\n    const result = instance[alias];\n    return Array.isArray(result) ? result.join() : result;\n  }\n\n  formatVarDisplay(instance: Record<string, any>, displayTpl: string | undefined, instanceAlias: string) {\n    // 获取display=aaa${InstanceName}bbb${InstanceId}ccc\n    if (displayTpl) {\n      return displayTpl.replace(/\\$\\{(\\w+)\\}/g, (a, b) => {\n        if (!b || !this.InstanceAliasList.includes(b)) {\n          return '';\n        }\n        return this.getAliasValue(instance, b);\n      });\n    }\n    return this.getAliasValue(instance, instanceAlias);\n  }\n  /**\n   * @param query 模板变量配置填写的 Query 参数对象，由顶层将字符串转换为了对象\n   */\n  async metricFindQuery(query: MetricQuery, regex?: string) {\n    const { action, namespace, display, payload = {} } = query;\n    let { region, instancealias = this.templateQueryIdMap.instance } = query;\n    if (!action || !namespace) {\n      return [];\n    }\n\n    // 查询地域列表\n    const regionQuery = action.match(/^DescribeRegions$/i);\n    if (regionQuery) {\n      return this.getRegions();\n    }\n\n    region = this.getVariable(region); // 将模板region转换为真实值\n\n    // 查询实例列表\n    if (region && action.match(/^DescribeInstances/i)) {\n      const result = await this.getVariableInstances(region, payload);\n      instancealias = this.InstanceAliasList.includes(instancealias) ? instancealias : this.templateQueryIdMap.instance;\n\n      const res = result.flatMap((item) => {\n        const insAlias = this.formatVarDisplay(item, display, instancealias);\n\n        item._InstanceAliasValue = insAlias; // FIXME:\n        // console.log(insAlias,item[this.templateQueryIdMap.instance]);\n\n        if (!item[instancealias]) return [];\n        return [\n          {\n            text: insAlias,\n            value: item[this.templateQueryIdMap.instance],\n          },\n        ];\n      });\n\n      // 缓存全量实例列表\n      await instanceStorage.setInstance(this.service, result);\n      return res;\n    }\n\n    // 在instance实例的基础上查询其他数据\n    let instance = this.getVariable(query['instance']);\n    if (_.isArray(instance)) instance = instance[0]; // 有额外维度，仅支持实例单选情况\n    if (region && action && instance) {\n      try {\n        // instance = JSON.parse(instance);\n        const instanceCache = await instanceStorage.getInstance(this.service);\n        // console.log({ instanceCache });\n\n        instance = _.cloneDeep(instanceCache.find((item) => item[this.templateQueryIdMap.instance] === instance)) ?? {};\n        // eslint-disable-next-line no-empty\n      } catch (error) {}\n      return this.fetchMetricData(action, region, instance, query);\n    }\n\n    return Promise.resolve([]);\n  }\n  // 获取指标数据\n  async fetchMetricData(action: string, region: string, instance: any, query?: any) {\n    return [];\n  }\n\n  /**\n   * 根据 Panel 的配置项，获取相应的监控数据\n   *\n   * @param options Panel 的配置参数\n   * @return 返回数据数组，示例如下\n   * [\n   *   {\n   *     \"target\": \"AccOuttraffic - ins-123\",\n   *     \"datapoints\": [\n   *       [861, 1450754160000],\n   *       [767, 1450754220000]\n   *     ]\n   *   }\n   * ]\n   */\n  async dimensionsFormat(dimKeys, ins, dimensionObject, target, service, options) {\n    for (let key of dimKeys) {\n      let keyTmp = key;\n      const invalidDim = this.InvalidDimensions || this.getInvalidDimensions(this);\n      if (key in invalidDim) {\n        // 从【维度中】的字段到【实例中】字段的映射。 { functionName: FunctionName }\n        keyTmp = invalidDim[key];\n        ins[key] = ins[keyTmp];\n      }\n      // console.log('dimensionObject2', dimensionObject, {key, keyTmp}, invalidDim);\n      let extraDimValue = this.getVariable(target[service][keyTmp]);\n      if (this.queryMonitorExtraConfg[keyTmp]) {\n        const { dim_KeyInStorage, dim_KeyInTarget = keyTmp, dim_KeyInMap } = this.queryMonitorExtraConfg[keyTmp];\n        let extraIns = ReplaceVariable(this.templateSrv, options.scopedVars, target[service][dim_KeyInTarget], true);\n        let extraSourceMap: any = {};\n        try {\n          extraSourceMap = JSON.parse(extraIns); // 兼容json字符串的 形式\n        } catch (error) {\n          if (_.isArray(extraIns)) extraIns = extraIns[0]; // 如果多个，取第一个。除了实例ID 暂不支持其他纬度多选\n          const extraStorage = await instanceStorage.getExtraStorage(this.service, dim_KeyInStorage);\n          // console.log({ extraStorage });\n          extraSourceMap = extraStorage.find((item) => item[dim_KeyInMap] === extraIns) ?? {};\n        }\n        // 增加ins实例之外的alias，填入到ins._InstanceAliasValue\n        const insAlias = ins._InstanceAliasValue;\n        const otherAlias = extraSourceMap._InstanceAliasValue;\n        if (otherAlias && insAlias.indexOf(otherAlias) === -1) {\n          ins._InstanceAliasValue += ` - ${otherAlias}`;\n        }\n\n        extraDimValue = extraSourceMap?.[keyTmp];\n      } else {\n        ins._InstanceAliasValue += this.getOtherAlias(ins, target);\n      }\n      // 设置instance，针对额外的维度，需要注意模板变量的值\n      // ins[key] = (ins[keyTmp]) ?? this.getVariable(target[service][keyTmp]);\n      ins[key] = ins[keyTmp] ?? extraDimValue;\n      // cynosdb产品接口返回维度和入参不一致\n      if (this.checkKeys.length > 0) {\n        this.checkKeys.forEach((Ekey) => {\n          ins[Ekey] = ins[key];\n        });\n      }\n      dimensionObject[key] = { Name: key, Value: ins[key] };\n    }\n    return dimensionObject;\n  }\n  query(options: any) {\n    const service = this.service!; // 强制声明非空\n    // console.log('query');\n\n    const queries = _.filter(options.targets, (item) => {\n      // 过滤无效的查询 target\n      return (\n        item.hide !== true &&\n        !!item.namespace &&\n        !!item[service].metricName &&\n        !_.isEmpty(ReplaceVariable(this.templateSrv, options.scopedVars, item[service].region, false)) &&\n        !_.isEmpty(ReplaceVariable(this.templateSrv, options.scopedVars, item[service].instance, true))\n      );\n    }).map(async (target) => {\n      // 实例 instances 可能为模板变量，需先获取实际值\n      // 针对JSON字符串和id的形式，分开做处理\n      let instances = ReplaceVariable(this.templateSrv, options.scopedVars, target[service].instance, true);\n      const instanceCache = await instanceStorage.getInstance(this.service);\n      // console.log({ instanceCache });\n      instances = [].concat(instances).map((inst) => {\n        try {\n          return JSON.parse(inst); // 兼容json字符串的 形式\n        } catch (error) {\n          return _.cloneDeep(instanceCache.find((item) => item[this.templateQueryIdMap.instance] === inst)) ?? {};\n        }\n      });\n      const region = ReplaceVariable(this.templateSrv, options.scopedVars, target[service].region, false);\n      const insInReq: any = [];\n      for (let ins of instances) {\n        const dimensionObject = target[service].dimensionObject;\n        // 处理dimensions的值\n        const dimKeys = Object.keys(dimensionObject);\n        const dimResult = await this.dimensionsFormat(dimKeys, ins, dimensionObject, target, service, options);\n        // console.log({dimResult})\n        insInReq.push([{ Dimensions: GetDimensions(dimResult) }]);\n      }\n      const data = {\n        StartTime: moment(options.range.from).format(),\n        EndTime: moment(options.range.to).format(),\n        Period: target[service].period || 300,\n        Instances: _.flatMap(insInReq),\n        Namespace: target.namespace,\n        MetricName: target[service].metricName,\n      };\n      return this.getMonitorData(data, region, instances);\n    });\n\n    if (queries.length === 0) {\n      return [];\n    }\n\n    return Promise.all(queries)\n      .then((responses) => {\n        return _.flatten(responses);\n      })\n      .catch((error) => {\n        return [];\n      });\n  }\n  getInstanceReqConfig(selfIns: any) {\n    return {} as any;\n  }\n  getInvalidDimensions(selfIns: any) {\n    return {} as any;\n  }\n  // 获取某个变量的实际值，this.templateSrv.replace() 函数返回实际值的字符串\n  getVariable(metric?: string) {\n    const rs = this.templateSrv.replace((metric || '').trim());\n    const valStr = rs.match(/\\{([\\w-,]+)\\}/);\n    // 判断是否为多选\n    if (valStr) {\n      return valStr[1].split(',');\n    }\n    return rs;\n  }\n\n  /**\n   * 获取 监控数据\n   * @param params 获取监控数据的请求参数\n   * @param region 地域信息\n   * @param instances 实例列表，用于对返回结果的匹配解析\n   */\n  getMonitorData(params, region, instances) {\n    const serviceInfo = GetServiceAPIInfo(region, 'monitor');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: params,\n      },\n      serviceInfo.service,\n      { action: 'GetMonitorData', region }\n    ).then((response) => {\n      return ParseQueryResult(response, instances);\n      // return this.getOtherAlias(response,instances)\n    });\n  }\n\n  getRegions(): any {\n    return this.doRequest(\n      {\n        url: this.url + '/cvm',\n      },\n      'cvm',\n      { action: 'DescribeRegions' }\n    ).then((response) => {\n      return _.filter(\n        _.map(response.RegionSet || [], (item) => {\n          return {\n            text: item.RegionName,\n            value: item.Region,\n            RegionState: item.RegionState,\n          };\n        }),\n        (item) => item.RegionState === 'AVAILABLE'\n      );\n    });\n  }\n\n  getMetrics(region = 'ap-guangzhou'): Promise<any> {\n    const serviceInfo = GetServiceAPIInfo(region, 'monitor');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: {\n          Namespace: this.namespace,\n        },\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeBaseMetrics' }\n    ).then((response) => {\n      const res = _.filter(\n        _.filter(response.MetricSet || [], (item) => !(item.Namespace !== this.namespace || !item.MetricName))\n      );\n      const resFilterFn = this.MetricReqConfig.resultFilter;\n      if (resFilterFn) {\n        return res.map((item) => resFilterFn(item));\n      }\n      return res;\n    });\n  }\n\n  getInstances(region, params = {}) {\n    const { service = this.service, action, responseField: field, interceptor } =\n      this.InstanceReqConfig || this.getInstanceReqConfig(this);\n    params = { Offset: 0, Limit: 100, ...params };\n    const serviceInfo = GetServiceAPIInfo(region, service);\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: interceptor?.request ? interceptor.request(params) : params,\n      },\n      serviceInfo.service,\n      { region, action }\n    ).then((response) => {\n      // 处理异常，则不按正常的情况处理，直接抛出错误\n      if (response?.Error) {\n        console.error(response.Error);\n        return response;\n      }\n\n      let result;\n      // 先，field处理\n      if (field) {\n        result = _.get(response, field) ?? _.get(response, `Result.${field}`) ?? [];\n      }\n\n      // 后，拦截器处理\n      if (interceptor?.response) {\n        result = interceptor.response(result);\n      }\n      return result;\n    });\n  }\n\n  getVariableInstances(region, query = {}): Promise<any[]> {\n    let result: any[] = [];\n    const params = { ...query, ...{ Offset: 0, Limit: 100 } };\n\n    const { service = this.service, action, responseField: field, interceptor } =\n      this.InstanceReqConfig || this.getInstanceReqConfig(this);\n\n    const serviceInfo = GetServiceAPIInfo(region, service);\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: interceptor?.request ? interceptor.request(params) : params,\n      },\n      serviceInfo.service,\n      { region, action }\n    ).then((response) => {\n      result = _.get(response, field) ?? _.get(response, `Result.${field}`) ?? [];\n      const total = response.TotalCount ?? response.TotalCnt ?? _.get(response, `Result.TotalCount`) ?? 0;\n      console.log({ total, result });\n      if (result.length >= total) {\n        return result;\n      } else {\n        const param = SliceLength(total, 100);\n        const promises: any[] = [];\n        _.forEach(param, (item) => {\n          promises.push(this.getInstances(region, { ...item, ...query }));\n        });\n        return Promise.all(promises)\n          .then((responses) => {\n            _.forEach(responses, (item) => {\n              result = _.concat(result, item);\n            });\n            return result;\n          })\n          .catch((error) => {\n            return result;\n          });\n      }\n    });\n  }\n\n  // 检查某变量字段是否有值\n  isValidConfigField(field: string) {\n    return field && field.length > 0;\n  }\n\n  testDatasource() {\n    // const { service = this.service, action } = this.InstanceReqConfig;\n    // const serviceInfo = GetServiceAPIInfo('ap-guangzhou', service);\n\n    if (!this.isValidConfigField(this.secretId)) {\n      return {\n        service: this.service,\n        status: 'error',\n        message: 'The SecretId/SecretKey field is required.',\n      };\n    }\n\n    return Promise.all([\n      this.getRegions(),\n      this.getMetrics(),\n      // this.doRequest(\n      //   {\n      //     url: this.url + serviceInfo.path,\n      //     data: {\n      //       Offset: 0,\n      //       Limit: 1,\n      //     },\n      //   },\n      //   service,\n      //   { region: 'ap-guangzhou', action },\n      // ),\n      this.getInstances('ap-guangzhou', {\n        Offset: 0,\n        Limit: 1,\n      }),\n    ])\n      .then((responses) => {\n        const cvmErr = _.get(responses, '[0].Error', {});\n        const monitorErr = _.get(responses, '[1].Error', {});\n        const serviceErr = _.get(responses, '[2].Error', {});\n        // const cvmAuthFail = _.get(cvmErr, 'Code', '').indexOf('AuthFailure') !== -1;\n        // const monitorAuthFail = _.get(monitorErr, 'Code', '').indexOf('AuthFailure') !== -1;\n        // const serviceAuthFail = _.get(serviceErr, 'Code', '').indexOf('AuthFailure') !== -1;\n        const cvmAuthFail = _.get(cvmErr, 'Code', '');\n        const monitorAuthFail = _.get(monitorErr, 'Code', '');\n        const serviceAuthFail = _.get(serviceErr, 'Code', '');\n        if (cvmAuthFail || monitorAuthFail || serviceAuthFail) {\n          const messages: any[] = [];\n          if (cvmAuthFail) {\n            messages.push(_.get(cvmErr, 'Code'));\n          }\n          if (monitorAuthFail) {\n            messages.push(_.get(monitorErr, 'Code'));\n          }\n          if (serviceAuthFail) {\n            messages.push(_.get(serviceErr, 'Code'));\n          }\n          const message = _.join(_.compact(_.uniq(messages)), '; ');\n          return {\n            service: this.service,\n            status: 'error',\n            message,\n          };\n        } else {\n          return {\n            namespace: this.namespace,\n            service: this.service,\n            status: 'success',\n            message: `Successfully queried the ${this.service} service.`,\n            title: 'Success',\n          };\n        }\n      })\n      .catch((error) => {\n        let message = `${this.service} service:`;\n        message += error.statusText ? error.statusText + '; ' : '';\n        if (_.get(error, 'data.error.code', '')) {\n          message += error.data.error.code + '. ' + error.data.error.message;\n        } else if (_.get(error, 'data.error', '')) {\n          message += error.data.error;\n        } else if (_.get(error, 'data', '')) {\n          message += error.data;\n        } else {\n          message += `Cannot connect to ${this.service} service.`;\n        }\n        return {\n          service: this.service,\n          status: 'error',\n          message: message,\n        };\n      });\n  }\n\n  async doRequest(options, service, signObj: any = {}) {\n    options = await GetRequestParams(\n      options,\n      service,\n      signObj,\n      this.secretId,\n      this.instanceSettings.id,\n      this.backendSrv\n    );\n    return this.backendSrv\n      .datasourceRequest(options)\n      .then((response) => {\n        return _.get(response, 'data.Response', {});\n      })\n      .catch((error) => {\n        throw error;\n      });\n  }\n}\n","import moment from 'moment';\nimport { parseDataFromBackendPlugin } from './constants';\n\nconst HttpRequestMethod = 'POST';\nconst CanonicalUri = '/';\nconst CanonicalQueryString = '';\nconst ContentType = 'application/json';\n// const Algorithm = 'TC3-HMAC-SHA256';\n\n/**\n * The steps of TC3-HMAC-SHA256 method:\n * 1、Generate the request string\n * 2、Generate the original signature string\n * 3、Generate the signature string\n * 4、Generate the authorization string\n */\n\n// The signature method is TC3-HMAC-SHA256, the common parameters of the header information are used for user identification and API authenticationand:\n// Parameter      Type    Required   Description\n// X-TC-Action    String   Yes     The name of the API for the desired operation. For example, if you want to call the CVM API for querying the list of instances, the Action parameter is DescribeInstances。\n// X-TC-Region    String   Yes     Region parameter, which is used to identify the region to which the data you want to work with belongs.\n// X-TC-Timestamp Integer  Yes     The current UNIX timestamp that records the time at which the API request was initiated, for example, 1529223702. If the time difference between the timestamp and the current time is too large, a signature expiration error may occur.\n// X-TC-Version   String   Yes     API version, such as 2017-03-12\n// Authorization  String   Yes     HTTPS Authorization, such as TC3-HMAC-SHA256 Credential=xxx/tc3_request, SignedHeaders=content-type;host, Signature=xxxx\n// X-TC-Token     String   No      The token used for the temporary certificate, which must be used together with a temporary key. You can obtain the temporary key and token by calling the CAM API. No token is required for a long-term key.\n// where\n// - TC3-HMAC-SHA256：Signature method；\n// - Credential：Signature certificate, AKIDEXAMPLE is SecretId；Date is in UTC standard time\n// - SignedHeaders： The header information of the signature calculation, content-type and host are the required header information\n// - Signature：Signature abstraction\n\nexport default class Sign {\n  /**\n   * Tencent Cloud API Signature v3 reference: https://cloud.tencent.com/document/api/213/30654\n   * secretId: SecretId for identifying identity that is applied for on Cloud API Key.\n   * A SecretId corresponds to a unique SecretKey, which is used to generate the request Signature.\n   * secretKey: SecretKey is used to encrypt the signature string and verify the signature string on the server\n   * service: the name of service, which must be consistent with the request domain, such as cvm\n   * action: The name of the API for the desired operation\n   * host: the domain of service，which must be consistent with the request domain, such as cvm.tencentcloudapi.com\n   * version:  PI version, such as 2017-03-12\n   * payload: The request parameters\n   */\n\n  secretId: string;\n\n  service: string;\n  action: string;\n  host: string;\n  version: string;\n  payload: Record<string, any> | string;\n  region: string;\n  timestamp: number;\n  date: string;\n  backendSrv: any;\n  datasourceId: Number;\n  constructor(options) {\n    const { secretId, service, action, host, version, payload = '', region, backendSrv, datasourceId } = options;\n    this.secretId = secretId;\n    // this.secretKey = secretKey;\n    this.service = service;\n    this.action = action;\n    this.host = host;\n    this.version = version;\n    this.payload = typeof payload === 'string' ? payload : JSON.stringify(payload);\n    this.region = region;\n    const nowDate = moment().utc();\n    this.timestamp = nowDate.unix();\n    this.date = nowDate.format('YYYY-MM-DD');\n    this.backendSrv = backendSrv;\n    this.datasourceId = datasourceId;\n  }\n\n  async getHeader() {\n    // Generate the request string\n    // const canonicalHeaders = `content-type:${ContentType}\\nhost:${this.host}\\n`;\n    // const signedHeaders = 'content-type;host';\n    // const hashedRequestPayload = Hex.stringify(SHA256(this.payload)).toLowerCase();\n    // const canonicalRequest = `${HttpRequestMethod}\\n${CanonicalUri}\\n${CanonicalQueryString}\\n${canonicalHeaders}\\n${signedHeaders}\\n${hashedRequestPayload}`;\n\n    // // Generate the original signature string\n    // const credentialScope = `${this.date}/${this.service}/tc3_request`;\n    // const hashedCanonicalRequest = Hex.stringify(SHA256(canonicalRequest)).toLowerCase();\n    // const stringToSign = `${Algorithm}\\n${this.timestamp}\\n${credentialScope}\\n${hashedCanonicalRequest}`;\n\n    // // Generate the signature string\n    // const secretDate = HmacSHA256(this.date, `TC3${this.secretKey}`);\n    // const secretService = HmacSHA256(this.service, secretDate);\n    // const secretSigning = HmacSHA256('tc3_request', secretService);\n    // const signature = Hex.stringify(HmacSHA256(stringToSign, secretSigning));\n\n    // // Generate the authorization string\n    // const authorization = `${Algorithm} Credential=${this.secretId}/${credentialScope}, SignedHeaders=${signedHeaders}, Signature=${signature}`;\n    let res = {};\n    try {\n      res = await this.backendSrv.datasourceRequest({\n        url: '/api/ds/query',\n        method: 'POST',\n        data: {\n          from: '',\n          to: '',\n          queries: [\n            {\n              Query: {\n                Host: this.host,\n                Service: this.service,\n                Version: this.version,\n                Action: this.action,\n                Region: this.region,\n                Timestamp: this.timestamp,\n                Method: HttpRequestMethod,\n                Uri: CanonicalUri,\n                Query: CanonicalQueryString,\n                Body: this.payload,\n                Headers: {\n                  'content-type': ContentType,\n                  host: this.host,\n                },\n              },\n              refId: 'A',\n              datasourceId: this.datasourceId,\n            },\n          ],\n        },\n      });\n    } catch (e) {}\n    const { authorization } = parseDataFromBackendPlugin(res);\n    const grafanaVersion = (window as any).grafanaBootData?.settings?.buildInfo?.version || '0.0.0';\n    // Common Request Parameters of the header information\n    // console.log('versions',  `GF_${grafanaVersion}_PL_CM_${process.env.TENCENT_CLOUD_MONITOR_GRAFANA_PLUGIN_VERSION}`);\n    const headers = {\n      Authorization: authorization,\n      'Content-Type': ContentType,\n      'X-TC-Action': this.action,\n      'X-TC-Timestamp': this.timestamp.toString(),\n      'X-TC-Version': this.version,\n      'X-TC-RequestClient': `GF_${grafanaVersion}_PL_CM_${process.env.TENCENT_CLOUD_MONITOR_GRAFANA_PLUGIN_VERSION}`,\n      ...(this.region && {\n        'X-TC-Region': this.region,\n      }),\n    };\n    return headers;\n  }\n}\n","import * as dotQs from 'dot-qs';\nimport { compact, cloneDeep } from 'lodash';\nimport { HmacSHA256 } from 'crypto-js';\nimport * as Base64 from 'crypto-js/enc-base64';\nimport { parseDataFromBackendPlugin } from './constants';\n\n/**\n *\n * @param defaults 为对象\n * secretId\n * secretKey\n * action\n * region\n * host\n */\n\nexport default class SignV2 {\n  defaults: any = {\n    path: '/v2/index.php',\n    method: 'POST',\n  };\n  backendSrv: any;\n  datasourceId: Number;\n  constructor(defaults: any = {}) {\n    this.defaults = Object.assign(this.defaults, defaults);\n    this.defaults.secretKey = '';\n    this.backendSrv = defaults.backendSrv;\n    this.datasourceId = defaults.datasourceId;\n  }\n\n  generateQueryString = async () => {\n    // const params: any = {\n    //   Region: this.defaults.region,\n    //   Action: this.defaults.action,\n    //   SecretId: this.defaults.secretId,\n    //   Timestamp: moment().utc().unix(),\n    //   Nonce: Math.round(Math.random() * 65535),\n    //   SignatureMethod: 'HmacSHA256',\n    //   ...(this.defaults.data || {}),\n    // };\n    let res = {};\n    try {\n      const { data } = this.defaults;\n      const payload = typeof data === 'string' ? data : JSON.stringify(data);\n      res = await this.backendSrv.datasourceRequest({\n        url: '/api/ds/query',\n        method: 'POST',\n        data: {\n          from: '',\n          to: '',\n          queries: [\n            {\n              Query: {\n                Host: this.defaults.host,\n                Action: this.defaults.action,\n                Version: this.defaults.version,\n                Region: this.defaults.region,\n                Method: this.defaults.method,\n                Uri: this.defaults.path,\n                Query: '',\n                Body: payload,\n              },\n              refId: 'A',\n              signer: 'v2',\n              datasourceId: this.datasourceId,\n            },\n          ],\n        },\n      });\n    } catch (e) {}\n    const { authorization } = parseDataFromBackendPlugin(res);\n    const { Path, Querystring } = authorization;\n    return { queryString: Querystring, path: Path };\n  };\n\n  generateSignature = (para) => {\n    let params = cloneDeep(para);\n    params = dotQs.flatten(params);\n    let keys = Object.keys(params).sort();\n    keys = compact(keys);\n    let queryStr = '';\n    keys.forEach((key) => {\n      let val = params[key];\n      if (val && val[0] === '@') {\n        return;\n      }\n      if (val === undefined || val === null || (typeof val === 'number' && isNaN(val))) {\n        val = '';\n      }\n      // 把参数中的 \"_\" (除开开头)替换成 \".\"\n      queryStr += '&' + (key.indexOf('_') ? key.replace(/_/g, '.') : key) + '=' + val;\n    });\n    queryStr = queryStr.slice(1);\n    queryStr = this.defaults.method + this.defaults.host + this.defaults.path + '?' + queryStr;\n    const signStr = this.sign(queryStr, this.defaults.secretKey);\n    return signStr;\n  };\n\n  /**\n   * 生成签名\n   * @param {String} str 需签名的参数串\n   * @param {String} secretKey\n   * @param {String} signatureMethod 签名方法，默认sha1\n   * @returns {String} 签名\n   */\n  sign = (str, secretKey) => {\n    return Base64.stringify(HmacSHA256(str, secretKey));\n  };\n}\n","import _ from 'lodash';\nimport qs from 'qs';\nimport { SERVICES } from '../tc_monitor';\nimport Sign from './sign';\nimport SignV2 from './signV2';\nimport { toDataQueryResponse } from '@grafana/runtime';\n// import { BaseDatasource } from '../tc_monitor/_base/datasource'\n\n// the services of tencentcloud monitor api\nconst FINACE_REGIONS = ['ap-shanghai-fsi', 'ap-shenzhen-fsi'];\nconst SERVICES_API_INFO = {\n  api: {\n    service: 'api',\n    version: '2020-11-06',\n    path: '/api',\n    host: 'api.tencentcloudapi.com',\n  },\n  // monitor api info\n  monitor: {\n    service: 'monitor',\n    version: '2018-07-24',\n    path: '/monitor',\n    host: 'monitor.tencentcloudapi.com',\n  },\n  // cvm api info\n  cvm: {\n    service: 'cvm',\n    version: '2017-03-12',\n    path: '/cvm',\n    host: 'cvm.tencentcloudapi.com',\n  },\n  // cdb api info\n  cdb: {\n    service: 'cdb',\n    version: '2017-03-20',\n    path: '/cdb',\n    host: 'cdb.tencentcloudapi.com',\n  },\n  // pcx api info\n  pcx: {\n    service: 'pcx',\n    version: '',\n    path: '/pcx',\n    host: 'vpc.api.qcloud.com',\n  },\n  // vpc api info\n  vpc: {\n    service: 'vpc',\n    version: '2017-03-12',\n    path: '/vpc',\n    host: 'vpc.tencentcloudapi.com',\n  },\n  // mongodb api info\n  mongodb: {\n    service: 'mongodb',\n    version: '2019-07-25',\n    path: '/mongodb',\n    host: 'mongodb.tencentcloudapi.com',\n  },\n  // 负载均衡 clb\n  clb: {\n    service: 'clb',\n    version: '2018-03-17',\n    path: '/clb',\n    host: 'clb.tencentcloudapi.com',\n  },\n  // postgresql api info\n  postgres: {\n    service: 'postgres',\n    version: '2017-03-12',\n    path: '/postgres',\n    host: 'postgres.tencentcloudapi.com',\n  },\n  // cdn info\n  cdn: {\n    service: 'cdn',\n    version: '2018-06-06',\n    path: '/cdn',\n    host: 'cdn.tencentcloudapi.com',\n  },\n  // redis info\n  redis: {\n    service: 'redis',\n    version: '2018-04-12',\n    path: '/redis',\n    host: 'redis.tencentcloudapi.com',\n  },\n  scf: {\n    service: 'scf',\n    version: '2018-04-16',\n    path: '/scf',\n    host: 'scf.tencentcloudapi.com',\n  },\n  cfs: {\n    service: 'cfs',\n    version: '2019-07-19',\n    path: '/cfs',\n    host: 'cfs.tencentcloudapi.com',\n  },\n  ckafka: {\n    service: 'ckafka',\n    version: '2019-08-19',\n    path: '/ckafka',\n    host: 'ckafka.tencentcloudapi.com',\n  },\n  // 专线接入实例列表\n  dc: {\n    service: 'dc',\n    version: '2018-04-10',\n    path: '/dc',\n    host: 'dc.tencentcloudapi.com',\n  },\n  // cynosdb实例列表\n  cynosdb: {\n    service: 'cynosdb',\n    version: '2019-01-07',\n    path: '/cynosdb',\n    host: 'cynosdb.tencentcloudapi.com',\n  },\n  // sqlserver实例列表\n  sqlserver: {\n    service: 'sqlserver',\n    version: '2018-03-28',\n    path: '/sqlserver',\n    host: 'sqlserver.tencentcloudapi.com',\n  },\n  // bm实例列表\n  bm: {\n    service: 'bm',\n    version: '2018-04-23',\n    path: '/bm',\n    host: 'bm.tencentcloudapi.com',\n  },\n  bmeip: {\n    service: 'bmeip',\n    version: '2018-06-25',\n    path: '/bmeip',\n    host: 'bmeip.tencentcloudapi.com',\n  },\n  bmvpc: {\n    service: 'bmvpc',\n    version: '2018-06-25',\n    path: '/bmvpc',\n    host: 'bmvpc.tencentcloudapi.com',\n  },\n  bmlb: {\n    service: 'bmlb',\n    version: '2018-06-25',\n    path: '/bmlb',\n    host: 'bmlb.tencentcloudapi.com',\n  },\n  // ES集群实例\n  es: {\n    service: 'es',\n    version: '2018-04-16',\n    path: '/es',\n    host: 'es.tencentcloudapi.com',\n  },\n  // MapReduce\n  emr: {\n    service: 'emr',\n    version: '2019-01-03',\n    path: '/emr',\n    host: 'emr.tencentcloudapi.com',\n  },\n  // CMQ消息队列\n  cmq: {\n    service: 'cmq',\n    version: '2019-03-04',\n    path: '/cmq',\n    host: 'cmq.tencentcloudapi.com',\n  },\n  cbs: {\n    service: 'cbs',\n    version: '2017-03-12',\n    path: '/cbs',\n    host: 'cbs.tencentcloudapi.com',\n  },\n  // tcaplus实例\n  tcaplusdb: {\n    service: 'tcaplusdb',\n    version: '2019-08-23',\n    path: '/tcaplusdb',\n    host: 'tcaplusdb.tencentcloudapi.com',\n  },\n  // tcaplus实例\n  dcdb: {\n    service: 'dcdb',\n    version: '2018-04-11',\n    path: '/dcdb',\n    host: 'dcdb.tencentcloudapi.com',\n  },\n  // apigateway实例\n  apigateway: {\n    service: 'apigateway',\n    version: '2018-08-08',\n    path: '/apigateway',\n    host: 'apigateway.tencentcloudapi.com',\n  },\n  tdmq: {\n    service: 'tdmq',\n    version: '2020-02-17',\n    path: '/tdmq',\n    host: 'tdmq.tencentcloudapi.com',\n  },\n  gaap: {\n    service: 'gaap',\n    version: '2018-05-29',\n    path: '/gaap',\n    host: 'gaap.tencentcloudapi.com',\n  },\n  ecm: {\n    service: 'ecm',\n    version: '2019-07-19',\n    path: '/ecm',\n    host: 'ecm.tencentcloudapi.com',\n  },\n  gse: {\n    service: 'gse',\n    version: '2019-11-12',\n    path: '/gse',\n    host: 'gse.tencentcloudapi.com',\n  },\n  // 不单独定义lb，因为lb同样用的是vpc的配置，同上\n  // lb: {\n  //   service: 'lb',\n  //   version: '2017-03-12',\n  //   path: '/lb',\n  //   host: 'vpc.tencentcloudapi.com'\n  // }\n  // 负载均衡四层协议 lbPrivate\n  // lbPrivate: {\n  //   service: 'lbPrivate',\n  //   version: '2018-03-17',\n  //   path: '/clb',\n  //   host: 'clb.tencentcloudapi.com',\n  // },\n};\n\nconst FINACE_HOST = {\n  scf: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/scf/shanghai',\n      host: 'scf.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/scf/shenzhen',\n      host: 'scf.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  cfs: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/cfs/shanghai',\n      host: 'cfs.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/cfs/shenzhen',\n      host: 'cfs.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  ckafka: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/ckafka/shanghai',\n      host: 'ckafka.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/ckafka/shenzhen',\n      host: 'ckafka.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  clb: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/clb/shanghai',\n      host: 'clb.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/clb/shenzhen',\n      host: 'clb.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  mongodb: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/mongodb/shanghai',\n      host: 'mongodb.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/mongodb/shenzhen',\n      host: 'mongodb.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  vpc: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/vpc/shanghai',\n      host: 'vpc.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/vpc/shenzhen',\n      host: 'vpc.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  cvm: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/cvm/shanghai',\n      host: 'cvm.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/cvm/shenzhen',\n      host: 'cvm.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  cdb: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/cdb/shanghai',\n      host: 'cdb.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/cdb/shenzhen',\n      host: 'cdb.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  monitor: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/monitor/shanghai',\n      host: 'monitor.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/monitor/shenzhen',\n      host: 'monitor.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  postgres: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/postgres/shanghai',\n      host: 'postgres.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/postgres/shenzhen',\n      host: 'postgres.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  emr: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/emr/shanghai',\n      host: 'emr.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/emr/shenzhen',\n      host: 'emr.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  cmq: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/cmq/shanghai',\n      host: 'cmq.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/cmq/shenzhen',\n      host: 'cmq.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n};\n\n// 获取对应业务的 API 接口信息\nexport function GetServiceAPIInfo(region, service) {\n  return { ...(SERVICES_API_INFO[service] || {}), ...getHostAndPath(region, service) };\n}\n\n// get host and path for finance regions\nfunction getHostAndPath(region, service) {\n  if (_.indexOf(FINACE_REGIONS, region) === -1) {\n    return {};\n  }\n  return (\n    _.find(\n      _.find(FINACE_HOST, (__, key) => key === service),\n      (__, key) => key === region\n    ) || {}\n  );\n}\n\n// 变量替换指定实例按照那个字段展示\nexport const VARIABLE_ALIAS = 'instancealias';\n\nexport function GetServiceFromNamespace(namespace) {\n  return _.get(\n    _.find(SERVICES, (service) => service.namespace === namespace),\n    'service'\n  );\n}\n// 处理存量target中保存的qce/cvm\nexport function GetLabelFromNamespace(namespace) {\n  return _.get(\n    _.find(SERVICES, (service) => service.namespace === namespace || service.label === namespace),\n    'label'\n  );\n}\n// parse template variable query params\nexport function ParseMetricQuery(query = '') {\n  if (!query) {\n    return {};\n  }\n  const result = {};\n  const queries = _.split(query, '&');\n  _.forEach(queries, (item) => {\n    // 去掉=\n    const str = _.split(item, '=');\n    // 删除掉str中的0和空格，返回处理后的字符串\n    if (_.trim(_.get(str, '0', ''))) {\n      let val = _.trim(_.get(str, '1', ''));\n      try {\n        val = JSON.parse(val);\n      } catch (e) {\n        // console.log({ val });\n      }\n      result[_.toLower(_.trim(_.get(str, '0', '')))] = val;\n    }\n  });\n  return result;\n}\n\n// parse template variable regex params\nexport function ParseMetricRegex(regex = '') {\n  if (!regex) {\n    return [];\n  }\n  regex = regex.replace(/：/g, ':');\n  regex = regex.replace(/，/g, ',');\n  const regexParams = ParseMetricQuery(regex);\n  // console.log({regexParams});\n\n  const result: any[] = [];\n  _.forEach(regexParams, (value, key) => {\n    if (key === 'tag:tag-key') {\n      const valuesArr = _.split(value, ',');\n      _.forEach(valuesArr, (item) => {\n        const temp = _.split(item, ':');\n        if (temp.length === 2) {\n          result.push({ Name: `tag:${temp[0]}`, Values: temp.slice(1) });\n        }\n      });\n    } else {\n      result.push({ Name: key, Values: _.split(value, ',') });\n    }\n  });\n  return result;\n}\n\n// get the actual value of template variable\nfunction parseVariableFormat(varname: string) {\n  varname = String(varname || '');\n  // $varname\n  let varFlag = false;\n  const regResult1 = varname.match(/^\\${?(\\w+)}?/);\n\n  if (regResult1) {\n    varFlag = true;\n    varname = `\\$\\{${regResult1[1]}\\:json\\}`;\n  }\n  // [[varname]]\n  const regResult2 = varname.match(/^\\[\\[(\\w+)(\\:\\w+)?\\]\\]/);\n\n  if (regResult2) {\n    varFlag = true;\n    varname = `\\$\\{${regResult2[1]}\\:json\\}`;\n  }\n  return { varname, varFlag };\n}\n\n// 替换region\nexport function ReplaceVariable(templateSrv, scopedVars, field, multiple = false) {\n  const { varname, varFlag } = parseVariableFormat(field);\n\n  let replaceVar = templateSrv.replace(varname, scopedVars);\n  // console.log({ varname, varFlag, replaceVar });\n\n  if (varFlag) {\n    try {\n      replaceVar = JSON.parse(replaceVar);\n    } catch (error) {}\n  }\n  if (!multiple && _.isArray(replaceVar)) {\n    replaceVar = _.get(replaceVar, '0', '');\n  }\n  return replaceVar;\n}\n\n// get dimensions for instance query param\nexport function GetDimensions(obj) {\n  if (_.isEmpty(obj)) {\n    return [];\n  }\n  const dimensions: any[] = [];\n  _.forEach(obj, (item) => {\n    if (item.Value !== null && item.Value !== undefined && item.Value !== '') {\n      dimensions.push({ Name: item.Name, Value: typeof item.Value === 'string' ? item.Value : `${item.Value}` });\n    }\n  });\n  return dimensions;\n}\n\n// parse query data result for panel\nexport function ParseQueryResult(response, instances: any[] = []) {\n  const instanceList = _.cloneDeep(instances);\n  const dataPoints = _.get(response, 'DataPoints', []);\n\n  // let dimensions = getOtherAlias(dataPoints[0]);\n  // console.log(dimensions);\n\n  return _.map(dataPoints, (dataPoint) => {\n    let instanceAliasValue = _.get(dataPoint, 'Dimensions[0].Value');\n\n    // let instanceAliasValue = dataPoints[0].Dimensions[0].Value;\n    // console.log(dataPoints[0].Dimensions);\n    // console.log(instanceAliasValue);\n    // let allAliasValue = dimensions[0].Value;\n\n    // for (let j = 1; j < dimensions.length; j++) {\n    //   let path = dimensions[j].Value;\n    //   allAliasValue = `${allAliasValue} - ${path}`;\n    // }\n\n    for (let i = 0; i < instanceList.length; i++) {\n      if (isInstanceMatch(instanceList[i], _.get(dataPoint, 'Dimensions', []))) {\n        instanceAliasValue = instanceList[i]._InstanceAliasValue;\n        instanceList.splice(i, 1);\n        break;\n      }\n    }\n    return {\n      target: `${response.MetricName} - ${instanceAliasValue}`,\n      datapoints: parseDataPoint(dataPoint),\n    };\n  });\n}\n\n// parse tencent cloud monitor response data to grafana panel data\nfunction parseDataPoint(dataPoint) {\n  const timestamps = _.get(dataPoint, 'Timestamps', []);\n  const values = _.get(dataPoint, 'Values', []);\n  const result = timestamps.map((timestamp, index) => {\n    return [values[index], timestamp * 1000];\n  });\n\n  return result;\n}\n\n// check whether instance is match or not\nfunction isInstanceMatch(instance, dimensions) {\n  let match = true;\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < dimensions.length; i++) {\n    if (_.get(instance, dimensions[i].Name).toString() !== dimensions[i].Value.toString()) {\n      match = false;\n      break;\n    }\n  }\n  return match;\n}\n\n/**\n * 检查某个变量是否模板变量，即是否匹配 ${varnam} 或 [[varname]]\n *\n * @param field 变量字段名\n */\nexport function isVariable(value) {\n  if (value && (value.match(/^\\${?(\\w+)}?/) || value.match(/^\\[\\[(\\w+)(\\:\\w+)?\\]\\]/))) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * 腾讯云 API 3.0 接口协议\n * @param options 接口请求对象 { url: string, data?: object }\n * @param service 产品名字 'cvm'\n * @param signObj 接口请求相关信息 { region?: string, action: string }\n * @param secretId\n * @param secretKey\n */\nexport async function GetRequestParams(options, service, signObj: any = {}, secretId, datasourceId, backendSrv) {\n  const signParams = {\n    secretId,\n    payload: options.data || '',\n    ...signObj,\n    ...(_.pick(GetServiceAPIInfo(signObj.region || '', service), ['service', 'host', 'version']) || {}),\n    backendSrv,\n    datasourceId,\n  };\n  const sign = new Sign(signParams);\n  const headerSigned = await sign.getHeader();\n  options.headers = Object.assign(options.headers || {}, { ...headerSigned });\n  options.method = 'POST';\n  return options;\n}\n\n/**\n *  腾讯云 API 2.0 接口协议\n * @param options 接口请求对象 { url: string, data?: object }\n * @param service 产品名字 'cvm'\n * @param signObj 接口请求相关信息 { region?: string, action: string }\n * @param secretId\n * @param secretKey\n */\nexport async function GetRequestParamsV2(\n  options: any = {},\n  service,\n  signObj: any = {},\n  secretId,\n  datasourceId,\n  backendSrv\n) {\n  const data = options.data || {};\n  const signParams = {\n    secretId,\n    data,\n    ...signObj,\n    ...(_.pick(GetServiceAPIInfo(signObj.region || '', service), ['host', 'version']) || {}),\n    backendSrv,\n    datasourceId,\n  };\n  options.method = 'POST';\n  const sign = new SignV2(signParams);\n  options.headers = Object.assign(options.headers || {}, { 'Content-Type': 'application/x-www-form-urlencoded' });\n  const { queryString, path } = await sign.generateQueryString();\n  options.data = qs.stringify({ ...options.data, ...queryString });\n  options.url += path;\n  return options;\n}\n\nexport function SliceLength(total = 0, len = 1) {\n  const result: any[] = [];\n  const num = Math.ceil(total / len);\n  for (let i = 1; i < num; i++) {\n    result.push({ Offset: len * i });\n  }\n  return result;\n}\n\nexport const FilterKeys = ['Namespace', 'Offset', 'Limit', 'SearchKey', 'Description', 'OrderBy', 'Order'];\n\nexport function parseDataFromBackendPlugin(res) {\n  const { data } = toDataQueryResponse(res);\n  return {\n    authorization: _.get(data, '[0].meta.custom', ''),\n  };\n}\n","import _ from 'lodash';\nimport { SERVICES } from '../tc_monitor';\n\n/* 从分页数据获取全量数据 */\nconst PageSize = 50;\nfunction getFieldsValue(value, fields) {\n  return fields.map((item) => _.get(value, item, _.get(value, `Result.${item}`, [])));\n}\n\nexport async function fetchAllFactory(fetcher: (args: any) => Promise<any>, _params: any, field: string | string[]) {\n  const params = { ..._params };\n  params.Limit = params.Limit || PageSize; // 默认给个Limit大小为50\n  params.Offset = params.Offset ?? 0; // 默认给个Offset为0\n\n  // 第一次请求，获取总数\n  const rs = (await fetcher(params)) ?? {};\n  const fields = Array.isArray(field) ? field : [field];\n\n  // rs.TotalCount = rs.TotalCount ?? rs.Result.TotalCount ?? [];\n  // const { TotalCount } = rs;\n  const TotalCount = rs.TotalCount ?? rs.Result?.TotalCount ?? rs.TotalCnt ?? rs.Result?.TotalCnt ?? 0;\n  const firstLists = getFieldsValue(rs, fields);\n\n  if (TotalCount === 0 || firstLists[0].length === TotalCount) {\n    // 只有一页，结束\n    return firstLists;\n  }\n\n  // 批量请求\n  const delta = TotalCount - firstLists[0].length;\n  const batchCount = Math.ceil(delta / PageSize);\n  const pmList = new Array(batchCount).fill(0).map((_, index) => {\n    params.Offset = 1 + index; // 忽略offset为0的情况，从1开始\n    return fetcher(params);\n  });\n\n  // 合并\n  const resultList = await Promise.all(pmList); // [ {a: [], b[] }, { a: [], b:[] }]\n\n  return resultList.reduce((acc, cur) => {\n    const lists = getFieldsValue(cur, fields);\n    // [[], [], []] + [[], [], []]\n    acc.forEach((list, index) => list.push(...lists[index]));\n    return acc;\n  }, firstLists);\n}\n\n/**\n * 实例列表接口入参处理\n *\n * @param queries 表单键入内容\n * @param isFilter 是否需要设置为Filters格式\n */\nexport function instanceQueryParamsBaseParse(queries: any, isFilter: boolean) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    const Filters: any[] = [];\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          if (isFilter) {\n            Filters.push({ Name: key, Values: _.uniq(item).slice(0, 5) });\n          } else {\n            params[key] = _.uniq(item);\n          }\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          if (isFilter) {\n            Filters.push({ Name: key, Values: _.get(item, 'value', []).slice(0, 5) });\n          } else {\n            params[key] = _.get(item, 'value');\n          }\n        }\n      } else if (item !== null && item !== undefined && item !== '') {\n        if (isFilter) {\n          Filters.push({ Name: key, Values: item });\n        } else {\n          params[key] = item;\n        }\n      }\n    });\n    if (isFilter && Filters.length > 0) {\n      params.Filters = Filters;\n      return params;\n    }\n  }\n  return params;\n}\n\nexport function getNamesapceFromService(serviceName: string) {\n  return _.get(\n    _.find(SERVICES, (service) => service.service === serviceName),\n    'namespace'\n  );\n}\n\nexport function serviceGroupBy(\n  services: { service: string; label: string; namespace: string; href: string; groupName?: string }[]\n) {\n  const result = services.reduce((acc, cur) => {\n    const { namespace, label, groupName = label } = cur;\n\n    const existedGroup = acc.find((item) => item.label === groupName);\n    if (!existedGroup) {\n      acc.push({ label: groupName, value: groupName, items: [{ label, value: namespace }] });\n      return acc;\n    }\n\n    existedGroup.items.push({ label, value: namespace });\n    return acc;\n  }, [] as any[]);\n\n  // 将只有一个子元素的项目进行特殊处理\n  const rs = result.map((item) =>\n    item.items.length === 1 ? { label: item.items[0].label, value: item.items[0].value } : item\n  );\n  return rs;\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","import coreModule from 'grafana/app/core/core_module';\nimport { DetailQueryConfig } from './types';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nfunction classFactory(detailConfig) {\n  return class QueryCtrl {\n    static _config: DetailQueryConfig;\n\n    /** @ngInject */\n    constructor($scope, $rootScope) {\n      Object.assign($scope, detailConfig);\n\n      $scope.getDropdown = (field) => {\n        const service = GetServiceFromNamespace($scope.namespace);\n        return $scope.datasource.getFilterDropdown(service, { field, region: $scope.region });\n      };\n    }\n  };\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"{{instanceDocUrl}}\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in fieldDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputNumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />    \n      <multi-condition\n        ng-if=\"field.type === 'inputNumberMulti'\"\n        type=\"'inputNumber'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        maxNum=\"field.max\"\n        minNum=\"field.min\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputMulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownMulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <gf-form-dropdown \n        ng-if=\"field.type === 'dropdown'\"\n        model=\"target.queries[field.key]\" \n        allow-custom=\"true\" \n        lookup-text=\"true\" \n        get-options=\"getDropdown(field.key)\" \n        css-class=\"min-width-10\"\n        on-change=\"onChange()\">\n      </gf-form-dropdown>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n      <gf-form-switch \n        ng-if=\"field.type === 'switch'\"\n        class=\"gf-form tc-switch\" \n        label-class=\"width-7\" \n        checked=\"target.queries[field.key]\" \n        switch-class=\"max-width-5\"\n      ></gf-form-switch>\n    </div>\n  </div>\n</div>\n  </div>\n`;\nfunction queryDDOFactory(QueryCtrl) {\n  return function queryDDO() {\n    return {\n      template: template,\n      controller: QueryCtrl,\n      restrict: 'E',\n      scope: {\n        target: '=',\n        showDetail: '=',\n        region: '=',\n        datasource: '=',\n        getDropdownOptions: '&',\n        onChange: '&',\n      },\n    };\n  };\n}\n\nexport default (name: string, config: DetailQueryConfig) => {\n  // QueryCtrl._config = config;\n  const newQueryIns = classFactory(config);\n  coreModule.directive(name, queryDDOFactory(newQueryIns));\n};\n",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\t    /*\n\t     * Local polyfil of Object.create\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {};\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }())\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var i = 0; i < thatSigBytes; i += 4) {\n\t                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            var r = (function (m_w) {\n\t                var m_w = m_w;\n\t                var m_z = 0x3ade68b1;\n\t                var mask = 0xffffffff;\n\n\t                return function () {\n\t                    m_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;\n\t                    m_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;\n\t                    var result = ((m_z << 0x10) + m_w) & mask;\n\t                    result /= 0x100000000;\n\t                    result += 0.5;\n\t                    return result * (Math.random() > .5 ? 1 : -1);\n\t                }\n\t            });\n\n\t            for (var i = 0, rcache; i < nBytes; i += 4) {\n\t                var _r = r((rcache || Math.random()) * 0x100000000);\n\n\t                rcache = _r() * 0x3ade67b7;\n\t                words.push((_r() * 0x100000000) | 0);\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                var processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));","interface DBEvent {\n  target: { result: any; error: any };\n}\n// 数据库结构\ninterface DBTypes {\n  store: StoreType;\n  name?: string;\n  version?: number;\n}\n// store表结构\ninterface StoreType {\n  name: string; // 表名\n  key: string; // 主键名\n  cursorIndex?: { name: string; unique: boolean }[]; // 索引列表\n}\n\n// 数据结构\n// {service: 'cvm', instance: [{ins: 23}]}\ninterface DataType {\n  service: string;\n  [x: string]: any; // 有产品需缓存其他列表\n}\n\n// interface UpdateProps {\n//   storeName: string;\n//   cursorKey: string;\n//   cursorValue?: any;\n//   data: any;\n// }\n\nconst store: StoreType = {\n  name: 'grafanaInstanceList',\n  key: 'service',\n};\nconst promisify = (request: any, type?: string) => {\n  return new Promise<any>((resolve, reject) => {\n    request.onsuccess = (event: DBEvent) => {\n      const returnMap: any = {\n        event: event.target.result,\n        request: request.result,\n        msg: '操作成功',\n      };\n      resolve(returnMap[type || 'msg']);\n    };\n    request.onerror = (event: DBEvent) => reject(event.target.error || '操作失败');\n  });\n};\n// 固定表名和数据库名\nclass IndexedDB {\n  name = 'grafanaDatabase';\n  version = 1;\n\n  constructor(props: DBTypes) {\n    const { name = 'database', version = 1, store } = props;\n    this.name = name;\n    this.version = version;\n\n    this.initDB(store);\n  }\n\n  /**\n   * 初始化数据库\n   * @param store 库表的结构\n   */\n  initDB(store: StoreType) {\n    const indexeddb = window.indexedDB || window.webkitIndexedDB || window.mozIndexedDB || window.msIndexedDB;\n    const request = indexeddb.open(this.name, this.version);\n\n    request.onupgradeneeded = (event: IDBVersionChangeEvent) => {\n      const db = (event.target as IDBOpenDBRequest).result;\n      if (db.objectStoreNames.contains(store.name)) {\n        // 存在表store\n      }\n\n      //  遍历store，设置数据表结构\n      db.createObjectStore(store.name, {\n        keyPath: store.key,\n      });\n    };\n    request.onerror = () => Promise.reject(new Error('初始化数据库失败'));\n    request.onsuccess = () => Promise.resolve('初始化数据库成功');\n  }\n\n  openDB() {\n    const indexeddb = window.indexedDB || window.webkitIndexedDB || window.mozIndexedDB || window.msIndexedDB;\n    const request = indexeddb.open(this.name, this.version);\n\n    return promisify(request, 'event');\n  }\n\n  /**\n   * 新增数据\n   * @param storeName 表名\n   * @param data 添加的数据\n   */\n  async insertData(storeName: string, data: any) {\n    try {\n      // console.time('insertData');\n      const db = await this.openDB();\n      const transaction = db.transaction(storeName, 'readwrite');\n      const objectStore = transaction.objectStore(storeName);\n\n      objectStore.add(data);\n      // console.timeEnd('insertData');\n\n      return new Promise((resolve, reject) => {\n        transaction.oncomplete = function () {\n          // console.timeEnd('insertData');\n          resolve('所有数据插入成功');\n        };\n\n        transaction.onerror = function (event) {\n          reject(event);\n        };\n      });\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n\n  /**\n   * 更新数据\n   * @param props 查询数据的参数以及要修改的值的参数\n   */\n  async addData(data: DataType, isCover?: boolean) {\n    try {\n      // console.log('addData');\n      const storeName = store.name; // 表名\n      const oldData = await this.getData(data.service);\n      const objectStore = await this.getObjectStore(storeName, 'readwrite');\n\n      if (!oldData) {\n        // 不存在则新建\n        this.insertData(storeName, data);\n      }\n      // 存在则更新\n      let newData: any = { ...oldData, ...data };\n      if (isCover) newData = data; // 需要覆盖之前内容\n      // 把更新过的对象放回数据库\n      const requestUpdate = objectStore.put(newData);\n      // console.timeEnd('updateData');\n      return promisify(requestUpdate);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n\n  /**\n   * 获取数据库的值，返回查询到的第一项\n   * @param storeName 表名/存储对象的键\n   * @param cursorKey key\n   * @param cursorValue 要查询索引的值\n   */\n  async getData(seviceName: string) {\n    try {\n      // console.time('getData');\n      const storeName = store.name;\n      const objectStore = await this.getObjectStore(storeName);\n      const request = objectStore.get(seviceName);\n      // console.timeEnd('getData');\n      return promisify(request, 'request');\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n  async getAllData(storeName: string) {\n    try {\n      // console.time('getAllData');\n      const objectStore = await this.getObjectStore(storeName);\n      const request = objectStore.getAll();\n      const result = await promisify(request, 'request');\n      // console.timeEnd('getAllData');\n      return result ? result : [];\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n  /**\n   * 获取对象仓库\n   * @param storeName 表名\n   * @param type readonly 或者 readwrite等\n   */\n  private async getObjectStore(storeName: string, type?: any): Promise<IDBObjectStore> {\n    try {\n      const db = await this.openDB();\n      return db.transaction(storeName, type).objectStore(storeName);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n}\n// console.log('testDDB')\n// const indexDB = new IndexedDB({store});\n// indexDB.addData({service: 'cvm', instance: [{ins: 23}]}).then(e=>{\n//   indexDB.getData('cvm').then(dd=>{console.log({dd})})\n// })\nexport default new IndexedDB({ store });\n","import indexedDB from './indexedDB';\nclass InstanceStorage {\n  // prefix = 'Datasource';\n  // storageKey = 'grafanaInstanceCache';\n  insKey = 'Instances';\n  cacheWay = '';\n  constructor() {}\n  setInstance(service: string, value: Record<string, any>) {\n    return this.setStorage(service, this.insKey, value, true);\n  }\n  async getInstance(service: string) {\n    return this.getStorage(service, this.insKey);\n  }\n  setExtraStorage(service: string, Ekey: string, EValue: Record<string, any>) {\n    return this.setStorage(service, Ekey, EValue, false);\n  }\n  async getExtraStorage(service: string, Ekey: string) {\n    return this.getStorage(service, Ekey);\n  }\n  private setStorage(serviceKey: string, key: string, value: Record<string, any>, isCover = false) {\n    // console.log('set', serviceKey, key, value);\n    return indexedDB.addData(\n      {\n        service: serviceKey,\n        [key]: value,\n      },\n      isCover\n    );\n  }\n  // 获取到模版变量信息\n  private async getStorage(service: string, key?: string) {\n    const storage = await indexedDB.getData(service);\n    // console.log('get', key, storage);\n    return key ? storage?.[key] : storage;\n  }\n}\nexport default new InstanceStorage();\n","// name (产品名称), service（对应的真实service）\nconst SERVICES = [\n  {\n    service: 'cvm',\n    label: '云服务器(CVM)',\n    namespace: 'QCE/CVM',\n    href: 'https://cloud.tencent.com/document/api/213/15688',\n  },\n  {\n    service: 'cdb',\n    label: '云数据库 MySQL(CDB)',\n    namespace: 'QCE/CDB',\n    href: 'https://cloud.tencent.com/document/api/236/15829',\n    groupName: '云数据库',\n  },\n  {\n    service: 'mongoDB',\n    label: '云数据库 MongoDB(CMONGO)',\n    namespace: 'QCE/CMONGO',\n    href: 'https://cloud.tencent.com/document/api/240/38568',\n    groupName: '云数据库',\n  },\n  {\n    service: 'postgres',\n    label: '云数据库 PostgreSQL',\n    namespace: 'QCE/POSTGRES',\n    href: 'https://cloud.tencent.com/document/product/248/45105',\n    groupName: '云数据库',\n  },\n  {\n    service: 'redis',\n    label: '云数据库 redis(REDIS)',\n    namespace: 'QCE/REDIS',\n    href: 'https://cloud.tencent.com/document/product/248/45110',\n    groupName: '云数据库',\n  },\n  {\n    service: 'redisMem',\n    label: '云数据库redis内存版（5s）(REDIS_MEM)',\n    namespace: 'QCE/REDIS_MEM',\n    href: 'https://cloud.tencent.com/document/product/248/49729',\n    groupName: '云数据库',\n  },\n  {\n    service: 'sqlserver',\n    label: '云数据库sqlserver(SQLSERVER)',\n    namespace: 'QCE/SQLSERVER',\n    href: 'https://cloud.tencent.com/document/product/248/45146',\n    groupName: '云数据库',\n  },\n  {\n    service: 'cynosdbMysql',\n    label: '云数据库 CYNOSDB(CYNOSDB_MYSQL)',\n    namespace: 'QCE/CYNOSDB_MYSQL',\n    href: 'https://cloud.tencent.com/document/product/248/45106',\n    groupName: '云数据库',\n  },\n  {\n    service: 'tcaplus',\n    label: '云数据库 TcaplusDB(TCAPLUS)',\n    namespace: 'QCE/TCAPLUS',\n    href: 'https://cloud.tencent.com/document/product/248/45107',\n    groupName: '云数据库',\n  },\n  {\n    service: 'dcdb',\n    label: '分布式数据库 TDSQL MySQL(TDMYSQL)',\n    namespace: 'QCE/TDMYSQL',\n    href: 'https://cloud.tencent.com/document/product/248/45108',\n  },\n  {\n    service: 'pcx',\n    label: '私有网络对等连接(PCX)',\n    namespace: 'QCE/PCX',\n    href: 'https://cloud.tencent.com/document/product/215/5181',\n    groupName: '私有网络',\n  },\n  {\n    service: 'bwp',\n    label: '私有网络带宽包(BWP)',\n    namespace: 'QCE/BWP',\n    href: 'https://cloud.tencent.com/document/api/215/19209',\n    groupName: '私有网络',\n  },\n  {\n    service: 'natGateway',\n    label: '私有网络NAT网关(NAT_GATEWAY)',\n    namespace: 'QCE/NAT_GATEWAY',\n    href: 'https://cloud.tencent.com/document/api/215/36034',\n    groupName: '私有网络',\n  },\n  {\n    service: 'vpngw',\n    label: '私有网络-VPN 网关(VPNGW)',\n    namespace: 'QCE/VPNGW',\n    href: 'https://cloud.tencent.com/document/product/248/45070',\n    groupName: '私有网络',\n  },\n  {\n    service: 'vpnx',\n    label: '私有网络-VPN 通道(VPNX)',\n    namespace: 'QCE/VPNX',\n    href: 'https://cloud.tencent.com/document/product/248/45071',\n    groupName: '私有网络',\n  },\n  {\n    service: 'dcg',\n    label: '私有网络-专线网关(DCG)',\n    namespace: 'QCE/DCG',\n    href: 'https://cloud.tencent.com/document/product/248/45072',\n    groupName: '私有网络',\n  },\n  {\n    service: 'ceipSummary',\n    label: '私有网络-Anycast弹性公网IP(CEIP_SUMMARY)',\n    namespace: 'QCE/CEIP_SUMMARY',\n    href: 'https://cloud.tencent.com/document/product/248/50381',\n    groupName: '私有网络',\n  },\n  {\n    service: 'vpcNetDetect',\n    label: '私有网络-网络探测(VPC_NET_DETECT)',\n    namespace: 'QCE/VPC_NET_DETECT',\n    href: 'https://cloud.tencent.com/document/product/248/50384',\n    groupName: '私有网络',\n  },\n  {\n    service: 'vbc',\n    label: '私有网络云联网(VBC)',\n    namespace: 'QCE/VBC',\n    href: 'https://cloud.tencent.com/document/product/248/45073',\n    groupName: '私有网络',\n  },\n  {\n    service: 'lb',\n    label: '私有网络弹性公网IP(LB)',\n    namespace: 'QCE/LB',\n    href: 'https://cloud.tencent.com/document/product/248/45099',\n    groupName: '私有网络',\n  },\n  {\n    service: 'lbPublic',\n    label: '公网负载均衡监控指标(LB_PUBLIC)',\n    namespace: 'QCE/LB_PUBLIC',\n    href: 'https://cloud.tencent.com/document/product/248/51898',\n    groupName: '负载均衡（多场景版）',\n  },\n  {\n    service: 'lbPrivate',\n    label: '内网负载均衡四层协议监控指标(LB_PRIVATE)',\n    namespace: 'QCE/LB_PRIVATE',\n    href: 'https://cloud.tencent.com/document/product/248/51899',\n    groupName: '负载均衡（多场景版）',\n  },\n  {\n    service: 'loadBalance',\n    label: '内网负载均衡七层协议监控指标(LOADBALANCE)',\n    namespace: 'QCE/LOADBALANCE',\n    href: 'https://cloud.tencent.com/document/product/248/51901',\n    groupName: '负载均衡（多场景版）',\n  },\n  {\n    service: 'vClb',\n    label: '负载均衡（精简版）',\n    namespace: 'QCE/V_CLB',\n    href: 'https://cloud.tencent.com/document/product/248/51901',\n    groupName: '负载均衡（精简版）',\n  },\n  {\n    service: 'cdn',\n    label: '国内域名(CDN)',\n    namespace: 'QCE/CDN',\n    hideRegion: true,\n    href: 'https://cloud.tencent.com/document/product/248/50386',\n    groupName: 'CDN',\n  },\n  {\n    service: 'cdnProvince',\n    label: '省份域名(CDN_LOG_DATA)',\n    namespace: 'QCE/CDN_LOG_DATA',\n    hideRegion: true,\n    href: 'https://cloud.tencent.com/document/product/248/50388',\n    groupName: 'CDN',\n  },\n  {\n    service: 'ovCdn',\n    label: '国外域名(OV_CDN)',\n    namespace: 'QCE/OV_CDN',\n    hideRegion: true,\n    href: 'https://cloud.tencent.com/document/product/248/50387',\n    groupName: 'CDN',\n  },\n  {\n    service: 'scf',\n    label: '云函数(SCF)',\n    namespace: 'QCE/SCF_V2',\n    href: 'https://cloud.tencent.com/document/product/248/45130',\n  },\n  {\n    service: 'cfs',\n    label: '文件存储(CFS)',\n    namespace: 'QCE/CFS',\n    href: 'https://cloud.tencent.com/document/product/248/45143',\n  },\n  {\n    service: 'cos',\n    label: '对象存储(COS)',\n    namespace: 'QCE/COS',\n    href: 'https://cloud.tencent.com/document/product/248/45140',\n  },\n  {\n    service: 'ckafka',\n    label: '消息队列(CKAFKA)',\n    namespace: 'QCE/CKAFKA',\n    href: 'https://cloud.tencent.com/document/product/248/45121',\n    groupName: '消息队列',\n  },\n  {\n    service: 'cmq',\n    label: '消息队列CMQ(队列服务监控CMQ)',\n    namespace: 'QCE/CMQ',\n    href: 'https://cloud.tencent.com/document/product/248/45114',\n    groupName: '消息队列',\n  },\n  {\n    service: 'cmqTopic',\n    label: '消息队列CMQTOPIC(主题订阅监控)',\n    namespace: 'QCE/CMQTOPIC',\n    href: 'https://cloud.tencent.com/document/product/248/45113',\n    groupName: '消息队列',\n  },\n  {\n    service: 'tdmq',\n    label: '消息队列 TDMQ(TDMQ)',\n    namespace: 'QCE/TDMQ',\n    href: 'https://cloud.tencent.com/document/product/248/51450',\n    groupName: '消息队列',\n  },\n  {\n    service: 'dcx',\n    label: '专线接入-专用通道(DCX)',\n    namespace: 'QCE/DCX',\n    href: 'https://cloud.tencent.com/document/product/248/45101',\n    groupName: '专线接入',\n  },\n  {\n    service: 'dc',\n    label: '专线接入-物理专线(DC)',\n    namespace: 'QCE/DC',\n    href: 'https://cloud.tencent.com/document/product/248/45102',\n    groupName: '专线接入',\n  },\n  {\n    service: 'cpm',\n    label: '黑石物理服务器(CPM)',\n    namespace: 'QCE/CPM',\n    href: 'https://cloud.tencent.com/document/product/248/45881',\n    groupName: '黑石物理服务器',\n  },\n  {\n    service: 'bmPcx',\n    label: '黑石对等连接(BM_PCX)',\n    namespace: 'QCE/BM_PCX',\n    href: 'https://cloud.tencent.com/document/product/248/45884',\n    groupName: '黑石物理服务器',\n  },\n  {\n    service: 'bmLb',\n    label: '黑石外网负载均衡(BM_LB)',\n    namespace: 'QCE/BM_LB',\n    href: 'https://cloud.tencent.com/document/product/248/45886',\n  },\n  {\n    service: 'bmIntraLb',\n    label: '黑石内网负载均衡(BM_INTRA_LB)',\n    namespace: 'QCE/BM_INTRA_LB',\n    href: 'https://cloud.tencent.com/document/product/248/45885',\n    groupName: '黑石物理服务器',\n  },\n  {\n    service: 'ces',\n    label: 'Elasticsearch指标(CES)',\n    namespace: 'QCE/CES',\n    href: 'https://cloud.tencent.com/document/product/248/45129',\n  },\n  {\n    service: 'mrHDFS',\n    label: '弹性MapReduce(HDFS)',\n    namespace: 'QCE/TXMR_HDFS',\n    href: 'https://cloud.tencent.com/document/product/248/44797',\n    groupName: '弹性MapReduce',\n  },\n  {\n    service: 'mrHBASE',\n    label: '弹性MapReduce(HBASE)',\n    namespace: 'QCE/TXMR_HBASE',\n    href: 'https://cloud.tencent.com/document/product/248/45567',\n    groupName: '弹性MapReduce',\n  },\n  {\n    service: 'mrHIVE',\n    label: '弹性MapReduce(HIVE)',\n    namespace: 'QCE/TXMR_HIVE',\n    href: 'https://cloud.tencent.com/document/product/248/45569',\n    groupName: '弹性MapReduce',\n  },\n  {\n    service: 'mrNODE',\n    label: '弹性MapReduce(NODE)',\n    namespace: 'QCE/TXMR_NODE',\n    href: 'https://cloud.tencent.com/document/product/248/45570',\n    groupName: '弹性MapReduce',\n  },\n  {\n    service: 'mrPRESTO',\n    label: '弹性MapReduce(PRESTO)',\n    namespace: 'QCE/TXMR_PRESTO',\n    href: 'https://cloud.tencent.com/document/product/248/45571',\n    groupName: '弹性MapReduce',\n  },\n  {\n    service: 'mrSPARK',\n    label: '弹性MapReduce(SPARK)',\n    namespace: 'QCE/TXMR_SPARK',\n    href: 'https://cloud.tencent.com/document/product/248/45572',\n    groupName: '弹性MapReduce',\n  },\n  {\n    service: 'mrYARN',\n    label: '弹性MapReduce(YARN)',\n    namespace: 'QCE/TXMR_YARN',\n    href: 'https://cloud.tencent.com/document/product/248/45573',\n    groupName: '弹性MapReduce',\n  },\n  {\n    service: 'mrZOOKEEPER',\n    label: '弹性MapReduce(ZOOKEEPER)',\n    namespace: 'QCE/TXMR_ZOOKEEPER',\n    href: 'https://cloud.tencent.com/document/product/248/45574',\n    groupName: '弹性MapReduce',\n  },\n  {\n    service: 'cbs',\n    label: '云硬盘(BLOCK_STORAGE)',\n    namespace: 'QCE/BLOCK_STORAGE',\n    href: 'https://cloud.tencent.com/document/product/362/2345',\n  },\n  {\n    service: 'apigateway',\n    label: 'API 网关(APIGATEWAY)',\n    namespace: 'QCE/APIGATEWAY',\n    href: 'https://cloud.tencent.com/document/product/248/45127',\n  },\n  {\n    service: 'qaap',\n    label: '全球应用加速(QAAP)',\n    namespace: 'QCE/QAAP',\n    href: 'https://cloud.tencent.com/document/product/608',\n  },\n  {\n    service: 'ecm',\n    label: '边缘计算和网络监控(ECM)',\n    hideRegion: true,\n    namespace: 'QCE/ECM',\n    href: 'https://cloud.tencent.com/document/product/1108',\n    groupName: '边缘计算机器',\n  },\n  {\n    service: 'ecmBlockStorage',\n    label: '边缘计算存储监控(ECM_BLOCK_STORAGE)',\n    hideRegion: true,\n    namespace: 'QCE/ECM_BLOCK_STORAGE',\n    href: 'https://cloud.tencent.com/document/product/1108',\n    groupName: '边缘计算机器',\n  },\n  {\n    service: 'ecmLb',\n    label: '边缘计算负载均衡(ECM_LB)',\n    hideRegion: true,\n    namespace: 'QCE/ECM_LB',\n    href: 'https://cloud.tencent.com/document/product/1108',\n    groupName: '边缘计算机器',\n  },\n  {\n    service: 'gse',\n    label: '游戏服务器伸缩监控指标(GSE))',\n    namespace: 'QCE/GSE',\n    href: 'https://cloud.tencent.com/document/product/1165',\n  },\n  // {\n  //   service: 'waf',\n  //   label: 'Web 应用防火墙(WAF)',\n  //   hideRegion: true,\n  //   namespace: 'QCE/WAF',\n  //   href: 'https://cloud.tencent.com/document/product/627',\n  // },\n];\nconst Datasources = {};\nconst InitStates = {};\nconst InstanceAliasList = {};\nconst GetInstanceQueryParams = {};\n\n/**\n * 由于目录命名不规范，导致需要使用额外逻辑保证正确性。从目录到具体service的映射\n */\nconst hackModuleName = {\n  // lb_loadBalance: 'loadBalance',\n  postgresql: 'postgres',\n  mongodb: 'mongoDB',\n  clb: ['lbPrivate', 'lbPublic', 'loadBalance'],\n  mr: ['mrHDFS', 'mrHBASE', 'mrHIVE', 'mrNODE', 'mrPRESTO', 'mrSPARK', 'mrYARN', 'mrZOOKEEPER'],\n};\n\nconst requireModule = (require as any).context('./', true, /^\\.\\/[a-zA-Z]\\w+\\/(datasource)|(query(_def)?)\\.ts$/);\n\nrequireModule.keys().forEach((filePath) => {\n  let [, moduleName, fileName] = filePath.split('/');\n\n  // hack： 这里是由于产品目录命名不规范,所以才会多这么一段代码\n  moduleName = hackModuleName[moduleName] ?? moduleName;\n\n  // 目录与模块的映射关系，不管是一对一还是一对多，均按数组进行统一处理\n  [].concat(moduleName).forEach((module: string) => {\n    // 这个service就是产品配置中的service，需要注意这里的service是根据目录名称算出来的，因此目录名称一定要和service对应\n    const service = module.replace(/_([a-zA-Z])/g, (_, b) => b.toUpperCase());\n    const prefix = service.toUpperCase(); // 命名规则\n\n    // datasource\n    if (fileName === 'datasource.ts') {\n      const Cls = require(`${filePath}`).default;\n\n      // 想办法为实例注入service，不能为prototype或则类本身注入，因为会造成互相污染，详尽mrDatasource\n      Datasources[`${prefix}Datasource`] = class {\n        constructor(...params) {\n          const target = new Cls(...params, service);\n          target.service = service;\n          // eslint-disable-next-line no-constructor-return\n          return target;\n        }\n      };\n    }\n    // query\n    if (fileName === 'query.ts') {\n      require(`${filePath}`);\n    }\n    // query_def\n    if (fileName === 'query_def.ts') {\n      const alias = `${prefix}InstanceAliasList`;\n      const getParams = `${prefix}GetInstanceQueryParams`;\n\n      const target = require(`${filePath}`);\n\n      InitStates[service] = target.default; // FIXME: 这里需不需要深拷贝？\n      InstanceAliasList[alias] = target[alias] ?? target['InstanceAliasList'];\n      GetInstanceQueryParams[getParams] = target[getParams] ?? target['GetInstanceQueryParams'];\n    }\n  });\n});\n\nexport {\n  InitStates as InitServiceState,\n  SERVICES,\n  Datasources,\n  InstanceAliasList,\n  GetInstanceQueryParams,\n  // DefaultDimensions\n};\n\n// console.log(Datasources, InitStates, InstanceAliasList, GetInstanceQueryParams);\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/TDMQ';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'tdmqQuery';\n\nconst TDMQInvalidDemensions = {\n  tenantId: 'ClusterId',\n  topicName: 'TopicName',\n  environmentId: 'EnvironmentId',\n};\n\n// 需和文件名对应\nconst TDMQInstanceAliasList = ['ClusterId', 'ClusterName'];\n\nconst templateQueryIdMap = {\n  instance: 'ClusterId',\n  topicName: 'TopicName',\n  environmentId: 'EnvironmentId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst TDMQFilterFields = {\n  Limit: 20,\n  Offset: 0,\n};\n\nconst TDMQFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n];\n\nconst CDNPROVINCE_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'ClusterId',\n  // 此处key应该是经过TDMQInvalidDemensions处理后的\n  topicName: '',\n  environmentId: '',\n  queries: TDMQFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nconst regionSupported = [\n  { text: '华北地区(北京)', value: 'ap-beijing' },\n  { text: '西南地区(成都)', value: 'ap-chengdu' },\n  { text: '华南地区(广州)', value: 'ap-guangzhou' },\n  { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n  { text: '华东地区(上海)', value: 'ap-shanghai' },\n  { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n  { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n  { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },\n];\nfunction modifyDimensons(metricItem) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    if (item.Dimensions.indexOf('topicName') !== -1 && item.Dimensions.indexOf('environmentId') === -1) {\n      item.Dimensions.push('environmentId');\n    }\n  });\n  return metricTmp;\n}\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  topicName: 'topicName',\n  environmentId: 'environmentId',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  TopicName: {\n    dim_KeyInStorage: keyInStorage.topicName,\n    dim_KeyInTarget: 'topicName',\n    dim_KeyInMap: templateQueryIdMap.topicName,\n  },\n  EnvironmentId: {\n    dim_KeyInStorage: keyInStorage.environmentId,\n    dim_KeyInTarget: 'environmentId',\n    dim_KeyInMap: templateQueryIdMap.environmentId,\n  },\n};\nexport default CDNPROVINCE_STATE;\nexport {\n  TDMQFilterFieldsDescriptor,\n  templateQueryIdMap,\n  TDMQInstanceAliasList,\n  TDMQInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryMonitorExtraConfg,\n  keyInStorage,\n  modifyDimensons,\n  regionSupported,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as TDMQGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { isArray, cloneDeep } from 'lodash';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/TDMYSQL';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'dcdbQuery';\n\nconst DCDBInvalidDemensions = {\n  nodeid: 'NodeId',\n  instanceid: 'InstanceId',\n  shardid: 'ShardInstanceId',\n  ShardId: 'ShardInstanceId',\n};\n\n// 需和文件名对应\nconst DCDBInstanceAliasList = ['InstanceId', 'InstanceName'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n  NodeId: 'NodeId',\n  ShardInstanceId: 'ShardInstanceId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst DCDBFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  InstanceIds: [],\n  SearchName: '',\n  SearchKey: '',\n  ProjectIds: [],\n  // IsFilterVpc\n  VpcId: '',\n  SubnetId: '',\n\n  OrderBy: {},\n  OrderByType: {},\n  // IsFilterExcluster: {},\n  ExclusterType: {},\n\n  ExclusterIds: [],\n  FilterInstanceType: {},\n};\n\nconst DCDBFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceIds',\n    enDescriptor: 'InstanceIds',\n    cnDescriptor: '实例 ID 查询',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'SearchName',\n    enDescriptor: 'SearchName',\n    cnDescriptor: '搜索的字段名,当前支持的值有：instancename、vip、all',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SearchKey',\n    enDescriptor: 'SearchKey',\n    cnDescriptor: '搜索的关键字',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'ProjectIds',\n    enDescriptor: 'ProjectIds',\n    cnDescriptor: '按项目 ID 查询',\n    link: '',\n    type: 'inputNumberMulti',\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'VpcId',\n    cnDescriptor: '私有网络 ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SubnetId',\n    enDescriptor: 'SubnetId',\n    cnDescriptor: '私有网络的子网 ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'projectId', value: 'projectId' },\n      { text: 'createtime', value: 'createtime' },\n      { text: 'instancename', value: 'instancename' },\n    ],\n  },\n  {\n    key: 'OrderByType',\n    enDescriptor: 'OrderByType',\n    cnDescriptor: '私有网络 ID',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'desc', value: 'desc' },\n      { text: 'asc', value: 'asc' },\n    ],\n  },\n  {\n    key: 'ExclusterType',\n    enDescriptor: 'ExclusterType',\n    cnDescriptor: '集群类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '非独享集群', value: 1 },\n      { text: '独享集群', value: 2 },\n      { text: '全部', value: 0 },\n      { text: 'asc', value: 'asc' },\n    ],\n  },\n  {\n    key: 'ExclusterIds',\n    enDescriptor: 'ExclusterIds',\n    cnDescriptor: '独享集群ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'FilterInstanceType',\n    enDescriptor: 'FilterInstanceType',\n    cnDescriptor: '实例类型过滤',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '独享实例', value: 1 },\n      { text: '主实例', value: 2 },\n      { text: '灾备实例', value: 3 },\n    ],\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/557/16140',\n  namespace,\n  fieldDescriptor: DCDBFilterFieldsDescriptor,\n};\n\nconst DCDB_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  ShardId: '',\n  NodeId: '',\n  queries: DCDBFilterFields,\n};\nconst modifyMetricConf = {\n  shardid: 'ShardId',\n  instanceid: 'InstanceId',\n  nodeid: 'NodeId',\n};\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = item.Dimensions.map((v) => modifyMetricConf[v] || v);\n  });\n  return metricTmp;\n}\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params = instanceQueryParamsBaseParse(queries, false);\n  // 特殊处理\n  params.IsFilterVpc = false;\n  params.IsFilterExcluster = false;\n  if (params.VpcId || params.SubnetId) params.IsFilterVpc = true;\n  if (params.ExclusterType) params.IsFilterExcluster = true;\n  if (isArray(params.FilterInstanceType)) params.FilterInstanceType = params.FilterInstanceType.join(',');\n  return params;\n}\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  NodeId: 'NodeId',\n  ShardInstanceId: 'ShardId',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  NodeId: {\n    dim_KeyInStorage: keyInStorage.NodeId,\n    dim_KeyInTarget: 'NodeId',\n    dim_KeyInMap: templateQueryIdMap.NodeId,\n  },\n  ShardInstanceId: {\n    dim_KeyInStorage: keyInStorage.ShardInstanceId,\n    dim_KeyInTarget: 'ShardId',\n    dim_KeyInMap: templateQueryIdMap.ShardInstanceId,\n  },\n};\n// 和其他产品的展示保持一致\nconst regionSupported = [\n  { text: '华北地区(北京)', value: 'ap-beijing' },\n  { text: '西南地区(成都)', value: 'ap-chengdu' },\n  { text: '西南地区(重庆)', value: 'ap-chongqing' },\n  { text: '华南地区(广州)', value: 'ap-guangzhou' },\n  { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n  { text: '亚太南部(孟买)', value: 'ap-mumbai' },\n  { text: '华东地区(南京)', value: 'ap-nanjing' },\n  { text: '华东地区(上海)', value: 'ap-shanghai' },\n  { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },\n  { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n  { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n  { text: '亚太东北(东京)', value: 'ap-tokyo' },\n  { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },\n  { text: '美国东部(弗吉尼亚)', value: 'na-ashburn' },\n  { text: '美国西部(硅谷)', value: 'na-siliconvalley' },\n  { text: '北美地区(多伦多)', value: 'na-toronto' },\n];\nexport default DCDB_STATE;\nexport {\n  DCDBFilterFieldsDescriptor,\n  templateQueryIdMap,\n  DCDBInstanceAliasList,\n  DCDBInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  regionSupported,\n  keyInStorage,\n  modifyDimensons,\n  queryMonitorExtraConfg,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as DCDBGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/GSE';\nconst fleetId = 'FleetId'; // 为和cvm其他产品保持一致，即将string[]改为Array<{fleetid: xxx}>,在此声明key\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'gseQuery';\n\nconst GSEInvalidDemensions = {\n  instanceid: 'InstanceId',\n  fleetid: 'FleetId',\n  queuename: 'Name',\n};\n\n// 需和文件名对应\nconst GSEInstanceAliasList = ['InstanceId', 'PrivateIpAddress', 'IpAddress'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n  Name: 'Name',\n  FleetId: fleetId,\n};\n\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  fleet: 'fleet', // 实例队列\n  queue: 'queueName', // 会话队列\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  FleetId: {\n    dim_KeyInStorage: keyInStorage.fleet,\n    dim_KeyInTarget: 'FleetId',\n    dim_KeyInMap: templateQueryIdMap.FleetId,\n  },\n  Name: {\n    dim_KeyInStorage: keyInStorage.queue,\n    dim_KeyInTarget: 'Name',\n    dim_KeyInMap: templateQueryIdMap.Name,\n  },\n};\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst GSEFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  InstanceId: '',\n  FleetId: '',\n};\n\nconst GSEFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceId',\n    enDescriptor: 'resourceName',\n    cnDescriptor: '资源名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'FleetId',\n    enDescriptor: 'tagKey',\n    cnDescriptor: '标签键',\n    link: '',\n    type: 'input',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/1165/42604',\n  namespace,\n  fieldDescriptor: GSEFilterFieldsDescriptor,\n};\n\nconst GSE_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  FleetId: '', //  服务器实例\n  Name: '', // 队列名称\n  queries: GSEFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\n// regions for dropdown\nconst regionSupported = [\n  { text: '亚太东南(曼谷)', value: 'ap-bangkok' },\n  { text: '华北地区(北京)', value: 'ap-beijing' },\n  { text: '西南地区(成都)', value: 'ap-chengdu' },\n  // { text: '西南地区(重庆)', value: 'ap-chongqing' },\n  { text: '华南地区(广州)', value: 'ap-guangzhou' },\n  { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n  { text: '亚太南部(孟买)', value: 'ap-mumbai' },\n  { text: '亚太东北(首尔)', value: 'ap-seoul' },\n  { text: '华东地区(南京)', value: 'ap-nanjing' },\n  { text: '华东地区(上海)', value: 'ap-shanghai' },\n  // { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },\n  // { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n  { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n  { text: '亚太东北(东京)', value: 'ap-tokyo' },\n  { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },\n  { text: '美国东部(弗吉尼亚)', value: 'na-ashburn' },\n  { text: '美国西部(硅谷)', value: 'na-siliconvalley' },\n  // { text: '北美地区(多伦多)', value: 'na-toronto' },\n];\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = item.Dimensions.map((v) => GSEInvalidDemensions[v] || v);\n  });\n  return metricTmp;\n}\nexport default GSE_STATE;\nexport {\n  GSEFilterFieldsDescriptor,\n  templateQueryIdMap,\n  GSEInstanceAliasList,\n  GSEInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  regionSupported,\n  modifyDimensons,\n  queryMonitorExtraConfg,\n  fleetId,\n  keyInStorage,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as GSEGetInstanceQueryParams,\n};\n",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./evpkdf\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./evpkdf\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher core components.\n\t */\n\tCryptoJS.lib.Cipher || (function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var Base64 = C_enc.Base64;\n\t    var C_algo = C.algo;\n\t    var EvpKDF = C_algo.EvpKDF;\n\n\t    /**\n\t     * Abstract base cipher template.\n\t     *\n\t     * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\n\t     * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\n\t     * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\n\t     * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\n\t     */\n\t    var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {WordArray} iv The IV to use for this operation.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Creates this cipher in encryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createEncryptor: function (key, cfg) {\n\t            return this.create(this._ENC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Creates this cipher in decryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createDecryptor: function (key, cfg) {\n\t            return this.create(this._DEC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created cipher.\n\t         *\n\t         * @param {number} xformMode Either the encryption or decryption transormation mode constant.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });\n\t         */\n\t        init: function (xformMode, key, cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Store transform mode and key\n\t            this._xformMode = xformMode;\n\t            this._key = key;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this cipher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     cipher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-cipher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Adds data to be encrypted or decrypted.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.process('data');\n\t         *     var encrypted = cipher.process(wordArray);\n\t         */\n\t        process: function (dataUpdate) {\n\t            // Append\n\t            this._append(dataUpdate);\n\n\t            // Process available blocks\n\t            return this._process();\n\t        },\n\n\t        /**\n\t         * Finalizes the encryption or decryption process.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after final processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.finalize();\n\t         *     var encrypted = cipher.finalize('data');\n\t         *     var encrypted = cipher.finalize(wordArray);\n\t         */\n\t        finalize: function (dataUpdate) {\n\t            // Final data update\n\t            if (dataUpdate) {\n\t                this._append(dataUpdate);\n\t            }\n\n\t            // Perform concrete-cipher logic\n\t            var finalProcessedData = this._doFinalize();\n\n\t            return finalProcessedData;\n\t        },\n\n\t        keySize: 128/32,\n\n\t        ivSize: 128/32,\n\n\t        _ENC_XFORM_MODE: 1,\n\n\t        _DEC_XFORM_MODE: 2,\n\n\t        /**\n\t         * Creates shortcut functions to a cipher's object interface.\n\t         *\n\t         * @param {Cipher} cipher The cipher to create a helper for.\n\t         *\n\t         * @return {Object} An object with encrypt and decrypt shortcut functions.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\n\t         */\n\t        _createHelper: (function () {\n\t            function selectCipherStrategy(key) {\n\t                if (typeof key == 'string') {\n\t                    return PasswordBasedCipher;\n\t                } else {\n\t                    return SerializableCipher;\n\t                }\n\t            }\n\n\t            return function (cipher) {\n\t                return {\n\t                    encrypt: function (message, key, cfg) {\n\t                        return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);\n\t                    },\n\n\t                    decrypt: function (ciphertext, key, cfg) {\n\t                        return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);\n\t                    }\n\t                };\n\t            };\n\t        }())\n\t    });\n\n\t    /**\n\t     * Abstract base stream cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\n\t     */\n\t    var StreamCipher = C_lib.StreamCipher = Cipher.extend({\n\t        _doFinalize: function () {\n\t            // Process partial blocks\n\t            var finalProcessedBlocks = this._process(!!'flush');\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 1\n\t    });\n\n\t    /**\n\t     * Mode namespace.\n\t     */\n\t    var C_mode = C.mode = {};\n\n\t    /**\n\t     * Abstract base block cipher mode template.\n\t     */\n\t    var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({\n\t        /**\n\t         * Creates this mode for encryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\n\t         */\n\t        createEncryptor: function (cipher, iv) {\n\t            return this.Encryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Creates this mode for decryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\n\t         */\n\t        createDecryptor: function (cipher, iv) {\n\t            return this.Decryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created mode.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\n\t         */\n\t        init: function (cipher, iv) {\n\t            this._cipher = cipher;\n\t            this._iv = iv;\n\t        }\n\t    });\n\n\t    /**\n\t     * Cipher Block Chaining mode.\n\t     */\n\t    var CBC = C_mode.CBC = (function () {\n\t        /**\n\t         * Abstract base CBC mode.\n\t         */\n\t        var CBC = BlockCipherMode.extend();\n\n\t        /**\n\t         * CBC encryptor.\n\t         */\n\t        CBC.Encryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // XOR and encrypt\n\t                xorBlock.call(this, words, offset, blockSize);\n\t                cipher.encryptBlock(words, offset);\n\n\t                // Remember this block to use with next block\n\t                this._prevBlock = words.slice(offset, offset + blockSize);\n\t            }\n\t        });\n\n\t        /**\n\t         * CBC decryptor.\n\t         */\n\t        CBC.Decryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // Remember this block to use with next block\n\t                var thisBlock = words.slice(offset, offset + blockSize);\n\n\t                // Decrypt and XOR\n\t                cipher.decryptBlock(words, offset);\n\t                xorBlock.call(this, words, offset, blockSize);\n\n\t                // This block becomes the previous block\n\t                this._prevBlock = thisBlock;\n\t            }\n\t        });\n\n\t        function xorBlock(words, offset, blockSize) {\n\t            // Shortcut\n\t            var iv = this._iv;\n\n\t            // Choose mixing block\n\t            if (iv) {\n\t                var block = iv;\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            } else {\n\t                var block = this._prevBlock;\n\t            }\n\n\t            // XOR blocks\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= block[i];\n\t            }\n\t        }\n\n\t        return CBC;\n\t    }());\n\n\t    /**\n\t     * Padding namespace.\n\t     */\n\t    var C_pad = C.pad = {};\n\n\t    /**\n\t     * PKCS #5/7 padding strategy.\n\t     */\n\t    var Pkcs7 = C_pad.Pkcs7 = {\n\t        /**\n\t         * Pads data using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to pad.\n\t         * @param {number} blockSize The multiple that the data should be padded to.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\n\t         */\n\t        pad: function (data, blockSize) {\n\t            // Shortcut\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count padding bytes\n\t            var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t            // Create padding word\n\t            var paddingWord = (nPaddingBytes << 24) | (nPaddingBytes << 16) | (nPaddingBytes << 8) | nPaddingBytes;\n\n\t            // Create padding\n\t            var paddingWords = [];\n\t            for (var i = 0; i < nPaddingBytes; i += 4) {\n\t                paddingWords.push(paddingWord);\n\t            }\n\t            var padding = WordArray.create(paddingWords, nPaddingBytes);\n\n\t            // Add padding\n\t            data.concat(padding);\n\t        },\n\n\t        /**\n\t         * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to unpad.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.unpad(wordArray);\n\t         */\n\t        unpad: function (data) {\n\t            // Get number of padding bytes from last byte\n\t            var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t            // Remove padding\n\t            data.sigBytes -= nPaddingBytes;\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract base block cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\n\t     */\n\t    var BlockCipher = C_lib.BlockCipher = Cipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Mode} mode The block mode to use. Default: CBC\n\t         * @property {Padding} padding The padding strategy to use. Default: Pkcs7\n\t         */\n\t        cfg: Cipher.cfg.extend({\n\t            mode: CBC,\n\t            padding: Pkcs7\n\t        }),\n\n\t        reset: function () {\n\t            // Reset cipher\n\t            Cipher.reset.call(this);\n\n\t            // Shortcuts\n\t            var cfg = this.cfg;\n\t            var iv = cfg.iv;\n\t            var mode = cfg.mode;\n\n\t            // Reset block mode\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                var modeCreator = mode.createEncryptor;\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                var modeCreator = mode.createDecryptor;\n\t                // Keep at least one block in the buffer for unpadding\n\t                this._minBufferSize = 1;\n\t            }\n\n\t            if (this._mode && this._mode.__creator == modeCreator) {\n\t                this._mode.init(this, iv && iv.words);\n\t            } else {\n\t                this._mode = modeCreator.call(mode, this, iv && iv.words);\n\t                this._mode.__creator = modeCreator;\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (words, offset) {\n\t            this._mode.processBlock(words, offset);\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcut\n\t            var padding = this.cfg.padding;\n\n\t            // Finalize\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                // Pad data\n\t                padding.pad(this._data, this.blockSize);\n\n\t                // Process final blocks\n\t                var finalProcessedBlocks = this._process(!!'flush');\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                // Process final blocks\n\t                var finalProcessedBlocks = this._process(!!'flush');\n\n\t                // Unpad data\n\t                padding.unpad(finalProcessedBlocks);\n\t            }\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 128/32\n\t    });\n\n\t    /**\n\t     * A collection of cipher parameters.\n\t     *\n\t     * @property {WordArray} ciphertext The raw ciphertext.\n\t     * @property {WordArray} key The key to this ciphertext.\n\t     * @property {WordArray} iv The IV used in the ciphering operation.\n\t     * @property {WordArray} salt The salt used with a key derivation function.\n\t     * @property {Cipher} algorithm The cipher algorithm.\n\t     * @property {Mode} mode The block mode used in the ciphering operation.\n\t     * @property {Padding} padding The padding scheme used in the ciphering operation.\n\t     * @property {number} blockSize The block size of the cipher.\n\t     * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.\n\t     */\n\t    var CipherParams = C_lib.CipherParams = Base.extend({\n\t        /**\n\t         * Initializes a newly created cipher params object.\n\t         *\n\t         * @param {Object} cipherParams An object with any of the possible cipher parameters.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.lib.CipherParams.create({\n\t         *         ciphertext: ciphertextWordArray,\n\t         *         key: keyWordArray,\n\t         *         iv: ivWordArray,\n\t         *         salt: saltWordArray,\n\t         *         algorithm: CryptoJS.algo.AES,\n\t         *         mode: CryptoJS.mode.CBC,\n\t         *         padding: CryptoJS.pad.PKCS7,\n\t         *         blockSize: 4,\n\t         *         formatter: CryptoJS.format.OpenSSL\n\t         *     });\n\t         */\n\t        init: function (cipherParams) {\n\t            this.mixIn(cipherParams);\n\t        },\n\n\t        /**\n\t         * Converts this cipher params object to a string.\n\t         *\n\t         * @param {Format} formatter (Optional) The formatting strategy to use.\n\t         *\n\t         * @return {string} The stringified cipher params.\n\t         *\n\t         * @throws Error If neither the formatter nor the default formatter is set.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = cipherParams + '';\n\t         *     var string = cipherParams.toString();\n\t         *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\n\t         */\n\t        toString: function (formatter) {\n\t            return (formatter || this.formatter).stringify(this);\n\t        }\n\t    });\n\n\t    /**\n\t     * Format namespace.\n\t     */\n\t    var C_format = C.format = {};\n\n\t    /**\n\t     * OpenSSL formatting strategy.\n\t     */\n\t    var OpenSSLFormatter = C_format.OpenSSL = {\n\t        /**\n\t         * Converts a cipher params object to an OpenSSL-compatible string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The OpenSSL-compatible string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            // Shortcuts\n\t            var ciphertext = cipherParams.ciphertext;\n\t            var salt = cipherParams.salt;\n\n\t            // Format\n\t            if (salt) {\n\t                var wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\n\t            } else {\n\t                var wordArray = ciphertext;\n\t            }\n\n\t            return wordArray.toString(Base64);\n\t        },\n\n\t        /**\n\t         * Converts an OpenSSL-compatible string to a cipher params object.\n\t         *\n\t         * @param {string} openSSLStr The OpenSSL-compatible string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\n\t         */\n\t        parse: function (openSSLStr) {\n\t            // Parse base64\n\t            var ciphertext = Base64.parse(openSSLStr);\n\n\t            // Shortcut\n\t            var ciphertextWords = ciphertext.words;\n\n\t            // Test for salt\n\t            if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {\n\t                // Extract salt\n\t                var salt = WordArray.create(ciphertextWords.slice(2, 4));\n\n\t                // Remove salt from ciphertext\n\t                ciphertextWords.splice(0, 4);\n\t                ciphertext.sigBytes -= 16;\n\t            }\n\n\t            return CipherParams.create({ ciphertext: ciphertext, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A cipher wrapper that returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var SerializableCipher = C_lib.SerializableCipher = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL\n\t         */\n\t        cfg: Base.extend({\n\t            format: OpenSSLFormatter\n\t        }),\n\n\t        /**\n\t         * Encrypts a message.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Encrypt\n\t            var encryptor = cipher.createEncryptor(key, cfg);\n\t            var ciphertext = encryptor.finalize(message);\n\n\t            // Shortcut\n\t            var cipherCfg = encryptor.cfg;\n\n\t            // Create and return serializable cipher params\n\t            return CipherParams.create({\n\t                ciphertext: ciphertext,\n\t                key: key,\n\t                iv: cipherCfg.iv,\n\t                algorithm: cipher,\n\t                mode: cipherCfg.mode,\n\t                padding: cipherCfg.padding,\n\t                blockSize: cipher.blockSize,\n\t                formatter: cfg.format\n\t            });\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Decrypt\n\t            var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);\n\n\t            return plaintext;\n\t        },\n\n\t        /**\n\t         * Converts serialized ciphertext to CipherParams,\n\t         * else assumed CipherParams already and returns ciphertext unchanged.\n\t         *\n\t         * @param {CipherParams|string} ciphertext The ciphertext.\n\t         * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\n\t         *\n\t         * @return {CipherParams} The unserialized ciphertext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);\n\t         */\n\t        _parse: function (ciphertext, format) {\n\t            if (typeof ciphertext == 'string') {\n\t                return format.parse(ciphertext, this);\n\t            } else {\n\t                return ciphertext;\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Key derivation function namespace.\n\t     */\n\t    var C_kdf = C.kdf = {};\n\n\t    /**\n\t     * OpenSSL key derivation function.\n\t     */\n\t    var OpenSSLKdf = C_kdf.OpenSSL = {\n\t        /**\n\t         * Derives a key and IV from a password.\n\t         *\n\t         * @param {string} password The password to derive from.\n\t         * @param {number} keySize The size in words of the key to generate.\n\t         * @param {number} ivSize The size in words of the IV to generate.\n\t         * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\n\t         *\n\t         * @return {CipherParams} A cipher params object with the key, IV, and salt.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\n\t         */\n\t        execute: function (password, keySize, ivSize, salt) {\n\t            // Generate random salt\n\t            if (!salt) {\n\t                salt = WordArray.random(64/8);\n\t            }\n\n\t            // Derive key and IV\n\t            var key = EvpKDF.create({ keySize: keySize + ivSize }).compute(password, salt);\n\n\t            // Separate key and IV\n\t            var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\n\t            key.sigBytes = keySize * 4;\n\n\t            // Return params\n\t            return CipherParams.create({ key: key, iv: iv, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A serializable cipher wrapper that derives the key from a password,\n\t     * and returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL\n\t         */\n\t        cfg: SerializableCipher.cfg.extend({\n\t            kdf: OpenSSLKdf\n\t        }),\n\n\t        /**\n\t         * Encrypts a message using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Encrypt\n\t            var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);\n\n\t            // Mix in derived params\n\t            ciphertext.mixIn(derivedParams);\n\n\t            return ciphertext;\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Decrypt\n\t            var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);\n\n\t            return plaintext;\n\t        }\n\t    });\n\t}());\n\n\n}));","import _ from 'lodash';\n\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/LOADBALANCE';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'loadBalanceQuery';\n\nconst ForwardTypes = [\n  { text: '通用的负载均衡', value: 1 },\n  { text: '传统的负载均衡', value: 0 },\n];\n\nconst OrderBy = [\n  { text: 'LoadBalancerName', value: 'LoadBalancerName' },\n  { text: 'CreateTime', value: 'CreateTime' },\n  { text: 'Domain', value: 'Domain' },\n  { text: 'LoadBalancerType', value: 'LoadBalancerType' },\n];\n\nconst OrderType = [\n  { text: '升序', value: 0 },\n  { text: '降序', value: 1 },\n];\n\nconst WithRs = [\n  { text: '没有绑定后端服务', value: 0 },\n  { text: '绑定后端服务', value: 1 },\n  { text: '查询全部', value: -1 },\n];\nconst LOADBALANCEFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n  },\n  {\n    key: 'LoadBalancerIds',\n    enDescriptor: 'LoadBalancer ID',\n    cnDescriptor: '实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerName',\n    enDescriptor: 'LoadBalancer Name',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'Forward',\n    enDescriptor: 'Forward',\n    cnDescriptor: '负载均衡实例类型',\n    link: '',\n    type: 'select',\n    list: ForwardTypes,\n  },\n  {\n    key: 'Domain',\n    enDescriptor: 'Domain',\n    cnDescriptor: '域名，腾讯云为负载均衡实例分配的域名，本参数仅对传统型公网负载均衡才有意义',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'LoadBalancerVips',\n    enDescriptor: 'LoadBalancer Vips',\n    cnDescriptor: '负载均衡实例的 VIP 地址',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'BackendPrivateIps',\n    enDescriptor: 'BackendPrivate Ips',\n    cnDescriptor: '负载均衡绑定的后端服务的内网 IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'BackendPublicIps',\n    enDescriptor: 'BackendPublic Ips',\n    cnDescriptor: '负载均衡绑定的后端服务的外网 IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'ProjectId',\n    enDescriptor: 'Project ID',\n    cnDescriptor: '负载均衡实例所属的项目 ID',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'Vpc ID',\n    cnDescriptor: '负载均衡实例所属私有网络',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SecurityGroup',\n    enDescriptor: 'Security Group',\n    cnDescriptor: '安全组ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'MasterZone',\n    enDescriptor: 'Master Zone',\n    cnDescriptor: '主可用区ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'WithRs',\n    enDescriptor: 'WithRs',\n    cnDescriptor: '负载均衡是否绑定后端服务',\n    link: '',\n    type: 'select',\n    list: WithRs,\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderBy,\n  },\n  {\n    key: 'OrderType',\n    enDescriptor: 'OrderByType',\n    cnDescriptor: '排序方式',\n    link: '',\n    type: 'select',\n    list: OrderType,\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/214/30685',\n  namespace,\n  fieldDescriptor: LOADBALANCEFieldsDescriptor,\n};\nconst LBFields = {\n  LoadBalancerIds: [],\n  Forward: undefined,\n  LoadBalancerName: '',\n  Domain: '',\n  LoadBalancerVips: [],\n  BackendPublicIps: [],\n  BackendPrivateIps: [],\n  Limit: 20,\n  Offset: 0,\n  ProjectId: undefined,\n  WithRs: {},\n  VpcId: '',\n  SecurityGroup: '',\n  MasterZone: '',\n  OrderBy: {},\n  OrderType: {},\n};\n\nconst LOADBALANCE_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'LoadBalancerId',\n  Port: '',\n  Protocol: '',\n  listener: '',\n  // listenerAlias: 'ListenerId',\n  queries: LBFields,\n};\n\n// function GetInstanceQueryParams(queries: any = {}) {\n//   const params: any = {};\n//   if (!_.isEmpty(queries)) {\n//     params.Limit = _.get(queries, 'Limit', 20) || 20;\n//     params.Offset = _.get(queries, 'Offset', 0) || 0;\n//     queries = _.omit(queries, ['Offset', 'Limit']);\n//     _.forEach(queries, (item: any, key) => {\n//       if (_.isArray(item)) {\n//         item = _.compact(item);\n//         if (item.length > 0) {\n//           params[key] = _.uniq(item);\n//         }\n//       } else if (_.isObject(item)) {\n//         if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n//           params[key] = _.get(item, 'value');\n//         }\n//       } else if (_.isNumber(item) || !_.isEmpty(item)) {\n//         params[key] = item;\n//       }\n//     });\n//   }\n//   return params;\n// }\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\nconst InstanceAliasList = ['LoadBalancerId', 'LoadBalancerName', 'LoadBalancerVips'];\nconst LOADBALANCEListenerAliasList = ['ListenerId', 'ListenerName', 'Port'];\nconst LOADBALANCEVALIDDIMENSIONS = {\n  vip: 'LoadBalancerVips',\n  // vpcId: 'NumericalVpcId',\n  loadBalancerPort: 'Port',\n  protocol: 'Protocol',\n};\n// dimensionObject[item] = { Name: item, Value: '' };\n// const LOADBALANCE_INSTANCE_DIMENSIONOBJECTS = {\n//   vip: { Name: 'vip', Value: '' },\n// };\n// const LOADBALANCE_LISTENER_DIMENSIONOBJECTS = {\n//   vip: { Name: 'vip', Value: '' },\n//   loadBalancerPort: { Name: 'loadBalancerPort', Value: '' },\n//   protocol: { Name: 'protocol', Value: '' },\n// };\nconst templateQueryIdMap = {\n  instance: 'LoadBalancerId',\n  listener: 'ListenerId',\n};\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  listener: 'ListenerList',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  Port: {\n    dim_KeyInStorage: keyInStorage.listener,\n    dim_KeyInTarget: 'listener',\n    dim_KeyInMap: templateQueryIdMap.listener,\n  },\n  Protocol: {\n    dim_KeyInStorage: keyInStorage.listener,\n    dim_KeyInTarget: 'listener',\n    dim_KeyInMap: templateQueryIdMap.listener,\n  },\n};\nexport default LOADBALANCE_STATE;\nexport {\n  LOADBALANCEFieldsDescriptor,\n  InstanceAliasList,\n  LOADBALANCEListenerAliasList,\n  LOADBALANCEVALIDDIMENSIONS,\n  templateQueryIdMap,\n  // LOADBALANCE_LISTENER_DIMENSIONOBJECTS,\n  // LOADBALANCE_INSTANCE_DIMENSIONOBJECTS,\n  queryMonitorExtraConfg,\n  keyInStorage,\n  queryEditorConfig,\n  namespace,\n  queryEditorName,\n  GetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/ECM_BLOCK_STORAGE';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'ecmBlockStorageQuery';\n\nconst ECMBLOCKSTORAGEInvalidDemensions = {\n  uuid: 'UUID',\n  diskId: 'DiskId',\n};\n\n// 需和文件名对应\nconst ECMBLOCKSTORAGEInstanceAliasList = ['InstanceId', 'InstanceName'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n  diskId: 'DiskId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst ECMBLOCKSTORAGEFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  'zone-name': [],\n  'module-id': [],\n  'module-name': [],\n  'instance-id': [],\n  'instance-name': [],\n  'ip-address': [],\n  'instance-uuid': [],\n  'instance-state': {},\n  'internet-service-provider': [],\n  'instance-family': [],\n  'image-id': [],\n  'vpc-id': [],\n  'subnet-id': [],\n};\n\nconst ECMBLOCKSTORAGEFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'zone-name',\n    enDescriptor: 'zone-name',\n    cnDescriptor: '排列顺序',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'module-id',\n    enDescriptor: 'module-id',\n    cnDescriptor: '模块ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'module-name',\n    enDescriptor: 'module-name',\n    cnDescriptor: '模块名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-id',\n    enDescriptor: 'instance-id',\n    cnDescriptor: '实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-name',\n    enDescriptor: 'instance-name',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'ip-address',\n    enDescriptor: 'ip-address',\n    cnDescriptor: '内网/公网IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-uuid',\n    enDescriptor: 'instance-uuid',\n    cnDescriptor: '实例uuid',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-state',\n    enDescriptor: 'instance-state',\n    cnDescriptor: '实例状态',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '创建中', value: 'PENDING' },\n      { text: '创建失败', value: 'LAUNCH_FAILED' },\n      { text: '运行中', value: 'RUNNING' },\n      { text: '关机', value: 'STOPPED' },\n      { text: '开机中', value: 'STARTING' },\n      { text: '关机中', value: 'STOPPING' },\n      { text: '重启中', value: 'REBOOTING' },\n      { text: '停止待销毁', value: 'SHUTDOWN' },\n      { text: '销毁中', value: 'TERMINATING' },\n    ],\n  },\n  {\n    key: 'internet-service-provider',\n    enDescriptor: 'internet-service-provider',\n    cnDescriptor: '公网IP所属的运营商',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-family',\n    enDescriptor: 'instance-family',\n    cnDescriptor: '机型family',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'image-id',\n    enDescriptor: 'image-id',\n    cnDescriptor: '镜像ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'vpc-id',\n    cnDescriptor: '实例的vpc id',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'subnet-id',\n    enDescriptor: 'subnet-id',\n    cnDescriptor: '实例的subnet id',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/1108/42565',\n  namespace,\n  fieldDescriptor: ECMBLOCKSTORAGEFilterFieldsDescriptor,\n};\n\nconst ECMBLOCKSTORAGE_STATE = {\n  region: 'ap-guangzhou',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  diskId: '',\n  queries: ECMBLOCKSTORAGEFilterFields,\n};\n\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  diskId: 'diskId',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  DiskId: {\n    dim_KeyInStorage: keyInStorage.diskId,\n    dim_KeyInTarget: 'diskId',\n    dim_KeyInMap: templateQueryIdMap.diskId,\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nexport default ECMBLOCKSTORAGE_STATE;\nexport {\n  ECMBLOCKSTORAGEFilterFieldsDescriptor,\n  templateQueryIdMap,\n  ECMBLOCKSTORAGEInstanceAliasList,\n  ECMBLOCKSTORAGEInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  keyInStorage,\n  queryMonitorExtraConfg,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as ECMBLOCKSTORAGEGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/APIGATEWAY';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'apigatewayQuery';\n\nconst APIGATEWAYInvalidDemensions = {\n  serviceId: 'ServiceId',\n  environmentName: 'EnvironmentName',\n  apiid: 'Apiid',\n  apiId: 'Apiid',\n};\n\n// 需和文件名对应\nconst APIGATEWAYInstanceAliasList = ['ServiceId', 'ServiceName'];\n\nconst templateQueryIdMap = {\n  instance: 'ServiceId',\n  environmentName: 'EnvironmentName',\n};\n\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  environmentList: 'EnvironmentList',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  EnvironmentName: {\n    dim_KeyInStorage: keyInStorage.environmentList,\n    dim_KeyInTarget: 'EnvironmentName',\n    dim_KeyInMap: templateQueryIdMap.environmentName,\n  },\n};\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst APIGATEWAYFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  ServiceId: [],\n  ServiceName: [],\n  NotUsagePlanId: [],\n  Environment: [],\n  IpVersion: [],\n};\n\nconst APIGATEWAYFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'ServiceId',\n    enDescriptor: 'ServiceId',\n    cnDescriptor: '服务id',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'ServiceName',\n    enDescriptor: 'ServiceName',\n    cnDescriptor: '服务名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'NotUsagePlanId',\n    enDescriptor: 'NotUsagePlanId',\n    cnDescriptor: 'NotUsagePlanId',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'Environment',\n    enDescriptor: 'Environment',\n    cnDescriptor: '环境名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'IpVersion',\n    enDescriptor: 'IpVersion',\n    cnDescriptor: 'IP版本',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/628/45198',\n  namespace,\n  fieldDescriptor: APIGATEWAYFilterFieldsDescriptor,\n};\n\nconst APIGATEWAY_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'ServiceId',\n  EnvironmentName: '',\n  queries: APIGATEWAYFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\n// regions for dropdown\nconst regionSupported = [\n  { text: '华北地区(北京)', value: 'ap-beijing' },\n  { text: '西南地区(成都)', value: 'ap-chengdu' },\n  { text: '西南地区(重庆)', value: 'ap-chongqing' },\n  { text: '华南地区(广州)', value: 'ap-guangzhou' },\n  { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n  { text: '亚太南部(孟买)', value: 'ap-mumbai' },\n  { text: '华东地区(南京)', value: 'ap-nanjing' },\n  { text: '华东地区(上海)', value: 'ap-shanghai' },\n  { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },\n  { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n  { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n  { text: '亚太东北(东京)', value: 'ap-tokyo' },\n  { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },\n  { text: '美国东部(弗吉尼亚)', value: 'na-ashburn' },\n  { text: '美国西部(硅谷)', value: 'na-siliconvalley' },\n  { text: '北美地区(多伦多)', value: 'na-toronto' },\n];\nexport default APIGATEWAY_STATE;\nexport {\n  APIGATEWAYFilterFieldsDescriptor,\n  templateQueryIdMap,\n  APIGATEWAYInstanceAliasList,\n  APIGATEWAYInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  regionSupported,\n  queryMonitorExtraConfg,\n  keyInStorage,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as APIGATEWAYGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\nexport const CKAFKAQueryDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为10，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceId',\n    enDescriptor: 'InstanceId',\n    cnDescriptor: '按照实例ID过滤',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SearchWord',\n    enDescriptor: 'SearchWord',\n    cnDescriptor: '按照实例名称过滤，支持模糊查询',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'TagKey',\n    enDescriptor: 'TagKey',\n    cnDescriptor: '匹配标签key值',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'Status',\n    enDescriptor: 'Status',\n    cnDescriptor: '实例的状态，不填默认返回全部',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '创建中', value: 0 },\n      { text: '运行中', value: 1 },\n      { text: '删除中', value: 2 },\n    ],\n  },\n];\n\nconst CKAFKA_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  topicId: '',\n  topicName: '',\n  consumerGroup: '',\n  partition: '',\n  queries: {\n    Offset: 0,\n    Limit: 10,\n    Status: [],\n    InstanceId: '',\n    SearchWord: '',\n    TagKey: '',\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\nconst CKAFKAInstanceAliasList = ['InstanceId', 'InstanceName'];\nconst CKAFKATopicAliasList = ['TopicId', 'TopicName'];\n// 保存在模板变量value中的key\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n  topicId: 'TopicId',\n  groupName: 'GroupName',\n  partition: 'Partition',\n};\n// 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key\nconst CKAFKAInvalidDemensions = {\n  instanceId: 'InstanceId',\n  topicId: 'TopicId',\n  topicName: 'TopicName',\n  consumerGroup: 'GroupName',\n  partition: 'PartitionId',\n};\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  TopicList: 'TopicList',\n  GroupList: 'GroupList',\n  PartitionList: 'PartitionList',\n};\n\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  TopicId: {\n    dim_KeyInStorage: keyInStorage.TopicList,\n    dim_KeyInTarget: 'topicId',\n    dim_KeyInMap: templateQueryIdMap.topicId,\n  },\n  // topicName和topicId是同一个storage中的source，所以根据topicId帅选\n  TopicName: {\n    dim_KeyInStorage: keyInStorage.TopicList,\n    dim_KeyInTarget: 'topicId',\n    dim_KeyInMap: templateQueryIdMap.topicId,\n  },\n  GroupName: {\n    dim_KeyInStorage: keyInStorage.GroupList,\n    dim_KeyInTarget: 'consumerGroup',\n    dim_KeyInMap: templateQueryIdMap.groupName,\n  },\n  Partition: {\n    dim_KeyInStorage: keyInStorage.PartitionList,\n    dim_KeyInTarget: 'partition',\n    dim_KeyInMap: templateQueryIdMap.partition,\n  },\n};\nexport default CKAFKA_STATE;\nexport {\n  CKAFKAInstanceAliasList,\n  CKAFKATopicAliasList,\n  CKAFKAInvalidDemensions,\n  templateQueryIdMap,\n  keyInStorage,\n  queryMonitorExtraConfg,\n  GetInstanceQueryParams as CKAFKAGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/V_CLB';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'vClbQuery';\n\nconst VCLBInvalidDemensions = {\n  InstanceId: 'LoadBalancerId',\n  // vip: 'LoadBalancerVips',\n  // loadBalancerPort: 'Port',\n  // protocol: 'Protocol',\n};\n\n// 要和文件名方式一致，ceip_summary=>CEIPSUMMARY\nconst VCLBInstanceAliasList = ['LoadBalancerId', 'LoadBalancerVips', 'LoadBalancerName'];\n\nconst templateQueryIdMap = {\n  instance: 'LoadBalancerId',\n};\nconst ForwardTypes = [\n  { text: '通用的负载均衡', value: 1 },\n  { text: '传统的负载均衡', value: 0 },\n];\n\nconst OrderBy = [\n  { text: 'LoadBalancerName', value: 'LoadBalancerName' },\n  { text: 'CreateTime', value: 'CreateTime' },\n  { text: 'Domain', value: 'Domain' },\n  { text: 'LoadBalancerType', value: 'LoadBalancerType' },\n];\n\nconst OrderType = [\n  { text: '升序', value: 0 },\n  { text: '降序', value: 1 },\n];\n\nconst WithRs = [\n  { text: '没有绑定后端服务', value: 0 },\n  { text: '绑定后端服务', value: 1 },\n  { text: '查询全部', value: -1 },\n];\nconst VCLBFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n  },\n  {\n    key: 'LoadBalancerIds',\n    enDescriptor: 'LoadBalancer ID',\n    cnDescriptor: '实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerName',\n    enDescriptor: 'LoadBalancer Name',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'Forward',\n    enDescriptor: 'Forward',\n    cnDescriptor: '负载均衡实例类型',\n    link: '',\n    type: 'select',\n    list: ForwardTypes,\n  },\n  {\n    key: 'Domain',\n    enDescriptor: 'Domain',\n    cnDescriptor: '域名，腾讯云为负载均衡实例分配的域名，本参数仅对传统型公网负载均衡才有意义',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'LoadBalancerVips',\n    enDescriptor: 'LoadBalancer Vips',\n    cnDescriptor: '负载均衡实例的 VIP 地址',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'BackendPrivateIps',\n    enDescriptor: 'BackendPrivate Ips',\n    cnDescriptor: '负载均衡绑定的后端服务的内网 IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'BackendPublicIps',\n    enDescriptor: 'BackendPublic Ips',\n    cnDescriptor: '负载均衡绑定的后端服务的外网 IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'ProjectId',\n    enDescriptor: 'Project ID',\n    cnDescriptor: '负载均衡实例所属的项目 ID',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'Vpc ID',\n    cnDescriptor: '负载均衡实例所属私有网络',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SecurityGroup',\n    enDescriptor: 'Security Group',\n    cnDescriptor: '安全组ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'MasterZone',\n    enDescriptor: 'Master Zone',\n    cnDescriptor: '主可用区ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'WithRs',\n    enDescriptor: 'WithRs',\n    cnDescriptor: '负载均衡是否绑定后端服务',\n    link: '',\n    type: 'select',\n    list: WithRs,\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderBy,\n  },\n  {\n    key: 'OrderType',\n    enDescriptor: 'OrderByType',\n    cnDescriptor: '排序方式',\n    link: '',\n    type: 'select',\n    list: OrderType,\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/214/30685',\n  namespace,\n  fieldDescriptor: VCLBFilterFieldsDescriptor,\n};\nconst LBFields = {\n  LoadBalancerIds: [],\n  Forward: undefined,\n  LoadBalancerName: '',\n  Domain: '',\n  LoadBalancerVips: [],\n  BackendPublicIps: [],\n  BackendPrivateIps: [],\n  Limit: 20,\n  Offset: 0,\n  ProjectId: undefined,\n  WithRs: {},\n  VpcId: '',\n  SecurityGroup: '',\n  MasterZone: '',\n  OrderBy: {},\n  OrderType: {},\n};\n\nconst VCLB_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'LoadBalancerId',\n  Port: '',\n  Protocol: '',\n  listener: '',\n  // listenerAlias: 'ListenerId',\n  queries: LBFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\n\n// regions for dropdown\nconst regionSupported = [\n  { text: '亚太东南(曼谷)', value: 'ap-bangkok' },\n  { text: '华北地区(北京)', value: 'ap-beijing' },\n  { text: '西南地区(成都)', value: 'ap-chengdu' },\n  { text: '西南地区(重庆)', value: 'ap-chongqing' },\n  { text: '华南地区(广州)', value: 'ap-guangzhou' },\n  { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n  { text: '亚太南部(雅加达)', value: 'ap-jakarta' },\n  { text: '亚太南部(孟买)', value: 'ap-mumbai' },\n  { text: '亚太东北(首尔)', value: 'ap-seoul' },\n  { text: '华东地区(南京)', value: 'ap-nanjing' },\n  { text: '华东地区(上海)', value: 'ap-shanghai' },\n  { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },\n  { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n  { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n  { text: '亚太东北(东京)', value: 'ap-tokyo' },\n  { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },\n  { text: '欧洲地区(莫斯科)', value: 'eu-moscow' },\n  { text: '美国东部(弗吉尼亚)', value: 'na-ashburn' },\n  { text: '美国西部(硅谷)', value: 'na-siliconvalley' },\n  { text: '北美地区(多伦多)', value: 'na-toronto' },\n];\nconst clbNamespaceMap = {\n  public: 'QCE/LB_PUBLIC',\n  private: 'QCE/LB_PRIVATE',\n};\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['InstanceId'];\n  });\n  return metricTmp;\n}\nexport default VCLB_STATE;\nexport {\n  VCLBFilterFieldsDescriptor,\n  templateQueryIdMap,\n  VCLBInstanceAliasList,\n  VCLBInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  clbNamespaceMap,\n  modifyDimensons,\n  regionSupported,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as BMLBGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/CYNOSDB_MYSQL';\n\n// 按照驼峰方式命名，和SERVICES保持一致，abcDeF会成为angular组件名字<abc-de-f-query />\nconst queryEditorName = 'cynosdbMysqlQuery';\n\nconst cynosdbMysqlFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  OrderBy: {},\n  OrderByType: {},\n  InstanceIds: [],\n  DbType: {},\n  // Status: '',\n};\n\nconst cynosdbMysqlFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 1000,\n  },\n  {\n    key: 'InstanceIds',\n    enDescriptor: 'InstanceIds',\n    cnDescriptor: '实例id列表',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '创建时间', value: 'CREATETIME' },\n      { text: '过期时间', value: 'PERIODENDTIME' },\n    ],\n  },\n  {\n    key: 'OrderByType',\n    enDescriptor: 'OrderByType',\n    cnDescriptor: '排序类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '升序', value: 'ASC' },\n      { text: '降序', value: 'DESC' },\n    ],\n  },\n  {\n    key: 'DbType',\n    enDescriptor: 'DbType',\n    cnDescriptor: '引擎类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'MYSQL', value: 'MYSQL' },\n      { text: 'POSTGRESQL', value: 'POSTGRESQL' },\n    ],\n  },\n  // {\n  //   key: 'Status',\n  //   enDescriptor: 'Status',\n  //   cnDescriptor: '实例状态',\n  //   link: '',\n  //   type: 'input',\n  // },\n];\n// regions for dropdown\nconst regionSupported = [\n  { text: '华北地区(北京)', value: 'ap-beijing' },\n  { text: '华南地区(广州)', value: 'ap-guangzhou' },\n  { text: '华东地区(南京)', value: 'ap-nanjing' },\n  { text: '华东地区(上海)', value: 'ap-shanghai' },\n];\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/1003/48334',\n  namespace,\n  fieldDescriptor: cynosdbMysqlFilterFieldsDescriptor,\n};\n\nconst CYNOSDB_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: cynosdbMysqlFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\n// 和文件名字一样CYNOSDBMYSQL\nconst CYNOSDBMYSQLInstanceAliasList = ['InstanceId', 'InstanceName'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\n\nconst CYNOSDBInvalidDemensions = {\n  instanceid: 'InstanceId',\n  instanceId: 'InstanceId',\n};\nconst checkKeys = ['instanceId'];\nfunction modifyDimensons(metricItem) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['InstanceId'];\n  });\n  return metricTmp;\n}\n\nexport default CYNOSDB_STATE;\nexport {\n  cynosdbMysqlFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CYNOSDBMYSQLInstanceAliasList,\n  CYNOSDBInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  regionSupported,\n  modifyDimensons,\n  checkKeys,\n  // params前缀为service的全大写\n  GetInstanceQueryParams as CYNOSDBMYSQLGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\nexport const SCFQueryDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'SearchKey',\n    enDescriptor: 'SearchKey',\n    cnDescriptor: '支持FunctionName模糊匹配',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'Namespace',\n    enDescriptor: 'Namespace',\n    cnDescriptor: '云函数命名空间',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'Description',\n    enDescriptor: 'Description',\n    cnDescriptor: '函数描述，支持模糊搜索',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'AddTime', value: 'AddTime' },\n      { text: 'ModTime', value: 'ModTime' },\n      { text: 'FunctionName', value: 'FunctionName' },\n    ],\n  },\n  {\n    key: 'Order',\n    enDescriptor: 'Order Direction',\n    cnDescriptor: '排序方式',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'ASC', value: 'ASC' },\n      { text: 'DESC', value: 'DESC' },\n    ],\n  },\n  // {\n  //   key: 'Filters',\n  //   enDescriptor: 'Filters',\n  //   cnDescriptor: '按照标签键值对进行过滤',\n  //   link: '',\n  //   type: 'dropdownmulti',\n  // },\n];\n\nconst SCF_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'FunctionName',\n  version: '',\n  queries: {\n    Offset: 0,\n    Limit: 20,\n    OrderBy: {},\n    Order: {},\n    SearchKey: '',\n    Namespace: '',\n    Description: '',\n    // Filters:  {},\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\nconst SCFInstanceAliasList = ['FunctionId', 'FunctionName'];\n\n// 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key\nconst SCFInvalidDemensions = {\n  functionName: 'FunctionName',\n  namespace: 'Namespace',\n  version: 'Version',\n};\n\nconst templateQueryIdMap = {\n  instance: 'FunctionName',\n  version: 'Version',\n};\nconst regionSupported = [\n  { text: '华北地区(北京)', value: 'ap-beijing' },\n  { text: '西南地区(成都)', value: 'ap-chengdu' },\n  { text: '西南地区(重庆)', value: 'ap-chongqing' },\n  { text: '华南地区(广州)', value: 'ap-guangzhou' },\n  { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n  { text: '亚太南部(孟买)', value: 'ap-mumbai' },\n  { text: '华东地区(上海)', value: 'ap-shanghai' },\n  { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },\n  { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n  { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n  { text: '亚太东北(东京)', value: 'ap-tokyo' },\n  { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },\n  { text: '美国西部(硅谷)', value: 'na-siliconvalley' },\n  { text: '北美地区(多伦多)', value: 'na-toronto' },\n];\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  version: 'version',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  Version: {\n    dim_KeyInStorage: keyInStorage.version,\n    dim_KeyInTarget: 'version',\n    dim_KeyInMap: templateQueryIdMap.version,\n  },\n};\nexport default SCF_STATE;\nexport {\n  SCFInstanceAliasList,\n  SCFInvalidDemensions,\n  queryMonitorExtraConfg,\n  regionSupported,\n  templateQueryIdMap,\n  keyInStorage,\n  GetInstanceQueryParams as SCFGetInstanceQueryParams,\n};\n\n// monitor监控数据默认支持的维度\nexport const SCFDefaultDimensionList = ['functionName', 'namespace', 'version'];\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/SQLSERVER';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'sqlserverQuery';\n\nconst SQLSERVERInvalidDemensions = {\n  resourceId: 'InstanceId',\n};\n\nconst SQLSERVERInstanceAliasList = ['InstanceId', 'Name'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst SQLSERVERNETFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  ProjectId: null,\n  Status: {},\n  InstanceIdSet: [],\n  PayMode: {},\n  VpcId: '',\n  SubnetId: '',\n  VipSet: [],\n  InstanceNameSet: [],\n  VersionSet: [],\n  Zone: '',\n};\n\nconst SQLSERVERNETFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'ProjectId',\n    enDescriptor: 'ProjectId',\n    cnDescriptor: '项目ID',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'Status',\n    enDescriptor: 'Status',\n    cnDescriptor: '实例状态',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '申请中', value: 1 },\n      { text: '运行中', value: 2 },\n      { text: '受限运行中 (主备切换中)', value: 3 },\n      { text: '已隔离', value: 4 },\n      { text: '回收中', value: 5 },\n      { text: '已回收', value: 6 },\n      { text: '任务执行中', value: 7 },\n      { text: '已下线', value: 8 },\n      { text: '实例扩容中', value: 9 },\n      { text: '实例迁移中', value: 10 },\n      { text: '只读', value: 11 },\n      { text: '重启中', value: 12 },\n    ],\n  },\n  {\n    key: 'InstanceIdSet',\n    enDescriptor: 'InstanceIdSet',\n    cnDescriptor: '实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'PayMode',\n    enDescriptor: 'PayMode',\n    cnDescriptor: '子网实例ID',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '包年包月', value: 1 },\n      { text: '按量计费', value: 0 },\n    ],\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'VpcId',\n    cnDescriptor: '实例所属VPC的唯一字符串ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SubnetId',\n    enDescriptor: 'SubnetId',\n    cnDescriptor: '实例所属子网的唯一字符串ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'VipSet',\n    enDescriptor: 'VipSet',\n    cnDescriptor: '实例内网地址列表',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'InstanceNameSet',\n    enDescriptor: 'InstanceNameSet',\n    cnDescriptor: '实例名称列表, 模糊查询',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'VersionSet',\n    enDescriptor: 'VersionSet',\n    cnDescriptor: '实例版本代号列表',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'Zone',\n    enDescriptor: 'Zone',\n    cnDescriptor: '实例可用区',\n    link: '',\n    type: 'dropdown',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/238/19969',\n  namespace,\n  fieldDescriptor: SQLSERVERNETFilterFieldsDescriptor,\n};\n\n// regions for dropdown\nconst regionSupported = [\n  { text: '华北地区(北京)', value: 'ap-beijing' },\n  { text: '西南地区(成都)', value: 'ap-chengdu' },\n  { text: '西南地区(重庆)', value: 'ap-chongqing' },\n  { text: '华南地区(广州)', value: 'ap-guangzhou' },\n  { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n  { text: '华东地区(南京)', value: 'ap-nanjing' },\n  { text: '亚太东北(首尔)', value: 'ap-seoul' },\n  { text: '华东地区(上海)', value: 'ap-shanghai' },\n  { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },\n  { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n  { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n  { text: '亚太东北(东京)', value: 'ap-tokyo' },\n  { text: '欧洲地区(莫斯科)', value: 'eu-moscow' },\n  { text: '美国西部(硅谷)', value: 'na-siliconvalley' },\n];\nconst SQLSERVER_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: SQLSERVERNETFilterFields,\n};\n\nfunction modifyDimensons(metricItem) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['resourceId'];\n  });\n  return metricTmp;\n}\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\nexport default SQLSERVER_STATE;\nexport {\n  SQLSERVERNETFilterFieldsDescriptor,\n  templateQueryIdMap,\n  SQLSERVERInstanceAliasList,\n  SQLSERVERInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  regionSupported,\n  modifyDimensons,\n  // 对应产品的service的全大写拼接InstanceQueryParams\n  GetInstanceQueryParams as SQLSERVERGetInstanceQueryParams,\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__21__;","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/BM_INTRA_LB';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'bmIntraLbQuery';\n\nconst BMINTRALBInvalidDemensions = {\n  vip: 'LoadBalancerVips',\n  vpcId: 'VpcId',\n};\n\n// 要和文件名方式一致，ceip_summary=>CEIPSUMMARY\nconst BMINTRALBInstanceAliasList = ['LoadBalancerId', 'LoadBalancerVips', 'LoadBalancerName'];\n\nconst templateQueryIdMap = {\n  instance: 'LoadBalancerId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是类型\nconst BMINTRALBFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  LoadBalancerIds: [],\n  LoadBalancerName: [],\n  LoadBalancerVips: [],\n};\n\nconst BMINTRALBFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'LoadBalancerIds',\n    enDescriptor: 'LoadBalancerIds',\n    cnDescriptor: '负载均衡器ID数组',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerName',\n    enDescriptor: 'LoadBalancerName',\n    cnDescriptor: '负载均衡器名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerVips',\n    enDescriptor: 'LoadBalancerVips',\n    cnDescriptor: '负载均衡获得的公网IP地址',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/1027/33280',\n  namespace,\n  fieldDescriptor: BMINTRALBFilterFieldsDescriptor,\n};\n\nconst BMINTRALB_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'LoadBalancerId',\n  queries: BMINTRALBFilterFields,\n};\nconst BMLBValidMetricsT = ['Inpkg', 'Outpkg', 'Intraffic', 'Outtraffic', 'Connum', 'Req'];\nfunction isValidMetric(metric) {\n  const validMetrics = _.map(BMLBValidMetricsT, _.toUpper);\n  return _.indexOf(validMetrics, _.toUpper(metric.MetricName)) !== -1;\n}\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\nexport default BMINTRALB_STATE;\nexport {\n  BMINTRALBFilterFieldsDescriptor,\n  templateQueryIdMap,\n  BMINTRALBInstanceAliasList,\n  BMINTRALBInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  isValidMetric,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as BMINTRALBGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/BM_LB';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'bmLbQuery';\n\nconst CPMInvalidDemensions = {\n  vip: 'LoadBalancerVips',\n};\n\n// 要和文件名方式一致，ceip_summary=>CEIPSUMMARY\nconst BMLBInstanceAliasList = ['LoadBalancerId', 'LoadBalancerVips', 'LoadBalancerName'];\n\nconst templateQueryIdMap = {\n  instance: 'LoadBalancerId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是类型\nconst CPMFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  LoadBalancerIds: [],\n  LoadBalancerName: [],\n  LoadBalancerVips: [],\n};\n\nconst CPMFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'LoadBalancerIds',\n    enDescriptor: 'LoadBalancerIds',\n    cnDescriptor: '负载均衡器ID数组',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerName',\n    enDescriptor: 'LoadBalancerName',\n    cnDescriptor: '负载均衡器名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerVips',\n    enDescriptor: 'LoadBalancerVips',\n    cnDescriptor: '负载均衡获得的公网IP地址',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/1027/33280',\n  namespace,\n  fieldDescriptor: CPMFilterFieldsDescriptor,\n};\n\nconst CPM_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'LoadBalancerId',\n  queries: CPMFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\nconst BMLBValidMetricsT = ['Inpkg', 'Outpkg', 'Intraffic', 'Outtraffic', 'Connum', 'Req'];\nfunction isValidMetric(metric) {\n  const validMetrics = _.map(BMLBValidMetricsT, _.toUpper);\n  return _.indexOf(validMetrics, _.toUpper(metric.MetricName)) !== -1;\n}\nexport default CPM_STATE;\nexport {\n  CPMFilterFieldsDescriptor,\n  templateQueryIdMap,\n  BMLBInstanceAliasList,\n  CPMInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  isValidMetric,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as BMLBGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/BM_PCX';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'bmPcxQuery';\n\nconst BMPCXInvalidDemensions = {\n  peeringConnectionId: 'VpcPeerConnectionId',\n};\n\n// 要和文件名方式一致，ceip_summary=>CEIPSUMMARY\nconst BMPCXInstanceAliasList = ['VpcPeerConnectionId', 'VpcPeerConnectionName'];\n\nconst templateQueryIdMap = {\n  instance: 'VpcPeerConnectionId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是类型\nconst BMPCXFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  VpcPeerConnectionIds: [],\n};\n\nconst BMPCXFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'VpcPeerConnectionIds',\n    enDescriptor: 'VpcPeerConnectionIds',\n    cnDescriptor: '对等连接实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/product/1024/36903',\n  namespace,\n  fieldDescriptor: BMPCXFilterFieldsDescriptor,\n};\n\nconst BMPCX_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'VpcPeerConnectionId',\n  queries: BMPCXFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['peeringConnectionId'];\n  });\n  return metricTmp;\n}\nexport default BMPCX_STATE;\nexport {\n  BMPCXFilterFieldsDescriptor,\n  templateQueryIdMap,\n  BMPCXInstanceAliasList,\n  BMPCXInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as BMPCXGetInstanceQueryParams,\n};\n","import * as _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/BLOCK_STORAGE';\nconst queryEditorName = 'cbsQuery';\n\nconst CBSInvalidDemensions = {\n  diskId: 'DiskId',\n  InstanceId: 'InstanceId',\n  diskname: 'DiskName',\n  unInstanceId: 'InstanceId',\n};\n\nconst CBSInstanceAliasList = ['DiskId', 'DiskName'];\n\nconst templateQueryIdMap = {\n  instance: 'DiskId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst CBSFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  DiskIds: [],\n  OrderField: [],\n  Order: [],\n  ReturnBindAutoSnapshotPolicy: false,\n};\n\nconst CBSFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'DiskIds',\n    enDescriptor: 'DiskIds',\n    cnDescriptor: '云硬盘ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'Order',\n    enDescriptor: 'Order',\n    cnDescriptor: '排列顺序',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '升序排列', value: 'ASC' },\n      { text: '降序排列', value: 'DESC' },\n    ],\n  },\n  {\n    key: 'OrderField',\n    enDescriptor: 'OrderField',\n    cnDescriptor: '排序的依据字段',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '云盘的创建时间排序', value: 'CREATE_TIME' },\n      { text: '云盘的到期时间排序', value: 'DEADLINE' },\n    ],\n  },\n  {\n    key: 'ReturnBindAutoSnapshotPolicy',\n    enDescriptor: 'ReturnBindAutoSnapshotPolicy',\n    cnDescriptor: '否需要返回云盘绑定的定期快照策略ID',\n    link: '',\n    type: 'switch',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/362/16315',\n  namespace,\n  fieldDescriptor: CBSFilterFieldsDescriptor,\n};\n\nconst CBS_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'DiskId',\n  queries: CBSFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\nfunction isValidMetric(metricObj: any = {}) {\n  const dimension = _.get(metricObj, 'Dimensions[0].Dimensions');\n  // console.log('dimension', dimension, dimension.length === 1 && _.indexOf(dimension, 'diskId') !== -1);\n  return dimension.length === 1 && _.indexOf(dimension, 'diskId') !== -1;\n}\nexport default CBS_STATE;\nexport {\n  CBSFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CBSInstanceAliasList,\n  CBSInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  isValidMetric,\n  GetInstanceQueryParams as CBSGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/CDN_LOG_DATA';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'cdnProvinceQuery';\n\nconst CDNPROVINCEInvalidDemensions = {\n  domain: 'Domain',\n  // isp: 'Isp',\n  projectid: 'ProjectId',\n  province: 'district',\n  appid: 'AppId',\n};\n\n// 需和文件名对应\nconst CDNPROVINCEInstanceAliasList = ['Domain', 'ProjectId'];\n\nconst templateQueryIdMap = {\n  instance: 'Domain',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst CDNPROVINCEFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  origin: [],\n  domain: [],\n  resourceId: [],\n  status: {},\n  serviceType: {},\n  projectId: [],\n  domainType: {},\n  fullUrlCache: {},\n  https: {},\n  originPullProtocol: {},\n  tagKey: [],\n};\n\nconst CDNPROVINCEFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'origin',\n    enDescriptor: 'origin',\n    cnDescriptor: '主源站',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'domain',\n    enDescriptor: 'domain',\n    cnDescriptor: '域名',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'resourceId',\n    enDescriptor: 'resourceId',\n    cnDescriptor: '域名id',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'status',\n    enDescriptor: 'status',\n    cnDescriptor: '域名状态',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'online', value: 'online' },\n      { text: 'offline', value: 'offline' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'serviceType',\n    enDescriptor: 'serviceType',\n    cnDescriptor: '业务类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'web', value: 'web' },\n      { text: 'download', value: 'download' },\n      { text: 'media', value: 'media' },\n    ],\n  },\n  {\n    key: 'projectId',\n    enDescriptor: 'projectId',\n    cnDescriptor: '项目ID',\n    link: '',\n    type: 'inputNumberMulti',\n  },\n  {\n    key: 'domainType',\n    enDescriptor: 'domainType',\n    cnDescriptor: '主源站类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '自有源', value: 'cname' },\n      { text: 'cos接入', value: 'cos' },\n    ],\n  },\n  {\n    key: 'fullUrlCache',\n    enDescriptor: 'fullUrlCache',\n    cnDescriptor: '全路径缓存',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '打开', value: 'on' },\n      { text: '关闭', value: 'off' },\n    ],\n  },\n  {\n    key: 'https',\n    enDescriptor: 'https',\n    cnDescriptor: '是否配置https',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'on', value: 'on' },\n      { text: 'off', value: 'off' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'originPullProtocol',\n    enDescriptor: 'originPullProtocol',\n    cnDescriptor: '回源协议类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'http', value: 'http' },\n      { text: 'follow', value: 'follow' },\n      { text: 'https', value: 'https' },\n    ],\n  },\n  {\n    key: 'tagKey',\n    enDescriptor: 'tagKey',\n    cnDescriptor: '标签键',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\nconst CDNPROVINCE_STATE = {\n  region: 'ap-guangzhou',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'Domain',\n  // Isp Province分别在两个接口，单独保存在state\n  isp: '',\n  district: '',\n  queries: CDNPROVINCEFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\n// const regionSupported = [\n//   { text: '华北地区(北京)', value: 'ap-beijing' },\n//   { text: '西南地区(成都)', value: 'ap-chengdu' },\n//   { text: '西南地区(重庆)', value: 'ap-chongqing' },\n//   { text: '华南地区(广州)', value: 'ap-guangzhou' },\n//   { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n//   { text: '亚太南部(孟买)', value: 'ap-mumbai' },\n//   { text: '华东地区(南京)', value: 'ap-nanjing' },\n//   { text: '华东地区(上海)', value: 'ap-shanghai' },\n//   { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },\n//   { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n//   { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n//   { text: '亚太东北(东京)', value: 'ap-tokyo' },\n//   { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },\n//   { text: '美国东部(弗吉尼亚)', value: 'na-ashburn' },\n//   { text: '美国西部(硅谷)', value: 'na-siliconvalley' },\n//   { text: '北美地区(多伦多)', value: 'na-toronto' },\n// ];\nexport default CDNPROVINCE_STATE;\nexport {\n  CDNPROVINCEFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CDNPROVINCEInstanceAliasList,\n  CDNPROVINCEInvalidDemensions,\n  namespace,\n  queryEditorName,\n  // regionSupported,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as CDNPROVINCEGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/CEIP_SUMMARY';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'ceipSummaryQuery';\n\nconst CEIPInvalidDemensions = {\n  vip: 'AddressIp',\n  eip: 'AddressIp',\n};\n\n// 要和文件名方式一致，ceip_summary=>CEIPSUMMARY\nconst CEIPSUMMARYInstanceAliasList = ['AddressId', 'AddressName', 'AddressIp'];\n\nconst templateQueryIdMap = {\n  instance: 'AddressId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst CEIPFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  'address-id': [],\n  'address-name': [],\n  'address-ip': [],\n  'address-status': {},\n  'is-arrears': {},\n  'address-isp': {},\n  'instance-id': [],\n  'private-ip-address': [],\n  'network-interface-id': [],\n};\n\nconst CEIPFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'address-id',\n    enDescriptor: 'address-id',\n    cnDescriptor: ' EIP 的唯一 ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'address-name',\n    enDescriptor: 'address-name',\n    cnDescriptor: 'EIP 名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'address-ip',\n    enDescriptor: 'address-ip',\n    cnDescriptor: 'EIP 的 IP 地址',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'address-status',\n    enDescriptor: 'address-status',\n    cnDescriptor: 'EIP 的状态',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: 'CREATING', value: 'CREATING' },\n      { text: 'BINDING', value: 'BINDING' },\n      { text: 'BIND', value: 'BIND' },\n      { text: 'UNBINDING', value: 'UNBINDING' },\n      { text: 'UNBIND', value: 'UNBIND' },\n      { text: 'OFFLINING', value: 'OFFLINING' },\n      { text: 'BIND_ENI', value: 'BIND_ENI' },\n    ],\n  },\n  {\n    key: 'instance-id',\n    enDescriptor: 'instance-id',\n    cnDescriptor: 'EIP 绑定的实例 ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'private-ip-address',\n    enDescriptor: 'private-ip-address',\n    cnDescriptor: 'EIP 绑定的内网 IP ',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'network-interface-id',\n    enDescriptor: 'network-interface-id',\n    cnDescriptor: ' EIP 绑定的弹性网卡 ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'is-arrears',\n    enDescriptor: 'is-arrears',\n    cnDescriptor: 'EIP 是否欠费',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '欠费状态', value: 'TRUE' },\n      { text: '费用状态正常', value: 'FALSE' },\n    ],\n  },\n  {\n    key: 'address-isp',\n    enDescriptor: 'address-isp',\n    cnDescriptor: '运营商类型',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: 'BGP', value: 'BGP' },\n      { text: 'CMCC', value: 'CMCC' },\n      { text: 'CUCC', value: 'CUCC' },\n      { text: 'CTCC', value: 'CTCC' },\n    ],\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/16702',\n  namespace,\n  fieldDescriptor: CEIPFilterFieldsDescriptor,\n};\n\nconst CEIP_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'AddressId',\n  queries: CEIPFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['eip'];\n  });\n  return metricTmp;\n}\nexport default CEIP_STATE;\nexport {\n  CEIPFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CEIPSUMMARYInstanceAliasList,\n  CEIPInvalidDemensions,\n  namespace,\n  queryEditorName,\n  modifyDimensons,\n  queryEditorConfig,\n  GetInstanceQueryParams as CEIPSUMMARYGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { FildDescriptorType } from '../_base/types';\n\nexport const InstanceQueryDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为10，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 50,\n  },\n  {\n    key: 'TopicName',\n    enDescriptor: 'TopicName',\n    cnDescriptor: '精确匹配TopicName',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'TagKey',\n    enDescriptor: 'TagKey',\n    cnDescriptor: '标签搜索',\n    link: '',\n    type: 'input',\n  },\n];\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\n// 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key\nexport const InvalidDemensions = {\n  topicId: 'TopicId',\n};\n\n// 因为cmq那边，以TopciName为主键\nexport const templateQueryIdMap = {\n  instance: 'TopicName',\n  subscription: 'SubscriptionId',\n};\n\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  subscriptionId: 'subscriptionId',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  subscriptionId: {\n    dim_KeyInStorage: keyInStorage.subscriptionId,\n    dim_KeyInTarget: 'subscriptionId',\n    dim_KeyInMap: templateQueryIdMap.subscription,\n  },\n};\n// 与名称挂钩的变量\nconst InstanceAliasList = ['TopicName', 'TopicId'];\nexport { InstanceAliasList, GetInstanceQueryParams, queryMonitorExtraConfg, keyInStorage };\n\n// 界面状态模型，default\nexport default {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'TopicName',\n  subscriptionId: '',\n  queries: {\n    Offset: 0,\n    Limit: 20,\n    TopicName: '',\n    TagKey: '',\n  },\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/CPM';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'cpmQuery';\n\nconst CPMInvalidDemensions = {\n  instanceId: 'InstanceId',\n  // uniqid: 'InstanceId',\n};\n\nconst CPMInstanceAliasList = ['InstanceId', 'Name'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst CPMFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  DeviceClassCode: '',\n  InstanceIds: [],\n  WanIps: [],\n  LanIps: [],\n  Alias: '',\n  VagueIp: '',\n  AutoRenewFlag: {},\n  VpcId: '',\n  SubnetId: '',\n  DeviceType: {},\n  IsLuckyDevice: {},\n};\n\nconst CPMFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'DeviceClassCode',\n    enDescriptor: 'DeviceClassCode',\n    cnDescriptor: '机型ID',\n    link: '',\n    type: 'dropdown',\n  },\n  {\n    key: 'InstanceIds',\n    enDescriptor: 'InstanceIds',\n    cnDescriptor: '设备ID数组',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'WanIps',\n    enDescriptor: 'WanIps',\n    cnDescriptor: '外网IP数组',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LanIps',\n    enDescriptor: 'LanIps',\n    cnDescriptor: '内网IP数组',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'Alias',\n    enDescriptor: 'Alias',\n    cnDescriptor: '设备名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'VagueIp',\n    enDescriptor: 'VagueIp',\n    cnDescriptor: '模糊IP查询',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'AutoRenewFlag',\n    enDescriptor: 'AutoRenewFlag',\n    cnDescriptor: '自动续费标志',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '不自动续费', value: 0 },\n      { text: '自动续费', value: 1 },\n    ],\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'VpcId',\n    cnDescriptor: '私有网络唯一ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SubnetId',\n    enDescriptor: 'SubnetId',\n    cnDescriptor: '子网唯一ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'DeviceType',\n    enDescriptor: 'DeviceType',\n    cnDescriptor: '子网实例ID',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '计算型', value: 'compute' },\n      { text: '标准型', value: 'standard' },\n      { text: '存储型', value: 'storage' },\n    ],\n  },\n  {\n    key: 'IsLuckyDevice',\n    enDescriptor: 'IsLuckyDevice',\n    cnDescriptor: '竞价实例机器过滤',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '非竞价实例机器', value: 0 },\n      { text: '竞价实例的机器', value: 1 },\n    ],\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/386/32904',\n  namespace,\n  fieldDescriptor: CPMFilterFieldsDescriptor,\n};\n\nconst CPM_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: CPMFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\n\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['instanceId'];\n  });\n  return metricTmp;\n}\nexport default CPM_STATE;\nexport {\n  CPMFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CPMInstanceAliasList,\n  CPMInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as CPMGetInstanceQueryParams,\n};\n","import * as _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/ECM';\nconst queryEditorName = 'ecmQuery';\n\nconst ECMInvalidDemensions = {\n  // diskId: 'InstanceId',\n  uuid: 'UUID',\n  // unInstanceId: 'InstanceId',\n};\n\nconst ECMInstanceAliasList = ['InstanceId', 'InstanceName'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst ECMFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  zone: [],\n  'zone-name': [],\n  'module-id': [],\n  'module-name': [],\n  'instance-id': [],\n  'instance-name': [],\n  'ip-address': [],\n  'instance-uuid': [],\n  'instance-state': {},\n  'internet-service-provider': [],\n  'instance-family': [],\n  'image-id': [],\n  'vpc-id': [],\n  'subnet-id': [],\n};\n\nconst ECMFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'zone',\n    enDescriptor: 'zone',\n    cnDescriptor: '可用区英文标识',\n    link: '',\n    type: 'dropdownMulti',\n  },\n  {\n    key: 'zone-name',\n    enDescriptor: 'zone-name',\n    cnDescriptor: '排列顺序',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'module-id',\n    enDescriptor: 'module-id',\n    cnDescriptor: '模块ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'module-name',\n    enDescriptor: 'module-name',\n    cnDescriptor: '模块名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-id',\n    enDescriptor: 'instance-id',\n    cnDescriptor: '实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-name',\n    enDescriptor: 'instance-name',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'ip-address',\n    enDescriptor: 'ip-address',\n    cnDescriptor: '内网/公网IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-uuid',\n    enDescriptor: 'instance-uuid',\n    cnDescriptor: '实例uuid',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-state',\n    enDescriptor: 'instance-state',\n    cnDescriptor: '实例状态',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '创建中', value: 'PENDING' },\n      { text: '创建失败', value: 'LAUNCH_FAILED' },\n      { text: '运行中', value: 'RUNNING' },\n      { text: '关机', value: 'STOPPED' },\n      { text: '开机中', value: 'STARTING' },\n      { text: '关机中', value: 'STOPPING' },\n      { text: '重启中', value: 'REBOOTING' },\n      { text: '停止待销毁', value: 'SHUTDOWN' },\n      { text: '销毁中', value: 'TERMINATING' },\n    ],\n  },\n  {\n    key: 'internet-service-provider',\n    enDescriptor: 'internet-service-provider',\n    cnDescriptor: '公网IP所属的运营商',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-family',\n    enDescriptor: 'instance-family',\n    cnDescriptor: '机型family',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'image-id',\n    enDescriptor: 'image-id',\n    cnDescriptor: '镜像ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'vpc-id',\n    cnDescriptor: '实例的vpc id',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'subnet-id',\n    enDescriptor: 'subnet-id',\n    cnDescriptor: '实例的subnet id',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/1108/42565',\n  namespace,\n  fieldDescriptor: ECMFilterFieldsDescriptor,\n};\n\nconst ECM_STATE = {\n  region: 'ap-guangzhou',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: ECMFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\n// function isValidMetric(metricObj: any = {}) {\n//   const dimension = _.get(metricObj, 'Dimensions[0].Dimensions');\n//   // console.log('dimension', dimension, dimension.length === 1 && _.indexOf(dimension, 'diskId') !== -1);\n//   return dimension.length === 1 &&( _.indexOf(dimension, 'UUID') !== -1 || _.indexOf(dimension, 'uuid') !== -1);\n// }\n\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['UUID'];\n  });\n  return metricTmp;\n}\nexport default ECM_STATE;\nexport {\n  ECMFilterFieldsDescriptor,\n  templateQueryIdMap,\n  ECMInstanceAliasList,\n  ECMInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  GetInstanceQueryParams as ECMGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nconst namespace = 'QCE/POSTGRES';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'postgresQuery';\n\nconst PostgresFields = {\n  'db-instance-id': [],\n  'db-instance-name': [],\n};\n\nconst PostgresFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'db-instance-id',\n    enDescriptor: 'DB Instance ID',\n    cnDescriptor: 'DB 实例ID',\n    link: '',\n    type: 'inputMulti',\n    min: 0,\n  },\n  {\n    key: 'db-instance-name',\n    enDescriptor: 'DB Instance Name',\n    cnDescriptor: 'DB 实例名称',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/409/16773',\n  namespace,\n  fieldDescriptor: PostgresFieldsDescriptor,\n};\nconst POSTGRESInstanceAliasList = ['DBInstanceId', 'DBInstanceName'];\n\nconst POSTGRES_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'DBInstanceId',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    Filters: { ...PostgresFields },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['resourceId'];\n  });\n  return metricTmp;\n}\nconst PostgreInvalidDemensions = {\n  uid: 'DBInstanceId',\n  resourceId: 'DBInstanceId',\n};\nconst templateQueryIdMap = {\n  instance: 'DBInstanceId',\n};\nexport default POSTGRES_STATE;\n\nexport {\n  PostgresFieldsDescriptor,\n  POSTGRESInstanceAliasList,\n  templateQueryIdMap,\n  modifyDimensons,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  PostgreInvalidDemensions,\n  GetInstanceQueryParams as POSTGRESGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/TCAPLUS';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'tcaplusQuery';\n\nconst TCAPLUSInvalidDemensions = {\n  // TableInstanceId: 'TableInstanceId',\n  // ClusterId: 'ClusterId',\n};\n\n// 需和文件名对应\nconst TCAPLUSInstanceAliasList = ['TableInstanceId', 'TableName'];\n\nconst templateQueryIdMap = {\n  instance: 'TableInstanceId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是类型\nconst TCAPLUSFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  ClusterId: '',\n  TableGroupIds: [],\n\n  TableName: '',\n  TableInstanceId: '',\n  TableIdlType: {},\n  TableType: {},\n  ListElementNum: null,\n  ReservedVolume: null,\n  ReservedReadQps: null,\n  ReservedWriteQps: null,\n  Memo: '',\n  FileName: '',\n  FileExtType: '',\n  FileSize: null,\n  FileContent: '',\n};\n\nconst TCAPLUSFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'ClusterId',\n    enDescriptor: 'ClusterId',\n    cnDescriptor: '表格所属集群ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'TableGroupIds',\n    enDescriptor: 'TableGroupIds',\n    cnDescriptor: '表格组ID列表',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'TableName',\n    enDescriptor: 'TableName',\n    cnDescriptor: '表格名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'TableInstanceId',\n    enDescriptor: 'TableInstanceId',\n    cnDescriptor: '表实例ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'TableIdlType',\n    enDescriptor: 'TableIdlType',\n    cnDescriptor: '表格描述语言类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'PROTO', value: 'PROTO' },\n      { text: 'TDR', value: 'TDR' },\n    ],\n  },\n  {\n    key: 'TableType',\n    enDescriptor: 'TableType',\n    cnDescriptor: '表格数据结构类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'GENERIC', value: 'GENERIC' },\n      { text: 'LIST', value: 'LIST' },\n    ],\n  },\n  {\n    key: 'ListElementNum',\n    enDescriptor: 'ListElementNum',\n    cnDescriptor: 'LIST表元素个数',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'ReservedVolume',\n    enDescriptor: 'ReservedVolume',\n    cnDescriptor: '表格预留容量（GB）',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'ReservedReadQps',\n    enDescriptor: 'ReservedReadQps',\n    cnDescriptor: '表格预留读CU',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'ReservedWriteQps',\n    enDescriptor: 'ReservedWriteQps',\n    cnDescriptor: '表格预留写CU',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'Memo',\n    enDescriptor: 'Memo',\n    cnDescriptor: '表格备注信息',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'FileName',\n    enDescriptor: 'FileName',\n    cnDescriptor: 'Key回档文件名，回档专用',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'FileExtType',\n    enDescriptor: 'FileExtType',\n    cnDescriptor: 'Key回档文件扩展名，回档专用',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'FileSize',\n    enDescriptor: 'FileSize',\n    cnDescriptor: 'Key回档文件大小，回档专用',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'FileContent',\n    enDescriptor: 'FileContent',\n    cnDescriptor: 'Key回档文件内容，回档专用',\n    link: '',\n    type: 'input',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/596/39664',\n  namespace,\n  fieldDescriptor: TCAPLUSFilterFieldsDescriptor,\n};\n\nconst TCAPLUS_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'TableInstanceId',\n  queries: TCAPLUSFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  params.Limit = _.get(queries, 'Limit', 20) || 20;\n  params.Offset = _.get(queries, 'Offset', 0) || 0;\n  params.ClusterId = _.get(queries, 'ClusterId', '') || '';\n  params.TableGroupIds = _.get(queries, 'TableGroupIds', []) || [];\n  queries = _.omit(queries, ['Offset', 'Limit', 'TableGroupIds', 'ClusterId']);\n  const SelectedTables: any[] = [];\n  _.forEach(queries, (item: any, key) => {\n    if (_.isArray(item)) {\n      item = _.compact(item);\n      if (item.length > 0) {\n        SelectedTables[key] = _.uniq(item);\n      }\n    } else if (_.isObject(item)) {\n      if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n        SelectedTables[key] = _.get(item, 'value');\n      }\n    } else if (_.isNumber(item) || !_.isEmpty(item)) {\n      SelectedTables[key] = item;\n    }\n  });\n  params.SelectedTables = SelectedTables;\n  return params;\n}\n// 和其他产品的展示保持一致\nconst regonsMap = {\n  'ap-beijing': '华北地区(北京)',\n  'ap-guangzhou': '华南地区(广州)',\n  'ap-hongkong': '港澳台地区(中国香港)',\n  'ap-seoul': '亚太东北(首尔)',\n  'ap-shanghai': '华东地区(上海)',\n  'ap-singapore': '亚太东南(新加坡)',\n  'ap-tokyo': '亚太东北(东京)',\n  'eu-frankfurt': '欧洲地区(法兰克福)',\n  'na-ashburn': '美国东部(弗吉尼亚)',\n  'na-siliconvalley': '美国西部(硅谷)',\n};\nexport default TCAPLUS_STATE;\nexport {\n  TCAPLUSFilterFieldsDescriptor,\n  templateQueryIdMap,\n  TCAPLUSInstanceAliasList,\n  TCAPLUSInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  regonsMap,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as TCAPLUSGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/VPC_NET_DETECT';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'vpcNetDetectQuery';\n\nconst VPCNETInvalidDemensions = {\n  netdetectid: 'NetDetectId',\n  netDetectId: 'NetDetectId',\n};\n\nconst VPCNETDETECTInstanceAliasList = ['NetDetectId', 'NetDetectName'];\n\nconst templateQueryIdMap = {\n  instance: 'NetDetectId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst VPCNETFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  'vpc-id': [],\n  'net-detect-id': [],\n  'subnet-id': [],\n  'net-detect-name': [],\n};\n\nconst VPCNETFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'vpc-id',\n    cnDescriptor: 'VPC实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'net-detect-id',\n    enDescriptor: 'net-detect-id',\n    cnDescriptor: '网络探测实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'subnet-id',\n    enDescriptor: 'subnet-id',\n    cnDescriptor: '子网实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'net-detect-name',\n    enDescriptor: 'net-detect-name',\n    cnDescriptor: '网络探测名称',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/38696',\n  namespace,\n  fieldDescriptor: VPCNETFilterFieldsDescriptor,\n};\n\nconst VPCNET_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'NetDetectId',\n  queries: VPCNETFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['netDetectId'];\n  });\n  return metricTmp;\n}\nexport default VPCNET_STATE;\nexport {\n  VPCNETFilterFieldsDescriptor,\n  templateQueryIdMap,\n  VPCNETDETECTInstanceAliasList,\n  VPCNETInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  GetInstanceQueryParams as VPCNETDETECTGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/CES';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'cesQuery';\n\nconst CESInvalidDemensions = {\n  uInstanceId: 'InstanceId',\n};\n\nconst CESInstanceAliasList = ['InstanceId', 'InstanceName'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是类型\nconst CESFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  InstanceIds: [],\n  InstanceNames: [],\n  OrderByKey: {},\n  OrderByType: {},\n  IpList: [],\n};\n\nconst CESFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceIds',\n    enDescriptor: 'InstanceIds',\n    cnDescriptor: '集群实例ID列表',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'InstanceNames',\n    enDescriptor: 'InstanceNames',\n    cnDescriptor: '集群实例名称列表',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'OrderByKey',\n    enDescriptor: 'OrderByKey',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '实例ID', value: 1 },\n      { text: '实例名称', value: 2 },\n      { text: '可用区', value: 3 },\n      { text: '创建时间', value: 4 },\n    ],\n  },\n  {\n    key: 'OrderByType',\n    enDescriptor: 'OrderByType',\n    cnDescriptor: '排序方式',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '升序', value: 0 },\n      { text: '降序', value: 1 },\n    ],\n  },\n  {\n    key: 'IpList',\n    enDescriptor: 'IpList',\n    cnDescriptor: '私有网络vip列表',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/845/30631',\n  namespace,\n  fieldDescriptor: CESFilterFieldsDescriptor,\n};\n\nconst CES_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: CESFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\nexport default CES_STATE;\nexport {\n  CESFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CESInstanceAliasList,\n  CESInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as CESGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/DC';\nconst queryEditorName = 'dcQuery';\n\nconst DCFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  DirectConnectIds: [],\n};\n\nconst DCFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'DirectConnectIds',\n    enDescriptor: 'DirectConnectIds',\n    cnDescriptor: '物理专线 ID',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/216/34826',\n  namespace,\n  fieldDescriptor: DCFilterFieldsDescriptor,\n};\n\nconst DC_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'DirectConnectId',\n  queries: DCFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\n\nconst DCInstanceAliasList = ['DirectConnectId', 'DirectConnectName'];\n\nconst templateQueryIdMap = {\n  instance: 'DirectConnectId',\n};\n\nconst DCInvalidDemensions = {\n  directConnectId: 'DirectConnectId',\n  directconnectid: 'DirectConnectId',\n};\nfunction modifyDimensons(metricItem) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['directConnectId'];\n  });\n  return metricTmp;\n}\nexport default DC_STATE;\nexport {\n  DCFilterFieldsDescriptor,\n  templateQueryIdMap,\n  DCInstanceAliasList,\n  DCInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  GetInstanceQueryParams as DCGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/DCG';\nconst queryEditorName = 'dcgQuery';\n\nconst DCGInvalidDemensions = {\n  directConnectGatewayId: 'DirectConnectGatewayId',\n};\n\nconst DCGInstanceAliasList = ['DirectConnectGatewayId', 'DirectConnectGatewayName'];\n\nconst templateQueryIdMap = {\n  instance: 'DirectConnectGatewayId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst DCGFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  'direct-connect-gateway-id': [],\n  'direct-connect-gateway-name': [],\n  'direct-connect-gateway-ip': [],\n  'gateway-type': {},\n  'network-type': {},\n  'ccn-id': [],\n  'vpc-id': [],\n};\n\nconst DCGFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'direct-connect-gateway-id',\n    enDescriptor: 'direct-connect-gateway-id',\n    cnDescriptor: '专线网关唯一ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'direct-connect-gateway-name',\n    enDescriptor: 'direct-connect-gateway-name',\n    cnDescriptor: '专线网关名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'direct-connect-gateway-ip',\n    enDescriptor: 'direct-connect-gateway-ip',\n    cnDescriptor: '专线网关IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'gateway-type',\n    enDescriptor: 'gateway-type',\n    cnDescriptor: '网关类型',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '普通型', value: 'NORMAL' },\n      { text: 'NAT型', value: 'NAT' },\n    ],\n  },\n  {\n    key: 'network-type',\n    enDescriptor: 'network-type',\n    cnDescriptor: '网络类型',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '私有网络类型', value: 'VPC' },\n      { text: '云联网类型', value: 'CCN' },\n    ],\n  },\n  {\n    key: 'ccn-id',\n    enDescriptor: 'ccn-id',\n    cnDescriptor: '专线网关所在云联网ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'vpc-id',\n    cnDescriptor: '专线网关所在私有网络ID',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/30644',\n  namespace,\n  fieldDescriptor: DCGFilterFieldsDescriptor,\n};\n\nconst DCG_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'DirectConnectGatewayId',\n  queries: DCGFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nexport default DCG_STATE;\nexport {\n  DCGFilterFieldsDescriptor,\n  templateQueryIdMap,\n  DCGInstanceAliasList,\n  DCGInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  GetInstanceQueryParams as DCGGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/DCX';\nconst queryEditorName = 'dcxQuery';\n\nconst DCXFilterFields = {\n  'direct-connect-tunnel-name': [],\n  'direct-connect-tunnel-id': [],\n  'direct-connect-id': [],\n};\n\nconst DCXFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'direct-connect-tunnel-name',\n    enDescriptor: 'direct-connect-tunnel-name',\n    cnDescriptor: '专用通道名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'direct-connect-tunnel-id',\n    enDescriptor: 'direct-connect-tunnel-id',\n    cnDescriptor: '专用通道实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'direct-connect-id',\n    enDescriptor: 'direct-connect-id',\n    cnDescriptor: '物理专线实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/216/19819',\n  namespace,\n  fieldDescriptor: DCXFilterFieldsDescriptor,\n};\n\nconst DCX_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'DirectConnectTunnelId',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    ...DCXFilterFields,\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\n\nconst DCXInstanceAliasList = ['DirectConnectTunnelId', 'DirectConnectTunnelName'];\n\nconst templateQueryIdMap = {\n  instance: 'DirectConnectTunnelId',\n};\n\nconst DCXInvalidDemensions = {\n  directconnectconnid: 'DirectConnectTunnelId',\n  directConnectConnId: 'DirectConnectTunnelId',\n};\nfunction modifyDimensons(metricItem) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['directConnectConnId'];\n  });\n  return metricTmp;\n}\nexport default DCX_STATE;\nexport {\n  DCXFilterFieldsDescriptor,\n  templateQueryIdMap,\n  DCXInstanceAliasList,\n  DCXInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  GetInstanceQueryParams as DCXGetInstanceQueryParams,\n};\n","import * as _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/ECM_LB';\nconst queryEditorName = 'ecmLbQuery';\n\nconst ECMLBInvalidDemensions = {\n  vip: 'LoadBalancerVips',\n};\n\nconst ECMLBInstanceAliasList = ['LoadBalancerId', 'LoadBalancerName'];\n\nconst templateQueryIdMap = {\n  instance: 'LoadBalancerId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst ECMLBFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  LoadBalancerIds: [],\n  LoadBalancerName: [],\n  LoadBalancerVips: [],\n  BackendPrivateIps: [],\n  VpcId: '',\n};\n\nconst ECMLBFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'LoadBalancerIds',\n    enDescriptor: 'LoadBalancerIds',\n    cnDescriptor: '负载均衡器ID数组',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerName',\n    enDescriptor: 'LoadBalancerName',\n    cnDescriptor: '负载均衡器名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerVips',\n    enDescriptor: 'LoadBalancerVips',\n    cnDescriptor: '负载均衡获得的公网IP地址',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'BackendPrivateIps',\n    enDescriptor: 'BackendPrivateIps',\n    cnDescriptor: '绑定的后端服务的内网 IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'VpcId',\n    cnDescriptor: '实例所属私有网络唯一ID',\n    link: '',\n    type: 'input',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/1108/48459',\n  namespace,\n  fieldDescriptor: ECMLBFilterFieldsDescriptor,\n};\n\nconst ECM_STATE = {\n  region: 'ap-guangzhou',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'LoadBalancerId',\n  queries: ECMLBFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\n// function isValidMetric(metricObj: any = {}) {\n//   const dimension = _.get(metricObj, 'Dimensions[0].Dimensions');\n//   // console.log('dimension', dimension, dimension.length === 1 && _.indexOf(dimension, 'diskId') !== -1);\n//   return dimension.length === 1 &&( _.indexOf(dimension, 'UUID') !== -1 || _.indexOf(dimension, 'uuid') !== -1);\n// }\n\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    // item.Dimensions = ['UUID'];\n  });\n  return metricTmp;\n}\nexport default ECM_STATE;\nexport {\n  ECMLBFilterFieldsDescriptor,\n  templateQueryIdMap,\n  ECMLBInstanceAliasList,\n  ECMLBInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  GetInstanceQueryParams as ECMLBGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/QAAP';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'qaapQuery';\n\nconst QAAPInvalidDemensions = {\n  channelId: 'InstanceId',\n};\n\nconst QAAPInstanceAliasList = ['InstanceId'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst QAAPFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  ProjectId: [],\n  AccessRegion: [],\n  RealServerRegion: [],\n  GroupId: [],\n};\n\nconst QAAPFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'ProjectId',\n    enDescriptor: 'ProjectId',\n    cnDescriptor: '项目ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'AccessRegion',\n    enDescriptor: 'AccessRegion',\n    cnDescriptor: '接入地域',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'RealServerRegion',\n    enDescriptor: 'RealServerRegion',\n    cnDescriptor: '源站地域',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'GroupId',\n    enDescriptor: 'GroupId',\n    cnDescriptor: '通道组ID',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/608/36963',\n  namespace,\n  fieldDescriptor: QAAPFilterFieldsDescriptor,\n};\n\nconst QAAP_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: QAAPFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  // metricTmp.Dimensions.forEach((item) => {\n  //   item.Dimensions = ['netDetectId'];\n  // });\n  return metricTmp;\n}\nexport default QAAP_STATE;\nexport {\n  QAAPFilterFieldsDescriptor,\n  templateQueryIdMap,\n  QAAPInstanceAliasList,\n  QAAPInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  GetInstanceQueryParams as QAAPGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\nconst namespace = 'QCE/REDIS_MEM';\nconst BillingMode = [\n  { text: '按量计费', value: 'postpaid' },\n  { text: '包年包月', value: 'prepaid' },\n];\n\nconst AutoRenew = [\n  { text: '手动续费', value: 0 },\n  { text: '自动续费', value: 1 },\n  { text: '明确不自动续费', value: 2 },\n];\n\nconst Status = [\n  { text: '待初始化', value: 0 },\n  { text: '流程执行中', value: 1 },\n  { text: '运行中', value: 2 },\n  { text: '已隔离', value: -2 },\n  { text: '待删除', value: -3 },\n];\n\nconst TypeVersion = [\n  { text: '单机版', value: 1 },\n  { text: '主从版', value: 2 },\n  { text: '集群版', value: 3 },\n];\n\nconst OrderBy = [\n  { text: 'projectId', value: 'projectId' },\n  { text: 'instancename', value: 'instancename' },\n  { text: 'createtime', value: 'createtime' },\n  { text: 'type', value: 'type' },\n  { text: 'curDeadline', value: 'curDeadline' },\n];\n\nconst OrderType = [\n  { text: '升序', value: 0 },\n  { text: '降序', value: 1 },\n];\nconst Type = [\n  { text: 'Redis老集群版', value: 1 },\n  { text: 'Redis 2.8主从版', value: 2 },\n  { text: 'CKV主从版', value: 3 },\n  { text: 'CKV集群版', value: 4 },\n  { text: 'Redis 2.8单机版', value: 5 },\n  { text: 'Redis 4.0主从版', value: 6 },\n  { text: 'Redis 4.0集群版', value: 7 },\n  { text: 'Redis5.0主从版', value: 8 },\n  { text: 'Redis5.0集群版', value: 9 },\n];\n\nconst RedisFields = {\n  InstanceId: '',\n  OrderBy: '',\n  OrderType: null,\n  VpcIds: [],\n  SubnetIds: [],\n  ProjectIds: [],\n  SearchKey: '',\n  InstanceName: '',\n  UniqVpcIds: [],\n  UniqSubnetIds: [],\n  Status: [],\n  TypeVersion: null,\n  EngineName: '',\n  AutoRenew: null,\n  BillingMode: '',\n  Type: null,\n};\n\nconst RedisMemFieldsDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceId',\n    enDescriptor: 'InstancesId',\n    cnDescriptor: '实例id',\n    type: 'input',\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderBy,\n  },\n  {\n    key: 'OrderType',\n    enDescriptor: 'OrderType',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderType,\n  },\n  {\n    key: 'VpcIds',\n    enDescriptor: 'VpcIds',\n    cnDescriptor: '私有网络ID数组，数组下标从0开始，如果不传则默认选择基础网络，如：47525',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'SubnetIds',\n    enDescriptor: 'SubnetIds',\n    cnDescriptor: '子网ID数组，数组下标从0开始，如：56854',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'ProjectIds',\n    enDescriptor: 'ProjectIds',\n    cnDescriptor: '项目ID 组成的数组',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'SearchKey',\n    enDescriptor: 'SearchKey',\n    cnDescriptor: '查找实例的ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'InstanceName',\n    enDescriptor: 'InstanceName',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'UniqVpcIds',\n    enDescriptor: 'UniqVpcIds',\n    cnDescriptor: '私有网络ID数组，数组下标从0开始，如果不传则默认选择基础网络，如：vpc-sad23jfdfk',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'UniqSubnetIds',\n    enDescriptor: 'UniqSubnetIds',\n    cnDescriptor: '子网ID数组，数组下标从0开始，如：subnet-fdj24n34j2',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'Status',\n    enDescriptor: 'Status',\n    cnDescriptor: '实例状态',\n    multiple: true,\n    type: 'select',\n    list: Status,\n  },\n  {\n    key: 'TypeVersion',\n    enDescriptor: 'TypeVersion',\n    cnDescriptor: '类型版本',\n    link: '',\n    type: 'select',\n    list: TypeVersion,\n  },\n  {\n    key: 'EngineName',\n    enDescriptor: 'EngineName',\n    cnDescriptor: '引擎信息：Redis-2.8，Redis-4.0，CKV',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'AutoRenew',\n    enDescriptor: 'AutoRenew',\n    cnDescriptor: '续费模式',\n    multiple: true,\n    type: 'select',\n    list: AutoRenew,\n  },\n  {\n    key: 'BillingMode',\n    enDescriptor: 'BillingMode',\n    cnDescriptor: '计费模式：postpaid-按量计费；prepaid-包年包月',\n    link: '',\n    type: 'select',\n    list: BillingMode,\n  },\n  {\n    key: 'Type',\n    enDescriptor: 'Type',\n    cnDescriptor: '实例类型',\n    link: '',\n    type: 'select',\n    list: Type,\n  },\n];\n\nconst REDISMEM_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: { ...RedisFields },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        // select 单选\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\nfunction isValidMetric(metricObj: any = {}) {\n  const dimension = _.get(metricObj, 'Dimensions[0].Dimensions');\n  return dimension.length === 1 && _.indexOf(dimension, 'pnodeid') === -1 && _.indexOf(dimension, 'rnodeid') === -1;\n}\n\nconst REDISMEMInstanceAliasList = ['InstanceId', 'InstanceName', 'WanIp'];\n\nconst RedisMemInvalidDemensions = {\n  instanceid: 'InstanceId',\n};\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\n\nexport default REDISMEM_STATE;\nexport {\n  RedisMemFieldsDescriptor,\n  RedisMemInvalidDemensions,\n  REDISMEMInstanceAliasList,\n  templateQueryIdMap,\n  namespace,\n  isValidMetric,\n  GetInstanceQueryParams as REDISMEMGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/VBC';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'vbcQuery';\n\nconst VBCInvalidDemensions = {\n  // CcnId: 'CcnId',\n};\n\n// 需和文件名对应\nconst VBCInstanceAliasList = ['CcnId', 'CcnName'];\n\nconst templateQueryIdMap = {\n  instance: 'CcnId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst VBCFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  'ccn-id': [],\n  'ccn-name': [],\n  'ccn-description': [],\n  state: {},\n};\n\nconst VBCFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'ccn-id',\n    enDescriptor: 'ccn-id',\n    cnDescriptor: 'CCN实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'ccn-name',\n    enDescriptor: 'ccn-name',\n    cnDescriptor: 'CCN名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'ccn-description',\n    enDescriptor: 'ccn-description',\n    cnDescriptor: 'CCN描述',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'state',\n    enDescriptor: 'state',\n    cnDescriptor: '实例状态',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '隔离中', value: 'ISOLATED' },\n      { text: '运行中', value: 'AVAILABLE' },\n    ],\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/19199',\n  namespace,\n  fieldDescriptor: VBCFilterFieldsDescriptor,\n};\n\nconst VBC_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'CcnId',\n  DRegion: '',\n  SRegion: '',\n  queries: VBCFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\n// const regionSupported = [\n//   { text: '华北地区(北京)', value: 'ap-beijing' },\n//   { text: '西南地区(成都)', value: 'ap-chengdu' },\n//   { text: '西南地区(重庆)', value: 'ap-chongqing' },\n//   { text: '华南地区(广州)', value: 'ap-guangzhou' },\n//   { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n//   { text: '亚太南部(孟买)', value: 'ap-mumbai' },\n//   { text: '华东地区(南京)', value: 'ap-nanjing' },\n//   { text: '华东地区(上海)', value: 'ap-shanghai' },\n//   { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },\n//   { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n//   { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n//   { text: '亚太东北(东京)', value: 'ap-tokyo' },\n//   { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },\n//   { text: '美国东部(弗吉尼亚)', value: 'na-ashburn' },\n//   { text: '美国西部(硅谷)', value: 'na-siliconvalley' },\n//   { text: '北美地区(多伦多)', value: 'na-toronto' },\n// ];\nexport default VBC_STATE;\nexport {\n  VBCFilterFieldsDescriptor,\n  templateQueryIdMap,\n  VBCInstanceAliasList,\n  VBCInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  // regionSupported,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as VBCGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/VPNGW';\nconst queryEditorName = 'vpngwQuery';\n\nconst VPNGWInvalidDemensions = {\n  vpnGwId: 'VpnGatewayId',\n};\n\nconst VPNGWInstanceAliasList = ['VpnGatewayId', 'VpnGatewayName'];\n\nconst templateQueryIdMap = {\n  instance: 'VpnGatewayId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst VPNGWFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  'vpc-id': [],\n  'vpn-gateway-id': [],\n  'vpn-gateway-name': [],\n  type: {},\n  'public-ip-address': [],\n  'renew-flag': {},\n  zone: [],\n};\n\nconst VPNGWFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'vpc-id',\n    cnDescriptor: 'VPC实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpn-gateway-id',\n    enDescriptor: 'vpn-gateway-id',\n    cnDescriptor: 'VPN实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpn-gateway-name',\n    enDescriptor: 'vpn-gateway-name',\n    cnDescriptor: 'VPN实例名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'type',\n    enDescriptor: 'type',\n    cnDescriptor: 'VPN网关类型',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: 'IPSEC', value: 'IPSEC' },\n      { text: 'SSL', value: 'SSL' },\n    ],\n  },\n  {\n    key: 'public-ip-address',\n    enDescriptor: 'public-ip-address',\n    cnDescriptor: '公网IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'renew-flag',\n    enDescriptor: 'renew-flag',\n    cnDescriptor: '网关续费类型',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '手动续费', value: 'NOTIFY_AND_MANUAL_RENEW' },\n      { text: '自动续费', value: 'NOTIFY_AND_AUTO_RENEW' },\n    ],\n  },\n  {\n    key: 'zone',\n    enDescriptor: 'zone',\n    cnDescriptor: 'VPN所在可用区',\n    link: '',\n    type: 'dropdownMulti',\n  },\n];\n\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/17514',\n  namespace,\n  fieldDescriptor: VPNGWFilterFieldsDescriptor,\n};\n\nconst VPNGW_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'VpnGatewayId',\n  queries: VPNGWFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nexport default VPNGW_STATE;\nexport {\n  VPNGWFilterFieldsDescriptor,\n  templateQueryIdMap,\n  VPNGWInstanceAliasList,\n  VPNGWInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  GetInstanceQueryParams as VPNGWGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/VPNX';\nconst queryEditorName = 'vpnxQuery';\n\nconst VPNXInvalidDemensions = {\n  vpnConnId: 'VpnConnectionId',\n};\n\nconst VPNXInstanceAliasList = ['VpnConnectionId', 'VpnConnectionName'];\n\nconst templateQueryIdMap = {\n  instance: 'VpnConnectionId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst VPNXFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  'vpc-id': [],\n  'vpn-gateway-id': [],\n  'customer-gateway-id': [],\n  'vpn-connection-name': [],\n  'vpn-connection-id': [],\n};\n\nconst VPNXFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'vpc-id',\n    cnDescriptor: 'VPC实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpn-gateway-id',\n    enDescriptor: 'vpn-gateway-id',\n    cnDescriptor: 'VPN实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'customer-gateway-id ',\n    enDescriptor: 'customer-gateway-id ',\n    cnDescriptor: '对端网关实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpn-connection-name',\n    enDescriptor: 'vpn-connection-name',\n    cnDescriptor: '通道名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpn-connection-id',\n    enDescriptor: 'vpn-connection-id',\n    cnDescriptor: '通道实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/17515',\n  namespace,\n  fieldDescriptor: VPNXFilterFieldsDescriptor,\n};\n\nconst VPNX_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'VpnConnectionId',\n  queries: VPNXFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nexport default VPNX_STATE;\nexport {\n  VPNXFilterFieldsDescriptor,\n  templateQueryIdMap,\n  VPNXInstanceAliasList,\n  VPNXInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  GetInstanceQueryParams as VPNXGetInstanceQueryParams,\n};\n","import * as _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/WAF';\nconst queryEditorName = 'wafQuery';\nconst WAFFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  origin: [],\n  domain: [],\n  resourceId: [],\n  status: {},\n  serviceType: {},\n  projectId: [],\n  domainType: {},\n  fullUrlCache: {},\n  https: {},\n  originPullProtocol: {},\n  tagKey: [],\n};\n\nconst WAFFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'origin',\n    enDescriptor: 'origin',\n    cnDescriptor: '主源站',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'domain',\n    enDescriptor: 'domain',\n    cnDescriptor: '域名',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'resourceId',\n    enDescriptor: 'resourceId',\n    cnDescriptor: '域名id',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'status',\n    enDescriptor: 'status',\n    cnDescriptor: '域名状态',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'online', value: 'online' },\n      { text: 'offline', value: 'offline' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'serviceType',\n    enDescriptor: 'serviceType',\n    cnDescriptor: '业务类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'web', value: 'web' },\n      { text: 'download', value: 'download' },\n      { text: 'media', value: 'media' },\n    ],\n  },\n  {\n    key: 'projectId',\n    enDescriptor: 'projectId',\n    cnDescriptor: '项目ID',\n    link: '',\n    type: 'inputNumberMulti',\n  },\n  {\n    key: 'domainType',\n    enDescriptor: 'domainType',\n    cnDescriptor: '主源站类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '自有源', value: 'cname' },\n      { text: 'cos接入', value: 'cos' },\n    ],\n  },\n  {\n    key: 'fullUrlCache',\n    enDescriptor: 'fullUrlCache',\n    cnDescriptor: '全路径缓存',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '打开', value: 'on' },\n      { text: '关闭', value: 'off' },\n    ],\n  },\n  {\n    key: 'https',\n    enDescriptor: 'https',\n    cnDescriptor: '是否配置https',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'on', value: 'on' },\n      { text: 'off', value: 'off' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'originPullProtocol',\n    enDescriptor: 'originPullProtocol',\n    cnDescriptor: '回源协议类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'http', value: 'http' },\n      { text: 'follow', value: 'follow' },\n      { text: 'https', value: 'https' },\n    ],\n  },\n  {\n    key: 'tagKey',\n    enDescriptor: 'tagKey',\n    cnDescriptor: '标签键',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/228/41118',\n  namespace,\n  fieldDescriptor: WAFFilterFieldsDescriptor,\n};\nconst WAF_STATE = {\n  region: 'ap-guangzhou',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'Domain',\n  queries: WAFFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\n\nconst WAFInstanceAliasList = ['Domain', 'ProjectId'];\n\nconst WAFInvalidDemensions = {\n  projectId: 'ProjectId',\n  domain: 'Domain',\n};\nconst templateQueryIdMap = {\n  instance: 'Domain',\n};\nexport default WAF_STATE;\nexport {\n  WAFFilterFieldsDescriptor,\n  templateQueryIdMap,\n  WAFInstanceAliasList,\n  WAFInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  GetInstanceQueryParams as WAFGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\nconst InstanceTypes = [\n  { text: '主实例', value: 1 },\n  { text: '备灾实例', value: 2 },\n  { text: '只读实例', value: 3 },\n];\n\nconst Status = [\n  { text: '创建中', value: 0 },\n  { text: '运行中', value: 1 },\n  { text: '隔离中', value: 4 },\n  { text: '已隔离', value: 5 },\n];\n\nconst PayTypes = [\n  { text: '包年包月', value: 0 },\n  { text: '小时计费', value: 1 },\n];\n\nconst TaskStatus = [\n  { text: '没有任务', value: 0 },\n  { text: '升级中', value: 1 },\n  { text: '数据导入中', value: 2 },\n  { text: '开放Slave中', value: 3 },\n  { text: '外网访问开通中', value: 4 },\n  { text: '批量操作执行中', value: 5 },\n  { text: '回档中', value: 6 },\n  { text: '外网访问关闭中', value: 7 },\n  { text: '密码修改中', value: 8 },\n  { text: '实例名修改中', value: 9 },\n  { text: '重启中', value: 10 },\n  { text: '自建迁移中', value: 12 },\n  { text: '删除库表中', value: 13 },\n  { text: '灾备实例创建同步中', value: 14 },\n  { text: '升级待切换', value: 15 },\n  { text: '升级切换中', value: 16 },\n  { text: '升级切换完成', value: 17 },\n];\n\nconst EngineVersions = [\n  { text: '5.1', value: '5.1' },\n  { text: '5.5', value: '5.5' },\n  { text: '5.6', value: '5.6' },\n  { text: '5.7', value: '5.7' },\n];\n\nconst OrderBy = [\n  { text: 'InstanceId', value: 'InstanceId' },\n  { text: 'InstanceName', value: 'InstanceName' },\n  { text: 'CreateTime', value: 'CreateTime' },\n  { text: 'DeadlineTime', value: 'DeadlineTime' },\n];\n\nconst OrderDirection = [\n  { text: 'ASC', value: 'ASC' },\n  { text: 'DESC', value: 'DESC' },\n];\n\nconst InitFlag = [\n  { text: '未初始化', value: 0 },\n  { text: '初始化', value: 1 },\n];\n\nconst CdbErrors = [\n  { text: '未锁定', value: 0 },\n  { text: '锁定', value: 1 },\n];\n\nconst CDBFields = {\n  ProjectId: '',\n  InstanceTypes: {},\n  Vips: [],\n  Status: {},\n  Offset: 0,\n  Limit: 20,\n  SecurityGroupId: '',\n  PayTypes: {},\n  InstanceNames: [],\n  TaskStatus: {},\n  EngineVersions: {},\n  VpcIds: [],\n  ZoneIds: [],\n  SubnetIds: [],\n  CdbErrors: {},\n  OrderBy: {},\n  OrderDirection: {},\n  InstanceIds: [],\n  InitFlag: {},\n};\n\nconst CDBFieldsDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceNames',\n    enDescriptor: 'Instance Name',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'InstanceIds',\n    enDescriptor: 'Instance ID',\n    cnDescriptor: '实例ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'ZoneIds',\n    enDescriptor: 'Zone ID',\n    cnDescriptor: '可用区的ID',\n    link: '',\n    type: 'dropdownmulti',\n  },\n  {\n    key: 'InstanceTypes',\n    enDescriptor: 'Instance Type',\n    cnDescriptor: '实例类型',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: InstanceTypes,\n  },\n  {\n    key: 'EngineVersions',\n    enDescriptor: 'Engine Version',\n    cnDescriptor: '实例数据库引擎版本',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: EngineVersions,\n  },\n  {\n    key: 'TaskStatus',\n    enDescriptor: 'Task Status',\n    cnDescriptor: '实例任务',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: TaskStatus,\n  },\n  {\n    key: 'InitFlag',\n    enDescriptor: 'Init Flag',\n    cnDescriptor: '实例初始化状态',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: InitFlag,\n  },\n  {\n    key: 'PayTypes',\n    enDescriptor: 'Pay Type',\n    cnDescriptor: '付费类型',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: PayTypes,\n  },\n  {\n    key: 'CdbErrors',\n    enDescriptor: 'CDB Errors',\n    cnDescriptor: '实例锁定标记',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: CdbErrors,\n  },\n  {\n    key: 'Status',\n    enDescriptor: 'Status',\n    cnDescriptor: '实例状态',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: Status,\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderBy,\n  },\n  {\n    key: 'OrderDirection',\n    enDescriptor: 'Order Direction',\n    cnDescriptor: '排序方式',\n    link: '',\n    type: 'select',\n    list: OrderDirection,\n  },\n  {\n    key: 'Vips',\n    enDescriptor: 'Vip',\n    cnDescriptor: '实例内网IP地址',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'VpcIds',\n    enDescriptor: 'Vpc ID',\n    cnDescriptor: '私有网络ID',\n    link: 'https://cloud.tencent.com/document/api/215/15778',\n    type: 'inputmulti',\n  },\n  {\n    key: 'SubnetIds',\n    enDescriptor: 'Subnet ID',\n    cnDescriptor: '子网ID',\n    link: 'https://cloud.tencent.com/document/api/215/15784',\n    type: 'inputmulti',\n  },\n  {\n    key: 'ProjectId',\n    enDescriptor: 'Project ID',\n    cnDescriptor: '项目ID',\n    link: 'https://cloud.tencent.com/document/product/378/4400',\n    type: 'input',\n  },\n  {\n    key: 'SecurityGroupId',\n    enDescriptor: 'Security Group ID',\n    cnDescriptor: '安全组ID',\n    link: 'https://cloud.tencent.com/document/api/236/15854',\n    type: 'input',\n  },\n];\n\nconst CDB_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: { ...CDBFields },\n};\n\nconst CDBInstanceAliasList = ['InstanceId', 'InstanceName', 'Vip'];\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\nfunction isValidMetric(metricObj: any = {}) {\n  const dimension = _.get(metricObj, 'Dimensions[0].Dimensions');\n  return dimension.length === 2 && _.indexOf(dimension, 'instanceid') !== -1 && _.indexOf(dimension, 'insttype') !== -1;\n}\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = item.Dimensions.map((i) => CDBInvalidDemensions[i] || i);\n  });\n  return metricTmp;\n}\nconst CDBInvalidDemensions = {\n  instanceid: 'InstanceId',\n  insttype: 'InstanceType',\n  region: 'Region',\n};\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\nexport default CDB_STATE;\n\nexport {\n  CDBFieldsDescriptor,\n  CDBInstanceAliasList,\n  templateQueryIdMap,\n  CDBInvalidDemensions,\n  isValidMetric,\n  modifyDimensons,\n  GetInstanceQueryParams as CDBGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\nexport const CFSQueryDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'FileSystemId',\n    enDescriptor: 'File System Id',\n    cnDescriptor: '文件系统 ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'VpcId',\n    cnDescriptor: '私有网络（VPC） ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SubnetId',\n    enDescriptor: 'SubnetId',\n    cnDescriptor: '子网 ID',\n    link: '',\n    type: 'input',\n  },\n];\n\nconst CFS_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'FileSystemId',\n  version: '',\n  queries: {\n    Offset: 0,\n    Limit: 20,\n    FileSystemId: '',\n    VpcId: '',\n    SubnetId: '',\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\nconst CFSInstanceAliasList = ['FileSystemId', 'FsName'];\n\n// 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key\nconst CFSInvalidDemensions = {\n  // functionName: 'FunctionName',\n  // namespace: 'Namespace'\n};\n\nconst regionSupported = [\n  { text: '华北地区(北京)', value: 'ap-beijing' },\n  { text: '西南地区(成都)', value: 'ap-chengdu' },\n  { text: '西南地区(重庆)', value: 'ap-chongqing' },\n  { text: '华南地区(广州)', value: 'ap-guangzhou' },\n  { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n  { text: '亚太南部(孟买)', value: 'ap-mumbai' },\n  { text: '华东地区(南京)', value: 'ap-nanjing' },\n  { text: '亚太东北(首尔)', value: 'ap-seoul' },\n  { text: '华东地区(上海)', value: 'ap-shanghai' },\n  { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },\n  { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n  { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n  { text: '亚太东北(东京)', value: 'ap-tokyo' },\n  { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },\n  { text: '美国西部(硅谷)', value: 'na-siliconvalley' },\n  { text: '北美地区(多伦多)', value: 'na-toronto' },\n];\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\nexport default CFS_STATE;\nexport {\n  CFSInstanceAliasList,\n  CFSInvalidDemensions,\n  templateQueryIdMap,\n  regionSupported,\n  GetInstanceQueryParams as CFSGetInstanceQueryParams,\n};\n\n// monitor监控数据默认支持的维度\n// export const SCFDefaultDimensionList = ['functionName', 'namespace', 'version'];\n","import _ from 'lodash';\nimport { FildDescriptorType } from '../_base/types';\n\nexport const InstanceQueryDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为10，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 50,\n  },\n  {\n    key: 'QueueName',\n    enDescriptor: 'QueueName',\n    cnDescriptor: '精确匹配QueueName',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'TagKey',\n    enDescriptor: 'TagKey',\n    cnDescriptor: '标签搜索',\n    link: '',\n    type: 'input',\n  },\n];\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\n// 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key\nexport const InvalidDemensions = {\n  queueId: 'QueueId',\n  queueName: 'QueueName',\n};\n\nexport const templateQueryIdMap = {\n  instance: 'QueueName',\n};\n\n// 与名称挂钩的变量\nconst InstanceAliasList = ['QueueName', 'QueueId'];\nexport { InstanceAliasList, GetInstanceQueryParams };\n\n// 界面状态模型，default\nexport default {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'QueueName',\n  queries: {\n    Offset: 0,\n    Limit: 20,\n    QueueName: '',\n    TagKey: '',\n  },\n};\n","import _ from 'lodash';\nconst instanceChargeTypes = [\n  { text: '预付费', value: 'PREPAID' },\n  { text: '后付费', value: 'POSTPAID_BY_HOUR' },\n  { text: 'CDH付费', value: 'CDHPAID' },\n];\n\nconst CVMFilterFields = {\n  zone: [],\n  'project-id': [],\n  'host-id': [],\n  'vpc-id': [],\n  'subnet-id': [],\n  'instance-id': [],\n  'security-group-id': [],\n  'instance-name': [],\n  'instance-charge-type': {},\n  'private-ip-address': [],\n  'public-ip-address': [],\n  'tag-key': [],\n};\n\nconst CVMFilterFieldsDescriptor = [\n  {\n    key: 'zone',\n    enDescriptor: 'Zone',\n    cnDescriptor: '可用区',\n    link: '',\n    type: 'dropdownmulti',\n  },\n  {\n    key: 'project-id',\n    enDescriptor: 'Project ID',\n    cnDescriptor: '项目ID',\n    link: 'https://cloud.tencent.com/document/api/378/4400',\n    type: 'inputNumbermulti',\n  },\n  {\n    key: 'host-id',\n    enDescriptor: 'CDH ID',\n    cnDescriptor: 'CDH ID',\n    link: 'https://cloud.tencent.com/document/product/416/19730',\n    type: 'inputmulti',\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'VPC ID',\n    cnDescriptor: 'VPC ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'subnet-id',\n    enDescriptor: 'Subnet ID',\n    cnDescriptor: '子网ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'instance-id',\n    enDescriptor: 'Instance ID',\n    cnDescriptor: '实例ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'security-group-id',\n    enDescriptor: 'Security Group ID',\n    cnDescriptor: '安全组ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'instance-name',\n    enDescriptor: 'Instance Name',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'tag-key',\n    enDescriptor: '标签简',\n    cnDescriptor: '标签简',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'instance-charge-type',\n    enDescriptor: 'Instance Charge Type',\n    cnDescriptor: '实例计费模式',\n    link: '',\n    type: 'select',\n    list: instanceChargeTypes,\n  },\n  {\n    key: 'private-ip-address',\n    enDescriptor: 'Private IP Address',\n    cnDescriptor: '实例主网卡的内网IP',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'public-ip-address',\n    enDescriptor: 'Public IP Address',\n    cnDescriptor: '实例主网卡的公网IP，包含实例创建时自动分配的IP和实例创建后手动绑定的弹性IP',\n    link: '',\n    type: 'inputmulti',\n  },\n];\n\nconst CVM_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    instanceIdsChecked: false,\n    filtersChecked: false,\n    InstanceIds: [''],\n    Filters: { ...CVMFilterFields },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    if (queries.instanceIdsChecked) {\n      if (_.isArray(queries.InstanceIds)) {\n        const InstanceIds = _.compact(queries.InstanceIds);\n        if (_.uniq(InstanceIds).length > 0) {\n          params.InstanceIds = _.uniq(InstanceIds).slice(0, 100);\n        }\n      }\n    } else if (queries.filtersChecked) {\n      const Filters: any[] = [];\n      _.forEach(queries.Filters, (item: any, key) => {\n        if (Filters.length > 9) {\n          return;\n        }\n        if (_.isArray(item)) {\n          item = _.compact(item);\n          if (item.length > 0) {\n            Filters.push({ Name: key, Values: _.uniq(item).slice(0, 5) });\n          }\n        } else if (_.isObject(item)) {\n          if (!_.isEmpty(_.get(item, 'value', []))) {\n            Filters.push({ Name: key, Values: _.get(item, 'value', []).slice(0, 5) });\n          }\n        }\n      });\n      if (Filters.length > 0) {\n        params.Filters = Filters;\n      }\n    }\n  }\n  return params;\n}\n\nconst CVMInstanceAliasList = ['InstanceId', 'InstanceName', 'PrivateIpAddresses', 'PublicIpAddresses'];\n\nconst CVMValidMetricsT = [\n  'CPUUsage',\n  'CpuLoadavg',\n  'Cpuloadavg5m',\n  'Cpuloadavg15m',\n  'BaseCpuUsage',\n  'GpuMemTotal',\n  'GpuMemUsage',\n  'GpuMemUsed',\n  'GpuPowDraw',\n  'GpuPowLimit',\n  'GpuPowUsage',\n  'GpuTemp',\n  'GpuUtil',\n  'LanOuttraffic',\n  'LanIntraffic',\n  'LanOutpkg',\n  'LanInpkg',\n  'WanOuttraffic',\n  'WanIntraffic',\n  'WanOutpkg',\n  'WanInpkg',\n  'AccOuttraffic',\n  'TcpCurrEstab',\n  'TimeOffset',\n  'MemUsed',\n  'MemUsage',\n  'CvmDiskUsage',\n  'BaseCpuUsage',\n  'VmDiskReadIops',\n];\n// const CVMInvalidDemensions = {\n//   'vm_uuid': 'InstanceId',\n//   'vmUuid': 'InstanceId',\n// };\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\nfunction isValidMetric(metric) {\n  const CVMValidMetrics = _.map(CVMValidMetricsT, _.toUpper);\n  return _.indexOf(CVMValidMetrics, _.toUpper(metric.MetricName)) !== -1;\n}\nfunction modifyDimensons(metricItem) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['InstanceId'];\n  });\n  return metricTmp;\n}\nexport default CVM_STATE;\nexport {\n  CVMFilterFieldsDescriptor,\n  CVMInstanceAliasList,\n  isValidMetric,\n  modifyDimensons,\n  templateQueryIdMap,\n  // CVMInvalidDemensions,\n  GetInstanceQueryParams as CVMGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\nexport const InstanceQueryDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为10，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceIds',\n    enDescriptor: 'InstanceIds',\n    cnDescriptor: '按照一个或者多个实例ID查询。实例ID形如: emr-xxxxxxxx ',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'OrderField',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '实例ID', value: 'clusterId' },\n      { text: '创建时间', value: 'addTime' },\n      { text: '状态', value: 'status' },\n    ],\n  },\n  {\n    key: 'Asc',\n    enDescriptor: 'Order Direction',\n    cnDescriptor: '排序方式',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '降序', value: 0 },\n      { text: '升序', value: 1 },\n    ],\n  },\n  {\n    key: 'ProjectId',\n    enDescriptor: 'ProjectId',\n    cnDescriptor: '实例所属项目ID',\n    link: '',\n    type: 'inputnumber',\n  },\n  {\n    key: 'DisplayStrategy',\n    enDescriptor: 'DisplayStrategy',\n    cnDescriptor: '集群筛选策略',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '未销毁的实例', value: 'clusterList' },\n      { text: '正常运行的实例', value: 'monitorManage' },\n    ],\n  },\n];\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\n// 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key\nexport const InvalidDemensions = new Proxy(\n  {},\n  {\n    get(target, k, receiver) {\n      if (typeof k === 'string') {\n        if (k.startsWith('id4')) return 'ClusterId'; // id4****\n        if (k.startsWith('host4')) return 'nodeIP'; // host4***\n      }\n      return Reflect.get(target, k, receiver);\n    },\n    has(target, propKey) {\n      return true;\n    },\n  }\n);\n\nexport const templateQueryIdMap = {\n  instance: 'ClusterId',\n};\n\n// 与名称挂钩的变量\nconst InstanceAliasList = ['ClusterId', 'ClusterName'];\nexport { InstanceAliasList, GetInstanceQueryParams };\n\n// 界面状态模型，default\nexport default {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'ClusterId',\n  nodeIP: '',\n  queries: {\n    Offset: 0,\n    Limit: 10,\n    DisplayStrategy: '',\n    OrderBy: {},\n    Order: {},\n    InstanceIds: [],\n    ProjectId: -1,\n    OrderField: '',\n    Asc: '',\n  },\n};\n","import _ from 'lodash';\nconst namespace = 'QCE/PCX';\n\nconst PCXFields = {\n  limit: 20,\n  offset: 0,\n  peeringConnectionId: '',\n  peeringConnectionName: '',\n  vpcId: '',\n  state: undefined,\n};\n\nconst PCX_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'peeringConnectionId',\n  queries: { ...PCXFields },\n};\n\nconst StateTypes = [\n  { text: '申请中', value: 0 },\n  { text: '连接成功', value: 1 },\n  { text: '已过期', value: 2 },\n  { text: '对端已拒绝', value: 3 },\n  { text: '对端已删除', value: 4 },\n];\n\nconst PCXFieldsDescriptor = [\n  {\n    key: 'offset',\n    enDescriptor: 'offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'limit',\n    enDescriptor: 'limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为50',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 50,\n  },\n  {\n    key: 'peeringConnectionId',\n    enDescriptor: 'PeeringConnection Id',\n    cnDescriptor: '私有网络对等连接 ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'peeringConnectionName',\n    enDescriptor: 'PeeringConnection Name',\n    cnDescriptor: '对等连接名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'vpcId',\n    enDescriptor: 'vpcId',\n    cnDescriptor: '发起方私有网络 ID 值',\n    link: 'https://cloud.tencent.com/document/api/215/1372',\n    type: 'dropdown',\n  },\n  {\n    key: 'state',\n    enDescriptor: 'state',\n    cnDescriptor: '连接状态',\n    link: '',\n    type: 'select',\n    list: StateTypes,\n  },\n];\n\nconst PCXInstanceAliasList = ['peeringConnectionId', 'peeringConnectionName'];\n\nconst templateQueryIdMap = {\n  instance: 'peeringConnectionId',\n};\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.limit = _.get(queries, 'limit', 20) || 20;\n    params.offset = _.get(queries, 'offset', 0) || 0;\n    queries = _.omit(queries, ['offset', 'limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\nexport default PCX_STATE;\n\nexport {\n  PCXInstanceAliasList,\n  PCXFieldsDescriptor,\n  templateQueryIdMap,\n  namespace,\n  GetInstanceQueryParams as PCXGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nconst BillingMode = [\n  { text: '按量计费', value: 'postpaid' },\n  { text: '包年包月', value: 'prepaid' },\n];\n\nconst AutoRenew = [\n  { text: '手动续费', value: 0 },\n  { text: '自动续费', value: 1 },\n  { text: '明确不自动续费', value: 2 },\n];\n\nconst Status = [\n  { text: '待初始化', value: 0 },\n  { text: '流程执行中', value: 1 },\n  { text: '运行中', value: 2 },\n  { text: '已隔离', value: -2 },\n  { text: '待删除', value: -3 },\n];\n\nconst TypeVersion = [\n  { text: '单机版', value: 1 },\n  { text: '主从版', value: 2 },\n  { text: '集群版', value: 3 },\n];\n\nconst OrderBy = [\n  { text: 'projectId', value: 'projectId' },\n  { text: 'instancename', value: 'instancename' },\n  { text: 'createtime', value: 'createtime' },\n  { text: 'type', value: 'type' },\n  { text: 'curDeadline', value: 'curDeadline' },\n];\n\nconst OrderType = [\n  { text: '升序', value: 0 },\n  { text: '降序', value: 1 },\n];\nconst Type = [\n  { text: 'Redis老集群版', value: 1 },\n  { text: 'Redis 2.8主从版', value: 2 },\n  { text: 'CKV主从版', value: 3 },\n  { text: 'CKV集群版', value: 4 },\n  { text: 'Redis 2.8单机版', value: 5 },\n  { text: 'Redis 4.0主从版', value: 6 },\n  { text: 'Redis 4.0集群版', value: 7 },\n  { text: 'Redis5.0主从版', value: 8 },\n  { text: 'Redis5.0集群版', value: 9 },\n];\n\nconst RedisFields = {\n  InstanceId: '',\n  OrderBy: '',\n  OrderType: null,\n  VpcIds: [],\n  SubnetIds: [],\n  ProjectIds: [],\n  SearchKey: '',\n  InstanceName: '',\n  UniqVpcIds: [],\n  UniqSubnetIds: [],\n  Status: [],\n  TypeVersion: null,\n  EngineName: '',\n  AutoRenew: null,\n  BillingMode: '',\n  Type: null,\n};\n\nconst RedisFieldsDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceId',\n    enDescriptor: 'InstancesId',\n    cnDescriptor: '实例id',\n    type: 'input',\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderBy,\n  },\n  {\n    key: 'OrderType',\n    enDescriptor: 'OrderType',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderType,\n  },\n  {\n    key: 'VpcIds',\n    enDescriptor: 'VpcIds',\n    cnDescriptor: '私有网络ID数组，数组下标从0开始，如果不传则默认选择基础网络，如：47525',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'SubnetIds',\n    enDescriptor: 'SubnetIds',\n    cnDescriptor: '子网ID数组，数组下标从0开始，如：56854',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'ProjectIds',\n    enDescriptor: 'ProjectIds',\n    cnDescriptor: '项目ID 组成的数组',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'SearchKey',\n    enDescriptor: 'SearchKey',\n    cnDescriptor: '查找实例的ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'InstanceName',\n    enDescriptor: 'InstanceName',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'UniqVpcIds',\n    enDescriptor: 'UniqVpcIds',\n    cnDescriptor: '私有网络ID数组，数组下标从0开始，如果不传则默认选择基础网络，如：vpc-sad23jfdfk',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'UniqSubnetIds',\n    enDescriptor: 'UniqSubnetIds',\n    cnDescriptor: '子网ID数组，数组下标从0开始，如：subnet-fdj24n34j2',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'Status',\n    enDescriptor: 'Status',\n    cnDescriptor: '实例状态',\n    multiple: true,\n    type: 'select',\n    list: Status,\n  },\n  {\n    key: 'TypeVersion',\n    enDescriptor: 'TypeVersion',\n    cnDescriptor: '类型版本',\n    link: '',\n    type: 'select',\n    list: TypeVersion,\n  },\n  {\n    key: 'EngineName',\n    enDescriptor: 'EngineName',\n    cnDescriptor: '引擎信息：Redis-2.8，Redis-4.0，CKV',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'AutoRenew',\n    enDescriptor: 'AutoRenew',\n    cnDescriptor: '续费模式',\n    multiple: true,\n    type: 'select',\n    list: AutoRenew,\n  },\n  {\n    key: 'BillingMode',\n    enDescriptor: 'BillingMode',\n    cnDescriptor: '计费模式：postpaid-按量计费；prepaid-包年包月',\n    link: '',\n    type: 'select',\n    list: BillingMode,\n  },\n  {\n    key: 'Type',\n    enDescriptor: 'Type',\n    cnDescriptor: '实例类型',\n    link: '',\n    type: 'select',\n    list: Type,\n  },\n];\n\nconst REDIS_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: { ...RedisFields },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        // select 单选\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\nfunction isValidMetric(metricObj: any = {}) {\n  const dimension = _.get(metricObj, 'Dimensions[0].Dimensions');\n  return dimension.length === 1 && _.indexOf(dimension, 'instanceid') !== -1;\n}\n\nconst REDISInstanceAliasList = ['InstanceId', 'InstanceName', 'WanIp'];\n\nconst RedisInvalidDemensions = {\n  redis_uuid: 'InstanceId',\n  instanceid: 'InstanceId',\n};\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\nexport default REDIS_STATE;\nexport {\n  RedisFieldsDescriptor,\n  RedisInvalidDemensions,\n  templateQueryIdMap,\n  REDISInstanceAliasList,\n  isValidMetric,\n  GetInstanceQueryParams as REDISGetInstanceQueryParams,\n};\n",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64 encoding strategy.\n\t     */\n\t    var Base64 = C_enc.Base64 = {\n\t        /**\n\t         * Converts a word array to a Base64 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Base64 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64 string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t         */\n\t        parse: function (base64Str) {\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                    reverseMap = this._reverseMap = [];\n\t                    for (var j = 0; j < map.length; j++) {\n\t                        reverseMap[map.charCodeAt(j)] = j;\n\t                    }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t      var words = [];\n\t      var nBytes = 0;\n\t      for (var i = 0; i < base64StrLength; i++) {\n\t          if (i % 4) {\n\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t              words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);\n\t              nBytes++;\n\t          }\n\t      }\n\t      return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64;\n\n}));","import _ from 'lodash';\nconst networkTypes = [\n  { text: 'BGP', value: 'BGP' },\n  { text: 'SINGLEISP', value: 'SINGLEISP' },\n  { text: 'ANYCAST', value: 'ANYCAST' },\n];\n\nconst chargeTypes = [\n  { text: 'top5计费', value: 'TOP5_POSTPAID_BY_MONTH' },\n  { text: '月95计费', value: 'PERCENT95_POSTPAID_BY_MONTH' },\n];\nconst BWPFilterFields = {\n  'bandwidth-package_id': [],\n  'bandwidth-package-name': [],\n  'network-type': [],\n  'charge-type': [],\n};\n\nconst BWPFilterFieldsDescriptor = [\n  {\n    key: 'bandwidth-package_id',\n    enDescriptor: 'BandwidthPackage Id',\n    cnDescriptor: '带宽包ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'bandwidth-package-name',\n    enDescriptor: 'BandwidthPackage Name',\n    cnDescriptor: '带宽包名称',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'network-type',\n    enDescriptor: 'network type',\n    cnDescriptor: '带宽包类型',\n    link: '',\n    type: 'select',\n    list: networkTypes,\n  },\n  {\n    key: 'charge-type',\n    enDescriptor: 'charge type',\n    cnDescriptor: '带宽包计费类型',\n    link: '',\n    type: 'select',\n    list: chargeTypes,\n  },\n];\n\nconst BWP_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'BandwidthPackageId',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    instanceIdsChecked: false,\n    filtersChecked: false,\n    BandwidthPackageIds: [''],\n    Filters: { ...BWPFilterFields },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    if (queries.instanceIdsChecked) {\n      if (_.isArray(queries.BandwidthPackageIds)) {\n        const BandwidthPackageIds = _.compact(queries.BandwidthPackageIds);\n        if (_.uniq(BandwidthPackageIds).length > 0) {\n          params.BandwidthPackageIds = _.uniq(BandwidthPackageIds).slice(0, 100);\n        }\n      }\n    } else if (queries.filtersChecked) {\n      const Filters: any[] = [];\n      _.forEach(queries.Filters, (item: any, key) => {\n        if (Filters.length > 9) {\n          return;\n        }\n        if (_.isArray(item)) {\n          item = _.compact(item);\n          if (item.length > 0) {\n            Filters.push({ Name: key, Values: _.uniq(item).slice(0, 5) });\n          }\n        } else if (_.isObject(item)) {\n          if (!_.isEmpty(_.get(item, 'value', []))) {\n            Filters.push({ Name: key, Values: _.get(item, 'value', []).slice(0, 5) });\n          }\n        }\n      });\n      if (Filters.length > 0) {\n        params.Filters = Filters;\n      }\n    }\n  }\n  return params;\n}\n\nconst BWPInstanceAliasList = ['BandwidthPackageId', 'BandwidthPackageName'];\n\nconst templateQueryIdMap = {\n  instance: 'BandwidthPackageId',\n};\n\nconst BWPInvalidDemensions = {\n  bandwidthPackageId: 'BandwidthPackageId',\n};\nexport default BWP_STATE;\nexport {\n  BWPFilterFieldsDescriptor,\n  templateQueryIdMap,\n  BWPInstanceAliasList,\n  BWPInvalidDemensions,\n  GetInstanceQueryParams as BWPGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nconst CDNFilterFields = {\n  origin: [],\n  domain: [],\n  resourceId: [],\n  status: {},\n  serviceType: {},\n  projectId: [],\n  domainType: {},\n  fullUrlCache: {},\n  https: {},\n  originPullProtocol: {},\n  tagKey: [],\n};\n\nconst CDNFilterFieldsDescriptor = [\n  {\n    key: 'origin',\n    enDescriptor: 'origin',\n    cnDescriptor: '主源站',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'domain',\n    enDescriptor: 'domain',\n    cnDescriptor: '域名',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'resourceId',\n    enDescriptor: 'resourceId',\n    cnDescriptor: '域名id',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'status',\n    enDescriptor: 'status',\n    cnDescriptor: '域名状态',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'online', value: 'online' },\n      { text: 'offline', value: 'offline' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'serviceType',\n    enDescriptor: 'serviceType',\n    cnDescriptor: '业务类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'web', value: 'web' },\n      { text: 'download', value: 'download' },\n      { text: 'media', value: 'media' },\n    ],\n  },\n  {\n    key: 'projectId',\n    enDescriptor: 'projectId',\n    cnDescriptor: '项目ID',\n    link: '',\n    type: 'inputNumbermulti',\n  },\n  {\n    key: 'domainType',\n    enDescriptor: 'domainType',\n    cnDescriptor: '主源站类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '自有源', value: 'cname' },\n      { text: 'cos接入', value: 'cos' },\n    ],\n  },\n  {\n    key: 'fullUrlCache',\n    enDescriptor: 'fullUrlCache',\n    cnDescriptor: '全路径缓存',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '打开', value: 'on' },\n      { text: '关闭', value: 'off' },\n    ],\n  },\n  {\n    key: 'https',\n    enDescriptor: 'https',\n    cnDescriptor: '是否配置https',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'on', value: 'on' },\n      { text: 'off', value: 'off' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'originPullProtocol',\n    enDescriptor: 'originPullProtocol',\n    cnDescriptor: '回源协议类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'http', value: 'http' },\n      { text: 'follow', value: 'follow' },\n      { text: 'https', value: 'https' },\n    ],\n  },\n  {\n    key: 'tagKey',\n    enDescriptor: 'tagKey',\n    cnDescriptor: '标签键',\n    link: '',\n    type: 'inputmulti',\n  },\n];\n\nconst CDN_STATE = {\n  region: 'ap-guangzhou',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'Domain',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    Filters: { ...CDNFilterFields },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    const Filters: any[] = [];\n    _.forEach(queries.Filters, (item: any, key) => {\n      // console.log('item', item, queries);\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          Filters.push({ Name: key, Value: _.uniq(item).slice(0, 5) });\n        }\n      } else if (_.isObject(item)) {\n        if (!_.isEmpty(_.get(item, 'value', []))) {\n          Filters.push({ Name: key, Value: _.get(item, 'value', []).slice(0, 5) });\n        }\n      }\n    });\n    if (Filters.length > 0) {\n      params.Filters = Filters;\n    }\n  }\n  return params;\n}\n\nconst CDNInstanceAliasList = ['Domain', 'ProjectId'];\n\nconst CDNInvalidDemensions = {\n  projectId: 'ProjectId',\n  domain: 'Domain',\n};\nconst templateQueryIdMap = {\n  instance: 'Domain',\n};\nexport default CDN_STATE;\nexport {\n  CDNFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CDNInstanceAliasList,\n  CDNInvalidDemensions,\n  GetInstanceQueryParams as CDNGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\n// export const LBQueryDescriptor = [{\n//   key: 'Offset',\n//   enDescriptor: 'Offset',\n//   cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n//   link: '',\n//   type: 'inputnumber',\n//   min: 0,\n// },\n// {\n//   key: 'Limit',\n//   enDescriptor: 'Limit',\n//   cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为2000',\n//   link: '',\n//   type: 'inputnumber',\n//   min: 1,\n//   max: 2000,\n// },\n// {\n//   key: 'AddressId',\n//   enDescriptor: 'Address Id',\n//   cnDescriptor: '标识 EIP 的唯一 ID ',\n//   link: '',\n//   type: 'inputmulti',\n// }\n// ];\n\nexport const LBFilterDescriptor = [\n  {\n    key: 'address-id',\n    enDescriptor: 'Address ID',\n    cnDescriptor: 'EIP 的唯一 ID ',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'address-name',\n    enDescriptor: 'Address Name',\n    cnDescriptor: 'EIP 名称 ',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'address-ip',\n    enDescriptor: 'Address IP',\n    cnDescriptor: 'EIP 的 IP 地址 ',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'address-status',\n    enDescriptor: 'Address Status',\n    cnDescriptor: 'EIP 的状态',\n    link: '',\n    type: 'select',\n    list: [\n      { value: 'CREATING', text: 'CREATING' },\n      { value: 'BINDING', text: 'BINDING' },\n      { value: 'BIND', text: 'BIND' },\n      { value: 'UNBINDING', text: 'UNBINDING' },\n      { value: 'UNBIND', text: 'UNBIND' },\n      { value: 'OFFLINING', text: 'OFFLINING' },\n      { value: 'BIND_ENI', text: 'BIND_ENI' },\n    ],\n  },\n  {\n    key: 'instance-id',\n    enDescriptor: 'Instance ID',\n    cnDescriptor: '实例ID ',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'private-ip-address',\n    enDescriptor: 'Private IP Address',\n    cnDescriptor: 'EIP 绑定的内网 IP',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'network-interface-id',\n    enDescriptor: 'Network Interface ID',\n    cnDescriptor: 'EIP 绑定的弹性网卡 ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'is-arrears',\n    enDescriptor: 'Arrears',\n    cnDescriptor: 'EIP 是否欠费 ',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '正常', value: 'FALSE' },\n      { text: '欠费', value: 'TRUE' },\n    ],\n  },\n];\n\n// const LBFilterFields = {\n//   \"address-id\": [],\n//   \"address-name\": [],\n//   \"address-ip\": [],\n//   \"address-status \": [],\n//   \"instance-id \": [],\n//   \"private-ip-address\": [],\n//   \"network-interface-id \": [],\n//   \"is-arrears \": [],\n// };\n\nconst InstanceKey = 'AddressIds';\nconst LB_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'AddressId',\n  version: '',\n  queries: {\n    Offset: 0,\n    Limit: 20,\n    [InstanceKey]: [''],\n    Filters: {\n      'address-id': [],\n      'address-name': [],\n      'address-ip': [],\n      'address-status ': [],\n      'instance-id ': [],\n      'private-ip-address': [],\n      'network-interface-id ': [],\n      'is-arrears ': [],\n    },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    if (queries.instanceIdsChecked) {\n      if (_.isArray(queries[InstanceKey])) {\n        const InstanceIds = _.compact(queries[InstanceKey]);\n        if (_.uniq(InstanceIds).length > 0) {\n          params[InstanceKey] = _.uniq(InstanceIds).slice(0, 100);\n        }\n      }\n    } else if (queries.filtersChecked) {\n      const Filters: any[] = [];\n      _.forEach(queries.Filters, (item: any, key) => {\n        if (Filters.length > 9) {\n          return;\n        }\n        if (_.isArray(item)) {\n          item = _.compact(item);\n          if (item.length > 0) {\n            Filters.push({ Name: key, Values: _.uniq(item).slice(0, 5) });\n          }\n        } else if (_.isObject(item)) {\n          if (!_.isEmpty(_.get(item, 'value', []))) {\n            Filters.push({ Name: key, Values: _.get(item, 'value', []).slice(0, 5) });\n          }\n        }\n      });\n      if (Filters.length > 0) {\n        params.Filters = Filters;\n      }\n    }\n  }\n  return params;\n}\n\nconst LBInstanceAliasList = ['AddressId', 'AddressName', 'AddressIp'];\n\n// 维度eip对应于实例中的哪个字段？映射\nconst LBInvalidDemensions = {\n  eip: 'AddressIp',\n};\n\nconst templateQueryIdMap = {\n  instance: 'AddressId',\n};\n// 从monitor维度到LB实例对应字段的映射\n// export const metric2Instance = {\n//   functionName: 'FunctionName',\n//   namespace: 'Namespace'\n// };\n\nexport default LB_STATE;\nexport {\n  LBInstanceAliasList,\n  LBInvalidDemensions,\n  templateQueryIdMap,\n  GetInstanceQueryParams as LBGetInstanceQueryParams,\n};\n\n// monitor监控数据默认支持的维度\n// export const LBDefaultDimensionList = ['functionName', 'namespace', 'version'];\n","import _ from 'lodash';\nconst InstanceTypes = [\n  { text: '所有实例', value: 0 },\n  { text: '正式实例', value: 1 },\n  { text: '临时实例', value: 2 },\n  { text: '只读实例', value: 3 },\n  { text: '正式，只读，灾备实例', value: -1 },\n];\n\nconst ClusterTypes = [\n  { text: '副本集实例', value: 0 },\n  { text: '分片实例', value: 1 },\n  { text: '所有实例', value: -1 },\n];\n\nconst Status = [\n  { text: '待初始化', value: 0 },\n  { text: '流程执行中', value: 1 },\n  { text: '实例有效', value: 2 },\n  { text: '实例已过期', value: -2 },\n];\n\nconst PayMode = [\n  { text: '按量计费', value: 0 },\n  { text: '包年包月', value: 1 },\n  { text: '按量包年包月计费', value: -1 },\n];\n\nconst OrderBy = [\n  { text: 'ProjectId', value: 'ProjectId' },\n  { text: 'InstanceName', value: 'InstanceName' },\n  { text: 'CreateTime', value: 'CreateTime' },\n];\n\nconst OrderByType = [\n  { text: '升序', value: 'ASC' },\n  { text: '降序', value: 'DESC' },\n];\n\nconst MongoDBFields = {\n  InstanceIds: [],\n  InstanceType: {},\n  ClusterType: {},\n  Status: [],\n  VpcId: '',\n  SubnetId: '',\n  PayMode: {},\n  Limit: 20,\n  Offset: 0,\n  OrderBy: '',\n  OrderByType: '',\n};\n\nconst MONGODBFieldsDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceIds',\n    enDescriptor: 'InstancesIds',\n    cnDescriptor: '实例名称',\n    type: 'inputmulti',\n  },\n  {\n    key: 'InstanceType',\n    enDescriptor: 'InstanceType',\n    cnDescriptor: '实例类型',\n    link: '',\n    type: 'select',\n    list: InstanceTypes,\n  },\n  {\n    key: 'ClusterType',\n    enDescriptor: 'ClusterType',\n    cnDescriptor: '集群类型',\n    link: '',\n    type: 'select',\n    list: ClusterTypes,\n  },\n  {\n    key: 'Status',\n    enDescriptor: 'Status',\n    cnDescriptor: '实例状态',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: Status,\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'VpcId',\n    cnDescriptor: '私有网络的ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SubnetId',\n    enDescriptor: 'SubnetId',\n    cnDescriptor: '私有网络的子网ID，基础网络则不传该参数。入参设置该参数的同时，必须设置相应的VpcId',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'PayMode',\n    enDescriptor: 'PayMode',\n    cnDescriptor: '付费类型',\n    link: '',\n    type: 'select',\n    list: PayMode,\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderBy,\n  },\n  {\n    key: 'OrderByType',\n    enDescriptor: 'OrderByType',\n    cnDescriptor: '排序方式',\n    link: '',\n    type: 'select',\n    list: OrderByType,\n  },\n];\n\nconst MONGODB_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: { ...MongoDBFields },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        // select 单选\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\nconst MONGODBInstanceAliasList = ['InstanceId', 'InstanceName'];\n\nconst MONGODBInvalidDemensions = {\n  target: 'InstanceId',\n};\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\nexport default MONGODB_STATE;\nexport {\n  MONGODBFieldsDescriptor,\n  MONGODBInvalidDemensions,\n  MONGODBInstanceAliasList,\n  templateQueryIdMap,\n  GetInstanceQueryParams as MONGODBGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\nconst NATGATEWAYInstanceAliasList = ['NatGatewayId', 'NatGatewayName'];\n\nconst NATGatewayFilterFields = {\n  'nat-gateway-id': [],\n  'nat-gateway-name': [],\n  'vpc-id': [],\n};\n\nconst NATGatewayFilterFieldsDescriptor = [\n  {\n    key: 'nat-gateway-id',\n    enDescriptor: 'NatGateway ID',\n    cnDescriptor: 'NAT网关统一 ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'nat-gateway-name',\n    enDescriptor: 'NatGateway Name',\n    cnDescriptor: 'NatGateway Name',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'VPC ID',\n    cnDescriptor: '私有网络 ID',\n    link: '',\n    type: 'inputmulti',\n  },\n];\n\nconst NATGATEWAY_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'NatGatewayId',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    instanceIdsChecked: false,\n    filtersChecked: false,\n    NatGatewayIds: [''],\n    Filters: { ...NATGatewayFilterFields },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    if (queries.instanceIdsChecked) {\n      if (_.isArray(queries.NatGatewayIds)) {\n        const NatGatewayIds = _.compact(queries.NatGatewayIds);\n        if (_.uniq(NatGatewayIds).length > 0) {\n          params.InstanceIds = _.uniq(NatGatewayIds).slice(0, 100);\n        }\n      }\n    } else if (queries.filtersChecked) {\n      const Filters: any[] = [];\n      _.forEach(queries.Filters, (item: any, key) => {\n        if (Filters.length > 9) {\n          return;\n        }\n        if (_.isArray(item)) {\n          item = _.compact(item);\n          if (item.length > 0) {\n            Filters.push({ Name: key, Values: _.uniq(item).slice(0, 5) });\n          }\n        } else if (_.isObject(item)) {\n          if (!_.isEmpty(_.get(item, 'value', []))) {\n            Filters.push({ Name: key, Values: _.get(item, 'value', []).slice(0, 5) });\n          }\n        }\n      });\n      if (Filters.length > 0) {\n        params.Filters = Filters;\n      }\n    }\n  }\n  return params;\n}\n\nconst templateQueryIdMap = {\n  instance: 'NatGatewayId',\n};\n\nconst NATInvalidDemensions = {\n  natId: 'NatGatewayId',\n};\n\nexport default NATGATEWAY_STATE;\nexport {\n  NATGatewayFilterFieldsDescriptor,\n  NATGATEWAYInstanceAliasList,\n  templateQueryIdMap,\n  NATInvalidDemensions,\n  GetInstanceQueryParams as NATGATEWAYGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nconst CDNFilterFields = {\n  origin: [],\n  domain: [],\n  resourceId: [],\n  status: [],\n  serviceType: [],\n  projectId: [],\n  domainType: [],\n  fullUrlCache: [],\n  https: [],\n  originPullProtocol: [],\n  tagKey: [],\n};\n\nconst OVCDNFilterFieldsDescriptor = [\n  {\n    key: 'origin',\n    enDescriptor: 'origin',\n    cnDescriptor: '主源站',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'domain',\n    enDescriptor: 'domain',\n    cnDescriptor: '域名',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'resourceId',\n    enDescriptor: 'resourceId',\n    cnDescriptor: '域名id',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'status',\n    enDescriptor: 'status',\n    cnDescriptor: '域名状态',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'online', value: 'online' },\n      { text: 'offline', value: 'offline' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'serviceType',\n    enDescriptor: 'serviceType',\n    cnDescriptor: '业务类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'web', value: 'web' },\n      { text: 'download', value: 'download' },\n      { text: 'media', value: 'media' },\n    ],\n  },\n  {\n    key: 'projectId',\n    enDescriptor: 'projectId',\n    cnDescriptor: '项目ID',\n    link: '',\n    type: 'inputNumbermulti',\n  },\n  {\n    key: 'domainType',\n    enDescriptor: 'domainType',\n    cnDescriptor: '主源站类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '自有源', value: 'cname' },\n      { text: 'cos接入', value: 'cos' },\n    ],\n  },\n  {\n    key: 'fullUrlCache',\n    enDescriptor: 'fullUrlCache',\n    cnDescriptor: '全路径缓存',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '打开', value: 'on' },\n      { text: '关闭', value: 'off' },\n    ],\n  },\n  {\n    key: 'https',\n    enDescriptor: 'https',\n    cnDescriptor: '是否配置https',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'on', value: 'on' },\n      { text: 'off', value: 'off' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'originPullProtocol',\n    enDescriptor: 'originPullProtocol',\n    cnDescriptor: '回源协议类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'http', value: 'http' },\n      { text: 'follow', value: 'follow' },\n      { text: 'https', value: 'https' },\n    ],\n  },\n  {\n    key: 'tagKey',\n    enDescriptor: 'tagKey',\n    cnDescriptor: '标签键',\n    link: '',\n    type: 'inputmulti',\n  },\n];\n\nconst OVCDN_STATE = {\n  region: 'ap-guangzhou',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'Domain',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    Filters: { ...CDNFilterFields },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    const Filters: any[] = [];\n    _.forEach(queries.Filters, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          Filters.push({ Name: key, Value: _.uniq(item).slice(0, 5) });\n        }\n      } else if (_.isObject(item)) {\n        if (!_.isEmpty(_.get(item, 'value', []))) {\n          Filters.push({ Name: key, Value: _.get(item, 'value', []).slice(0, 5) });\n        }\n      }\n    });\n    if (Filters.length > 0) {\n      params.Filters = Filters;\n    }\n  }\n  return params;\n}\n\nconst OVCDNInstanceAliasList = ['Domain', 'ResourceId'];\n\nconst OVCDNInvalidDemensions = {\n  projectId: 'ProjectId',\n  domain: 'Domain',\n};\nconst templateQueryIdMap = {\n  instance: 'Domain',\n};\nexport default OVCDN_STATE;\nexport {\n  OVCDNFilterFieldsDescriptor,\n  OVCDNInstanceAliasList,\n  templateQueryIdMap,\n  OVCDNInvalidDemensions,\n  GetInstanceQueryParams as OVCDNGetInstanceQueryParams,\n};\n",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha1\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha1\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var MD5 = C_algo.MD5;\n\n\t    /**\n\t     * This key derivation function is meant to conform with EVP_BytesToKey.\n\t     * www.openssl.org/docs/crypto/EVP_BytesToKey.html\n\t     */\n\t    var EvpKDF = C_algo.EvpKDF = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hash algorithm to use. Default: MD5\n\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: MD5,\n\t            iterations: 1\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create();\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Derives a key from a password.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init hasher\n\t            var hasher = cfg.hasher.create();\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                if (block) {\n\t                    hasher.update(block);\n\t                }\n\t                var block = hasher.update(password).finalize(salt);\n\t                hasher.reset();\n\n\t                // Iterations\n\t                for (var i = 1; i < iterations; i++) {\n\t                    block = hasher.finalize(block);\n\t                    hasher.reset();\n\t                }\n\n\t                derivedKey.concat(block);\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Derives a key from a password.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.EvpKDF(password, salt);\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.EvpKDF = function (password, salt, cfg) {\n\t        return EvpKDF.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.EvpKDF;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var T = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        for (var i = 0; i < 64; i++) {\n\t            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n\t        }\n\t    }());\n\n\t    /**\n\t     * MD5 hash algorithm.\n\t     */\n\t    var MD5 = C_algo.MD5 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var M_offset_0  = M[offset + 0];\n\t            var M_offset_1  = M[offset + 1];\n\t            var M_offset_2  = M[offset + 2];\n\t            var M_offset_3  = M[offset + 3];\n\t            var M_offset_4  = M[offset + 4];\n\t            var M_offset_5  = M[offset + 5];\n\t            var M_offset_6  = M[offset + 6];\n\t            var M_offset_7  = M[offset + 7];\n\t            var M_offset_8  = M[offset + 8];\n\t            var M_offset_9  = M[offset + 9];\n\t            var M_offset_10 = M[offset + 10];\n\t            var M_offset_11 = M[offset + 11];\n\t            var M_offset_12 = M[offset + 12];\n\t            var M_offset_13 = M[offset + 13];\n\t            var M_offset_14 = M[offset + 14];\n\t            var M_offset_15 = M[offset + 15];\n\n\t            // Working varialbes\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\n\t            // Computation\n\t            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);\n\t            d = FF(d, a, b, c, M_offset_1,  12, T[1]);\n\t            c = FF(c, d, a, b, M_offset_2,  17, T[2]);\n\t            b = FF(b, c, d, a, M_offset_3,  22, T[3]);\n\t            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);\n\t            d = FF(d, a, b, c, M_offset_5,  12, T[5]);\n\t            c = FF(c, d, a, b, M_offset_6,  17, T[6]);\n\t            b = FF(b, c, d, a, M_offset_7,  22, T[7]);\n\t            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);\n\t            d = FF(d, a, b, c, M_offset_9,  12, T[9]);\n\t            c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n\t            b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n\t            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);\n\t            d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n\t            c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n\t            b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n\t            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);\n\t            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);\n\t            c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n\t            b = GG(b, c, d, a, M_offset_0,  20, T[19]);\n\t            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);\n\t            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);\n\t            c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n\t            b = GG(b, c, d, a, M_offset_4,  20, T[23]);\n\t            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);\n\t            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);\n\t            c = GG(c, d, a, b, M_offset_3,  14, T[26]);\n\t            b = GG(b, c, d, a, M_offset_8,  20, T[27]);\n\t            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);\n\t            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);\n\t            c = GG(c, d, a, b, M_offset_7,  14, T[30]);\n\t            b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n\t            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);\n\t            d = HH(d, a, b, c, M_offset_8,  11, T[33]);\n\t            c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n\t            b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n\t            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);\n\t            d = HH(d, a, b, c, M_offset_4,  11, T[37]);\n\t            c = HH(c, d, a, b, M_offset_7,  16, T[38]);\n\t            b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n\t            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);\n\t            d = HH(d, a, b, c, M_offset_0,  11, T[41]);\n\t            c = HH(c, d, a, b, M_offset_3,  16, T[42]);\n\t            b = HH(b, c, d, a, M_offset_6,  23, T[43]);\n\t            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);\n\t            d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n\t            c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n\t            b = HH(b, c, d, a, M_offset_2,  23, T[47]);\n\n\t            a = II(a, b, c, d, M_offset_0,  6,  T[48]);\n\t            d = II(d, a, b, c, M_offset_7,  10, T[49]);\n\t            c = II(c, d, a, b, M_offset_14, 15, T[50]);\n\t            b = II(b, c, d, a, M_offset_5,  21, T[51]);\n\t            a = II(a, b, c, d, M_offset_12, 6,  T[52]);\n\t            d = II(d, a, b, c, M_offset_3,  10, T[53]);\n\t            c = II(c, d, a, b, M_offset_10, 15, T[54]);\n\t            b = II(b, c, d, a, M_offset_1,  21, T[55]);\n\t            a = II(a, b, c, d, M_offset_8,  6,  T[56]);\n\t            d = II(d, a, b, c, M_offset_15, 10, T[57]);\n\t            c = II(c, d, a, b, M_offset_6,  15, T[58]);\n\t            b = II(b, c, d, a, M_offset_13, 21, T[59]);\n\t            a = II(a, b, c, d, M_offset_4,  6,  T[60]);\n\t            d = II(d, a, b, c, M_offset_11, 10, T[61]);\n\t            c = II(c, d, a, b, M_offset_2,  15, T[62]);\n\t            b = II(b, c, d, a, M_offset_9,  21, T[63]);\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\n\t            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n\t            var nBitsTotalL = nBitsTotal;\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n\t                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)\n\t            );\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)\n\t            );\n\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    function FF(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & c) | (~b & d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function GG(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & d) | (c & ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function HH(a, b, c, d, x, s, t) {\n\t        var n = a + (b ^ c ^ d) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function II(a, b, c, d, x, s, t) {\n\t        var n = a + (c ^ (b | ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.MD5('message');\n\t     *     var hash = CryptoJS.MD5(wordArray);\n\t     */\n\t    C.MD5 = Hasher._createHelper(MD5);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacMD5(message, key);\n\t     */\n\t    C.HmacMD5 = Hasher._createHmacHelper(MD5);\n\t}(Math));\n\n\n\treturn CryptoJS.MD5;\n\n}));","module.exports = __WEBPACK_EXTERNAL_MODULE__61__;","module.exports = __WEBPACK_EXTERNAL_MODULE__62__;",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var X32WordArray = C_lib.WordArray;\n\n\t    /**\n\t     * x64 namespace.\n\t     */\n\t    var C_x64 = C.x64 = {};\n\n\t    /**\n\t     * A 64-bit word.\n\t     */\n\t    var X64Word = C_x64.Word = Base.extend({\n\t        /**\n\t         * Initializes a newly created 64-bit word.\n\t         *\n\t         * @param {number} high The high 32 bits.\n\t         * @param {number} low The low 32 bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);\n\t         */\n\t        init: function (high, low) {\n\t            this.high = high;\n\t            this.low = low;\n\t        }\n\n\t        /**\n\t         * Bitwise NOTs this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after negating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var negated = x64Word.not();\n\t         */\n\t        // not: function () {\n\t            // var high = ~this.high;\n\t            // var low = ~this.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise ANDs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to AND with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after ANDing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var anded = x64Word.and(anotherX64Word);\n\t         */\n\t        // and: function (word) {\n\t            // var high = this.high & word.high;\n\t            // var low = this.low & word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise ORs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to OR with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after ORing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var ored = x64Word.or(anotherX64Word);\n\t         */\n\t        // or: function (word) {\n\t            // var high = this.high | word.high;\n\t            // var low = this.low | word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise XORs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to XOR with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after XORing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var xored = x64Word.xor(anotherX64Word);\n\t         */\n\t        // xor: function (word) {\n\t            // var high = this.high ^ word.high;\n\t            // var low = this.low ^ word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Shifts this word n bits to the left.\n\t         *\n\t         * @param {number} n The number of bits to shift.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after shifting.\n\t         *\n\t         * @example\n\t         *\n\t         *     var shifted = x64Word.shiftL(25);\n\t         */\n\t        // shiftL: function (n) {\n\t            // if (n < 32) {\n\t                // var high = (this.high << n) | (this.low >>> (32 - n));\n\t                // var low = this.low << n;\n\t            // } else {\n\t                // var high = this.low << (n - 32);\n\t                // var low = 0;\n\t            // }\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Shifts this word n bits to the right.\n\t         *\n\t         * @param {number} n The number of bits to shift.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after shifting.\n\t         *\n\t         * @example\n\t         *\n\t         *     var shifted = x64Word.shiftR(7);\n\t         */\n\t        // shiftR: function (n) {\n\t            // if (n < 32) {\n\t                // var low = (this.low >>> n) | (this.high << (32 - n));\n\t                // var high = this.high >>> n;\n\t            // } else {\n\t                // var low = this.high >>> (n - 32);\n\t                // var high = 0;\n\t            // }\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Rotates this word n bits to the left.\n\t         *\n\t         * @param {number} n The number of bits to rotate.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after rotating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var rotated = x64Word.rotL(25);\n\t         */\n\t        // rotL: function (n) {\n\t            // return this.shiftL(n).or(this.shiftR(64 - n));\n\t        // },\n\n\t        /**\n\t         * Rotates this word n bits to the right.\n\t         *\n\t         * @param {number} n The number of bits to rotate.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after rotating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var rotated = x64Word.rotR(7);\n\t         */\n\t        // rotR: function (n) {\n\t            // return this.shiftR(n).or(this.shiftL(64 - n));\n\t        // },\n\n\t        /**\n\t         * Adds this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to add with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after adding.\n\t         *\n\t         * @example\n\t         *\n\t         *     var added = x64Word.add(anotherX64Word);\n\t         */\n\t        // add: function (word) {\n\t            // var low = (this.low + word.low) | 0;\n\t            // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;\n\t            // var high = (this.high + word.high + carry) | 0;\n\n\t            // return X64Word.create(high, low);\n\t        // }\n\t    });\n\n\t    /**\n\t     * An array of 64-bit words.\n\t     *\n\t     * @property {Array} words The array of CryptoJS.x64.Word objects.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var X64WordArray = C_x64.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create();\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t         *     ]);\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t         *     ], 10);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 8;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this 64-bit word array to a 32-bit word array.\n\t         *\n\t         * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var x32WordArray = x64WordArray.toX32();\n\t         */\n\t        toX32: function () {\n\t            // Shortcuts\n\t            var x64Words = this.words;\n\t            var x64WordsLength = x64Words.length;\n\n\t            // Convert\n\t            var x32Words = [];\n\t            for (var i = 0; i < x64WordsLength; i++) {\n\t                var x64Word = x64Words[i];\n\t                x32Words.push(x64Word.high);\n\t                x32Words.push(x64Word.low);\n\t            }\n\n\t            return X32WordArray.create(x32Words, this.sigBytes);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {X64WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = x64WordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\n\t            // Clone \"words\" array\n\t            var words = clone.words = this.words.slice(0);\n\n\t            // Clone each X64Word object\n\t            var wordsLength = words.length;\n\t            for (var i = 0; i < wordsLength; i++) {\n\t                words[i] = words[i].clone();\n\t            }\n\n\t            return clone;\n\t        }\n\t    });\n\t}());\n\n\n\treturn CryptoJS;\n\n}));","import {\n  APIGATEWAYInstanceAliasList,\n  APIGATEWAYInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  regionSupported,\n  keyInStorage,\n  queryMonitorExtraConfg,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = APIGATEWAYInstanceAliasList;\n  InvalidDimensions = APIGATEWAYInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'apigateway',\n    action: 'DescribeServicesStatus',\n    responseField: 'ServiceSet',\n  };\n\n  keyInStorage = keyInStorage;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // getFilterDropdown({ field }) {\n  //   return super.getRegions();\n  // }\n  getRegions() {\n    return Promise.resolve(regionSupported);\n  }\n  async getEnvironmentNameList(params: any) {\n    const { region, instanceId } = params;\n    const serviceInfo = GetServiceAPIInfo(region, this.service);\n\n    // 从分页数据，获取全量数据\n    const res = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action: 'DescribeServiceEnvironmentList' }\n        );\n      },\n      {\n        ServiceId: instanceId,\n      },\n      'EnvironmentList'\n    );\n    const [rs] = res;\n    return rs;\n  }\n  async fetchMetricData(action: string, region: string, instance: any) {\n    // console.log({ action, region, instance });\n    if (action === 'DescribeServiceEnvironmentList') {\n      const rs = await this.getEnvironmentNameList({ region, instanceId: instance[this.templateQueryIdMap.instance] });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[this.templateQueryIdMap.environmentName];\n        return {\n          text: o[this.templateQueryIdMap.environmentName],\n          value: o[this.templateQueryIdMap.environmentName],\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage.environmentList, rs);\n      return result;\n    }\n    return [];\n  }\n}\n","import {\n  BMINTRALBInstanceAliasList,\n  BMINTRALBInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  isValidMetric,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = BMINTRALBInstanceAliasList;\n  InvalidDimensions = BMINTRALBInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'bmlb',\n    action: 'DescribeLoadBalancers',\n    responseField: 'LoadBalancerSet',\n    interceptor: {\n      request: (params) => ({\n        ...params,\n        LoadBalancerType: 'internal',\n      }), // 设置一些请求参数的 默认值\n    },\n  };\n  RegionMap = {};\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // 重写getRegion\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/bm',\n      },\n      'bm',\n      { action: 'DescribeRegions', region: 'ap-guangzhou' }\n    ).then((response) => {\n      // 缓存，后面获取可用区zone\n      this.RegionMap = _.keyBy(response.RegionInfoSet, 'Region');\n      return _.map(response.RegionInfoSet || [], (item) => {\n        return {\n          text: item.RegionDescription,\n          value: item.Region,\n        };\n      });\n    });\n  }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        if (isValidMetric(item)) {\n          return item;\n        }\n        return null;\n      })\n    );\n  }\n}\n","import { BMLBInstanceAliasList, CPMInvalidDemensions, namespace, templateQueryIdMap, isValidMetric } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = BMLBInstanceAliasList;\n  InvalidDimensions = CPMInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'bmlb',\n    action: 'DescribeLoadBalancers',\n    responseField: 'LoadBalancerSet',\n    interceptor: {\n      request: (params) => ({\n        ...params,\n        LoadBalancerType: 'open',\n      }), // 设置一些请求参数的 默认值\n    },\n  };\n  RegionMap = {};\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        if (isValidMetric(item)) {\n          return item;\n        }\n        return null;\n      })\n    );\n  }\n  // 重写getRegion\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/bm',\n      },\n      'bm',\n      { action: 'DescribeRegions', region: 'ap-guangzhou' }\n    ).then((response) => {\n      // 缓存，后面获取可用区zone\n      this.RegionMap = _.keyBy(response.RegionInfoSet, 'Region');\n      return _.map(response.RegionInfoSet || [], (item) => {\n        return {\n          text: item.RegionDescription,\n          value: item.Region,\n        };\n      });\n    });\n  }\n}\n","import {\n  BMPCXInstanceAliasList,\n  BMPCXInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = BMPCXInstanceAliasList;\n  InvalidDimensions = BMPCXInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'bmvpc',\n    action: 'DescribeVpcPeerConnections',\n    responseField: 'VpcPeerConnectionSet',\n  };\n  MetricReqConfig = {\n    resultFilter: modifyDimensons,\n  };\n  RegionMap = {};\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // 重写getRegion\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/bm',\n      },\n      'bm',\n      { action: 'DescribeRegions', region: 'ap-guangzhou' }\n    ).then((response) => {\n      // 缓存，后面获取可用区zone\n      this.RegionMap = _.keyBy(response.RegionInfoSet, 'Region');\n      return _.map(response.RegionInfoSet || [], (item) => {\n        return {\n          text: item.RegionDescription,\n          value: item.Region,\n        };\n      });\n    });\n  }\n}\n","import { BWPInstanceAliasList, BWPInvalidDemensions } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class BWPDatasource extends BaseDatasource {\n  Namespace = 'QCE/BWP';\n  InstanceAliasList = BWPInstanceAliasList;\n  InvalidDimensions = BWPInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'BandwidthPackageId',\n  };\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeBandwidthPackages',\n    responseField: 'BandwidthPackageSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import { CBSInstanceAliasList, CBSInvalidDemensions, namespace, templateQueryIdMap, isValidMetric } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = CBSInstanceAliasList;\n  InvalidDimensions = CBSInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'cbs',\n    action: 'DescribeDisks',\n    responseField: 'DiskSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.filter(rawSet, isValidMetric);\n  }\n}\n","import _ from 'lodash';\nimport { CDBInstanceAliasList, CDBInvalidDemensions, isValidMetric, modifyDimensons } from './query_def';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class CDBDatasource extends BaseDatasource {\n  Namespace = 'QCE/CDB';\n  InstanceAliasList = CDBInstanceAliasList;\n  InvalidDimensions = CDBInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'InstanceId',\n  };\n  InstanceReqConfig = {\n    service: 'cdb',\n    action: 'DescribeDBInstances',\n    responseField: 'Items',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        if (isValidMetric(item)) {\n          return modifyDimensons(item);\n        }\n        return null;\n      })\n    );\n  }\n  /**\n   * 获取 可用区\n   * @param region 地域信息\n   */\n  getZones(region) {\n    const serviceInfo = GetServiceAPIInfo(region, 'cvm');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeZones' }\n    ).then((response) => {\n      return _.filter(\n        _.map(response.ZoneSet || [], (item) => {\n          return { text: item.ZoneName, value: item.ZoneId, ZoneState: item.ZoneState, Zone: item.Zone };\n        }),\n        (item) => item.ZoneState === 'AVAILABLE'\n      );\n    });\n  }\n}\n","import _ from 'lodash';\nimport { CDNInstanceAliasList, CDNInvalidDemensions } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class CDNDatasource extends BaseDatasource {\n  Namespace = 'QCE/CDN';\n  InstanceAliasList = CDNInstanceAliasList;\n  InvalidDimensions = CDNInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'Domain',\n  };\n  InstanceReqConfig = {\n    service: 'cdn',\n    action: 'DescribeDomains',\n    responseField: 'Domains',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async metricFindQuery(query: any, regex?: string) {\n    return super.metricFindQuery({ ...query, ...{ region: 'ap-guangzhou' } }, regex);\n  }\n}\n","import { CDNPROVINCEInstanceAliasList, CDNPROVINCEInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = CDNPROVINCEInstanceAliasList;\n  InvalidDimensions = CDNPROVINCEInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'cdn',\n    action: 'DescribeDomains',\n    responseField: 'Domains',\n  };\n  extrasAlias = ['isp', 'district'];\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // getFilterDropdown({ field }) {\n  //   return super.getRegions();\n  // }\n  async metricFindQuery(query: any, regex?: string) {\n    return super.metricFindQuery({ ...query, ...{ region: 'ap-guangzhou' } }, regex);\n  }\n  async getConsumerList(params: any) {\n    const { region, field } = params;\n    const serviceInfo = GetServiceAPIInfo(region, 'cdn');\n\n    // 从分页数据，获取全量数据\n    const rs = await this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: {\n          Name: field,\n        },\n      },\n      serviceInfo.service,\n      { action: 'DescribeMapInfo' }\n    );\n    return (rs.MapInfoList || []).map((o) => {\n      return {\n        text: o.Name,\n        value: o.Name,\n      };\n    });\n  }\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    if (action === 'DescribeMapInfo') {\n      const { name: field } = query;\n      const rs = await this.getConsumerList({ region, field });\n      return rs;\n    }\n    return [];\n  }\n}\n","import {\n  CEIPSUMMARYInstanceAliasList,\n  CEIPInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = CEIPSUMMARYInstanceAliasList;\n  InvalidDimensions = CEIPInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeAddresses',\n    responseField: 'AddressSet',\n    interceptor: {\n      request: (params) => {\n        const { Filters } = params;\n        if (!Filters) {\n          params.Filters = [];\n        }\n        params.Filters.push({\n          Name: 'address-type',\n          Values: ['AnycastEIP'],\n        });\n        return params;\n      }, // 设置一些请求参数的 默认值\n      // response: (data: unknown[]) =>[\n      //   {\n      //     AddressId: 'AddressId',\n      //     AddressIp: '111.22.3.4'\n      //   },\n      // ],\n    },\n  };\n  MetricReqConfig = {\n    resultFilter: modifyDimensons,\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  // async getInstances(region, params = {}) {\n  //   const rawSet = await super.getInstances(region, params);\n  //   return rawSet.filter((item) => item.AddressType === 'AnycastEIP');\n  // }\n\n  // async getVariableInstances(region, query = {}) {\n  //   const rawSet = await super.getVariableInstances(region, query);\n  //   return rawSet.filter((item) => item.AddressType === 'AnycastEIP');\n  // }\n}\n","import { CESInstanceAliasList, CESInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = CESInstanceAliasList;\n  InvalidDimensions = CESInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'es',\n    action: 'DescribeInstances',\n    responseField: 'InstanceList',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import _ from 'lodash';\nimport { BaseDatasource } from '../_base/datasource';\nimport { CFSInstanceAliasList, CFSInvalidDemensions, regionSupported } from './query_def';\n\nexport default class CFSDatasource extends BaseDatasource {\n  InstanceKey: string;\n  Namespace: string;\n  InstanceAliasList: string[];\n  InvalidDimensions: Record<string, string>;\n  templateQueryIdMap = {\n    instance: 'FileSystemId',\n  };\n  extrasAlias = ['version'];\n  InstanceReqConfig: { service?: string | undefined; action: string; responseField: string };\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n\n    this.Namespace = 'QCE/CFS';\n    this.InstanceAliasList = CFSInstanceAliasList;\n    this.InvalidDimensions = CFSInvalidDemensions;\n    this.InstanceReqConfig = {\n      service: 'cfs',\n      action: 'DescribeCfsFileSystems',\n      responseField: 'FileSystems',\n    };\n  }\n  getRegions() {\n    return Promise.resolve(regionSupported);\n  }\n}\n","import _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport { BaseDatasource } from '../_base/datasource';\nimport {\n  CKAFKAInstanceAliasList,\n  CKAFKATopicAliasList,\n  CKAFKAInvalidDemensions,\n  templateQueryIdMap,\n  keyInStorage,\n  queryMonitorExtraConfg,\n} from './query_def';\n\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class CKFKADatasource extends BaseDatasource {\n  Namespace = 'QCE/CKAFKA';\n  InstanceAliasList = CKAFKAInstanceAliasList;\n  TopicAliasList = CKAFKATopicAliasList;\n  InvalidDimensions = CKAFKAInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'ckafka',\n    action: 'DescribeInstances',\n    responseField: 'InstanceList',\n  };\n  extraMetricDims = ['topicId'];\n  extrasAlias = ['topicId', 'consumerGroup', 'partition'];\n  keyInStorage = keyInStorage;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getConsumerGroups(region, params) {\n    const serviceInfo = GetServiceAPIInfo(region, 'ckafka');\n\n    // 从分页数据，获取全量数据\n    const rs = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action: 'DescribeConsumerGroup' }\n        );\n      },\n      params,\n      ['GroupListForMonitor', 'TopicListForMonitor', 'PartitionListForMonitor']\n    );\n\n    let [GroupList, TopicList, PartitionList] = rs;\n    // 无重复数组\n    TopicList = _.uniqBy(TopicList, (item) => (item as any).TopicId);\n    GroupList = _.uniqBy(GroupList, (item) => (item as any).GroupName);\n    PartitionList = _.uniqBy(PartitionList, (item) => (item as any).Partition);\n    return {\n      TopicList,\n      GroupList,\n      PartitionList,\n    };\n    // return {\n    //   TopicList: TopicList.map((topic) => ({\n    //     text: topic.TopicId,\n    //     value: topic.TopicId, // 为了获取多维度的值，这里完全可以使用JSON.stringify()将整个对象放进去\n    //     TopicName: topic.TopicName,\n    //   })),\n    //   GroupList: GroupList.map((group) => ({\n    //     text: group.GroupName,\n    //     value: group.GroupName,\n    //   })),\n    //   PartitionList: PartitionList.map((par) => ({\n    //     text: par.Partition,\n    //     value: par.Partition,\n    //   })),\n    // };\n  }\n  formatTopicVarDisplay(topic: Record<string, any>, displayTpl: string | undefined, topicAlias: string) {\n    if (displayTpl) {\n      return displayTpl.replace(/\\$\\{(\\w+)\\}/g, (a, b) => {\n        if (!b || !this.TopicAliasList.includes(b)) {\n          return '';\n        }\n        return this.getAliasValue(topic, b);\n      });\n    }\n    return this.getAliasValue(topic, topicAlias);\n  }\n  // 查询指标下的数据\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    const result = await this.getConsumerGroups(region, {\n      InstanceId: instance.InstanceId,\n    });\n    const { display } = query;\n    const { TopicList, GroupList, PartitionList } = result;\n    let { topicalias } = query;\n    topicalias = this.TopicAliasList.includes(topicalias) ? topicalias : this.templateQueryIdMap.topicId;\n    // console.log({ TopicList, GroupList, PartitionList });\n    // const res1 = await instanceStorage.setExtraStorage(this.service, this.keyInStorage.TopicList, TopicList);\n    // const res2 = await instanceStorage.setExtraStorage(this.service, this.keyInStorage.GroupList, GroupList);\n    // const res3 = await instanceStorage.setExtraStorage(this.service, this.keyInStorage.PartitionList, PartitionList);\n    // console.log({ res1, res2, res3 });\n    const rs = {\n      TopicList: TopicList.map((topic) => {\n        const topicAlias = this.formatTopicVarDisplay(topic, display, topicalias);\n        topic._InstanceAliasValue = topicAlias || topic.TopicId;\n        return {\n          text: topicAlias || topic.TopicId,\n          value: topic[templateQueryIdMap.topicId], // 为了获取多维度的值，这里完全可以使用JSON.stringify()将整个对象放进去\n          TopicName: topic.TopicName,\n        };\n      }),\n      GroupList: GroupList.map((group) => {\n        group._InstanceAliasValue = group.GroupName;\n        return {\n          text: group.GroupName,\n          value: group[templateQueryIdMap.groupName],\n        };\n      }),\n      PartitionList: PartitionList.map((par) => {\n        par._InstanceAliasValue = par.Partition;\n        return {\n          text: par.Partition,\n          value: par[templateQueryIdMap.partition],\n        };\n      }),\n    };\n    await instanceStorage.setExtraStorage(this.service, this.keyInStorage.TopicList, TopicList);\n    await instanceStorage.setExtraStorage(this.service, this.keyInStorage.GroupList, GroupList);\n    await instanceStorage.setExtraStorage(this.service, this.keyInStorage.PartitionList, PartitionList);\n    // console.log({ res1, res2, res3 });\n    // console.log({rs});\n    // 根据action返回指定的维度数据列表\n    switch (action) {\n      case 'DescribeTopicList':\n        return rs.TopicList;\n      case 'DescribeGroup':\n        return rs.GroupList;\n      case 'DescribePartion':\n        return rs.PartitionList;\n      default:\n        return [];\n    }\n  }\n\n  // async getOtherAlias(datapoints) {\n  //   let dimension;\n  //   for(let j = 0; j < datapoints.Dimensions.length; j++){\n  //     if(datapoints.Dimensions[j] !== 'InstanceName'){\n  //       dimension.push(datapoints.Dimensions[j])\n  //     }\n  //   }\n  //   console.log(dimension);\n\n  //   return dimension\n  // }\n}\n","import {\n  InstanceAliasList,\n  LOADBALANCEListenerAliasList,\n  LOADBALANCEVALIDDIMENSIONS,\n  templateQueryIdMap,\n  keyInStorage,\n  queryMonitorExtraConfg,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class DCDatasource extends BaseDatasource {\n  // Namespace = namespace;\n  InstanceAliasList = InstanceAliasList;\n  ListenerAliasList = LOADBALANCEListenerAliasList;\n  // InvalidDimensions = LOADBALANCEVALIDDIMENSIONS;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  // InstanceReqConfig = {\n  //   service: 'clb',\n  //   action: 'DescribeLoadBalancers',\n  //   responseField: 'LoadBalancerSet',\n  // };\n  keyInStorage = keyInStorage;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // getFilterDropdown({ field }) {\n  //   return super.getRegions();\n  // }\n  getInvalidDimensions(selfIns: any) {\n    if (selfIns.service === 'lbPrivate') return { ...LOADBALANCEVALIDDIMENSIONS, vpcId: 'NumericalVpcId' };\n    return LOADBALANCEVALIDDIMENSIONS;\n  }\n  getInstanceReqConfig(selfIns: any) {\n    const res: any = {\n      service: 'clb',\n      action: 'DescribeLoadBalancers',\n      responseField: 'LoadBalancerSet',\n    };\n    if (selfIns.service === 'lbPrivate' || selfIns.service === 'loadBalance') {\n      res.interceptor = {\n        request: (param) => ({ ...param, LoadBalancerType: 'INTERNAL' }),\n      };\n    }\n    if (selfIns.service === 'lbPublic') {\n      res.interceptor = {\n        request: (param) => ({ ...param, LoadBalancerType: 'OPEN' }),\n      };\n    }\n    return res;\n  }\n  async getListenerList(params: any) {\n    const { region, instanceId } = params;\n    const serviceInfo = GetServiceAPIInfo(region, 'clb');\n\n    // 从分页数据，获取全量数据\n    const res = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action: 'DescribeListeners' }\n        );\n      },\n      {\n        LoadBalancerId: instanceId,\n      },\n      'Listeners'\n    );\n    const [rs] = res;\n    return rs;\n  }\n  formatListenerVarDisplay(listener: Record<string, any>, displayTpl: string | undefined, listenerAlias: string) {\n    if (displayTpl) {\n      return displayTpl.replace(/\\$\\{(\\w+)\\}/g, (a, b) => {\n        if (!b || !this.ListenerAliasList.includes(b)) {\n          return '';\n        }\n        return this.getAliasValue(listener, b);\n      });\n    }\n    return this.getAliasValue(listener, listenerAlias);\n  }\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    const { display } = query;\n    // console.log({ action, region, instance });\n    if (action === 'DescribeListeners') {\n      const rs = await this.getListenerList({ region, instanceId: instance[this.templateQueryIdMap.instance] });\n      let { listeneralias } = query;\n      listeneralias = this.ListenerAliasList.includes(listeneralias) ? listeneralias : this.templateQueryIdMap.listener;\n      const result = rs.flatMap((o) => {\n        const listenAlias = this.formatListenerVarDisplay(o, display, listeneralias);\n        const lisId = o[this.templateQueryIdMap.listener];\n        o._InstanceAliasValue = listenAlias || lisId;\n        // if (!o[listeneralias]) return [];\n        return {\n          text: listenAlias || lisId,\n          value: lisId,\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage.listener, rs);\n      return result;\n    }\n    return [];\n  }\n}\n","import { BaseDatasource } from '../_base/datasource';\nimport { InvalidDemensions, InstanceAliasList, templateQueryIdMap } from './query_def';\n\nexport default class CmqDatasource extends BaseDatasource {\n  InvalidDimensions: Record<string, string> = InvalidDemensions;\n  InstanceAliasList: string[] = InstanceAliasList;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'cmq',\n    action: 'DescribeQueueDetail',\n    responseField: 'QueueSet',\n  };\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawMetric = await super.getMetrics(region);\n    return rawMetric.map((metric) => {\n      let dims = metric.Dimensions[0].Dimensions;\n      dims = Array.from(new Set([...dims, 'queueId', 'queueName']));\n      metric.Dimensions[0].Dimensions = dims;\n      return metric;\n    });\n  }\n}\n","import { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport { BaseDatasource } from '../_base/datasource';\nimport {\n  InvalidDemensions,\n  InstanceAliasList,\n  templateQueryIdMap,\n  keyInStorage,\n  queryMonitorExtraConfg,\n} from './query_def';\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class CmqTopicDatasource extends BaseDatasource {\n  Namespace = 'QCE/CMQTOPIC';\n  InvalidDimensions: Record<string, string> = InvalidDemensions;\n  InstanceAliasList: string[] = InstanceAliasList;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'cmq',\n    action: 'DescribeTopicDetail',\n    responseField: 'TopicSet',\n  };\n  keyInStorage = keyInStorage;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  extraMetricDims = ['subscriptionId']; // 多选\n\n  async fetchAllSubscription(region: string, params: any) {\n    const serviceInfo = GetServiceAPIInfo(region, 'cmq');\n    // console.log(serviceInfo, 'serviceinfo');\n\n    // 从分页数据，获取全量数据\n    const rs = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action: 'DescribeSubscriptionDetail' }\n        );\n      },\n      params,\n      'SubscriptionSet'\n    );\n\n    return rs[0];\n  }\n\n  async fetchMetricData(action: string, region: string, instance: any) {\n    let result;\n    switch (action) {\n      case 'DescribeSubscriptionDetail':\n        result = await this.fetchAllSubscription(region, { TopicName: instance.TopicName });\n        // eslint-disable-next-line no-case-declarations\n        const rs = result.map((item) => {\n          item._InstanceAliasValue = item.SubscriptionId;\n          return { text: item.SubscriptionId, value: item[templateQueryIdMap.subscription] };\n        });\n        await instanceStorage.setExtraStorage(this.service, this.keyInStorage.subscriptionId, result);\n        return rs;\n      default:\n        return [];\n    }\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawMetric = await super.getMetrics(region);\n    return rawMetric.map((metric) => {\n      let dims = metric.Dimensions[0].Dimensions;\n      dims.push('topicId');\n      if (['NumOfNotify', 'NumOfSuccNotify'].includes(metric.MetricName)) {\n        dims.push('subscriptionId');\n      }\n\n      dims = Array.from(new Set(dims));\n      metric.Dimensions[0].Dimensions = dims;\n      return metric;\n    });\n  }\n}\n","import { BaseDatasource } from '../_base/datasource';\n\ninterface BucketListResult {\n  Owner: { ID: 'string'; DisplayName: 'string' };\n  Buckets: { Name: string; Region: string }[];\n}\n\nexport default class CosDatasource extends BaseDatasource {\n  InvalidDimensions: Record<string, string> = {};\n  InstanceAliasList: string[] = ['BucketName'];\n  templateQueryIdMap = {\n    instance: 'BucketName',\n  };\n  InstanceReqConfig = {} as any; // 不必要的配置\n  cosURL: string;\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n    this.cosURL = `/api/datasources/${this.instanceSettings.id}/resources/tc_cos_list`;\n  }\n  async getInstances(region: string) {\n    return this.backendSrv\n      .datasourceRequest({\n        url: this.cosURL,\n        method: 'GET',\n        params: { region },\n        headers: { 'Content-Type': 'application/json' },\n      })\n      .then((res) => {\n        let { data }: { data: BucketListResult } = res;\n        data = data || {};\n        let { Buckets } = data;\n        Buckets = Buckets || [];\n\n        // name contains appid，see detail https://cloud.tencent.com/document/product/436/8291\n        return Buckets.map((item) => ({\n          ...item,\n          BucketName: item.Name,\n          bucket: item.Name,\n          appid: item.Name.split('-').slice(-1)[0],\n        }));\n      });\n  }\n\n  async getVariableInstances(region) {\n    return this.getInstances(region);\n  }\n\n  async getRegions() {\n    const regionList = await super.getRegions();\n    regionList.splice(11, 0, { value: 'ap-beijing-fsi', text: '华北地区(北京金融)', RegionState: 'AVAILABLE' });\n    return regionList;\n  }\n}\n","import {\n  CPMInstanceAliasList,\n  CPMInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = CPMInstanceAliasList;\n  InvalidDimensions = CPMInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'bm',\n    action: 'DescribeDevices',\n    responseField: 'DeviceInfoSet',\n  };\n  RegionMap = {};\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // 重写getRegion\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/bm',\n      },\n      'bm',\n      { action: 'DescribeRegions', region: 'ap-guangzhou' }\n    ).then((response) => {\n      // 缓存，后面获取可用区zone\n      this.RegionMap = _.keyBy(response.RegionInfoSet, 'Region');\n      return _.map(response.RegionInfoSet || [], (item) => {\n        return {\n          text: item.RegionDescription,\n          value: item.Region,\n        };\n      });\n    });\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.map((item) => modifyDimensons(item));\n  }\n\n  getFilterDropdown({ field, region }) {\n    if (field === 'DeviceClassCode') {\n      const serviceInfo = GetServiceAPIInfo(region, 'bm');\n      return this.doRequest(\n        {\n          url: this.url + serviceInfo.path,\n        },\n        'bm',\n        { region, action: 'DescribeDeviceClass' }\n      ).then((response) => {\n        return _.map(response.DeviceClassSet || [], (item) => {\n          return { text: item.DeviceClassCode, value: item.DeviceClassCode };\n        });\n      });\n    }\n    return [];\n  }\n}\n","import _ from 'lodash';\nimport { CVMInstanceAliasList, isValidMetric, modifyDimensons } from './query_def';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class CVMDatasource extends BaseDatasource {\n  Namespace = 'QCE/CVM';\n  InstanceAliasList = CVMInstanceAliasList;\n  InvalidDimensions = {};\n  templateQueryIdMap = {\n    instance: 'InstanceId',\n  };\n  InstanceReqConfig = {\n    service: 'cvm',\n    action: 'DescribeInstances',\n    responseField: 'InstanceSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        if (isValidMetric(item)) {\n          return modifyDimensons(item);\n        }\n        return null;\n      })\n    );\n  }\n\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/api',\n        data: { Product: 'cvm' },\n      },\n      'api',\n      { action: 'DescribeRegions' }\n    ).then((response) => {\n      return _.filter(\n        _.map(response.RegionSet || [], (item) => {\n          return {\n            text: item.RegionName,\n            value: item.Region,\n            RegionState: item.RegionState,\n          };\n        }),\n        (item) => item.RegionState === 'AVAILABLE'\n      );\n    });\n  }\n\n  getZones(region) {\n    const serviceInfo = GetServiceAPIInfo(region, 'api');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: { Product: 'cvm' },\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeZones' }\n    ).then((response) => {\n      return _.filter(\n        _.map(response.ZoneSet || [], (item) => {\n          return { text: item.ZoneName, value: item.Zone, ZoneState: item.ZoneState, Zone: item.Zone };\n        }),\n        (item) => item.ZoneState === 'AVAILABLE'\n      );\n    });\n  }\n}\n","import {\n  CYNOSDBMYSQLInstanceAliasList,\n  CYNOSDBInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  regionSupported,\n  modifyDimensons,\n  checkKeys,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class CYNOSDBMYSQLDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = CYNOSDBMYSQLInstanceAliasList;\n  InvalidDimensions = CYNOSDBInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  checkKeys = checkKeys;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'cynosdb',\n    action: 'DescribeInstances',\n    responseField: 'InstanceSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.map((item) => modifyDimensons(item));\n  }\n  getRegions() {\n    return Promise.resolve(regionSupported);\n  }\n}\n","import { DCInstanceAliasList, DCInvalidDemensions, namespace, modifyDimensons } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = DCInstanceAliasList;\n  InvalidDimensions = DCInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'DirectConnectId',\n  };\n  InstanceReqConfig = {\n    service: 'dc',\n    action: 'DescribeDirectConnects',\n    responseField: 'DirectConnectSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.map((item) => modifyDimensons(item));\n  }\n}\n","import {\n  DCDBInstanceAliasList,\n  DCDBInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  regionSupported,\n  modifyDimensons,\n  keyInStorage,\n  queryMonitorExtraConfg,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = DCDBInstanceAliasList;\n  InvalidDimensions = DCDBInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'dcdb',\n    action: 'DescribeDCDBInstances',\n    responseField: 'Instances',\n  };\n  keyInStorage = keyInStorage;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  extraActionMap = {\n    DescribeDCDBShards: {\n      service: 'dcdb',\n      action: 'DescribeDCDBShards',\n      responseField: 'Shards',\n      pickKey: 'ShardInstanceId',\n    },\n    DescribeDCDBInstanceNodeInfo: {\n      service: 'dcdb',\n      action: 'DescribeDCDBInstanceNodeInfo',\n      responseField: 'NodesInfo',\n      pickKey: 'NodeId',\n    },\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // 重写getRegion,无接口，用本地config\n  getRegions() {\n    return Promise.resolve(regionSupported);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        return modifyDimensons(item);\n      })\n    );\n  }\n  async getConsumerList(params: any) {\n    const { region, action: act, payload } = params;\n    const { service, action, responseField } = this.extraActionMap[act];\n\n    const serviceInfo = GetServiceAPIInfo(region, service);\n\n    // 从分页数据，获取全量数据\n    const rs = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action }\n        );\n      },\n      payload,\n      responseField\n    );\n    return rs[0];\n  }\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    const payload: any = {\n      InstanceId: instance[this.templateQueryIdMap.instance],\n      Limit: 100,\n    };\n    if (Object.keys(this.extraActionMap).indexOf(action) !== -1) {\n      const rs = await this.getConsumerList({ region, action, payload });\n      const { pickKey } = this.extraActionMap[action];\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[this.templateQueryIdMap[pickKey]];\n        return {\n          text: o[this.templateQueryIdMap[pickKey]],\n          value: o[this.templateQueryIdMap[pickKey]],\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage[pickKey], rs);\n      return result;\n    }\n    return [];\n  }\n}\n","import { DCGInstanceAliasList, DCGInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = DCGInstanceAliasList;\n  InvalidDimensions = DCGInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeDirectConnectGateways',\n    responseField: 'DirectConnectGatewaySet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import { DCXInstanceAliasList, DCXInvalidDemensions, namespace, modifyDimensons } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class DCXDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = DCXInstanceAliasList;\n  InvalidDimensions = DCXInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'DirectConnectTunnelId',\n  };\n  InstanceReqConfig = {\n    service: 'dc',\n    action: 'DescribeDirectConnectTunnels',\n    responseField: 'DirectConnectTunnelSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.map((item) => modifyDimensons(item));\n  }\n}\n","import {\n  ECMInstanceAliasList,\n  ECMInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = ECMInstanceAliasList;\n  InvalidDimensions = ECMInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'ecm',\n    action: 'DescribeInstances',\n    responseField: 'InstanceSet',\n  };\n  MetricReqConfig = {\n    resultFilter: modifyDimensons,\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async metricFindQuery(query: any, regex?: string) {\n    return super.metricFindQuery({ ...query, ...{ region: 'ap-guangzhou' } }, regex);\n  }\n}\n","import {\n  ECMBLOCKSTORAGEInstanceAliasList,\n  ECMBLOCKSTORAGEInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  queryMonitorExtraConfg,\n  keyInStorage,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = ECMBLOCKSTORAGEInstanceAliasList;\n  InvalidDimensions = ECMBLOCKSTORAGEInvalidDemensions;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  templateQueryIdMap = templateQueryIdMap;\n  keyInStorage = keyInStorage;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'ecm',\n    action: 'DescribeInstances',\n    responseField: 'InstanceSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async getDiskList(params: any) {\n    const { payload } = params;\n    const { InstanceId } = payload;\n    const instanceCache = await instanceStorage.getInstance(this.service);\n    const instanceObj: any =\n      _.cloneDeep(instanceCache.find((item) => item[this.templateQueryIdMap.instance] === InstanceId)) ?? {};\n    const { DataDisks: dataDisks } = instanceObj;\n    return dataDisks;\n  }\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    const payload: any = {\n      InstanceId: instance,\n      Limit: 100,\n    };\n    const rs = await this.getDiskList({ region, action, payload });\n    const result = rs.map((o) => {\n      o._InstanceAliasValue = o[this.templateQueryIdMap.diskId];\n      return {\n        text: o[this.templateQueryIdMap.diskId],\n        value: o[this.templateQueryIdMap.diskId],\n      };\n    });\n    await instanceStorage.setExtraStorage(this.service, this.keyInStorage.diskId, rs);\n    return result;\n  }\n}\n","import { ECMLBInstanceAliasList, ECMLBInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = ECMLBInstanceAliasList;\n  InvalidDimensions = ECMLBInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'ecm',\n    action: 'DescribeLoadBalancers',\n    responseField: 'LoadBalancerSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async metricFindQuery(query: any, regex?: string) {\n    return super.metricFindQuery({ ...query, ...{ region: 'ap-guangzhou' } }, regex);\n  }\n}\n","import {\n  GSEInstanceAliasList,\n  GSEInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  regionSupported,\n  keyInStorage,\n  queryMonitorExtraConfg,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = GSEInstanceAliasList;\n  InvalidDimensions = GSEInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'gse',\n    action: 'DescribeInstances',\n    responseField: 'Instances',\n  };\n\n  keyInStorage = keyInStorage;\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // getFilterDropdown({ field }) {\n  //   return super.getRegions();\n  // }\n  getRegions() {\n    return Promise.resolve(regionSupported);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        return modifyDimensons(item);\n      })\n    );\n  }\n  async getQueueNameList(params: any) {\n    const { region } = params;\n    const serviceInfo = GetServiceAPIInfo(region, this.service);\n\n    // 从分页数据，获取全量数据\n    const res = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action: 'DescribeGameServerSessionQueues' }\n        );\n      },\n      {},\n      'GameServerSessionQueues'\n    );\n    const [rs] = res;\n    return rs;\n  }\n  async getFleetList(params: any) {\n    const { region } = params;\n    const serviceInfo = GetServiceAPIInfo(region, this.service);\n\n    // 从分页数据，获取全量数据\n    const res = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action: 'ListFleets' }\n        );\n      },\n      {},\n      'FleetIds'\n    );\n    const [rs] = res;\n    return rs.map((r) => ({ [this.templateQueryIdMap.FleetId]: r }));\n  }\n  async fetchMetricData(action: string, region: string, instance: any) {\n    // console.log({ action, region, instance });\n    if (action === 'DescribeGameServerSessionQueues') {\n      const rs = await this.getQueueNameList({ region, instanceId: instance[this.templateQueryIdMap.instance] });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[this.templateQueryIdMap.Name];\n        return {\n          text: o[this.templateQueryIdMap.Name],\n          value: o[this.templateQueryIdMap.Name],\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage.queue, rs);\n      return result;\n    }\n    if (action === 'ListFleets') {\n      const rs = await this.getFleetList({ region, instanceId: instance[this.templateQueryIdMap.instance] });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[this.templateQueryIdMap.FleetId];\n        return {\n          text: o[this.templateQueryIdMap.FleetId],\n          value: o[this.templateQueryIdMap.FleetId],\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage.fleet, rs);\n      return result;\n    }\n    return [];\n  }\n}\n","import _ from 'lodash';\nimport { BaseDatasource } from '../_base/datasource';\nimport { LBInstanceAliasList, LBInvalidDemensions } from './query_def';\n\nexport default class SCFDatasource extends BaseDatasource {\n  Namespace = 'QCE/LB';\n  InstanceAliasList = LBInstanceAliasList;\n  InvalidDimensions = LBInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'AddressId',\n  };\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeAddresses',\n    responseField: 'AddressSet',\n    interceptor: {\n      request: (params) => {\n        const { Filters } = params;\n        if (!Filters) {\n          params.Filters = [];\n        }\n        params.Filters.push({\n          Name: 'address-type',\n          Values: ['EIP'],\n        });\n        return params;\n      }, // 设置一些请求参数的 默认值\n    },\n  };\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.filter((item) =>\n      /* hack：这里多加了筛选条件，是因为后端数据不准确，坑啊！ 只拿取包含eip的指标 */\n      item.Dimensions?.[0]?.Dimensions?.includes('eip')\n    );\n  }\n\n  // async getInstances(region, params = {}) {\n  //   const rawSet = await super.getInstances(region, params);\n  //   /* hack：这里多加了筛选条件，是因为后端数据不准确，坑啊！ 只拿取包含eip的指标 */\n  //   return rawSet.filter((item) => item.AddressType === 'EIP');\n  // }\n\n  // async getVariableInstances(region, query = {}) {\n  //   const rawSet = await super.getVariableInstances(region, query);\n  //   return rawSet.filter((item) => item.AddressType === 'EIP');\n  // }\n}\n","import _ from 'lodash';\nimport { MONGODBInstanceAliasList, MONGODBInvalidDemensions } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class MONGODBDatasource extends BaseDatasource {\n  Namespace = 'QCE/CMONGO';\n  InstanceAliasList = MONGODBInstanceAliasList;\n  InvalidDimensions = MONGODBInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'InstanceId',\n  };\n  InstanceReqConfig = {\n    service: 'mongodb',\n    action: 'DescribeDBInstances',\n    responseField: 'InstanceDetails',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport { BaseDatasource } from '../_base/datasource';\nimport { InvalidDemensions, InstanceAliasList, templateQueryIdMap } from './query_def';\n\nexport default class MrHdfsDatasource extends BaseDatasource {\n  InvalidDimensions: Record<string, string> = InvalidDemensions;\n  InstanceAliasList: string[] = InstanceAliasList;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'emr',\n    action: 'DescribeInstances',\n    responseField: 'ClusterList',\n    interceptor: {\n      request: (params) => ({\n        ...params,\n        DisplayStrategy: params.DisplayStrategy || 'monitorManage',\n        ProjectId: params.ProjectId || -1,\n      }), // 设置一些请求参数的 默认值\n      response: (data: unknown[]) => data.map(({ ClusterId, ClusterName }) => ({ ClusterId, ClusterName })),\n      // response: (data: unknown[]) =>\n      //   data?.length\n      //     ? data\n      //     : [\n      //         {\n      //           AddTime: '2019-09-16 16:48:01',\n      //           AlarmInfo: '',\n      //           AppId: 251008830,\n      //           ChargeType: 1,\n      //           ClusterId: 'emr-p9f700x8',\n      //           ClusterName: 'beckwu_包年勿删',\n      //           Config: {\n      //             ChargeType: 1,\n      //             ComNodeSize: 0,\n      //             ComResource: {\n      //               Cpu: 0,\n      //               DiskSize: 0,\n      //               DiskType: '',\n      //               MemSize: 0,\n      //               RootSize: 0,\n      //               Spec: '',\n      //               SpecName: '',\n      //               StorageType: 0,\n      //             },\n      //             CoreNodeSize: 2,\n      //             CoreResource: {\n      //               Cpu: 2,\n      //               DiskSize: 100,\n      //               DiskType: 'CLOUD_BASIC',\n      //               MemSize: 8192,\n      //               RootSize: 0,\n      //               Spec: 'CVM.S2',\n      //               SpecName: 'EMR标准型S2',\n      //               StorageType: 2,\n      //             },\n      //             MasterNodeSize: 1,\n      //             MasterResource: {\n      //               Cpu: 2,\n      //               DiskSize: 100,\n      //               DiskType: 'CLOUD_BASIC',\n      //               MemSize: 8192,\n      //               RootSize: 0,\n      //               Spec: 'CVM.S2',\n      //               SpecName: 'EMR标准型S2',\n      //               StorageType: 2,\n      //             },\n      //             OnCos: false,\n      //             SoftInfo: ['zookeeper-3.4.9', 'hadoop-3.1.2', 'knox-1.2.0', 'sys-1.0'],\n      //             TaskNodeSize: 1,\n      //             TaskResource: {\n      //               Cpu: 2,\n      //               DiskSize: 100,\n      //               DiskType: 'CLOUD_BASIC',\n      //               MemSize: 8192,\n      //               RootSize: 0,\n      //               Spec: 'CVM.S2',\n      //               SpecName: 'EMR标准型S2',\n      //               StorageType: 2,\n      //             },\n      //           },\n      //           EmrVersion: 'EMR-V3.0.0',\n      //           Ftitle: '集群运行中',\n      //           Id: 19541,\n      //           IsTradeCluster: 0,\n      //           MasterIp: '--',\n      //           ProjectId: 0,\n      //           RegionId: 1,\n      //           ResourceOrderId: 0,\n      //           RunTime: '0天2小时48分钟55秒',\n      //           Status: 2,\n      //           SubnetId: 1230738,\n      //           TradeVersion: 1,\n      //           Uin: '1875765535',\n      //           VpcId: 78518,\n      //           ZoneId: 100002,\n      //         },\n      //       ],\n    },\n  };\n\n  async fetchAllNodes(region: string, params: any) {\n    const serviceInfo = GetServiceAPIInfo(region, 'emr');\n\n    // 从分页数据，获取全量数据\n    const rs = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action: 'DescribeClusterNodes' }\n        );\n      },\n      params,\n      'NodeList'\n    );\n\n    return rs[0].map((item) => ({ text: item.Ip, value: item.Ip }));\n  }\n\n  async fetchMetricData(action: string, region: string, instance: any) {\n    let result;\n    switch (action) {\n      case 'DescribeClusterNodes':\n        result = await this.fetchAllNodes(region, { InstanceId: instance.ClusterId, NodeFlag: 'all' });\n        return result;\n      default:\n        return [];\n    }\n  }\n}\n","import _ from 'lodash';\nimport { NATGATEWAYInstanceAliasList, NATInvalidDemensions } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class NATGATEWAYDatasource extends BaseDatasource {\n  Namespace = 'QCE/NAT_GATEWAY';\n  InstanceAliasList = NATGATEWAYInstanceAliasList;\n  InvalidDimensions = NATInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'NatGatewayId',\n  };\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeNatGateways',\n    responseField: 'NatGatewaySet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import _ from 'lodash';\nimport { OVCDNInstanceAliasList, OVCDNInvalidDemensions } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class OVCDNDatasource extends BaseDatasource {\n  Namespace = 'QCE/OV_CDN';\n  InstanceAliasList = OVCDNInstanceAliasList;\n  InvalidDimensions = OVCDNInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'Domain',\n  };\n  InstanceReqConfig = {\n    service: 'cdn',\n    action: 'DescribeDomains',\n    responseField: 'Domains',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async metricFindQuery(query: any, regex?: string) {\n    return super.metricFindQuery({ ...query, ...{ region: 'ap-guangzhou' } }, regex);\n  }\n}\n","import { PCXInstanceAliasList, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo, GetRequestParamsV2, SliceLength } from '../../common/constants';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = PCXInstanceAliasList;\n  InvalidDimensions = {};\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'xx',\n    action: 'xx',\n    responseField: 'xx',\n  };\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  getInstances(region = 'ap-guangzhou', params = {}) {\n    params = { offset: 0, limit: 50, ...params };\n    const serviceInfo = GetServiceAPIInfo(region, 'pcx');\n    return this.doRequestV2(\n      {\n        url: this.url + serviceInfo.path,\n        data: params,\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeVpcPeeringConnections' }\n    ).then((response) => {\n      return response.data || [];\n    });\n  }\n\n  /**\n   * 模板变量中获取全量的 PCX 实例列表\n   * @param region 地域信息\n   */\n  getVariableInstances(region, query) {\n    let result: any[] = [];\n    const params = { Offset: 0, Limit: 50, ...query };\n    const serviceInfo = GetServiceAPIInfo(region, 'pcx');\n    return this.doRequestV2(\n      {\n        url: this.url + serviceInfo.path,\n        data: params,\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeVpcPeeringConnections' }\n    ).then((response) => {\n      result = response.data || [];\n      const total = response.totalCount || 0;\n      if (result.length >= total) {\n        return result;\n      } else {\n        const param = SliceLength(total, 50);\n        const promises: any[] = [];\n        _.forEach(param, (item) => {\n          promises.push(this.getInstances(region, item));\n        });\n        return Promise.all(promises)\n          .then((responses) => {\n            _.forEach(responses, (item) => {\n              result = _.concat(result, item);\n            });\n            return result;\n          })\n          .catch((error) => {\n            return result;\n          });\n      }\n    });\n  }\n\n  getVpcId(region, params: any = {}) {\n    params = { Offset: 0, Limit: 20, ...params };\n    // TODO 等待腾讯云接口查问题\n    params.Offset = String(params.Offset);\n    params.Limit = String(params.Limit);\n    const serviceInfo = GetServiceAPIInfo(region, 'vpc');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: params,\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeVpcs' }\n    ).then((response) => {\n      return _.map(response.VpcSet || [], (item) => ({ text: item.VpcId, value: item.VpcId }));\n    });\n  }\n\n  getVpcIds(region) {\n    let result: any[] = [];\n    const params: any = { Offset: 0, Limit: 100 };\n    // TODO 等待腾讯云接口查问题\n    params.Offset = String(params.Offset);\n    params.Limit = String(params.Limit);\n    const serviceInfo = GetServiceAPIInfo(region, 'vpc');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: params,\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeVpcs' }\n    ).then((response) => {\n      result = _.map(response.VpcSet || [], (item) => ({ text: item.VpcId, value: item.VpcId }));\n      const total = response.TotalCount || 0;\n      if (result.length >= total) {\n        return result;\n      } else {\n        const param = SliceLength(total, 100);\n        const promises: any[] = [];\n        _.forEach(param, (item) => {\n          promises.push(this.getVpcId(region, item));\n        });\n        return Promise.all(promises)\n          .then((responses) => {\n            _.forEach(responses, (item) => {\n              result = _.concat(result, item);\n            });\n            return result;\n          })\n          .catch((error) => {\n            return result;\n          });\n      }\n    });\n  }\n\n  /**\n   * 腾讯云 API 2.0 请求接口\n   * @param options\n   * @param service\n   * @param signObj\n   */\n  async doRequestV2(options, service, signObj: any = {}) {\n    options = await GetRequestParamsV2(\n      options,\n      service,\n      signObj,\n      this.secretId,\n      this.instanceSettings.id,\n      this.backendSrv\n    );\n    return this.backendSrv\n      .datasourceRequest(options)\n      .then((response) => {\n        return _.get(response, 'data', {});\n      })\n      .catch((error) => {\n        throw error;\n      });\n  }\n}\n","import _ from 'lodash';\nimport {\n  POSTGRESInstanceAliasList,\n  PostgreInvalidDemensions,\n  namespace,\n  modifyDimensons,\n  templateQueryIdMap,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class CDBDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = POSTGRESInstanceAliasList;\n  InvalidDimensions = PostgreInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'postgres',\n    action: 'DescribeDBInstances',\n    responseField: 'DBInstanceSet',\n  };\n\n  MetricReqConfig = {\n    resultFilter: modifyDimensons,\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import { QAAPInstanceAliasList, QAAPInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class QAAPDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = QAAPInstanceAliasList;\n  InvalidDimensions = QAAPInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'gaap',\n    action: 'DescribeProxies',\n    responseField: 'ProxySet',\n    interceptor: {\n      // response: (data: unknown[]) =>[\n      //   {\n      //     \"NetDetectId\": \"netd-12345678\",\n      //   },\n      // ],\n    },\n  };\n  // MetricReqConfig = {\n  //   resultFilter: modifyDimensons,\n  // };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import _ from 'lodash';\nimport { REDISInstanceAliasList, RedisInvalidDemensions, isValidMetric } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class REDISDatasource extends BaseDatasource {\n  Namespace = 'QCE/REDIS';\n  InstanceAliasList = REDISInstanceAliasList;\n  InvalidDimensions = RedisInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'InstanceId',\n  };\n  InstanceReqConfig = {\n    service: 'redis',\n    action: 'DescribeInstances',\n    responseField: 'InstanceSet',\n    interceptor: {\n      request: (params) => ({ ...params, MonitorVersion: '1m' }),\n    },\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.filter((item) => isValidMetric(item));\n  }\n}\n","import _ from 'lodash';\nimport {\n  REDISMEMInstanceAliasList,\n  namespace,\n  RedisMemInvalidDemensions,\n  isValidMetric,\n  templateQueryIdMap,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class REDISDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = REDISMEMInstanceAliasList;\n  InvalidDimensions = RedisMemInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'redis',\n    action: 'DescribeInstances',\n    responseField: 'InstanceSet',\n    interceptor: {\n      request: (params) => ({ ...params, MonitorVersion: '5s' }),\n    },\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.filter((item) => isValidMetric(item));\n  }\n}\n","import _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { BaseDatasource } from '../_base/datasource';\nimport {\n  SCFInstanceAliasList,\n  SCFInvalidDemensions,\n  regionSupported,\n  queryMonitorExtraConfg,\n  keyInStorage,\n  templateQueryIdMap,\n} from './query_def';\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class SCFDatasource extends BaseDatasource {\n  InstanceKey: string;\n  Namespace: string;\n  InstanceAliasList: string[];\n  InvalidDimensions: Record<string, string>;\n  templateQueryIdMap = templateQueryIdMap;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  keyInStorage = keyInStorage;\n  InstanceReqConfig: { service?: string | undefined; action: string; responseField: string };\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n\n    this.Namespace = 'QCE/SCF_V2';\n    this.InstanceAliasList = SCFInstanceAliasList;\n    this.InvalidDimensions = SCFInvalidDemensions;\n    this.InstanceReqConfig = {\n      service: 'scf',\n      action: 'ListFunctions',\n      responseField: 'Functions',\n    };\n  }\n\n  getRegions() {\n    return Promise.resolve(regionSupported);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.filter(\n      (item) =>\n        /* hack：这里多加了筛选条件，是因为后端数据不准确，坑啊！ 只拿取包含functionName的指标 */\n        item.Dimensions?.[0]?.Dimensions?.includes('functionName') &&\n        item.Dimensions?.[0]?.Dimensions?.includes('namespace') &&\n        !item.MetricName.startsWith('Name')\n    );\n  }\n\n  getVersions(region, params) {\n    const serviceInfo = GetServiceAPIInfo(region, 'scf');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: params,\n      },\n      serviceInfo.service,\n      { region, action: 'ListVersionByFunction' }\n    ).then((response) => {\n      return response.Versions;\n    });\n  }\n\n  async fetchMetricData(action: string, region: string, instance: any) {\n    // console.log({ action, region, instance });\n    if (action === 'ListVersionByFunction') {\n      const rs = await this.getVersions(region, { FunctionName: instance[this.templateQueryIdMap.instance] });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[this.templateQueryIdMap.version];\n        return {\n          text: o[this.templateQueryIdMap.version],\n          value: o[this.templateQueryIdMap.version],\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage.version, rs);\n      return result;\n    }\n    return [];\n  }\n}\n","import {\n  SQLSERVERInstanceAliasList,\n  SQLSERVERInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  regionSupported,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = SQLSERVERInstanceAliasList;\n  InvalidDimensions = SQLSERVERInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'sqlserver',\n    action: 'DescribeDBInstances',\n    responseField: 'DBInstances',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(rawSet.map((item) => modifyDimensons(item)));\n  }\n  getRegions() {\n    return Promise.resolve(regionSupported);\n  }\n  getFilterDropdown({ field, region }) {\n    if (field === 'Zone') {\n      const serviceInfo = GetServiceAPIInfo(region, 'cvm');\n      return this.doRequest(\n        {\n          url: this.url + serviceInfo.path,\n        },\n        serviceInfo.service,\n        { region, action: 'DescribeZones' }\n      ).then((response) => {\n        return _.filter(\n          _.map(response.ZoneSet || [], (item) => {\n            return { text: item.ZoneName, value: item.Zone, ZoneState: item.ZoneState, Zone: item.Zone };\n          }),\n          (item) => item.ZoneState === 'AVAILABLE'\n        );\n      });\n    }\n    return [];\n  }\n}\n","import {\n  TCAPLUSInstanceAliasList,\n  TCAPLUSInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  regonsMap,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = TCAPLUSInstanceAliasList;\n  InvalidDimensions = TCAPLUSInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'tcaplusdb',\n    action: 'DescribeTables',\n    responseField: 'TableInfos',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // 重写getRegion\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/tcaplusdb',\n      },\n      'tcaplusdb',\n      { action: 'DescribeRegions', region: 'ap-guangzhou' }\n    ).then((response) => {\n      return _.map(response.RegionInfos || [], (item) => {\n        return {\n          text: regonsMap[item.RegionName],\n          value: item.RegionName,\n        };\n      });\n    });\n  }\n}\n","import {\n  TDMQInstanceAliasList,\n  TDMQInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  regionSupported,\n  modifyDimensons,\n  queryMonitorExtraConfg,\n  keyInStorage,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = TDMQInstanceAliasList;\n  InvalidDimensions = TDMQInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  keyInStorage = keyInStorage;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'tdmq',\n    action: 'DescribeClusters',\n    responseField: 'ClusterSet',\n  };\n  extraActionMap = {\n    DescribeTopics: {\n      service: 'tdmq',\n      action: 'DescribeTopics',\n      responseField: 'TopicSets',\n      pickKey: 'topicName',\n    },\n    DescribeEnvironments: {\n      service: 'tdmq',\n      action: 'DescribeEnvironments',\n      responseField: 'EnvironmentSet',\n      pickKey: 'environmentId',\n    },\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // getFilterDropdown({ field }) {\n  //   return super.getRegions();\n  // }\n  getRegions() {\n    return Promise.resolve(regionSupported);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(rawSet.map((item) => modifyDimensons(item)));\n  }\n\n  async getConsumerList(params: any) {\n    const { region, action: act, payload } = params;\n    const { service, action, responseField } = this.extraActionMap[act];\n\n    const serviceInfo = GetServiceAPIInfo(region, service);\n\n    // 从分页数据，获取全量数据\n    const rs = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action }\n        );\n      },\n      payload,\n      responseField\n    );\n    // console.log({ rs });\n    return rs[0];\n  }\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    const payload: any = {\n      Limit: 100,\n      ClusterId: instance[this.templateQueryIdMap.instance],\n    };\n    if (Object.keys(this.extraActionMap).indexOf(action) !== -1) {\n      if (action === 'DescribeTopics') {\n        payload.EnvironmentId = this.getVariable(query['environmentid']);\n      }\n      const rs = await this.getConsumerList({ region, action, payload });\n      const { pickKey } = this.extraActionMap[action];\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[this.templateQueryIdMap[pickKey]];\n        return {\n          text: o[this.templateQueryIdMap[pickKey]],\n          value: o[this.templateQueryIdMap[pickKey]],\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage[pickKey], rs);\n      return result;\n    }\n    return [];\n  }\n}\n","import {\n  VCLBInstanceAliasList,\n  VCLBInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  clbNamespaceMap,\n  regionSupported,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = VCLBInstanceAliasList;\n  InvalidDimensions = VCLBInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'clb',\n    action: 'DescribeLoadBalancers',\n    responseField: 'LoadBalancerSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  getRegions() {\n    return Promise.resolve(regionSupported);\n  }\n  async getAllMetrics(region: string) {\n    const serviceInfo = GetServiceAPIInfo(region, 'monitor');\n    const { MetricSet: public_metrics } = await this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: {\n          Namespace: clbNamespaceMap.public,\n        },\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeBaseMetrics' }\n    );\n    const { MetricSet: private_metrics } = await this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: {\n          Namespace: clbNamespaceMap.private,\n        },\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeBaseMetrics' }\n    );\n    console.log({ private_metrics, public_metrics });\n    const res = Object.values(_.keyBy(_.concat(private_metrics, public_metrics), 'MetricName'));\n    return res.map((t) => modifyDimensons(t));\n  }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await this.getAllMetrics(region);\n    return _.compact(rawSet);\n  }\n}\n","import { VBCInstanceAliasList, VBCInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = VBCInstanceAliasList;\n  InvalidDimensions = VBCInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeCcns',\n    responseField: 'CcnSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  getFilterDropdown({ field }) {\n    return super.getRegions();\n  }\n}\n","import {\n  VPCNETDETECTInstanceAliasList,\n  VPCNETInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = VPCNETDETECTInstanceAliasList;\n  InvalidDimensions = VPCNETInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeNetDetects',\n    responseField: 'NetDetectSet',\n    interceptor: {\n      // response: (data: unknown[]) =>[\n      //   {\n      //     \"NetDetectId\": \"netd-12345678\",\n      //   },\n      // ],\n    },\n  };\n  MetricReqConfig = {\n    resultFilter: modifyDimensons,\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import { VPNGWInstanceAliasList, VPNGWInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = VPNGWInstanceAliasList;\n  InvalidDimensions = VPNGWInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeVpnGateways',\n    responseField: 'VpnGatewaySet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  getFilterDropdown({ field, region }) {\n    if (field === 'zone') {\n      const serviceInfo = GetServiceAPIInfo(region, 'cvm');\n      return this.doRequest(\n        {\n          url: this.url + serviceInfo.path,\n        },\n        serviceInfo.service,\n        { region, action: 'DescribeZones' }\n      ).then((response) => {\n        return _.filter(\n          _.map(response.ZoneSet || [], (item) => {\n            return { text: item.ZoneName, value: item.Zone, ZoneState: item.ZoneState, Zone: item.Zone };\n          }),\n          (item) => item.ZoneState === 'AVAILABLE'\n        );\n      });\n    }\n    return [];\n  }\n}\n","import { VPNXInstanceAliasList, VPNXInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = VPNXInstanceAliasList;\n  InvalidDimensions = VPNXInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeVpnConnections',\n    responseField: 'VpnConnectionSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import _ from 'lodash';\nimport { WAFInstanceAliasList, WAFInvalidDemensions, templateQueryIdMap, namespace } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class CDNDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = WAFInstanceAliasList;\n  InvalidDimensions = WAFInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'cdn',\n    action: 'DescribeDomains',\n    responseField: 'Domains',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async metricFindQuery(query: any, regex?: string) {\n    return super.metricFindQuery({ ...query, ...{ region: 'ap-guangzhou' } }, regex);\n  }\n}\n",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-1 hash algorithm.\n\t     */\n\t    var SHA1 = C_algo.SHA1 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476,\n\t                0xc3d2e1f0\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\n\t            // Computation\n\t            for (var i = 0; i < 80; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n\t                    W[i] = (n << 1) | (n >>> 31);\n\t                }\n\n\t                var t = ((a << 5) | (a >>> 27)) + e + W[i];\n\t                if (i < 20) {\n\t                    t += ((b & c) | (~b & d)) + 0x5a827999;\n\t                } else if (i < 40) {\n\t                    t += (b ^ c ^ d) + 0x6ed9eba1;\n\t                } else if (i < 60) {\n\t                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\n\t                } else /* if (i < 80) */ {\n\t                    t += (b ^ c ^ d) - 0x359d3e2a;\n\t                }\n\n\t                e = d;\n\t                d = c;\n\t                c = (b << 30) | (b >>> 2);\n\t                b = a;\n\t                a = t;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA1('message');\n\t     *     var hash = CryptoJS.SHA1(wordArray);\n\t     */\n\t    C.SHA1 = Hasher._createHelper(SHA1);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA1(message, key);\n\t     */\n\t    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\n\t}());\n\n\n\treturn CryptoJS.SHA1;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * HMAC algorithm.\n\t     */\n\t    var HMAC = C_algo.HMAC = Base.extend({\n\t        /**\n\t         * Initializes a newly created HMAC.\n\t         *\n\t         * @param {Hasher} hasher The hash algorithm to use.\n\t         * @param {WordArray|string} key The secret key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n\t         */\n\t        init: function (hasher, key) {\n\t            // Init hasher\n\t            hasher = this._hasher = new hasher.init();\n\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof key == 'string') {\n\t                key = Utf8.parse(key);\n\t            }\n\n\t            // Shortcuts\n\t            var hasherBlockSize = hasher.blockSize;\n\t            var hasherBlockSizeBytes = hasherBlockSize * 4;\n\n\t            // Allow arbitrary length keys\n\t            if (key.sigBytes > hasherBlockSizeBytes) {\n\t                key = hasher.finalize(key);\n\t            }\n\n\t            // Clamp excess bits\n\t            key.clamp();\n\n\t            // Clone key for inner and outer pads\n\t            var oKey = this._oKey = key.clone();\n\t            var iKey = this._iKey = key.clone();\n\n\t            // Shortcuts\n\t            var oKeyWords = oKey.words;\n\t            var iKeyWords = iKey.words;\n\n\t            // XOR keys with pad constants\n\t            for (var i = 0; i < hasherBlockSize; i++) {\n\t                oKeyWords[i] ^= 0x5c5c5c5c;\n\t                iKeyWords[i] ^= 0x36363636;\n\t            }\n\t            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this HMAC to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Reset\n\t            hasher.reset();\n\t            hasher.update(this._iKey);\n\t        },\n\n\t        /**\n\t         * Updates this HMAC with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {HMAC} This HMAC instance.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.update('message');\n\t         *     hmacHasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            this._hasher.update(messageUpdate);\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the HMAC computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The HMAC.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmac = hmacHasher.finalize();\n\t         *     var hmac = hmacHasher.finalize('message');\n\t         *     var hmac = hmacHasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Compute HMAC\n\t            var innerHash = hasher.finalize(messageUpdate);\n\t            hasher.reset();\n\t            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n\t            return hmac;\n\t        }\n\t    });\n\t}());\n\n\n}));","import coreModule from 'grafana/app/core/core_module';\nimport { APIGATEWAYFilterFieldsDescriptor, templateQueryIdMap, queryEditorName, namespace } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.APIGATEWAYFilterFieldsDescriptor = APIGATEWAYFilterFieldsDescriptor;\n      $scope.namespace = namespace;\n    };\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      const service = GetServiceFromNamespace($scope.namespace);\n      // console.log({namespace, service});\n      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance)[templateQueryIdMap.instance];\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n    $scope.getExtraDropdown = async (target) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      const instanceId = $scope.getInstanceId();\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const rs = await $scope.datasource.getServiceFn(service, 'getEnvironmentNameList')({ region, instanceId });\n\n      const result = rs.map((o) => {\n        return {\n          text: o.EnvironmentName,\n          value: JSON.stringify(o),\n        };\n      });\n      return result;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/45073\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in APIGATEWAYFilterFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputNumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />    \n      <multi-condition\n        ng-if=\"field.type === 'inputNumberMulti'\"\n        type=\"'inputNumber'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        maxNum=\"field.max\"\n        minNum=\"field.min\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputMulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- 起始区域 目的区域等 -->\n  <div>\n    <div class=\"gf-form-inline\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">EnvironmentName</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target.EnvironmentName\" allow-custom=\"true\" lookup-text=\"true\"  get-options=\"getExtraDropdown(target)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive(queryEditorName, sQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { BWPFilterFieldsDescriptor } from './query_def';\n\nexport class BWPQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.BWPFilterFieldsDescriptor = BWPFilterFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        case 'zone':\n          return $scope.getZones();\n        default:\n          return [];\n      }\n    };\n\n    $scope.getZones = () => {\n      if (!$scope.region) {\n        return [];\n      }\n      return $scope.datasource.getZones('cvm', $scope.region);\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/213/15728\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        单次请求返回的数量，默认为20，最小值为1，最大值为100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      BandwidthPackageIds\n      <info-popover mode=\"right-normal\">\n        带宽包唯一ID列表，参数不支持同时指定 BandwidthPackageIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n      switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n  <multi-condition type=\"'input'\" max-cond=\"100\" value=\"target.queries.BandwidthPackageIds\" on-change=\"onChange()\">\n  </multi-condition>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      Filters\n      <info-popover mode=\"right-normal\">\n        过滤条件，每次请求的 Filters 的上限为10，Filter.Values 的上限为5。参数不支持同时指定 BandwidthPackageIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n      on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n  <div class=\"gf-form-inline\" ng-repeat=\"field in BWPFilterFieldsDescriptor\">\n    <label class=\"gf-form-label width-14\">\n      {{ field.key }}\n      <info-popover mode=\"right-normal\">\n        {{ field.cnDescriptor }}\n        <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n      </info-popover>\n    </label>\n    <multi-condition\n      ng-if=\"field.type === 'dropdownmulti'\"\n      type=\"'dropdown'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      get-options=\"getDropdown(field.key)\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputNumbermulti'\"\n      type=\"'inputNumber'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      maxNum=\"field.max\"\n      minNum=\"field.min\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputmulti'\"\n      type=\"'input'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <custom-select-dropdown\n      ng-if=\"field.type === 'select'\"\n      value=\"target.queries.Filters[field.key]\"\n      options=\"field.list\"\n      multiple=\"true\"\n      on-change=\"onChange()\"\n    ></custom-select-dropdown>\n  </div>\n</div>\n\n</div>\n`;\n\nexport function bwpQuery() {\n  return {\n    template: template,\n    controller: BWPQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('bwpQuery', bwpQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { CDBFieldsDescriptor } from './query_def';\n\nexport class CDBQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.CDBFieldsDescriptor = CDBFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        case 'ZoneIds':\n          return $scope.getZones();\n        default:\n          return [];\n      }\n    };\n\n    $scope.getZones = () => {\n      if (!$scope.region) {\n        return [];\n      }\n      return $scope.datasource.getZones('cdb', $scope.region);\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/236/15872\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in CDBFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n`;\n\nexport function cdbQuery() {\n  return {\n    template: template,\n    controller: CDBQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('cdbQuery', cdbQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { CDNFilterFieldsDescriptor } from './query_def';\n\nexport class CDNQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.CDNFilterFieldsDescriptor = CDNFilterFieldsDescriptor;\n    };\n\n    // $scope.onChecked = (srcField, dstField) => {\n    //   if ($scope.target.queries[srcField] === true) {\n    //     $scope.target.queries[dstField] = false;\n    //   }\n    //   $scope.onChange();\n    // };\n\n    // $scope.getDropdown = (field) => {\n    //   switch (field) {\n    //     case 'zone':\n    //       return $scope.getZones();\n    //     default:\n    //       return [];\n    //   }\n    // };\n\n    // $scope.getZones = () => {\n    //   if (!$scope.region) {\n    //     return [];\n    //   }\n    //   return $scope.datasource.getZones('cvm', $scope.region);\n    // };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/228/41118\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        单次请求返回的数量，默认为20，最小值为1，最大值为100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\" ng-repeat=\"field in CDNFilterFieldsDescriptor\">\n<label class=\"gf-form-label width-14\">\n  {{ field.key }}\n  <info-popover mode=\"right-normal\">\n    {{ field.cnDescriptor }}\n    <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n  </info-popover>\n</label>\n<multi-condition\n  ng-if=\"field.type === 'inputNumbermulti'\"\n  type=\"'inputNumber'\"\n  max-cond=\"5\"\n  value=\"target.queries.Filters[field.key]\"\n  maxNum=\"field.max\"\n  minNum=\"field.min\"\n  on-change=\"onChange()\"\n></multi-condition>\n<multi-condition\n  ng-if=\"field.type === 'inputmulti'\"\n  type=\"'input'\"\n  max-cond=\"5\"\n  value=\"target.queries.Filters[field.key]\"\n  on-change=\"onChange()\"\n></multi-condition>\n<custom-select-dropdown\n  ng-if=\"field.type === 'select'\"\n  value=\"target.queries.Filters[field.key]\"\n  options=\"field.list\"\n  multiple=\"true\"\n  on-change=\"onChange()\"\n></custom-select-dropdown>\n</div>\n\n</div>\n`;\n\nexport function cdnQuery() {\n  return {\n    template: template,\n    controller: CDNQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('cdnQuery', cdnQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { CDNPROVINCEFilterFieldsDescriptor, queryEditorName, namespace } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nconst ExtraFields = [\n  {\n    label: 'Isp',\n    field: 'isp',\n  },\n  {\n    label: 'Province',\n    field: 'district',\n  },\n];\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.CDNPROVINCEFilterFieldsDescriptor = CDNPROVINCEFilterFieldsDescriptor;\n      $scope.ExtraFields = ExtraFields;\n      $scope.namespace = namespace;\n    };\n\n    $scope.getExtraDropdown = async (target, field) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const rs = await $scope.datasource.getServiceFn(service, 'getConsumerList')({ region, field });\n      return rs;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Domains are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/228/41118\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\" ng-repeat=\"field in CDNPROVINCEFilterFieldsDescriptor\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <input\n          ng-if=\"field.type === 'inputNumber'\"\n          style=\"margin-right:2px\"\n          type=\"number\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n          ng-min=\"field.min\"\n          ng-max=\"field.max\"\n        />\n        <input\n          ng-if=\"field.type === 'input'\"\n          style=\"margin-right:2px\"\n          type=\"text\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n        />    \n        <multi-condition\n          ng-if=\"field.type === 'inputNumberMulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputMulti'\"\n          type=\"'input'\"\n          value=\"target.queries[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries[field.key]\"\n          options=\"field.list\"\n          multiple=\"field.multiple || false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n\n<!-- 起始区域 目的区域等 -->\n  <div\">\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in ExtraFields\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(target, extra.field)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive(queryEditorName, sQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { CFSQueryDescriptor } from './query_def';\n\nexport class SCFQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.CFSQueryDescriptor = CFSQueryDescriptor;\n    };\n\n    $scope.getVersions = async (target) => {\n      // console.log(2222);\n\n      // return [{ text: 1, value: 1 }];\n      // console.log(target, 'target');\n      const { instance, region } = target;\n      const fetcher = $scope.datasource.getServiceFn('scf', 'getVersions');\n      if (!instance || !region) return [];\n\n      return fetcher(region, { FunctionName: JSON.parse(instance).FunctionName }).then((res) => {\n        // console.log(res, 'res');\n\n        return res;\n      });\n    };\n    // $scope.onChecked = (srcField, dstField) => {\n    //   if ($scope.target.queries[srcField] === true) {\n    //     $scope.target.queries[dstField] = false;\n    //   }\n    //   $scope.onChange();\n    // };\n\n    // $scope.getDropdown = (field) => {\n    //   switch (field) {\n    //     case 'zone':\n    //       return $scope.getZones();\n    //     default:\n    //       return [];\n    //   }\n    // };\n\n    // $scope.getZones = () => {\n    //   if (!$scope.region) {\n    //     return [];\n    //   }\n    //   return $scope.datasource.getZones('cvm', $scope.region);\n    // };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n  FileSystems are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/582/38170\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in CFSQueryDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n  </div>\n`;\n\nexport function scfQuery() {\n  return {\n    template: template,\n    controller: SCFQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\ncoreModule.directive('cfsQuery', scfQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { CKAFKAQueryDescriptor } from './query_def';\n\nconst ExtraFields = [\n  {\n    label: 'TopicId',\n    field: 'topicId',\n  },\n  {\n    label: 'ConsumerGroup',\n    field: 'consumerGroup',\n  },\n  {\n    label: 'Partition',\n    field: 'partition',\n  },\n];\n\nexport class CKAFKAQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.CKAFKAQueryDescriptor = CKAFKAQueryDescriptor;\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        default:\n          return [];\n      }\n    };\n\n    // 各个实例下的消费分组信息，由于不想每次都重复发请求，所以这里做了一层缓存，数据结构为{ [instanceId]: { TopicList, GroupList  } }\n    $scope.consumerGroupCacheMap = {};\n\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}));\n    };\n\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      instance = $scope.datasource.getServiceFn('ckafka', 'getVariable')(instance);\n      if (Array.isArray(instance)) instance = instance[0];\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance).InstanceId;\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n\n    $scope.getExtraDropdown = async (target, field) => {\n      const InstanceId = $scope.getInstanceId();\n      let data = $scope.consumerGroupCacheMap[InstanceId];\n\n      if (!data) {\n        const fetcher = $scope.datasource.getServiceFn('ckafka', 'getConsumerGroups');\n        const region = $scope.datasource.getServiceFn('ckafka', 'getVariable')(target.region);\n        const res = await fetcher(region, { InstanceId });\n\n        const { TopicList, GroupList, PartitionList } = res;\n        data = {\n          TopicList: TopicList.map((topic) => {\n            topic._InstanceAliasValue = topic.TopicId;\n            return {\n              text: topic.TopicId,\n              value: JSON.stringify(topic), // 为了获取多维度的值，这里完全可以使用JSON.stringify()将整个对象放进去\n            };\n          }),\n          GroupList: GroupList.map((group) => {\n            group._InstanceAliasValue = group.GroupName;\n            return {\n              text: group.GroupName,\n              value: JSON.stringify(group),\n            };\n          }),\n          PartitionList: PartitionList.map((par) => {\n            par._InstanceAliasValue = par.Partition;\n            return {\n              text: par.Partition,\n              value: JSON.stringify(par),\n            };\n          }),\n        };\n      }\n      // 缓存\n      $scope.consumerGroupCacheMap[InstanceId] = data;\n\n      // console.log(data, field, 'daata--');\n\n      switch (field) {\n        case 'topicId':\n          return data.TopicList;\n        case 'consumerGroup':\n          return data.GroupList;\n        case 'partition':\n          return data.PartitionList;\n      }\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/583/18582\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in CKAFKAQueryDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- 主题，消费分组，分区 -->\n  <div ng-if=\"target.instance\">\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getExtraDropdown(target, extra.field)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  </div>\n`;\n\nexport function scfQuery() {\n  return {\n    template: template,\n    controller: CKAFKAQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive('ckafkaQuery', scfQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { LOADBALANCEFieldsDescriptor, templateQueryIdMap, namespace } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.LOADBALANCEFieldsDescriptor = LOADBALANCEFieldsDescriptor;\n      $scope.namespace = namespace;\n    };\n    $scope.onFieldChange = (field) => {\n      $scope.onRefresh();\n    };\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      const service = GetServiceFromNamespace($scope.namespace);\n      // console.log({namespace, service});\n      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance)[templateQueryIdMap.instance];\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n    $scope.getExtraDropdown = async (target) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      const instanceId = $scope.getInstanceId();\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const rs = await $scope.datasource.getServiceFn(service, 'getListenerList')({ region, instanceId });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[templateQueryIdMap.listener];\n        return {\n          text: o[templateQueryIdMap.listener],\n          value: JSON.stringify(o),\n        };\n      });\n      return result;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/214/30685\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in LOADBALANCEFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputNumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputNumberMulti'\"\n        type=\"'inputNumber'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        maxNum=\"field.max\"\n        minNum=\"field.min\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputMulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n</div>\n\n<!--Listener维度部分-->\n<div class=\"gf-form-inline\" ng-if=\"target.instance\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label query-keyword width-9\">\n      Listeners\n      <info-popover mode=\"right-normal\">\n        可不选择监听器，这时通过实例维度查询监控数据\n      </info-popover>\n    </label>\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n      <gf-form-dropdown model=\"target.listener\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getExtraDropdown(target)\"\n        on-change=\"onRefresh()\" css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n  </div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive('clbQuery', sQuery);\n","import createQuery from '../_base/query';\nimport { InstanceQueryDescriptor } from './query_def';\n\ncreateQuery('cmqQuery', {\n  fieldDescriptor: InstanceQueryDescriptor,\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/406/42624',\n  namespace: 'QCE/CMQ',\n});\n","import coreModule from 'grafana/app/core/core_module';\nimport { InstanceQueryDescriptor } from './query_def';\n\nconst ExtraFields = [\n  {\n    label: 'Subscription(订阅)',\n    field: 'subscriptionId',\n  },\n];\n\nexport class CmqTopicQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.InstanceQueryDescriptor = InstanceQueryDescriptor;\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        default:\n          return [];\n      }\n    };\n\n    // 各个实例下的订阅，由于不想每次都重复发请求，所以这里做了一层缓存，数据结构为{ [instanceId]: {   } }\n    $scope.cacheMap = {};\n\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}));\n    };\n\n    $scope.getTopicName = () => {\n      let { instance } = $scope.target;\n      instance = $scope.datasource.getServiceFn('cmqTopic', 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance).TopicName;\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n\n    $scope.onExtraFieldChange = (field) => {\n      $scope.onRefresh();\n    };\n\n    $scope.getExtraDropdown = async (target, field) => {\n      if (field === 'subscriptionId') {\n        const TopicName = $scope.getTopicName();\n        let data = $scope.cacheMap[TopicName];\n\n        if (!data) {\n          const region = $scope.datasource.getServiceFn('cmqTopic', 'getVariable')(target.region);\n          const fetcher = $scope.datasource.getServiceFn('cmqTopic', 'fetchAllSubscription');\n          const datas = await fetcher(region, { TopicName });\n          data = datas.map((item) => {\n            item._InstanceAliasValue = item.SubscriptionId;\n            return { text: item.SubscriptionId, value: JSON.stringify(item) };\n          });\n        }\n\n        // 缓存\n        $scope.cacheMap[TopicName] = data;\n        return data;\n      }\n      return [];\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/406/42637\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in InstanceQueryDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- 主题的ui -->\n  <div ng-if=\"target.instance\">\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"true\" get-options=\"getExtraDropdown(target, extra.field)\"\n            on-change=\"onExtraFieldChange(extra.field)\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  </div>\n`;\n\nexport function scfQuery() {\n  return {\n    template: template,\n    controller: CmqTopicQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive('cmqTopicQuery', scfQuery);\n","import _ from 'lodash';\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\n// 与名称挂钩的变量\nconst InstanceAliasList = ['BucketName'];\nexport { InstanceAliasList, GetInstanceQueryParams };\n\n// 界面状态模型，default\nexport default {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'BucketName',\n  queries: {},\n};\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { CVMFilterFieldsDescriptor } from './query_def';\n\nexport class CVMQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.CVMFilterFieldsDescriptor = CVMFilterFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        case 'zone':\n          return $scope.getZones();\n        default:\n          return [];\n      }\n    };\n\n    $scope.getZones = () => {\n      if (!$scope.region) {\n        return [];\n      }\n      return $scope.datasource.getZones('cvm', $scope.region);\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/213/15728\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        单次请求返回的数量，默认为20，最小值为1，最大值为100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      InstanceIds\n      <info-popover mode=\"right-normal\">\n        实例 ID，每次请求的实例的上限为100，参数不支持同时指定 InstanceIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n      switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n  <multi-condition type=\"'input'\" max-cond=\"100\" value=\"target.queries.InstanceIds\" on-change=\"onChange()\">\n  </multi-condition>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      Filters\n      <info-popover mode=\"right-normal\">\n        过滤条件，每次请求的 Filters 的上限为10，Filter.Values 的上限为5。参数不支持同时指定 InstanceIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n      on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n  <div class=\"gf-form-inline\" ng-repeat=\"field in CVMFilterFieldsDescriptor\">\n    <label class=\"gf-form-label width-14\">\n      {{ field.key }}\n      <info-popover mode=\"right-normal\">\n        {{ field.cnDescriptor }}\n        <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n      </info-popover>\n    </label>\n    <multi-condition\n      ng-if=\"field.type === 'dropdownmulti'\"\n      type=\"'dropdown'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      get-options=\"getDropdown(field.key)\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputNumbermulti'\"\n      type=\"'inputNumber'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      maxNum=\"field.max\"\n      minNum=\"field.min\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputmulti'\"\n      type=\"'input'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <custom-select-dropdown\n      ng-if=\"field.type === 'select'\"\n      value=\"target.queries.Filters[field.key]\"\n      options=\"field.list\"\n      multiple=\"true\"\n      on-change=\"onChange()\"\n    ></custom-select-dropdown>\n  </div>\n</div>\n\n</div>\n`;\n\nexport function cvmQuery() {\n  return {\n    template: template,\n    controller: CVMQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('cvmQuery', cvmQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { DCDBFilterFieldsDescriptor, queryEditorName, namespace, templateQueryIdMap } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nconst ExtraFields = [\n  {\n    label: 'nodeid',\n    field: 'NodeId',\n    action: 'DescribeDCDBInstanceNodeInfo',\n  },\n  {\n    label: 'shardid',\n    field: 'ShardId',\n    action: 'DescribeDCDBShards',\n  },\n];\nconst dropdownTextConfig = {\n  DescribeDCDBInstanceNodeInfo: 'NodeId',\n  DescribeDCDBShards: 'ShardInstanceId',\n};\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.DCDBFilterFieldsDescriptor = DCDBFilterFieldsDescriptor;\n      $scope.ExtraFields = ExtraFields;\n      $scope.namespace = namespace;\n    };\n\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      const service = GetServiceFromNamespace($scope.namespace);\n      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance)[templateQueryIdMap.instance];\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}) || item.label in ($scope.dims ?? {}));\n    };\n    $scope.getExtraDropdown = async (target, action) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const instanceId = $scope.getInstanceId();\n      const payload: any = {\n        InstanceId: instanceId,\n        Limit: 100,\n      };\n      const rs = await $scope.datasource.getServiceFn(service, 'getConsumerList')({ region, action, payload });\n\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[templateQueryIdMap[dropdownTextConfig[action]]];\n        return {\n          text: o[templateQueryIdMap[dropdownTextConfig[action]]],\n          value: JSON.stringify(o),\n        };\n      });\n      return result;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Functions are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/50388\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\" ng-repeat=\"field in DCDBFilterFieldsDescriptor\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <input\n          ng-if=\"field.type === 'inputNumber'\"\n          style=\"margin-right:2px\"\n          type=\"number\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n          ng-min=\"field.min\"\n          ng-max=\"field.max\"\n        />\n        <input\n          ng-if=\"field.type === 'input'\"\n          style=\"margin-right:2px\"\n          type=\"text\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n        />    \n        <multi-condition\n          ng-if=\"field.type === 'inputNumberMulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputMulti'\"\n          type=\"'input'\"\n          value=\"target.queries[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries[field.key]\"\n          options=\"field.list\"\n          multiple=\"field.multiple || false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n\n<!-- 起始区域 目的区域等 -->\n  <div\">\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(target, extra.action)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive(queryEditorName, sQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { ECMBLOCKSTORAGEFilterFieldsDescriptor, queryEditorName, namespace, templateQueryIdMap } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nconst ExtraFields = [\n  // {\n  //   label: 'nodeid',\n  //   field: 'NodeId',\n  //   action: 'DescribeInstanceNodeInfo',\n  // },\n  {\n    label: 'diskId',\n    field: 'diskId',\n  },\n];\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.ECMBLOCKSTORAGEFilterFieldsDescriptor = ECMBLOCKSTORAGEFilterFieldsDescriptor;\n      $scope.ExtraFields = ExtraFields;\n      $scope.namespace = namespace;\n    };\n\n    // $scope.getInstanceId = () => {\n    //   let { instance } = $scope.target;\n    //   const service = GetServiceFromNamespace($scope.namespace);\n    //   instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n    //   if (!instance) {\n    //     return '';\n    //   }\n    //   try {\n    //     instance = JSON.parse(instance)[templateQueryIdMap.instance];\n    //   } catch (error) {\n    //     console.log();\n    //   }\n    //   return instance;\n    // };\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}) || item.label in ($scope.dims ?? {}));\n    };\n    $scope.getExtraDropdown = (target, action) => {\n      let { instance } = target;\n      const service = GetServiceFromNamespace($scope.namespace);\n      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n      try {\n        instance = JSON.parse(instance);\n        const { DataDisks: dataDisks } = instance;\n        return dataDisks.map((o) => {\n          o._InstanceAliasValue = o[templateQueryIdMap.diskId];\n          return {\n            text: o[templateQueryIdMap.diskId],\n            value: JSON.stringify(o),\n          };\n        });\n      } catch (error) {\n        // console.log('instance error', instance);\n        const payload: any = {\n          InstanceId: instance,\n        };\n        const rs = $scope.datasource.getServiceFn(service, 'getDiskList')({ payload });\n        const result = rs.map((o) => {\n          return {\n            text: o[templateQueryIdMap.diskId],\n            value: JSON.stringify(o),\n          };\n        });\n        return result;\n      }\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Functions are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/50388\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\" ng-repeat=\"field in ECMBLOCKSTORAGEFilterFieldsDescriptor\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <input\n          ng-if=\"field.type === 'inputNumber'\"\n          style=\"margin-right:2px\"\n          type=\"number\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n          ng-min=\"field.min\"\n          ng-max=\"field.max\"\n        />\n        <input\n          ng-if=\"field.type === 'input'\"\n          style=\"margin-right:2px\"\n          type=\"text\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n        />    \n        <multi-condition\n          ng-if=\"field.type === 'inputNumberMulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputMulti'\"\n          type=\"'input'\"\n          value=\"target.queries[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries[field.key]\"\n          options=\"field.list\"\n          multiple=\"field.multiple || false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n\n<!-- 起始区域 目的区域等 -->\n  <div\">\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(target)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive(queryEditorName, sQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { GSEFilterFieldsDescriptor, templateQueryIdMap, queryEditorName, namespace } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nconst ExtraFields = [\n  {\n    label: 'fleetId',\n    field: 'FleetId',\n  },\n  {\n    label: 'queueName',\n    field: 'Name',\n  },\n];\nconst actionMaps = {\n  FleetId: 'getFleetList',\n  Name: 'getQueueNameList',\n};\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.GSEFilterFieldsDescriptor = GSEFilterFieldsDescriptor;\n      $scope.namespace = namespace;\n    };\n\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}));\n    };\n\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      const service = GetServiceFromNamespace($scope.namespace);\n      // console.log({namespace, service});\n      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance)[templateQueryIdMap.instance];\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n    $scope.getExtraDropdown = async (target, field) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      const instanceId = $scope.getInstanceId();\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      // const rs = await $scope.datasource.getServiceFn(service, 'getEnvironmentNameList')({ region, instanceId });\n      let rs = await $scope.datasource.getServiceFn(service, actionMaps[field])({ region, instanceId });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[templateQueryIdMap[field]];\n        return {\n          text: o[templateQueryIdMap[field]],\n          value: JSON.stringify(o),\n        };\n      });\n      return result;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/45073\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in GSEFilterFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputNumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />    \n      <multi-condition\n        ng-if=\"field.type === 'inputNumberMulti'\"\n        type=\"'inputNumber'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        maxNum=\"field.max\"\n        minNum=\"field.min\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputMulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- 起始区域 目的区域等 -->\n<div>\n  <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n      <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n        <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getExtraDropdown(target, extra.field)\"\n          on-change=\"onRefresh()\" css-class=\"min-width-10\">\n        </gf-form-dropdown>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive(queryEditorName, sQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { LBFilterDescriptor } from './query_def';\n\nexport class LBQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      // $scope.LBQueryDescriptor = LBQueryDescriptor;\n      $scope.LBFilterDescriptor = LBFilterDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        case 'zone':\n          return $scope.getZones();\n        default:\n          return [];\n      }\n    };\n\n    $scope.getZones = () => {\n      if (!$scope.region) {\n        return [];\n      }\n      return $scope.datasource.getZones('cvm', $scope.region);\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/215/16702\">Click here to get API doc.</a>\n</label>\n\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        单次请求返回的数量，默认为20，最小值为1，最大值为100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      AddressIds\n      <info-popover mode=\"right-normal\">\n        实例 ID，每次请求的实例的上限为100，参数不支持同时指定 AddressIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n      switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n  <multi-condition type=\"'input'\" max-cond=\"100\" value=\"target.queries.AddressIds\" on-change=\"onChange()\">\n  </multi-condition>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      Filters\n      <info-popover mode=\"right-normal\">\n        过滤条件，每次请求的 Filters 的上限为10，Filter.Values 的上限为5。参数不支持同时指定 AddressIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n      on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n  </div>\n</div>\n\n<!--Filters部分-->\n<div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n  <div class=\"gf-form-inline\" ng-repeat=\"field in LBFilterDescriptor\">\n    <label class=\"gf-form-label width-14\">\n      {{ field.key }}\n      <info-popover mode=\"right-normal\">\n        {{ field.cnDescriptor }}\n        <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n      </info-popover>\n    </label>\n    <multi-condition\n      ng-if=\"field.type === 'dropdownmulti'\"\n      type=\"'dropdown'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      get-options=\"getDropdown(field.key)\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputNumbermulti'\"\n      type=\"'inputNumber'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      maxNum=\"field.max\"\n      minNum=\"field.min\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputmulti'\"\n      type=\"'input'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <custom-select-dropdown\n      ng-if=\"field.type === 'select'\"\n      value=\"target.queries.Filters[field.key]\"\n      options=\"field.list\"\n      multiple=\"true\"\n      on-change=\"onChange()\"\n    ></custom-select-dropdown>\n  </div>\n</div>\n\n</div>\n`;\n\nexport function lbQuery() {\n  return {\n    template: template,\n    controller: LBQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('lbQuery', lbQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { MONGODBFieldsDescriptor } from './query_def';\n\nexport class MongoDBQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.MONGODBFieldsDescriptor = MONGODBFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        default:\n          return [];\n      }\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/240/35769\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in MONGODBFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <gf-form-dropdown\n        ng-if=\"field.type === 'dropdown'\"\n        model=\"target.queries[field.key]\"\n        allow-custom=\"true\"\n        lookup-text=\"true\"\n        get-options=\"getDropdown(field.key)\"\n        on-change=\"onChange()\"\n        css-class=\"min-width-10\"\n      ></gf-form-dropdown>\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n\n</div>\n`;\n\nexport function mongodbQuery() {\n  return {\n    template: template,\n    controller: MongoDBQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('mongodbQuery', mongodbQuery);\n","import { InstanceQueryDescriptor } from './query_def';\nimport coreModule from 'grafana/app/core/core_module';\n\nconst ExtraFields = [\n  {\n    label: 'NodeIP',\n    field: 'nodeIP',\n  },\n];\n\nexport class MrQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.InstanceQueryDescriptor = InstanceQueryDescriptor;\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        default:\n          return [];\n      }\n    };\n\n    // 各个实例下的订阅，由于不想每次都重复发请求，所以这里做了一层缓存，数据结构为{ [instanceId]: {   } }\n    $scope.cacheMap = {};\n\n    $scope.getExtraFields = () => {\n      return Object.keys($scope.dims ?? {}).some((item: string) => item.startsWith('host4')) ? ExtraFields : [];\n      // return ExtraFields;\n    };\n\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      instance = $scope.datasource.getServiceFn('mrHDFS', 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance).ClusterId;\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n\n    $scope.onExtraFieldChange = (field) => {\n      $scope.onRefresh();\n    };\n\n    $scope.getExtraDropdown = async (target, field) => {\n      if (field === 'nodeIP') {\n        const InstanceId = $scope.getInstanceId();\n        let data = $scope.cacheMap[InstanceId];\n\n        if (!data) {\n          const region = $scope.datasource.getServiceFn('mrHDFS', 'getVariable')(target.region);\n          const fetcher = $scope.datasource.getServiceFn('mrHDFS', 'fetchAllNodes');\n          data = await fetcher(region, { InstanceId, NodeFlag: 'all' });\n        }\n\n        // 缓存\n        $scope.cacheMap[InstanceId] = data;\n        return data;\n      }\n      return [];\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/589/34266\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in InstanceQueryDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n<!-- 主题的ui -->\n  <div ng-if=\"target.instance\">\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(target, extra.field)\"\n            on-change=\"onExtraFieldChange(extra.field)\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  </div>\n`;\n\nexport function mrQuery() {\n  return {\n    template: template,\n    controller: MrQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive('mrQuery', mrQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { NATGatewayFilterFieldsDescriptor } from './query_def';\n\nexport class NatGatewayQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.NATGatewayFilterFieldsDescriptor = NATGatewayFilterFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        default:\n          return [];\n      }\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/215/36034\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        单次请求返回的数量，默认为20，最小值为1，最大值为100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-10\">\n      NatGatewayIds\n      <info-popover mode=\"right-normal\">\n        NAT网关统一 ID，参数不支持同时指定 NatGatewayIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n      switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n  <multi-condition type=\"'input'\" value=\"target.queries.NatGatewayIds\" on-change=\"onChange()\">\n  </multi-condition>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-10\">\n      Filters\n      <info-popover mode=\"right-normal\">\n        过滤条件，参数不支持同时指定NatGatewayIds和Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n      on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n  <div class=\"gf-form-inline\" ng-repeat=\"field in NATGatewayFilterFieldsDescriptor\">\n    <label class=\"gf-form-label width-14\">\n      {{ field.key }}\n      <info-popover mode=\"right-normal\">\n        {{ field.cnDescriptor }}\n        <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n      </info-popover>\n    </label>\n    <multi-condition\n      ng-if=\"field.type === 'dropdownmulti'\"\n      type=\"'dropdown'\"\n      value=\"target.queries.Filters[field.key]\"\n      get-options=\"getDropdown(field.key)\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputNumbermulti'\"\n      type=\"'inputNumber'\"\n      value=\"target.queries.Filters[field.key]\"\n      maxNum=\"field.max\"\n      minNum=\"field.min\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputmulti'\"\n      type=\"'input'\"\n      value=\"target.queries.Filters[field.key]\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <custom-select-dropdown\n      ng-if=\"field.type === 'select'\"\n      value=\"target.queries.Filters[field.key]\"\n      options=\"field.list\"\n      multiple=\"true\"\n      on-change=\"onChange()\"\n    ></custom-select-dropdown>\n  </div>\n</div>\n\n</div>\n`;\n\nexport function natGatewayQuery() {\n  return {\n    template: template,\n    controller: NatGatewayQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('natGatewayQuery', natGatewayQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { OVCDNFilterFieldsDescriptor } from './query_def';\n\nexport class OVCDNQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.OVCDNFilterFieldsDescriptor = OVCDNFilterFieldsDescriptor;\n    };\n\n    // $scope.onChecked = (srcField, dstField) => {\n    //   if ($scope.target.queries[srcField] === true) {\n    //     $scope.target.queries[dstField] = false;\n    //   }\n    //   $scope.onChange();\n    // };\n\n    // $scope.getDropdown = (field) => {\n    //   switch (field) {\n    //     case 'zone':\n    //       return $scope.getZones();\n    //     default:\n    //       return [];\n    //   }\n    // };\n\n    // $scope.getZones = () => {\n    //   if (!$scope.region) {\n    //     return [];\n    //   }\n    //   return $scope.datasource.getZones('cvm', $scope.region);\n    // };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/213/15728\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        单次请求返回的数量，默认为20，最小值为1，最大值为100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\" ng-repeat=\"field in OVCDNFilterFieldsDescriptor\">\n<label class=\"gf-form-label width-14\">\n  {{ field.key }}\n  <info-popover mode=\"right-normal\">\n    {{ field.cnDescriptor }}\n    <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n  </info-popover>\n</label>\n<multi-condition\n  ng-if=\"field.type === 'inputNumbermulti'\"\n  type=\"'inputNumber'\"\n  max-cond=\"5\"\n  value=\"target.queries.Filters[field.key]\"\n  maxNum=\"field.max\"\n  minNum=\"field.min\"\n  on-change=\"onChange()\"\n></multi-condition>\n<multi-condition\n  ng-if=\"field.type === 'inputmulti'\"\n  type=\"'input'\"\n  max-cond=\"5\"\n  value=\"target.queries.Filters[field.key]\"\n  on-change=\"onChange()\"\n></multi-condition>\n<custom-select-dropdown\n  ng-if=\"field.type === 'select'\"\n  value=\"target.queries.Filters[field.key]\"\n  options=\"field.list\"\n  multiple=\"true\"\n  on-change=\"onChange()\"\n></custom-select-dropdown>\n</div>\n\n</div>\n`;\n\nexport function ovCdnQuery() {\n  return {\n    template: template,\n    controller: OVCDNQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('ovCdnQuery', ovCdnQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { PCXFieldsDescriptor } from './query_def';\n\nexport class PCXQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.PCXFieldsDescriptor = PCXFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        case 'vpcId':\n          return $scope.getVpcIds();\n        default:\n          return [];\n      }\n    };\n\n    $scope.getVpcIds = () => {\n      if (!$scope.region) {\n        return [];\n      }\n      return $scope.datasource.getVpcIds('pcx', $scope.region);\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/215/2101\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in PCXFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <gf-form-dropdown\n        ng-if=\"field.type === 'dropdown'\"\n        model=\"target.queries[field.key]\"\n        allow-custom=\"true\"\n        lookup-text=\"true\"\n        get-options=\"getDropdown(field.key)\"\n        on-change=\"onChange()\"\n        css-class=\"min-width-10\"\n      ></gf-form-dropdown>\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n\n</div>\n`;\n\nexport function pcxQuery() {\n  return {\n    template: template,\n    controller: PCXQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('pcxQuery', pcxQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { RedisFieldsDescriptor } from './query_def';\n\nexport class RedisQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.RedisFieldsDescriptor = RedisFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        default:\n          return [];\n      }\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/240/35769\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in RedisFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <gf-form-dropdown\n        ng-if=\"field.type === 'dropdown'\"\n        model=\"target.queries[field.key]\"\n        allow-custom=\"true\"\n        lookup-text=\"true\"\n        get-options=\"getDropdown(field.key)\"\n        on-change=\"onChange()\"\n        css-class=\"min-width-10\"\n      ></gf-form-dropdown>\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n\n</div>\n`;\n\nexport function redisQuery() {\n  return {\n    template: template,\n    controller: RedisQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('redisQuery', redisQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { RedisMemFieldsDescriptor } from './query_def';\n\nexport class RedisMemQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.RedisMemFieldsDescriptor = RedisMemFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        default:\n          return [];\n      }\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/240/35769\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in RedisMemFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <gf-form-dropdown\n        ng-if=\"field.type === 'dropdown'\"\n        model=\"target.queries[field.key]\"\n        allow-custom=\"true\"\n        lookup-text=\"true\"\n        get-options=\"getDropdown(field.key)\"\n        on-change=\"onChange()\"\n        css-class=\"min-width-10\"\n      ></gf-form-dropdown>\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n\n</div>\n`;\n\nexport function redisMemQuery() {\n  return {\n    template: template,\n    controller: RedisMemQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('redisMemQuery', redisMemQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { SCFQueryDescriptor, templateQueryIdMap } from './query_def';\n\nexport class SCFQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.SCFQueryDescriptor = SCFQueryDescriptor;\n    };\n\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      instance = $scope.datasource.getServiceFn('scf', 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance).FunctionName;\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n\n    $scope.getVersions = async (target) => {\n      // console.log(2222);\n\n      // return [{ text: 1, value: 1 }];\n      // console.log(target, 'target');\n      // let { instance, region } = target;\n      const FunctionName = $scope.getInstanceId();\n      const region = $scope.datasource.getServiceFn('scf', 'getVariable')(target.region);\n      if (!FunctionName || !region) return [];\n\n      const fetcher = $scope.datasource.getServiceFn('scf', 'getVersions');\n\n      return fetcher(region, { FunctionName }).then((res) => {\n        // console.log(res, 'res');\n        const result = res.map((o) => {\n          o._InstanceAliasValue = o[templateQueryIdMap.version];\n          return {\n            text: o[templateQueryIdMap.version],\n            value: JSON.stringify(o),\n          };\n        });\n        return result;\n      });\n    };\n    // $scope.onChecked = (srcField, dstField) => {\n    //   if ($scope.target.queries[srcField] === true) {\n    //     $scope.target.queries[dstField] = false;\n    //   }\n    //   $scope.onChange();\n    // };\n\n    // $scope.getDropdown = (field) => {\n    //   switch (field) {\n    //     case 'zone':\n    //       return $scope.getZones();\n    //     default:\n    //       return [];\n    //   }\n    // };\n\n    // $scope.getZones = () => {\n    //   if (!$scope.region) {\n    //     return [];\n    //   }\n    //   return $scope.datasource.getZones('cvm', $scope.region);\n    // };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/583/18582\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in SCFQueryDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- version部分 -->\n<div class=\"gf-form-inline\" ng-if=\"target.instance\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label query-keyword width-9\">Version</label>\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n      <gf-form-dropdown model=\"target.version\" allow-custom=\"false\" get-options=\"getVersions(target)\"\n        on-change=\"onRefresh()\" css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n  </div>\n</div>\n\n  </div>\n`;\n\nexport function scfQuery() {\n  return {\n    template: template,\n    controller: SCFQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n    },\n  };\n}\ncoreModule.directive('scfQuery', scfQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { TDMQFilterFieldsDescriptor, queryEditorName, namespace, templateQueryIdMap } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nconst ExtraFields = [\n  {\n    label: 'environmentId',\n    field: 'environmentId',\n    action: 'DescribeEnvironments',\n  },\n  {\n    label: 'topicName',\n    field: 'topicName',\n    action: 'DescribeTopics',\n  },\n];\n\nconst dropdownTextConfig = {\n  DescribeTopics: 'topicName',\n  DescribeEnvironments: 'environmentId',\n};\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.TDMQFilterFieldsDescriptor = TDMQFilterFieldsDescriptor;\n      $scope.ExtraFields = ExtraFields;\n      $scope.namespace = namespace;\n    };\n\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      const service = GetServiceFromNamespace($scope.namespace);\n      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance)[templateQueryIdMap.instance];\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}) || item.label in ($scope.dims ?? {}));\n    };\n    $scope.getExtraDropdown = async (target, action) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const payload: any = {\n        Limit: 100,\n        ClusterId: $scope.getInstanceId(),\n      };\n      if (action === 'DescribeTopics') {\n        let evId = $scope.target.environmentId;\n        try {\n          evId = JSON.parse(evId);\n          evId = evId[templateQueryIdMap.environmentId];\n        } catch (e) {}\n        payload.EnvironmentId = evId;\n      }\n\n      const rs = await $scope.datasource.getServiceFn(service, 'getConsumerList')({ region, action, payload });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[templateQueryIdMap[dropdownTextConfig[action]]];\n        return {\n          text: o[templateQueryIdMap[dropdownTextConfig[action]]],\n          label: o[templateQueryIdMap[dropdownTextConfig[action]]],\n          value: JSON.stringify(o),\n        };\n      });\n      return result;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Functions are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/50388\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\" ng-repeat=\"field in TDMQFilterFieldsDescriptor\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <input\n          ng-if=\"field.type === 'inputNumber'\"\n          style=\"margin-right:2px\"\n          type=\"number\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n          ng-min=\"field.min\"\n          ng-max=\"field.max\"\n        />\n        <input\n          ng-if=\"field.type === 'input'\"\n          style=\"margin-right:2px\"\n          type=\"text\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n        />    \n        <multi-condition\n          ng-if=\"field.type === 'inputNumberMulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputMulti'\"\n          type=\"'input'\"\n          value=\"target.queries[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries[field.key]\"\n          options=\"field.list\"\n          multiple=\"field.multiple || false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n\n<!-- 起始区域 目的区域等 -->\n  <div\">\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(target, extra.action)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive(queryEditorName, sQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { VBCFilterFieldsDescriptor, namespace } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nconst ExtraFields: any = [\n  // {\n  //   label: 'SRegion',\n  //   field: 'SRegion',\n  // },\n  // {\n  //   label: 'DRegion',\n  //   field: 'DRegion',\n  // },\n];\n\nexport class VBCQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.VBCFilterFieldsDescriptor = VBCFilterFieldsDescriptor;\n      $scope.namespace = namespace;\n    };\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}));\n    };\n\n    $scope.getExtraDropdown = (field) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      // return $scope.datasource.getServiceFn(service, 'getFilterDropdown')({ field })\n      return $scope.datasource.getFilterDropdown(service, { field });\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/45073\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in VBCFilterFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputNumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />    \n      <multi-condition\n        ng-if=\"field.type === 'inputNumberMulti'\"\n        type=\"'inputNumber'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        maxNum=\"field.max\"\n        minNum=\"field.min\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputMulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- 起始区域 目的区域等 -->\n  <div>\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(extra.field)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport function scfQuery() {\n  return {\n    template: template,\n    controller: VBCQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive('vbcQuery', scfQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","var map = {\n\t\".\": 8,\n\t\"./\": 8,\n\t\"./_base/datasource\": 1,\n\t\"./_base/datasource.ts\": 1,\n\t\"./_base/query\": 5,\n\t\"./_base/query.ts\": 5,\n\t\"./_base/query_filter\": 168,\n\t\"./_base/query_filter.ts\": 168,\n\t\"./_base/types\": 169,\n\t\"./_base/types.ts\": 169,\n\t\"./apigateway/datasource\": 65,\n\t\"./apigateway/datasource.ts\": 65,\n\t\"./apigateway/query\": 115,\n\t\"./apigateway/query.ts\": 115,\n\t\"./apigateway/query_def\": 15,\n\t\"./apigateway/query_def.ts\": 15,\n\t\"./bmIntraLb/datasource\": 66,\n\t\"./bmIntraLb/datasource.ts\": 66,\n\t\"./bmIntraLb/query\": 116,\n\t\"./bmIntraLb/query.ts\": 116,\n\t\"./bmIntraLb/query_def\": 22,\n\t\"./bmIntraLb/query_def.ts\": 22,\n\t\"./bm_lb/datasource\": 67,\n\t\"./bm_lb/datasource.ts\": 67,\n\t\"./bm_lb/query\": 117,\n\t\"./bm_lb/query.ts\": 117,\n\t\"./bm_lb/query_def\": 23,\n\t\"./bm_lb/query_def.ts\": 23,\n\t\"./bm_pcx/datasource\": 68,\n\t\"./bm_pcx/datasource.ts\": 68,\n\t\"./bm_pcx/query\": 118,\n\t\"./bm_pcx/query.ts\": 118,\n\t\"./bm_pcx/query_def\": 24,\n\t\"./bm_pcx/query_def.ts\": 24,\n\t\"./bwp/datasource\": 69,\n\t\"./bwp/datasource.ts\": 69,\n\t\"./bwp/query\": 119,\n\t\"./bwp/query.ts\": 119,\n\t\"./bwp/query_def\": 53,\n\t\"./bwp/query_def.ts\": 53,\n\t\"./cbs/datasource\": 70,\n\t\"./cbs/datasource.ts\": 70,\n\t\"./cbs/query\": 120,\n\t\"./cbs/query.ts\": 120,\n\t\"./cbs/query_def\": 25,\n\t\"./cbs/query_def.ts\": 25,\n\t\"./cdb/datasource\": 71,\n\t\"./cdb/datasource.ts\": 71,\n\t\"./cdb/query\": 121,\n\t\"./cdb/query.ts\": 121,\n\t\"./cdb/query_def\": 45,\n\t\"./cdb/query_def.ts\": 45,\n\t\"./cdn/datasource\": 72,\n\t\"./cdn/datasource.ts\": 72,\n\t\"./cdn/query\": 122,\n\t\"./cdn/query.ts\": 122,\n\t\"./cdn/query_def\": 54,\n\t\"./cdn/query_def.ts\": 54,\n\t\"./cdn_province/datasource\": 73,\n\t\"./cdn_province/datasource.ts\": 73,\n\t\"./cdn_province/query\": 123,\n\t\"./cdn_province/query.ts\": 123,\n\t\"./cdn_province/query_def\": 26,\n\t\"./cdn_province/query_def.ts\": 26,\n\t\"./ceip_summary/datasource\": 74,\n\t\"./ceip_summary/datasource.ts\": 74,\n\t\"./ceip_summary/query\": 124,\n\t\"./ceip_summary/query.ts\": 124,\n\t\"./ceip_summary/query_def\": 27,\n\t\"./ceip_summary/query_def.ts\": 27,\n\t\"./ces/datasource\": 75,\n\t\"./ces/datasource.ts\": 75,\n\t\"./ces/query\": 125,\n\t\"./ces/query.ts\": 125,\n\t\"./ces/query_def\": 34,\n\t\"./ces/query_def.ts\": 34,\n\t\"./cfs/datasource\": 76,\n\t\"./cfs/datasource.ts\": 76,\n\t\"./cfs/query\": 126,\n\t\"./cfs/query.ts\": 126,\n\t\"./cfs/query_def\": 46,\n\t\"./cfs/query_def.ts\": 46,\n\t\"./ckafka/datasource\": 77,\n\t\"./ckafka/datasource.ts\": 77,\n\t\"./ckafka/query\": 127,\n\t\"./ckafka/query.ts\": 127,\n\t\"./ckafka/query_def\": 16,\n\t\"./ckafka/query_def.ts\": 16,\n\t\"./clb/datasource\": 78,\n\t\"./clb/datasource.ts\": 78,\n\t\"./clb/query\": 128,\n\t\"./clb/query.ts\": 128,\n\t\"./clb/query_def\": 13,\n\t\"./clb/query_def.ts\": 13,\n\t\"./cmq/datasource\": 79,\n\t\"./cmq/datasource.ts\": 79,\n\t\"./cmq/query\": 129,\n\t\"./cmq/query.ts\": 129,\n\t\"./cmq/query_def\": 47,\n\t\"./cmq/query_def.ts\": 47,\n\t\"./cmq_topic/datasource\": 80,\n\t\"./cmq_topic/datasource.ts\": 80,\n\t\"./cmq_topic/query\": 130,\n\t\"./cmq_topic/query.ts\": 130,\n\t\"./cmq_topic/query_def\": 28,\n\t\"./cmq_topic/query_def.ts\": 28,\n\t\"./cos/datasource\": 81,\n\t\"./cos/datasource.ts\": 81,\n\t\"./cos/query_def\": 131,\n\t\"./cos/query_def.ts\": 131,\n\t\"./cpm/datasource\": 82,\n\t\"./cpm/datasource.ts\": 82,\n\t\"./cpm/query\": 132,\n\t\"./cpm/query.ts\": 132,\n\t\"./cpm/query_def\": 29,\n\t\"./cpm/query_def.ts\": 29,\n\t\"./cvm/datasource\": 83,\n\t\"./cvm/datasource.ts\": 83,\n\t\"./cvm/query\": 133,\n\t\"./cvm/query.ts\": 133,\n\t\"./cvm/query_def\": 48,\n\t\"./cvm/query_def.ts\": 48,\n\t\"./cynosdb_mysql/datasource\": 84,\n\t\"./cynosdb_mysql/datasource.ts\": 84,\n\t\"./cynosdb_mysql/query\": 134,\n\t\"./cynosdb_mysql/query.ts\": 134,\n\t\"./cynosdb_mysql/query_def\": 18,\n\t\"./cynosdb_mysql/query_def.ts\": 18,\n\t\"./dc/datasource\": 85,\n\t\"./dc/datasource.ts\": 85,\n\t\"./dc/query\": 135,\n\t\"./dc/query.ts\": 135,\n\t\"./dc/query_def\": 35,\n\t\"./dc/query_def.ts\": 35,\n\t\"./dcdb/datasource\": 86,\n\t\"./dcdb/datasource.ts\": 86,\n\t\"./dcdb/query\": 136,\n\t\"./dcdb/query.ts\": 136,\n\t\"./dcdb/query_def\": 10,\n\t\"./dcdb/query_def.ts\": 10,\n\t\"./dcg/datasource\": 87,\n\t\"./dcg/datasource.ts\": 87,\n\t\"./dcg/query\": 137,\n\t\"./dcg/query.ts\": 137,\n\t\"./dcg/query_def\": 36,\n\t\"./dcg/query_def.ts\": 36,\n\t\"./dcx/datasource\": 88,\n\t\"./dcx/datasource.ts\": 88,\n\t\"./dcx/query\": 138,\n\t\"./dcx/query.ts\": 138,\n\t\"./dcx/query_def\": 37,\n\t\"./dcx/query_def.ts\": 37,\n\t\"./ecm/datasource\": 89,\n\t\"./ecm/datasource.ts\": 89,\n\t\"./ecm/query\": 139,\n\t\"./ecm/query.ts\": 139,\n\t\"./ecm/query_def\": 30,\n\t\"./ecm/query_def.ts\": 30,\n\t\"./ecm_block_storage/datasource\": 90,\n\t\"./ecm_block_storage/datasource.ts\": 90,\n\t\"./ecm_block_storage/query\": 140,\n\t\"./ecm_block_storage/query.ts\": 140,\n\t\"./ecm_block_storage/query_def\": 14,\n\t\"./ecm_block_storage/query_def.ts\": 14,\n\t\"./ecm_lb/datasource\": 91,\n\t\"./ecm_lb/datasource.ts\": 91,\n\t\"./ecm_lb/query\": 141,\n\t\"./ecm_lb/query.ts\": 141,\n\t\"./ecm_lb/query_def\": 38,\n\t\"./ecm_lb/query_def.ts\": 38,\n\t\"./gse/datasource\": 92,\n\t\"./gse/datasource.ts\": 92,\n\t\"./gse/query\": 142,\n\t\"./gse/query.ts\": 142,\n\t\"./gse/query_def\": 11,\n\t\"./gse/query_def.ts\": 11,\n\t\"./index\": 8,\n\t\"./index.ts\": 8,\n\t\"./lb/datasource\": 93,\n\t\"./lb/datasource.ts\": 93,\n\t\"./lb/query\": 143,\n\t\"./lb/query.ts\": 143,\n\t\"./lb/query_def\": 55,\n\t\"./lb/query_def.ts\": 55,\n\t\"./mongodb/datasource\": 94,\n\t\"./mongodb/datasource.ts\": 94,\n\t\"./mongodb/query\": 144,\n\t\"./mongodb/query.ts\": 144,\n\t\"./mongodb/query_def\": 56,\n\t\"./mongodb/query_def.ts\": 56,\n\t\"./mr/datasource\": 95,\n\t\"./mr/datasource.ts\": 95,\n\t\"./mr/query\": 145,\n\t\"./mr/query.ts\": 145,\n\t\"./mr/query_def\": 49,\n\t\"./mr/query_def.ts\": 49,\n\t\"./nat_gateway/datasource\": 96,\n\t\"./nat_gateway/datasource.ts\": 96,\n\t\"./nat_gateway/query\": 146,\n\t\"./nat_gateway/query.ts\": 146,\n\t\"./nat_gateway/query_def\": 57,\n\t\"./nat_gateway/query_def.ts\": 57,\n\t\"./ov_cdn/datasource\": 97,\n\t\"./ov_cdn/datasource.ts\": 97,\n\t\"./ov_cdn/query\": 147,\n\t\"./ov_cdn/query.ts\": 147,\n\t\"./ov_cdn/query_def\": 58,\n\t\"./ov_cdn/query_def.ts\": 58,\n\t\"./pcx/datasource\": 98,\n\t\"./pcx/datasource.ts\": 98,\n\t\"./pcx/query\": 148,\n\t\"./pcx/query.ts\": 148,\n\t\"./pcx/query_def\": 50,\n\t\"./pcx/query_def.ts\": 50,\n\t\"./postgresql/datasource\": 99,\n\t\"./postgresql/datasource.ts\": 99,\n\t\"./postgresql/query\": 149,\n\t\"./postgresql/query.ts\": 149,\n\t\"./postgresql/query_def\": 31,\n\t\"./postgresql/query_def.ts\": 31,\n\t\"./qaap/datasource\": 100,\n\t\"./qaap/datasource.ts\": 100,\n\t\"./qaap/query\": 150,\n\t\"./qaap/query.ts\": 150,\n\t\"./qaap/query_def\": 39,\n\t\"./qaap/query_def.ts\": 39,\n\t\"./redis/datasource\": 101,\n\t\"./redis/datasource.ts\": 101,\n\t\"./redis/query\": 151,\n\t\"./redis/query.ts\": 151,\n\t\"./redis/query_def\": 51,\n\t\"./redis/query_def.ts\": 51,\n\t\"./redis_mem/datasource\": 102,\n\t\"./redis_mem/datasource.ts\": 102,\n\t\"./redis_mem/query\": 152,\n\t\"./redis_mem/query.ts\": 152,\n\t\"./redis_mem/query_def\": 40,\n\t\"./redis_mem/query_def.ts\": 40,\n\t\"./scf/datasource\": 103,\n\t\"./scf/datasource.ts\": 103,\n\t\"./scf/query\": 153,\n\t\"./scf/query.ts\": 153,\n\t\"./scf/query_def\": 19,\n\t\"./scf/query_def.ts\": 19,\n\t\"./sqlserver/datasource\": 104,\n\t\"./sqlserver/datasource.ts\": 104,\n\t\"./sqlserver/query\": 154,\n\t\"./sqlserver/query.ts\": 154,\n\t\"./sqlserver/query_def\": 20,\n\t\"./sqlserver/query_def.ts\": 20,\n\t\"./tcaplus/datasource\": 105,\n\t\"./tcaplus/datasource.ts\": 105,\n\t\"./tcaplus/query\": 155,\n\t\"./tcaplus/query.ts\": 155,\n\t\"./tcaplus/query_def\": 32,\n\t\"./tcaplus/query_def.ts\": 32,\n\t\"./tdmq/datasource\": 106,\n\t\"./tdmq/datasource.ts\": 106,\n\t\"./tdmq/query\": 156,\n\t\"./tdmq/query.ts\": 156,\n\t\"./tdmq/query_def\": 9,\n\t\"./tdmq/query_def.ts\": 9,\n\t\"./v_clb/datasource\": 107,\n\t\"./v_clb/datasource.ts\": 107,\n\t\"./v_clb/query\": 157,\n\t\"./v_clb/query.ts\": 157,\n\t\"./v_clb/query_def\": 17,\n\t\"./v_clb/query_def.ts\": 17,\n\t\"./vbc/datasource\": 108,\n\t\"./vbc/datasource.ts\": 108,\n\t\"./vbc/query\": 158,\n\t\"./vbc/query.ts\": 158,\n\t\"./vbc/query_def\": 41,\n\t\"./vbc/query_def.ts\": 41,\n\t\"./vpc_net_detect/datasource\": 109,\n\t\"./vpc_net_detect/datasource.ts\": 109,\n\t\"./vpc_net_detect/query\": 159,\n\t\"./vpc_net_detect/query.ts\": 159,\n\t\"./vpc_net_detect/query_def\": 33,\n\t\"./vpc_net_detect/query_def.ts\": 33,\n\t\"./vpngw/datasource\": 110,\n\t\"./vpngw/datasource.ts\": 110,\n\t\"./vpngw/query\": 160,\n\t\"./vpngw/query.ts\": 160,\n\t\"./vpngw/query_def\": 42,\n\t\"./vpngw/query_def.ts\": 42,\n\t\"./vpnx/datasource\": 111,\n\t\"./vpnx/datasource.ts\": 111,\n\t\"./vpnx/query\": 161,\n\t\"./vpnx/query.ts\": 161,\n\t\"./vpnx/query_def\": 43,\n\t\"./vpnx/query_def.ts\": 43,\n\t\"./waf/datasource\": 112,\n\t\"./waf/datasource.ts\": 112,\n\t\"./waf/query\": 162,\n\t\"./waf/query.ts\": 162,\n\t\"./waf/query_def\": 44,\n\t\"./waf/query_def.ts\": 44\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 163;","'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    var obj;\n\n    while (queue.length) {\n        var item = queue.pop();\n        obj = item.obj[item.prop];\n\n        if (Array.isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n\n    return obj;\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (Array.isArray(target)) {\n            target.push(source);\n        } else if (typeof target === 'object') {\n            if (options.plainObjects || options.allowPrototypes || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (Array.isArray(target) && !Array.isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (Array.isArray(target) && Array.isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                if (target[i] && typeof target[i] === 'object') {\n                    target[i] = merge(target[i], item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str) {\n    try {\n        return decodeURIComponent(str.replace(/\\+/g, ' '));\n    } catch (e) {\n        return str;\n    }\n};\n\nvar encode = function encode(str) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = typeof str === 'string' ? str : String(str);\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    return compactQueue(queue);\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (obj === null || typeof obj === 'undefined') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    merge: merge\n};\n","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nmodule.exports = {\n    'default': 'RFC3986',\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return value;\n        }\n    },\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var X64WordArray = C_x64.WordArray;\n\t    var C_algo = C.algo;\n\n\t    function X64Word_create() {\n\t        return X64Word.create.apply(X64Word, arguments);\n\t    }\n\n\t    // Constants\n\t    var K = [\n\t        X64Word_create(0x428a2f98, 0xd728ae22), X64Word_create(0x71374491, 0x23ef65cd),\n\t        X64Word_create(0xb5c0fbcf, 0xec4d3b2f), X64Word_create(0xe9b5dba5, 0x8189dbbc),\n\t        X64Word_create(0x3956c25b, 0xf348b538), X64Word_create(0x59f111f1, 0xb605d019),\n\t        X64Word_create(0x923f82a4, 0xaf194f9b), X64Word_create(0xab1c5ed5, 0xda6d8118),\n\t        X64Word_create(0xd807aa98, 0xa3030242), X64Word_create(0x12835b01, 0x45706fbe),\n\t        X64Word_create(0x243185be, 0x4ee4b28c), X64Word_create(0x550c7dc3, 0xd5ffb4e2),\n\t        X64Word_create(0x72be5d74, 0xf27b896f), X64Word_create(0x80deb1fe, 0x3b1696b1),\n\t        X64Word_create(0x9bdc06a7, 0x25c71235), X64Word_create(0xc19bf174, 0xcf692694),\n\t        X64Word_create(0xe49b69c1, 0x9ef14ad2), X64Word_create(0xefbe4786, 0x384f25e3),\n\t        X64Word_create(0x0fc19dc6, 0x8b8cd5b5), X64Word_create(0x240ca1cc, 0x77ac9c65),\n\t        X64Word_create(0x2de92c6f, 0x592b0275), X64Word_create(0x4a7484aa, 0x6ea6e483),\n\t        X64Word_create(0x5cb0a9dc, 0xbd41fbd4), X64Word_create(0x76f988da, 0x831153b5),\n\t        X64Word_create(0x983e5152, 0xee66dfab), X64Word_create(0xa831c66d, 0x2db43210),\n\t        X64Word_create(0xb00327c8, 0x98fb213f), X64Word_create(0xbf597fc7, 0xbeef0ee4),\n\t        X64Word_create(0xc6e00bf3, 0x3da88fc2), X64Word_create(0xd5a79147, 0x930aa725),\n\t        X64Word_create(0x06ca6351, 0xe003826f), X64Word_create(0x14292967, 0x0a0e6e70),\n\t        X64Word_create(0x27b70a85, 0x46d22ffc), X64Word_create(0x2e1b2138, 0x5c26c926),\n\t        X64Word_create(0x4d2c6dfc, 0x5ac42aed), X64Word_create(0x53380d13, 0x9d95b3df),\n\t        X64Word_create(0x650a7354, 0x8baf63de), X64Word_create(0x766a0abb, 0x3c77b2a8),\n\t        X64Word_create(0x81c2c92e, 0x47edaee6), X64Word_create(0x92722c85, 0x1482353b),\n\t        X64Word_create(0xa2bfe8a1, 0x4cf10364), X64Word_create(0xa81a664b, 0xbc423001),\n\t        X64Word_create(0xc24b8b70, 0xd0f89791), X64Word_create(0xc76c51a3, 0x0654be30),\n\t        X64Word_create(0xd192e819, 0xd6ef5218), X64Word_create(0xd6990624, 0x5565a910),\n\t        X64Word_create(0xf40e3585, 0x5771202a), X64Word_create(0x106aa070, 0x32bbd1b8),\n\t        X64Word_create(0x19a4c116, 0xb8d2d0c8), X64Word_create(0x1e376c08, 0x5141ab53),\n\t        X64Word_create(0x2748774c, 0xdf8eeb99), X64Word_create(0x34b0bcb5, 0xe19b48a8),\n\t        X64Word_create(0x391c0cb3, 0xc5c95a63), X64Word_create(0x4ed8aa4a, 0xe3418acb),\n\t        X64Word_create(0x5b9cca4f, 0x7763e373), X64Word_create(0x682e6ff3, 0xd6b2b8a3),\n\t        X64Word_create(0x748f82ee, 0x5defb2fc), X64Word_create(0x78a5636f, 0x43172f60),\n\t        X64Word_create(0x84c87814, 0xa1f0ab72), X64Word_create(0x8cc70208, 0x1a6439ec),\n\t        X64Word_create(0x90befffa, 0x23631e28), X64Word_create(0xa4506ceb, 0xde82bde9),\n\t        X64Word_create(0xbef9a3f7, 0xb2c67915), X64Word_create(0xc67178f2, 0xe372532b),\n\t        X64Word_create(0xca273ece, 0xea26619c), X64Word_create(0xd186b8c7, 0x21c0c207),\n\t        X64Word_create(0xeada7dd6, 0xcde0eb1e), X64Word_create(0xf57d4f7f, 0xee6ed178),\n\t        X64Word_create(0x06f067aa, 0x72176fba), X64Word_create(0x0a637dc5, 0xa2c898a6),\n\t        X64Word_create(0x113f9804, 0xbef90dae), X64Word_create(0x1b710b35, 0x131c471b),\n\t        X64Word_create(0x28db77f5, 0x23047d84), X64Word_create(0x32caab7b, 0x40c72493),\n\t        X64Word_create(0x3c9ebe0a, 0x15c9bebc), X64Word_create(0x431d67c4, 0x9c100d4c),\n\t        X64Word_create(0x4cc5d4be, 0xcb3e42b6), X64Word_create(0x597f299c, 0xfc657e2a),\n\t        X64Word_create(0x5fcb6fab, 0x3ad6faec), X64Word_create(0x6c44198c, 0x4a475817)\n\t    ];\n\n\t    // Reusable objects\n\t    var W = [];\n\t    (function () {\n\t        for (var i = 0; i < 80; i++) {\n\t            W[i] = X64Word_create();\n\t        }\n\t    }());\n\n\t    /**\n\t     * SHA-512 hash algorithm.\n\t     */\n\t    var SHA512 = C_algo.SHA512 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new X64WordArray.init([\n\t                new X64Word.init(0x6a09e667, 0xf3bcc908), new X64Word.init(0xbb67ae85, 0x84caa73b),\n\t                new X64Word.init(0x3c6ef372, 0xfe94f82b), new X64Word.init(0xa54ff53a, 0x5f1d36f1),\n\t                new X64Word.init(0x510e527f, 0xade682d1), new X64Word.init(0x9b05688c, 0x2b3e6c1f),\n\t                new X64Word.init(0x1f83d9ab, 0xfb41bd6b), new X64Word.init(0x5be0cd19, 0x137e2179)\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var H0 = H[0];\n\t            var H1 = H[1];\n\t            var H2 = H[2];\n\t            var H3 = H[3];\n\t            var H4 = H[4];\n\t            var H5 = H[5];\n\t            var H6 = H[6];\n\t            var H7 = H[7];\n\n\t            var H0h = H0.high;\n\t            var H0l = H0.low;\n\t            var H1h = H1.high;\n\t            var H1l = H1.low;\n\t            var H2h = H2.high;\n\t            var H2l = H2.low;\n\t            var H3h = H3.high;\n\t            var H3l = H3.low;\n\t            var H4h = H4.high;\n\t            var H4l = H4.low;\n\t            var H5h = H5.high;\n\t            var H5l = H5.low;\n\t            var H6h = H6.high;\n\t            var H6l = H6.low;\n\t            var H7h = H7.high;\n\t            var H7l = H7.low;\n\n\t            // Working variables\n\t            var ah = H0h;\n\t            var al = H0l;\n\t            var bh = H1h;\n\t            var bl = H1l;\n\t            var ch = H2h;\n\t            var cl = H2l;\n\t            var dh = H3h;\n\t            var dl = H3l;\n\t            var eh = H4h;\n\t            var el = H4l;\n\t            var fh = H5h;\n\t            var fl = H5l;\n\t            var gh = H6h;\n\t            var gl = H6l;\n\t            var hh = H7h;\n\t            var hl = H7l;\n\n\t            // Rounds\n\t            for (var i = 0; i < 80; i++) {\n\t                // Shortcut\n\t                var Wi = W[i];\n\n\t                // Extend message\n\t                if (i < 16) {\n\t                    var Wih = Wi.high = M[offset + i * 2]     | 0;\n\t                    var Wil = Wi.low  = M[offset + i * 2 + 1] | 0;\n\t                } else {\n\t                    // Gamma0\n\t                    var gamma0x  = W[i - 15];\n\t                    var gamma0xh = gamma0x.high;\n\t                    var gamma0xl = gamma0x.low;\n\t                    var gamma0h  = ((gamma0xh >>> 1) | (gamma0xl << 31)) ^ ((gamma0xh >>> 8) | (gamma0xl << 24)) ^ (gamma0xh >>> 7);\n\t                    var gamma0l  = ((gamma0xl >>> 1) | (gamma0xh << 31)) ^ ((gamma0xl >>> 8) | (gamma0xh << 24)) ^ ((gamma0xl >>> 7) | (gamma0xh << 25));\n\n\t                    // Gamma1\n\t                    var gamma1x  = W[i - 2];\n\t                    var gamma1xh = gamma1x.high;\n\t                    var gamma1xl = gamma1x.low;\n\t                    var gamma1h  = ((gamma1xh >>> 19) | (gamma1xl << 13)) ^ ((gamma1xh << 3) | (gamma1xl >>> 29)) ^ (gamma1xh >>> 6);\n\t                    var gamma1l  = ((gamma1xl >>> 19) | (gamma1xh << 13)) ^ ((gamma1xl << 3) | (gamma1xh >>> 29)) ^ ((gamma1xl >>> 6) | (gamma1xh << 26));\n\n\t                    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n\t                    var Wi7  = W[i - 7];\n\t                    var Wi7h = Wi7.high;\n\t                    var Wi7l = Wi7.low;\n\n\t                    var Wi16  = W[i - 16];\n\t                    var Wi16h = Wi16.high;\n\t                    var Wi16l = Wi16.low;\n\n\t                    var Wil = gamma0l + Wi7l;\n\t                    var Wih = gamma0h + Wi7h + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0);\n\t                    var Wil = Wil + gamma1l;\n\t                    var Wih = Wih + gamma1h + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0);\n\t                    var Wil = Wil + Wi16l;\n\t                    var Wih = Wih + Wi16h + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0);\n\n\t                    Wi.high = Wih;\n\t                    Wi.low  = Wil;\n\t                }\n\n\t                var chh  = (eh & fh) ^ (~eh & gh);\n\t                var chl  = (el & fl) ^ (~el & gl);\n\t                var majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);\n\t                var majl = (al & bl) ^ (al & cl) ^ (bl & cl);\n\n\t                var sigma0h = ((ah >>> 28) | (al << 4))  ^ ((ah << 30)  | (al >>> 2)) ^ ((ah << 25) | (al >>> 7));\n\t                var sigma0l = ((al >>> 28) | (ah << 4))  ^ ((al << 30)  | (ah >>> 2)) ^ ((al << 25) | (ah >>> 7));\n\t                var sigma1h = ((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9));\n\t                var sigma1l = ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9));\n\n\t                // t1 = h + sigma1 + ch + K[i] + W[i]\n\t                var Ki  = K[i];\n\t                var Kih = Ki.high;\n\t                var Kil = Ki.low;\n\n\t                var t1l = hl + sigma1l;\n\t                var t1h = hh + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0);\n\t                var t1l = t1l + chl;\n\t                var t1h = t1h + chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0);\n\t                var t1l = t1l + Kil;\n\t                var t1h = t1h + Kih + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0);\n\t                var t1l = t1l + Wil;\n\t                var t1h = t1h + Wih + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0);\n\n\t                // t2 = sigma0 + maj\n\t                var t2l = sigma0l + majl;\n\t                var t2h = sigma0h + majh + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0);\n\n\t                // Update working variables\n\t                hh = gh;\n\t                hl = gl;\n\t                gh = fh;\n\t                gl = fl;\n\t                fh = eh;\n\t                fl = el;\n\t                el = (dl + t1l) | 0;\n\t                eh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;\n\t                dh = ch;\n\t                dl = cl;\n\t                ch = bh;\n\t                cl = bl;\n\t                bh = ah;\n\t                bl = al;\n\t                al = (t1l + t2l) | 0;\n\t                ah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H0l = H0.low  = (H0l + al);\n\t            H0.high = (H0h + ah + ((H0l >>> 0) < (al >>> 0) ? 1 : 0));\n\t            H1l = H1.low  = (H1l + bl);\n\t            H1.high = (H1h + bh + ((H1l >>> 0) < (bl >>> 0) ? 1 : 0));\n\t            H2l = H2.low  = (H2l + cl);\n\t            H2.high = (H2h + ch + ((H2l >>> 0) < (cl >>> 0) ? 1 : 0));\n\t            H3l = H3.low  = (H3l + dl);\n\t            H3.high = (H3h + dh + ((H3l >>> 0) < (dl >>> 0) ? 1 : 0));\n\t            H4l = H4.low  = (H4l + el);\n\t            H4.high = (H4h + eh + ((H4l >>> 0) < (el >>> 0) ? 1 : 0));\n\t            H5l = H5.low  = (H5l + fl);\n\t            H5.high = (H5h + fh + ((H5l >>> 0) < (fl >>> 0) ? 1 : 0));\n\t            H6l = H6.low  = (H6l + gl);\n\t            H6.high = (H6h + gh + ((H6l >>> 0) < (gl >>> 0) ? 1 : 0));\n\t            H7l = H7.low  = (H7l + hl);\n\t            H7.high = (H7h + hh + ((H7l >>> 0) < (hl >>> 0) ? 1 : 0));\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 31] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Convert hash to 32-bit word array before returning\n\t            var hash = this._hash.toX32();\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        },\n\n\t        blockSize: 1024/32\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA512('message');\n\t     *     var hash = CryptoJS.SHA512(wordArray);\n\t     */\n\t    C.SHA512 = Hasher._createHelper(SHA512);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA512(message, key);\n\t     */\n\t    C.HmacSHA512 = Hasher._createHmacHelper(SHA512);\n\t}());\n\n\n\treturn CryptoJS.SHA512;\n\n}));","import coreModule from 'grafana/app/core/core_module';\nimport { DetailQueryConfig } from './types';\n\nclass SPQueryCtrl {\n  static _config: DetailQueryConfig;\n\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    Object.assign($scope, SPQueryCtrl._config);\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"{{instanceDocUrl}}\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        单次请求返回的数量，默认为20，最小值为1，最大值为100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      InstanceIds\n      <info-popover mode=\"right-normal\">\n        实例 ID，每次请求的实例的上限为100，参数不支持同时指定 InstanceIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n      switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n  <multi-condition type=\"'input'\" max-cond=\"100\" value=\"target.queries.InstanceIds\" on-change=\"onChange()\">\n  </multi-condition>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      Filters\n      <info-popover mode=\"right-normal\">\n        过滤条件，每次请求的 Filters 的上限为10，Filter.Values 的上限为5。参数不支持同时指定 InstanceIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n      on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n  <div class=\"gf-form-inline\" ng-repeat=\"field in CVMFilterFieldsDescriptor\">\n    <label class=\"gf-form-label width-14\">\n      {{ field.key }}\n      <info-popover mode=\"right-normal\">\n        {{ field.cnDescriptor }}\n        <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n      </info-popover>\n    </label>\n    <multi-condition\n      ng-if=\"field.type === 'dropdownmulti'\"\n      type=\"'dropdown'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      get-options=\"getDropdown(field.key)\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputNumbermulti'\"\n      type=\"'inputNumber'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      maxNum=\"field.max\"\n      minNum=\"field.min\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputmulti'\"\n      type=\"'input'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <custom-select-dropdown\n      ng-if=\"field.type === 'select'\"\n      value=\"target.queries.Filters[field.key]\"\n      options=\"field.list\"\n      multiple=\"true\"\n      on-change=\"onChange()\"\n    ></custom-select-dropdown>\n  </div>\n</div>\n</div>\n`;\n\nexport function queryDDO() {\n  return {\n    template: template,\n    controller: SPQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\nexport default (name: string, config: DetailQueryConfig) => {\n  SPQueryCtrl._config = config;\n  coreModule.directive(name, queryDDO);\n};\n","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n","module.exports = require('./lib/dot-querystring');",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"), require(\"./lib-typedarrays\"), require(\"./enc-utf16\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./sha1\"), require(\"./sha256\"), require(\"./sha224\"), require(\"./sha512\"), require(\"./sha384\"), require(\"./sha3\"), require(\"./ripemd160\"), require(\"./hmac\"), require(\"./pbkdf2\"), require(\"./evpkdf\"), require(\"./cipher-core\"), require(\"./mode-cfb\"), require(\"./mode-ctr\"), require(\"./mode-ctr-gladman\"), require(\"./mode-ofb\"), require(\"./mode-ecb\"), require(\"./pad-ansix923\"), require(\"./pad-iso10126\"), require(\"./pad-iso97971\"), require(\"./pad-zeropadding\"), require(\"./pad-nopadding\"), require(\"./format-hex\"), require(\"./aes\"), require(\"./tripledes\"), require(\"./rc4\"), require(\"./rabbit\"), require(\"./rabbit-legacy\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\", \"./lib-typedarrays\", \"./enc-utf16\", \"./enc-base64\", \"./md5\", \"./sha1\", \"./sha256\", \"./sha224\", \"./sha512\", \"./sha384\", \"./sha3\", \"./ripemd160\", \"./hmac\", \"./pbkdf2\", \"./evpkdf\", \"./cipher-core\", \"./mode-cfb\", \"./mode-ctr\", \"./mode-ctr-gladman\", \"./mode-ofb\", \"./mode-ecb\", \"./pad-ansix923\", \"./pad-iso10126\", \"./pad-iso97971\", \"./pad-zeropadding\", \"./pad-nopadding\", \"./format-hex\", \"./aes\", \"./tripledes\", \"./rc4\", \"./rabbit\", \"./rabbit-legacy\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\treturn CryptoJS;\n\n}));","module.exports = __WEBPACK_EXTERNAL_MODULE__173__;","module.exports = __WEBPACK_EXTERNAL_MODULE__174__;","module.exports = __WEBPACK_EXTERNAL_MODULE__175__;","module.exports = __WEBPACK_EXTERNAL_MODULE__176__;","module.exports = \"<query-editor-row query-ctrl=\\\"ctrl\\\" class=\\\"generic-datasource-query-row\\\" has-text-edit-mode=\\\"true\\\">\\n  <div class=\\\"gf-form-inline\\\">\\n    <div class=\\\"gf-form\\\">\\n      <label class=\\\"gf-form-label query-keyword width-9\\\">Namespace</label>\\n      <div class=\\\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\\\">\\n        <gf-cascader\\n          ng-if=\\\"ctrl.isCascader\\\"\\n          style=\\\"width: 160px\\\"\\n          change-on-select=\\\"false\\\"\\n          options=\\\"ctrl.cascaderOptions\\\"\\n          on-select=\\\"ctrl.cascaderChange(_query)\\\"\\n          initial-value=\\\"{{ctrl.target.namespace}}\\\"\\n        ></gf-cascader>\\n\\n        <gf-form-dropdown\\n          ng-if=\\\"!ctrl.isCascader\\\"\\n          model=\\\"ctrl.target.namespace\\\"\\n          lookup-text=\\\"true\\\"\\n          get-options=\\\"ctrl.getNamespaces($query)\\\"\\n          on-change=\\\"ctrl.onNamespaceChange()\\\"\\n          css-class=\\\"min-width-10\\\"\\n        >\\n        </gf-form-dropdown>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"gf-form-inline\\\" ng-if=\\\"!ctrl.hideRegion\\\">\\n    <div class=\\\"gf-form\\\">\\n      <label class=\\\"gf-form-label query-keyword width-9\\\">Region</label>\\n      <div class=\\\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\\\">\\n        <gf-form-dropdown\\n          model=\\\"ctrl.target[ctrl.target.service].region\\\"\\n          allow-custom=\\\"true\\\"\\n          lookup-text=\\\"true\\\"\\n          get-options=\\\"ctrl.getRegions($query)\\\"\\n          on-change=\\\"ctrl.onRegionChange()\\\"\\n          css-class=\\\"min-width-10\\\"\\n          disabled\\n        >\\n        </gf-form-dropdown>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"gf-form-inline\\\">\\n    <div class=\\\"gf-form\\\">\\n      <label class=\\\"gf-form-label query-keyword width-9\\\">MetricName</label>\\n      <div class=\\\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\\\">\\n        <gf-form-dropdown\\n          model=\\\"ctrl.target[ctrl.target.service].metricName\\\"\\n          allow-custom=\\\"true\\\"\\n          lookup-text=\\\"true\\\"\\n          get-options=\\\"ctrl.getMetrics($query)\\\"\\n          on-change=\\\"ctrl.onMetricChange()\\\"\\n          css-class=\\\"min-width-10\\\"\\n        >\\n        </gf-form-dropdown>\\n      </div>\\n    </div>\\n    <div class=\\\"gf-form gf-form-label--grow\\\" ng-if=\\\"!!ctrl.getMetricNameDesc()\\\">\\n      <label class=\\\"gf-form-label gf-form-label--grow\\\">({{ctrl.getMetricNameDesc()}})</label>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"gf-form-inline\\\" style=\\\"align-items: center\\\">\\n    <div class=\\\"gf-form\\\">\\n      <label class=\\\"gf-form-label query-keyword width-9\\\">Period</label>\\n      <div class=\\\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\\\">\\n        <select\\n          class=\\\"gf-form-input min-width-10\\\"\\n          ng-change=\\\"ctrl.refresh()\\\"\\n          ng-model=\\\"ctrl.target[ctrl.target.service].period\\\"\\n          ng-options=\\\"f for f in ctrl.sortedPeriodList\\\"\\n        ></select>\\n      </div>\\n    </div>\\n    <span style=\\\"margin-left: 8px; font-size: 12px\\\">(时间单位：秒)</span>\\n  </div>\\n\\n  <div class=\\\"gf-form-inline\\\">\\n    <div class=\\\"gf-form\\\">\\n      <label class=\\\"gf-form-label query-keyword width-9\\\">Instance</label>\\n      <div class=\\\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\\\">\\n        <select\\n          class=\\\"gf-form-input min-width-8\\\"\\n          ng-change=\\\"ctrl.onInstanceAliasChange()\\\"\\n          ng-model=\\\"ctrl.target[ctrl.target.service].instanceAlias\\\"\\n          ng-options=\\\"f.value as f.text for f in ctrl.instanceAliasList\\\"\\n        ></select>\\n      </div>\\n      <div class=\\\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\\\">\\n        <gf-form-dropdown\\n          model=\\\"ctrl.target[ctrl.target.service].instance\\\"\\n          allow-custom=\\\"true\\\"\\n          lookup-text=\\\"true\\\"\\n          get-options=\\\"ctrl.getInstances($query)\\\"\\n          on-change=\\\"ctrl.onInstanceChange()\\\"\\n          css-class=\\\"min-width-10\\\"\\n        >\\n        </gf-form-dropdown>\\n      </div>\\n    </div>\\n    <div class=\\\"gf-form\\\" ng-if=\\\"!ctrl.isVariable('instance')\\\">\\n      <label class=\\\"gf-form-label width-7\\\">Show Details</label>\\n      <gf-form-switch\\n        class=\\\"gf-form tc-switch\\\"\\n        label-class=\\\"width-7\\\"\\n        checked=\\\"ctrl.target.showInstanceDetails\\\"\\n        switch-class=\\\"max-width-5\\\"\\n      ></gf-form-switch>\\n    </div>\\n    <div class=\\\"gf-form gf-form-label--grow\\\">\\n      <!-- this is explain how much items will display to user -->\\n      <label class=\\\"gf-form-label gf-form-label--grow\\\">(按照具体的查询条件搜索实例，默认拉取前 20 条实例)</label>\\n    </div>\\n  </div>\\n</query-editor-row>\\n\";","var map = {\n\t\"./_base/query.ts\": 5,\n\t\"./apigateway/datasource\": 65,\n\t\"./apigateway/datasource.ts\": 65,\n\t\"./apigateway/query.ts\": 115,\n\t\"./apigateway/query_def.ts\": 15,\n\t\"./bmIntraLb/datasource\": 66,\n\t\"./bmIntraLb/datasource.ts\": 66,\n\t\"./bmIntraLb/query.ts\": 116,\n\t\"./bmIntraLb/query_def.ts\": 22,\n\t\"./bm_lb/datasource\": 67,\n\t\"./bm_lb/datasource.ts\": 67,\n\t\"./bm_lb/query.ts\": 117,\n\t\"./bm_lb/query_def.ts\": 23,\n\t\"./bm_pcx/datasource\": 68,\n\t\"./bm_pcx/datasource.ts\": 68,\n\t\"./bm_pcx/query.ts\": 118,\n\t\"./bm_pcx/query_def.ts\": 24,\n\t\"./bwp/datasource\": 69,\n\t\"./bwp/datasource.ts\": 69,\n\t\"./bwp/query.ts\": 119,\n\t\"./bwp/query_def.ts\": 53,\n\t\"./cbs/datasource\": 70,\n\t\"./cbs/datasource.ts\": 70,\n\t\"./cbs/query.ts\": 120,\n\t\"./cbs/query_def.ts\": 25,\n\t\"./cdb/datasource\": 71,\n\t\"./cdb/datasource.ts\": 71,\n\t\"./cdb/query.ts\": 121,\n\t\"./cdb/query_def.ts\": 45,\n\t\"./cdn/datasource\": 72,\n\t\"./cdn/datasource.ts\": 72,\n\t\"./cdn/query.ts\": 122,\n\t\"./cdn/query_def.ts\": 54,\n\t\"./cdn_province/datasource\": 73,\n\t\"./cdn_province/datasource.ts\": 73,\n\t\"./cdn_province/query.ts\": 123,\n\t\"./cdn_province/query_def.ts\": 26,\n\t\"./ceip_summary/datasource\": 74,\n\t\"./ceip_summary/datasource.ts\": 74,\n\t\"./ceip_summary/query.ts\": 124,\n\t\"./ceip_summary/query_def.ts\": 27,\n\t\"./ces/datasource\": 75,\n\t\"./ces/datasource.ts\": 75,\n\t\"./ces/query.ts\": 125,\n\t\"./ces/query_def.ts\": 34,\n\t\"./cfs/datasource\": 76,\n\t\"./cfs/datasource.ts\": 76,\n\t\"./cfs/query.ts\": 126,\n\t\"./cfs/query_def.ts\": 46,\n\t\"./ckafka/datasource\": 77,\n\t\"./ckafka/datasource.ts\": 77,\n\t\"./ckafka/query.ts\": 127,\n\t\"./ckafka/query_def.ts\": 16,\n\t\"./clb/datasource\": 78,\n\t\"./clb/datasource.ts\": 78,\n\t\"./clb/query.ts\": 128,\n\t\"./clb/query_def.ts\": 13,\n\t\"./cmq/datasource\": 79,\n\t\"./cmq/datasource.ts\": 79,\n\t\"./cmq/query.ts\": 129,\n\t\"./cmq/query_def.ts\": 47,\n\t\"./cmq_topic/datasource\": 80,\n\t\"./cmq_topic/datasource.ts\": 80,\n\t\"./cmq_topic/query.ts\": 130,\n\t\"./cmq_topic/query_def.ts\": 28,\n\t\"./cos/datasource\": 81,\n\t\"./cos/datasource.ts\": 81,\n\t\"./cos/query_def.ts\": 131,\n\t\"./cpm/datasource\": 82,\n\t\"./cpm/datasource.ts\": 82,\n\t\"./cpm/query.ts\": 132,\n\t\"./cpm/query_def.ts\": 29,\n\t\"./cvm/datasource\": 83,\n\t\"./cvm/datasource.ts\": 83,\n\t\"./cvm/query.ts\": 133,\n\t\"./cvm/query_def.ts\": 48,\n\t\"./cynosdb_mysql/datasource\": 84,\n\t\"./cynosdb_mysql/datasource.ts\": 84,\n\t\"./cynosdb_mysql/query.ts\": 134,\n\t\"./cynosdb_mysql/query_def.ts\": 18,\n\t\"./dc/datasource\": 85,\n\t\"./dc/datasource.ts\": 85,\n\t\"./dc/query.ts\": 135,\n\t\"./dc/query_def.ts\": 35,\n\t\"./dcdb/datasource\": 86,\n\t\"./dcdb/datasource.ts\": 86,\n\t\"./dcdb/query.ts\": 136,\n\t\"./dcdb/query_def.ts\": 10,\n\t\"./dcg/datasource\": 87,\n\t\"./dcg/datasource.ts\": 87,\n\t\"./dcg/query.ts\": 137,\n\t\"./dcg/query_def.ts\": 36,\n\t\"./dcx/datasource\": 88,\n\t\"./dcx/datasource.ts\": 88,\n\t\"./dcx/query.ts\": 138,\n\t\"./dcx/query_def.ts\": 37,\n\t\"./ecm/datasource\": 89,\n\t\"./ecm/datasource.ts\": 89,\n\t\"./ecm/query.ts\": 139,\n\t\"./ecm/query_def.ts\": 30,\n\t\"./ecm_block_storage/datasource\": 90,\n\t\"./ecm_block_storage/datasource.ts\": 90,\n\t\"./ecm_block_storage/query.ts\": 140,\n\t\"./ecm_block_storage/query_def.ts\": 14,\n\t\"./ecm_lb/datasource\": 91,\n\t\"./ecm_lb/datasource.ts\": 91,\n\t\"./ecm_lb/query.ts\": 141,\n\t\"./ecm_lb/query_def.ts\": 38,\n\t\"./gse/datasource\": 92,\n\t\"./gse/datasource.ts\": 92,\n\t\"./gse/query.ts\": 142,\n\t\"./gse/query_def.ts\": 11,\n\t\"./lb/datasource\": 93,\n\t\"./lb/datasource.ts\": 93,\n\t\"./lb/query.ts\": 143,\n\t\"./lb/query_def.ts\": 55,\n\t\"./mongodb/datasource\": 94,\n\t\"./mongodb/datasource.ts\": 94,\n\t\"./mongodb/query.ts\": 144,\n\t\"./mongodb/query_def.ts\": 56,\n\t\"./mr/datasource\": 95,\n\t\"./mr/datasource.ts\": 95,\n\t\"./mr/query.ts\": 145,\n\t\"./mr/query_def.ts\": 49,\n\t\"./nat_gateway/datasource\": 96,\n\t\"./nat_gateway/datasource.ts\": 96,\n\t\"./nat_gateway/query.ts\": 146,\n\t\"./nat_gateway/query_def.ts\": 57,\n\t\"./ov_cdn/datasource\": 97,\n\t\"./ov_cdn/datasource.ts\": 97,\n\t\"./ov_cdn/query.ts\": 147,\n\t\"./ov_cdn/query_def.ts\": 58,\n\t\"./pcx/datasource\": 98,\n\t\"./pcx/datasource.ts\": 98,\n\t\"./pcx/query.ts\": 148,\n\t\"./pcx/query_def.ts\": 50,\n\t\"./postgresql/datasource\": 99,\n\t\"./postgresql/datasource.ts\": 99,\n\t\"./postgresql/query.ts\": 149,\n\t\"./postgresql/query_def.ts\": 31,\n\t\"./qaap/datasource\": 100,\n\t\"./qaap/datasource.ts\": 100,\n\t\"./qaap/query.ts\": 150,\n\t\"./qaap/query_def.ts\": 39,\n\t\"./redis/datasource\": 101,\n\t\"./redis/datasource.ts\": 101,\n\t\"./redis/query.ts\": 151,\n\t\"./redis/query_def.ts\": 51,\n\t\"./redis_mem/datasource\": 102,\n\t\"./redis_mem/datasource.ts\": 102,\n\t\"./redis_mem/query.ts\": 152,\n\t\"./redis_mem/query_def.ts\": 40,\n\t\"./scf/datasource\": 103,\n\t\"./scf/datasource.ts\": 103,\n\t\"./scf/query.ts\": 153,\n\t\"./scf/query_def.ts\": 19,\n\t\"./sqlserver/datasource\": 104,\n\t\"./sqlserver/datasource.ts\": 104,\n\t\"./sqlserver/query.ts\": 154,\n\t\"./sqlserver/query_def.ts\": 20,\n\t\"./tcaplus/datasource\": 105,\n\t\"./tcaplus/datasource.ts\": 105,\n\t\"./tcaplus/query.ts\": 155,\n\t\"./tcaplus/query_def.ts\": 32,\n\t\"./tdmq/datasource\": 106,\n\t\"./tdmq/datasource.ts\": 106,\n\t\"./tdmq/query.ts\": 156,\n\t\"./tdmq/query_def.ts\": 9,\n\t\"./v_clb/datasource\": 107,\n\t\"./v_clb/datasource.ts\": 107,\n\t\"./v_clb/query.ts\": 157,\n\t\"./v_clb/query_def.ts\": 17,\n\t\"./vbc/datasource\": 108,\n\t\"./vbc/datasource.ts\": 108,\n\t\"./vbc/query.ts\": 158,\n\t\"./vbc/query_def.ts\": 41,\n\t\"./vpc_net_detect/datasource\": 109,\n\t\"./vpc_net_detect/datasource.ts\": 109,\n\t\"./vpc_net_detect/query.ts\": 159,\n\t\"./vpc_net_detect/query_def.ts\": 33,\n\t\"./vpngw/datasource\": 110,\n\t\"./vpngw/datasource.ts\": 110,\n\t\"./vpngw/query.ts\": 160,\n\t\"./vpngw/query_def.ts\": 42,\n\t\"./vpnx/datasource\": 111,\n\t\"./vpnx/datasource.ts\": 111,\n\t\"./vpnx/query.ts\": 161,\n\t\"./vpnx/query_def.ts\": 43,\n\t\"./waf/datasource\": 112,\n\t\"./waf/datasource.ts\": 112,\n\t\"./waf/query.ts\": 162,\n\t\"./waf/query_def.ts\": 44\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 179;","'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching\n        return prefix + '[]';\n    },\n    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching\n        return prefix;\n    }\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaults = {\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar stringify = function stringify( // eslint-disable-line func-name-matching\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter,\n    encodeValuesOnly\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (Array.isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        if (Array.isArray(obj)) {\n            values = values.concat(stringify(\n                obj[key],\n                generateArrayPrefix(prefix, key),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly\n            ));\n        } else {\n            values = values.concat(stringify(\n                obj[key],\n                prefix + (allowDots ? '.' + key : '[' + key + ']'),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly\n            ));\n        }\n    }\n\n    return values;\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = opts ? utils.assign({}, opts) : {};\n\n    if (options.encoder !== null && options.encoder !== undefined && typeof options.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var delimiter = typeof options.delimiter === 'undefined' ? defaults.delimiter : options.delimiter;\n    var strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n    var skipNulls = typeof options.skipNulls === 'boolean' ? options.skipNulls : defaults.skipNulls;\n    var encode = typeof options.encode === 'boolean' ? options.encode : defaults.encode;\n    var encoder = typeof options.encoder === 'function' ? options.encoder : defaults.encoder;\n    var sort = typeof options.sort === 'function' ? options.sort : null;\n    var allowDots = typeof options.allowDots === 'undefined' ? false : options.allowDots;\n    var serializeDate = typeof options.serializeDate === 'function' ? options.serializeDate : defaults.serializeDate;\n    var encodeValuesOnly = typeof options.encodeValuesOnly === 'boolean' ? options.encodeValuesOnly : defaults.encodeValuesOnly;\n    if (typeof options.format === 'undefined') {\n        options.format = formats['default'];\n    } else if (!Object.prototype.hasOwnProperty.call(formats.formatters, options.format)) {\n        throw new TypeError('Unknown format option provided.');\n    }\n    var formatter = formats.formatters[options.format];\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (Array.isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (options.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = options.arrayFormat;\n    } else if ('indices' in options) {\n        arrayFormat = options.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (sort) {\n        objKeys.sort(sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        keys = keys.concat(stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            strictNullHandling,\n            skipNulls,\n            encode ? encoder : null,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            formatter,\n            encodeValuesOnly\n        ));\n    }\n\n    var joined = keys.join(delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    parameterLimit: 1000,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n\n    for (var i = 0; i < parts.length; ++i) {\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder);\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder);\n            val = options.decoder(part.slice(pos + 1), defaults.decoder);\n        }\n        if (has.call(obj, key)) {\n            obj[key] = [].concat(obj[key]).concat(val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options) {\n    var leaf = val;\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]') {\n            obj = [];\n            obj = obj.concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys\n        // that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while ((segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options);\n};\n\nmodule.exports = function (str, opts) {\n    var options = opts ? utils.assign({}, opts) : {};\n\n    if (options.decoder !== null && options.decoder !== undefined && typeof options.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    options.ignoreQueryPrefix = options.ignoreQueryPrefix === true;\n    options.delimiter = typeof options.delimiter === 'string' || utils.isRegExp(options.delimiter) ? options.delimiter : defaults.delimiter;\n    options.depth = typeof options.depth === 'number' ? options.depth : defaults.depth;\n    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : defaults.arrayLimit;\n    options.parseArrays = options.parseArrays !== false;\n    options.decoder = typeof options.decoder === 'function' ? options.decoder : defaults.decoder;\n    options.allowDots = typeof options.allowDots === 'boolean' ? options.allowDots : defaults.allowDots;\n    options.plainObjects = typeof options.plainObjects === 'boolean' ? options.plainObjects : defaults.plainObjects;\n    options.allowPrototypes = typeof options.allowPrototypes === 'boolean' ? options.allowPrototypes : defaults.allowPrototypes;\n    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : defaults.parameterLimit;\n    options.strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options);\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n","(function(){\n  var dotQs, prevDotQs, _this = this;\n\n  dotQs = {\n    options : {\n      arrayStyle : 'DOT', // DOT | BRANCKET\n    }\n  };\n\n  prevDotQs = this.dotQs;\n\n  //// cross-browser compatiblity functions ////\n\n  var toString = Object.prototype.toString;\n  var nativeIsArray = Array.isArray;\n\n  var isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) == '[object Array]';\n  };\n\n  var isObject = function(obj) {\n    return obj === Object(obj);\n  };\n\n  var _forEach = function (obj, iterator) {\n    if( isArray(obj)){\n      var arr = obj;\n      if (arr.forEach) {\n        arr.forEach(iterator);\n        return;\n      }\n      for (var i = 0; i < arr.length; i += 1) {\n        iterator(arr[i], i, arr);\n      }\n    }else{\n      for (var key in obj) {\n        if (obj.hasOwnProperty(key)) {\n          iterator( obj[key], key, obj);\n        }\n      }\n    }\n  };\n\n  var _reduce = function (arr, iterator, memo) {\n    if (arr.reduce) {\n      return arr.reduce(iterator, memo);\n    }\n    _forEach(arr, function (x, i, a) {\n      memo = iterator(memo, x, i, a);\n    });\n    return memo;\n  };\n\n  ///\n\n  if ((typeof module !== \"undefined\" && module !== null ? module.exports : void 0) != null) {\n    module.exports = dotQs;\n  } else {\n    dotQs.noConflict = function() {\n      _this.dotQs = prevDotQs;\n      return dotQs;\n    };\n    this.dotQs = dotQs;\n  }\n\n  var notint = /[^0-9]/;\n  var brancketSeparator = /\\.|\\[(\\d+)\\]/;\n  var initialBrancket = /^\\[(\\d+)\\]/;\n  dotQs.parse = function(str){\n    if(str === null || str === ''){\n      return {};\n    }\n\n    return _reduce(String(str).split('&'),function(ret, pair){\n      try{\n        pair = decodeURIComponent(pair.replace(/\\+/g, ' '));\n      } catch(e) {\n        // ignore\n      }\n      var epos = pair.indexOf('=');\n      var key , value;\n      if(epos == -1 ){\n        // key only\n        return {base : {}};\n      }else{\n        key = pair.substring(0, epos);\n        value = pair.substring(epos + 1);\n      }\n\n      var store = function(key,  base){\n\n        var baseKey, remainKey;\n        var brancketMatch\n        if(dotQs.options.arrayStyle === 'BRANCKET' && (brancketMatch = key.match(initialBrancket))){\n          baseKey = brancketMatch[1];\n          remainKey = key.substring(brancketMatch[0].length);\n        }else{\n          var spos;\n          if(dotQs.options.arrayStyle === 'BRANCKET'){\n            spos = key.search(brancketSeparator);\n          }else{\n            spos = key.indexOf('.');\n          }\n\n          if(spos == -1){\n            baseKey = key;\n            remainKey = null;\n          }else{\n            baseKey = key.substring(0, spos);\n            remainKey = key.substring(spos);\n          }\n        }\n        if(remainKey && remainKey[0] === '.'){\n          remainKey = remainKey.substring(1);\n        }\n\n        // store object\n        if(!notint.test(baseKey)){\n          // it's array\n          if(base && !isArray(base)){\n            // skip if base is not array\n            return base;\n          }\n          var index = parseInt(baseKey, 10);\n          base = base || [];\n          if(remainKey === null || remainKey === ''){\n            if(value === ''){\n              base[index] = null;\n            }else{\n              base[index] = value;\n            }\n          }else{\n            base[index] = store(remainKey, base[index]);\n          }\n          return base;\n        }else{\n          // it's object\n          if(base && isArray(base)){\n            // skip if base is array\n            return base;\n          }\n          base = base || {};\n          if(remainKey === null || remainKey === ''){\n            if(value === ''){\n              base[baseKey] = null;\n            }else{\n              base[baseKey] = value;\n            }\n          }else{\n            base[baseKey] = store(remainKey, base[baseKey]);\n          }\n          return base;\n        }\n      };\n      ret.base = store(key, ret.base);\n      return ret;\n    },{base : null}).base;\n  };\n\n  var flatten = dotQs.flatten = function(obj){\n    if(!isArray(obj) && !isObject(obj) ){\n      return true;\n    }\n\n    var ret = {};\n    var _dump = function(obj, prefix, parents){\n      var checkedParents = [];\n\n      if(parents){\n        var i;\n        for(i = 0; i < parents.length; i++){\n          if(parents[i] === obj){\n            throw new Error('object has circular references');\n          }\n          checkedParents.push(obj);\n        }\n      }\n      checkedParents.push(obj);\n      if(!isArray(obj) && !isObject(obj) ){\n        if(!prefix){\n          throw obj + \"is not object or array\";\n        }\n        ret[prefix] = obj;\n        return;\n      }\n\n      if(isArray(obj)){\n        // it's an array\n        _forEach(obj, function(obj, i){\n          if(dotQs.options.arrayStyle === 'BRANCKET'){\n            _dump(obj, (prefix || \"\") + \"[\" + i + \"]\", checkedParents);\n          }else{\n            _dump(obj, prefix ? prefix + \".\" + i : \"\" + i, checkedParents);\n          }\n        });\n      }else{\n        // it's an object\n        _forEach(obj, function(obj, key){\n          _dump(obj, prefix ? prefix + \".\" + key : \"\" + key, checkedParents);\n        });\n      }\n    };\n\n    _dump(obj, null);\n    return ret;\n  };\n\n  dotQs.stringify = function(obj){\n    var flats = flatten(obj);\n    var _buf = [];\n    _forEach(flats, function(val, key){\n      _buf.push(''+ encodeURIComponent(key) + '=' + encodeURIComponent(val));\n    });\n    return _buf.join('&');\n  };\n})();","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Check if typed arrays are supported\n\t    if (typeof ArrayBuffer != 'function') {\n\t        return;\n\t    }\n\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\n\t    // Reference original init\n\t    var superInit = WordArray.init;\n\n\t    // Augment WordArray.init to handle typed arrays\n\t    var subInit = WordArray.init = function (typedArray) {\n\t        // Convert buffers to uint8\n\t        if (typedArray instanceof ArrayBuffer) {\n\t            typedArray = new Uint8Array(typedArray);\n\t        }\n\n\t        // Convert other array views to uint8\n\t        if (\n\t            typedArray instanceof Int8Array ||\n\t            (typeof Uint8ClampedArray !== \"undefined\" && typedArray instanceof Uint8ClampedArray) ||\n\t            typedArray instanceof Int16Array ||\n\t            typedArray instanceof Uint16Array ||\n\t            typedArray instanceof Int32Array ||\n\t            typedArray instanceof Uint32Array ||\n\t            typedArray instanceof Float32Array ||\n\t            typedArray instanceof Float64Array\n\t        ) {\n\t            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n\t        }\n\n\t        // Handle Uint8Array\n\t        if (typedArray instanceof Uint8Array) {\n\t            // Shortcut\n\t            var typedArrayByteLength = typedArray.byteLength;\n\n\t            // Extract bytes\n\t            var words = [];\n\t            for (var i = 0; i < typedArrayByteLength; i++) {\n\t                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n\t            }\n\n\t            // Initialize this word array\n\t            superInit.call(this, words, typedArrayByteLength);\n\t        } else {\n\t            // Else call normal init\n\t            superInit.apply(this, arguments);\n\t        }\n\t    };\n\n\t    subInit.prototype = WordArray;\n\t}());\n\n\n\treturn CryptoJS.lib.WordArray;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * UTF-16 BE encoding strategy.\n\t     */\n\t    var Utf16BE = C_enc.Utf16 = C_enc.Utf16BE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 BE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 BE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = (words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff;\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 BE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 BE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= utf16Str.charCodeAt(i) << (16 - (i % 2) * 16);\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-16 LE encoding strategy.\n\t     */\n\t    C_enc.Utf16LE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 LE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 LE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = swapEndian((words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff);\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 LE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 LE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << (16 - (i % 2) * 16));\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    function swapEndian(word) {\n\t        return ((word << 8) & 0xff00ff00) | ((word >>> 8) & 0x00ff00ff);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Utf16;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha256\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha256\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA256 = C_algo.SHA256;\n\n\t    /**\n\t     * SHA-224 hash algorithm.\n\t     */\n\t    var SHA224 = C_algo.SHA224 = SHA256.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n\t                0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA256._doFinalize.call(this);\n\n\t            hash.sigBytes -= 4;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA224('message');\n\t     *     var hash = CryptoJS.SHA224(wordArray);\n\t     */\n\t    C.SHA224 = SHA256._createHelper(SHA224);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA224(message, key);\n\t     */\n\t    C.HmacSHA224 = SHA256._createHmacHelper(SHA224);\n\t}());\n\n\n\treturn CryptoJS.SHA224;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"), require(\"./sha512\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\", \"./sha512\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var X64WordArray = C_x64.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA512 = C_algo.SHA512;\n\n\t    /**\n\t     * SHA-384 hash algorithm.\n\t     */\n\t    var SHA384 = C_algo.SHA384 = SHA512.extend({\n\t        _doReset: function () {\n\t            this._hash = new X64WordArray.init([\n\t                new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507),\n\t                new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939),\n\t                new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511),\n\t                new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA512._doFinalize.call(this);\n\n\t            hash.sigBytes -= 16;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA384('message');\n\t     *     var hash = CryptoJS.SHA384(wordArray);\n\t     */\n\t    C.SHA384 = SHA512._createHelper(SHA384);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA384(message, key);\n\t     */\n\t    C.HmacSHA384 = SHA512._createHmacHelper(SHA384);\n\t}());\n\n\n\treturn CryptoJS.SHA384;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var C_algo = C.algo;\n\n\t    // Constants tables\n\t    var RHO_OFFSETS = [];\n\t    var PI_INDEXES  = [];\n\t    var ROUND_CONSTANTS = [];\n\n\t    // Compute Constants\n\t    (function () {\n\t        // Compute rho offset constants\n\t        var x = 1, y = 0;\n\t        for (var t = 0; t < 24; t++) {\n\t            RHO_OFFSETS[x + 5 * y] = ((t + 1) * (t + 2) / 2) % 64;\n\n\t            var newX = y % 5;\n\t            var newY = (2 * x + 3 * y) % 5;\n\t            x = newX;\n\t            y = newY;\n\t        }\n\n\t        // Compute pi index constants\n\t        for (var x = 0; x < 5; x++) {\n\t            for (var y = 0; y < 5; y++) {\n\t                PI_INDEXES[x + 5 * y] = y + ((2 * x + 3 * y) % 5) * 5;\n\t            }\n\t        }\n\n\t        // Compute round constants\n\t        var LFSR = 0x01;\n\t        for (var i = 0; i < 24; i++) {\n\t            var roundConstantMsw = 0;\n\t            var roundConstantLsw = 0;\n\n\t            for (var j = 0; j < 7; j++) {\n\t                if (LFSR & 0x01) {\n\t                    var bitPosition = (1 << j) - 1;\n\t                    if (bitPosition < 32) {\n\t                        roundConstantLsw ^= 1 << bitPosition;\n\t                    } else /* if (bitPosition >= 32) */ {\n\t                        roundConstantMsw ^= 1 << (bitPosition - 32);\n\t                    }\n\t                }\n\n\t                // Compute next LFSR\n\t                if (LFSR & 0x80) {\n\t                    // Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1\n\t                    LFSR = (LFSR << 1) ^ 0x71;\n\t                } else {\n\t                    LFSR <<= 1;\n\t                }\n\t            }\n\n\t            ROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);\n\t        }\n\t    }());\n\n\t    // Reusable objects for temporary values\n\t    var T = [];\n\t    (function () {\n\t        for (var i = 0; i < 25; i++) {\n\t            T[i] = X64Word.create();\n\t        }\n\t    }());\n\n\t    /**\n\t     * SHA-3 hash algorithm.\n\t     */\n\t    var SHA3 = C_algo.SHA3 = Hasher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} outputLength\n\t         *   The desired number of bits in the output hash.\n\t         *   Only values permitted are: 224, 256, 384, 512.\n\t         *   Default: 512\n\t         */\n\t        cfg: Hasher.cfg.extend({\n\t            outputLength: 512\n\t        }),\n\n\t        _doReset: function () {\n\t            var state = this._state = []\n\t            for (var i = 0; i < 25; i++) {\n\t                state[i] = new X64Word.init();\n\t            }\n\n\t            this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcuts\n\t            var state = this._state;\n\t            var nBlockSizeLanes = this.blockSize / 2;\n\n\t            // Absorb\n\t            for (var i = 0; i < nBlockSizeLanes; i++) {\n\t                // Shortcuts\n\t                var M2i  = M[offset + 2 * i];\n\t                var M2i1 = M[offset + 2 * i + 1];\n\n\t                // Swap endian\n\t                M2i = (\n\t                    (((M2i << 8)  | (M2i >>> 24)) & 0x00ff00ff) |\n\t                    (((M2i << 24) | (M2i >>> 8))  & 0xff00ff00)\n\t                );\n\t                M2i1 = (\n\t                    (((M2i1 << 8)  | (M2i1 >>> 24)) & 0x00ff00ff) |\n\t                    (((M2i1 << 24) | (M2i1 >>> 8))  & 0xff00ff00)\n\t                );\n\n\t                // Absorb message into state\n\t                var lane = state[i];\n\t                lane.high ^= M2i1;\n\t                lane.low  ^= M2i;\n\t            }\n\n\t            // Rounds\n\t            for (var round = 0; round < 24; round++) {\n\t                // Theta\n\t                for (var x = 0; x < 5; x++) {\n\t                    // Mix column lanes\n\t                    var tMsw = 0, tLsw = 0;\n\t                    for (var y = 0; y < 5; y++) {\n\t                        var lane = state[x + 5 * y];\n\t                        tMsw ^= lane.high;\n\t                        tLsw ^= lane.low;\n\t                    }\n\n\t                    // Temporary values\n\t                    var Tx = T[x];\n\t                    Tx.high = tMsw;\n\t                    Tx.low  = tLsw;\n\t                }\n\t                for (var x = 0; x < 5; x++) {\n\t                    // Shortcuts\n\t                    var Tx4 = T[(x + 4) % 5];\n\t                    var Tx1 = T[(x + 1) % 5];\n\t                    var Tx1Msw = Tx1.high;\n\t                    var Tx1Lsw = Tx1.low;\n\n\t                    // Mix surrounding columns\n\t                    var tMsw = Tx4.high ^ ((Tx1Msw << 1) | (Tx1Lsw >>> 31));\n\t                    var tLsw = Tx4.low  ^ ((Tx1Lsw << 1) | (Tx1Msw >>> 31));\n\t                    for (var y = 0; y < 5; y++) {\n\t                        var lane = state[x + 5 * y];\n\t                        lane.high ^= tMsw;\n\t                        lane.low  ^= tLsw;\n\t                    }\n\t                }\n\n\t                // Rho Pi\n\t                for (var laneIndex = 1; laneIndex < 25; laneIndex++) {\n\t                    // Shortcuts\n\t                    var lane = state[laneIndex];\n\t                    var laneMsw = lane.high;\n\t                    var laneLsw = lane.low;\n\t                    var rhoOffset = RHO_OFFSETS[laneIndex];\n\n\t                    // Rotate lanes\n\t                    if (rhoOffset < 32) {\n\t                        var tMsw = (laneMsw << rhoOffset) | (laneLsw >>> (32 - rhoOffset));\n\t                        var tLsw = (laneLsw << rhoOffset) | (laneMsw >>> (32 - rhoOffset));\n\t                    } else /* if (rhoOffset >= 32) */ {\n\t                        var tMsw = (laneLsw << (rhoOffset - 32)) | (laneMsw >>> (64 - rhoOffset));\n\t                        var tLsw = (laneMsw << (rhoOffset - 32)) | (laneLsw >>> (64 - rhoOffset));\n\t                    }\n\n\t                    // Transpose lanes\n\t                    var TPiLane = T[PI_INDEXES[laneIndex]];\n\t                    TPiLane.high = tMsw;\n\t                    TPiLane.low  = tLsw;\n\t                }\n\n\t                // Rho pi at x = y = 0\n\t                var T0 = T[0];\n\t                var state0 = state[0];\n\t                T0.high = state0.high;\n\t                T0.low  = state0.low;\n\n\t                // Chi\n\t                for (var x = 0; x < 5; x++) {\n\t                    for (var y = 0; y < 5; y++) {\n\t                        // Shortcuts\n\t                        var laneIndex = x + 5 * y;\n\t                        var lane = state[laneIndex];\n\t                        var TLane = T[laneIndex];\n\t                        var Tx1Lane = T[((x + 1) % 5) + 5 * y];\n\t                        var Tx2Lane = T[((x + 2) % 5) + 5 * y];\n\n\t                        // Mix rows\n\t                        lane.high = TLane.high ^ (~Tx1Lane.high & Tx2Lane.high);\n\t                        lane.low  = TLane.low  ^ (~Tx1Lane.low  & Tx2Lane.low);\n\t                    }\n\t                }\n\n\t                // Iota\n\t                var lane = state[0];\n\t                var roundConstant = ROUND_CONSTANTS[round];\n\t                lane.high ^= roundConstant.high;\n\t                lane.low  ^= roundConstant.low;;\n\t            }\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\t            var blockSizeBits = this.blockSize * 32;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x1 << (24 - nBitsLeft % 32);\n\t            dataWords[((Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits) >>> 5) - 1] |= 0x80;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var state = this._state;\n\t            var outputLengthBytes = this.cfg.outputLength / 8;\n\t            var outputLengthLanes = outputLengthBytes / 8;\n\n\t            // Squeeze\n\t            var hashWords = [];\n\t            for (var i = 0; i < outputLengthLanes; i++) {\n\t                // Shortcuts\n\t                var lane = state[i];\n\t                var laneMsw = lane.high;\n\t                var laneLsw = lane.low;\n\n\t                // Swap endian\n\t                laneMsw = (\n\t                    (((laneMsw << 8)  | (laneMsw >>> 24)) & 0x00ff00ff) |\n\t                    (((laneMsw << 24) | (laneMsw >>> 8))  & 0xff00ff00)\n\t                );\n\t                laneLsw = (\n\t                    (((laneLsw << 8)  | (laneLsw >>> 24)) & 0x00ff00ff) |\n\t                    (((laneLsw << 24) | (laneLsw >>> 8))  & 0xff00ff00)\n\t                );\n\n\t                // Squeeze state to retrieve hash\n\t                hashWords.push(laneLsw);\n\t                hashWords.push(laneMsw);\n\t            }\n\n\t            // Return final computed hash\n\t            return new WordArray.init(hashWords, outputLengthBytes);\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\n\t            var state = clone._state = this._state.slice(0);\n\t            for (var i = 0; i < 25; i++) {\n\t                state[i] = state[i].clone();\n\t            }\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA3('message');\n\t     *     var hash = CryptoJS.SHA3(wordArray);\n\t     */\n\t    C.SHA3 = Hasher._createHelper(SHA3);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA3(message, key);\n\t     */\n\t    C.HmacSHA3 = Hasher._createHmacHelper(SHA3);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA3;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/** @preserve\n\t(c) 2012 by Cédric Mesnil. All rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n\t    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\t    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n\tTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t*/\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var _zl = WordArray.create([\n\t        0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n\t        7,  4, 13,  1, 10,  6, 15,  3, 12,  0,  9,  5,  2, 14, 11,  8,\n\t        3, 10, 14,  4,  9, 15,  8,  1,  2,  7,  0,  6, 13, 11,  5, 12,\n\t        1,  9, 11, 10,  0,  8, 12,  4, 13,  3,  7, 15, 14,  5,  6,  2,\n\t        4,  0,  5,  9,  7, 12,  2, 10, 14,  1,  3,  8, 11,  6, 15, 13]);\n\t    var _zr = WordArray.create([\n\t        5, 14,  7,  0,  9,  2, 11,  4, 13,  6, 15,  8,  1, 10,  3, 12,\n\t        6, 11,  3,  7,  0, 13,  5, 10, 14, 15,  8, 12,  4,  9,  1,  2,\n\t        15,  5,  1,  3,  7, 14,  6,  9, 11,  8, 12,  2, 10,  0,  4, 13,\n\t        8,  6,  4,  1,  3, 11, 15,  0,  5, 12,  2, 13,  9,  7, 10, 14,\n\t        12, 15, 10,  4,  1,  5,  8,  7,  6,  2, 13, 14,  0,  3,  9, 11]);\n\t    var _sl = WordArray.create([\n\t         11, 14, 15, 12,  5,  8,  7,  9, 11, 13, 14, 15,  6,  7,  9,  8,\n\t        7, 6,   8, 13, 11,  9,  7, 15,  7, 12, 15,  9, 11,  7, 13, 12,\n\t        11, 13,  6,  7, 14,  9, 13, 15, 14,  8, 13,  6,  5, 12,  7,  5,\n\t          11, 12, 14, 15, 14, 15,  9,  8,  9, 14,  5,  6,  8,  6,  5, 12,\n\t        9, 15,  5, 11,  6,  8, 13, 12,  5, 12, 13, 14, 11,  8,  5,  6 ]);\n\t    var _sr = WordArray.create([\n\t        8,  9,  9, 11, 13, 15, 15,  5,  7,  7,  8, 11, 14, 14, 12,  6,\n\t        9, 13, 15,  7, 12,  8,  9, 11,  7,  7, 12,  7,  6, 15, 13, 11,\n\t        9,  7, 15, 11,  8,  6,  6, 14, 12, 13,  5, 14, 13, 13,  7,  5,\n\t        15,  5,  8, 11, 14, 14,  6, 14,  6,  9, 12,  9, 12,  5, 15,  8,\n\t        8,  5, 12,  9, 12,  5, 14,  6,  8, 13,  6,  5, 15, 13, 11, 11 ]);\n\n\t    var _hl =  WordArray.create([ 0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);\n\t    var _hr =  WordArray.create([ 0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);\n\n\t    /**\n\t     * RIPEMD160 hash algorithm.\n\t     */\n\t    var RIPEMD160 = C_algo.RIPEMD160 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash  = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                // Swap\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\t            // Shortcut\n\t            var H  = this._hash.words;\n\t            var hl = _hl.words;\n\t            var hr = _hr.words;\n\t            var zl = _zl.words;\n\t            var zr = _zr.words;\n\t            var sl = _sl.words;\n\t            var sr = _sr.words;\n\n\t            // Working variables\n\t            var al, bl, cl, dl, el;\n\t            var ar, br, cr, dr, er;\n\n\t            ar = al = H[0];\n\t            br = bl = H[1];\n\t            cr = cl = H[2];\n\t            dr = dl = H[3];\n\t            er = el = H[4];\n\t            // Computation\n\t            var t;\n\t            for (var i = 0; i < 80; i += 1) {\n\t                t = (al +  M[offset+zl[i]])|0;\n\t                if (i<16){\n\t\t            t +=  f1(bl,cl,dl) + hl[0];\n\t                } else if (i<32) {\n\t\t            t +=  f2(bl,cl,dl) + hl[1];\n\t                } else if (i<48) {\n\t\t            t +=  f3(bl,cl,dl) + hl[2];\n\t                } else if (i<64) {\n\t\t            t +=  f4(bl,cl,dl) + hl[3];\n\t                } else {// if (i<80) {\n\t\t            t +=  f5(bl,cl,dl) + hl[4];\n\t                }\n\t                t = t|0;\n\t                t =  rotl(t,sl[i]);\n\t                t = (t+el)|0;\n\t                al = el;\n\t                el = dl;\n\t                dl = rotl(cl, 10);\n\t                cl = bl;\n\t                bl = t;\n\n\t                t = (ar + M[offset+zr[i]])|0;\n\t                if (i<16){\n\t\t            t +=  f5(br,cr,dr) + hr[0];\n\t                } else if (i<32) {\n\t\t            t +=  f4(br,cr,dr) + hr[1];\n\t                } else if (i<48) {\n\t\t            t +=  f3(br,cr,dr) + hr[2];\n\t                } else if (i<64) {\n\t\t            t +=  f2(br,cr,dr) + hr[3];\n\t                } else {// if (i<80) {\n\t\t            t +=  f1(br,cr,dr) + hr[4];\n\t                }\n\t                t = t|0;\n\t                t =  rotl(t,sr[i]) ;\n\t                t = (t+er)|0;\n\t                ar = er;\n\t                er = dr;\n\t                dr = rotl(cr, 10);\n\t                cr = br;\n\t                br = t;\n\t            }\n\t            // Intermediate hash value\n\t            t    = (H[1] + cl + dr)|0;\n\t            H[1] = (H[2] + dl + er)|0;\n\t            H[2] = (H[3] + el + ar)|0;\n\t            H[3] = (H[4] + al + br)|0;\n\t            H[4] = (H[0] + bl + cr)|0;\n\t            H[0] =  t;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotal << 8)  | (nBitsTotal >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotal << 24) | (nBitsTotal >>> 8))  & 0xff00ff00)\n\t            );\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 5; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                // Swap\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\n\t    function f1(x, y, z) {\n\t        return ((x) ^ (y) ^ (z));\n\n\t    }\n\n\t    function f2(x, y, z) {\n\t        return (((x)&(y)) | ((~x)&(z)));\n\t    }\n\n\t    function f3(x, y, z) {\n\t        return (((x) | (~(y))) ^ (z));\n\t    }\n\n\t    function f4(x, y, z) {\n\t        return (((x) & (z)) | ((y)&(~(z))));\n\t    }\n\n\t    function f5(x, y, z) {\n\t        return ((x) ^ ((y) |(~(z))));\n\n\t    }\n\n\t    function rotl(x,n) {\n\t        return (x<<n) | (x>>>(32-n));\n\t    }\n\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.RIPEMD160('message');\n\t     *     var hash = CryptoJS.RIPEMD160(wordArray);\n\t     */\n\t    C.RIPEMD160 = Hasher._createHelper(RIPEMD160);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacRIPEMD160(message, key);\n\t     */\n\t    C.HmacRIPEMD160 = Hasher._createHmacHelper(RIPEMD160);\n\t}(Math));\n\n\n\treturn CryptoJS.RIPEMD160;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha1\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha1\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA1 = C_algo.SHA1;\n\t    var HMAC = C_algo.HMAC;\n\n\t    /**\n\t     * Password-Based Key Derivation Function 2 algorithm.\n\t     */\n\t    var PBKDF2 = C_algo.PBKDF2 = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hasher to use. Default: SHA1\n\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: SHA1,\n\t            iterations: 1\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create();\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Computes the Password-Based Key Derivation Function 2.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init HMAC\n\t            var hmac = HMAC.create(cfg.hasher, password);\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\t            var blockIndex = WordArray.create([0x00000001]);\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var blockIndexWords = blockIndex.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                var block = hmac.update(salt).finalize(blockIndex);\n\t                hmac.reset();\n\n\t                // Shortcuts\n\t                var blockWords = block.words;\n\t                var blockWordsLength = blockWords.length;\n\n\t                // Iterations\n\t                var intermediate = block;\n\t                for (var i = 1; i < iterations; i++) {\n\t                    intermediate = hmac.finalize(intermediate);\n\t                    hmac.reset();\n\n\t                    // Shortcut\n\t                    var intermediateWords = intermediate.words;\n\n\t                    // XOR intermediate with block\n\t                    for (var j = 0; j < blockWordsLength; j++) {\n\t                        blockWords[j] ^= intermediateWords[j];\n\t                    }\n\t                }\n\n\t                derivedKey.concat(block);\n\t                blockIndexWords[0]++;\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Computes the Password-Based Key Derivation Function 2.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.PBKDF2(password, salt);\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.PBKDF2 = function (password, salt, cfg) {\n\t        return PBKDF2.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.PBKDF2;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher Feedback block mode.\n\t */\n\tCryptoJS.mode.CFB = (function () {\n\t    var CFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    CFB.Encryptor = CFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher;\n\t            var blockSize = cipher.blockSize;\n\n\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n\t            // Remember this block to use with next block\n\t            this._prevBlock = words.slice(offset, offset + blockSize);\n\t        }\n\t    });\n\n\t    CFB.Decryptor = CFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher;\n\t            var blockSize = cipher.blockSize;\n\n\t            // Remember this block to use with next block\n\t            var thisBlock = words.slice(offset, offset + blockSize);\n\n\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n\t            // This block becomes the previous block\n\t            this._prevBlock = thisBlock;\n\t        }\n\t    });\n\n\t    function generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {\n\t        // Shortcut\n\t        var iv = this._iv;\n\n\t        // Generate keystream\n\t        if (iv) {\n\t            var keystream = iv.slice(0);\n\n\t            // Remove IV for subsequent blocks\n\t            this._iv = undefined;\n\t        } else {\n\t            var keystream = this._prevBlock;\n\t        }\n\t        cipher.encryptBlock(keystream, 0);\n\n\t        // Encrypt\n\t        for (var i = 0; i < blockSize; i++) {\n\t            words[offset + i] ^= keystream[i];\n\t        }\n\t    }\n\n\t    return CFB;\n\t}());\n\n\n\treturn CryptoJS.mode.CFB;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Counter block mode.\n\t */\n\tCryptoJS.mode.CTR = (function () {\n\t    var CTR = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = CTR.Encryptor = CTR.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            var keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Increment counter\n\t            counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTR.Decryptor = Encryptor;\n\n\t    return CTR;\n\t}());\n\n\n\treturn CryptoJS.mode.CTR;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/** @preserve\n\t * Counter block mode compatible with  Dr Brian Gladman fileenc.c\n\t * derived from CryptoJS.mode.CTR\n\t * Jan Hruby jhruby.web@gmail.com\n\t */\n\tCryptoJS.mode.CTRGladman = (function () {\n\t    var CTRGladman = CryptoJS.lib.BlockCipherMode.extend();\n\n\t\tfunction incWord(word)\n\t\t{\n\t\t\tif (((word >> 24) & 0xff) === 0xff) { //overflow\n\t\t\tvar b1 = (word >> 16)&0xff;\n\t\t\tvar b2 = (word >> 8)&0xff;\n\t\t\tvar b3 = word & 0xff;\n\n\t\t\tif (b1 === 0xff) // overflow b1\n\t\t\t{\n\t\t\tb1 = 0;\n\t\t\tif (b2 === 0xff)\n\t\t\t{\n\t\t\t\tb2 = 0;\n\t\t\t\tif (b3 === 0xff)\n\t\t\t\t{\n\t\t\t\t\tb3 = 0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t++b3;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t++b2;\n\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t++b1;\n\t\t\t}\n\n\t\t\tword = 0;\n\t\t\tword += (b1 << 16);\n\t\t\tword += (b2 << 8);\n\t\t\tword += b3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\tword += (0x01 << 24);\n\t\t\t}\n\t\t\treturn word;\n\t\t}\n\n\t\tfunction incCounter(counter)\n\t\t{\n\t\t\tif ((counter[0] = incWord(counter[0])) === 0)\n\t\t\t{\n\t\t\t\t// encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8\n\t\t\t\tcounter[1] = incWord(counter[1]);\n\t\t\t}\n\t\t\treturn counter;\n\t\t}\n\n\t    var Encryptor = CTRGladman.Encryptor = CTRGladman.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\n\t\t\t\tincCounter(counter);\n\n\t\t\t\tvar keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTRGladman.Decryptor = Encryptor;\n\n\t    return CTRGladman;\n\t}());\n\n\n\n\n\treturn CryptoJS.mode.CTRGladman;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Output Feedback block mode.\n\t */\n\tCryptoJS.mode.OFB = (function () {\n\t    var OFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = OFB.Encryptor = OFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var keystream = this._keystream;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                keystream = this._keystream = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    OFB.Decryptor = Encryptor;\n\n\t    return OFB;\n\t}());\n\n\n\treturn CryptoJS.mode.OFB;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Electronic Codebook block mode.\n\t */\n\tCryptoJS.mode.ECB = (function () {\n\t    var ECB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    ECB.Encryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.encryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    ECB.Decryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.decryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    return ECB;\n\t}());\n\n\n\treturn CryptoJS.mode.ECB;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ANSI X.923 padding strategy.\n\t */\n\tCryptoJS.pad.AnsiX923 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcuts\n\t        var dataSigBytes = data.sigBytes;\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;\n\n\t        // Compute last byte position\n\t        var lastBytePos = dataSigBytes + nPaddingBytes - 1;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.words[lastBytePos >>> 2] |= nPaddingBytes << (24 - (lastBytePos % 4) * 8);\n\t        data.sigBytes += nPaddingBytes;\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Ansix923;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ISO 10126 padding strategy.\n\t */\n\tCryptoJS.pad.Iso10126 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcut\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t        // Pad\n\t        data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - 1)).\n\t             concat(CryptoJS.lib.WordArray.create([nPaddingBytes << 24], 1));\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Iso10126;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ISO/IEC 9797-1 Padding Method 2.\n\t */\n\tCryptoJS.pad.Iso97971 = {\n\t    pad: function (data, blockSize) {\n\t        // Add 0x80 byte\n\t        data.concat(CryptoJS.lib.WordArray.create([0x80000000], 1));\n\n\t        // Zero pad the rest\n\t        CryptoJS.pad.ZeroPadding.pad(data, blockSize);\n\t    },\n\n\t    unpad: function (data) {\n\t        // Remove zero padding\n\t        CryptoJS.pad.ZeroPadding.unpad(data);\n\n\t        // Remove one more byte -- the 0x80 byte\n\t        data.sigBytes--;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Iso97971;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Zero padding strategy.\n\t */\n\tCryptoJS.pad.ZeroPadding = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcut\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.sigBytes += blockSizeBytes - ((data.sigBytes % blockSizeBytes) || blockSizeBytes);\n\t    },\n\n\t    unpad: function (data) {\n\t        // Shortcut\n\t        var dataWords = data.words;\n\n\t        // Unpad\n\t        var i = data.sigBytes - 1;\n\t        while (!((dataWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff)) {\n\t            i--;\n\t        }\n\t        data.sigBytes = i + 1;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.ZeroPadding;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * A noop padding strategy.\n\t */\n\tCryptoJS.pad.NoPadding = {\n\t    pad: function () {\n\t    },\n\n\t    unpad: function () {\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.NoPadding;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var CipherParams = C_lib.CipherParams;\n\t    var C_enc = C.enc;\n\t    var Hex = C_enc.Hex;\n\t    var C_format = C.format;\n\n\t    var HexFormatter = C_format.Hex = {\n\t        /**\n\t         * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The hexadecimally encoded string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            return cipherParams.ciphertext.toString(Hex);\n\t        },\n\n\t        /**\n\t         * Converts a hexadecimally encoded ciphertext string to a cipher params object.\n\t         *\n\t         * @param {string} input The hexadecimally encoded string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.Hex.parse(hexString);\n\t         */\n\t        parse: function (input) {\n\t            var ciphertext = Hex.parse(input);\n\t            return CipherParams.create({ ciphertext: ciphertext });\n\t        }\n\t    };\n\t}());\n\n\n\treturn CryptoJS.format.Hex;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Lookup tables\n\t    var SBOX = [];\n\t    var INV_SBOX = [];\n\t    var SUB_MIX_0 = [];\n\t    var SUB_MIX_1 = [];\n\t    var SUB_MIX_2 = [];\n\t    var SUB_MIX_3 = [];\n\t    var INV_SUB_MIX_0 = [];\n\t    var INV_SUB_MIX_1 = [];\n\t    var INV_SUB_MIX_2 = [];\n\t    var INV_SUB_MIX_3 = [];\n\n\t    // Compute lookup tables\n\t    (function () {\n\t        // Compute double table\n\t        var d = [];\n\t        for (var i = 0; i < 256; i++) {\n\t            if (i < 128) {\n\t                d[i] = i << 1;\n\t            } else {\n\t                d[i] = (i << 1) ^ 0x11b;\n\t            }\n\t        }\n\n\t        // Walk GF(2^8)\n\t        var x = 0;\n\t        var xi = 0;\n\t        for (var i = 0; i < 256; i++) {\n\t            // Compute sbox\n\t            var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n\t            sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n\t            SBOX[x] = sx;\n\t            INV_SBOX[sx] = x;\n\n\t            // Compute multiplication\n\t            var x2 = d[x];\n\t            var x4 = d[x2];\n\t            var x8 = d[x4];\n\n\t            // Compute sub bytes, mix columns tables\n\t            var t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n\t            SUB_MIX_0[x] = (t << 24) | (t >>> 8);\n\t            SUB_MIX_1[x] = (t << 16) | (t >>> 16);\n\t            SUB_MIX_2[x] = (t << 8)  | (t >>> 24);\n\t            SUB_MIX_3[x] = t;\n\n\t            // Compute inv sub bytes, inv mix columns tables\n\t            var t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n\t            INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);\n\t            INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);\n\t            INV_SUB_MIX_2[sx] = (t << 8)  | (t >>> 24);\n\t            INV_SUB_MIX_3[sx] = t;\n\n\t            // Compute next counter\n\t            if (!x) {\n\t                x = xi = 1;\n\t            } else {\n\t                x = x2 ^ d[d[d[x8 ^ x2]]];\n\t                xi ^= d[d[xi]];\n\t            }\n\t        }\n\t    }());\n\n\t    // Precomputed Rcon lookup\n\t    var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\n\t    /**\n\t     * AES block cipher algorithm.\n\t     */\n\t    var AES = C_algo.AES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Skip reset of nRounds has been set before and key did not change\n\t            if (this._nRounds && this._keyPriorReset === this._key) {\n\t                return;\n\t            }\n\n\t            // Shortcuts\n\t            var key = this._keyPriorReset = this._key;\n\t            var keyWords = key.words;\n\t            var keySize = key.sigBytes / 4;\n\n\t            // Compute number of rounds\n\t            var nRounds = this._nRounds = keySize + 6;\n\n\t            // Compute number of key schedule rows\n\t            var ksRows = (nRounds + 1) * 4;\n\n\t            // Compute key schedule\n\t            var keySchedule = this._keySchedule = [];\n\t            for (var ksRow = 0; ksRow < ksRows; ksRow++) {\n\t                if (ksRow < keySize) {\n\t                    keySchedule[ksRow] = keyWords[ksRow];\n\t                } else {\n\t                    var t = keySchedule[ksRow - 1];\n\n\t                    if (!(ksRow % keySize)) {\n\t                        // Rot word\n\t                        t = (t << 8) | (t >>> 24);\n\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\n\t                        // Mix Rcon\n\t                        t ^= RCON[(ksRow / keySize) | 0] << 24;\n\t                    } else if (keySize > 6 && ksRow % keySize == 4) {\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\t                    }\n\n\t                    keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\n\t                }\n\t            }\n\n\t            // Compute inv key schedule\n\t            var invKeySchedule = this._invKeySchedule = [];\n\t            for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n\t                var ksRow = ksRows - invKsRow;\n\n\t                if (invKsRow % 4) {\n\t                    var t = keySchedule[ksRow];\n\t                } else {\n\t                    var t = keySchedule[ksRow - 4];\n\t                }\n\n\t                if (invKsRow < 4 || ksRow <= 4) {\n\t                    invKeySchedule[invKsRow] = t;\n\t                } else {\n\t                    invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[(t >>> 16) & 0xff]] ^\n\t                                               INV_SUB_MIX_2[SBOX[(t >>> 8) & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];\n\t                }\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            // Swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\n\t            this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);\n\n\t            // Inv swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\t        },\n\n\t        _doCryptBlock: function (M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\n\t            // Shortcut\n\t            var nRounds = this._nRounds;\n\n\t            // Get input, add round key\n\t            var s0 = M[offset]     ^ keySchedule[0];\n\t            var s1 = M[offset + 1] ^ keySchedule[1];\n\t            var s2 = M[offset + 2] ^ keySchedule[2];\n\t            var s3 = M[offset + 3] ^ keySchedule[3];\n\n\t            // Key schedule row counter\n\t            var ksRow = 4;\n\n\t            // Rounds\n\t            for (var round = 1; round < nRounds; round++) {\n\t                // Shift rows, sub bytes, mix columns, add round key\n\t                var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[(s1 >>> 16) & 0xff] ^ SUB_MIX_2[(s2 >>> 8) & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];\n\t                var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[(s2 >>> 16) & 0xff] ^ SUB_MIX_2[(s3 >>> 8) & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];\n\t                var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[(s3 >>> 16) & 0xff] ^ SUB_MIX_2[(s0 >>> 8) & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];\n\t                var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[(s0 >>> 16) & 0xff] ^ SUB_MIX_2[(s1 >>> 8) & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];\n\n\t                // Update state\n\t                s0 = t0;\n\t                s1 = t1;\n\t                s2 = t2;\n\t                s3 = t3;\n\t            }\n\n\t            // Shift rows, sub bytes, add round key\n\t            var t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];\n\n\t            // Set output\n\t            M[offset]     = t0;\n\t            M[offset + 1] = t1;\n\t            M[offset + 2] = t2;\n\t            M[offset + 3] = t3;\n\t        },\n\n\t        keySize: 256/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.AES = BlockCipher._createHelper(AES);\n\t}());\n\n\n\treturn CryptoJS.AES;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Permuted Choice 1 constants\n\t    var PC1 = [\n\t        57, 49, 41, 33, 25, 17, 9,  1,\n\t        58, 50, 42, 34, 26, 18, 10, 2,\n\t        59, 51, 43, 35, 27, 19, 11, 3,\n\t        60, 52, 44, 36, 63, 55, 47, 39,\n\t        31, 23, 15, 7,  62, 54, 46, 38,\n\t        30, 22, 14, 6,  61, 53, 45, 37,\n\t        29, 21, 13, 5,  28, 20, 12, 4\n\t    ];\n\n\t    // Permuted Choice 2 constants\n\t    var PC2 = [\n\t        14, 17, 11, 24, 1,  5,\n\t        3,  28, 15, 6,  21, 10,\n\t        23, 19, 12, 4,  26, 8,\n\t        16, 7,  27, 20, 13, 2,\n\t        41, 52, 31, 37, 47, 55,\n\t        30, 40, 51, 45, 33, 48,\n\t        44, 49, 39, 56, 34, 53,\n\t        46, 42, 50, 36, 29, 32\n\t    ];\n\n\t    // Cumulative bit shift constants\n\t    var BIT_SHIFTS = [1,  2,  4,  6,  8,  10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];\n\n\t    // SBOXes and round permutation constants\n\t    var SBOX_P = [\n\t        {\n\t            0x0: 0x808200,\n\t            0x10000000: 0x8000,\n\t            0x20000000: 0x808002,\n\t            0x30000000: 0x2,\n\t            0x40000000: 0x200,\n\t            0x50000000: 0x808202,\n\t            0x60000000: 0x800202,\n\t            0x70000000: 0x800000,\n\t            0x80000000: 0x202,\n\t            0x90000000: 0x800200,\n\t            0xa0000000: 0x8200,\n\t            0xb0000000: 0x808000,\n\t            0xc0000000: 0x8002,\n\t            0xd0000000: 0x800002,\n\t            0xe0000000: 0x0,\n\t            0xf0000000: 0x8202,\n\t            0x8000000: 0x0,\n\t            0x18000000: 0x808202,\n\t            0x28000000: 0x8202,\n\t            0x38000000: 0x8000,\n\t            0x48000000: 0x808200,\n\t            0x58000000: 0x200,\n\t            0x68000000: 0x808002,\n\t            0x78000000: 0x2,\n\t            0x88000000: 0x800200,\n\t            0x98000000: 0x8200,\n\t            0xa8000000: 0x808000,\n\t            0xb8000000: 0x800202,\n\t            0xc8000000: 0x800002,\n\t            0xd8000000: 0x8002,\n\t            0xe8000000: 0x202,\n\t            0xf8000000: 0x800000,\n\t            0x1: 0x8000,\n\t            0x10000001: 0x2,\n\t            0x20000001: 0x808200,\n\t            0x30000001: 0x800000,\n\t            0x40000001: 0x808002,\n\t            0x50000001: 0x8200,\n\t            0x60000001: 0x200,\n\t            0x70000001: 0x800202,\n\t            0x80000001: 0x808202,\n\t            0x90000001: 0x808000,\n\t            0xa0000001: 0x800002,\n\t            0xb0000001: 0x8202,\n\t            0xc0000001: 0x202,\n\t            0xd0000001: 0x800200,\n\t            0xe0000001: 0x8002,\n\t            0xf0000001: 0x0,\n\t            0x8000001: 0x808202,\n\t            0x18000001: 0x808000,\n\t            0x28000001: 0x800000,\n\t            0x38000001: 0x200,\n\t            0x48000001: 0x8000,\n\t            0x58000001: 0x800002,\n\t            0x68000001: 0x2,\n\t            0x78000001: 0x8202,\n\t            0x88000001: 0x8002,\n\t            0x98000001: 0x800202,\n\t            0xa8000001: 0x202,\n\t            0xb8000001: 0x808200,\n\t            0xc8000001: 0x800200,\n\t            0xd8000001: 0x0,\n\t            0xe8000001: 0x8200,\n\t            0xf8000001: 0x808002\n\t        },\n\t        {\n\t            0x0: 0x40084010,\n\t            0x1000000: 0x4000,\n\t            0x2000000: 0x80000,\n\t            0x3000000: 0x40080010,\n\t            0x4000000: 0x40000010,\n\t            0x5000000: 0x40084000,\n\t            0x6000000: 0x40004000,\n\t            0x7000000: 0x10,\n\t            0x8000000: 0x84000,\n\t            0x9000000: 0x40004010,\n\t            0xa000000: 0x40000000,\n\t            0xb000000: 0x84010,\n\t            0xc000000: 0x80010,\n\t            0xd000000: 0x0,\n\t            0xe000000: 0x4010,\n\t            0xf000000: 0x40080000,\n\t            0x800000: 0x40004000,\n\t            0x1800000: 0x84010,\n\t            0x2800000: 0x10,\n\t            0x3800000: 0x40004010,\n\t            0x4800000: 0x40084010,\n\t            0x5800000: 0x40000000,\n\t            0x6800000: 0x80000,\n\t            0x7800000: 0x40080010,\n\t            0x8800000: 0x80010,\n\t            0x9800000: 0x0,\n\t            0xa800000: 0x4000,\n\t            0xb800000: 0x40080000,\n\t            0xc800000: 0x40000010,\n\t            0xd800000: 0x84000,\n\t            0xe800000: 0x40084000,\n\t            0xf800000: 0x4010,\n\t            0x10000000: 0x0,\n\t            0x11000000: 0x40080010,\n\t            0x12000000: 0x40004010,\n\t            0x13000000: 0x40084000,\n\t            0x14000000: 0x40080000,\n\t            0x15000000: 0x10,\n\t            0x16000000: 0x84010,\n\t            0x17000000: 0x4000,\n\t            0x18000000: 0x4010,\n\t            0x19000000: 0x80000,\n\t            0x1a000000: 0x80010,\n\t            0x1b000000: 0x40000010,\n\t            0x1c000000: 0x84000,\n\t            0x1d000000: 0x40004000,\n\t            0x1e000000: 0x40000000,\n\t            0x1f000000: 0x40084010,\n\t            0x10800000: 0x84010,\n\t            0x11800000: 0x80000,\n\t            0x12800000: 0x40080000,\n\t            0x13800000: 0x4000,\n\t            0x14800000: 0x40004000,\n\t            0x15800000: 0x40084010,\n\t            0x16800000: 0x10,\n\t            0x17800000: 0x40000000,\n\t            0x18800000: 0x40084000,\n\t            0x19800000: 0x40000010,\n\t            0x1a800000: 0x40004010,\n\t            0x1b800000: 0x80010,\n\t            0x1c800000: 0x0,\n\t            0x1d800000: 0x4010,\n\t            0x1e800000: 0x40080010,\n\t            0x1f800000: 0x84000\n\t        },\n\t        {\n\t            0x0: 0x104,\n\t            0x100000: 0x0,\n\t            0x200000: 0x4000100,\n\t            0x300000: 0x10104,\n\t            0x400000: 0x10004,\n\t            0x500000: 0x4000004,\n\t            0x600000: 0x4010104,\n\t            0x700000: 0x4010000,\n\t            0x800000: 0x4000000,\n\t            0x900000: 0x4010100,\n\t            0xa00000: 0x10100,\n\t            0xb00000: 0x4010004,\n\t            0xc00000: 0x4000104,\n\t            0xd00000: 0x10000,\n\t            0xe00000: 0x4,\n\t            0xf00000: 0x100,\n\t            0x80000: 0x4010100,\n\t            0x180000: 0x4010004,\n\t            0x280000: 0x0,\n\t            0x380000: 0x4000100,\n\t            0x480000: 0x4000004,\n\t            0x580000: 0x10000,\n\t            0x680000: 0x10004,\n\t            0x780000: 0x104,\n\t            0x880000: 0x4,\n\t            0x980000: 0x100,\n\t            0xa80000: 0x4010000,\n\t            0xb80000: 0x10104,\n\t            0xc80000: 0x10100,\n\t            0xd80000: 0x4000104,\n\t            0xe80000: 0x4010104,\n\t            0xf80000: 0x4000000,\n\t            0x1000000: 0x4010100,\n\t            0x1100000: 0x10004,\n\t            0x1200000: 0x10000,\n\t            0x1300000: 0x4000100,\n\t            0x1400000: 0x100,\n\t            0x1500000: 0x4010104,\n\t            0x1600000: 0x4000004,\n\t            0x1700000: 0x0,\n\t            0x1800000: 0x4000104,\n\t            0x1900000: 0x4000000,\n\t            0x1a00000: 0x4,\n\t            0x1b00000: 0x10100,\n\t            0x1c00000: 0x4010000,\n\t            0x1d00000: 0x104,\n\t            0x1e00000: 0x10104,\n\t            0x1f00000: 0x4010004,\n\t            0x1080000: 0x4000000,\n\t            0x1180000: 0x104,\n\t            0x1280000: 0x4010100,\n\t            0x1380000: 0x0,\n\t            0x1480000: 0x10004,\n\t            0x1580000: 0x4000100,\n\t            0x1680000: 0x100,\n\t            0x1780000: 0x4010004,\n\t            0x1880000: 0x10000,\n\t            0x1980000: 0x4010104,\n\t            0x1a80000: 0x10104,\n\t            0x1b80000: 0x4000004,\n\t            0x1c80000: 0x4000104,\n\t            0x1d80000: 0x4010000,\n\t            0x1e80000: 0x4,\n\t            0x1f80000: 0x10100\n\t        },\n\t        {\n\t            0x0: 0x80401000,\n\t            0x10000: 0x80001040,\n\t            0x20000: 0x401040,\n\t            0x30000: 0x80400000,\n\t            0x40000: 0x0,\n\t            0x50000: 0x401000,\n\t            0x60000: 0x80000040,\n\t            0x70000: 0x400040,\n\t            0x80000: 0x80000000,\n\t            0x90000: 0x400000,\n\t            0xa0000: 0x40,\n\t            0xb0000: 0x80001000,\n\t            0xc0000: 0x80400040,\n\t            0xd0000: 0x1040,\n\t            0xe0000: 0x1000,\n\t            0xf0000: 0x80401040,\n\t            0x8000: 0x80001040,\n\t            0x18000: 0x40,\n\t            0x28000: 0x80400040,\n\t            0x38000: 0x80001000,\n\t            0x48000: 0x401000,\n\t            0x58000: 0x80401040,\n\t            0x68000: 0x0,\n\t            0x78000: 0x80400000,\n\t            0x88000: 0x1000,\n\t            0x98000: 0x80401000,\n\t            0xa8000: 0x400000,\n\t            0xb8000: 0x1040,\n\t            0xc8000: 0x80000000,\n\t            0xd8000: 0x400040,\n\t            0xe8000: 0x401040,\n\t            0xf8000: 0x80000040,\n\t            0x100000: 0x400040,\n\t            0x110000: 0x401000,\n\t            0x120000: 0x80000040,\n\t            0x130000: 0x0,\n\t            0x140000: 0x1040,\n\t            0x150000: 0x80400040,\n\t            0x160000: 0x80401000,\n\t            0x170000: 0x80001040,\n\t            0x180000: 0x80401040,\n\t            0x190000: 0x80000000,\n\t            0x1a0000: 0x80400000,\n\t            0x1b0000: 0x401040,\n\t            0x1c0000: 0x80001000,\n\t            0x1d0000: 0x400000,\n\t            0x1e0000: 0x40,\n\t            0x1f0000: 0x1000,\n\t            0x108000: 0x80400000,\n\t            0x118000: 0x80401040,\n\t            0x128000: 0x0,\n\t            0x138000: 0x401000,\n\t            0x148000: 0x400040,\n\t            0x158000: 0x80000000,\n\t            0x168000: 0x80001040,\n\t            0x178000: 0x40,\n\t            0x188000: 0x80000040,\n\t            0x198000: 0x1000,\n\t            0x1a8000: 0x80001000,\n\t            0x1b8000: 0x80400040,\n\t            0x1c8000: 0x1040,\n\t            0x1d8000: 0x80401000,\n\t            0x1e8000: 0x400000,\n\t            0x1f8000: 0x401040\n\t        },\n\t        {\n\t            0x0: 0x80,\n\t            0x1000: 0x1040000,\n\t            0x2000: 0x40000,\n\t            0x3000: 0x20000000,\n\t            0x4000: 0x20040080,\n\t            0x5000: 0x1000080,\n\t            0x6000: 0x21000080,\n\t            0x7000: 0x40080,\n\t            0x8000: 0x1000000,\n\t            0x9000: 0x20040000,\n\t            0xa000: 0x20000080,\n\t            0xb000: 0x21040080,\n\t            0xc000: 0x21040000,\n\t            0xd000: 0x0,\n\t            0xe000: 0x1040080,\n\t            0xf000: 0x21000000,\n\t            0x800: 0x1040080,\n\t            0x1800: 0x21000080,\n\t            0x2800: 0x80,\n\t            0x3800: 0x1040000,\n\t            0x4800: 0x40000,\n\t            0x5800: 0x20040080,\n\t            0x6800: 0x21040000,\n\t            0x7800: 0x20000000,\n\t            0x8800: 0x20040000,\n\t            0x9800: 0x0,\n\t            0xa800: 0x21040080,\n\t            0xb800: 0x1000080,\n\t            0xc800: 0x20000080,\n\t            0xd800: 0x21000000,\n\t            0xe800: 0x1000000,\n\t            0xf800: 0x40080,\n\t            0x10000: 0x40000,\n\t            0x11000: 0x80,\n\t            0x12000: 0x20000000,\n\t            0x13000: 0x21000080,\n\t            0x14000: 0x1000080,\n\t            0x15000: 0x21040000,\n\t            0x16000: 0x20040080,\n\t            0x17000: 0x1000000,\n\t            0x18000: 0x21040080,\n\t            0x19000: 0x21000000,\n\t            0x1a000: 0x1040000,\n\t            0x1b000: 0x20040000,\n\t            0x1c000: 0x40080,\n\t            0x1d000: 0x20000080,\n\t            0x1e000: 0x0,\n\t            0x1f000: 0x1040080,\n\t            0x10800: 0x21000080,\n\t            0x11800: 0x1000000,\n\t            0x12800: 0x1040000,\n\t            0x13800: 0x20040080,\n\t            0x14800: 0x20000000,\n\t            0x15800: 0x1040080,\n\t            0x16800: 0x80,\n\t            0x17800: 0x21040000,\n\t            0x18800: 0x40080,\n\t            0x19800: 0x21040080,\n\t            0x1a800: 0x0,\n\t            0x1b800: 0x21000000,\n\t            0x1c800: 0x1000080,\n\t            0x1d800: 0x40000,\n\t            0x1e800: 0x20040000,\n\t            0x1f800: 0x20000080\n\t        },\n\t        {\n\t            0x0: 0x10000008,\n\t            0x100: 0x2000,\n\t            0x200: 0x10200000,\n\t            0x300: 0x10202008,\n\t            0x400: 0x10002000,\n\t            0x500: 0x200000,\n\t            0x600: 0x200008,\n\t            0x700: 0x10000000,\n\t            0x800: 0x0,\n\t            0x900: 0x10002008,\n\t            0xa00: 0x202000,\n\t            0xb00: 0x8,\n\t            0xc00: 0x10200008,\n\t            0xd00: 0x202008,\n\t            0xe00: 0x2008,\n\t            0xf00: 0x10202000,\n\t            0x80: 0x10200000,\n\t            0x180: 0x10202008,\n\t            0x280: 0x8,\n\t            0x380: 0x200000,\n\t            0x480: 0x202008,\n\t            0x580: 0x10000008,\n\t            0x680: 0x10002000,\n\t            0x780: 0x2008,\n\t            0x880: 0x200008,\n\t            0x980: 0x2000,\n\t            0xa80: 0x10002008,\n\t            0xb80: 0x10200008,\n\t            0xc80: 0x0,\n\t            0xd80: 0x10202000,\n\t            0xe80: 0x202000,\n\t            0xf80: 0x10000000,\n\t            0x1000: 0x10002000,\n\t            0x1100: 0x10200008,\n\t            0x1200: 0x10202008,\n\t            0x1300: 0x2008,\n\t            0x1400: 0x200000,\n\t            0x1500: 0x10000000,\n\t            0x1600: 0x10000008,\n\t            0x1700: 0x202000,\n\t            0x1800: 0x202008,\n\t            0x1900: 0x0,\n\t            0x1a00: 0x8,\n\t            0x1b00: 0x10200000,\n\t            0x1c00: 0x2000,\n\t            0x1d00: 0x10002008,\n\t            0x1e00: 0x10202000,\n\t            0x1f00: 0x200008,\n\t            0x1080: 0x8,\n\t            0x1180: 0x202000,\n\t            0x1280: 0x200000,\n\t            0x1380: 0x10000008,\n\t            0x1480: 0x10002000,\n\t            0x1580: 0x2008,\n\t            0x1680: 0x10202008,\n\t            0x1780: 0x10200000,\n\t            0x1880: 0x10202000,\n\t            0x1980: 0x10200008,\n\t            0x1a80: 0x2000,\n\t            0x1b80: 0x202008,\n\t            0x1c80: 0x200008,\n\t            0x1d80: 0x0,\n\t            0x1e80: 0x10000000,\n\t            0x1f80: 0x10002008\n\t        },\n\t        {\n\t            0x0: 0x100000,\n\t            0x10: 0x2000401,\n\t            0x20: 0x400,\n\t            0x30: 0x100401,\n\t            0x40: 0x2100401,\n\t            0x50: 0x0,\n\t            0x60: 0x1,\n\t            0x70: 0x2100001,\n\t            0x80: 0x2000400,\n\t            0x90: 0x100001,\n\t            0xa0: 0x2000001,\n\t            0xb0: 0x2100400,\n\t            0xc0: 0x2100000,\n\t            0xd0: 0x401,\n\t            0xe0: 0x100400,\n\t            0xf0: 0x2000000,\n\t            0x8: 0x2100001,\n\t            0x18: 0x0,\n\t            0x28: 0x2000401,\n\t            0x38: 0x2100400,\n\t            0x48: 0x100000,\n\t            0x58: 0x2000001,\n\t            0x68: 0x2000000,\n\t            0x78: 0x401,\n\t            0x88: 0x100401,\n\t            0x98: 0x2000400,\n\t            0xa8: 0x2100000,\n\t            0xb8: 0x100001,\n\t            0xc8: 0x400,\n\t            0xd8: 0x2100401,\n\t            0xe8: 0x1,\n\t            0xf8: 0x100400,\n\t            0x100: 0x2000000,\n\t            0x110: 0x100000,\n\t            0x120: 0x2000401,\n\t            0x130: 0x2100001,\n\t            0x140: 0x100001,\n\t            0x150: 0x2000400,\n\t            0x160: 0x2100400,\n\t            0x170: 0x100401,\n\t            0x180: 0x401,\n\t            0x190: 0x2100401,\n\t            0x1a0: 0x100400,\n\t            0x1b0: 0x1,\n\t            0x1c0: 0x0,\n\t            0x1d0: 0x2100000,\n\t            0x1e0: 0x2000001,\n\t            0x1f0: 0x400,\n\t            0x108: 0x100400,\n\t            0x118: 0x2000401,\n\t            0x128: 0x2100001,\n\t            0x138: 0x1,\n\t            0x148: 0x2000000,\n\t            0x158: 0x100000,\n\t            0x168: 0x401,\n\t            0x178: 0x2100400,\n\t            0x188: 0x2000001,\n\t            0x198: 0x2100000,\n\t            0x1a8: 0x0,\n\t            0x1b8: 0x2100401,\n\t            0x1c8: 0x100401,\n\t            0x1d8: 0x400,\n\t            0x1e8: 0x2000400,\n\t            0x1f8: 0x100001\n\t        },\n\t        {\n\t            0x0: 0x8000820,\n\t            0x1: 0x20000,\n\t            0x2: 0x8000000,\n\t            0x3: 0x20,\n\t            0x4: 0x20020,\n\t            0x5: 0x8020820,\n\t            0x6: 0x8020800,\n\t            0x7: 0x800,\n\t            0x8: 0x8020000,\n\t            0x9: 0x8000800,\n\t            0xa: 0x20800,\n\t            0xb: 0x8020020,\n\t            0xc: 0x820,\n\t            0xd: 0x0,\n\t            0xe: 0x8000020,\n\t            0xf: 0x20820,\n\t            0x80000000: 0x800,\n\t            0x80000001: 0x8020820,\n\t            0x80000002: 0x8000820,\n\t            0x80000003: 0x8000000,\n\t            0x80000004: 0x8020000,\n\t            0x80000005: 0x20800,\n\t            0x80000006: 0x20820,\n\t            0x80000007: 0x20,\n\t            0x80000008: 0x8000020,\n\t            0x80000009: 0x820,\n\t            0x8000000a: 0x20020,\n\t            0x8000000b: 0x8020800,\n\t            0x8000000c: 0x0,\n\t            0x8000000d: 0x8020020,\n\t            0x8000000e: 0x8000800,\n\t            0x8000000f: 0x20000,\n\t            0x10: 0x20820,\n\t            0x11: 0x8020800,\n\t            0x12: 0x20,\n\t            0x13: 0x800,\n\t            0x14: 0x8000800,\n\t            0x15: 0x8000020,\n\t            0x16: 0x8020020,\n\t            0x17: 0x20000,\n\t            0x18: 0x0,\n\t            0x19: 0x20020,\n\t            0x1a: 0x8020000,\n\t            0x1b: 0x8000820,\n\t            0x1c: 0x8020820,\n\t            0x1d: 0x20800,\n\t            0x1e: 0x820,\n\t            0x1f: 0x8000000,\n\t            0x80000010: 0x20000,\n\t            0x80000011: 0x800,\n\t            0x80000012: 0x8020020,\n\t            0x80000013: 0x20820,\n\t            0x80000014: 0x20,\n\t            0x80000015: 0x8020000,\n\t            0x80000016: 0x8000000,\n\t            0x80000017: 0x8000820,\n\t            0x80000018: 0x8020820,\n\t            0x80000019: 0x8000020,\n\t            0x8000001a: 0x8000800,\n\t            0x8000001b: 0x0,\n\t            0x8000001c: 0x20800,\n\t            0x8000001d: 0x820,\n\t            0x8000001e: 0x20020,\n\t            0x8000001f: 0x8020800\n\t        }\n\t    ];\n\n\t    // Masks that select the SBOX input\n\t    var SBOX_MASK = [\n\t        0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000,\n\t        0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f\n\t    ];\n\n\t    /**\n\t     * DES block cipher algorithm.\n\t     */\n\t    var DES = C_algo.DES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\n\t            // Select 56 bits according to PC1\n\t            var keyBits = [];\n\t            for (var i = 0; i < 56; i++) {\n\t                var keyBitPos = PC1[i] - 1;\n\t                keyBits[i] = (keyWords[keyBitPos >>> 5] >>> (31 - keyBitPos % 32)) & 1;\n\t            }\n\n\t            // Assemble 16 subkeys\n\t            var subKeys = this._subKeys = [];\n\t            for (var nSubKey = 0; nSubKey < 16; nSubKey++) {\n\t                // Create subkey\n\t                var subKey = subKeys[nSubKey] = [];\n\n\t                // Shortcut\n\t                var bitShift = BIT_SHIFTS[nSubKey];\n\n\t                // Select 48 bits according to PC2\n\t                for (var i = 0; i < 24; i++) {\n\t                    // Select from the left 28 key bits\n\t                    subKey[(i / 6) | 0] |= keyBits[((PC2[i] - 1) + bitShift) % 28] << (31 - i % 6);\n\n\t                    // Select from the right 28 key bits\n\t                    subKey[4 + ((i / 6) | 0)] |= keyBits[28 + (((PC2[i + 24] - 1) + bitShift) % 28)] << (31 - i % 6);\n\t                }\n\n\t                // Since each subkey is applied to an expanded 32-bit input,\n\t                // the subkey can be broken into 8 values scaled to 32-bits,\n\t                // which allows the key to be used without expansion\n\t                subKey[0] = (subKey[0] << 1) | (subKey[0] >>> 31);\n\t                for (var i = 1; i < 7; i++) {\n\t                    subKey[i] = subKey[i] >>> ((i - 1) * 4 + 3);\n\t                }\n\t                subKey[7] = (subKey[7] << 5) | (subKey[7] >>> 27);\n\t            }\n\n\t            // Compute inverse subkeys\n\t            var invSubKeys = this._invSubKeys = [];\n\t            for (var i = 0; i < 16; i++) {\n\t                invSubKeys[i] = subKeys[15 - i];\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._subKeys);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._invSubKeys);\n\t        },\n\n\t        _doCryptBlock: function (M, offset, subKeys) {\n\t            // Get input\n\t            this._lBlock = M[offset];\n\t            this._rBlock = M[offset + 1];\n\n\t            // Initial permutation\n\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t            exchangeRL.call(this, 2,  0x33333333);\n\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t            exchangeLR.call(this, 1,  0x55555555);\n\n\t            // Rounds\n\t            for (var round = 0; round < 16; round++) {\n\t                // Shortcuts\n\t                var subKey = subKeys[round];\n\t                var lBlock = this._lBlock;\n\t                var rBlock = this._rBlock;\n\n\t                // Feistel function\n\t                var f = 0;\n\t                for (var i = 0; i < 8; i++) {\n\t                    f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];\n\t                }\n\t                this._lBlock = rBlock;\n\t                this._rBlock = lBlock ^ f;\n\t            }\n\n\t            // Undo swap from last round\n\t            var t = this._lBlock;\n\t            this._lBlock = this._rBlock;\n\t            this._rBlock = t;\n\n\t            // Final permutation\n\t            exchangeLR.call(this, 1,  0x55555555);\n\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t            exchangeRL.call(this, 2,  0x33333333);\n\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\n\t            // Set output\n\t            M[offset] = this._lBlock;\n\t            M[offset + 1] = this._rBlock;\n\t        },\n\n\t        keySize: 64/32,\n\n\t        ivSize: 64/32,\n\n\t        blockSize: 64/32\n\t    });\n\n\t    // Swap bits across the left and right words\n\t    function exchangeLR(offset, mask) {\n\t        var t = ((this._lBlock >>> offset) ^ this._rBlock) & mask;\n\t        this._rBlock ^= t;\n\t        this._lBlock ^= t << offset;\n\t    }\n\n\t    function exchangeRL(offset, mask) {\n\t        var t = ((this._rBlock >>> offset) ^ this._lBlock) & mask;\n\t        this._lBlock ^= t;\n\t        this._rBlock ^= t << offset;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.DES = BlockCipher._createHelper(DES);\n\n\t    /**\n\t     * Triple-DES block cipher algorithm.\n\t     */\n\t    var TripleDES = C_algo.TripleDES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\n\t            // Create DES instances\n\t            this._des1 = DES.createEncryptor(WordArray.create(keyWords.slice(0, 2)));\n\t            this._des2 = DES.createEncryptor(WordArray.create(keyWords.slice(2, 4)));\n\t            this._des3 = DES.createEncryptor(WordArray.create(keyWords.slice(4, 6)));\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._des1.encryptBlock(M, offset);\n\t            this._des2.decryptBlock(M, offset);\n\t            this._des3.encryptBlock(M, offset);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            this._des3.decryptBlock(M, offset);\n\t            this._des2.encryptBlock(M, offset);\n\t            this._des1.decryptBlock(M, offset);\n\t        },\n\n\t        keySize: 192/32,\n\n\t        ivSize: 64/32,\n\n\t        blockSize: 64/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.TripleDES = BlockCipher._createHelper(TripleDES);\n\t}());\n\n\n\treturn CryptoJS.TripleDES;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * RC4 stream cipher algorithm.\n\t     */\n\t    var RC4 = C_algo.RC4 = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\t            var keySigBytes = key.sigBytes;\n\n\t            // Init sbox\n\t            var S = this._S = [];\n\t            for (var i = 0; i < 256; i++) {\n\t                S[i] = i;\n\t            }\n\n\t            // Key setup\n\t            for (var i = 0, j = 0; i < 256; i++) {\n\t                var keyByteIndex = i % keySigBytes;\n\t                var keyByte = (keyWords[keyByteIndex >>> 2] >>> (24 - (keyByteIndex % 4) * 8)) & 0xff;\n\n\t                j = (j + S[i] + keyByte) % 256;\n\n\t                // Swap\n\t                var t = S[i];\n\t                S[i] = S[j];\n\t                S[j] = t;\n\t            }\n\n\t            // Counters\n\t            this._i = this._j = 0;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            M[offset] ^= generateKeystreamWord.call(this);\n\t        },\n\n\t        keySize: 256/32,\n\n\t        ivSize: 0\n\t    });\n\n\t    function generateKeystreamWord() {\n\t        // Shortcuts\n\t        var S = this._S;\n\t        var i = this._i;\n\t        var j = this._j;\n\n\t        // Generate keystream word\n\t        var keystreamWord = 0;\n\t        for (var n = 0; n < 4; n++) {\n\t            i = (i + 1) % 256;\n\t            j = (j + S[i]) % 256;\n\n\t            // Swap\n\t            var t = S[i];\n\t            S[i] = S[j];\n\t            S[j] = t;\n\n\t            keystreamWord |= S[(S[i] + S[j]) % 256] << (24 - n * 8);\n\t        }\n\n\t        // Update counters\n\t        this._i = i;\n\t        this._j = j;\n\n\t        return keystreamWord;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4 = StreamCipher._createHelper(RC4);\n\n\t    /**\n\t     * Modified RC4 stream cipher algorithm.\n\t     */\n\t    var RC4Drop = C_algo.RC4Drop = RC4.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} drop The number of keystream words to drop. Default 192\n\t         */\n\t        cfg: RC4.cfg.extend({\n\t            drop: 192\n\t        }),\n\n\t        _doReset: function () {\n\t            RC4._doReset.call(this);\n\n\t            // Drop\n\t            for (var i = this.cfg.drop; i > 0; i--) {\n\t                generateKeystreamWord.call(this);\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4Drop = StreamCipher._createHelper(RC4Drop);\n\t}());\n\n\n\treturn CryptoJS.RC4;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm\n\t     */\n\t    var Rabbit = C_algo.Rabbit = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                K[i] = (((K[i] << 8)  | (K[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((K[i] << 24) | (K[i] >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.Rabbit = StreamCipher._createHelper(Rabbit);\n\t}());\n\n\n\treturn CryptoJS.Rabbit;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm.\n\t     *\n\t     * This is a legacy version that neglected to convert the key to little-endian.\n\t     * This error doesn't affect the cipher's security,\n\t     * but it does affect its compatibility with other implementations.\n\t     */\n\t    var RabbitLegacy = C_algo.RabbitLegacy = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RabbitLegacy = StreamCipher._createHelper(RabbitLegacy);\n\t}());\n\n\n\treturn CryptoJS.RabbitLegacy;\n\n}));","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--8-1!../../../node_modules/postcss-loader/src/index.js??ref--8-2!../../../node_modules/sass-loader/dist/cjs.js!./query_editor.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","\"use strict\";\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && btoa) {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(true);\n// Module\nexports.push([module.id, \".tc-sub-params{margin-top:4px;margin-left:125px}.tc-sub-params .gf-form-inline{min-height:42px}.tc-sub-params .gf-form-inline .gf-form-label{margin-bottom:2px}.tc-sub-params .tc-info-label{margin-bottom:6px}.tc-sub-params .tc-info-label>a{margin-left:10px}.tc-switch{border-left:1px solid #262628;margin-bottom:0 !important}.tc-condition-block{margin-right:10px;display:inline-block}.tc-condition-block .tc-condition-input{border-radius:0}.tc-condition-block .tc-condition-minus{vertical-align:top;border-radius:0 3px 3px 0}.tc-condition-block .tc-condition-dropdown{display:inline-block}.tc-condition-block>input{display:inline-block;margin-right:0}.tc-condition-block>label{display:inline-block}.tc-condition-add{display:inline-block;vertical-align:top}.tc-condition-add>label{border-radius:3px}.filtered-color{color:#ff851b}.secret-tips{position:absolute;right:-25px;border-radius:2px;background:#1b1b1b;padding:10px;top:-35px;width:300px;border:1px solid #2c3235}.secret-tips-tri{position:absolute;width:15px;height:15px;left:-8px;top:60px;background:#1b1b1b;border:1px solid #2c3235;border-top:0;border-right:0;transform:rotate(45deg)}.rc-cascader-menu-item{min-width:160px;font-size:14px}\", \"\",{\"version\":3,\"sources\":[\"query_editor.css\"],\"names\":[],\"mappings\":\"AAAA,eAAe,cAAc,CAAC,iBAAiB,CAAC,+BAA+B,eAAe,CAAC,8CAA8C,iBAAiB,CAAC,8BAA8B,iBAAiB,CAAC,gCAAgC,gBAAgB,CAAC,WAAW,6BAA6B,CAAC,0BAA0B,CAAC,oBAAoB,iBAAiB,CAAC,oBAAoB,CAAC,wCAAwC,eAAe,CAAC,wCAAwC,kBAAkB,CAAC,yBAAyB,CAAC,2CAA2C,oBAAoB,CAAC,0BAA0B,oBAAoB,CAAC,cAAc,CAAC,0BAA0B,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,CAAC,wBAAwB,iBAAiB,CAAC,gBAAgB,aAAa,CAAC,aAAa,iBAAiB,CAAC,WAAW,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,wBAAwB,CAAC,iBAAiB,iBAAiB,CAAC,UAAU,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,kBAAkB,CAAC,wBAAwB,CAAC,YAAY,CAAC,cAAc,CAAC,uBAAuB,CAAC,uBAAuB,eAAe,CAAC,cAAc\",\"file\":\"query_editor.css\",\"sourcesContent\":[\".tc-sub-params{margin-top:4px;margin-left:125px}.tc-sub-params .gf-form-inline{min-height:42px}.tc-sub-params .gf-form-inline .gf-form-label{margin-bottom:2px}.tc-sub-params .tc-info-label{margin-bottom:6px}.tc-sub-params .tc-info-label>a{margin-left:10px}.tc-switch{border-left:1px solid #262628;margin-bottom:0 !important}.tc-condition-block{margin-right:10px;display:inline-block}.tc-condition-block .tc-condition-input{border-radius:0}.tc-condition-block .tc-condition-minus{vertical-align:top;border-radius:0 3px 3px 0}.tc-condition-block .tc-condition-dropdown{display:inline-block}.tc-condition-block>input{display:inline-block;margin-right:0}.tc-condition-block>label{display:inline-block}.tc-condition-add{display:inline-block;vertical-align:top}.tc-condition-add>label{border-radius:3px}.filtered-color{color:#ff851b}.secret-tips{position:absolute;right:-25px;border-radius:2px;background:#1b1b1b;padding:10px;top:-35px;width:300px;border:1px solid #2c3235}.secret-tips-tri{position:absolute;width:15px;height:15px;left:-8px;top:60px;background:#1b1b1b;border:1px solid #2c3235;border-top:0;border-right:0;transform:rotate(45deg)}.rc-cascader-menu-item{min-width:160px;font-size:14px}\"]}]);\n// Exports\nmodule.exports = exports;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","import _ from 'lodash';\nimport { Datasources, SERVICES } from './tc_monitor';\nimport { GetServiceFromNamespace, ParseMetricQuery } from './common/constants';\nimport { serviceGroupBy } from './common/utils';\n\nexport default interface DatasourceInterface {\n  instanceSettings: any;\n  backendSrv: any;\n  templateSrv: any;\n  query: (options: any) => any;\n  testDatasource: () => any;\n  metricFindQuery: (query: any) => any;\n  getRegions?: (service: string) => any;\n  getMetrics: (service: string, region: string) => any;\n  getInstances: (service: string, region: string, params: any) => any;\n  getZones?: (service: string, region: string) => any;\n}\n\nexport class TCMonitorDatasource implements DatasourceInterface {\n  instanceSettings: any;\n  backendSrv: any;\n  templateSrv: any;\n\n  /** @ngInject */\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    this.instanceSettings = instanceSettings;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    _.forEach(Datasources, (_class: any, key) => {\n      this[key] = new _class(this.instanceSettings, this.backendSrv, this.templateSrv);\n    });\n  }\n\n  // 根据 Datasource Config 配置时勾选的监控服务项，获取相应的命名空间\n  getNamespaces() {\n    const namespaces: any[] = [];\n    _.forEach(SERVICES, (service) => {\n      if (this.instanceSettings.jsonData[service.service] === true) {\n        // namespaces.push(service.namespace);\n        namespaces.push(service);\n      }\n    });\n    return namespaces;\n  }\n\n  getCascaderNamespaces() {\n    const validServices = SERVICES.filter((service) => this.instanceSettings.jsonData[service.service]);\n    return serviceGroupBy(validServices);\n  }\n\n  getSelectedServices() {\n    const namespaces = this.getNamespaces();\n    return _.map(namespaces, ({ namespace }) => {\n      return GetServiceFromNamespace(namespace);\n    });\n  }\n\n  /**\n   * 根据 Panel 的配置项，获取相应的监控数据\n   *\n   * @param options Panel 的配置参数，示例如下\n   *  {\n   *     cacheTimeout: undefined,\n   *     dashboardId: 41,\n   *     interval: \"30s\",\n   *     intervalMs: 30000,\n   *     maxDataPoints: 554,\n   *     panelId: 2,\n   *     range: {\n   *        from: Moment,\n   *        to: Moment,\n   *        raw: {from: \"now-6h\", to: \"now\"}\n   *     },\n   *     rangeRaw: {from: \"now-6h\", to: \"now\"},\n   *     scopedVars: {__interval: {…}, __interval_ms: {…}}\n   *     targets: [\n   *       {\n   *          namespace: \"QCE/CVM\",\n   *          refId: \"A\",\n   *          service: \"cvm\",\n   *          showInstanceDetails: false,\n   *          cvm: {\n   *            dimensionObject: {InstanceId: {…}}\n   *            instance: \"\",\n   *            instanceAlias: \"InstanceId\",\n   *            metricName: \"AccOuttraffic\",\n   *            metricUnit: \"MB\",\n   *            period: 10,\n   *            queries: {Filters: {…}, InstanceIds: Array(1), Limit: 20, Offset: 0, filtersChecked: false, …},\n   *            region: \"ap-beijing\"\n   *          },\n   *          cdb: {},\n   *       },\n   *     ],\n   *     timezone: \"browser\"\n   *   }\n   * @return 返回数据对象，示例如下\n   * {\n   *   data: [\n   *     {\n   *       \"target\": \"AccOuttraffic - ins-123\",\n   *       \"datapoints\": [\n   *         [861, 1450754160000],\n   *         [767, 1450754220000]\n   *       ]\n   *     }\n   *   ]\n   * }\n   */\n  query(options: any): Record<string, any> {\n    const promises: any[] = [];\n    const services = this.getSelectedServices();\n    _.forEach(services, (service) => {\n      const optionsTemp = _.cloneDeep(options);\n      const targets = _.filter(optionsTemp.targets, (item) => item.service === service);\n      optionsTemp.targets = targets;\n      if (optionsTemp.targets.length > 0) {\n        const promiseTemp = this[`${_.toUpper(service)}Datasource`].query(optionsTemp);\n        if (promiseTemp) {\n          promises.push(promiseTemp);\n        }\n      }\n    });\n    if (promises.length === 0) {\n      return Promise.resolve({ data: [] });\n    }\n    return Promise.all(promises).then((results) => {\n      return { data: _.flatten(results) };\n    });\n  }\n\n  /**\n   * 获取模板变量的选择项列表\n   *\n   * @param query 模板变量配置填写的 Query 参数字符串\n   */\n  metricFindQuery(query: string, options?: any) {\n    const queries = ParseMetricQuery(query);\n    const service = GetServiceFromNamespace(queries['namespace'] || '');\n\n    if (_.isEmpty(queries) || !queries['namespace'] || !queries['action'] || !service) {\n      return Promise.resolve([]);\n    }\n    if (this[`${_.toUpper(service)}Datasource`].metricFindQuery) {\n      const result = this[`${_.toUpper(service)}Datasource`].metricFindQuery(\n        queries,\n        _.get(options, 'variable.regex', undefined)\n      );\n      if (result) {\n        return result;\n      }\n    }\n    return Promise.resolve([]);\n  }\n\n  /**\n   * 获取地域列表\n   * @param service\n   */\n  getRegions(service) {\n    if (this[`${_.toUpper(service)}Datasource`].getRegions) {\n      return this[`${_.toUpper(service)}Datasource`].getRegions();\n    }\n    return [];\n  }\n\n  /**\n   * 获取监控指标列表\n   * @param service\n   * @param region\n   */\n  getMetrics(service, region) {\n    return this[`${_.toUpper(service)}Datasource`].getMetrics(region);\n  }\n\n  /**\n   * 获取可用区列表\n   * @param service\n   * @param region\n   */\n  getZones(service, region) {\n    if (this[`${_.toUpper(service)}Datasource`].getZones) {\n      return this[`${_.toUpper(service)}Datasource`].getZones(region);\n    }\n    return [];\n  }\n\n  /**\n   * 获取filter中dropdown列表\n   * @param service\n   * @param param\n   */\n  getFilterDropdown(service, param) {\n    if (this[`${_.toUpper(service)}Datasource`].getFilterDropdown) {\n      return this[`${_.toUpper(service)}Datasource`].getFilterDropdown(param);\n    }\n    return [];\n  }\n\n  /**\n   * 获取实例列表\n   * @param service\n   * @param region\n   * @param params\n   */\n  getInstances(service, region, params) {\n    return this[`${_.toUpper(service)}Datasource`].getInstances(region, params);\n  }\n\n  /**\n   * 获取监听器列表\n   * @param service\n   * @param region\n   * @param params\n   */\n  getListeners(service, region, instance) {\n    if (!this[`${_.toUpper(service)}Datasource`].getListeners) {\n      return [];\n    }\n    return this[`${_.toUpper(service)}Datasource`].getListeners(region, instance);\n  }\n\n  /**\n   * 获取 私有网络列表\n   * @param service\n   */\n  getVpcIds(service, region) {\n    if (this[`${_.toUpper(service)}Datasource`].getVpcIds) {\n      return this[`${_.toUpper(service)}Datasource`].getVpcIds(region);\n    }\n  }\n\n  // 在 Datasource Config 配置时，验证 SerectId、SerectKey 的有效性，并测试勾选的监控服务项的对应 API 连通性\n  testDatasource() {\n    const promises: any[] = [];\n    const services = this.getSelectedServices();\n    _.forEach(services, (service) => {\n      promises.push(this[`${_.toUpper(service)}Datasource`].testDatasource());\n    });\n    if (promises.length === 0) {\n      return Promise.resolve({\n        status: 'error',\n        message: `Nothing configured. At least one of the API's services must be configured.`,\n        title: 'Error',\n      });\n    }\n    return Promise.all(promises).then((results) => {\n      let status = 'success';\n      let message = 'Datsource Connection OK';\n\n      const errorMsg = _.reduce(\n        results,\n        (acc, cur) => {\n          if (cur.status === 'error') {\n            if (acc === '') acc += 'Oops! Found an error in: ';\n            acc += `${cur.service}: ${cur.message}; \\n`;\n          }\n          return acc;\n        },\n        ''\n      );\n\n      if (errorMsg) {\n        status = 'error';\n        message = errorMsg;\n      }\n\n      return {\n        status,\n        message,\n        title: _.upperFirst(status),\n      };\n    });\n  }\n\n  getServiceFn(service, fnName) {\n    return (...argu) => {\n      if (!this[`${_.toUpper(service)}Datasource`][fnName]) {\n        return [];\n      }\n      return this[`${_.toUpper(service)}Datasource`][fnName](...argu);\n    };\n  }\n}\n","import coreModule from 'grafana/app/core/core_module';\nimport _ from 'lodash';\nimport { isDefined } from 'angular';\n\n// mutilple conditions directive for instance query params\nexport class MultiConditionCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.type = $scope.type || 'input';\n      $scope.placeholder = isDefined($scope.placeholder) ? $scope.placeholder : '';\n      $scope.value = isDefined($scope.value) ? $scope.value : [];\n      $scope.maxCond = _.toInteger($scope.maxCond) > 0 ? _.toInteger($scope.maxCond) : -1;\n    };\n\n    $scope.onInputBlur = () => {\n      $scope.onChangeInternal();\n    };\n\n    $scope.deleteCondition = (index) => {\n      $scope.value.splice(index, 1);\n      $scope.onChangeInternal();\n    };\n\n    $scope.addCondition = (cond) => {\n      $scope.value.push(cond);\n      $scope.onChangeInternal();\n    };\n\n    $scope.onChangeInternal = () => {\n      $scope.onChange({ value: $scope.value });\n    };\n\n    $scope.onSelectChange = (value) => {\n      $scope.onChange({ value });\n    };\n\n    $scope.getSelectedOptions = () => {\n      const selectedOptions = _.filter(\n        $scope.options,\n        (item) => _.get($scope.value, 'value', []).indexOf(item.value) !== -1\n      );\n      return selectedOptions.length > 0\n        ? _.map(selectedOptions, (option) => `${option.text}: ${option.value}`).join('; ')\n        : undefined;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div ng-if=\"type === 'input'\">\n  <div ng-repeat=\"v in value track by $index\" class=\"gf-form tc-condition-block\">\n    <input class=\"gf-form-input width-10 tc-condition-input\" type=\"text\" ng-model=\"value[$index]\" placeholder=\"{{placeholder}}\"\n      ng-blur=\"onInputBlur()\"></input>\n    <label class=\"gf-form-label pointer tc-condition-minus\">\n      <a class=\"pointer\" ng-click=\"deleteCondition($index)\">\n        <i class=\"fa fa-minus\"></i>\n      </a>\n    </label>\n  </div>\n  <div class=\"gf-form tc-condition-add\">\n    <label class=\"gf-form-label query-part\" ng-if=\"maxCond === -1 || value.length < maxCond\">\n      <a class=\"pointer\" ng-click=\"addCondition('')\">\n        <i class=\"fa fa-plus\"></i>\n      </a>\n    </label>\n  </div>\n</div>\n\n<div ng-if=\"type === 'inputNumber'\">\n  <div ng-repeat=\"v in value track by $index\" class=\"gf-form tc-condition-block\">\n    <input type=\"number\" ng-model=\"value[$index]\" ng-blur=\"onInputBlur()\" class=\"gf-form-input width-10 tc-condition-input\"\n      ng-min=\"minNum\" ng-max=\"maxNum\" ng-change=\"onChangeInternal()\">\n    <label class=\"gf-form-label pointer tc-condition-minus\">\n      <a class=\"pointer\" ng-click=\"deleteCondition($index)\">\n        <i class=\"fa fa-minus\"></i>\n      </a>\n    </label>\n  </div>\n  <div class=\"gf-form tc-condition-add\">\n    <label class=\"gf-form-label query-part\" ng-if=\"maxCond === -1 || value.length < maxCond\">\n      <a class=\"pointer\" ng-click=\"addCondition(undefined)\">\n        <i class=\"fa fa-plus\"></i>\n      </a>\n    </label>\n  </div>\n</div>\n\n<div class=\"gf-form\" ng-if=\"type === 'select'\">\n  <custom-select-dropdown value=\"value\" multiple=\"true\" options=\"options\" on-change=\"onSelectChange(value)\"></custom-select-dropdown>\n  <label class=\"gf-form-label tc-info-label\" ng-if=\"getSelectedOptions()\">\n    {{getSelectedOptions()}}\n  </label>\n</div>\n\n<div ng-if=\"type === 'dropdown'\">\n  <div ng-repeat=\"v in value track by $index\" class=\"gf-form tc-condition-block\" style=\"vertical-align: top;\">\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent tc-condition-dropdown\">\n      <gf-form-dropdown model=\"value[$index]\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getOptions()\" on-change=\"onChangeInternal()\"\n        css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n    <label class=\"gf-form-label pointer tc-condition-minus\">\n      <a class=\"pointer\" ng-click=\"deleteCondition($index)\">\n        <i class=\"fa fa-minus\"></i>\n      </a>\n    </label>\n  </div>\n  <div class=\"gf-form tc-condition-add\">\n    <label class=\"gf-form-label query-part\" ng-if=\"maxCond === -1 || value.length < maxCond\">\n      <a class=\"pointer\" ng-click=\"addCondition('')\">\n        <i class=\"fa fa-plus\"></i>\n      </a>\n    </label>\n  </div>\n</div>\n\n<!-- <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n  <gf-form-dropdown model=\"ctrl.target.cvm.instance\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"ctrl.getInstances($query)\"\n    on-change=\"ctrl.onInstanceChange()\" css-class=\"min-width-10\">\n  </gf-form-dropdown>\n</div> -->\n`;\n\nexport function multiCondition() {\n  return {\n    template: template,\n    controller: MultiConditionCtrl,\n    restrict: 'E',\n    scope: {\n      type: '=',\n      value: '=',\n      maxCond: '=?',\n      placeholder: '=?',\n      options: '=?',\n      maxNum: '=?',\n      minNum: '=?',\n      multiple: '=?',\n      onChange: '&',\n      getOptions: '&',\n    },\n  };\n}\n\ncoreModule.directive('multiCondition', multiCondition);\n","import angular from 'angular';\nimport _ from 'lodash';\nimport coreModule from 'grafana/app/core/core_module';\n\nexport class CustomSelectDropdownCtrl {\n  dropdownVisible: any;\n  highlightIndex: any;\n  linkText: any;\n  oldVariableText: any;\n  selectOptions: any;\n  options: any;\n  value: any;\n  search: any;\n  multiple: boolean | undefined;\n  selectedValues: any;\n  variable: any;\n\n  hide: any;\n  onChange: any;\n\n  /** @ngInject */\n  constructor() {}\n\n  show() {\n    this.oldVariableText = _.get(this.value, 'text', '');\n    this.highlightIndex = -1;\n\n    this.selectOptions = _.cloneDeep(this.options);\n    _.map(this.selectOptions, (option) => {\n      const selectedValue = _.get(this.value, 'value');\n      if (!selectedValue) {\n        option.selected = false;\n      } else if (_.isArray(selectedValue)) {\n        option.selected = _.indexOf(selectedValue, option.value) !== -1 ? true : false;\n      } else {\n        option.selected = selectedValue === option.value;\n      }\n    });\n\n    this.selectedValues = _.filter(this.selectOptions, { selected: true });\n\n    this.search = {\n      query: '',\n      options: this.selectOptions.slice(0, Math.min(this.selectOptions.length, 1000)),\n    };\n\n    this.dropdownVisible = true;\n  }\n\n  updateLinkText() {\n    this.linkText = _.get(this.value, 'text', '');\n  }\n\n  clearSelections() {\n    _.each(this.selectOptions, (option) => {\n      option.selected = false;\n    });\n\n    this.selectionsChanged(false);\n  }\n\n  keyDown(evt) {\n    if (evt.keyCode === 27) {\n      this.hide();\n    }\n    if (evt.keyCode === 40) {\n      this.moveHighlight(1);\n    }\n    if (evt.keyCode === 38) {\n      this.moveHighlight(-1);\n    }\n    if (evt.keyCode === 13) {\n      if (this.search.options.length === 0) {\n        this.commitChanges();\n      } else {\n        this.selectValue(this.search.options[this.highlightIndex], {}, true, false);\n      }\n    }\n    if (evt.keyCode === 32) {\n      this.selectValue(this.search.options[this.highlightIndex], {}, false, false);\n    }\n  }\n\n  moveHighlight(direction) {\n    this.highlightIndex = (this.highlightIndex + direction) % this.search.options.length;\n  }\n\n  selectValue(option, event, commitChange?, excludeOthers?) {\n    if (!option) {\n      return;\n    }\n    option.selected = this.multiple ? !option.selected : true;\n\n    commitChange = commitChange || false;\n    excludeOthers = excludeOthers || false;\n\n    const setAllExceptCurrentTo = (newValue) => {\n      _.each(this.selectOptions, (other) => {\n        if (option !== other) {\n          other.selected = newValue;\n        }\n      });\n    };\n\n    // commit action (enter key), should not deselect it\n    if (commitChange) {\n      option.selected = true;\n    }\n\n    if (excludeOthers) {\n      setAllExceptCurrentTo(false);\n      commitChange = true;\n    } else if (!this.multiple) {\n      setAllExceptCurrentTo(false);\n      commitChange = true;\n    } else if (event.ctrlKey || event.metaKey || event.shiftKey) {\n      commitChange = true;\n      setAllExceptCurrentTo(false);\n    }\n\n    this.selectionsChanged(commitChange);\n  }\n\n  selectionsChanged(commitChange) {\n    this.selectedValues = _.filter(this.selectOptions, { selected: true });\n    this.value.value = _.map(this.selectedValues, 'value');\n    this.value.text = _.map(this.selectedValues, 'text').join(' + ');\n    if (!this.multiple) {\n      this.value.value = _.get(this.selectedValues, '0.value', '');\n    }\n\n    if (commitChange) {\n      this.commitChanges();\n    }\n  }\n\n  commitChanges() {\n    this.dropdownVisible = false;\n\n    this.updateLinkText();\n\n    if (this.value.text !== this.oldVariableText) {\n      this.onChange({ value: this.value });\n    }\n  }\n\n  queryChanged() {\n    this.highlightIndex = -1;\n    this.search.options = _.filter(this.selectOptions, (option) => {\n      return option.text.toLowerCase().indexOf(this.search.query.toLowerCase()) !== -1;\n    });\n\n    this.search.options = this.search.options.slice(0, Math.min(this.search.options.length, 1000));\n  }\n\n  init() {\n    if (_.isEmpty(this.value)) {\n      this.value = { text: '', value: this.multiple ? [] : '' };\n    }\n    this.updateLinkText();\n  }\n}\n\nconst template = `\n<div class=\"variable-link-wrapper\">\n  <a ng-click=\"vm.show()\" class=\"variable-value-link min-width-10\">\n    {{vm.linkText}}\n    <i class=\"fa fa-caret-down\" style=\"font-size:12px;float:right;position:relative;top:4px\"></i>\n  </a>\n\n  <input\n    type=\"text\"\n    class=\"gf-form-input\"\n    style=\"display: none\"\n    ng-keydown=\"vm.keyDown($event)\"\n    ng-model=\"vm.search.query\"\n    ng-change=\"vm.queryChanged()\"\n  ></input>\n\n  <div class=\"variable-value-dropdown\" ng-if=\"vm.dropdownVisible\" ng-class=\"{'multi': vm.multiple, 'single': !vm.multiple}\">\n    <div class=\"variable-options-wrapper\">\n      <div class=\"variable-options-column\">\n        <a class=\"variable-options-column-header\" ng-if=\"!!vm.multiple\" ng-class=\"{'many-selected': vm.selectedValues.length > 1}\"\n          bs-tooltip=\"'Clear selections'\" data-placement=\"top\" ng-click=\"vm.clearSelections()\">\n          <span class=\"variable-option-icon\"></span>\n          Selected ({{vm.selectedValues.length}})\n        </a>\n        <a class=\"variable-option pointer\" ng-repeat=\"option in vm.search.options\" ng-class=\"{'selected': option.selected, 'highlighted': $index === vm.highlightIndex}\"\n          ng-click=\"vm.selectValue(option, $event)\">\n          <span class=\"variable-option-icon\"></span>\n          <span>{{option.text}}</span>\n        </a>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\n/** @ngInject */\nexport function customSelectDropdown($compile, $window, $timeout, $rootScope) {\n  return {\n    restrict: 'E',\n    scope: { options: '=', multiple: '=', value: '=', onChange: '&' },\n    template: template,\n    controller: 'CustomSelectDropdownCtrl',\n    controllerAs: 'vm',\n    bindToController: true,\n    link: (scope, elem) => {\n      const bodyEl = angular.element($window.document.body);\n      const linkEl = elem.find('.variable-value-link');\n      const inputEl = elem.find('input');\n\n      function bodyOnClick(e) {\n        if (elem.has(e.target).length === 0) {\n          scope.$apply(() => {\n            scope.vm.commitChanges();\n          });\n        }\n      }\n\n      function openDropdown() {\n        inputEl.css('width', Math.max(linkEl.width(), 136) + 'px');\n\n        inputEl.show();\n        linkEl.hide();\n\n        inputEl.focus();\n        $timeout(\n          () => {\n            bodyEl.on('click', bodyOnClick);\n          },\n          0,\n          false\n        );\n      }\n\n      function switchToLink() {\n        inputEl.hide();\n        linkEl.show();\n        bodyEl.off('click', bodyOnClick);\n      }\n\n      scope.$watch('vm.dropdownVisible', (newValue) => {\n        if (newValue) {\n          openDropdown();\n        } else {\n          switchToLink();\n        }\n      });\n\n      scope.vm.init();\n    },\n  };\n}\n\ncoreModule.controller('CustomSelectDropdownCtrl', CustomSelectDropdownCtrl);\ncoreModule.directive('customSelectDropdown', customSelectDropdown);\n","import coreModule from 'grafana/app/core/core_module';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst genController = (component) =>\n  class Controller {\n    _$scope: any;\n    _$element: any;\n\n    /** @ngInject */\n    constructor($scope, $element) {\n      this._$scope = $scope;\n      this._$element = $element;\n    }\n\n    $onInit() {\n      // extract porps\n      const props = Object.entries(this._$scope).reduce((acc, [key, value]) => {\n        if (!key.startsWith('$')) {\n          if (typeof value === 'function') {\n            acc[key] = (...args) => value({ _query: args.length === 1 ? args[0] : args });\n          } else {\n            acc[key] = value;\n          }\n        }\n        return acc;\n      }, {} as any);\n\n      // wating dom mounted\n      setTimeout(() => {\n        ReactDOM.render(React.createElement(component, props), this._$element[0]);\n      });\n    }\n  };\n\nexport function loadReactComponent(\n  RectCompo: React.ComponentType,\n  componentName: string,\n  propTypes: Record<string, string>\n) {\n  coreModule.directive(componentName, () => ({\n    template: `<div class=\"${componentName}\"></div>`,\n    controller: genController(RectCompo),\n    restrict: 'E',\n    scope: propTypes,\n    replace: true,\n  }));\n}\n","import { Cascader } from '@grafana/ui';\nimport { loadReactComponent } from '../common/react-loader';\n\nloadReactComponent(Cascader, 'gfCascader', {\n  separator: '@?',\n  placeholder: '@?',\n  options: '<',\n  changeOnSelect: '<?',\n  onSelect: '&',\n  width: '@?',\n  initialValue: '@?',\n  allowCustomValue: '<?',\n  formatCreateLabel: '&?',\n  displayAllSelectedLevels: '<?',\n});\n","import editorHtmlTmp from './query.editor.html';\nimport { SERVICES } from '../tc_monitor/index';\n\nconst hackModuleName = {\n  loadBalance: 'clb',\n  lbPrivate: 'clb',\n  lbPublic: 'clb',\n  mongoDB: 'mongodb',\n\n  // MapReduce\n  mrHDFS: 'mr',\n  mrHBASE: 'mr',\n  mrHIVE: 'mr',\n  mrNODE: 'mr',\n  mrPRESTO: 'mr',\n  mrSPARK: 'mr',\n  mrYARN: 'mr',\n  mrZOOKEEPER: 'mr',\n};\n\nexport const editorHtml = (function () {\n  let str = editorHtmlTmp;\n  SERVICES.forEach(({ service }) => {\n    const serviceSwitch = hackModuleName[service] || service.replace(/([A-Z])/g, '-$1').toLowerCase();\n    str += `<${serviceSwitch}-query\n      ng-if=\"ctrl.target.service==='${service}'\"\n      target=\"ctrl.target.${service}\"\n      show-detail=\"ctrl.checkShowDetail('instance')\"\n      datasource=\"ctrl.datasource\"\n      on-change=\"ctrl.onInstanceQueryChange()\"\n      on-refresh=\"ctrl.refresh()\"\n      dims=\"ctrl.target.${service}.dimensionObject\"\n      region=\"ctrl.getVariable(ctrl.target.${service}.region)\"\n    ></${serviceSwitch}-query>`;\n  });\n  const footStr = `\n    <div class=\"gf-form\" ng-show=\"ctrl.lastQueryError\">\n      <pre class=\"gf-form-pre alert alert-error\">{{ctrl.lastQueryError}}</pre>\n    </div>\n  </query-editor-row>`;\n  return str + footStr;\n})();\n","import { QueryCtrl } from 'grafana/app/plugins/sdk';\nimport _ from 'lodash';\n\nimport { GetServiceFromNamespace, ReplaceVariable, isVariable } from './common/constants';\nimport { InitServiceState, InstanceAliasList, GetInstanceQueryParams, SERVICES } from './tc_monitor';\n\nimport './components/multi_condition';\nimport './components/custom_select_dropdown';\nimport './components/cascader';\nimport './css/query_editor.css';\nimport { editorHtml } from './partials/queryEditorTemplate';\nexport class TCMonitorDatasourceQueryCtrl extends QueryCtrl {\n  // static templateUrl = 'datasource/partials/query.editor.html';\n  static template = editorHtml;\n  datasource: any;\n  panelCtrl: any;\n  namespaces: string[] = [];\n  regions: any[] = [];\n  instanceList: any[] = [];\n  // listenerList: any[] = [];\n  metricList: any[] = [];\n  periodList: number[] = [];\n  dimensionList: any[] = [];\n  instanceAliasList: any[] = [];\n  // listenerAliasList: any[] = [];\n  target: {\n    refId: string;\n    service: string;\n    namespace: string;\n    showInstanceDetails: boolean;\n  };\n  defaults = {\n    namespace: '',\n    service: '',\n    showInstanceDetails: false,\n    ...InitServiceState,\n  };\n\n  cascaderOptions: any = [];\n\n  lastQuery: string;\n  lastQueryError?: string;\n\n  isMetricsNeedUpdate: boolean;\n  hideRegion: boolean;\n\n  $scope: any;\n\n  /** @ngInject */\n  // eslint-disable-next-line @typescript-eslint/no-parameter-properties\n  constructor($scope, $injector, private templateSrv) {\n    super($scope, $injector);\n    this.$scope = $scope;\n    this.cascaderOptions = this.datasource.getCascaderNamespaces();\n    this.namespaces = this.datasource.getNamespaces();\n    // 当数据源的命名空间列表存在时，设置相应的默认值\n    if (this.namespaces.length > 0) {\n      // if (_.indexOf(this.namespaces, this.target.namespace) === -1) {\n      //   this.target.namespace = this.namespaces[0];\n      // }\n      this.target.namespace =\n        this.target.namespace ?? this.cascaderOptions[0]?.items?.[0].value ?? this.cascaderOptions[0].value;\n      this.target.service = GetServiceFromNamespace(this.target.namespace) || '';\n    }\n    this.hideRegion = !!SERVICES.find((o) => o.service === this.target.service)?.hideRegion;\n    _.defaultsDeep(this.target, this.defaults);\n    this.instanceAliasList = this.getInstanceAliasList(this.target.service);\n    // this.listenerAliasList = this.getListenerAliasList(this.target.service);\n    this.panelCtrl.events.on('data-received', this.onDataReceived.bind(this), $scope);\n    this.panelCtrl.events.on('data-error', this.onDataError.bind(this), $scope);\n  }\n\n  get sortedPeriodList() {\n    return this.periodList.sort((a, b) => a - b);\n  }\n  get isCascader() {\n    return this.cascaderOptions.length > 1;\n  }\n  cascaderChange(namespace) {\n    this.target.namespace = namespace;\n    this.onNamespaceChange();\n  }\n\n  onDataReceived(dataList) {\n    this.lastQueryError = undefined;\n    this.lastQuery = '';\n\n    const anySeriesFromQuery: any = _.find(dataList, { refId: this.target.refId });\n    if (anySeriesFromQuery) {\n      this.lastQuery = anySeriesFromQuery.query;\n    }\n  }\n\n  onDataError(err) {\n    this.handleQueryCtrlError(err);\n  }\n\n  handleQueryCtrlError(err) {\n    if (_.get(err, 'query.refId') !== this.target.refId) {\n      return;\n    }\n\n    if (_.get(err, 'error.data.error.innererror', undefined)) {\n      if (_.get(err, 'error.data.error.innererror.innererror', undefined)) {\n        this.lastQueryError = _.get(err, 'error.data.error.innererror.innererror.message');\n      } else {\n        this.lastQueryError = _.get(err, 'error.data.error.innererror.message');\n      }\n    } else if (_.get(err, 'error.data.error', undefined)) {\n      this.lastQueryError = _.get(err, 'error.data.error.message');\n    } else if (_.get(err, 'error.data', undefined)) {\n      this.lastQueryError = _.get(err, 'error.data.message');\n    } else if (_.get(err, 'data.error', undefined)) {\n      this.lastQueryError = _.get(err, 'data.error.message');\n      // eslint-disable-next-line no-empty\n    } else if (err.data?.message) {\n    } else if (_.get(err, 'data.message', undefined)) {\n      this.lastQueryError = _.get(err, 'data.message');\n    } else {\n      this.lastQueryError = err;\n    }\n  }\n\n  /**\n   * 获取实例展示字段的选择列表\n   *\n   * @param service 监控服务名\n   */\n  getInstanceAliasList(service) {\n    if (!service) {\n      return [];\n    }\n    return _.map(InstanceAliasList[`${_.toUpper(service)}InstanceAliasList`] || [], (item) => ({\n      text: `As ${item}`,\n      value: item,\n    }));\n  }\n  getNamespaces(query) {\n    return _.map(this.namespaces, (o: any) => ({ text: o.label, value: o.namespace })); // TODO: 为什么对对象排序不行呢？？？？待解决\n  }\n  onNamespaceChange() {\n    const service = GetServiceFromNamespace(this.target.namespace) || '';\n    this.hideRegion = !!SERVICES.find((o) => o.service === service)?.hideRegion;\n    this.regions = [];\n    this.metricList = [];\n    this.periodList = [];\n    this.dimensionList = [];\n    this.instanceList = [];\n    // this.listenerList = [];\n\n    const initState = InitServiceState[service];\n    this.target[service] = _.cloneDeep(initState);\n    this.target.service = service;\n\n    this.instanceAliasList = this.getInstanceAliasList(service);\n    // this.listenerAliasList = this.getListenerAliasList(service);\n\n    this.refresh();\n    if (this.isCascader) this.$scope.$apply();\n  }\n\n  /**\n   * 获取地域列表\n   * output:\n   *  [\n   *    {\n   *      \"Region\": \"ap-beijing\",\n   *      \"RegionName\": \"华北地区(北京)\",\n   *      \"RegionState\": \"AVAILABLE\"\n   *    },\n   *    {\n   *      \"Region\": \"ap-guangzhou\",\n   *      \"RegionName\": \"华南地区(广州)\",\n   *      \"RegionState\": \"AVAILABLE\"\n   *    }\n   *  ]\n   */\n  getRegions(query) {\n    const service = this.target.service;\n    if (!service || _.startsWith('$')) {\n      return [];\n    }\n    if (this.regions.length) {\n      return this.regions;\n    }\n    return this.datasource\n      .getRegions(service)\n      .then((list) => {\n        this.regions = list;\n        return list;\n      })\n      .catch(this.handleQueryCtrlError.bind(this));\n  }\n\n  onRegionChange() {\n    const service = this.target.service;\n    this.target[service].instance = '';\n    this.instanceList = [];\n    // this.listenerList = [];\n    this.isMetricsNeedUpdate = true;\n    _.forEach(this.target[service].dimensionObject, (__, key) => {\n      this.target[service].dimensionObject[key] = { Name: key, Value: '' };\n    });\n    this.target[service].queries = _.cloneDeep(InitServiceState[service].queries);\n    this.getInstances();\n    this.refresh();\n  }\n\n  /**\n   * 获取模板变量的实际值\n   *\n   * @param variable 模板变量的名字\n   * @param multiple 是否允许多选，如果为 false，返回实际值数组的第一个值\n   */\n  getVariable(variable: string, multiple: boolean) {\n    return ReplaceVariable(this.templateSrv, this.panelCtrl.panel.scopedVars, variable, multiple);\n  }\n\n  getMetricNameDesc() {\n    const service = this.target.service;\n    const index = _.findIndex(this.metricList, (item) => item.MetricName === this.target[service].metricName);\n    return index !== -1 ? this.metricList[index].Meaning.Zh : '';\n  }\n\n  getMetrics(query) {\n    const service = this.target.service;\n    const region = this.getVariable(_.get(this.target[service], 'region', ''), false);\n\n    if (!service || !region) {\n      return [];\n    }\n    if (!this.isMetricsNeedUpdate && this.metricList.length > 0) {\n      return _.map(this.metricList, (item) => ({ text: item.MetricName, value: item.MetricName }));\n    }\n    return this.datasource\n      .getMetrics(service, region)\n      .then((list) => {\n        this.metricList = list;\n        this.isMetricsNeedUpdate = false;\n        const index = _.findIndex(this.metricList, (item) => item.MetricName === this.target[service].metricName);\n        if (index !== -1) {\n          this.periodList = _.get(this.metricList[index], 'Period', []);\n          this.dimensionList = _.get(this.metricList[index], 'Dimensions.0.Dimensions', []);\n        }\n        return _.map(list, (item) => ({ text: item.MetricName, value: item.MetricName }));\n      })\n      .catch(this.handleQueryCtrlError.bind(this));\n  }\n\n  onMetricChange() {\n    const service = this.target.service;\n    let periodList = [];\n    let dimensionList = [];\n    const dimensionObject: any = {};\n    let metricUnit = '';\n    const index = _.findIndex(this.metricList, (item) => item.MetricName === this.target[service].metricName);\n    if (index !== -1) {\n      periodList = _.get(this.metricList[index], 'Period', []);\n      dimensionList = _.get(this.metricList[index], 'Dimensions.0.Dimensions', []);\n      // dimensionList = dimensionList.length > 0 ? dimensionList : (DefaultDimensions[service] ?? []);\n      metricUnit = _.get(this.metricList[index], 'Unit', '');\n    }\n    _.forEach(dimensionList, (item) => {\n      dimensionObject[item] = { Name: item, Value: '' };\n    });\n    this.periodList = periodList;\n    this.dimensionList = dimensionList;\n    this.target[service].period =\n      periodList.length > 0 ? (_.indexOf(periodList, 300) === -1 ? periodList[0] : 300) : undefined;\n    this.target[service].dimensionObject = dimensionObject;\n    this.target[service].metricUnit = metricUnit;\n    this.refresh();\n  }\n\n  getInstances() {\n    const service = this.target.service;\n    const region = this.getVariable(_.get(this.target[service], 'region', ''), false);\n    if (!service || !region) {\n      return [];\n    }\n    const params = this.getInstanceQueryParams(service);\n    return this.datasource\n      .getInstances(service, region, params)\n      .then((list) => {\n        this.instanceList = list;\n        const instanceAlias = this.target[service].instanceAlias; // InstanceId\n        const instances: any[] = [];\n        _.forEach(list, (item) => {\n          // 根据 instanceAlias，确定实例展示字段，并保存至 _InstanceAliasValue，用于 constants.ts 的监控数据解析函数 ParseQueryResult\n          const instanceAliasValue = _.get(item, instanceAlias);\n          // console.log({instanceAliasValue}); 遍历出所有的InstanceId\n          if (instanceAliasValue) {\n            if (typeof instanceAliasValue === 'string') {\n              item._InstanceAliasValue = instanceAliasValue;\n              instances.push({ text: instanceAliasValue, value: JSON.stringify(item) });\n            } else if (_.isArray(instanceAliasValue)) {\n              _.forEach(instanceAliasValue, (subItem) => {\n                item._InstanceAliasValue = subItem;\n                instances.push({ text: subItem, value: JSON.stringify(item) });\n              });\n            }\n          }\n        });\n        return instances;\n      })\n      .catch(this.handleQueryCtrlError.bind(this));\n  }\n  onInstanceChange(v) {\n    const service = this.target.service;\n    if (this.target[service].listener) {\n      this.target[service].listener = '';\n    }\n    this.refresh();\n  }\n\n  // getListeners() {\n  //   const service = this.target.service;\n  //   const region = this.getVariable(_.get(this.target[service], 'region', ''), false);\n  //   const instance = this.getVariable(_.get(this.target[service], 'instance', ''), false);\n  //   if (!service || !region) {\n  //     return [];\n  //   }\n  //   let instanceMap = {};\n  //   // console.log({instance});\n  //   try {\n  //     instanceMap = JSON.parse(instance);\n  //   } catch (e) {\n  //     console.log(e);\n  //   }\n  //   const idKey = IdKeys[service];\n  //   const instanceId = _.get(instanceMap, idKey);\n  //   return this.datasource.getListeners(service, region, instanceId)\n  //     .then(list => {\n  //       this.listenerList = list;\n  //       const listenerAlias = this.target[service].listenerAlias;\n  //       const listeners: any[] = [];\n  //       _.forEach(list, (item) => {\n  //         const listenerAliasValue = _.get(item, listenerAlias);\n  //         if (listenerAliasValue) {\n  //           if (typeof listenerAliasValue === 'string') {\n  //             item._listenerAliasValue = listenerAliasValue;\n  //             listeners.push({ text: listenerAliasValue, value: JSON.stringify(item) });\n  //           } else if (_.isArray(listenerAliasValue)) {\n  //             _.forEach(listenerAliasValue, (subItem) => {\n  //               item._listenerAliasValue = subItem;\n  //               listeners.push({ text: subItem, value: JSON.stringify(item) });\n  //             });\n  //           }\n  //         }\n  //       });\n  //       // console.log({listeners});\n  //       return listeners;\n  //     })\n  //     .catch(this.handleQueryCtrlError.bind(this));\n  // }\n  /**\n   * 获取实例请求接口的请求参数\n   *\n   * @param service 监控服务名\n   */\n  getInstanceQueryParams(service) {\n    const queries = this.target[service].queries;\n    if (GetInstanceQueryParams[`${_.toUpper(service)}GetInstanceQueryParams`]) {\n      return GetInstanceQueryParams[`${_.toUpper(service)}GetInstanceQueryParams`](queries);\n    } else {\n      return {};\n    }\n  }\n\n  onInstanceAliasChange() {\n    // 仅当 instance 字段不是模板变量时，执行以下操作\n    if (!this.isVariable('instance')) {\n      const service = this.target.service;\n      this.target[service].instance = '';\n      this.refresh();\n    }\n  }\n\n  onInstanceQueryChange() {\n    // 仅当 instance 字段不是模板变量时，执行以下操作\n    if (!this.isVariable('instance')) {\n      const service = this.target.service;\n      this.target[service].instance = '';\n      this.instanceList = [];\n      _.forEach(this.target[service].dimensionObject, (__, key) => {\n        this.target[service].dimensionObject[key] = { Name: key, Value: '' };\n      });\n      this.refresh();\n    }\n  }\n  isVariable(field) {\n    const service = this.target.service;\n    const value = this.target[service]?.[field];\n    return isVariable(value);\n  }\n  checkShowDetail(field) {\n    return !this.isVariable(field) && this.target.showInstanceDetails;\n  }\n}\n","import _ from 'lodash';\nimport { SERVICES } from './tc_monitor';\n\nexport class TCMonitorDatasourceConfigCtrl {\n  static templateUrl = 'datasource/partials/config.html';\n  current: any;\n\n  filterKey = '';\n\n  error = {\n    secretId: '',\n    secretKey: '',\n  };\n\n  // save后保存，不用再次出入\n  secretKeyCache = '';\n\n  get filteredList() {\n    const rawList = this.current.jsonData.services ?? [];\n    return rawList\n      .filter((item) => item.label.toLowerCase().includes(this.filterKey.toLowerCase()))\n      .map((item) => {\n        item.filteredLabel = this.getFitleredLabel(item.label);\n        return item;\n      });\n  }\n\n  get allChecked() {\n    return this.filteredList.length && this.filteredList.every((item) => this.current.jsonData[item.service]);\n  }\n\n  set allChecked(v) {\n    this.filteredList.forEach((item) => {\n      this.current.jsonData[item.service] = v;\n    });\n  }\n\n  /** @ngInject */\n  constructor($scope) {\n    this.current.jsonData.services = SERVICES;\n    // 默认设置所有监控服务项不选\n    _.forEach(this.current.jsonData.services, (service) => {\n      this.current.jsonData[service.service] = _.get(this.current.jsonData, [service.service], false);\n    });\n  }\n  resetSecret() {\n    this.current.secureJsonFields.secretKey = false;\n    this.current.jsonData.secretId = '';\n  }\n  onSecretKeyChange(secretKey) {\n    this.current.secureJsonData = { ...this.current.secureJsonData, secretKey };\n  }\n  getFitleredLabel(label: string) {\n    if (!this.filterKey) return label;\n    return label.replace(new RegExp(`(${this.filterKey})`, 'ig'), '<span class=\"filtered-color\">$1</span>');\n  }\n\n  checkSecretId(target: string) {\n    // const isValid = /^[a-zA-Z\\d]+$/.test(target) && target?.length === 36;\n    const isValid = target?.length > 0;\n    this.error.secretId = isValid ? '' : 'SecretId is required! ';\n  }\n\n  checkSecretKey(target: string) {\n    // const isValid = /^[a-zA-Z\\d]+$/.test(target) && target?.length === 32;\n    const isValid = target?.length > 0;\n    this.error.secretKey = isValid ? '' : 'SecretKey is required! ';\n  }\n}\n","import { TCMonitorDatasource } from './datasource';\nimport { TCMonitorDatasourceQueryCtrl } from './query.ctrl';\nimport { TCMonitorDatasourceConfigCtrl } from './config.ctrl';\n\nexport {\n  TCMonitorDatasource as Datasource,\n  TCMonitorDatasourceConfigCtrl as ConfigCtrl,\n  TCMonitorDatasourceQueryCtrl as QueryCtrl,\n};\n"],"sourceRoot":""}