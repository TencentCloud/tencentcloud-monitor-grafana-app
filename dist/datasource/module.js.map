{"version":3,"sources":["webpack://TencentCloudMonitorGrafanaApp/webpack/bootstrap","webpack://TencentCloudMonitorGrafanaApp/external \"lodash\"","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/_base/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/common/sign.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/common/signV2.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/common/constants.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/common/utils.ts","webpack://TencentCloudMonitorGrafanaApp/external \"app/core/core_module\"","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/_base/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/common/indexedDB.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/common/datasourceStorage.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/index.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tdmq/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcdb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/gse/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/clb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm_block_storage/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/apigateway/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ckafka/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/v_clb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cynosdb_mysql/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/scf/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/sqlserver/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/external \"@grafana/runtime\"","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bmIntraLb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bm_lb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bm_pcx/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cbs/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdn_province/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ceip_summary/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cmq_topic/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cpm/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/postgresql/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tcaplus/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpc_net_detect/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ces/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dc/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcg/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcx/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm_lb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/qaap/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/redis_mem/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vbc/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpngw/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpnx/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/waf/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cfs/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cmq/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cvm/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/mr/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/pcx/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/redis/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bwp/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdn/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/lb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/mongodb/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/nat_gateway/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ov_cdn/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/external \"moment\"","webpack://TencentCloudMonitorGrafanaApp/external \"angular\"","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/apigateway/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bmIntraLb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bm_lb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bm_pcx/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bwp/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cbs/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdn/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdn_province/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ceip_summary/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ces/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cfs/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ckafka/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/clb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cmq/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cmq_topic/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cos/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cpm/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cvm/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cynosdb_mysql/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dc/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcdb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcg/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcx/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm_block_storage/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm_lb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/gse/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/lb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/mongodb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/mr/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/nat_gateway/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ov_cdn/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/pcx/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/postgresql/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/qaap/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/redis/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/redis_mem/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/scf/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/sqlserver/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tcaplus/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tdmq/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/v_clb/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vbc/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpc_net_detect/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpngw/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpnx/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/waf/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/apigateway/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bmIntraLb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bm_lb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bm_pcx/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/bwp/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cbs/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdn/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cdn_province/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ceip_summary/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ces/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cfs/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ckafka/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/clb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cmq/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cmq_topic/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cos/query_def.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cpm/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cvm/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/cynosdb_mysql/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dc/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcdb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcg/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/dcx/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm_block_storage/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ecm_lb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/gse/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/lb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/mongodb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/mr/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/nat_gateway/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/ov_cdn/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/pcx/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/postgresql/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/qaap/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/redis/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/redis_mem/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/scf/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/sqlserver/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tcaplus/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/tdmq/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/v_clb/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vbc/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpc_net_detect/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpngw/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/vpnx/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/waf/query.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor sync ^.*$","webpack://TencentCloudMonitorGrafanaApp/../node_modules/qs/lib/utils.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/qs/lib/formats.js","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor/_base/query_filter.ts","webpack://TencentCloudMonitorGrafanaApp/../node_modules/qs/lib/index.js","webpack://TencentCloudMonitorGrafanaApp/external \"app/plugins/sdk\"","webpack://TencentCloudMonitorGrafanaApp/external \"@grafana/ui\"","webpack://TencentCloudMonitorGrafanaApp/external \"react\"","webpack://TencentCloudMonitorGrafanaApp/external \"react-dom\"","webpack://TencentCloudMonitorGrafanaApp/./datasource/partials/query.editor.html","webpack://TencentCloudMonitorGrafanaApp/./datasource/tc_monitor sync ^\\.\\/[a-zA-Z]\\w+\\/(datasource)|(query(_def)","webpack://TencentCloudMonitorGrafanaApp/../node_modules/qs/lib/stringify.js","webpack://TencentCloudMonitorGrafanaApp/../node_modules/qs/lib/parse.js","webpack://TencentCloudMonitorGrafanaApp/./datasource/css/query_editor.css?eb2b","webpack://TencentCloudMonitorGrafanaApp/../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://TencentCloudMonitorGrafanaApp/./datasource/css/query_editor.css","webpack://TencentCloudMonitorGrafanaApp/../node_modules/css-loader/dist/runtime/api.js","webpack://TencentCloudMonitorGrafanaApp/./datasource/datasource.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/components/multi_condition.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/components/custom_select_dropdown.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/common/react-loader.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/components/cascader.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/partials/queryEditorTemplate.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/query.ctrl.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/config.ctrl.ts","webpack://TencentCloudMonitorGrafanaApp/./datasource/module.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","instanceSettings","backendSrv","templateSrv","instanceListCache","extraMetricDims","checkKeys","MetricReqConfig","extrasAlias","queryMonitorExtraConfg","this","url","secretId","jsonData","Namespace","service","getOtherAlias","instance","target","result","alias","_InstanceAliasValue","forEach","extra","extraAlia","indexOf","getAliasValue","Array","isArray","join","formatVarDisplay","displayTpl","instanceAlias","replace","a","b","InstanceAliasList","includes","metricFindQuery","query","regex","action","namespace","display","payload","region","instancealias","templateQueryIdMap","match","getRegions","getVariable","getVariableInstances","res","flatMap","item","insAlias","text","setInstance","getInstance","instanceCache","cloneDeep","find","fetchMetricData","Promise","resolve","dimensionsFormat","dimKeys","ins","dimensionObject","options","keyTmp","invalidDim","InvalidDimensions","getInvalidDimensions","extraDimValue","dim_KeyInStorage","dim_KeyInTarget","dim_KeyInMap","scopedVars","extraSourceMap","JSON","parse","getExtraStorage","extraStorage","otherAlias","length","Ekey","Name","Value","queries","filter","targets","hide","metricName","isEmpty","map","instances","concat","inst","error","insInReq","keys","dimResult","push","Dimensions","data","StartTime","range","from","format","EndTime","to","Period","period","Instances","MetricName","getMonitorData","all","then","responses","flatten","getInstanceReqConfig","selfIns","metric","rs","trim","valStr","split","params","serviceInfo","doRequest","path","response","RegionSet","RegionName","Region","RegionState","getMetrics","MetricSet","resFilterFn","resultFilter","getInstances","InstanceReqConfig","field","interceptor","Offset","Limit","request","Error","total","TotalCount","TotalCnt","param","isValidConfigField","testDatasource","cvmErr","monitorErr","serviceErr","cvmAuthFail","monitorAuthFail","serviceAuthFail","messages","message","compact","uniq","status","title","statusText","code","signObj","id","datasourceRequest","host","version","datasourceId","stringify","nowDate","utc","timestamp","unix","date","getHeader","getResourceHeader","method","headers","Host","Service","Version","Action","Timestamp","Method","Uri","Query","Body","Headers","resp","authorization","token","intranet","grafanaVersion","window","grafanaBootData","settings","buildInfo","Authorization","toString","defaults","generateQueryString","getResourceQueryString","assign","secretKey","querystring","queryString","FINACE_REGIONS","SERVICES_API_INFO","api","monitor","cvm","cdb","pcx","vpc","mongodb","clb","postgres","cdn","redis","scf","cfs","ckafka","dc","cynosdb","sqlserver","bm","bmeip","bmvpc","bmlb","es","emr","cmq","cbs","tcaplusdb","dcdb","apigateway","tdmq","gaap","ecm","gse","FINACE_HOST","GetServiceAPIInfo","__","getHostAndPath","GetServiceFromNamespace","ParseMetricQuery","str","val","e","toLower","ReplaceVariable","multiple","varname","varFlag","regResult1","String","regResult2","parseVariableFormat","replaceVar","GetDimensions","obj","dimensions","undefined","ParseQueryResult","instanceList","dataPoints","dataPoint","instanceAliasValue","isInstanceMatch","splice","datapoints","parseDataPoint","timestamps","values","index","isVariable","GetRequestParams","signParams","pick","headerSigned","GetRequestParamsV2","sign","SliceLength","len","num","Math","ceil","getFieldsValue","fields","fetchAllFactory","fetcher","_params","Result","firstLists","delta","batchCount","pmList","fill","_","reduce","acc","cur","lists","list","instanceQueryParamsBaseParse","isFilter","omit","Values","slice","isObject","isNumber","Filters","getNamesapceFromService","serviceName","serviceGroupBy","services","label","groupName","existedGroup","items","__WEBPACK_EXTERNAL_MODULE__4__","config","detailConfig","QueryCtrl","newQueryIns","$scope","$rootScope","getDropdown","datasource","getFilterDropdown","directive","template","controller","restrict","scope","showDetail","getDropdownOptions","onChange","store","promisify","type","reject","onsuccess","event","returnMap","msg","onerror","props","initDB","indexedDB","webkitIndexedDB","mozIndexedDB","msIndexedDB","open","onupgradeneeded","db","objectStoreNames","contains","createObjectStore","keyPath","openDB","insertData","storeName","transaction","objectStore","add","oncomplete","addData","isCover","getData","oldData","getObjectStore","newData","requestUpdate","put","seviceName","getAllData","getAll","insKey","cacheWay","setStorage","getStorage","setExtraStorage","EValue","serviceKey","storage","SERVICES","href","hideRegion","Datasources","InitStates","GetInstanceQueryParams","hackModuleName","postgresql","mr","filePath","moduleName","fileName","prefix","toUpperCase","getParams","queryEditorName","TDMQInvalidDemensions","tenantId","topicName","environmentId","TDMQInstanceAliasList","TDMQFilterFieldsDescriptor","enDescriptor","cnDescriptor","link","min","max","CDNPROVINCE_STATE","metricUnit","regionSupported","modifyDimensons","metricItem","metricTmp","keyInStorage","TopicName","EnvironmentId","DCDBInvalidDemensions","nodeid","instanceid","shardid","ShardId","DCDBInstanceAliasList","NodeId","ShardInstanceId","DCDBFilterFieldsDescriptor","queryEditorConfig","instanceDocUrl","fieldDescriptor","DCDB_STATE","InstanceIds","SearchName","SearchKey","ProjectIds","VpcId","SubnetId","OrderBy","OrderByType","ExclusterType","ExclusterIds","FilterInstanceType","modifyMetricConf","v","IsFilterVpc","IsFilterExcluster","fleetId","GSEInvalidDemensions","fleetid","queuename","GSEInstanceAliasList","FleetId","fleet","queue","GSEFilterFieldsDescriptor","GSE_STATE","InstanceId","LOADBALANCEFieldsDescriptor","LOADBALANCE_STATE","Port","Protocol","listener","LoadBalancerIds","Forward","LoadBalancerName","Domain","LoadBalancerVips","BackendPublicIps","BackendPrivateIps","ProjectId","WithRs","SecurityGroup","MasterZone","OrderType","LOADBALANCEListenerAliasList","LOADBALANCEVALIDDIMENSIONS","vip","loadBalancerPort","protocol","ECMBLOCKSTORAGEInvalidDemensions","uuid","diskId","ECMBLOCKSTORAGEInstanceAliasList","ECMBLOCKSTORAGEFilterFieldsDescriptor","ECMBLOCKSTORAGE_STATE","DiskId","APIGATEWAYInvalidDemensions","serviceId","environmentName","apiid","apiId","APIGATEWAYInstanceAliasList","environmentList","EnvironmentName","APIGATEWAYFilterFieldsDescriptor","APIGATEWAY_STATE","ServiceId","ServiceName","NotUsagePlanId","Environment","IpVersion","CKAFKAQueryDescriptor","CKAFKA_STATE","topicId","consumerGroup","partition","Status","SearchWord","TagKey","CKAFKAInstanceAliasList","CKAFKATopicAliasList","CKAFKAInvalidDemensions","instanceId","TopicList","GroupList","PartitionList","TopicId","GroupName","Partition","VCLBInvalidDemensions","VCLBInstanceAliasList","VCLBFilterFieldsDescriptor","VCLB_STATE","clbNamespaceMap","public","private","cynosdbMysqlFilterFieldsDescriptor","CYNOSDB_STATE","DbType","CYNOSDBMYSQLInstanceAliasList","CYNOSDBInvalidDemensions","SCFQueryDescriptor","SCF_STATE","Order","Description","SCFInstanceAliasList","SCFInvalidDemensions","functionName","SCFDefaultDimensionList","SQLSERVERInvalidDemensions","resourceId","SQLSERVERInstanceAliasList","SQLSERVERNETFilterFieldsDescriptor","SQLSERVER_STATE","InstanceIdSet","PayMode","VipSet","InstanceNameSet","VersionSet","Zone","__WEBPACK_EXTERNAL_MODULE__19__","BMINTRALBInvalidDemensions","vpcId","BMINTRALBInstanceAliasList","BMINTRALBFilterFieldsDescriptor","BMINTRALB_STATE","BMLBValidMetricsT","isValidMetric","validMetrics","toUpper","CPMInvalidDemensions","BMLBInstanceAliasList","CPMFilterFieldsDescriptor","CPM_STATE","BMPCXInvalidDemensions","peeringConnectionId","BMPCXInstanceAliasList","BMPCXFilterFieldsDescriptor","BMPCX_STATE","VpcPeerConnectionIds","CBSInvalidDemensions","diskname","unInstanceId","CBSInstanceAliasList","CBSFilterFieldsDescriptor","CBS_STATE","DiskIds","OrderField","ReturnBindAutoSnapshotPolicy","metricObj","dimension","CDNPROVINCEInvalidDemensions","domain","projectid","province","appid","CDNPROVINCEInstanceAliasList","CDNPROVINCEFilterFieldsDescriptor","isp","district","origin","serviceType","projectId","domainType","fullUrlCache","https","originPullProtocol","tagKey","CEIPInvalidDemensions","eip","CEIPSUMMARYInstanceAliasList","CEIPFilterFieldsDescriptor","CEIP_STATE","InstanceQueryDescriptor","InvalidDemensions","subscription","subscriptionId","CPMInstanceAliasList","DeviceClassCode","WanIps","LanIps","Alias","VagueIp","AutoRenewFlag","DeviceType","IsLuckyDevice","ECMInvalidDemensions","ECMInstanceAliasList","ECMFilterFieldsDescriptor","ECM_STATE","zone","PostgresFieldsDescriptor","POSTGRESInstanceAliasList","POSTGRES_STATE","PostgreInvalidDemensions","uid","TCAPLUSInvalidDemensions","TCAPLUSInstanceAliasList","TCAPLUSFilterFieldsDescriptor","TCAPLUS_STATE","ClusterId","TableGroupIds","TableName","TableInstanceId","TableIdlType","TableType","ListElementNum","ReservedVolume","ReservedReadQps","ReservedWriteQps","Memo","FileName","FileExtType","FileSize","FileContent","SelectedTables","regonsMap","VPCNETInvalidDemensions","netdetectid","netDetectId","VPCNETDETECTInstanceAliasList","VPCNETFilterFieldsDescriptor","VPCNET_STATE","CESInvalidDemensions","uInstanceId","CESInstanceAliasList","CESFilterFieldsDescriptor","CES_STATE","InstanceNames","OrderByKey","IpList","DCFilterFieldsDescriptor","DC_STATE","DirectConnectIds","DCInstanceAliasList","DCInvalidDemensions","directConnectId","directconnectid","DCGInvalidDemensions","directConnectGatewayId","DCGInstanceAliasList","DCGFilterFieldsDescriptor","DCG_STATE","DCXFilterFieldsDescriptor","DCX_STATE","DCXInstanceAliasList","DCXInvalidDemensions","directconnectconnid","directConnectConnId","ECMLBInvalidDemensions","ECMLBInstanceAliasList","ECMLBFilterFieldsDescriptor","QAAPInvalidDemensions","channelId","QAAPInstanceAliasList","QAAPFilterFieldsDescriptor","QAAP_STATE","AccessRegion","RealServerRegion","GroupId","RedisMemFieldsDescriptor","REDISMEM_STATE","VpcIds","SubnetIds","InstanceName","UniqVpcIds","UniqSubnetIds","TypeVersion","EngineName","AutoRenew","BillingMode","Type","REDISMEMInstanceAliasList","RedisMemInvalidDemensions","VBCInvalidDemensions","VBCInstanceAliasList","VBCFilterFieldsDescriptor","VBC_STATE","DRegion","SRegion","state","VPNGWInvalidDemensions","vpnGwId","VPNGWInstanceAliasList","VPNGWFilterFieldsDescriptor","VPNGW_STATE","VPNXInvalidDemensions","vpnConnId","VPNXInstanceAliasList","VPNXFilterFieldsDescriptor","VPNX_STATE","WAFFilterFieldsDescriptor","WAF_STATE","WAFInstanceAliasList","WAFInvalidDemensions","CDBFieldsDescriptor","CDB_STATE","InstanceTypes","Vips","SecurityGroupId","PayTypes","TaskStatus","EngineVersions","ZoneIds","CdbErrors","OrderDirection","InitFlag","CDBInstanceAliasList","CDBInvalidDemensions","insttype","CFSQueryDescriptor","CFS_STATE","FileSystemId","CFSInstanceAliasList","CFSInvalidDemensions","queueId","queueName","QueueName","CVMFilterFieldsDescriptor","CVM_STATE","instanceIdsChecked","filtersChecked","CVMInstanceAliasList","CVMValidMetricsT","CVMValidMetrics","Proxy","k","receiver","startsWith","Reflect","has","propKey","nodeIP","DisplayStrategy","Asc","PCX_STATE","limit","offset","peeringConnectionName","PCXFieldsDescriptor","PCXInstanceAliasList","RedisFieldsDescriptor","REDIS_STATE","REDISInstanceAliasList","RedisInvalidDemensions","redis_uuid","BWPFilterFieldsDescriptor","BWP_STATE","BandwidthPackageIds","BWPInstanceAliasList","BWPInvalidDemensions","bandwidthPackageId","CDNFilterFieldsDescriptor","CDN_STATE","CDNInstanceAliasList","CDNInvalidDemensions","LBFilterDescriptor","LB_STATE","LBInstanceAliasList","LBInvalidDemensions","MONGODBFieldsDescriptor","MONGODB_STATE","InstanceType","ClusterType","MONGODBInstanceAliasList","MONGODBInvalidDemensions","NATGATEWAYInstanceAliasList","NATGatewayFilterFieldsDescriptor","NATGATEWAY_STATE","NatGatewayIds","NATInvalidDemensions","natId","OVCDNFilterFieldsDescriptor","OVCDN_STATE","OVCDNInstanceAliasList","OVCDNInvalidDemensions","__WEBPACK_EXTERNAL_MODULE__56__","__WEBPACK_EXTERNAL_MODULE__57__","responseField","getEnvironmentNameList","LoadBalancerType","RegionMap","keyBy","RegionInfoSet","RegionDescription","rawSet","getZones","ZoneSet","ZoneName","ZoneId","ZoneState","getConsumerList","MapInfoList","TopicAliasList","getConsumerGroups","uniqBy","formatTopicVarDisplay","topic","topicAlias","topicalias","group","par","ListenerAliasList","getListenerList","LoadBalancerId","formatListenerVarDisplay","listenerAlias","listenAlias","lisId","dims","Set","fetchAllSubscription","SubscriptionId","cosURL","Buckets","BucketName","bucket","regionList","DeviceClassSet","Product","extraActionMap","DescribeDCDBShards","pickKey","DescribeDCDBInstanceNodeInfo","act","getDiskList","instanceObj","getQueueNameList","getFleetList","ClusterName","fetchAllNodes","Ip","NodeFlag","doRequestV2","totalCount","getVpcId","VpcSet","getVpcIds","MonitorVersion","getVersions","Versions","FunctionName","RegionInfos","DescribeTopics","DescribeEnvironments","getAllMetrics","public_metrics","private_metrics","init","getInstanceId","getServiceFn","getExtraDropdown","sQuery","onRefresh","onChecked","srcField","dstField","bwpQuery","BWPQueryCtrl","cdbQuery","CDBQueryCtrl","cdnQuery","CDNQueryCtrl","ExtraFields","scfQuery","SCFQueryCtrl","consumerGroupCacheMap","getExtraFields","CKAFKAQueryCtrl","onFieldChange","cacheMap","getTopicName","onExtraFieldChange","datas","CmqTopicQueryCtrl","cvmQuery","CVMQueryCtrl","dropdownTextConfig","actionMaps","lbQuery","LBQueryCtrl","mongodbQuery","MongoDBQueryCtrl","some","mrQuery","MrQueryCtrl","natGatewayQuery","NatGatewayQueryCtrl","ovCdnQuery","OVCDNQueryCtrl","pcxQuery","PCXQueryCtrl","redisQuery","RedisQueryCtrl","redisMemQuery","RedisMemQueryCtrl","evId","VBCQueryCtrl","webpackContext","req","webpackContextResolve","hexTable","array","arrayToObject","source","plainObjects","prop","refs","j","pop","compacted","compactQueue","decode","decodeURIComponent","encode","string","out","charCodeAt","charAt","isBuffer","constructor","isRegExp","merge","allowPrototypes","mergeTarget","percentTwenties","formatters","RFC1738","RFC3986","SPQueryCtrl","_config","queryDDO","formats","__WEBPACK_EXTERNAL_MODULE__161__","__WEBPACK_EXTERNAL_MODULE__162__","__WEBPACK_EXTERNAL_MODULE__163__","__WEBPACK_EXTERNAL_MODULE__164__","utils","arrayPrefixGenerators","brackets","indices","repeat","toISO","Date","toISOString","delimiter","encoder","encodeValuesOnly","serializeDate","skipNulls","strictNullHandling","generateArrayPrefix","sort","allowDots","formatter","objKeys","opts","TypeError","arrayFormat","joined","addQueryPrefix","arrayLimit","decoder","depth","parameterLimit","parseKeys","givenKey","child","segment","exec","parent","chain","leaf","root","cleanRoot","parseInt","isNaN","parseArrays","parseObject","ignoreQueryPrefix","tempObj","cleanStr","Infinity","parts","part","bracketEqualsPos","pos","parseValues","newObj","content","default","exported","locals","memo","isOldIE","Boolean","document","atob","getTarget","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","stylesInDom","getIndexByIdentifier","identifier","modulesToDom","idCountMap","identifiers","base","count","css","media","sourceMap","references","updater","addStyle","insertStyleElement","style","createElement","attributes","nonce","setAttribute","insert","appendChild","textStore","replaceText","replacement","applyToSingletonTag","remove","styleSheet","cssText","cssNode","createTextNode","childNodes","removeChild","insertBefore","applyToTag","removeAttribute","btoa","unescape","encodeURIComponent","firstChild","singleton","singletonCounter","update","styleIndex","parentNode","removeStyleElement","lastIdentifiers","newList","newLastIdentifiers","_i","_index","___CSS_LOADER_API_IMPORT___","useSourceMap","cssMapping","sourceMapping","base64","sourceURLs","sources","sourceRoot","cssWithMappingToString","mediaQuery","dedupe","alreadyImportedModules","_class","getNamespaces","namespaces","getCascaderNamespaces","validServices","getSelectedServices","promises","optionsTemp","promiseTemp","results","getListeners","errorMsg","upperFirst","fnName","argu","placeholder","maxCond","toInteger","onInputBlur","onChangeInternal","deleteCondition","addCondition","cond","onSelectChange","getSelectedOptions","selectedOptions","option","maxNum","minNum","getOptions","show","oldVariableText","highlightIndex","selectOptions","selectedValue","selected","selectedValues","search","dropdownVisible","updateLinkText","linkText","clearSelections","each","selectionsChanged","keyDown","evt","keyCode","moveHighlight","commitChanges","selectValue","direction","commitChange","excludeOthers","setAllExceptCurrentTo","newValue","other","ctrlKey","metaKey","shiftKey","queryChanged","toLowerCase","customSelectDropdown","$compile","$window","$timeout","controllerAs","bindToController","elem","bodyEl","element","body","linkEl","inputEl","bodyOnClick","$apply","vm","$watch","width","focus","on","off","RectCompo","componentName","propTypes","separator","changeOnSelect","onSelect","initialValue","allowCustomValue","formatCreateLabel","displayAllSelectedLevels","component","$element","_$scope","_$element","$onInit","entries","_query","args","setTimeout","render","loadBalance","lbPrivate","lbPublic","mongoDB","mrHDFS","mrHBASE","mrHIVE","mrNODE","mrPRESTO","mrSPARK","mrYARN","mrZOOKEEPER","editorHtml","serviceSwitch","$injector","regions","metricList","periodList","dimensionList","instanceAliasList","showInstanceDetails","cascaderOptions","defaultsDeep","getInstanceAliasList","panelCtrl","events","onDataReceived","onDataError","cascaderChange","onNamespaceChange","dataList","lastQueryError","lastQuery","anySeriesFromQuery","refId","err","handleQueryCtrlError","initState","refresh","isCascader","onRegionChange","isMetricsNeedUpdate","variable","panel","getMetricNameDesc","findIndex","Meaning","Zh","onMetricChange","getInstanceQueryParams","subItem","onInstanceChange","onInstanceAliasChange","onInstanceQueryChange","checkShowDetail","filterKey","secretKeyCache","current","filteredLabel","getFitleredLabel","filteredList","every","resetSecret","secureJsonFields","onSecretKeyChange","secureJsonData","RegExp","checkSecretId","isValid","checkSecretKey","templateUrl"],"mappings":"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ACXgW,KAAM,wDAER,CACE3X,QAAS,MACToT,MAAO,gBACPzR,UAAW,UACXgW,KAAM,sDACNtE,UAAW,QAEb,CACErT,QAAS,MACToT,MAAO,eACPzR,UAAW,UACXgW,KAAM,mDACNtE,UAAW,QAEb,CACErT,QAAS,aACToT,MAAO,yBACPzR,UAAW,kBACXgW,KAAM,mDACNtE,UAAW,QAEb,CACErT,QAAS,QACToT,MAAO,qBACPzR,UAAW,YACXgW,KAAM,uDACNtE,UAAW,QAEb,CACErT,QAAS,OACToT,MAAO,oBACPzR,UAAW,WACXgW,KAAM,uDACNtE,UAAW,QAEb,CACErT,QAAS,MACToT,MAAO,iBACPzR,UAAW,UACXgW,KAAM,uDACNtE,UAAW,QAEb,CACErT,QAAS,cACToT,MAAO,mCACPzR,UAAW,mBACXgW,KAAM,uDACNtE,UAAW,QAEb,CACErT,QAAS,eACToT,MAAO,4BACPzR,UAAW,qBACXgW,KAAM,uDACNtE,UAAW,QAEb,CACErT,QAAS,MACToT,MAAO,eACPzR,UAAW,UACXgW,KAAM,uDACNtE,UAAW,QAEb,CACErT,QAAS,KACToT,MAAO,iBACPzR,UAAW,SACXgW,KAAM,uDACNtE,UAAW,QAEb,CACErT,QAAS,WACToT,MAAO,wBACPzR,UAAW,gBACXgW,KAAM,uDACNtE,UAAW,cAEb,CACErT,QAAS,YACToT,MAAO,6BACPzR,UAAW,iBACXgW,KAAM,uDACNtE,UAAW,cAEb,CACErT,QAAS,cACToT,MAAO,8BACPzR,UAAW,kBACXgW,KAAM,uDACNtE,UAAW,cAEb,CACErT,QAAS,OACToT,MAAO,YACPzR,UAAW,YACXgW,KAAM,uDACNtE,UAAW,aAEb,CACErT,QAAS,MACToT,MAAO,YACPzR,UAAW,UACXiW,YAAY,EACZD,KAAM,uDACNtE,UAAW,OAEb,CACErT,QAAS,cACToT,MAAO,qBACPzR,UAAW,mBACXiW,YAAY,EACZD,KAAM,uDACNtE,UAAW,OAEb,CACErT,QAAS,QACToT,MAAO,eACPzR,UAAW,aACXiW,YAAY,EACZD,KAAM,uDACNtE,UAAW,OAEb,CACErT,QAAS,MACToT,MAAO,WACPzR,UAAW,aACXgW,KAAM,wDAER,CACE3X,QAAS,MACToT,MAAO,YACPzR,UAAW,UACXgW,KAAM,wDAER,CACE3X,QAAS,MACToT,MAAO,YACPzR,UAAW,UACXgW,KAAM,wDAER,CACE3X,QAAS,SACToT,MAAO,eACPzR,UAAW,aACXgW,KAAM,uDACNtE,UAAW,QAEb,CACErT,QAAS,MACToT,MAAO,qBACPzR,UAAW,UACXgW,KAAM,uDACNtE,UAAW,QAEb,CACErT,QAAS,WACToT,MAAO,uBACPzR,UAAW,eACXgW,KAAM,uDACNtE,UAAW,QAEb,CACErT,QAAS,OACToT,MAAO,kBACPzR,UAAW,WACXgW,KAAM,uDACNtE,UAAW,QAEb,CACErT,QAAS,MACToT,MAAO,iBACPzR,UAAW,UACXgW,KAAM,uDACNtE,UAAW,QAEb,CACErT,QAAS,KACToT,MAAO,gBACPzR,UAAW,SACXgW,KAAM,uDACNtE,UAAW,QAEb,CACErT,QAAS,MACToT,MAAO,eACPzR,UAAW,UACXgW,KAAM,uDACNtE,UAAW,WAEb,CACErT,QAAS,QACToT,MAAO,iBACPzR,UAAW,aACXgW,KAAM,uDACNtE,UAAW,WAEb,CACErT,QAAS,OACToT,MAAO,kBACPzR,UAAW,YACXgW,KAAM,wDAER,CACE3X,QAAS,YACToT,MAAO,wBACPzR,UAAW,kBACXgW,KAAM,uDACNtE,UAAW,WAEb,CACErT,QAAS,MACToT,MAAO,uBACPzR,UAAW,UACXgW,KAAM,wDAER,CACE3X,QAAS,SACToT,MAAO,oBACPzR,UAAW,gBACXgW,KAAM,uDACNtE,UAAW,eAEb,CACErT,QAAS,UACToT,MAAO,qBACPzR,UAAW,iBACXgW,KAAM,uDACNtE,UAAW,eAEb,CACErT,QAAS,SACToT,MAAO,oBACPzR,UAAW,gBACXgW,KAAM,uDACNtE,UAAW,eAEb,CACErT,QAAS,SACToT,MAAO,oBACPzR,UAAW,gBACXgW,KAAM,uDACNtE,UAAW,eAEb,CACErT,QAAS,WACToT,MAAO,sBACPzR,UAAW,kBACXgW,KAAM,uDACNtE,UAAW,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","file":"datasource/module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 174);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","import _ from 'lodash';\nimport moment from 'moment';\nimport DatasourceInterface from '../../datasource';\nimport {\n  GetRequestParams,\n  GetServiceAPIInfo,\n  ReplaceVariable,\n  GetDimensions,\n  ParseQueryResult,\n  SliceLength,\n} from '../../common/constants';\nimport instanceStorage from '../../common/datasourceStorage';\nimport { MetricQuery } from './types';\nimport { getNamesapceFromService } from '../../common/utils';\n\nexport interface TemplateQueryIdType {\n  instance: string;\n  listener?: string;\n}\n\ninterface queryConfigType {\n  dim_KeyInStorage: string;\n  dim_KeyInTarget?: string;\n  dim_KeyInMap: string;\n}\n\nexport abstract class BaseDatasource implements DatasourceInterface {\n  Namespace?: string;\n  service: string;\n  instanceListCache: any[] = [];\n  extraMetricDims: string[] = [];\n  url: string;\n  instanceSettings: any;\n  backendSrv: any;\n  templateSrv: any;\n  secretId: string;\n  checkKeys: string[] = [];\n  MetricReqConfig: {\n    resultFilter?: Function;\n  } = {};\n  extrasAlias?: string[] = [];\n  /*\n  一个配置：(用于处理除了InstanceId之外的)(Record中的key是指标修正之后的维度，即通过InvalidDemsion处理后)\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget 通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。为空则取即通过InvalidDemsion处理后的key\n  3 dim_KeyInMap 保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。即：templateQueryIdMap中内容。联合上面2的内容筛选出原始sourceMap\n  4 通过这个dim和sourceMap获取维度值。即sourceMap[dim]\n  */\n  queryMonitorExtraConfg: Record<string, queryConfigType> = {};\n\n  InstanceReqConfig?: {\n    service?: string;\n    action: string;\n    responseField: string;\n    interceptor?: {\n      request?: (params: unknown) => unknown;\n      response?: (data: unknown) => unknown;\n    };\n  };\n\n  InvalidDimensions?: Record<string, string>;\n\n  abstract InstanceAliasList: string[];\n  abstract templateQueryIdMap: TemplateQueryIdType; // 必须为标识\n\n  /** @ngInject */\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    this.instanceSettings = instanceSettings;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.url = instanceSettings.url;\n    this.secretId = (instanceSettings.jsonData || {}).secretId || '';\n  }\n\n  get namespace() {\n    // 需要注意的是this.service来自于原型上，在实例中导入时注入\n    return this.Namespace || getNamesapceFromService(this.service);\n  }\n\n  // 获取额外要显示到图例里的内容\n  getOtherAlias(instance: any, target: any): string {\n    let result = '';\n    const alias = instance._InstanceAliasValue;\n    this.extrasAlias?.forEach((extra) => {\n      const extraAlia = target[extra];\n      if (extraAlia && alias.indexOf(extraAlia) === -1) {\n        result += ` - ${extraAlia}`;\n      }\n    });\n    return result;\n  }\n\n  /* 格式化模板变量上的显示 */\n  getAliasValue(instance: Record<string, any>, alias: string) {\n    const result = instance[alias];\n    return Array.isArray(result) ? result.join() : result;\n  }\n\n  formatVarDisplay(instance: Record<string, any>, displayTpl: string | undefined, instanceAlias: string) {\n    // 获取display=aaa${InstanceName}bbb${InstanceId}ccc\n    if (displayTpl) {\n      return displayTpl.replace(/\\$\\{(\\w+)\\}/g, (a, b) => {\n        if (!b || !this.InstanceAliasList.includes(b)) {\n          return '';\n        }\n        return this.getAliasValue(instance, b);\n      });\n    }\n    return this.getAliasValue(instance, instanceAlias);\n  }\n  /**\n   * @param query 模板变量配置填写的 Query 参数对象，由顶层将字符串转换为了对象\n   */\n  async metricFindQuery(query: MetricQuery, regex?: string) {\n    const { action, namespace, display, payload = {} } = query;\n    let { region, instancealias = this.templateQueryIdMap.instance } = query;\n    if (!action || !namespace) {\n      return [];\n    }\n\n    // 查询地域列表\n    const regionQuery = action.match(/^DescribeRegions$/i);\n    if (regionQuery) {\n      return this.getRegions();\n    }\n\n    region = this.getVariable(region); // 将模板region转换为真实值\n\n    // 查询实例列表\n    if (region && action.match(/^DescribeInstances/i)) {\n      const result = await this.getVariableInstances(region, payload);\n      instancealias = this.InstanceAliasList.includes(instancealias) ? instancealias : this.templateQueryIdMap.instance;\n\n      const res = result.flatMap((item) => {\n        const insAlias = this.formatVarDisplay(item, display, instancealias);\n\n        item._InstanceAliasValue = insAlias; // FIXME:\n        // console.log(insAlias,item[this.templateQueryIdMap.instance]);\n\n        if (!item[instancealias]) return [];\n        return [\n          {\n            text: insAlias,\n            value: item[this.templateQueryIdMap.instance],\n          },\n        ];\n      });\n\n      // 缓存全量实例列表\n      await instanceStorage.setInstance(this.service, result);\n      return res;\n    }\n\n    // 在instance实例的基础上查询其他数据\n    let instance = this.getVariable(query['instance']);\n    if (_.isArray(instance)) instance = instance[0]; // 有额外维度，仅支持实例单选情况\n    if (region && action && instance) {\n      try {\n        // instance = JSON.parse(instance);\n        const instanceCache = await instanceStorage.getInstance(this.service);\n        // console.log({ instanceCache });\n\n        instance = _.cloneDeep(instanceCache.find((item) => item[this.templateQueryIdMap.instance] === instance)) ?? {};\n        // eslint-disable-next-line no-empty\n      } catch (error) {}\n      return this.fetchMetricData(action, region, instance, query);\n    }\n\n    return Promise.resolve([]);\n  }\n  // 获取指标数据\n  async fetchMetricData(action: string, region: string, instance: any, query?: any) {\n    return [];\n  }\n\n  /**\n   * 根据 Panel 的配置项，获取相应的监控数据\n   *\n   * @param options Panel 的配置参数\n   * @return 返回数据数组，示例如下\n   * [\n   *   {\n   *     \"target\": \"AccOuttraffic - ins-123\",\n   *     \"datapoints\": [\n   *       [861, 1450754160000],\n   *       [767, 1450754220000]\n   *     ]\n   *   }\n   * ]\n   */\n  async dimensionsFormat(dimKeys, ins, dimensionObject, target, service, options) {\n    for (let key of dimKeys) {\n      let keyTmp = key;\n      const invalidDim = this.InvalidDimensions || this.getInvalidDimensions(this);\n      if (key in invalidDim) {\n        // 从【维度中】的字段到【实例中】字段的映射。 { functionName: FunctionName }\n        keyTmp = invalidDim[key];\n        ins[key] = ins[keyTmp];\n      }\n      // console.log('dimensionObject2', dimensionObject, {key, keyTmp}, invalidDim);\n      let extraDimValue = this.getVariable(target[service][keyTmp]);\n      if (this.queryMonitorExtraConfg[keyTmp]) {\n        const { dim_KeyInStorage, dim_KeyInTarget = keyTmp, dim_KeyInMap } = this.queryMonitorExtraConfg[keyTmp];\n        let extraIns = ReplaceVariable(this.templateSrv, options.scopedVars, target[service][dim_KeyInTarget], true);\n        let extraSourceMap: any = {};\n        try {\n          extraSourceMap = JSON.parse(extraIns); // 兼容json字符串的 形式\n        } catch (error) {\n          if (_.isArray(extraIns)) extraIns = extraIns[0]; // 如果多个，取第一个。除了实例ID 暂不支持其他纬度多选\n          const extraStorage = await instanceStorage.getExtraStorage(this.service, dim_KeyInStorage);\n          // console.log({ extraStorage });\n          extraSourceMap = extraStorage.find((item) => item[dim_KeyInMap] === extraIns) ?? {};\n        }\n        // 增加ins实例之外的alias，填入到ins._InstanceAliasValue\n        const insAlias = ins._InstanceAliasValue;\n        const otherAlias = extraSourceMap._InstanceAliasValue;\n        if (otherAlias && insAlias.indexOf(otherAlias) === -1) {\n          ins._InstanceAliasValue += ` - ${otherAlias}`;\n        }\n\n        extraDimValue = extraSourceMap?.[keyTmp];\n      } else {\n        ins._InstanceAliasValue += this.getOtherAlias(ins, target);\n      }\n      // 设置instance，针对额外的维度，需要注意模板变量的值\n      // ins[key] = (ins[keyTmp]) ?? this.getVariable(target[service][keyTmp]);\n      ins[key] = ins[keyTmp] ?? extraDimValue;\n      // cynosdb产品接口返回维度和入参不一致\n      if (this.checkKeys.length > 0) {\n        this.checkKeys.forEach((Ekey) => {\n          ins[Ekey] = ins[key];\n        });\n      }\n      dimensionObject[key] = { Name: key, Value: ins[key] };\n    }\n    return dimensionObject;\n  }\n  query(options: any) {\n    const service = this.service!; // 强制声明非空\n    // console.log('query');\n\n    const queries = _.filter(options.targets, (item) => {\n      // 过滤无效的查询 target\n      return (\n        item.hide !== true &&\n        !!item.namespace &&\n        !!item[service].metricName &&\n        !_.isEmpty(ReplaceVariable(this.templateSrv, options.scopedVars, item[service].region, false)) &&\n        !_.isEmpty(ReplaceVariable(this.templateSrv, options.scopedVars, item[service].instance, true))\n      );\n    }).map(async (target) => {\n      // 实例 instances 可能为模板变量，需先获取实际值\n      // 针对JSON字符串和id的形式，分开做处理\n      let instances = ReplaceVariable(this.templateSrv, options.scopedVars, target[service].instance, true);\n      const instanceCache = await instanceStorage.getInstance(this.service);\n      // console.log({ instanceCache });\n      instances = [].concat(instances).map((inst) => {\n        try {\n          return JSON.parse(inst); // 兼容json字符串的 形式\n        } catch (error) {\n          return _.cloneDeep(instanceCache.find((item) => item[this.templateQueryIdMap.instance] === inst)) ?? {};\n        }\n      });\n      const region = ReplaceVariable(this.templateSrv, options.scopedVars, target[service].region, false);\n      const insInReq: any = [];\n      for (let ins of instances) {\n        const dimensionObject = target[service].dimensionObject;\n        // 处理dimensions的值\n        const dimKeys = Object.keys(dimensionObject);\n        const dimResult = await this.dimensionsFormat(dimKeys, ins, dimensionObject, target, service, options);\n        // console.log({dimResult})\n        insInReq.push([{ Dimensions: GetDimensions(dimResult) }]);\n      }\n      const data = {\n        StartTime: moment(options.range.from).format(),\n        EndTime: moment(options.range.to).format(),\n        Period: target[service].period || 300,\n        Instances: _.flatMap(insInReq),\n        Namespace: target.namespace,\n        MetricName: target[service].metricName,\n      };\n      return this.getMonitorData(data, region, instances);\n    });\n\n    if (queries.length === 0) {\n      return [];\n    }\n\n    return Promise.all(queries)\n      .then((responses) => {\n        return _.flatten(responses);\n      })\n      .catch((error) => {\n        return [];\n      });\n  }\n  getInstanceReqConfig(selfIns: any) {\n    return {} as any;\n  }\n  getInvalidDimensions(selfIns: any) {\n    return {} as any;\n  }\n  // 获取某个变量的实际值，this.templateSrv.replace() 函数返回实际值的字符串\n  getVariable(metric?: string) {\n    const rs = this.templateSrv.replace((metric || '').trim());\n    const valStr = rs.match(/\\{([\\w-,]+)\\}/);\n    // 判断是否为多选\n    if (valStr) {\n      return valStr[1].split(',');\n    }\n    return rs;\n  }\n\n  /**\n   * 获取 监控数据\n   * @param params 获取监控数据的请求参数\n   * @param region 地域信息\n   * @param instances 实例列表，用于对返回结果的匹配解析\n   */\n  getMonitorData(params, region, instances) {\n    const serviceInfo = GetServiceAPIInfo(region, 'monitor');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: params,\n      },\n      serviceInfo.service,\n      { action: 'GetMonitorData', region }\n    ).then((response) => {\n      return ParseQueryResult(response, instances);\n      // return this.getOtherAlias(response,instances)\n    });\n  }\n\n  getRegions(): any {\n    return this.doRequest(\n      {\n        url: this.url + '/cvm',\n      },\n      'cvm',\n      { action: 'DescribeRegions' }\n    ).then((response) => {\n      return _.filter(\n        _.map(response.RegionSet || [], (item) => {\n          return {\n            text: item.RegionName,\n            value: item.Region,\n            RegionState: item.RegionState,\n          };\n        }),\n        (item) => item.RegionState === 'AVAILABLE'\n      );\n    });\n  }\n\n  getMetrics(region = 'ap-guangzhou'): Promise<any> {\n    const serviceInfo = GetServiceAPIInfo(region, 'monitor');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: {\n          Namespace: this.namespace,\n        },\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeBaseMetrics' }\n    ).then((response) => {\n      const res = _.filter(\n        _.filter(response.MetricSet || [], (item) => !(item.Namespace !== this.namespace || !item.MetricName))\n      );\n      const resFilterFn = this.MetricReqConfig.resultFilter;\n      if (resFilterFn) {\n        return res.map((item) => resFilterFn(item));\n      }\n      return res;\n    });\n  }\n\n  getInstances(region, params = {}) {\n    const { service = this.service, action, responseField: field, interceptor } =\n      this.InstanceReqConfig || this.getInstanceReqConfig(this);\n    params = { Offset: 0, Limit: 100, ...params };\n    const serviceInfo = GetServiceAPIInfo(region, service);\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: interceptor?.request ? interceptor.request(params) : params,\n      },\n      serviceInfo.service,\n      { region, action }\n    ).then((response) => {\n      // 处理异常，则不按正常的情况处理，直接抛出错误\n      if (response?.Error) {\n        console.error(response.Error);\n        return response;\n      }\n\n      let result;\n      // 先，field处理\n      if (field) {\n        result = _.get(response, field) ?? _.get(response, `Result.${field}`) ?? [];\n      }\n\n      // 后，拦截器处理\n      if (interceptor?.response) {\n        result = interceptor.response(result);\n      }\n      return result;\n    });\n  }\n\n  getVariableInstances(region, query = {}): Promise<any[]> {\n    let result: any[] = [];\n    const params = { ...query, ...{ Offset: 0, Limit: 100 } };\n\n    const { service = this.service, action, responseField: field, interceptor } =\n      this.InstanceReqConfig || this.getInstanceReqConfig(this);\n\n    const serviceInfo = GetServiceAPIInfo(region, service);\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: interceptor?.request ? interceptor.request(params) : params,\n      },\n      serviceInfo.service,\n      { region, action }\n    ).then((response) => {\n      result = _.get(response, field) ?? _.get(response, `Result.${field}`) ?? [];\n      const total = response.TotalCount ?? response.TotalCnt ?? 0;\n      if (result.length >= total) {\n        return result;\n      } else {\n        const param = SliceLength(total, 100);\n        const promises: any[] = [];\n        _.forEach(param, (item) => {\n          promises.push(this.getInstances(region, { ...item, ...query }));\n        });\n        return Promise.all(promises)\n          .then((responses) => {\n            _.forEach(responses, (item) => {\n              result = _.concat(result, item);\n            });\n            return result;\n          })\n          .catch((error) => {\n            return result;\n          });\n      }\n    });\n  }\n\n  // 检查某变量字段是否有值\n  isValidConfigField(field: string) {\n    return field && field.length > 0;\n  }\n\n  testDatasource() {\n    // const { service = this.service, action } = this.InstanceReqConfig;\n    // const serviceInfo = GetServiceAPIInfo('ap-guangzhou', service);\n\n    if (!this.isValidConfigField(this.secretId)) {\n      return {\n        service: this.service,\n        status: 'error',\n        message: 'The SecretId/SecretKey field is required.',\n      };\n    }\n\n    return Promise.all([\n      this.getRegions(),\n      this.getMetrics(),\n      // this.doRequest(\n      //   {\n      //     url: this.url + serviceInfo.path,\n      //     data: {\n      //       Offset: 0,\n      //       Limit: 1,\n      //     },\n      //   },\n      //   service,\n      //   { region: 'ap-guangzhou', action },\n      // ),\n      this.getInstances('ap-guangzhou', {\n        Offset: 0,\n        Limit: 1,\n      }),\n    ])\n      .then((responses) => {\n        const cvmErr = _.get(responses, '[0].Error', {});\n        const monitorErr = _.get(responses, '[1].Error', {});\n        const serviceErr = _.get(responses, '[2].Error', {});\n        // const cvmAuthFail = _.get(cvmErr, 'Code', '').indexOf('AuthFailure') !== -1;\n        // const monitorAuthFail = _.get(monitorErr, 'Code', '').indexOf('AuthFailure') !== -1;\n        // const serviceAuthFail = _.get(serviceErr, 'Code', '').indexOf('AuthFailure') !== -1;\n        const cvmAuthFail = _.get(cvmErr, 'Code', '');\n        const monitorAuthFail = _.get(monitorErr, 'Code', '');\n        const serviceAuthFail = _.get(serviceErr, 'Code', '');\n        if (cvmAuthFail || monitorAuthFail || serviceAuthFail) {\n          const messages: any[] = [];\n          if (cvmAuthFail) {\n            messages.push(_.get(cvmErr, 'Code'));\n          }\n          if (monitorAuthFail) {\n            messages.push(_.get(monitorErr, 'Code'));\n          }\n          if (serviceAuthFail) {\n            messages.push(_.get(serviceErr, 'Code'));\n          }\n          const message = _.join(_.compact(_.uniq(messages)), '; ');\n          return {\n            service: this.service,\n            status: 'error',\n            message,\n          };\n        } else {\n          return {\n            namespace: this.namespace,\n            service: this.service,\n            status: 'success',\n            message: `Successfully queried the ${this.service} service.`,\n            title: 'Success',\n          };\n        }\n      })\n      .catch((error) => {\n        let message = `${this.service} service:`;\n        message += error.statusText ? error.statusText + '; ' : '';\n        if (_.get(error, 'data.error.code', '')) {\n          message += error.data.error.code + '. ' + error.data.error.message;\n        } else if (_.get(error, 'data.error', '')) {\n          message += error.data.error;\n        } else if (_.get(error, 'data', '')) {\n          message += error.data;\n        } else {\n          message += `Cannot connect to ${this.service} service.`;\n        }\n        return {\n          service: this.service,\n          status: 'error',\n          message: message,\n        };\n      });\n  }\n\n  async doRequest(options, service, signObj: any = {}) {\n    options = await GetRequestParams(\n      options,\n      service,\n      signObj,\n      this.secretId,\n      this.instanceSettings.id,\n      this.backendSrv\n    );\n    return this.backendSrv\n      .datasourceRequest(options)\n      .then((response) => {\n        return _.get(response, 'data.Response', {});\n      })\n      .catch((error) => {\n        throw error;\n      });\n  }\n}\n","import moment from 'moment';\n\nconst HttpRequestMethod = 'POST';\nconst CanonicalUri = '/';\nconst CanonicalQueryString = '';\nconst ContentType = 'application/json';\n\nexport default class Sign {\n  /**\n   * Tencent Cloud API Signature v3 reference: https://cloud.tencent.com/document/api/213/30654\n   * secretId: SecretId for identifying identity that is applied for on Cloud API Key.\n   * A SecretId corresponds to a unique SecretKey, which is used to generate the request Signature.\n   * secretKey: SecretKey is used to encrypt the signature string and verify the signature string on the server\n   * service: the name of service, which must be consistent with the request domain, such as cvm\n   * action: The name of the API for the desired operation\n   * host: the domain of service，which must be consistent with the request domain, such as cvm.tencentcloudapi.com\n   * version:  PI version, such as 2017-03-12\n   * payload: The request parameters\n   */\n\n  secretId: string;\n\n  service: string;\n  action: string;\n  host: string;\n  version: string;\n  payload: Record<string, any> | string;\n  region: string;\n  timestamp: number;\n  date: string;\n  backendSrv: any;\n  datasourceId: Number;\n  constructor(options) {\n    const { secretId, service, action, host, version, payload = '', region, backendSrv, datasourceId } = options;\n    this.secretId = secretId;\n    // this.secretKey = secretKey;\n    this.service = service;\n    this.action = action;\n    this.host = host;\n    this.version = version;\n    this.payload = typeof payload === 'string' ? payload : JSON.stringify(payload);\n    this.region = region;\n    const nowDate = moment().utc();\n    this.timestamp = nowDate.unix();\n    this.date = nowDate.format('YYYY-MM-DD');\n    this.backendSrv = backendSrv;\n    this.datasourceId = datasourceId;\n  }\n\n  async getHeader() {\n    return this.getResourceHeader();\n  }\n\n  async getResourceHeader() {\n    let res: { authorization?: string; token?: string; intranet?: boolean } = {};\n    try {\n      const resp = await this.backendSrv.datasourceRequest({\n        url: `/api/datasources/${this.datasourceId}/resources/sign_v3`,\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        data: {\n          Host: this.host,\n          Service: this.service,\n          Version: this.version,\n          Action: this.action,\n          Region: this.region,\n          Timestamp: this.timestamp,\n          Method: HttpRequestMethod,\n          Uri: CanonicalUri,\n          Query: CanonicalQueryString,\n          Body: this.payload,\n          Headers: {\n            'content-type': ContentType,\n            host: this.host,\n          },\n        },\n      });\n      res = resp.data;\n    } catch (err) {}\n    const { authorization, token, intranet } = res;\n    const grafanaVersion = (window as any).grafanaBootData?.settings?.buildInfo?.version || '0.0.0';\n    const headers = {\n      Authorization: authorization,\n      'Content-Type': ContentType,\n      'X-TC-Action': this.action,\n      'X-TC-Timestamp': this.timestamp.toString(),\n      'X-TC-Version': this.version,\n      'X-TC-RequestClient': `GF_${grafanaVersion}_PL_CM_${process.env.TENCENT_CLOUD_MONITOR_GRAFANA_PLUGIN_VERSION}`,\n      ...(this.region && {\n        'X-TC-Region': this.region,\n      }),\n      ...(token && {\n        'X-TC-Token': token,\n      }),\n      intranet: intranet,\n    };\n    return headers;\n  }\n}\n","/**\n *\n * @param defaults 为对象\n * secretId\n * secretKey\n * action\n * region\n * host\n */\n\nexport default class SignV2 {\n  defaults: any = {\n    path: '/v2/index.php',\n    method: 'POST',\n  };\n  backendSrv: any;\n  datasourceId: Number;\n  constructor(defaults: any = {}) {\n    this.defaults = Object.assign(this.defaults, defaults);\n    this.defaults.secretKey = '';\n    this.backendSrv = defaults.backendSrv;\n    this.datasourceId = defaults.datasourceId;\n  }\n\n  generateQueryString = async () => {\n    return this.getResourceQueryString();\n  };\n\n  async getResourceQueryString() {\n    let res: { path?: string; querystring?: any; host?: string; intranet?: boolean } = {};\n    try {\n      const { data } = this.defaults;\n      const payload = typeof data === 'string' ? data : JSON.stringify(data);\n      const resp = await this.backendSrv.datasourceRequest({\n        url: `/api/datasources/${this.datasourceId}/resources/sign_v2`,\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        data: {\n          Host: this.defaults.host,\n          Action: this.defaults.action,\n          Version: this.defaults.version,\n          Region: this.defaults.region,\n          Method: this.defaults.method,\n          Uri: this.defaults.path,\n          Query: '',\n          Body: payload,\n        },\n      });\n      res = resp.data;\n    } catch (err) {}\n    const { path, querystring, host, intranet } = res;\n    return { queryString: querystring, path: path, host: host, intranet: intranet };\n  }\n}\n","import _ from 'lodash';\nimport qs from 'qs';\nimport { SERVICES } from '../tc_monitor';\nimport Sign from './sign';\nimport SignV2 from './signV2';\nimport { toDataQueryResponse } from '@grafana/runtime';\n\n// the services of tencentcloud monitor api\nconst FINACE_REGIONS = ['ap-shanghai-fsi', 'ap-shenzhen-fsi'];\nconst SERVICES_API_INFO = {\n  api: {\n    service: 'api',\n    version: '2020-11-06',\n    path: '/api',\n    host: 'api.tencentcloudapi.com',\n  },\n  // monitor api info\n  monitor: {\n    service: 'monitor',\n    version: '2018-07-24',\n    path: '/monitor',\n    host: 'monitor.tencentcloudapi.com',\n  },\n  // cvm api info\n  cvm: {\n    service: 'cvm',\n    version: '2017-03-12',\n    path: '/cvm',\n    host: 'cvm.tencentcloudapi.com',\n  },\n  // cdb api info\n  cdb: {\n    service: 'cdb',\n    version: '2017-03-20',\n    path: '/cdb',\n    host: 'cdb.tencentcloudapi.com',\n  },\n  // pcx api info\n  pcx: {\n    service: 'pcx',\n    version: '',\n    path: '/pcx',\n    host: 'vpc.api.qcloud.com',\n  },\n  // vpc api info\n  vpc: {\n    service: 'vpc',\n    version: '2017-03-12',\n    path: '/vpc',\n    host: 'vpc.tencentcloudapi.com',\n  },\n  // mongodb api info\n  mongodb: {\n    service: 'mongodb',\n    version: '2019-07-25',\n    path: '/mongodb',\n    host: 'mongodb.tencentcloudapi.com',\n  },\n  // 负载均衡 clb\n  clb: {\n    service: 'clb',\n    version: '2018-03-17',\n    path: '/clb',\n    host: 'clb.tencentcloudapi.com',\n  },\n  // postgresql api info\n  postgres: {\n    service: 'postgres',\n    version: '2017-03-12',\n    path: '/postgres',\n    host: 'postgres.tencentcloudapi.com',\n  },\n  // cdn info\n  cdn: {\n    service: 'cdn',\n    version: '2018-06-06',\n    path: '/cdn',\n    host: 'cdn.tencentcloudapi.com',\n  },\n  // redis info\n  redis: {\n    service: 'redis',\n    version: '2018-04-12',\n    path: '/redis',\n    host: 'redis.tencentcloudapi.com',\n  },\n  scf: {\n    service: 'scf',\n    version: '2018-04-16',\n    path: '/scf',\n    host: 'scf.tencentcloudapi.com',\n  },\n  cfs: {\n    service: 'cfs',\n    version: '2019-07-19',\n    path: '/cfs',\n    host: 'cfs.tencentcloudapi.com',\n  },\n  ckafka: {\n    service: 'ckafka',\n    version: '2019-08-19',\n    path: '/ckafka',\n    host: 'ckafka.tencentcloudapi.com',\n  },\n  // 专线接入实例列表\n  dc: {\n    service: 'dc',\n    version: '2018-04-10',\n    path: '/dc',\n    host: 'dc.tencentcloudapi.com',\n  },\n  // cynosdb实例列表\n  cynosdb: {\n    service: 'cynosdb',\n    version: '2019-01-07',\n    path: '/cynosdb',\n    host: 'cynosdb.tencentcloudapi.com',\n  },\n  // sqlserver实例列表\n  sqlserver: {\n    service: 'sqlserver',\n    version: '2018-03-28',\n    path: '/sqlserver',\n    host: 'sqlserver.tencentcloudapi.com',\n  },\n  // bm实例列表\n  bm: {\n    service: 'bm',\n    version: '2018-04-23',\n    path: '/bm',\n    host: 'bm.tencentcloudapi.com',\n  },\n  bmeip: {\n    service: 'bmeip',\n    version: '2018-06-25',\n    path: '/bmeip',\n    host: 'bmeip.tencentcloudapi.com',\n  },\n  bmvpc: {\n    service: 'bmvpc',\n    version: '2018-06-25',\n    path: '/bmvpc',\n    host: 'bmvpc.tencentcloudapi.com',\n  },\n  bmlb: {\n    service: 'bmlb',\n    version: '2018-06-25',\n    path: '/bmlb',\n    host: 'bmlb.tencentcloudapi.com',\n  },\n  // ES集群实例\n  es: {\n    service: 'es',\n    version: '2018-04-16',\n    path: '/es',\n    host: 'es.tencentcloudapi.com',\n  },\n  // MapReduce\n  emr: {\n    service: 'emr',\n    version: '2019-01-03',\n    path: '/emr',\n    host: 'emr.tencentcloudapi.com',\n  },\n  // CMQ消息队列\n  cmq: {\n    service: 'cmq',\n    version: '2019-03-04',\n    path: '/cmq',\n    host: 'cmq.tencentcloudapi.com',\n  },\n  cbs: {\n    service: 'cbs',\n    version: '2017-03-12',\n    path: '/cbs',\n    host: 'cbs.tencentcloudapi.com',\n  },\n  // tcaplus实例\n  tcaplusdb: {\n    service: 'tcaplusdb',\n    version: '2019-08-23',\n    path: '/tcaplusdb',\n    host: 'tcaplusdb.tencentcloudapi.com',\n  },\n  // tcaplus实例\n  dcdb: {\n    service: 'dcdb',\n    version: '2018-04-11',\n    path: '/dcdb',\n    host: 'dcdb.tencentcloudapi.com',\n  },\n  // apigateway实例\n  apigateway: {\n    service: 'apigateway',\n    version: '2018-08-08',\n    path: '/apigateway',\n    host: 'apigateway.tencentcloudapi.com',\n  },\n  tdmq: {\n    service: 'tdmq',\n    version: '2020-02-17',\n    path: '/tdmq',\n    host: 'tdmq.tencentcloudapi.com',\n  },\n  gaap: {\n    service: 'gaap',\n    version: '2018-05-29',\n    path: '/gaap',\n    host: 'gaap.tencentcloudapi.com',\n  },\n  ecm: {\n    service: 'ecm',\n    version: '2019-07-19',\n    path: '/ecm',\n    host: 'ecm.tencentcloudapi.com',\n  },\n  gse: {\n    service: 'gse',\n    version: '2019-11-12',\n    path: '/gse',\n    host: 'gse.tencentcloudapi.com',\n  },\n  // 不单独定义lb，因为lb同样用的是vpc的配置，同上\n  // lb: {\n  //   service: 'lb',\n  //   version: '2017-03-12',\n  //   path: '/lb',\n  //   host: 'vpc.tencentcloudapi.com'\n  // }\n  // 负载均衡四层协议 lbPrivate\n  // lbPrivate: {\n  //   service: 'lbPrivate',\n  //   version: '2018-03-17',\n  //   path: '/clb',\n  //   host: 'clb.tencentcloudapi.com',\n  // },\n};\n\nconst FINACE_HOST = {\n  scf: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/scf/shanghai',\n      host: 'scf.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/scf/shenzhen',\n      host: 'scf.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  cfs: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/cfs/shanghai',\n      host: 'cfs.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/cfs/shenzhen',\n      host: 'cfs.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  ckafka: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/ckafka/shanghai',\n      host: 'ckafka.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/ckafka/shenzhen',\n      host: 'ckafka.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  clb: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/clb/shanghai',\n      host: 'clb.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/clb/shenzhen',\n      host: 'clb.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  mongodb: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/mongodb/shanghai',\n      host: 'mongodb.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/mongodb/shenzhen',\n      host: 'mongodb.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  vpc: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/vpc/shanghai',\n      host: 'vpc.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/vpc/shenzhen',\n      host: 'vpc.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  cvm: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/cvm/shanghai',\n      host: 'cvm.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/cvm/shenzhen',\n      host: 'cvm.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  cdb: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/cdb/shanghai',\n      host: 'cdb.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/cdb/shenzhen',\n      host: 'cdb.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  monitor: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/monitor/shanghai',\n      host: 'monitor.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/monitor/shenzhen',\n      host: 'monitor.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  postgres: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/postgres/shanghai',\n      host: 'postgres.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/postgres/shenzhen',\n      host: 'postgres.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  emr: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/emr/shanghai',\n      host: 'emr.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/emr/shenzhen',\n      host: 'emr.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n  cmq: {\n    'ap-shanghai-fsi': {\n      path: '/fsi/cmq/shanghai',\n      host: 'cmq.ap-shanghai-fsi.tencentcloudapi.com',\n    },\n    'ap-shenzhen-fsi': {\n      path: '/fsi/cmq/shenzhen',\n      host: 'cmq.ap-shenzhen-fsi.tencentcloudapi.com',\n    },\n  },\n};\n\n// 获取对应业务的 API 接口信息\nexport function GetServiceAPIInfo(region, service) {\n  return { ...(SERVICES_API_INFO[service] || {}), ...getHostAndPath(region, service) };\n}\n\n// get host and path for finance regions\nfunction getHostAndPath(region, service) {\n  if (_.indexOf(FINACE_REGIONS, region) === -1) {\n    return {};\n  }\n  return (\n    _.find(\n      _.find(FINACE_HOST, (__, key) => key === service),\n      (__, key) => key === region\n    ) || {}\n  );\n}\n\n// 变量替换指定实例按照那个字段展示\nexport const VARIABLE_ALIAS = 'instancealias';\n\nexport function GetServiceFromNamespace(namespace) {\n  return _.get(\n    _.find(SERVICES, (service) => service.namespace === namespace),\n    'service'\n  );\n}\n// 处理存量target中保存的qce/cvm\nexport function GetLabelFromNamespace(namespace) {\n  return _.get(\n    _.find(SERVICES, (service) => service.namespace === namespace || service.label === namespace),\n    'label'\n  );\n}\n// parse template variable query params\nexport function ParseMetricQuery(query = '') {\n  if (!query) {\n    return {};\n  }\n  const result = {};\n  const queries = _.split(query, '&');\n  _.forEach(queries, (item) => {\n    const str = _.split(item, '=');\n    if (_.trim(_.get(str, '0', ''))) {\n      let val = _.trim(_.get(str, '1', ''));\n      try {\n        val = JSON.parse(val);\n      } catch (e) {\n        // console.log({ val });\n      }\n      result[_.toLower(_.trim(_.get(str, '0', '')))] = val;\n    }\n  });\n  return result;\n}\n\n// parse template variable regex params\nexport function ParseMetricRegex(regex = '') {\n  if (!regex) {\n    return [];\n  }\n  regex = regex.replace(/：/g, ':');\n  regex = regex.replace(/，/g, ',');\n  const regexParams = ParseMetricQuery(regex);\n  const result: any[] = [];\n  _.forEach(regexParams, (value, key) => {\n    if (key === 'tag:tag-key') {\n      const valuesArr = _.split(value, ',');\n      _.forEach(valuesArr, (item) => {\n        const temp = _.split(item, ':');\n        if (temp.length === 2) {\n          result.push({ Name: `tag:${temp[0]}`, Values: temp.slice(1) });\n        }\n      });\n    } else {\n      result.push({ Name: key, Values: _.split(value, ',') });\n    }\n  });\n  return result;\n}\n\n// get the actual value of template variable\nfunction parseVariableFormat(varname: string) {\n  varname = String(varname || '');\n  // $varname\n  let varFlag = false;\n  const regResult1 = varname.match(/^\\${?(\\w+)}?/);\n  if (regResult1) {\n    varFlag = true;\n    varname = `\\$\\{${regResult1[1]}\\:json\\}`;\n  }\n  // [[varname]]\n  const regResult2 = varname.match(/^\\[\\[(\\w+)(\\:\\w+)?\\]\\]/);\n  if (regResult2) {\n    varFlag = true;\n    varname = `\\$\\{${regResult2[1]}\\:json\\}`;\n  }\n  return { varname, varFlag };\n}\n\nexport function ReplaceVariable(templateSrv, scopedVars, field, multiple = false) {\n  const { varname, varFlag } = parseVariableFormat(field);\n  let replaceVar = templateSrv.replace(varname, scopedVars);\n  if (varFlag) {\n    try {\n      replaceVar = JSON.parse(replaceVar);\n    } catch (error) {}\n  }\n  if (!multiple && _.isArray(replaceVar)) {\n    replaceVar = _.get(replaceVar, '0', '');\n  }\n  return replaceVar;\n}\n\n// get dimensions for instance query param\nexport function GetDimensions(obj) {\n  if (_.isEmpty(obj)) {\n    return [];\n  }\n  const dimensions: any[] = [];\n  _.forEach(obj, (item) => {\n    if (item.Value !== null && item.Value !== undefined && item.Value !== '') {\n      dimensions.push({ Name: item.Name, Value: typeof item.Value === 'string' ? item.Value : `${item.Value}` });\n    }\n  });\n  return dimensions;\n}\n\n// parse query data result for panel\nexport function ParseQueryResult(response, instances: any[] = []) {\n  const instanceList = _.cloneDeep(instances);\n  // console.log('parseQueryResult:', response, instances, instanceList);\n  const dataPoints = _.get(response, 'DataPoints', []);\n  return _.map(dataPoints, (dataPoint) => {\n    let instanceAliasValue = _.get(dataPoint, 'Dimensions[0].Value');\n    for (let i = 0; i < instanceList.length; i++) {\n      if (isInstanceMatch(instanceList[i], _.get(dataPoint, 'Dimensions', []))) {\n        instanceAliasValue = instanceList[i]._InstanceAliasValue;\n        instanceList.splice(i, 1);\n        break;\n      }\n    }\n    return {\n      target: `${response.MetricName} - ${instanceAliasValue}`,\n      datapoints: parseDataPoint(dataPoint),\n    };\n  });\n}\n\n// parse tencent cloud monitor response data to grafana panel data\nfunction parseDataPoint(dataPoint) {\n  const timestamps = _.get(dataPoint, 'Timestamps', []);\n  const values = _.get(dataPoint, 'Values', []);\n  const result = timestamps.map((timestamp, index) => {\n    return [values[index], timestamp * 1000];\n  });\n\n  return result;\n}\n\n// check whether instance is match or not\nfunction isInstanceMatch(instance, dimensions) {\n  let match = true;\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < dimensions.length; i++) {\n    if (_.get(instance, dimensions[i].Name).toString() !== dimensions[i].Value.toString()) {\n      match = false;\n      break;\n    }\n  }\n  return match;\n}\n\n/**\n * 检查某个变量是否模板变量，即是否匹配 ${varnam} 或 [[varname]]\n *\n * @param field 变量字段名\n */\nexport function isVariable(value) {\n  if (value && (value.match(/^\\${?(\\w+)}?/) || value.match(/^\\[\\[(\\w+)(\\:\\w+)?\\]\\]/))) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * 腾讯云 API 3.0 接口协议\n * @param options 接口请求对象 { url: string, data?: object }\n * @param service 产品名字 'cvm'\n * @param signObj 接口请求相关信息 { region?: string, action: string }\n * @param secretId\n * @param secretKey\n */\nexport async function GetRequestParams(options, service, signObj: any = {}, secretId, datasourceId, backendSrv) {\n  const signParams = {\n    secretId,\n    payload: options.data || '',\n    ...signObj,\n    ...(_.pick(GetServiceAPIInfo(signObj.region || '', service), ['service', 'host', 'version']) || {}),\n    backendSrv,\n    datasourceId,\n  };\n  const sign = new Sign(signParams);\n  const { intranet, ...headerSigned } = await sign.getHeader();\n  options.headers = Object.assign(options.headers || {}, { ...headerSigned });\n  options.method = 'POST';\n  if (intranet) {\n    options.url += '-internal';\n  }\n  return options;\n}\n\n/**\n *  腾讯云 API 2.0 接口协议\n * @param options 接口请求对象 { url: string, data?: object }\n * @param service 产品名字 'cvm'\n * @param signObj 接口请求相关信息 { region?: string, action: string }\n * @param secretId\n * @param secretKey\n */\nexport async function GetRequestParamsV2(\n  options: any = {},\n  service,\n  signObj: any = {},\n  secretId,\n  datasourceId,\n  backendSrv\n) {\n  const data = options.data || {};\n  const signParams = {\n    secretId,\n    data,\n    ...signObj,\n    ...(_.pick(GetServiceAPIInfo(signObj.region || '', service), ['host', 'version']) || {}),\n    backendSrv,\n    datasourceId,\n  };\n  options.method = 'POST';\n  const sign = new SignV2(signParams);\n  options.headers = Object.assign(options.headers || {}, { 'Content-Type': 'application/x-www-form-urlencoded' });\n  const { queryString, path, host, intranet } = await sign.generateQueryString();\n  options.data = qs.stringify({\n    ...options.data,\n    ...queryString,\n    ...(host && { host: host }),\n  });\n  if (intranet) {\n    // TODO: qcloud.com intranet host\n    console.log('got intranet for sign v2');\n  }\n  options.url += path;\n  return options;\n}\n\nexport function SliceLength(total = 0, len = 1) {\n  const result: any[] = [];\n  const num = Math.ceil(total / len);\n  for (let i = 1; i < num; i++) {\n    result.push({ Offset: len * i });\n  }\n  return result;\n}\n\nexport const FilterKeys = ['Namespace', 'Offset', 'Limit', 'SearchKey', 'Description', 'OrderBy', 'Order'];\n\nexport function parseDataFromBackendPlugin(res) {\n  const { data } = toDataQueryResponse(res);\n  return {\n    authorization: _.get(data, '[0].meta.custom', ''),\n  };\n}\n","import _ from 'lodash';\nimport { SERVICES } from '../tc_monitor';\n\n/* 从分页数据获取全量数据 */\nconst PageSize = 50;\nfunction getFieldsValue(value, fields) {\n  return fields.map((item) => _.get(value, item, _.get(value, `Result.${item}`, [])));\n}\n\nexport async function fetchAllFactory(fetcher: (args: any) => Promise<any>, _params: any, field: string | string[]) {\n  const params = { ..._params };\n  params.Limit = params.Limit || PageSize; // 默认给个Limit大小为50\n  params.Offset = params.Offset ?? 0; // 默认给个Offset为0\n\n  // 第一次请求，获取总数\n  const rs = (await fetcher(params)) ?? {};\n  const fields = Array.isArray(field) ? field : [field];\n\n  // rs.TotalCount = rs.TotalCount ?? rs.Result.TotalCount ?? [];\n  // const { TotalCount } = rs;\n  const TotalCount = rs.TotalCount ?? rs.Result?.TotalCount ?? rs.TotalCnt ?? rs.Result?.TotalCnt ?? 0;\n  const firstLists = getFieldsValue(rs, fields);\n\n  if (TotalCount === 0 || firstLists[0].length === TotalCount) {\n    // 只有一页，结束\n    return firstLists;\n  }\n\n  // 批量请求\n  const delta = TotalCount - firstLists[0].length;\n  const batchCount = Math.ceil(delta / PageSize);\n  const pmList = new Array(batchCount).fill(0).map((_, index) => {\n    params.Offset = 1 + index; // 忽略offset为0的情况，从1开始\n    return fetcher(params);\n  });\n\n  // 合并\n  const resultList = await Promise.all(pmList); // [ {a: [], b[] }, { a: [], b:[] }]\n\n  return resultList.reduce((acc, cur) => {\n    const lists = getFieldsValue(cur, fields);\n    // [[], [], []] + [[], [], []]\n    acc.forEach((list, index) => list.push(...lists[index]));\n    return acc;\n  }, firstLists);\n}\n\n/**\n * 实例列表接口入参处理\n *\n * @param queries 表单键入内容\n * @param isFilter 是否需要设置为Filters格式\n */\nexport function instanceQueryParamsBaseParse(queries: any, isFilter: boolean) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    const Filters: any[] = [];\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          if (isFilter) {\n            Filters.push({ Name: key, Values: _.uniq(item).slice(0, 5) });\n          } else {\n            params[key] = _.uniq(item);\n          }\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          if (isFilter) {\n            Filters.push({ Name: key, Values: _.get(item, 'value', []).slice(0, 5) });\n          } else {\n            params[key] = _.get(item, 'value');\n          }\n        }\n      } else if (item !== null && item !== undefined && item !== '') {\n        if (isFilter) {\n          Filters.push({ Name: key, Values: item });\n        } else {\n          params[key] = item;\n        }\n      }\n    });\n    if (isFilter && Filters.length > 0) {\n      params.Filters = Filters;\n      return params;\n    }\n  }\n  return params;\n}\n\nexport function getNamesapceFromService(serviceName: string) {\n  return _.get(\n    _.find(SERVICES, (service) => service.service === serviceName),\n    'namespace'\n  );\n}\n\nexport function serviceGroupBy(\n  services: { service: string; label: string; namespace: string; href: string; groupName?: string }[]\n) {\n  const result = services.reduce((acc, cur) => {\n    const { namespace, label, groupName = label } = cur;\n\n    const existedGroup = acc.find((item) => item.label === groupName);\n    if (!existedGroup) {\n      acc.push({ label: groupName, value: groupName, items: [{ label, value: namespace }] });\n      return acc;\n    }\n\n    existedGroup.items.push({ label, value: namespace });\n    return acc;\n  }, [] as any[]);\n\n  // 将只有一个子元素的项目进行特殊处理\n  const rs = result.map((item) =>\n    item.items.length === 1 ? { label: item.items[0].label, value: item.items[0].value } : item\n  );\n  return rs;\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","import coreModule from 'grafana/app/core/core_module';\nimport { DetailQueryConfig } from './types';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nfunction classFactory(detailConfig) {\n  return class QueryCtrl {\n    static _config: DetailQueryConfig;\n\n    /** @ngInject */\n    constructor($scope, $rootScope) {\n      Object.assign($scope, detailConfig);\n\n      $scope.getDropdown = (field) => {\n        const service = GetServiceFromNamespace($scope.namespace);\n        return $scope.datasource.getFilterDropdown(service, { field, region: $scope.region });\n      };\n    }\n  };\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"{{instanceDocUrl}}\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in fieldDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputNumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />    \n      <multi-condition\n        ng-if=\"field.type === 'inputNumberMulti'\"\n        type=\"'inputNumber'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        maxNum=\"field.max\"\n        minNum=\"field.min\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputMulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownMulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <gf-form-dropdown \n        ng-if=\"field.type === 'dropdown'\"\n        model=\"target.queries[field.key]\" \n        allow-custom=\"true\" \n        lookup-text=\"true\" \n        get-options=\"getDropdown(field.key)\" \n        css-class=\"min-width-10\"\n        on-change=\"onChange()\">\n      </gf-form-dropdown>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n      <gf-form-switch \n        ng-if=\"field.type === 'switch'\"\n        class=\"gf-form tc-switch\" \n        label-class=\"width-7\" \n        checked=\"target.queries[field.key]\" \n        switch-class=\"max-width-5\"\n      ></gf-form-switch>\n    </div>\n  </div>\n</div>\n  </div>\n`;\nfunction queryDDOFactory(QueryCtrl) {\n  return function queryDDO() {\n    return {\n      template: template,\n      controller: QueryCtrl,\n      restrict: 'E',\n      scope: {\n        target: '=',\n        showDetail: '=',\n        region: '=',\n        datasource: '=',\n        getDropdownOptions: '&',\n        onChange: '&',\n      },\n    };\n  };\n}\n\nexport default (name: string, config: DetailQueryConfig) => {\n  // QueryCtrl._config = config;\n  const newQueryIns = classFactory(config);\n  coreModule.directive(name, queryDDOFactory(newQueryIns));\n};\n","interface DBEvent {\n  target: { result: any; error: any };\n}\n// 数据库结构\ninterface DBTypes {\n  store: StoreType;\n  name?: string;\n  version?: number;\n}\n// store表结构\ninterface StoreType {\n  name: string; // 表名\n  key: string; // 主键名\n  cursorIndex?: { name: string; unique: boolean }[]; // 索引列表\n}\n\n// 数据结构\n// {service: 'cvm', instance: [{ins: 23}]}\ninterface DataType {\n  service: string;\n  [x: string]: any; // 有产品需缓存其他列表\n}\n\n// interface UpdateProps {\n//   storeName: string;\n//   cursorKey: string;\n//   cursorValue?: any;\n//   data: any;\n// }\n\nconst store: StoreType = {\n  name: 'grafanaInstanceList',\n  key: 'service',\n};\nconst promisify = (request: any, type?: string) => {\n  return new Promise<any>((resolve, reject) => {\n    request.onsuccess = (event: DBEvent) => {\n      const returnMap: any = {\n        event: event.target.result,\n        request: request.result,\n        msg: '操作成功',\n      };\n      resolve(returnMap[type || 'msg']);\n    };\n    request.onerror = (event: DBEvent) => reject(event.target.error || '操作失败');\n  });\n};\n// 固定表名和数据库名\nclass IndexedDB {\n  name = 'grafanaDatabase';\n  version = 1;\n\n  constructor(props: DBTypes) {\n    const { name = 'database', version = 1, store } = props;\n    this.name = name;\n    this.version = version;\n\n    this.initDB(store);\n  }\n\n  /**\n   * 初始化数据库\n   * @param store 库表的结构\n   */\n  initDB(store: StoreType) {\n    const indexeddb = window.indexedDB || window.webkitIndexedDB || window.mozIndexedDB || window.msIndexedDB;\n    const request = indexeddb.open(this.name, this.version);\n\n    request.onupgradeneeded = (event: IDBVersionChangeEvent) => {\n      const db = (event.target as IDBOpenDBRequest).result;\n      if (db.objectStoreNames.contains(store.name)) {\n        // 存在表store\n      }\n\n      //  遍历store，设置数据表结构\n      db.createObjectStore(store.name, {\n        keyPath: store.key,\n      });\n    };\n    request.onerror = () => Promise.reject(new Error('初始化数据库失败'));\n    request.onsuccess = () => Promise.resolve('初始化数据库成功');\n  }\n\n  openDB() {\n    const indexeddb = window.indexedDB || window.webkitIndexedDB || window.mozIndexedDB || window.msIndexedDB;\n    const request = indexeddb.open(this.name, this.version);\n\n    return promisify(request, 'event');\n  }\n\n  /**\n   * 新增数据\n   * @param storeName 表名\n   * @param data 添加的数据\n   */\n  async insertData(storeName: string, data: any) {\n    try {\n      // console.time('insertData');\n      const db = await this.openDB();\n      const transaction = db.transaction(storeName, 'readwrite');\n      const objectStore = transaction.objectStore(storeName);\n\n      objectStore.add(data);\n      // console.timeEnd('insertData');\n\n      return new Promise((resolve, reject) => {\n        transaction.oncomplete = function () {\n          // console.timeEnd('insertData');\n          resolve('所有数据插入成功');\n        };\n\n        transaction.onerror = function (event) {\n          reject(event);\n        };\n      });\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n\n  /**\n   * 更新数据\n   * @param props 查询数据的参数以及要修改的值的参数\n   */\n  async addData(data: DataType, isCover?: boolean) {\n    try {\n      // console.log('addData');\n      const storeName = store.name; // 表名\n      const oldData = await this.getData(data.service);\n      const objectStore = await this.getObjectStore(storeName, 'readwrite');\n\n      if (!oldData) {\n        // 不存在则新建\n        this.insertData(storeName, data);\n      }\n      // 存在则更新\n      let newData: any = { ...oldData, ...data };\n      if (isCover) newData = data; // 需要覆盖之前内容\n      // 把更新过的对象放回数据库\n      const requestUpdate = objectStore.put(newData);\n      // console.timeEnd('updateData');\n      return promisify(requestUpdate);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n\n  /**\n   * 获取数据库的值，返回查询到的第一项\n   * @param storeName 表名/存储对象的键\n   * @param cursorKey key\n   * @param cursorValue 要查询索引的值\n   */\n  async getData(seviceName: string) {\n    try {\n      // console.time('getData');\n      const storeName = store.name;\n      const objectStore = await this.getObjectStore(storeName);\n      const request = objectStore.get(seviceName);\n      // console.timeEnd('getData');\n      return promisify(request, 'request');\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n  async getAllData(storeName: string) {\n    try {\n      // console.time('getAllData');\n      const objectStore = await this.getObjectStore(storeName);\n      const request = objectStore.getAll();\n      const result = await promisify(request, 'request');\n      // console.timeEnd('getAllData');\n      return result ? result : [];\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n  /**\n   * 获取对象仓库\n   * @param storeName 表名\n   * @param type readonly 或者 readwrite等\n   */\n  private async getObjectStore(storeName: string, type?: any): Promise<IDBObjectStore> {\n    try {\n      const db = await this.openDB();\n      return db.transaction(storeName, type).objectStore(storeName);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n}\n// console.log('testDDB')\n// const indexDB = new IndexedDB({store});\n// indexDB.addData({service: 'cvm', instance: [{ins: 23}]}).then(e=>{\n//   indexDB.getData('cvm').then(dd=>{console.log({dd})})\n// })\nexport default new IndexedDB({ store });\n","import indexedDB from './indexedDB';\nclass InstanceStorage {\n  // prefix = 'Datasource';\n  // storageKey = 'grafanaInstanceCache';\n  insKey = 'Instances';\n  cacheWay = '';\n  constructor() {}\n  setInstance(service: string, value: Record<string, any>) {\n    return this.setStorage(service, this.insKey, value, true);\n  }\n  async getInstance(service: string) {\n    return this.getStorage(service, this.insKey);\n  }\n  setExtraStorage(service: string, Ekey: string, EValue: Record<string, any>) {\n    return this.setStorage(service, Ekey, EValue, false);\n  }\n  async getExtraStorage(service: string, Ekey: string) {\n    return this.getStorage(service, Ekey);\n  }\n  private setStorage(serviceKey: string, key: string, value: Record<string, any>, isCover = false) {\n    // console.log('set', serviceKey, key, value);\n    return indexedDB.addData(\n      {\n        service: serviceKey,\n        [key]: value,\n      },\n      isCover\n    );\n  }\n  // 获取到模版变量信息\n  private async getStorage(service: string, key?: string) {\n    const storage = await indexedDB.getData(service);\n    // console.log('get', key, storage);\n    return key ? storage?.[key] : storage;\n  }\n}\nexport default new InstanceStorage();\n","// name (产品名称), service（对应的真实service）\nconst SERVICES = [\n  {\n    service: 'cvm',\n    label: '云服务器(CVM)',\n    namespace: 'QCE/CVM',\n    href: 'https://cloud.tencent.com/document/api/213/15688',\n  },\n  {\n    service: 'cdb',\n    label: '云数据库 MySQL(CDB)',\n    namespace: 'QCE/CDB',\n    href: 'https://cloud.tencent.com/document/api/236/15829',\n    groupName: '云数据库',\n  },\n  {\n    service: 'mongoDB',\n    label: '云数据库 MongoDB(CMONGO)',\n    namespace: 'QCE/CMONGO',\n    href: 'https://cloud.tencent.com/document/api/240/38568',\n    groupName: '云数据库',\n  },\n  {\n    service: 'postgres',\n    label: '云数据库 PostgreSQL',\n    namespace: 'QCE/POSTGRES',\n    href: 'https://cloud.tencent.com/document/product/248/45105',\n    groupName: '云数据库',\n  },\n  {\n    service: 'redis',\n    label: '云数据库 redis(REDIS)',\n    namespace: 'QCE/REDIS',\n    href: 'https://cloud.tencent.com/document/product/248/45110',\n    groupName: '云数据库',\n  },\n  {\n    service: 'redisMem',\n    label: '云数据库redis内存版（5s）(REDIS_MEM)',\n    namespace: 'QCE/REDIS_MEM',\n    href: 'https://cloud.tencent.com/document/product/248/49729',\n    groupName: '云数据库',\n  },\n  {\n    service: 'sqlserver',\n    label: '云数据库sqlserver(SQLSERVER)',\n    namespace: 'QCE/SQLSERVER',\n    href: 'https://cloud.tencent.com/document/product/248/45146',\n    groupName: '云数据库',\n  },\n  {\n    service: 'cynosdbMysql',\n    label: '云数据库 CYNOSDB(CYNOSDB_MYSQL)',\n    namespace: 'QCE/CYNOSDB_MYSQL',\n    href: 'https://cloud.tencent.com/document/product/248/45106',\n    groupName: '云数据库',\n  },\n  {\n    service: 'tcaplus',\n    label: '云数据库 TcaplusDB(TCAPLUS)',\n    namespace: 'QCE/TCAPLUS',\n    href: 'https://cloud.tencent.com/document/product/248/45107',\n    groupName: '云数据库',\n  },\n  {\n    service: 'dcdb',\n    label: '分布式数据库 TDSQL MySQL(TDMYSQL)',\n    namespace: 'QCE/TDMYSQL',\n    href: 'https://cloud.tencent.com/document/product/248/45108',\n  },\n  {\n    service: 'pcx',\n    label: '私有网络对等连接(PCX)',\n    namespace: 'QCE/PCX',\n    href: 'https://cloud.tencent.com/document/product/215/5181',\n    groupName: '私有网络',\n  },\n  {\n    service: 'bwp',\n    label: '私有网络带宽包(BWP)',\n    namespace: 'QCE/BWP',\n    href: 'https://cloud.tencent.com/document/api/215/19209',\n    groupName: '私有网络',\n  },\n  {\n    service: 'natGateway',\n    label: '私有网络NAT网关(NAT_GATEWAY)',\n    namespace: 'QCE/NAT_GATEWAY',\n    href: 'https://cloud.tencent.com/document/api/215/36034',\n    groupName: '私有网络',\n  },\n  {\n    service: 'vpngw',\n    label: '私有网络-VPN 网关(VPNGW)',\n    namespace: 'QCE/VPNGW',\n    href: 'https://cloud.tencent.com/document/product/248/45070',\n    groupName: '私有网络',\n  },\n  {\n    service: 'vpnx',\n    label: '私有网络-VPN 通道(VPNX)',\n    namespace: 'QCE/VPNX',\n    href: 'https://cloud.tencent.com/document/product/248/45071',\n    groupName: '私有网络',\n  },\n  {\n    service: 'dcg',\n    label: '私有网络-专线网关(DCG)',\n    namespace: 'QCE/DCG',\n    href: 'https://cloud.tencent.com/document/product/248/45072',\n    groupName: '私有网络',\n  },\n  {\n    service: 'ceipSummary',\n    label: '私有网络-Anycast弹性公网IP(CEIP_SUMMARY)',\n    namespace: 'QCE/CEIP_SUMMARY',\n    href: 'https://cloud.tencent.com/document/product/248/50381',\n    groupName: '私有网络',\n  },\n  {\n    service: 'vpcNetDetect',\n    label: '私有网络-网络探测(VPC_NET_DETECT)',\n    namespace: 'QCE/VPC_NET_DETECT',\n    href: 'https://cloud.tencent.com/document/product/248/50384',\n    groupName: '私有网络',\n  },\n  {\n    service: 'vbc',\n    label: '私有网络云联网(VBC)',\n    namespace: 'QCE/VBC',\n    href: 'https://cloud.tencent.com/document/product/248/45073',\n    groupName: '私有网络',\n  },\n  {\n    service: 'lb',\n    label: '私有网络弹性公网IP(LB)',\n    namespace: 'QCE/LB',\n    href: 'https://cloud.tencent.com/document/product/248/45099',\n    groupName: '私有网络',\n  },\n  {\n    service: 'lbPublic',\n    label: '公网负载均衡监控指标(LB_PUBLIC)',\n    namespace: 'QCE/LB_PUBLIC',\n    href: 'https://cloud.tencent.com/document/product/248/51898',\n    groupName: '负载均衡（多场景版）',\n  },\n  {\n    service: 'lbPrivate',\n    label: '内网负载均衡四层协议监控指标(LB_PRIVATE)',\n    namespace: 'QCE/LB_PRIVATE',\n    href: 'https://cloud.tencent.com/document/product/248/51899',\n    groupName: '负载均衡（多场景版）',\n  },\n  {\n    service: 'loadBalance',\n    label: '内网负载均衡七层协议监控指标(LOADBALANCE)',\n    namespace: 'QCE/LOADBALANCE',\n    href: 'https://cloud.tencent.com/document/product/248/51901',\n    groupName: '负载均衡（多场景版）',\n  },\n  {\n    service: 'vClb',\n    label: '负载均衡（精简版）',\n    namespace: 'QCE/V_CLB',\n    href: 'https://cloud.tencent.com/document/product/248/51901',\n    groupName: '负载均衡（精简版）',\n  },\n  {\n    service: 'cdn',\n    label: '国内域名(CDN)',\n    namespace: 'QCE/CDN',\n    hideRegion: true,\n    href: 'https://cloud.tencent.com/document/product/248/50386',\n    groupName: 'CDN',\n  },\n  {\n    service: 'cdnProvince',\n    label: '省份域名(CDN_LOG_DATA)',\n    namespace: 'QCE/CDN_LOG_DATA',\n    hideRegion: true,\n    href: 'https://cloud.tencent.com/document/product/248/50388',\n    groupName: 'CDN',\n  },\n  {\n    service: 'ovCdn',\n    label: '国外域名(OV_CDN)',\n    namespace: 'QCE/OV_CDN',\n    hideRegion: true,\n    href: 'https://cloud.tencent.com/document/product/248/50387',\n    groupName: 'CDN',\n  },\n  {\n    service: 'scf',\n    label: '云函数(SCF)',\n    namespace: 'QCE/SCF_V2',\n    href: 'https://cloud.tencent.com/document/product/248/45130',\n  },\n  {\n    service: 'cfs',\n    label: '文件存储(CFS)',\n    namespace: 'QCE/CFS',\n    href: 'https://cloud.tencent.com/document/product/248/45143',\n  },\n  {\n    service: 'cos',\n    label: '对象存储(COS)',\n    namespace: 'QCE/COS',\n    href: 'https://cloud.tencent.com/document/product/248/45140',\n  },\n  {\n    service: 'ckafka',\n    label: '消息队列(CKAFKA)',\n    namespace: 'QCE/CKAFKA',\n    href: 'https://cloud.tencent.com/document/product/248/45121',\n    groupName: '消息队列',\n  },\n  {\n    service: 'cmq',\n    label: '消息队列CMQ(队列服务监控CMQ)',\n    namespace: 'QCE/CMQ',\n    href: 'https://cloud.tencent.com/document/product/248/45114',\n    groupName: '消息队列',\n  },\n  {\n    service: 'cmqTopic',\n    label: '消息队列CMQTOPIC(主题订阅监控)',\n    namespace: 'QCE/CMQTOPIC',\n    href: 'https://cloud.tencent.com/document/product/248/45113',\n    groupName: '消息队列',\n  },\n  {\n    service: 'tdmq',\n    label: '消息队列 TDMQ(TDMQ)',\n    namespace: 'QCE/TDMQ',\n    href: 'https://cloud.tencent.com/document/product/248/51450',\n    groupName: '消息队列',\n  },\n  {\n    service: 'dcx',\n    label: '专线接入-专用通道(DCX)',\n    namespace: 'QCE/DCX',\n    href: 'https://cloud.tencent.com/document/product/248/45101',\n    groupName: '专线接入',\n  },\n  {\n    service: 'dc',\n    label: '专线接入-物理专线(DC)',\n    namespace: 'QCE/DC',\n    href: 'https://cloud.tencent.com/document/product/248/45102',\n    groupName: '专线接入',\n  },\n  {\n    service: 'cpm',\n    label: '黑石物理服务器(CPM)',\n    namespace: 'QCE/CPM',\n    href: 'https://cloud.tencent.com/document/product/248/45881',\n    groupName: '黑石物理服务器',\n  },\n  {\n    service: 'bmPcx',\n    label: '黑石对等连接(BM_PCX)',\n    namespace: 'QCE/BM_PCX',\n    href: 'https://cloud.tencent.com/document/product/248/45884',\n    groupName: '黑石物理服务器',\n  },\n  {\n    service: 'bmLb',\n    label: '黑石外网负载均衡(BM_LB)',\n    namespace: 'QCE/BM_LB',\n    href: 'https://cloud.tencent.com/document/product/248/45886',\n  },\n  {\n    service: 'bmIntraLb',\n    label: '黑石内网负载均衡(BM_INTRA_LB)',\n    namespace: 'QCE/BM_INTRA_LB',\n    href: 'https://cloud.tencent.com/document/product/248/45885',\n    groupName: '黑石物理服务器',\n  },\n  {\n    service: 'ces',\n    label: 'Elasticsearch指标(CES)',\n    namespace: 'QCE/CES',\n    href: 'https://cloud.tencent.com/document/product/248/45129',\n  },\n  {\n    service: 'mrHDFS',\n    label: '弹性MapReduce(HDFS)',\n    namespace: 'QCE/TXMR_HDFS',\n    href: 'https://cloud.tencent.com/document/product/248/44797',\n    groupName: '弹性MapReduce',\n  },\n  {\n    service: 'mrHBASE',\n    label: '弹性MapReduce(HBASE)',\n    namespace: 'QCE/TXMR_HBASE',\n    href: 'https://cloud.tencent.com/document/product/248/45567',\n    groupName: '弹性MapReduce',\n  },\n  {\n    service: 'mrHIVE',\n    label: '弹性MapReduce(HIVE)',\n    namespace: 'QCE/TXMR_HIVE',\n    href: 'https://cloud.tencent.com/document/product/248/45569',\n    groupName: '弹性MapReduce',\n  },\n  {\n    service: 'mrNODE',\n    label: '弹性MapReduce(NODE)',\n    namespace: 'QCE/TXMR_NODE',\n    href: 'https://cloud.tencent.com/document/product/248/45570',\n    groupName: '弹性MapReduce',\n  },\n  {\n    service: 'mrPRESTO',\n    label: '弹性MapReduce(PRESTO)',\n    namespace: 'QCE/TXMR_PRESTO',\n    href: 'https://cloud.tencent.com/document/product/248/45571',\n    groupName: '弹性MapReduce',\n  },\n  {\n    service: 'mrSPARK',\n    label: '弹性MapReduce(SPARK)',\n    namespace: 'QCE/TXMR_SPARK',\n    href: 'https://cloud.tencent.com/document/product/248/45572',\n    groupName: '弹性MapReduce',\n  },\n  {\n    service: 'mrYARN',\n    label: '弹性MapReduce(YARN)',\n    namespace: 'QCE/TXMR_YARN',\n    href: 'https://cloud.tencent.com/document/product/248/45573',\n    groupName: '弹性MapReduce',\n  },\n  {\n    service: 'mrZOOKEEPER',\n    label: '弹性MapReduce(ZOOKEEPER)',\n    namespace: 'QCE/TXMR_ZOOKEEPER',\n    href: 'https://cloud.tencent.com/document/product/248/45574',\n    groupName: '弹性MapReduce',\n  },\n  {\n    service: 'cbs',\n    label: '云硬盘(BLOCK_STORAGE)',\n    namespace: 'QCE/BLOCK_STORAGE',\n    href: 'https://cloud.tencent.com/document/product/362/2345',\n  },\n  {\n    service: 'apigateway',\n    label: 'API 网关(APIGATEWAY)',\n    namespace: 'QCE/APIGATEWAY',\n    href: 'https://cloud.tencent.com/document/product/248/45127',\n  },\n  {\n    service: 'qaap',\n    label: '全球应用加速(QAAP)',\n    namespace: 'QCE/QAAP',\n    href: 'https://cloud.tencent.com/document/product/608',\n  },\n  {\n    service: 'ecm',\n    label: '边缘计算和网络监控(ECM)',\n    hideRegion: true,\n    namespace: 'QCE/ECM',\n    href: 'https://cloud.tencent.com/document/product/1108',\n    groupName: '边缘计算机器',\n  },\n  {\n    service: 'ecmBlockStorage',\n    label: '边缘计算存储监控(ECM_BLOCK_STORAGE)',\n    hideRegion: true,\n    namespace: 'QCE/ECM_BLOCK_STORAGE',\n    href: 'https://cloud.tencent.com/document/product/1108',\n    groupName: '边缘计算机器',\n  },\n  {\n    service: 'ecmLb',\n    label: '边缘计算负载均衡(ECM_LB)',\n    hideRegion: true,\n    namespace: 'QCE/ECM_LB',\n    href: 'https://cloud.tencent.com/document/product/1108',\n    groupName: '边缘计算机器',\n  },\n  {\n    service: 'gse',\n    label: '游戏服务器伸缩监控指标(GSE))',\n    namespace: 'QCE/GSE',\n    href: 'https://cloud.tencent.com/document/product/1165',\n  },\n  // {\n  //   service: 'waf',\n  //   label: 'Web 应用防火墙(WAF)',\n  //   hideRegion: true,\n  //   namespace: 'QCE/WAF',\n  //   href: 'https://cloud.tencent.com/document/product/627',\n  // },\n];\nconst Datasources = {};\nconst InitStates = {};\nconst InstanceAliasList = {};\nconst GetInstanceQueryParams = {};\n\n/**\n * 由于目录命名不规范，导致需要使用额外逻辑保证正确性。从目录到具体service的映射\n */\nconst hackModuleName = {\n  // lb_loadBalance: 'loadBalance',\n  postgresql: 'postgres',\n  mongodb: 'mongoDB',\n  clb: ['lbPrivate', 'lbPublic', 'loadBalance'],\n  mr: ['mrHDFS', 'mrHBASE', 'mrHIVE', 'mrNODE', 'mrPRESTO', 'mrSPARK', 'mrYARN', 'mrZOOKEEPER'],\n};\n\nconst requireModule = (require as any).context('./', true, /^\\.\\/[a-zA-Z]\\w+\\/(datasource)|(query(_def)?)\\.ts$/);\n\nrequireModule.keys().forEach((filePath) => {\n  let [, moduleName, fileName] = filePath.split('/');\n\n  // hack： 这里是由于产品目录命名不规范,所以才会多这么一段代码\n  moduleName = hackModuleName[moduleName] ?? moduleName;\n\n  // 目录与模块的映射关系，不管是一对一还是一对多，均按数组进行统一处理\n  [].concat(moduleName).forEach((module: string) => {\n    // 这个service就是产品配置中的service，需要注意这里的service是根据目录名称算出来的，因此目录名称一定要和service对应\n    const service = module.replace(/_([a-zA-Z])/g, (_, b) => b.toUpperCase());\n    const prefix = service.toUpperCase(); // 命名规则\n\n    // datasource\n    if (fileName === 'datasource.ts') {\n      const Cls = require(`${filePath}`).default;\n\n      // 想办法为实例注入service，不能为prototype或则类本身注入，因为会造成互相污染，详尽mrDatasource\n      Datasources[`${prefix}Datasource`] = class {\n        constructor(...params) {\n          const target = new Cls(...params, service);\n          target.service = service;\n          // eslint-disable-next-line no-constructor-return\n          return target;\n        }\n      };\n    }\n    // query\n    if (fileName === 'query.ts') {\n      require(`${filePath}`);\n    }\n    // query_def\n    if (fileName === 'query_def.ts') {\n      const alias = `${prefix}InstanceAliasList`;\n      const getParams = `${prefix}GetInstanceQueryParams`;\n\n      const target = require(`${filePath}`);\n\n      InitStates[service] = target.default; // FIXME: 这里需不需要深拷贝？\n      InstanceAliasList[alias] = target[alias] ?? target['InstanceAliasList'];\n      GetInstanceQueryParams[getParams] = target[getParams] ?? target['GetInstanceQueryParams'];\n    }\n  });\n});\n\nexport {\n  InitStates as InitServiceState,\n  SERVICES,\n  Datasources,\n  InstanceAliasList,\n  GetInstanceQueryParams,\n  // DefaultDimensions\n};\n\n// console.log(Datasources, InitStates, InstanceAliasList, GetInstanceQueryParams);\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/TDMQ';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'tdmqQuery';\n\nconst TDMQInvalidDemensions = {\n  tenantId: 'ClusterId',\n  topicName: 'TopicName',\n  environmentId: 'EnvironmentId',\n};\n\n// 需和文件名对应\nconst TDMQInstanceAliasList = ['ClusterId', 'ClusterName'];\n\nconst templateQueryIdMap = {\n  instance: 'ClusterId',\n  topicName: 'TopicName',\n  environmentId: 'EnvironmentId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst TDMQFilterFields = {\n  Limit: 20,\n  Offset: 0,\n};\n\nconst TDMQFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n];\n\nconst CDNPROVINCE_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'ClusterId',\n  // 此处key应该是经过TDMQInvalidDemensions处理后的\n  topicName: '',\n  environmentId: '',\n  queries: TDMQFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nconst regionSupported = [\n  { text: '华北地区(北京)', value: 'ap-beijing' },\n  { text: '西南地区(成都)', value: 'ap-chengdu' },\n  { text: '华南地区(广州)', value: 'ap-guangzhou' },\n  { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n  { text: '华东地区(上海)', value: 'ap-shanghai' },\n  { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n  { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n  { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },\n];\nfunction modifyDimensons(metricItem) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    if (item.Dimensions.indexOf('topicName') !== -1 && item.Dimensions.indexOf('environmentId') === -1) {\n      item.Dimensions.push('environmentId');\n    }\n  });\n  return metricTmp;\n}\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  topicName: 'topicName',\n  environmentId: 'environmentId',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  TopicName: {\n    dim_KeyInStorage: keyInStorage.topicName,\n    dim_KeyInTarget: 'topicName',\n    dim_KeyInMap: templateQueryIdMap.topicName,\n  },\n  EnvironmentId: {\n    dim_KeyInStorage: keyInStorage.environmentId,\n    dim_KeyInTarget: 'environmentId',\n    dim_KeyInMap: templateQueryIdMap.environmentId,\n  },\n};\nexport default CDNPROVINCE_STATE;\nexport {\n  TDMQFilterFieldsDescriptor,\n  templateQueryIdMap,\n  TDMQInstanceAliasList,\n  TDMQInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryMonitorExtraConfg,\n  keyInStorage,\n  modifyDimensons,\n  regionSupported,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as TDMQGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { isArray, cloneDeep } from 'lodash';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/TDMYSQL';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'dcdbQuery';\n\nconst DCDBInvalidDemensions = {\n  nodeid: 'NodeId',\n  instanceid: 'InstanceId',\n  shardid: 'ShardInstanceId',\n  ShardId: 'ShardInstanceId',\n};\n\n// 需和文件名对应\nconst DCDBInstanceAliasList = ['InstanceId', 'InstanceName'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n  NodeId: 'NodeId',\n  ShardInstanceId: 'ShardInstanceId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst DCDBFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  InstanceIds: [],\n  SearchName: '',\n  SearchKey: '',\n  ProjectIds: [],\n  // IsFilterVpc\n  VpcId: '',\n  SubnetId: '',\n\n  OrderBy: {},\n  OrderByType: {},\n  // IsFilterExcluster: {},\n  ExclusterType: {},\n\n  ExclusterIds: [],\n  FilterInstanceType: {},\n};\n\nconst DCDBFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceIds',\n    enDescriptor: 'InstanceIds',\n    cnDescriptor: '实例 ID 查询',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'SearchName',\n    enDescriptor: 'SearchName',\n    cnDescriptor: '搜索的字段名,当前支持的值有：instancename、vip、all',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SearchKey',\n    enDescriptor: 'SearchKey',\n    cnDescriptor: '搜索的关键字',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'ProjectIds',\n    enDescriptor: 'ProjectIds',\n    cnDescriptor: '按项目 ID 查询',\n    link: '',\n    type: 'inputNumberMulti',\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'VpcId',\n    cnDescriptor: '私有网络 ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SubnetId',\n    enDescriptor: 'SubnetId',\n    cnDescriptor: '私有网络的子网 ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'projectId', value: 'projectId' },\n      { text: 'createtime', value: 'createtime' },\n      { text: 'instancename', value: 'instancename' },\n    ],\n  },\n  {\n    key: 'OrderByType',\n    enDescriptor: 'OrderByType',\n    cnDescriptor: '私有网络 ID',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'desc', value: 'desc' },\n      { text: 'asc', value: 'asc' },\n    ],\n  },\n  {\n    key: 'ExclusterType',\n    enDescriptor: 'ExclusterType',\n    cnDescriptor: '集群类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '非独享集群', value: 1 },\n      { text: '独享集群', value: 2 },\n      { text: '全部', value: 0 },\n      { text: 'asc', value: 'asc' },\n    ],\n  },\n  {\n    key: 'ExclusterIds',\n    enDescriptor: 'ExclusterIds',\n    cnDescriptor: '独享集群ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'FilterInstanceType',\n    enDescriptor: 'FilterInstanceType',\n    cnDescriptor: '实例类型过滤',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '独享实例', value: 1 },\n      { text: '主实例', value: 2 },\n      { text: '灾备实例', value: 3 },\n    ],\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/557/16140',\n  namespace,\n  fieldDescriptor: DCDBFilterFieldsDescriptor,\n};\n\nconst DCDB_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  ShardId: '',\n  NodeId: '',\n  queries: DCDBFilterFields,\n};\nconst modifyMetricConf = {\n  shardid: 'ShardId',\n  instanceid: 'InstanceId',\n  nodeid: 'NodeId',\n};\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = item.Dimensions.map((v) => modifyMetricConf[v] || v);\n  });\n  return metricTmp;\n}\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params = instanceQueryParamsBaseParse(queries, false);\n  // 特殊处理\n  params.IsFilterVpc = false;\n  params.IsFilterExcluster = false;\n  if (params.VpcId || params.SubnetId) params.IsFilterVpc = true;\n  if (params.ExclusterType) params.IsFilterExcluster = true;\n  if (isArray(params.FilterInstanceType)) params.FilterInstanceType = params.FilterInstanceType.join(',');\n  return params;\n}\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  NodeId: 'NodeId',\n  ShardInstanceId: 'ShardId',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  NodeId: {\n    dim_KeyInStorage: keyInStorage.NodeId,\n    dim_KeyInTarget: 'NodeId',\n    dim_KeyInMap: templateQueryIdMap.NodeId,\n  },\n  ShardInstanceId: {\n    dim_KeyInStorage: keyInStorage.ShardInstanceId,\n    dim_KeyInTarget: 'ShardId',\n    dim_KeyInMap: templateQueryIdMap.ShardInstanceId,\n  },\n};\n// 和其他产品的展示保持一致\nconst regionSupported = [\n  { text: '华北地区(北京)', value: 'ap-beijing' },\n  { text: '西南地区(成都)', value: 'ap-chengdu' },\n  { text: '西南地区(重庆)', value: 'ap-chongqing' },\n  { text: '华南地区(广州)', value: 'ap-guangzhou' },\n  { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n  { text: '亚太南部(孟买)', value: 'ap-mumbai' },\n  { text: '华东地区(南京)', value: 'ap-nanjing' },\n  { text: '华东地区(上海)', value: 'ap-shanghai' },\n  { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },\n  { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n  { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n  { text: '亚太东北(东京)', value: 'ap-tokyo' },\n  { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },\n  { text: '美国东部(弗吉尼亚)', value: 'na-ashburn' },\n  { text: '美国西部(硅谷)', value: 'na-siliconvalley' },\n  { text: '北美地区(多伦多)', value: 'na-toronto' },\n];\nexport default DCDB_STATE;\nexport {\n  DCDBFilterFieldsDescriptor,\n  templateQueryIdMap,\n  DCDBInstanceAliasList,\n  DCDBInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  regionSupported,\n  keyInStorage,\n  modifyDimensons,\n  queryMonitorExtraConfg,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as DCDBGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/GSE';\nconst fleetId = 'FleetId'; // 为和cvm其他产品保持一致，即将string[]改为Array<{fleetid: xxx}>,在此声明key\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'gseQuery';\n\nconst GSEInvalidDemensions = {\n  instanceid: 'InstanceId',\n  fleetid: 'FleetId',\n  queuename: 'Name',\n};\n\n// 需和文件名对应\nconst GSEInstanceAliasList = ['InstanceId', 'PrivateIpAddress', 'IpAddress'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n  Name: 'Name',\n  FleetId: fleetId,\n};\n\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  fleet: 'fleet', // 实例队列\n  queue: 'queueName', // 会话队列\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  FleetId: {\n    dim_KeyInStorage: keyInStorage.fleet,\n    dim_KeyInTarget: 'FleetId',\n    dim_KeyInMap: templateQueryIdMap.FleetId,\n  },\n  Name: {\n    dim_KeyInStorage: keyInStorage.queue,\n    dim_KeyInTarget: 'Name',\n    dim_KeyInMap: templateQueryIdMap.Name,\n  },\n};\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst GSEFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  InstanceId: '',\n  FleetId: '',\n};\n\nconst GSEFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceId',\n    enDescriptor: 'resourceName',\n    cnDescriptor: '资源名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'FleetId',\n    enDescriptor: 'tagKey',\n    cnDescriptor: '标签键',\n    link: '',\n    type: 'input',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/1165/42604',\n  namespace,\n  fieldDescriptor: GSEFilterFieldsDescriptor,\n};\n\nconst GSE_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  FleetId: '', //  服务器实例\n  Name: '', // 队列名称\n  queries: GSEFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\n// regions for dropdown\nconst regionSupported = [\n  { text: '亚太东南(曼谷)', value: 'ap-bangkok' },\n  { text: '华北地区(北京)', value: 'ap-beijing' },\n  { text: '西南地区(成都)', value: 'ap-chengdu' },\n  // { text: '西南地区(重庆)', value: 'ap-chongqing' },\n  { text: '华南地区(广州)', value: 'ap-guangzhou' },\n  { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n  { text: '亚太南部(孟买)', value: 'ap-mumbai' },\n  { text: '亚太东北(首尔)', value: 'ap-seoul' },\n  { text: '华东地区(南京)', value: 'ap-nanjing' },\n  { text: '华东地区(上海)', value: 'ap-shanghai' },\n  // { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },\n  // { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n  { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n  { text: '亚太东北(东京)', value: 'ap-tokyo' },\n  { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },\n  { text: '美国东部(弗吉尼亚)', value: 'na-ashburn' },\n  { text: '美国西部(硅谷)', value: 'na-siliconvalley' },\n  // { text: '北美地区(多伦多)', value: 'na-toronto' },\n];\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = item.Dimensions.map((v) => GSEInvalidDemensions[v] || v);\n  });\n  return metricTmp;\n}\nexport default GSE_STATE;\nexport {\n  GSEFilterFieldsDescriptor,\n  templateQueryIdMap,\n  GSEInstanceAliasList,\n  GSEInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  regionSupported,\n  modifyDimensons,\n  queryMonitorExtraConfg,\n  fleetId,\n  keyInStorage,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as GSEGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/LOADBALANCE';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'loadBalanceQuery';\n\nconst ForwardTypes = [\n  { text: '通用的负载均衡', value: 1 },\n  { text: '传统的负载均衡', value: 0 },\n];\n\nconst OrderBy = [\n  { text: 'LoadBalancerName', value: 'LoadBalancerName' },\n  { text: 'CreateTime', value: 'CreateTime' },\n  { text: 'Domain', value: 'Domain' },\n  { text: 'LoadBalancerType', value: 'LoadBalancerType' },\n];\n\nconst OrderType = [\n  { text: '升序', value: 0 },\n  { text: '降序', value: 1 },\n];\n\nconst WithRs = [\n  { text: '没有绑定后端服务', value: 0 },\n  { text: '绑定后端服务', value: 1 },\n  { text: '查询全部', value: -1 },\n];\nconst LOADBALANCEFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n  },\n  {\n    key: 'LoadBalancerIds',\n    enDescriptor: 'LoadBalancer ID',\n    cnDescriptor: '实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerName',\n    enDescriptor: 'LoadBalancer Name',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'Forward',\n    enDescriptor: 'Forward',\n    cnDescriptor: '负载均衡实例类型',\n    link: '',\n    type: 'select',\n    list: ForwardTypes,\n  },\n  {\n    key: 'Domain',\n    enDescriptor: 'Domain',\n    cnDescriptor: '域名，腾讯云为负载均衡实例分配的域名，本参数仅对传统型公网负载均衡才有意义',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'LoadBalancerVips',\n    enDescriptor: 'LoadBalancer Vips',\n    cnDescriptor: '负载均衡实例的 VIP 地址',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'BackendPrivateIps',\n    enDescriptor: 'BackendPrivate Ips',\n    cnDescriptor: '负载均衡绑定的后端服务的内网 IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'BackendPublicIps',\n    enDescriptor: 'BackendPublic Ips',\n    cnDescriptor: '负载均衡绑定的后端服务的外网 IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'ProjectId',\n    enDescriptor: 'Project ID',\n    cnDescriptor: '负载均衡实例所属的项目 ID',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'Vpc ID',\n    cnDescriptor: '负载均衡实例所属私有网络',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SecurityGroup',\n    enDescriptor: 'Security Group',\n    cnDescriptor: '安全组ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'MasterZone',\n    enDescriptor: 'Master Zone',\n    cnDescriptor: '主可用区ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'WithRs',\n    enDescriptor: 'WithRs',\n    cnDescriptor: '负载均衡是否绑定后端服务',\n    link: '',\n    type: 'select',\n    list: WithRs,\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderBy,\n  },\n  {\n    key: 'OrderType',\n    enDescriptor: 'OrderByType',\n    cnDescriptor: '排序方式',\n    link: '',\n    type: 'select',\n    list: OrderType,\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/214/30685',\n  namespace,\n  fieldDescriptor: LOADBALANCEFieldsDescriptor,\n};\nconst LBFields = {\n  LoadBalancerIds: [],\n  Forward: undefined,\n  LoadBalancerName: '',\n  Domain: '',\n  LoadBalancerVips: [],\n  BackendPublicIps: [],\n  BackendPrivateIps: [],\n  Limit: 20,\n  Offset: 0,\n  ProjectId: undefined,\n  WithRs: {},\n  VpcId: '',\n  SecurityGroup: '',\n  MasterZone: '',\n  OrderBy: {},\n  OrderType: {},\n};\n\nconst LOADBALANCE_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'LoadBalancerId',\n  Port: '',\n  Protocol: '',\n  listener: '',\n  // listenerAlias: 'ListenerId',\n  queries: LBFields,\n};\n\n// function GetInstanceQueryParams(queries: any = {}) {\n//   const params: any = {};\n//   if (!_.isEmpty(queries)) {\n//     params.Limit = _.get(queries, 'Limit', 20) || 20;\n//     params.Offset = _.get(queries, 'Offset', 0) || 0;\n//     queries = _.omit(queries, ['Offset', 'Limit']);\n//     _.forEach(queries, (item: any, key) => {\n//       if (_.isArray(item)) {\n//         item = _.compact(item);\n//         if (item.length > 0) {\n//           params[key] = _.uniq(item);\n//         }\n//       } else if (_.isObject(item)) {\n//         if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n//           params[key] = _.get(item, 'value');\n//         }\n//       } else if (_.isNumber(item) || !_.isEmpty(item)) {\n//         params[key] = item;\n//       }\n//     });\n//   }\n//   return params;\n// }\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\nconst InstanceAliasList = ['LoadBalancerId', 'LoadBalancerName', 'LoadBalancerVips'];\nconst LOADBALANCEListenerAliasList = ['ListenerId', 'ListenerName', 'Port'];\nconst LOADBALANCEVALIDDIMENSIONS = {\n  vip: 'LoadBalancerVips',\n  // vpcId: 'NumericalVpcId',\n  loadBalancerPort: 'Port',\n  protocol: 'Protocol',\n};\n// dimensionObject[item] = { Name: item, Value: '' };\n// const LOADBALANCE_INSTANCE_DIMENSIONOBJECTS = {\n//   vip: { Name: 'vip', Value: '' },\n// };\n// const LOADBALANCE_LISTENER_DIMENSIONOBJECTS = {\n//   vip: { Name: 'vip', Value: '' },\n//   loadBalancerPort: { Name: 'loadBalancerPort', Value: '' },\n//   protocol: { Name: 'protocol', Value: '' },\n// };\nconst templateQueryIdMap = {\n  instance: 'LoadBalancerId',\n  listener: 'ListenerId',\n};\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  listener: 'ListenerList',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  Port: {\n    dim_KeyInStorage: keyInStorage.listener,\n    dim_KeyInTarget: 'listener',\n    dim_KeyInMap: templateQueryIdMap.listener,\n  },\n  Protocol: {\n    dim_KeyInStorage: keyInStorage.listener,\n    dim_KeyInTarget: 'listener',\n    dim_KeyInMap: templateQueryIdMap.listener,\n  },\n};\nexport default LOADBALANCE_STATE;\nexport {\n  LOADBALANCEFieldsDescriptor,\n  InstanceAliasList,\n  LOADBALANCEListenerAliasList,\n  LOADBALANCEVALIDDIMENSIONS,\n  templateQueryIdMap,\n  // LOADBALANCE_LISTENER_DIMENSIONOBJECTS,\n  // LOADBALANCE_INSTANCE_DIMENSIONOBJECTS,\n  queryMonitorExtraConfg,\n  keyInStorage,\n  queryEditorConfig,\n  namespace,\n  queryEditorName,\n  GetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/ECM_BLOCK_STORAGE';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'ecmBlockStorageQuery';\n\nconst ECMBLOCKSTORAGEInvalidDemensions = {\n  uuid: 'UUID',\n  diskId: 'DiskId',\n};\n\n// 需和文件名对应\nconst ECMBLOCKSTORAGEInstanceAliasList = ['InstanceId', 'InstanceName'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n  diskId: 'DiskId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst ECMBLOCKSTORAGEFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  'zone-name': [],\n  'module-id': [],\n  'module-name': [],\n  'instance-id': [],\n  'instance-name': [],\n  'ip-address': [],\n  'instance-uuid': [],\n  'instance-state': {},\n  'internet-service-provider': [],\n  'instance-family': [],\n  'image-id': [],\n  'vpc-id': [],\n  'subnet-id': [],\n};\n\nconst ECMBLOCKSTORAGEFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'zone-name',\n    enDescriptor: 'zone-name',\n    cnDescriptor: '排列顺序',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'module-id',\n    enDescriptor: 'module-id',\n    cnDescriptor: '模块ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'module-name',\n    enDescriptor: 'module-name',\n    cnDescriptor: '模块名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-id',\n    enDescriptor: 'instance-id',\n    cnDescriptor: '实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-name',\n    enDescriptor: 'instance-name',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'ip-address',\n    enDescriptor: 'ip-address',\n    cnDescriptor: '内网/公网IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-uuid',\n    enDescriptor: 'instance-uuid',\n    cnDescriptor: '实例uuid',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-state',\n    enDescriptor: 'instance-state',\n    cnDescriptor: '实例状态',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '创建中', value: 'PENDING' },\n      { text: '创建失败', value: 'LAUNCH_FAILED' },\n      { text: '运行中', value: 'RUNNING' },\n      { text: '关机', value: 'STOPPED' },\n      { text: '开机中', value: 'STARTING' },\n      { text: '关机中', value: 'STOPPING' },\n      { text: '重启中', value: 'REBOOTING' },\n      { text: '停止待销毁', value: 'SHUTDOWN' },\n      { text: '销毁中', value: 'TERMINATING' },\n    ],\n  },\n  {\n    key: 'internet-service-provider',\n    enDescriptor: 'internet-service-provider',\n    cnDescriptor: '公网IP所属的运营商',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-family',\n    enDescriptor: 'instance-family',\n    cnDescriptor: '机型family',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'image-id',\n    enDescriptor: 'image-id',\n    cnDescriptor: '镜像ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'vpc-id',\n    cnDescriptor: '实例的vpc id',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'subnet-id',\n    enDescriptor: 'subnet-id',\n    cnDescriptor: '实例的subnet id',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/1108/42565',\n  namespace,\n  fieldDescriptor: ECMBLOCKSTORAGEFilterFieldsDescriptor,\n};\n\nconst ECMBLOCKSTORAGE_STATE = {\n  region: 'ap-guangzhou',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  diskId: '',\n  queries: ECMBLOCKSTORAGEFilterFields,\n};\n\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  diskId: 'diskId',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  DiskId: {\n    dim_KeyInStorage: keyInStorage.diskId,\n    dim_KeyInTarget: 'diskId',\n    dim_KeyInMap: templateQueryIdMap.diskId,\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nexport default ECMBLOCKSTORAGE_STATE;\nexport {\n  ECMBLOCKSTORAGEFilterFieldsDescriptor,\n  templateQueryIdMap,\n  ECMBLOCKSTORAGEInstanceAliasList,\n  ECMBLOCKSTORAGEInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  keyInStorage,\n  queryMonitorExtraConfg,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as ECMBLOCKSTORAGEGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/APIGATEWAY';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'apigatewayQuery';\n\nconst APIGATEWAYInvalidDemensions = {\n  serviceId: 'ServiceId',\n  environmentName: 'EnvironmentName',\n  apiid: 'Apiid',\n  apiId: 'Apiid',\n};\n\n// 需和文件名对应\nconst APIGATEWAYInstanceAliasList = ['ServiceId', 'ServiceName'];\n\nconst templateQueryIdMap = {\n  instance: 'ServiceId',\n  environmentName: 'EnvironmentName',\n};\n\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  environmentList: 'EnvironmentList',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  EnvironmentName: {\n    dim_KeyInStorage: keyInStorage.environmentList,\n    dim_KeyInTarget: 'EnvironmentName',\n    dim_KeyInMap: templateQueryIdMap.environmentName,\n  },\n};\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst APIGATEWAYFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  ServiceId: [],\n  ServiceName: [],\n  NotUsagePlanId: [],\n  Environment: [],\n  IpVersion: [],\n};\n\nconst APIGATEWAYFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'ServiceId',\n    enDescriptor: 'ServiceId',\n    cnDescriptor: '服务id',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'ServiceName',\n    enDescriptor: 'ServiceName',\n    cnDescriptor: '服务名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'NotUsagePlanId',\n    enDescriptor: 'NotUsagePlanId',\n    cnDescriptor: 'NotUsagePlanId',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'Environment',\n    enDescriptor: 'Environment',\n    cnDescriptor: '环境名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'IpVersion',\n    enDescriptor: 'IpVersion',\n    cnDescriptor: 'IP版本',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/628/45198',\n  namespace,\n  fieldDescriptor: APIGATEWAYFilterFieldsDescriptor,\n};\n\nconst APIGATEWAY_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'ServiceId',\n  EnvironmentName: '',\n  queries: APIGATEWAYFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\n// regions for dropdown\nconst regionSupported = [\n  { text: '华北地区(北京)', value: 'ap-beijing' },\n  { text: '西南地区(成都)', value: 'ap-chengdu' },\n  { text: '西南地区(重庆)', value: 'ap-chongqing' },\n  { text: '华南地区(广州)', value: 'ap-guangzhou' },\n  { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n  { text: '亚太南部(孟买)', value: 'ap-mumbai' },\n  { text: '华东地区(南京)', value: 'ap-nanjing' },\n  { text: '华东地区(上海)', value: 'ap-shanghai' },\n  { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },\n  { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n  { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n  { text: '亚太东北(东京)', value: 'ap-tokyo' },\n  { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },\n  { text: '美国东部(弗吉尼亚)', value: 'na-ashburn' },\n  { text: '美国西部(硅谷)', value: 'na-siliconvalley' },\n  { text: '北美地区(多伦多)', value: 'na-toronto' },\n];\nexport default APIGATEWAY_STATE;\nexport {\n  APIGATEWAYFilterFieldsDescriptor,\n  templateQueryIdMap,\n  APIGATEWAYInstanceAliasList,\n  APIGATEWAYInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  regionSupported,\n  queryMonitorExtraConfg,\n  keyInStorage,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as APIGATEWAYGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\nexport const CKAFKAQueryDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为10，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceId',\n    enDescriptor: 'InstanceId',\n    cnDescriptor: '按照实例ID过滤',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SearchWord',\n    enDescriptor: 'SearchWord',\n    cnDescriptor: '按照实例名称过滤，支持模糊查询',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'TagKey',\n    enDescriptor: 'TagKey',\n    cnDescriptor: '匹配标签key值',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'Status',\n    enDescriptor: 'Status',\n    cnDescriptor: '实例的状态，不填默认返回全部',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '创建中', value: 0 },\n      { text: '运行中', value: 1 },\n      { text: '删除中', value: 2 },\n    ],\n  },\n];\n\nconst CKAFKA_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  topicId: '',\n  topicName: '',\n  consumerGroup: '',\n  partition: '',\n  queries: {\n    Offset: 0,\n    Limit: 10,\n    Status: [],\n    InstanceId: '',\n    SearchWord: '',\n    TagKey: '',\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\nconst CKAFKAInstanceAliasList = ['InstanceId', 'InstanceName'];\nconst CKAFKATopicAliasList = ['TopicId', 'TopicName'];\n// 保存在模板变量value中的key\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n  topicId: 'TopicId',\n  groupName: 'GroupName',\n  partition: 'Partition',\n};\n// 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key\nconst CKAFKAInvalidDemensions = {\n  instanceId: 'InstanceId',\n  topicId: 'TopicId',\n  topicName: 'TopicName',\n  consumerGroup: 'GroupName',\n  partition: 'PartitionId',\n};\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  TopicList: 'TopicList',\n  GroupList: 'GroupList',\n  PartitionList: 'PartitionList',\n};\n\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  TopicId: {\n    dim_KeyInStorage: keyInStorage.TopicList,\n    dim_KeyInTarget: 'topicId',\n    dim_KeyInMap: templateQueryIdMap.topicId,\n  },\n  // topicName和topicId是同一个storage中的source，所以根据topicId帅选\n  TopicName: {\n    dim_KeyInStorage: keyInStorage.TopicList,\n    dim_KeyInTarget: 'topicId',\n    dim_KeyInMap: templateQueryIdMap.topicId,\n  },\n  GroupName: {\n    dim_KeyInStorage: keyInStorage.GroupList,\n    dim_KeyInTarget: 'consumerGroup',\n    dim_KeyInMap: templateQueryIdMap.groupName,\n  },\n  Partition: {\n    dim_KeyInStorage: keyInStorage.PartitionList,\n    dim_KeyInTarget: 'partition',\n    dim_KeyInMap: templateQueryIdMap.partition,\n  },\n};\nexport default CKAFKA_STATE;\nexport {\n  CKAFKAInstanceAliasList,\n  CKAFKATopicAliasList,\n  CKAFKAInvalidDemensions,\n  templateQueryIdMap,\n  keyInStorage,\n  queryMonitorExtraConfg,\n  GetInstanceQueryParams as CKAFKAGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/V_CLB';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'vClbQuery';\n\nconst VCLBInvalidDemensions = {\n  InstanceId: 'LoadBalancerId',\n  // vip: 'LoadBalancerVips',\n  // loadBalancerPort: 'Port',\n  // protocol: 'Protocol',\n};\n\n// 要和文件名方式一致，ceip_summary=>CEIPSUMMARY\nconst VCLBInstanceAliasList = ['LoadBalancerId', 'LoadBalancerVips', 'LoadBalancerName'];\n\nconst templateQueryIdMap = {\n  instance: 'LoadBalancerId',\n};\nconst ForwardTypes = [\n  { text: '通用的负载均衡', value: 1 },\n  { text: '传统的负载均衡', value: 0 },\n];\n\nconst OrderBy = [\n  { text: 'LoadBalancerName', value: 'LoadBalancerName' },\n  { text: 'CreateTime', value: 'CreateTime' },\n  { text: 'Domain', value: 'Domain' },\n  { text: 'LoadBalancerType', value: 'LoadBalancerType' },\n];\n\nconst OrderType = [\n  { text: '升序', value: 0 },\n  { text: '降序', value: 1 },\n];\n\nconst WithRs = [\n  { text: '没有绑定后端服务', value: 0 },\n  { text: '绑定后端服务', value: 1 },\n  { text: '查询全部', value: -1 },\n];\nconst VCLBFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n  },\n  {\n    key: 'LoadBalancerIds',\n    enDescriptor: 'LoadBalancer ID',\n    cnDescriptor: '实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerName',\n    enDescriptor: 'LoadBalancer Name',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'Forward',\n    enDescriptor: 'Forward',\n    cnDescriptor: '负载均衡实例类型',\n    link: '',\n    type: 'select',\n    list: ForwardTypes,\n  },\n  {\n    key: 'Domain',\n    enDescriptor: 'Domain',\n    cnDescriptor: '域名，腾讯云为负载均衡实例分配的域名，本参数仅对传统型公网负载均衡才有意义',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'LoadBalancerVips',\n    enDescriptor: 'LoadBalancer Vips',\n    cnDescriptor: '负载均衡实例的 VIP 地址',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'BackendPrivateIps',\n    enDescriptor: 'BackendPrivate Ips',\n    cnDescriptor: '负载均衡绑定的后端服务的内网 IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'BackendPublicIps',\n    enDescriptor: 'BackendPublic Ips',\n    cnDescriptor: '负载均衡绑定的后端服务的外网 IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'ProjectId',\n    enDescriptor: 'Project ID',\n    cnDescriptor: '负载均衡实例所属的项目 ID',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'Vpc ID',\n    cnDescriptor: '负载均衡实例所属私有网络',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SecurityGroup',\n    enDescriptor: 'Security Group',\n    cnDescriptor: '安全组ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'MasterZone',\n    enDescriptor: 'Master Zone',\n    cnDescriptor: '主可用区ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'WithRs',\n    enDescriptor: 'WithRs',\n    cnDescriptor: '负载均衡是否绑定后端服务',\n    link: '',\n    type: 'select',\n    list: WithRs,\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderBy,\n  },\n  {\n    key: 'OrderType',\n    enDescriptor: 'OrderByType',\n    cnDescriptor: '排序方式',\n    link: '',\n    type: 'select',\n    list: OrderType,\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/214/30685',\n  namespace,\n  fieldDescriptor: VCLBFilterFieldsDescriptor,\n};\nconst LBFields = {\n  LoadBalancerIds: [],\n  Forward: undefined,\n  LoadBalancerName: '',\n  Domain: '',\n  LoadBalancerVips: [],\n  BackendPublicIps: [],\n  BackendPrivateIps: [],\n  Limit: 20,\n  Offset: 0,\n  ProjectId: undefined,\n  WithRs: {},\n  VpcId: '',\n  SecurityGroup: '',\n  MasterZone: '',\n  OrderBy: {},\n  OrderType: {},\n};\n\nconst VCLB_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'LoadBalancerId',\n  Port: '',\n  Protocol: '',\n  listener: '',\n  // listenerAlias: 'ListenerId',\n  queries: LBFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\n\n// regions for dropdown\nconst regionSupported = [\n  { text: '亚太东南(曼谷)', value: 'ap-bangkok' },\n  { text: '华北地区(北京)', value: 'ap-beijing' },\n  { text: '西南地区(成都)', value: 'ap-chengdu' },\n  { text: '西南地区(重庆)', value: 'ap-chongqing' },\n  { text: '华南地区(广州)', value: 'ap-guangzhou' },\n  { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n  { text: '亚太南部(雅加达)', value: 'ap-jakarta' },\n  { text: '亚太南部(孟买)', value: 'ap-mumbai' },\n  { text: '亚太东北(首尔)', value: 'ap-seoul' },\n  { text: '华东地区(南京)', value: 'ap-nanjing' },\n  { text: '华东地区(上海)', value: 'ap-shanghai' },\n  { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },\n  { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n  { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n  { text: '亚太东北(东京)', value: 'ap-tokyo' },\n  { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },\n  { text: '欧洲地区(莫斯科)', value: 'eu-moscow' },\n  { text: '美国东部(弗吉尼亚)', value: 'na-ashburn' },\n  { text: '美国西部(硅谷)', value: 'na-siliconvalley' },\n  { text: '北美地区(多伦多)', value: 'na-toronto' },\n];\nconst clbNamespaceMap = {\n  public: 'QCE/LB_PUBLIC',\n  private: 'QCE/LB_PRIVATE',\n};\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['InstanceId'];\n  });\n  return metricTmp;\n}\nexport default VCLB_STATE;\nexport {\n  VCLBFilterFieldsDescriptor,\n  templateQueryIdMap,\n  VCLBInstanceAliasList,\n  VCLBInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  clbNamespaceMap,\n  modifyDimensons,\n  regionSupported,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as BMLBGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/CYNOSDB_MYSQL';\n\n// 按照驼峰方式命名，和SERVICES保持一致，abcDeF会成为angular组件名字<abc-de-f-query />\nconst queryEditorName = 'cynosdbMysqlQuery';\n\nconst cynosdbMysqlFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  OrderBy: {},\n  OrderByType: {},\n  InstanceIds: [],\n  DbType: {},\n  // Status: '',\n};\n\nconst cynosdbMysqlFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 1000,\n  },\n  {\n    key: 'InstanceIds',\n    enDescriptor: 'InstanceIds',\n    cnDescriptor: '实例id列表',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '创建时间', value: 'CREATETIME' },\n      { text: '过期时间', value: 'PERIODENDTIME' },\n    ],\n  },\n  {\n    key: 'OrderByType',\n    enDescriptor: 'OrderByType',\n    cnDescriptor: '排序类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '升序', value: 'ASC' },\n      { text: '降序', value: 'DESC' },\n    ],\n  },\n  {\n    key: 'DbType',\n    enDescriptor: 'DbType',\n    cnDescriptor: '引擎类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'MYSQL', value: 'MYSQL' },\n      { text: 'POSTGRESQL', value: 'POSTGRESQL' },\n    ],\n  },\n  // {\n  //   key: 'Status',\n  //   enDescriptor: 'Status',\n  //   cnDescriptor: '实例状态',\n  //   link: '',\n  //   type: 'input',\n  // },\n];\n// regions for dropdown\nconst regionSupported = [\n  { text: '华北地区(北京)', value: 'ap-beijing' },\n  { text: '华南地区(广州)', value: 'ap-guangzhou' },\n  { text: '华东地区(南京)', value: 'ap-nanjing' },\n  { text: '华东地区(上海)', value: 'ap-shanghai' },\n];\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/1003/48334',\n  namespace,\n  fieldDescriptor: cynosdbMysqlFilterFieldsDescriptor,\n};\n\nconst CYNOSDB_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: cynosdbMysqlFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\n// 和文件名字一样CYNOSDBMYSQL\nconst CYNOSDBMYSQLInstanceAliasList = ['InstanceId', 'InstanceName'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\n\nconst CYNOSDBInvalidDemensions = {\n  instanceid: 'InstanceId',\n  instanceId: 'InstanceId',\n};\nconst checkKeys = ['instanceId'];\nfunction modifyDimensons(metricItem) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['InstanceId'];\n  });\n  return metricTmp;\n}\n\nexport default CYNOSDB_STATE;\nexport {\n  cynosdbMysqlFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CYNOSDBMYSQLInstanceAliasList,\n  CYNOSDBInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  regionSupported,\n  modifyDimensons,\n  checkKeys,\n  // params前缀为service的全大写\n  GetInstanceQueryParams as CYNOSDBMYSQLGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\nexport const SCFQueryDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'SearchKey',\n    enDescriptor: 'SearchKey',\n    cnDescriptor: '支持FunctionName模糊匹配',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'Namespace',\n    enDescriptor: 'Namespace',\n    cnDescriptor: '云函数命名空间',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'Description',\n    enDescriptor: 'Description',\n    cnDescriptor: '函数描述，支持模糊搜索',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'AddTime', value: 'AddTime' },\n      { text: 'ModTime', value: 'ModTime' },\n      { text: 'FunctionName', value: 'FunctionName' },\n    ],\n  },\n  {\n    key: 'Order',\n    enDescriptor: 'Order Direction',\n    cnDescriptor: '排序方式',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'ASC', value: 'ASC' },\n      { text: 'DESC', value: 'DESC' },\n    ],\n  },\n  // {\n  //   key: 'Filters',\n  //   enDescriptor: 'Filters',\n  //   cnDescriptor: '按照标签键值对进行过滤',\n  //   link: '',\n  //   type: 'dropdownmulti',\n  // },\n];\n\nconst SCF_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'FunctionName',\n  version: '',\n  queries: {\n    Offset: 0,\n    Limit: 20,\n    OrderBy: {},\n    Order: {},\n    SearchKey: '',\n    Namespace: '',\n    Description: '',\n    // Filters:  {},\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\nconst SCFInstanceAliasList = ['FunctionId', 'FunctionName'];\n\n// 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key\nconst SCFInvalidDemensions = {\n  functionName: 'FunctionName',\n  namespace: 'Namespace',\n  version: 'Version',\n};\n\nconst templateQueryIdMap = {\n  instance: 'FunctionName',\n  version: 'Version',\n};\nconst regionSupported = [\n  { text: '华北地区(北京)', value: 'ap-beijing' },\n  { text: '西南地区(成都)', value: 'ap-chengdu' },\n  { text: '西南地区(重庆)', value: 'ap-chongqing' },\n  { text: '华南地区(广州)', value: 'ap-guangzhou' },\n  { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n  { text: '亚太南部(孟买)', value: 'ap-mumbai' },\n  { text: '华东地区(上海)', value: 'ap-shanghai' },\n  { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },\n  { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n  { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n  { text: '亚太东北(东京)', value: 'ap-tokyo' },\n  { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },\n  { text: '美国西部(硅谷)', value: 'na-siliconvalley' },\n  { text: '北美地区(多伦多)', value: 'na-toronto' },\n];\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  version: 'version',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  Version: {\n    dim_KeyInStorage: keyInStorage.version,\n    dim_KeyInTarget: 'version',\n    dim_KeyInMap: templateQueryIdMap.version,\n  },\n};\nexport default SCF_STATE;\nexport {\n  SCFInstanceAliasList,\n  SCFInvalidDemensions,\n  queryMonitorExtraConfg,\n  regionSupported,\n  templateQueryIdMap,\n  keyInStorage,\n  GetInstanceQueryParams as SCFGetInstanceQueryParams,\n};\n\n// monitor监控数据默认支持的维度\nexport const SCFDefaultDimensionList = ['functionName', 'namespace', 'version'];\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/SQLSERVER';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'sqlserverQuery';\n\nconst SQLSERVERInvalidDemensions = {\n  resourceId: 'InstanceId',\n};\n\nconst SQLSERVERInstanceAliasList = ['InstanceId', 'Name'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst SQLSERVERNETFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  ProjectId: null,\n  Status: {},\n  InstanceIdSet: [],\n  PayMode: {},\n  VpcId: '',\n  SubnetId: '',\n  VipSet: [],\n  InstanceNameSet: [],\n  VersionSet: [],\n  Zone: '',\n};\n\nconst SQLSERVERNETFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'ProjectId',\n    enDescriptor: 'ProjectId',\n    cnDescriptor: '项目ID',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'Status',\n    enDescriptor: 'Status',\n    cnDescriptor: '实例状态',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '申请中', value: 1 },\n      { text: '运行中', value: 2 },\n      { text: '受限运行中 (主备切换中)', value: 3 },\n      { text: '已隔离', value: 4 },\n      { text: '回收中', value: 5 },\n      { text: '已回收', value: 6 },\n      { text: '任务执行中', value: 7 },\n      { text: '已下线', value: 8 },\n      { text: '实例扩容中', value: 9 },\n      { text: '实例迁移中', value: 10 },\n      { text: '只读', value: 11 },\n      { text: '重启中', value: 12 },\n    ],\n  },\n  {\n    key: 'InstanceIdSet',\n    enDescriptor: 'InstanceIdSet',\n    cnDescriptor: '实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'PayMode',\n    enDescriptor: 'PayMode',\n    cnDescriptor: '子网实例ID',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '包年包月', value: 1 },\n      { text: '按量计费', value: 0 },\n    ],\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'VpcId',\n    cnDescriptor: '实例所属VPC的唯一字符串ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SubnetId',\n    enDescriptor: 'SubnetId',\n    cnDescriptor: '实例所属子网的唯一字符串ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'VipSet',\n    enDescriptor: 'VipSet',\n    cnDescriptor: '实例内网地址列表',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'InstanceNameSet',\n    enDescriptor: 'InstanceNameSet',\n    cnDescriptor: '实例名称列表, 模糊查询',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'VersionSet',\n    enDescriptor: 'VersionSet',\n    cnDescriptor: '实例版本代号列表',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'Zone',\n    enDescriptor: 'Zone',\n    cnDescriptor: '实例可用区',\n    link: '',\n    type: 'dropdown',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/238/19969',\n  namespace,\n  fieldDescriptor: SQLSERVERNETFilterFieldsDescriptor,\n};\n\n// regions for dropdown\nconst regionSupported = [\n  { text: '华北地区(北京)', value: 'ap-beijing' },\n  { text: '西南地区(成都)', value: 'ap-chengdu' },\n  { text: '西南地区(重庆)', value: 'ap-chongqing' },\n  { text: '华南地区(广州)', value: 'ap-guangzhou' },\n  { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n  { text: '华东地区(南京)', value: 'ap-nanjing' },\n  { text: '亚太东北(首尔)', value: 'ap-seoul' },\n  { text: '华东地区(上海)', value: 'ap-shanghai' },\n  { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },\n  { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n  { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n  { text: '亚太东北(东京)', value: 'ap-tokyo' },\n  { text: '欧洲地区(莫斯科)', value: 'eu-moscow' },\n  { text: '美国西部(硅谷)', value: 'na-siliconvalley' },\n];\nconst SQLSERVER_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: SQLSERVERNETFilterFields,\n};\n\nfunction modifyDimensons(metricItem) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['resourceId'];\n  });\n  return metricTmp;\n}\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\nexport default SQLSERVER_STATE;\nexport {\n  SQLSERVERNETFilterFieldsDescriptor,\n  templateQueryIdMap,\n  SQLSERVERInstanceAliasList,\n  SQLSERVERInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  regionSupported,\n  modifyDimensons,\n  // 对应产品的service的全大写拼接InstanceQueryParams\n  GetInstanceQueryParams as SQLSERVERGetInstanceQueryParams,\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__19__;","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/BM_INTRA_LB';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'bmIntraLbQuery';\n\nconst BMINTRALBInvalidDemensions = {\n  vip: 'LoadBalancerVips',\n  vpcId: 'VpcId',\n};\n\n// 要和文件名方式一致，ceip_summary=>CEIPSUMMARY\nconst BMINTRALBInstanceAliasList = ['LoadBalancerId', 'LoadBalancerVips', 'LoadBalancerName'];\n\nconst templateQueryIdMap = {\n  instance: 'LoadBalancerId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是类型\nconst BMINTRALBFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  LoadBalancerIds: [],\n  LoadBalancerName: [],\n  LoadBalancerVips: [],\n};\n\nconst BMINTRALBFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'LoadBalancerIds',\n    enDescriptor: 'LoadBalancerIds',\n    cnDescriptor: '负载均衡器ID数组',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerName',\n    enDescriptor: 'LoadBalancerName',\n    cnDescriptor: '负载均衡器名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerVips',\n    enDescriptor: 'LoadBalancerVips',\n    cnDescriptor: '负载均衡获得的公网IP地址',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/1027/33280',\n  namespace,\n  fieldDescriptor: BMINTRALBFilterFieldsDescriptor,\n};\n\nconst BMINTRALB_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'LoadBalancerId',\n  queries: BMINTRALBFilterFields,\n};\nconst BMLBValidMetricsT = ['Inpkg', 'Outpkg', 'Intraffic', 'Outtraffic', 'Connum', 'Req'];\nfunction isValidMetric(metric) {\n  const validMetrics = _.map(BMLBValidMetricsT, _.toUpper);\n  return _.indexOf(validMetrics, _.toUpper(metric.MetricName)) !== -1;\n}\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\nexport default BMINTRALB_STATE;\nexport {\n  BMINTRALBFilterFieldsDescriptor,\n  templateQueryIdMap,\n  BMINTRALBInstanceAliasList,\n  BMINTRALBInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  isValidMetric,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as BMINTRALBGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/BM_LB';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'bmLbQuery';\n\nconst CPMInvalidDemensions = {\n  vip: 'LoadBalancerVips',\n};\n\n// 要和文件名方式一致，ceip_summary=>CEIPSUMMARY\nconst BMLBInstanceAliasList = ['LoadBalancerId', 'LoadBalancerVips', 'LoadBalancerName'];\n\nconst templateQueryIdMap = {\n  instance: 'LoadBalancerId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是类型\nconst CPMFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  LoadBalancerIds: [],\n  LoadBalancerName: [],\n  LoadBalancerVips: [],\n};\n\nconst CPMFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'LoadBalancerIds',\n    enDescriptor: 'LoadBalancerIds',\n    cnDescriptor: '负载均衡器ID数组',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerName',\n    enDescriptor: 'LoadBalancerName',\n    cnDescriptor: '负载均衡器名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerVips',\n    enDescriptor: 'LoadBalancerVips',\n    cnDescriptor: '负载均衡获得的公网IP地址',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/1027/33280',\n  namespace,\n  fieldDescriptor: CPMFilterFieldsDescriptor,\n};\n\nconst CPM_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'LoadBalancerId',\n  queries: CPMFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\nconst BMLBValidMetricsT = ['Inpkg', 'Outpkg', 'Intraffic', 'Outtraffic', 'Connum', 'Req'];\nfunction isValidMetric(metric) {\n  const validMetrics = _.map(BMLBValidMetricsT, _.toUpper);\n  return _.indexOf(validMetrics, _.toUpper(metric.MetricName)) !== -1;\n}\nexport default CPM_STATE;\nexport {\n  CPMFilterFieldsDescriptor,\n  templateQueryIdMap,\n  BMLBInstanceAliasList,\n  CPMInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  isValidMetric,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as BMLBGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/BM_PCX';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'bmPcxQuery';\n\nconst BMPCXInvalidDemensions = {\n  peeringConnectionId: 'VpcPeerConnectionId',\n};\n\n// 要和文件名方式一致，ceip_summary=>CEIPSUMMARY\nconst BMPCXInstanceAliasList = ['VpcPeerConnectionId', 'VpcPeerConnectionName'];\n\nconst templateQueryIdMap = {\n  instance: 'VpcPeerConnectionId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是类型\nconst BMPCXFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  VpcPeerConnectionIds: [],\n};\n\nconst BMPCXFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'VpcPeerConnectionIds',\n    enDescriptor: 'VpcPeerConnectionIds',\n    cnDescriptor: '对等连接实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/product/1024/36903',\n  namespace,\n  fieldDescriptor: BMPCXFilterFieldsDescriptor,\n};\n\nconst BMPCX_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'VpcPeerConnectionId',\n  queries: BMPCXFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['peeringConnectionId'];\n  });\n  return metricTmp;\n}\nexport default BMPCX_STATE;\nexport {\n  BMPCXFilterFieldsDescriptor,\n  templateQueryIdMap,\n  BMPCXInstanceAliasList,\n  BMPCXInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as BMPCXGetInstanceQueryParams,\n};\n","import * as _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/BLOCK_STORAGE';\nconst queryEditorName = 'cbsQuery';\n\nconst CBSInvalidDemensions = {\n  diskId: 'DiskId',\n  InstanceId: 'InstanceId',\n  diskname: 'DiskName',\n  unInstanceId: 'InstanceId',\n};\n\nconst CBSInstanceAliasList = ['DiskId', 'DiskName'];\n\nconst templateQueryIdMap = {\n  instance: 'DiskId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst CBSFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  DiskIds: [],\n  OrderField: [],\n  Order: [],\n  ReturnBindAutoSnapshotPolicy: false,\n};\n\nconst CBSFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'DiskIds',\n    enDescriptor: 'DiskIds',\n    cnDescriptor: '云硬盘ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'Order',\n    enDescriptor: 'Order',\n    cnDescriptor: '排列顺序',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '升序排列', value: 'ASC' },\n      { text: '降序排列', value: 'DESC' },\n    ],\n  },\n  {\n    key: 'OrderField',\n    enDescriptor: 'OrderField',\n    cnDescriptor: '排序的依据字段',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '云盘的创建时间排序', value: 'CREATE_TIME' },\n      { text: '云盘的到期时间排序', value: 'DEADLINE' },\n    ],\n  },\n  {\n    key: 'ReturnBindAutoSnapshotPolicy',\n    enDescriptor: 'ReturnBindAutoSnapshotPolicy',\n    cnDescriptor: '否需要返回云盘绑定的定期快照策略ID',\n    link: '',\n    type: 'switch',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/362/16315',\n  namespace,\n  fieldDescriptor: CBSFilterFieldsDescriptor,\n};\n\nconst CBS_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'DiskId',\n  queries: CBSFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\nfunction isValidMetric(metricObj: any = {}) {\n  const dimension = _.get(metricObj, 'Dimensions[0].Dimensions');\n  // console.log('dimension', dimension, dimension.length === 1 && _.indexOf(dimension, 'diskId') !== -1);\n  return dimension.length === 1 && _.indexOf(dimension, 'diskId') !== -1;\n}\nexport default CBS_STATE;\nexport {\n  CBSFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CBSInstanceAliasList,\n  CBSInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  isValidMetric,\n  GetInstanceQueryParams as CBSGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/CDN_LOG_DATA';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'cdnProvinceQuery';\n\nconst CDNPROVINCEInvalidDemensions = {\n  domain: 'Domain',\n  // isp: 'Isp',\n  projectid: 'ProjectId',\n  province: 'district',\n  appid: 'AppId',\n};\n\n// 需和文件名对应\nconst CDNPROVINCEInstanceAliasList = ['Domain', 'ProjectId'];\n\nconst templateQueryIdMap = {\n  instance: 'Domain',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst CDNPROVINCEFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  origin: [],\n  domain: [],\n  resourceId: [],\n  status: {},\n  serviceType: {},\n  projectId: [],\n  domainType: {},\n  fullUrlCache: {},\n  https: {},\n  originPullProtocol: {},\n  tagKey: [],\n};\n\nconst CDNPROVINCEFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'origin',\n    enDescriptor: 'origin',\n    cnDescriptor: '主源站',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'domain',\n    enDescriptor: 'domain',\n    cnDescriptor: '域名',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'resourceId',\n    enDescriptor: 'resourceId',\n    cnDescriptor: '域名id',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'status',\n    enDescriptor: 'status',\n    cnDescriptor: '域名状态',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'online', value: 'online' },\n      { text: 'offline', value: 'offline' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'serviceType',\n    enDescriptor: 'serviceType',\n    cnDescriptor: '业务类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'web', value: 'web' },\n      { text: 'download', value: 'download' },\n      { text: 'media', value: 'media' },\n    ],\n  },\n  {\n    key: 'projectId',\n    enDescriptor: 'projectId',\n    cnDescriptor: '项目ID',\n    link: '',\n    type: 'inputNumberMulti',\n  },\n  {\n    key: 'domainType',\n    enDescriptor: 'domainType',\n    cnDescriptor: '主源站类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '自有源', value: 'cname' },\n      { text: 'cos接入', value: 'cos' },\n    ],\n  },\n  {\n    key: 'fullUrlCache',\n    enDescriptor: 'fullUrlCache',\n    cnDescriptor: '全路径缓存',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '打开', value: 'on' },\n      { text: '关闭', value: 'off' },\n    ],\n  },\n  {\n    key: 'https',\n    enDescriptor: 'https',\n    cnDescriptor: '是否配置https',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'on', value: 'on' },\n      { text: 'off', value: 'off' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'originPullProtocol',\n    enDescriptor: 'originPullProtocol',\n    cnDescriptor: '回源协议类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'http', value: 'http' },\n      { text: 'follow', value: 'follow' },\n      { text: 'https', value: 'https' },\n    ],\n  },\n  {\n    key: 'tagKey',\n    enDescriptor: 'tagKey',\n    cnDescriptor: '标签键',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\nconst CDNPROVINCE_STATE = {\n  region: 'ap-guangzhou',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'Domain',\n  // Isp Province分别在两个接口，单独保存在state\n  isp: '',\n  district: '',\n  queries: CDNPROVINCEFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\n// const regionSupported = [\n//   { text: '华北地区(北京)', value: 'ap-beijing' },\n//   { text: '西南地区(成都)', value: 'ap-chengdu' },\n//   { text: '西南地区(重庆)', value: 'ap-chongqing' },\n//   { text: '华南地区(广州)', value: 'ap-guangzhou' },\n//   { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n//   { text: '亚太南部(孟买)', value: 'ap-mumbai' },\n//   { text: '华东地区(南京)', value: 'ap-nanjing' },\n//   { text: '华东地区(上海)', value: 'ap-shanghai' },\n//   { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },\n//   { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n//   { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n//   { text: '亚太东北(东京)', value: 'ap-tokyo' },\n//   { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },\n//   { text: '美国东部(弗吉尼亚)', value: 'na-ashburn' },\n//   { text: '美国西部(硅谷)', value: 'na-siliconvalley' },\n//   { text: '北美地区(多伦多)', value: 'na-toronto' },\n// ];\nexport default CDNPROVINCE_STATE;\nexport {\n  CDNPROVINCEFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CDNPROVINCEInstanceAliasList,\n  CDNPROVINCEInvalidDemensions,\n  namespace,\n  queryEditorName,\n  // regionSupported,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as CDNPROVINCEGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/CEIP_SUMMARY';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'ceipSummaryQuery';\n\nconst CEIPInvalidDemensions = {\n  vip: 'AddressIp',\n  eip: 'AddressIp',\n};\n\n// 要和文件名方式一致，ceip_summary=>CEIPSUMMARY\nconst CEIPSUMMARYInstanceAliasList = ['AddressId', 'AddressName', 'AddressIp'];\n\nconst templateQueryIdMap = {\n  instance: 'AddressId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst CEIPFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  'address-id': [],\n  'address-name': [],\n  'address-ip': [],\n  'address-status': {},\n  'is-arrears': {},\n  'address-isp': {},\n  'instance-id': [],\n  'private-ip-address': [],\n  'network-interface-id': [],\n};\n\nconst CEIPFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'address-id',\n    enDescriptor: 'address-id',\n    cnDescriptor: ' EIP 的唯一 ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'address-name',\n    enDescriptor: 'address-name',\n    cnDescriptor: 'EIP 名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'address-ip',\n    enDescriptor: 'address-ip',\n    cnDescriptor: 'EIP 的 IP 地址',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'address-status',\n    enDescriptor: 'address-status',\n    cnDescriptor: 'EIP 的状态',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: 'CREATING', value: 'CREATING' },\n      { text: 'BINDING', value: 'BINDING' },\n      { text: 'BIND', value: 'BIND' },\n      { text: 'UNBINDING', value: 'UNBINDING' },\n      { text: 'UNBIND', value: 'UNBIND' },\n      { text: 'OFFLINING', value: 'OFFLINING' },\n      { text: 'BIND_ENI', value: 'BIND_ENI' },\n    ],\n  },\n  {\n    key: 'instance-id',\n    enDescriptor: 'instance-id',\n    cnDescriptor: 'EIP 绑定的实例 ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'private-ip-address',\n    enDescriptor: 'private-ip-address',\n    cnDescriptor: 'EIP 绑定的内网 IP ',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'network-interface-id',\n    enDescriptor: 'network-interface-id',\n    cnDescriptor: ' EIP 绑定的弹性网卡 ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'is-arrears',\n    enDescriptor: 'is-arrears',\n    cnDescriptor: 'EIP 是否欠费',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '欠费状态', value: 'TRUE' },\n      { text: '费用状态正常', value: 'FALSE' },\n    ],\n  },\n  {\n    key: 'address-isp',\n    enDescriptor: 'address-isp',\n    cnDescriptor: '运营商类型',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: 'BGP', value: 'BGP' },\n      { text: 'CMCC', value: 'CMCC' },\n      { text: 'CUCC', value: 'CUCC' },\n      { text: 'CTCC', value: 'CTCC' },\n    ],\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/16702',\n  namespace,\n  fieldDescriptor: CEIPFilterFieldsDescriptor,\n};\n\nconst CEIP_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'AddressId',\n  queries: CEIPFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['eip'];\n  });\n  return metricTmp;\n}\nexport default CEIP_STATE;\nexport {\n  CEIPFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CEIPSUMMARYInstanceAliasList,\n  CEIPInvalidDemensions,\n  namespace,\n  queryEditorName,\n  modifyDimensons,\n  queryEditorConfig,\n  GetInstanceQueryParams as CEIPSUMMARYGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { FildDescriptorType } from '../_base/types';\n\nexport const InstanceQueryDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为10，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 50,\n  },\n  {\n    key: 'TopicName',\n    enDescriptor: 'TopicName',\n    cnDescriptor: '精确匹配TopicName',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'TagKey',\n    enDescriptor: 'TagKey',\n    cnDescriptor: '标签搜索',\n    link: '',\n    type: 'input',\n  },\n];\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\n// 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key\nexport const InvalidDemensions = {\n  topicId: 'TopicId',\n};\n\n// 因为cmq那边，以TopciName为主键\nexport const templateQueryIdMap = {\n  instance: 'TopicName',\n  subscription: 'SubscriptionId',\n};\n\n// 需要缓存到storage的内容的key列表\nconst keyInStorage = {\n  subscriptionId: 'subscriptionId',\n};\n/*\n如果有InstanceId额外的维度，原则上都需要传入此map结构配置\nkey的含义：\n  经过InvalidDemensions处理后的string。topicId =》TopicId。\n  否则认为指标中维度正确，和指标中维度字段保持一致，即topicId\nvalue的含义：\n  1 dim_KeyInStorage 指标中维度dimension对应的storage中的key，获取缓存列表，sourceMapList、\n  2 dim_KeyInTarget  通过getVariable方法获取变量中选中项。比如ListnerId为Lis-xxxx；即：STATE中的key。\n                    默认取通过InvalidDemsion处理后的key\n  3 dim_KeyInMap     保存在模板变量value比如（监听器ID）源自sourceMapList（接口返回内容）的哪个key（ListenerId）。\n                    即：templateQueryIdMap中内容。\n                    联合上面2的内容筛选出原始sourceMap\n*/\nconst queryMonitorExtraConfg = {\n  subscriptionId: {\n    dim_KeyInStorage: keyInStorage.subscriptionId,\n    dim_KeyInTarget: 'subscriptionId',\n    dim_KeyInMap: templateQueryIdMap.subscription,\n  },\n};\n// 与名称挂钩的变量\nconst InstanceAliasList = ['TopicName', 'TopicId'];\nexport { InstanceAliasList, GetInstanceQueryParams, queryMonitorExtraConfg, keyInStorage };\n\n// 界面状态模型，default\nexport default {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'TopicName',\n  subscriptionId: '',\n  queries: {\n    Offset: 0,\n    Limit: 20,\n    TopicName: '',\n    TagKey: '',\n  },\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/CPM';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'cpmQuery';\n\nconst CPMInvalidDemensions = {\n  instanceId: 'InstanceId',\n  // uniqid: 'InstanceId',\n};\n\nconst CPMInstanceAliasList = ['InstanceId', 'Name'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst CPMFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  DeviceClassCode: '',\n  InstanceIds: [],\n  WanIps: [],\n  LanIps: [],\n  Alias: '',\n  VagueIp: '',\n  AutoRenewFlag: {},\n  VpcId: '',\n  SubnetId: '',\n  DeviceType: {},\n  IsLuckyDevice: {},\n};\n\nconst CPMFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'DeviceClassCode',\n    enDescriptor: 'DeviceClassCode',\n    cnDescriptor: '机型ID',\n    link: '',\n    type: 'dropdown',\n  },\n  {\n    key: 'InstanceIds',\n    enDescriptor: 'InstanceIds',\n    cnDescriptor: '设备ID数组',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'WanIps',\n    enDescriptor: 'WanIps',\n    cnDescriptor: '外网IP数组',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LanIps',\n    enDescriptor: 'LanIps',\n    cnDescriptor: '内网IP数组',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'Alias',\n    enDescriptor: 'Alias',\n    cnDescriptor: '设备名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'VagueIp',\n    enDescriptor: 'VagueIp',\n    cnDescriptor: '模糊IP查询',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'AutoRenewFlag',\n    enDescriptor: 'AutoRenewFlag',\n    cnDescriptor: '自动续费标志',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '不自动续费', value: 0 },\n      { text: '自动续费', value: 1 },\n    ],\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'VpcId',\n    cnDescriptor: '私有网络唯一ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SubnetId',\n    enDescriptor: 'SubnetId',\n    cnDescriptor: '子网唯一ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'DeviceType',\n    enDescriptor: 'DeviceType',\n    cnDescriptor: '子网实例ID',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '计算型', value: 'compute' },\n      { text: '标准型', value: 'standard' },\n      { text: '存储型', value: 'storage' },\n    ],\n  },\n  {\n    key: 'IsLuckyDevice',\n    enDescriptor: 'IsLuckyDevice',\n    cnDescriptor: '竞价实例机器过滤',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '非竞价实例机器', value: 0 },\n      { text: '竞价实例的机器', value: 1 },\n    ],\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/386/32904',\n  namespace,\n  fieldDescriptor: CPMFilterFieldsDescriptor,\n};\n\nconst CPM_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: CPMFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\n\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['instanceId'];\n  });\n  return metricTmp;\n}\nexport default CPM_STATE;\nexport {\n  CPMFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CPMInstanceAliasList,\n  CPMInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as CPMGetInstanceQueryParams,\n};\n","import * as _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/ECM';\nconst queryEditorName = 'ecmQuery';\n\nconst ECMInvalidDemensions = {\n  // diskId: 'InstanceId',\n  uuid: 'UUID',\n  // unInstanceId: 'InstanceId',\n};\n\nconst ECMInstanceAliasList = ['InstanceId', 'InstanceName'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst ECMFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  zone: [],\n  'zone-name': [],\n  'module-id': [],\n  'module-name': [],\n  'instance-id': [],\n  'instance-name': [],\n  'ip-address': [],\n  'instance-uuid': [],\n  'instance-state': {},\n  'internet-service-provider': [],\n  'instance-family': [],\n  'image-id': [],\n  'vpc-id': [],\n  'subnet-id': [],\n};\n\nconst ECMFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'zone',\n    enDescriptor: 'zone',\n    cnDescriptor: '可用区英文标识',\n    link: '',\n    type: 'dropdownMulti',\n  },\n  {\n    key: 'zone-name',\n    enDescriptor: 'zone-name',\n    cnDescriptor: '排列顺序',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'module-id',\n    enDescriptor: 'module-id',\n    cnDescriptor: '模块ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'module-name',\n    enDescriptor: 'module-name',\n    cnDescriptor: '模块名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-id',\n    enDescriptor: 'instance-id',\n    cnDescriptor: '实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-name',\n    enDescriptor: 'instance-name',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'ip-address',\n    enDescriptor: 'ip-address',\n    cnDescriptor: '内网/公网IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-uuid',\n    enDescriptor: 'instance-uuid',\n    cnDescriptor: '实例uuid',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-state',\n    enDescriptor: 'instance-state',\n    cnDescriptor: '实例状态',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '创建中', value: 'PENDING' },\n      { text: '创建失败', value: 'LAUNCH_FAILED' },\n      { text: '运行中', value: 'RUNNING' },\n      { text: '关机', value: 'STOPPED' },\n      { text: '开机中', value: 'STARTING' },\n      { text: '关机中', value: 'STOPPING' },\n      { text: '重启中', value: 'REBOOTING' },\n      { text: '停止待销毁', value: 'SHUTDOWN' },\n      { text: '销毁中', value: 'TERMINATING' },\n    ],\n  },\n  {\n    key: 'internet-service-provider',\n    enDescriptor: 'internet-service-provider',\n    cnDescriptor: '公网IP所属的运营商',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'instance-family',\n    enDescriptor: 'instance-family',\n    cnDescriptor: '机型family',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'image-id',\n    enDescriptor: 'image-id',\n    cnDescriptor: '镜像ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'vpc-id',\n    cnDescriptor: '实例的vpc id',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'subnet-id',\n    enDescriptor: 'subnet-id',\n    cnDescriptor: '实例的subnet id',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/1108/42565',\n  namespace,\n  fieldDescriptor: ECMFilterFieldsDescriptor,\n};\n\nconst ECM_STATE = {\n  region: 'ap-guangzhou',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: ECMFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\n// function isValidMetric(metricObj: any = {}) {\n//   const dimension = _.get(metricObj, 'Dimensions[0].Dimensions');\n//   // console.log('dimension', dimension, dimension.length === 1 && _.indexOf(dimension, 'diskId') !== -1);\n//   return dimension.length === 1 &&( _.indexOf(dimension, 'UUID') !== -1 || _.indexOf(dimension, 'uuid') !== -1);\n// }\n\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['UUID'];\n  });\n  return metricTmp;\n}\nexport default ECM_STATE;\nexport {\n  ECMFilterFieldsDescriptor,\n  templateQueryIdMap,\n  ECMInstanceAliasList,\n  ECMInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  GetInstanceQueryParams as ECMGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\nconst namespace = 'QCE/POSTGRES';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'postgresQuery';\n\nconst PostgresFields = {\n  'db-instance-id': [],\n  'db-instance-name': [],\n};\n\nconst PostgresFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'db-instance-id',\n    enDescriptor: 'DB Instance ID',\n    cnDescriptor: 'DB 实例ID',\n    link: '',\n    type: 'inputMulti',\n    min: 0,\n  },\n  {\n    key: 'db-instance-name',\n    enDescriptor: 'DB Instance Name',\n    cnDescriptor: 'DB 实例名称',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/409/16773',\n  namespace,\n  fieldDescriptor: PostgresFieldsDescriptor,\n};\nconst POSTGRESInstanceAliasList = ['DBInstanceId', 'DBInstanceName'];\n\nconst POSTGRES_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'DBInstanceId',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    Filters: { ...PostgresFields },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['resourceId'];\n  });\n  return metricTmp;\n}\nconst PostgreInvalidDemensions = {\n  uid: 'DBInstanceId',\n  resourceId: 'DBInstanceId',\n};\nconst templateQueryIdMap = {\n  instance: 'DBInstanceId',\n};\nexport default POSTGRES_STATE;\n\nexport {\n  PostgresFieldsDescriptor,\n  POSTGRESInstanceAliasList,\n  templateQueryIdMap,\n  modifyDimensons,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  PostgreInvalidDemensions,\n  GetInstanceQueryParams as POSTGRESGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport _ from 'lodash';\n\nconst namespace = 'QCE/TCAPLUS';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'tcaplusQuery';\n\nconst TCAPLUSInvalidDemensions = {\n  // TableInstanceId: 'TableInstanceId',\n  // ClusterId: 'ClusterId',\n};\n\n// 需和文件名对应\nconst TCAPLUSInstanceAliasList = ['TableInstanceId', 'TableName'];\n\nconst templateQueryIdMap = {\n  instance: 'TableInstanceId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是类型\nconst TCAPLUSFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  ClusterId: '',\n  TableGroupIds: [],\n\n  TableName: '',\n  TableInstanceId: '',\n  TableIdlType: {},\n  TableType: {},\n  ListElementNum: null,\n  ReservedVolume: null,\n  ReservedReadQps: null,\n  ReservedWriteQps: null,\n  Memo: '',\n  FileName: '',\n  FileExtType: '',\n  FileSize: null,\n  FileContent: '',\n};\n\nconst TCAPLUSFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'ClusterId',\n    enDescriptor: 'ClusterId',\n    cnDescriptor: '表格所属集群ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'TableGroupIds',\n    enDescriptor: 'TableGroupIds',\n    cnDescriptor: '表格组ID列表',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'TableName',\n    enDescriptor: 'TableName',\n    cnDescriptor: '表格名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'TableInstanceId',\n    enDescriptor: 'TableInstanceId',\n    cnDescriptor: '表实例ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'TableIdlType',\n    enDescriptor: 'TableIdlType',\n    cnDescriptor: '表格描述语言类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'PROTO', value: 'PROTO' },\n      { text: 'TDR', value: 'TDR' },\n    ],\n  },\n  {\n    key: 'TableType',\n    enDescriptor: 'TableType',\n    cnDescriptor: '表格数据结构类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'GENERIC', value: 'GENERIC' },\n      { text: 'LIST', value: 'LIST' },\n    ],\n  },\n  {\n    key: 'ListElementNum',\n    enDescriptor: 'ListElementNum',\n    cnDescriptor: 'LIST表元素个数',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'ReservedVolume',\n    enDescriptor: 'ReservedVolume',\n    cnDescriptor: '表格预留容量（GB）',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'ReservedReadQps',\n    enDescriptor: 'ReservedReadQps',\n    cnDescriptor: '表格预留读CU',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'ReservedWriteQps',\n    enDescriptor: 'ReservedWriteQps',\n    cnDescriptor: '表格预留写CU',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'Memo',\n    enDescriptor: 'Memo',\n    cnDescriptor: '表格备注信息',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'FileName',\n    enDescriptor: 'FileName',\n    cnDescriptor: 'Key回档文件名，回档专用',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'FileExtType',\n    enDescriptor: 'FileExtType',\n    cnDescriptor: 'Key回档文件扩展名，回档专用',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'FileSize',\n    enDescriptor: 'FileSize',\n    cnDescriptor: 'Key回档文件大小，回档专用',\n    link: '',\n    type: 'inputNumber',\n  },\n  {\n    key: 'FileContent',\n    enDescriptor: 'FileContent',\n    cnDescriptor: 'Key回档文件内容，回档专用',\n    link: '',\n    type: 'input',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/596/39664',\n  namespace,\n  fieldDescriptor: TCAPLUSFilterFieldsDescriptor,\n};\n\nconst TCAPLUS_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'TableInstanceId',\n  queries: TCAPLUSFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  params.Limit = _.get(queries, 'Limit', 20) || 20;\n  params.Offset = _.get(queries, 'Offset', 0) || 0;\n  params.ClusterId = _.get(queries, 'ClusterId', '') || '';\n  params.TableGroupIds = _.get(queries, 'TableGroupIds', []) || [];\n  queries = _.omit(queries, ['Offset', 'Limit', 'TableGroupIds', 'ClusterId']);\n  const SelectedTables: any[] = [];\n  _.forEach(queries, (item: any, key) => {\n    if (_.isArray(item)) {\n      item = _.compact(item);\n      if (item.length > 0) {\n        SelectedTables[key] = _.uniq(item);\n      }\n    } else if (_.isObject(item)) {\n      if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n        SelectedTables[key] = _.get(item, 'value');\n      }\n    } else if (_.isNumber(item) || !_.isEmpty(item)) {\n      SelectedTables[key] = item;\n    }\n  });\n  params.SelectedTables = SelectedTables;\n  return params;\n}\n// 和其他产品的展示保持一致\nconst regonsMap = {\n  'ap-beijing': '华北地区(北京)',\n  'ap-guangzhou': '华南地区(广州)',\n  'ap-hongkong': '港澳台地区(中国香港)',\n  'ap-seoul': '亚太东北(首尔)',\n  'ap-shanghai': '华东地区(上海)',\n  'ap-singapore': '亚太东南(新加坡)',\n  'ap-tokyo': '亚太东北(东京)',\n  'eu-frankfurt': '欧洲地区(法兰克福)',\n  'na-ashburn': '美国东部(弗吉尼亚)',\n  'na-siliconvalley': '美国西部(硅谷)',\n};\nexport default TCAPLUS_STATE;\nexport {\n  TCAPLUSFilterFieldsDescriptor,\n  templateQueryIdMap,\n  TCAPLUSInstanceAliasList,\n  TCAPLUSInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  regonsMap,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as TCAPLUSGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/VPC_NET_DETECT';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'vpcNetDetectQuery';\n\nconst VPCNETInvalidDemensions = {\n  netdetectid: 'NetDetectId',\n  netDetectId: 'NetDetectId',\n};\n\nconst VPCNETDETECTInstanceAliasList = ['NetDetectId', 'NetDetectName'];\n\nconst templateQueryIdMap = {\n  instance: 'NetDetectId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst VPCNETFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  'vpc-id': [],\n  'net-detect-id': [],\n  'subnet-id': [],\n  'net-detect-name': [],\n};\n\nconst VPCNETFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'vpc-id',\n    cnDescriptor: 'VPC实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'net-detect-id',\n    enDescriptor: 'net-detect-id',\n    cnDescriptor: '网络探测实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'subnet-id',\n    enDescriptor: 'subnet-id',\n    cnDescriptor: '子网实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'net-detect-name',\n    enDescriptor: 'net-detect-name',\n    cnDescriptor: '网络探测名称',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/38696',\n  namespace,\n  fieldDescriptor: VPCNETFilterFieldsDescriptor,\n};\n\nconst VPCNET_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'NetDetectId',\n  queries: VPCNETFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['netDetectId'];\n  });\n  return metricTmp;\n}\nexport default VPCNET_STATE;\nexport {\n  VPCNETFilterFieldsDescriptor,\n  templateQueryIdMap,\n  VPCNETDETECTInstanceAliasList,\n  VPCNETInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  GetInstanceQueryParams as VPCNETDETECTGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/CES';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'cesQuery';\n\nconst CESInvalidDemensions = {\n  uInstanceId: 'InstanceId',\n};\n\nconst CESInstanceAliasList = ['InstanceId', 'InstanceName'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是类型\nconst CESFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  InstanceIds: [],\n  InstanceNames: [],\n  OrderByKey: {},\n  OrderByType: {},\n  IpList: [],\n};\n\nconst CESFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceIds',\n    enDescriptor: 'InstanceIds',\n    cnDescriptor: '集群实例ID列表',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'InstanceNames',\n    enDescriptor: 'InstanceNames',\n    cnDescriptor: '集群实例名称列表',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'OrderByKey',\n    enDescriptor: 'OrderByKey',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '实例ID', value: 1 },\n      { text: '实例名称', value: 2 },\n      { text: '可用区', value: 3 },\n      { text: '创建时间', value: 4 },\n    ],\n  },\n  {\n    key: 'OrderByType',\n    enDescriptor: 'OrderByType',\n    cnDescriptor: '排序方式',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '升序', value: 0 },\n      { text: '降序', value: 1 },\n    ],\n  },\n  {\n    key: 'IpList',\n    enDescriptor: 'IpList',\n    cnDescriptor: '私有网络vip列表',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/845/30631',\n  namespace,\n  fieldDescriptor: CESFilterFieldsDescriptor,\n};\n\nconst CES_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: CESFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\nexport default CES_STATE;\nexport {\n  CESFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CESInstanceAliasList,\n  CESInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as CESGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/DC';\nconst queryEditorName = 'dcQuery';\n\nconst DCFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  DirectConnectIds: [],\n};\n\nconst DCFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'DirectConnectIds',\n    enDescriptor: 'DirectConnectIds',\n    cnDescriptor: '物理专线 ID',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/216/34826',\n  namespace,\n  fieldDescriptor: DCFilterFieldsDescriptor,\n};\n\nconst DC_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'DirectConnectId',\n  queries: DCFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\n\nconst DCInstanceAliasList = ['DirectConnectId', 'DirectConnectName'];\n\nconst templateQueryIdMap = {\n  instance: 'DirectConnectId',\n};\n\nconst DCInvalidDemensions = {\n  directConnectId: 'DirectConnectId',\n  directconnectid: 'DirectConnectId',\n};\nfunction modifyDimensons(metricItem) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['directConnectId'];\n  });\n  return metricTmp;\n}\nexport default DC_STATE;\nexport {\n  DCFilterFieldsDescriptor,\n  templateQueryIdMap,\n  DCInstanceAliasList,\n  DCInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  GetInstanceQueryParams as DCGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/DCG';\nconst queryEditorName = 'dcgQuery';\n\nconst DCGInvalidDemensions = {\n  directConnectGatewayId: 'DirectConnectGatewayId',\n};\n\nconst DCGInstanceAliasList = ['DirectConnectGatewayId', 'DirectConnectGatewayName'];\n\nconst templateQueryIdMap = {\n  instance: 'DirectConnectGatewayId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst DCGFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  'direct-connect-gateway-id': [],\n  'direct-connect-gateway-name': [],\n  'direct-connect-gateway-ip': [],\n  'gateway-type': {},\n  'network-type': {},\n  'ccn-id': [],\n  'vpc-id': [],\n};\n\nconst DCGFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'direct-connect-gateway-id',\n    enDescriptor: 'direct-connect-gateway-id',\n    cnDescriptor: '专线网关唯一ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'direct-connect-gateway-name',\n    enDescriptor: 'direct-connect-gateway-name',\n    cnDescriptor: '专线网关名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'direct-connect-gateway-ip',\n    enDescriptor: 'direct-connect-gateway-ip',\n    cnDescriptor: '专线网关IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'gateway-type',\n    enDescriptor: 'gateway-type',\n    cnDescriptor: '网关类型',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '普通型', value: 'NORMAL' },\n      { text: 'NAT型', value: 'NAT' },\n    ],\n  },\n  {\n    key: 'network-type',\n    enDescriptor: 'network-type',\n    cnDescriptor: '网络类型',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '私有网络类型', value: 'VPC' },\n      { text: '云联网类型', value: 'CCN' },\n    ],\n  },\n  {\n    key: 'ccn-id',\n    enDescriptor: 'ccn-id',\n    cnDescriptor: '专线网关所在云联网ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'vpc-id',\n    cnDescriptor: '专线网关所在私有网络ID',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/30644',\n  namespace,\n  fieldDescriptor: DCGFilterFieldsDescriptor,\n};\n\nconst DCG_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'DirectConnectGatewayId',\n  queries: DCGFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nexport default DCG_STATE;\nexport {\n  DCGFilterFieldsDescriptor,\n  templateQueryIdMap,\n  DCGInstanceAliasList,\n  DCGInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  GetInstanceQueryParams as DCGGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/DCX';\nconst queryEditorName = 'dcxQuery';\n\nconst DCXFilterFields = {\n  'direct-connect-tunnel-name': [],\n  'direct-connect-tunnel-id': [],\n  'direct-connect-id': [],\n};\n\nconst DCXFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'direct-connect-tunnel-name',\n    enDescriptor: 'direct-connect-tunnel-name',\n    cnDescriptor: '专用通道名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'direct-connect-tunnel-id',\n    enDescriptor: 'direct-connect-tunnel-id',\n    cnDescriptor: '专用通道实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'direct-connect-id',\n    enDescriptor: 'direct-connect-id',\n    cnDescriptor: '物理专线实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/216/19819',\n  namespace,\n  fieldDescriptor: DCXFilterFieldsDescriptor,\n};\n\nconst DCX_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'DirectConnectTunnelId',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    ...DCXFilterFields,\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\n\nconst DCXInstanceAliasList = ['DirectConnectTunnelId', 'DirectConnectTunnelName'];\n\nconst templateQueryIdMap = {\n  instance: 'DirectConnectTunnelId',\n};\n\nconst DCXInvalidDemensions = {\n  directconnectconnid: 'DirectConnectTunnelId',\n  directConnectConnId: 'DirectConnectTunnelId',\n};\nfunction modifyDimensons(metricItem) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['directConnectConnId'];\n  });\n  return metricTmp;\n}\nexport default DCX_STATE;\nexport {\n  DCXFilterFieldsDescriptor,\n  templateQueryIdMap,\n  DCXInstanceAliasList,\n  DCXInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  GetInstanceQueryParams as DCXGetInstanceQueryParams,\n};\n","import * as _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/ECM_LB';\nconst queryEditorName = 'ecmLbQuery';\n\nconst ECMLBInvalidDemensions = {\n  vip: 'LoadBalancerVips',\n};\n\nconst ECMLBInstanceAliasList = ['LoadBalancerId', 'LoadBalancerName'];\n\nconst templateQueryIdMap = {\n  instance: 'LoadBalancerId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst ECMLBFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  LoadBalancerIds: [],\n  LoadBalancerName: [],\n  LoadBalancerVips: [],\n  BackendPrivateIps: [],\n  VpcId: '',\n};\n\nconst ECMLBFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'LoadBalancerIds',\n    enDescriptor: 'LoadBalancerIds',\n    cnDescriptor: '负载均衡器ID数组',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerName',\n    enDescriptor: 'LoadBalancerName',\n    cnDescriptor: '负载均衡器名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'LoadBalancerVips',\n    enDescriptor: 'LoadBalancerVips',\n    cnDescriptor: '负载均衡获得的公网IP地址',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'BackendPrivateIps',\n    enDescriptor: 'BackendPrivateIps',\n    cnDescriptor: '绑定的后端服务的内网 IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'VpcId',\n    cnDescriptor: '实例所属私有网络唯一ID',\n    link: '',\n    type: 'input',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/1108/48459',\n  namespace,\n  fieldDescriptor: ECMLBFilterFieldsDescriptor,\n};\n\nconst ECM_STATE = {\n  region: 'ap-guangzhou',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'LoadBalancerId',\n  queries: ECMLBFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\n// function isValidMetric(metricObj: any = {}) {\n//   const dimension = _.get(metricObj, 'Dimensions[0].Dimensions');\n//   // console.log('dimension', dimension, dimension.length === 1 && _.indexOf(dimension, 'diskId') !== -1);\n//   return dimension.length === 1 &&( _.indexOf(dimension, 'UUID') !== -1 || _.indexOf(dimension, 'uuid') !== -1);\n// }\n\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    // item.Dimensions = ['UUID'];\n  });\n  return metricTmp;\n}\nexport default ECM_STATE;\nexport {\n  ECMLBFilterFieldsDescriptor,\n  templateQueryIdMap,\n  ECMLBInstanceAliasList,\n  ECMLBInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  GetInstanceQueryParams as ECMLBGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/QAAP';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'qaapQuery';\n\nconst QAAPInvalidDemensions = {\n  channelId: 'InstanceId',\n};\n\nconst QAAPInstanceAliasList = ['InstanceId'];\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst QAAPFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  ProjectId: [],\n  AccessRegion: [],\n  RealServerRegion: [],\n  GroupId: [],\n};\n\nconst QAAPFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'ProjectId',\n    enDescriptor: 'ProjectId',\n    cnDescriptor: '项目ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'AccessRegion',\n    enDescriptor: 'AccessRegion',\n    cnDescriptor: '接入地域',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'RealServerRegion',\n    enDescriptor: 'RealServerRegion',\n    cnDescriptor: '源站地域',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'GroupId',\n    enDescriptor: 'GroupId',\n    cnDescriptor: '通道组ID',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/608/36963',\n  namespace,\n  fieldDescriptor: QAAPFilterFieldsDescriptor,\n};\n\nconst QAAP_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: QAAPFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  // metricTmp.Dimensions.forEach((item) => {\n  //   item.Dimensions = ['netDetectId'];\n  // });\n  return metricTmp;\n}\nexport default QAAP_STATE;\nexport {\n  QAAPFilterFieldsDescriptor,\n  templateQueryIdMap,\n  QAAPInstanceAliasList,\n  QAAPInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  modifyDimensons,\n  GetInstanceQueryParams as QAAPGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\nconst namespace = 'QCE/REDIS_MEM';\nconst BillingMode = [\n  { text: '按量计费', value: 'postpaid' },\n  { text: '包年包月', value: 'prepaid' },\n];\n\nconst AutoRenew = [\n  { text: '手动续费', value: 0 },\n  { text: '自动续费', value: 1 },\n  { text: '明确不自动续费', value: 2 },\n];\n\nconst Status = [\n  { text: '待初始化', value: 0 },\n  { text: '流程执行中', value: 1 },\n  { text: '运行中', value: 2 },\n  { text: '已隔离', value: -2 },\n  { text: '待删除', value: -3 },\n];\n\nconst TypeVersion = [\n  { text: '单机版', value: 1 },\n  { text: '主从版', value: 2 },\n  { text: '集群版', value: 3 },\n];\n\nconst OrderBy = [\n  { text: 'projectId', value: 'projectId' },\n  { text: 'instancename', value: 'instancename' },\n  { text: 'createtime', value: 'createtime' },\n  { text: 'type', value: 'type' },\n  { text: 'curDeadline', value: 'curDeadline' },\n];\n\nconst OrderType = [\n  { text: '升序', value: 0 },\n  { text: '降序', value: 1 },\n];\nconst Type = [\n  { text: 'Redis老集群版', value: 1 },\n  { text: 'Redis 2.8主从版', value: 2 },\n  { text: 'CKV主从版', value: 3 },\n  { text: 'CKV集群版', value: 4 },\n  { text: 'Redis 2.8单机版', value: 5 },\n  { text: 'Redis 4.0主从版', value: 6 },\n  { text: 'Redis 4.0集群版', value: 7 },\n  { text: 'Redis5.0主从版', value: 8 },\n  { text: 'Redis5.0集群版', value: 9 },\n];\n\nconst RedisFields = {\n  InstanceId: '',\n  OrderBy: '',\n  OrderType: null,\n  VpcIds: [],\n  SubnetIds: [],\n  ProjectIds: [],\n  SearchKey: '',\n  InstanceName: '',\n  UniqVpcIds: [],\n  UniqSubnetIds: [],\n  Status: [],\n  TypeVersion: null,\n  EngineName: '',\n  AutoRenew: null,\n  BillingMode: '',\n  Type: null,\n};\n\nconst RedisMemFieldsDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceId',\n    enDescriptor: 'InstancesId',\n    cnDescriptor: '实例id',\n    type: 'input',\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderBy,\n  },\n  {\n    key: 'OrderType',\n    enDescriptor: 'OrderType',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderType,\n  },\n  {\n    key: 'VpcIds',\n    enDescriptor: 'VpcIds',\n    cnDescriptor: '私有网络ID数组，数组下标从0开始，如果不传则默认选择基础网络，如：47525',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'SubnetIds',\n    enDescriptor: 'SubnetIds',\n    cnDescriptor: '子网ID数组，数组下标从0开始，如：56854',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'ProjectIds',\n    enDescriptor: 'ProjectIds',\n    cnDescriptor: '项目ID 组成的数组',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'SearchKey',\n    enDescriptor: 'SearchKey',\n    cnDescriptor: '查找实例的ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'InstanceName',\n    enDescriptor: 'InstanceName',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'UniqVpcIds',\n    enDescriptor: 'UniqVpcIds',\n    cnDescriptor: '私有网络ID数组，数组下标从0开始，如果不传则默认选择基础网络，如：vpc-sad23jfdfk',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'UniqSubnetIds',\n    enDescriptor: 'UniqSubnetIds',\n    cnDescriptor: '子网ID数组，数组下标从0开始，如：subnet-fdj24n34j2',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'Status',\n    enDescriptor: 'Status',\n    cnDescriptor: '实例状态',\n    multiple: true,\n    type: 'select',\n    list: Status,\n  },\n  {\n    key: 'TypeVersion',\n    enDescriptor: 'TypeVersion',\n    cnDescriptor: '类型版本',\n    link: '',\n    type: 'select',\n    list: TypeVersion,\n  },\n  {\n    key: 'EngineName',\n    enDescriptor: 'EngineName',\n    cnDescriptor: '引擎信息：Redis-2.8，Redis-4.0，CKV',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'AutoRenew',\n    enDescriptor: 'AutoRenew',\n    cnDescriptor: '续费模式',\n    multiple: true,\n    type: 'select',\n    list: AutoRenew,\n  },\n  {\n    key: 'BillingMode',\n    enDescriptor: 'BillingMode',\n    cnDescriptor: '计费模式：postpaid-按量计费；prepaid-包年包月',\n    link: '',\n    type: 'select',\n    list: BillingMode,\n  },\n  {\n    key: 'Type',\n    enDescriptor: 'Type',\n    cnDescriptor: '实例类型',\n    link: '',\n    type: 'select',\n    list: Type,\n  },\n];\n\nconst REDISMEM_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: { ...RedisFields },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        // select 单选\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\nfunction isValidMetric(metricObj: any = {}) {\n  const dimension = _.get(metricObj, 'Dimensions[0].Dimensions');\n  return dimension.length === 1 && _.indexOf(dimension, 'pnodeid') === -1 && _.indexOf(dimension, 'rnodeid') === -1;\n}\n\nconst REDISMEMInstanceAliasList = ['InstanceId', 'InstanceName', 'WanIp'];\n\nconst RedisMemInvalidDemensions = {\n  instanceid: 'InstanceId',\n};\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\n\nexport default REDISMEM_STATE;\nexport {\n  RedisMemFieldsDescriptor,\n  RedisMemInvalidDemensions,\n  REDISMEMInstanceAliasList,\n  templateQueryIdMap,\n  namespace,\n  isValidMetric,\n  GetInstanceQueryParams as REDISMEMGetInstanceQueryParams,\n};\n","// 产品目录名字和service名字匹配即 lb_private(目录名) => lbPrivate(service)\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/VBC';\n\n// 组件名称。这里名字要和index.ts中的SERVICES对应，后面会根据SERVICES中service字段拼接这个query组件名称\nconst queryEditorName = 'vbcQuery';\n\nconst VBCInvalidDemensions = {\n  // CcnId: 'CcnId',\n};\n\n// 需和文件名对应\nconst VBCInstanceAliasList = ['CcnId', 'CcnName'];\n\nconst templateQueryIdMap = {\n  instance: 'CcnId',\n};\n\n// select类型需要注意是{},multi后缀是[],dropdown是''\nconst VBCFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  'ccn-id': [],\n  'ccn-name': [],\n  'ccn-description': [],\n  state: {},\n};\n\nconst VBCFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'ccn-id',\n    enDescriptor: 'ccn-id',\n    cnDescriptor: 'CCN实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'ccn-name',\n    enDescriptor: 'ccn-name',\n    cnDescriptor: 'CCN名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'ccn-description',\n    enDescriptor: 'ccn-description',\n    cnDescriptor: 'CCN描述',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'state',\n    enDescriptor: 'state',\n    cnDescriptor: '实例状态',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '隔离中', value: 'ISOLATED' },\n      { text: '运行中', value: 'AVAILABLE' },\n    ],\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/19199',\n  namespace,\n  fieldDescriptor: VBCFilterFieldsDescriptor,\n};\n\nconst VBC_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'CcnId',\n  DRegion: '',\n  SRegion: '',\n  queries: VBCFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, false);\n}\n// const regionSupported = [\n//   { text: '华北地区(北京)', value: 'ap-beijing' },\n//   { text: '西南地区(成都)', value: 'ap-chengdu' },\n//   { text: '西南地区(重庆)', value: 'ap-chongqing' },\n//   { text: '华南地区(广州)', value: 'ap-guangzhou' },\n//   { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n//   { text: '亚太南部(孟买)', value: 'ap-mumbai' },\n//   { text: '华东地区(南京)', value: 'ap-nanjing' },\n//   { text: '华东地区(上海)', value: 'ap-shanghai' },\n//   { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },\n//   { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n//   { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n//   { text: '亚太东北(东京)', value: 'ap-tokyo' },\n//   { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },\n//   { text: '美国东部(弗吉尼亚)', value: 'na-ashburn' },\n//   { text: '美国西部(硅谷)', value: 'na-siliconvalley' },\n//   { text: '北美地区(多伦多)', value: 'na-toronto' },\n// ];\nexport default VBC_STATE;\nexport {\n  VBCFilterFieldsDescriptor,\n  templateQueryIdMap,\n  VBCInstanceAliasList,\n  VBCInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  // regionSupported,\n  // 对应产品的service的全大写拼接GetInstanceQueryParams\n  GetInstanceQueryParams as VBCGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/VPNGW';\nconst queryEditorName = 'vpngwQuery';\n\nconst VPNGWInvalidDemensions = {\n  vpnGwId: 'VpnGatewayId',\n};\n\nconst VPNGWInstanceAliasList = ['VpnGatewayId', 'VpnGatewayName'];\n\nconst templateQueryIdMap = {\n  instance: 'VpnGatewayId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst VPNGWFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  'vpc-id': [],\n  'vpn-gateway-id': [],\n  'vpn-gateway-name': [],\n  type: {},\n  'public-ip-address': [],\n  'renew-flag': {},\n  zone: [],\n};\n\nconst VPNGWFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'vpc-id',\n    cnDescriptor: 'VPC实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpn-gateway-id',\n    enDescriptor: 'vpn-gateway-id',\n    cnDescriptor: 'VPN实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpn-gateway-name',\n    enDescriptor: 'vpn-gateway-name',\n    cnDescriptor: 'VPN实例名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'type',\n    enDescriptor: 'type',\n    cnDescriptor: 'VPN网关类型',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: 'IPSEC', value: 'IPSEC' },\n      { text: 'SSL', value: 'SSL' },\n    ],\n  },\n  {\n    key: 'public-ip-address',\n    enDescriptor: 'public-ip-address',\n    cnDescriptor: '公网IP',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'renew-flag',\n    enDescriptor: 'renew-flag',\n    cnDescriptor: '网关续费类型',\n    link: '',\n    type: 'select',\n    multiple: true,\n    list: [\n      { text: '手动续费', value: 'NOTIFY_AND_MANUAL_RENEW' },\n      { text: '自动续费', value: 'NOTIFY_AND_AUTO_RENEW' },\n    ],\n  },\n  {\n    key: 'zone',\n    enDescriptor: 'zone',\n    cnDescriptor: 'VPN所在可用区',\n    link: '',\n    type: 'dropdownMulti',\n  },\n];\n\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/17514',\n  namespace,\n  fieldDescriptor: VPNGWFilterFieldsDescriptor,\n};\n\nconst VPNGW_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'VpnGatewayId',\n  queries: VPNGWFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nexport default VPNGW_STATE;\nexport {\n  VPNGWFilterFieldsDescriptor,\n  templateQueryIdMap,\n  VPNGWInstanceAliasList,\n  VPNGWInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  GetInstanceQueryParams as VPNGWGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/VPNX';\nconst queryEditorName = 'vpnxQuery';\n\nconst VPNXInvalidDemensions = {\n  vpnConnId: 'VpnConnectionId',\n};\n\nconst VPNXInstanceAliasList = ['VpnConnectionId', 'VpnConnectionName'];\n\nconst templateQueryIdMap = {\n  instance: 'VpnConnectionId',\n};\n\n// select类型需要注意是{},multi后缀是[]\nconst VPNXFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  'vpc-id': [],\n  'vpn-gateway-id': [],\n  'customer-gateway-id': [],\n  'vpn-connection-name': [],\n  'vpn-connection-id': [],\n};\n\nconst VPNXFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'vpc-id',\n    cnDescriptor: 'VPC实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpn-gateway-id',\n    enDescriptor: 'vpn-gateway-id',\n    cnDescriptor: 'VPN实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'customer-gateway-id ',\n    enDescriptor: 'customer-gateway-id ',\n    cnDescriptor: '对端网关实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpn-connection-name',\n    enDescriptor: 'vpn-connection-name',\n    cnDescriptor: '通道名称',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'vpn-connection-id',\n    enDescriptor: 'vpn-connection-id',\n    cnDescriptor: '通道实例ID',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/215/17515',\n  namespace,\n  fieldDescriptor: VPNXFilterFieldsDescriptor,\n};\n\nconst VPNX_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'VpnConnectionId',\n  queries: VPNXFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\nexport default VPNX_STATE;\nexport {\n  VPNXFilterFieldsDescriptor,\n  templateQueryIdMap,\n  VPNXInstanceAliasList,\n  VPNXInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  GetInstanceQueryParams as VPNXGetInstanceQueryParams,\n};\n","import * as _ from 'lodash';\nimport { DetailQueryConfig, FildDescriptorType } from '../_base/types';\nimport { instanceQueryParamsBaseParse } from '../../common/utils';\n\nconst namespace = 'QCE/WAF';\nconst queryEditorName = 'wafQuery';\nconst WAFFilterFields = {\n  Limit: 20,\n  Offset: 0,\n  origin: [],\n  domain: [],\n  resourceId: [],\n  status: {},\n  serviceType: {},\n  projectId: [],\n  domainType: {},\n  fullUrlCache: {},\n  https: {},\n  originPullProtocol: {},\n  tagKey: [],\n};\n\nconst WAFFilterFieldsDescriptor: FildDescriptorType = [\n  {\n    key: 'origin',\n    enDescriptor: 'origin',\n    cnDescriptor: '主源站',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'domain',\n    enDescriptor: 'domain',\n    cnDescriptor: '域名',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'resourceId',\n    enDescriptor: 'resourceId',\n    cnDescriptor: '域名id',\n    link: '',\n    type: 'inputMulti',\n  },\n  {\n    key: 'status',\n    enDescriptor: 'status',\n    cnDescriptor: '域名状态',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'online', value: 'online' },\n      { text: 'offline', value: 'offline' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'serviceType',\n    enDescriptor: 'serviceType',\n    cnDescriptor: '业务类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'web', value: 'web' },\n      { text: 'download', value: 'download' },\n      { text: 'media', value: 'media' },\n    ],\n  },\n  {\n    key: 'projectId',\n    enDescriptor: 'projectId',\n    cnDescriptor: '项目ID',\n    link: '',\n    type: 'inputNumberMulti',\n  },\n  {\n    key: 'domainType',\n    enDescriptor: 'domainType',\n    cnDescriptor: '主源站类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '自有源', value: 'cname' },\n      { text: 'cos接入', value: 'cos' },\n    ],\n  },\n  {\n    key: 'fullUrlCache',\n    enDescriptor: 'fullUrlCache',\n    cnDescriptor: '全路径缓存',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '打开', value: 'on' },\n      { text: '关闭', value: 'off' },\n    ],\n  },\n  {\n    key: 'https',\n    enDescriptor: 'https',\n    cnDescriptor: '是否配置https',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'on', value: 'on' },\n      { text: 'off', value: 'off' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'originPullProtocol',\n    enDescriptor: 'originPullProtocol',\n    cnDescriptor: '回源协议类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'http', value: 'http' },\n      { text: 'follow', value: 'follow' },\n      { text: 'https', value: 'https' },\n    ],\n  },\n  {\n    key: 'tagKey',\n    enDescriptor: 'tagKey',\n    cnDescriptor: '标签键',\n    link: '',\n    type: 'inputMulti',\n  },\n];\n\n// 各产品实例列表detail配置\nconst queryEditorConfig: DetailQueryConfig = {\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/228/41118',\n  namespace,\n  fieldDescriptor: WAFFilterFieldsDescriptor,\n};\nconst WAF_STATE = {\n  region: 'ap-guangzhou',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'Domain',\n  queries: WAFFilterFields,\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  return instanceQueryParamsBaseParse(queries, true);\n}\n\nconst WAFInstanceAliasList = ['Domain', 'ProjectId'];\n\nconst WAFInvalidDemensions = {\n  projectId: 'ProjectId',\n  domain: 'Domain',\n};\nconst templateQueryIdMap = {\n  instance: 'Domain',\n};\nexport default WAF_STATE;\nexport {\n  WAFFilterFieldsDescriptor,\n  templateQueryIdMap,\n  WAFInstanceAliasList,\n  WAFInvalidDemensions,\n  namespace,\n  queryEditorName,\n  queryEditorConfig,\n  GetInstanceQueryParams as WAFGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\nconst InstanceTypes = [\n  { text: '主实例', value: 1 },\n  { text: '备灾实例', value: 2 },\n  { text: '只读实例', value: 3 },\n];\n\nconst Status = [\n  { text: '创建中', value: 0 },\n  { text: '运行中', value: 1 },\n  { text: '隔离中', value: 4 },\n  { text: '已隔离', value: 5 },\n];\n\nconst PayTypes = [\n  { text: '包年包月', value: 0 },\n  { text: '小时计费', value: 1 },\n];\n\nconst TaskStatus = [\n  { text: '没有任务', value: 0 },\n  { text: '升级中', value: 1 },\n  { text: '数据导入中', value: 2 },\n  { text: '开放Slave中', value: 3 },\n  { text: '外网访问开通中', value: 4 },\n  { text: '批量操作执行中', value: 5 },\n  { text: '回档中', value: 6 },\n  { text: '外网访问关闭中', value: 7 },\n  { text: '密码修改中', value: 8 },\n  { text: '实例名修改中', value: 9 },\n  { text: '重启中', value: 10 },\n  { text: '自建迁移中', value: 12 },\n  { text: '删除库表中', value: 13 },\n  { text: '灾备实例创建同步中', value: 14 },\n  { text: '升级待切换', value: 15 },\n  { text: '升级切换中', value: 16 },\n  { text: '升级切换完成', value: 17 },\n];\n\nconst EngineVersions = [\n  { text: '5.1', value: '5.1' },\n  { text: '5.5', value: '5.5' },\n  { text: '5.6', value: '5.6' },\n  { text: '5.7', value: '5.7' },\n];\n\nconst OrderBy = [\n  { text: 'InstanceId', value: 'InstanceId' },\n  { text: 'InstanceName', value: 'InstanceName' },\n  { text: 'CreateTime', value: 'CreateTime' },\n  { text: 'DeadlineTime', value: 'DeadlineTime' },\n];\n\nconst OrderDirection = [\n  { text: 'ASC', value: 'ASC' },\n  { text: 'DESC', value: 'DESC' },\n];\n\nconst InitFlag = [\n  { text: '未初始化', value: 0 },\n  { text: '初始化', value: 1 },\n];\n\nconst CdbErrors = [\n  { text: '未锁定', value: 0 },\n  { text: '锁定', value: 1 },\n];\n\nconst CDBFields = {\n  ProjectId: '',\n  InstanceTypes: {},\n  Vips: [],\n  Status: {},\n  Offset: 0,\n  Limit: 20,\n  SecurityGroupId: '',\n  PayTypes: {},\n  InstanceNames: [],\n  TaskStatus: {},\n  EngineVersions: {},\n  VpcIds: [],\n  ZoneIds: [],\n  SubnetIds: [],\n  CdbErrors: {},\n  OrderBy: {},\n  OrderDirection: {},\n  InstanceIds: [],\n  InitFlag: {},\n};\n\nconst CDBFieldsDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceNames',\n    enDescriptor: 'Instance Name',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'InstanceIds',\n    enDescriptor: 'Instance ID',\n    cnDescriptor: '实例ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'ZoneIds',\n    enDescriptor: 'Zone ID',\n    cnDescriptor: '可用区的ID',\n    link: '',\n    type: 'dropdownmulti',\n  },\n  {\n    key: 'InstanceTypes',\n    enDescriptor: 'Instance Type',\n    cnDescriptor: '实例类型',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: InstanceTypes,\n  },\n  {\n    key: 'EngineVersions',\n    enDescriptor: 'Engine Version',\n    cnDescriptor: '实例数据库引擎版本',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: EngineVersions,\n  },\n  {\n    key: 'TaskStatus',\n    enDescriptor: 'Task Status',\n    cnDescriptor: '实例任务',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: TaskStatus,\n  },\n  {\n    key: 'InitFlag',\n    enDescriptor: 'Init Flag',\n    cnDescriptor: '实例初始化状态',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: InitFlag,\n  },\n  {\n    key: 'PayTypes',\n    enDescriptor: 'Pay Type',\n    cnDescriptor: '付费类型',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: PayTypes,\n  },\n  {\n    key: 'CdbErrors',\n    enDescriptor: 'CDB Errors',\n    cnDescriptor: '实例锁定标记',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: CdbErrors,\n  },\n  {\n    key: 'Status',\n    enDescriptor: 'Status',\n    cnDescriptor: '实例状态',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: Status,\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderBy,\n  },\n  {\n    key: 'OrderDirection',\n    enDescriptor: 'Order Direction',\n    cnDescriptor: '排序方式',\n    link: '',\n    type: 'select',\n    list: OrderDirection,\n  },\n  {\n    key: 'Vips',\n    enDescriptor: 'Vip',\n    cnDescriptor: '实例内网IP地址',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'VpcIds',\n    enDescriptor: 'Vpc ID',\n    cnDescriptor: '私有网络ID',\n    link: 'https://cloud.tencent.com/document/api/215/15778',\n    type: 'inputmulti',\n  },\n  {\n    key: 'SubnetIds',\n    enDescriptor: 'Subnet ID',\n    cnDescriptor: '子网ID',\n    link: 'https://cloud.tencent.com/document/api/215/15784',\n    type: 'inputmulti',\n  },\n  {\n    key: 'ProjectId',\n    enDescriptor: 'Project ID',\n    cnDescriptor: '项目ID',\n    link: 'https://cloud.tencent.com/document/product/378/4400',\n    type: 'input',\n  },\n  {\n    key: 'SecurityGroupId',\n    enDescriptor: 'Security Group ID',\n    cnDescriptor: '安全组ID',\n    link: 'https://cloud.tencent.com/document/api/236/15854',\n    type: 'input',\n  },\n];\n\nconst CDB_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: { ...CDBFields },\n};\n\nconst CDBInstanceAliasList = ['InstanceId', 'InstanceName', 'Vip'];\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\nfunction isValidMetric(metricObj: any = {}) {\n  const dimension = _.get(metricObj, 'Dimensions[0].Dimensions');\n  return dimension.length === 2 && _.indexOf(dimension, 'instanceid') !== -1 && _.indexOf(dimension, 'insttype') !== -1;\n}\nfunction modifyDimensons(metricItem: any) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = item.Dimensions.map((i) => CDBInvalidDemensions[i] || i);\n  });\n  return metricTmp;\n}\nconst CDBInvalidDemensions = {\n  instanceid: 'InstanceId',\n  insttype: 'InstanceType',\n  region: 'Region',\n};\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\nexport default CDB_STATE;\n\nexport {\n  CDBFieldsDescriptor,\n  CDBInstanceAliasList,\n  templateQueryIdMap,\n  CDBInvalidDemensions,\n  isValidMetric,\n  modifyDimensons,\n  GetInstanceQueryParams as CDBGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\nexport const CFSQueryDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'FileSystemId',\n    enDescriptor: 'File System Id',\n    cnDescriptor: '文件系统 ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'VpcId',\n    cnDescriptor: '私有网络（VPC） ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SubnetId',\n    enDescriptor: 'SubnetId',\n    cnDescriptor: '子网 ID',\n    link: '',\n    type: 'input',\n  },\n];\n\nconst CFS_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'FileSystemId',\n  version: '',\n  queries: {\n    Offset: 0,\n    Limit: 20,\n    FileSystemId: '',\n    VpcId: '',\n    SubnetId: '',\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\nconst CFSInstanceAliasList = ['FileSystemId', 'FsName'];\n\n// 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key\nconst CFSInvalidDemensions = {\n  // functionName: 'FunctionName',\n  // namespace: 'Namespace'\n};\n\nconst regionSupported = [\n  { text: '华北地区(北京)', value: 'ap-beijing' },\n  { text: '西南地区(成都)', value: 'ap-chengdu' },\n  { text: '西南地区(重庆)', value: 'ap-chongqing' },\n  { text: '华南地区(广州)', value: 'ap-guangzhou' },\n  { text: '港澳台地区(中国香港)', value: 'ap-hongkong' },\n  { text: '亚太南部(孟买)', value: 'ap-mumbai' },\n  { text: '华东地区(南京)', value: 'ap-nanjing' },\n  { text: '亚太东北(首尔)', value: 'ap-seoul' },\n  { text: '华东地区(上海)', value: 'ap-shanghai' },\n  { text: '华东地区(上海金融)', value: 'ap-shanghai-fsi' },\n  { text: '华南地区(深圳金融)', value: 'ap-shenzhen-fsi' },\n  { text: '亚太东南(新加坡)', value: 'ap-singapore' },\n  { text: '亚太东北(东京)', value: 'ap-tokyo' },\n  { text: '欧洲地区(法兰克福)', value: 'eu-frankfurt' },\n  { text: '美国西部(硅谷)', value: 'na-siliconvalley' },\n  { text: '北美地区(多伦多)', value: 'na-toronto' },\n];\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\nexport default CFS_STATE;\nexport {\n  CFSInstanceAliasList,\n  CFSInvalidDemensions,\n  templateQueryIdMap,\n  regionSupported,\n  GetInstanceQueryParams as CFSGetInstanceQueryParams,\n};\n\n// monitor监控数据默认支持的维度\n// export const SCFDefaultDimensionList = ['functionName', 'namespace', 'version'];\n","import _ from 'lodash';\nimport { FildDescriptorType } from '../_base/types';\n\nexport const InstanceQueryDescriptor: FildDescriptorType = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputNumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为10，最小值为1，最大值为100',\n    link: '',\n    type: 'inputNumber',\n    min: 1,\n    max: 50,\n  },\n  {\n    key: 'QueueName',\n    enDescriptor: 'QueueName',\n    cnDescriptor: '精确匹配QueueName',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'TagKey',\n    enDescriptor: 'TagKey',\n    cnDescriptor: '标签搜索',\n    link: '',\n    type: 'input',\n  },\n];\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\n// 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key\nexport const InvalidDemensions = {\n  queueId: 'QueueId',\n  queueName: 'QueueName',\n};\n\nexport const templateQueryIdMap = {\n  instance: 'QueueName',\n};\n\n// 与名称挂钩的变量\nconst InstanceAliasList = ['QueueName', 'QueueId'];\nexport { InstanceAliasList, GetInstanceQueryParams };\n\n// 界面状态模型，default\nexport default {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'QueueName',\n  queries: {\n    Offset: 0,\n    Limit: 20,\n    QueueName: '',\n    TagKey: '',\n  },\n};\n","import _ from 'lodash';\nconst instanceChargeTypes = [\n  { text: '预付费', value: 'PREPAID' },\n  { text: '后付费', value: 'POSTPAID_BY_HOUR' },\n  { text: 'CDH付费', value: 'CDHPAID' },\n];\n\nconst CVMFilterFields = {\n  zone: [],\n  'project-id': [],\n  'host-id': [],\n  'vpc-id': [],\n  'subnet-id': [],\n  'instance-id': [],\n  'security-group-id': [],\n  'instance-name': [],\n  'instance-charge-type': {},\n  'private-ip-address': [],\n  'public-ip-address': [],\n  'tag-key': [],\n};\n\nconst CVMFilterFieldsDescriptor = [\n  {\n    key: 'zone',\n    enDescriptor: 'Zone',\n    cnDescriptor: '可用区',\n    link: '',\n    type: 'dropdownmulti',\n  },\n  {\n    key: 'project-id',\n    enDescriptor: 'Project ID',\n    cnDescriptor: '项目ID',\n    link: 'https://cloud.tencent.com/document/api/378/4400',\n    type: 'inputNumbermulti',\n  },\n  {\n    key: 'host-id',\n    enDescriptor: 'CDH ID',\n    cnDescriptor: 'CDH ID',\n    link: 'https://cloud.tencent.com/document/product/416/19730',\n    type: 'inputmulti',\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'VPC ID',\n    cnDescriptor: 'VPC ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'subnet-id',\n    enDescriptor: 'Subnet ID',\n    cnDescriptor: '子网ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'instance-id',\n    enDescriptor: 'Instance ID',\n    cnDescriptor: '实例ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'security-group-id',\n    enDescriptor: 'Security Group ID',\n    cnDescriptor: '安全组ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'instance-name',\n    enDescriptor: 'Instance Name',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'tag-key',\n    enDescriptor: '标签简',\n    cnDescriptor: '标签简',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'instance-charge-type',\n    enDescriptor: 'Instance Charge Type',\n    cnDescriptor: '实例计费模式',\n    link: '',\n    type: 'select',\n    list: instanceChargeTypes,\n  },\n  {\n    key: 'private-ip-address',\n    enDescriptor: 'Private IP Address',\n    cnDescriptor: '实例主网卡的内网IP',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'public-ip-address',\n    enDescriptor: 'Public IP Address',\n    cnDescriptor: '实例主网卡的公网IP，包含实例创建时自动分配的IP和实例创建后手动绑定的弹性IP',\n    link: '',\n    type: 'inputmulti',\n  },\n];\n\nconst CVM_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    instanceIdsChecked: false,\n    filtersChecked: false,\n    InstanceIds: [''],\n    Filters: { ...CVMFilterFields },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    if (queries.instanceIdsChecked) {\n      if (_.isArray(queries.InstanceIds)) {\n        const InstanceIds = _.compact(queries.InstanceIds);\n        if (_.uniq(InstanceIds).length > 0) {\n          params.InstanceIds = _.uniq(InstanceIds).slice(0, 100);\n        }\n      }\n    } else if (queries.filtersChecked) {\n      const Filters: any[] = [];\n      _.forEach(queries.Filters, (item: any, key) => {\n        if (Filters.length > 9) {\n          return;\n        }\n        if (_.isArray(item)) {\n          item = _.compact(item);\n          if (item.length > 0) {\n            Filters.push({ Name: key, Values: _.uniq(item).slice(0, 5) });\n          }\n        } else if (_.isObject(item)) {\n          if (!_.isEmpty(_.get(item, 'value', []))) {\n            Filters.push({ Name: key, Values: _.get(item, 'value', []).slice(0, 5) });\n          }\n        }\n      });\n      if (Filters.length > 0) {\n        params.Filters = Filters;\n      }\n    }\n  }\n  return params;\n}\n\nconst CVMInstanceAliasList = ['InstanceId', 'InstanceName', 'PrivateIpAddresses', 'PublicIpAddresses'];\n\nconst CVMValidMetricsT = [\n  'CPUUsage',\n  'CpuLoadavg',\n  'Cpuloadavg5m',\n  'Cpuloadavg15m',\n  'BaseCpuUsage',\n  'GpuMemTotal',\n  'GpuMemUsage',\n  'GpuMemUsed',\n  'GpuPowDraw',\n  'GpuPowLimit',\n  'GpuPowUsage',\n  'GpuTemp',\n  'GpuUtil',\n  'LanOuttraffic',\n  'LanIntraffic',\n  'LanOutpkg',\n  'LanInpkg',\n  'WanOuttraffic',\n  'WanIntraffic',\n  'WanOutpkg',\n  'WanInpkg',\n  'AccOuttraffic',\n  'TcpCurrEstab',\n  'TimeOffset',\n  'MemUsed',\n  'MemUsage',\n  'CvmDiskUsage',\n  'BaseCpuUsage',\n  'VmDiskReadIops',\n];\n// const CVMInvalidDemensions = {\n//   'vm_uuid': 'InstanceId',\n//   'vmUuid': 'InstanceId',\n// };\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\nfunction isValidMetric(metric) {\n  const CVMValidMetrics = _.map(CVMValidMetricsT, _.toUpper);\n  return _.indexOf(CVMValidMetrics, _.toUpper(metric.MetricName)) !== -1;\n}\nfunction modifyDimensons(metricItem) {\n  const metricTmp = _.cloneDeep(metricItem);\n  metricTmp.Dimensions.forEach((item) => {\n    item.Dimensions = ['InstanceId'];\n  });\n  return metricTmp;\n}\nexport default CVM_STATE;\nexport {\n  CVMFilterFieldsDescriptor,\n  CVMInstanceAliasList,\n  isValidMetric,\n  modifyDimensons,\n  templateQueryIdMap,\n  // CVMInvalidDemensions,\n  GetInstanceQueryParams as CVMGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\nexport const InstanceQueryDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为10，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceIds',\n    enDescriptor: 'InstanceIds',\n    cnDescriptor: '按照一个或者多个实例ID查询。实例ID形如: emr-xxxxxxxx ',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'OrderField',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '实例ID', value: 'clusterId' },\n      { text: '创建时间', value: 'addTime' },\n      { text: '状态', value: 'status' },\n    ],\n  },\n  {\n    key: 'Asc',\n    enDescriptor: 'Order Direction',\n    cnDescriptor: '排序方式',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '降序', value: 0 },\n      { text: '升序', value: 1 },\n    ],\n  },\n  {\n    key: 'ProjectId',\n    enDescriptor: 'ProjectId',\n    cnDescriptor: '实例所属项目ID',\n    link: '',\n    type: 'inputnumber',\n  },\n  {\n    key: 'DisplayStrategy',\n    enDescriptor: 'DisplayStrategy',\n    cnDescriptor: '集群筛选策略',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '未销毁的实例', value: 'clusterList' },\n      { text: '正常运行的实例', value: 'monitorManage' },\n    ],\n  },\n];\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\n// 向实例里面塞dimensions对应的值，dimension中的key对应到实例中的key\nexport const InvalidDemensions = new Proxy(\n  {},\n  {\n    get(target, k, receiver) {\n      if (typeof k === 'string') {\n        if (k.startsWith('id4')) return 'ClusterId'; // id4****\n        if (k.startsWith('host4')) return 'nodeIP'; // host4***\n      }\n      return Reflect.get(target, k, receiver);\n    },\n    has(target, propKey) {\n      return true;\n    },\n  }\n);\n\nexport const templateQueryIdMap = {\n  instance: 'ClusterId',\n};\n\n// 与名称挂钩的变量\nconst InstanceAliasList = ['ClusterId', 'ClusterName'];\nexport { InstanceAliasList, GetInstanceQueryParams };\n\n// 界面状态模型，default\nexport default {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'ClusterId',\n  nodeIP: '',\n  queries: {\n    Offset: 0,\n    Limit: 10,\n    DisplayStrategy: '',\n    OrderBy: {},\n    Order: {},\n    InstanceIds: [],\n    ProjectId: -1,\n    OrderField: '',\n    Asc: '',\n  },\n};\n","import _ from 'lodash';\nconst namespace = 'QCE/PCX';\n\nconst PCXFields = {\n  limit: 20,\n  offset: 0,\n  peeringConnectionId: '',\n  peeringConnectionName: '',\n  vpcId: '',\n  state: undefined,\n};\n\nconst PCX_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'peeringConnectionId',\n  queries: { ...PCXFields },\n};\n\nconst StateTypes = [\n  { text: '申请中', value: 0 },\n  { text: '连接成功', value: 1 },\n  { text: '已过期', value: 2 },\n  { text: '对端已拒绝', value: 3 },\n  { text: '对端已删除', value: 4 },\n];\n\nconst PCXFieldsDescriptor = [\n  {\n    key: 'offset',\n    enDescriptor: 'offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'limit',\n    enDescriptor: 'limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为50',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 50,\n  },\n  {\n    key: 'peeringConnectionId',\n    enDescriptor: 'PeeringConnection Id',\n    cnDescriptor: '私有网络对等连接 ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'peeringConnectionName',\n    enDescriptor: 'PeeringConnection Name',\n    cnDescriptor: '对等连接名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'vpcId',\n    enDescriptor: 'vpcId',\n    cnDescriptor: '发起方私有网络 ID 值',\n    link: 'https://cloud.tencent.com/document/api/215/1372',\n    type: 'dropdown',\n  },\n  {\n    key: 'state',\n    enDescriptor: 'state',\n    cnDescriptor: '连接状态',\n    link: '',\n    type: 'select',\n    list: StateTypes,\n  },\n];\n\nconst PCXInstanceAliasList = ['peeringConnectionId', 'peeringConnectionName'];\n\nconst templateQueryIdMap = {\n  instance: 'peeringConnectionId',\n};\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.limit = _.get(queries, 'limit', 20) || 20;\n    params.offset = _.get(queries, 'offset', 0) || 0;\n    queries = _.omit(queries, ['offset', 'limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\nexport default PCX_STATE;\n\nexport {\n  PCXInstanceAliasList,\n  PCXFieldsDescriptor,\n  templateQueryIdMap,\n  namespace,\n  GetInstanceQueryParams as PCXGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nconst BillingMode = [\n  { text: '按量计费', value: 'postpaid' },\n  { text: '包年包月', value: 'prepaid' },\n];\n\nconst AutoRenew = [\n  { text: '手动续费', value: 0 },\n  { text: '自动续费', value: 1 },\n  { text: '明确不自动续费', value: 2 },\n];\n\nconst Status = [\n  { text: '待初始化', value: 0 },\n  { text: '流程执行中', value: 1 },\n  { text: '运行中', value: 2 },\n  { text: '已隔离', value: -2 },\n  { text: '待删除', value: -3 },\n];\n\nconst TypeVersion = [\n  { text: '单机版', value: 1 },\n  { text: '主从版', value: 2 },\n  { text: '集群版', value: 3 },\n];\n\nconst OrderBy = [\n  { text: 'projectId', value: 'projectId' },\n  { text: 'instancename', value: 'instancename' },\n  { text: 'createtime', value: 'createtime' },\n  { text: 'type', value: 'type' },\n  { text: 'curDeadline', value: 'curDeadline' },\n];\n\nconst OrderType = [\n  { text: '升序', value: 0 },\n  { text: '降序', value: 1 },\n];\nconst Type = [\n  { text: 'Redis老集群版', value: 1 },\n  { text: 'Redis 2.8主从版', value: 2 },\n  { text: 'CKV主从版', value: 3 },\n  { text: 'CKV集群版', value: 4 },\n  { text: 'Redis 2.8单机版', value: 5 },\n  { text: 'Redis 4.0主从版', value: 6 },\n  { text: 'Redis 4.0集群版', value: 7 },\n  { text: 'Redis5.0主从版', value: 8 },\n  { text: 'Redis5.0集群版', value: 9 },\n];\n\nconst RedisFields = {\n  InstanceId: '',\n  OrderBy: '',\n  OrderType: null,\n  VpcIds: [],\n  SubnetIds: [],\n  ProjectIds: [],\n  SearchKey: '',\n  InstanceName: '',\n  UniqVpcIds: [],\n  UniqSubnetIds: [],\n  Status: [],\n  TypeVersion: null,\n  EngineName: '',\n  AutoRenew: null,\n  BillingMode: '',\n  Type: null,\n};\n\nconst RedisFieldsDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceId',\n    enDescriptor: 'InstancesId',\n    cnDescriptor: '实例id',\n    type: 'input',\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderBy,\n  },\n  {\n    key: 'OrderType',\n    enDescriptor: 'OrderType',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderType,\n  },\n  {\n    key: 'VpcIds',\n    enDescriptor: 'VpcIds',\n    cnDescriptor: '私有网络ID数组，数组下标从0开始，如果不传则默认选择基础网络，如：47525',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'SubnetIds',\n    enDescriptor: 'SubnetIds',\n    cnDescriptor: '子网ID数组，数组下标从0开始，如：56854',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'ProjectIds',\n    enDescriptor: 'ProjectIds',\n    cnDescriptor: '项目ID 组成的数组',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'SearchKey',\n    enDescriptor: 'SearchKey',\n    cnDescriptor: '查找实例的ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'InstanceName',\n    enDescriptor: 'InstanceName',\n    cnDescriptor: '实例名称',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'UniqVpcIds',\n    enDescriptor: 'UniqVpcIds',\n    cnDescriptor: '私有网络ID数组，数组下标从0开始，如果不传则默认选择基础网络，如：vpc-sad23jfdfk',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'UniqSubnetIds',\n    enDescriptor: 'UniqSubnetIds',\n    cnDescriptor: '子网ID数组，数组下标从0开始，如：subnet-fdj24n34j2',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'Status',\n    enDescriptor: 'Status',\n    cnDescriptor: '实例状态',\n    multiple: true,\n    type: 'select',\n    list: Status,\n  },\n  {\n    key: 'TypeVersion',\n    enDescriptor: 'TypeVersion',\n    cnDescriptor: '类型版本',\n    link: '',\n    type: 'select',\n    list: TypeVersion,\n  },\n  {\n    key: 'EngineName',\n    enDescriptor: 'EngineName',\n    cnDescriptor: '引擎信息：Redis-2.8，Redis-4.0，CKV',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'AutoRenew',\n    enDescriptor: 'AutoRenew',\n    cnDescriptor: '续费模式',\n    multiple: true,\n    type: 'select',\n    list: AutoRenew,\n  },\n  {\n    key: 'BillingMode',\n    enDescriptor: 'BillingMode',\n    cnDescriptor: '计费模式：postpaid-按量计费；prepaid-包年包月',\n    link: '',\n    type: 'select',\n    list: BillingMode,\n  },\n  {\n    key: 'Type',\n    enDescriptor: 'Type',\n    cnDescriptor: '实例类型',\n    link: '',\n    type: 'select',\n    list: Type,\n  },\n];\n\nconst REDIS_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: { ...RedisFields },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        // select 单选\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\nfunction isValidMetric(metricObj: any = {}) {\n  const dimension = _.get(metricObj, 'Dimensions[0].Dimensions');\n  return dimension.length === 1 && _.indexOf(dimension, 'instanceid') !== -1;\n}\n\nconst REDISInstanceAliasList = ['InstanceId', 'InstanceName', 'WanIp'];\n\nconst RedisInvalidDemensions = {\n  redis_uuid: 'InstanceId',\n  instanceid: 'InstanceId',\n};\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\nexport default REDIS_STATE;\nexport {\n  RedisFieldsDescriptor,\n  RedisInvalidDemensions,\n  templateQueryIdMap,\n  REDISInstanceAliasList,\n  isValidMetric,\n  GetInstanceQueryParams as REDISGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nconst networkTypes = [\n  { text: 'BGP', value: 'BGP' },\n  { text: 'SINGLEISP', value: 'SINGLEISP' },\n  { text: 'ANYCAST', value: 'ANYCAST' },\n];\n\nconst chargeTypes = [\n  { text: 'top5计费', value: 'TOP5_POSTPAID_BY_MONTH' },\n  { text: '月95计费', value: 'PERCENT95_POSTPAID_BY_MONTH' },\n];\nconst BWPFilterFields = {\n  'bandwidth-package_id': [],\n  'bandwidth-package-name': [],\n  'network-type': [],\n  'charge-type': [],\n};\n\nconst BWPFilterFieldsDescriptor = [\n  {\n    key: 'bandwidth-package_id',\n    enDescriptor: 'BandwidthPackage Id',\n    cnDescriptor: '带宽包ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'bandwidth-package-name',\n    enDescriptor: 'BandwidthPackage Name',\n    cnDescriptor: '带宽包名称',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'network-type',\n    enDescriptor: 'network type',\n    cnDescriptor: '带宽包类型',\n    link: '',\n    type: 'select',\n    list: networkTypes,\n  },\n  {\n    key: 'charge-type',\n    enDescriptor: 'charge type',\n    cnDescriptor: '带宽包计费类型',\n    link: '',\n    type: 'select',\n    list: chargeTypes,\n  },\n];\n\nconst BWP_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'BandwidthPackageId',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    instanceIdsChecked: false,\n    filtersChecked: false,\n    BandwidthPackageIds: [''],\n    Filters: { ...BWPFilterFields },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    if (queries.instanceIdsChecked) {\n      if (_.isArray(queries.BandwidthPackageIds)) {\n        const BandwidthPackageIds = _.compact(queries.BandwidthPackageIds);\n        if (_.uniq(BandwidthPackageIds).length > 0) {\n          params.BandwidthPackageIds = _.uniq(BandwidthPackageIds).slice(0, 100);\n        }\n      }\n    } else if (queries.filtersChecked) {\n      const Filters: any[] = [];\n      _.forEach(queries.Filters, (item: any, key) => {\n        if (Filters.length > 9) {\n          return;\n        }\n        if (_.isArray(item)) {\n          item = _.compact(item);\n          if (item.length > 0) {\n            Filters.push({ Name: key, Values: _.uniq(item).slice(0, 5) });\n          }\n        } else if (_.isObject(item)) {\n          if (!_.isEmpty(_.get(item, 'value', []))) {\n            Filters.push({ Name: key, Values: _.get(item, 'value', []).slice(0, 5) });\n          }\n        }\n      });\n      if (Filters.length > 0) {\n        params.Filters = Filters;\n      }\n    }\n  }\n  return params;\n}\n\nconst BWPInstanceAliasList = ['BandwidthPackageId', 'BandwidthPackageName'];\n\nconst templateQueryIdMap = {\n  instance: 'BandwidthPackageId',\n};\n\nconst BWPInvalidDemensions = {\n  bandwidthPackageId: 'BandwidthPackageId',\n};\nexport default BWP_STATE;\nexport {\n  BWPFilterFieldsDescriptor,\n  templateQueryIdMap,\n  BWPInstanceAliasList,\n  BWPInvalidDemensions,\n  GetInstanceQueryParams as BWPGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nconst CDNFilterFields = {\n  origin: [],\n  domain: [],\n  resourceId: [],\n  status: {},\n  serviceType: {},\n  projectId: [],\n  domainType: {},\n  fullUrlCache: {},\n  https: {},\n  originPullProtocol: {},\n  tagKey: [],\n};\n\nconst CDNFilterFieldsDescriptor = [\n  {\n    key: 'origin',\n    enDescriptor: 'origin',\n    cnDescriptor: '主源站',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'domain',\n    enDescriptor: 'domain',\n    cnDescriptor: '域名',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'resourceId',\n    enDescriptor: 'resourceId',\n    cnDescriptor: '域名id',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'status',\n    enDescriptor: 'status',\n    cnDescriptor: '域名状态',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'online', value: 'online' },\n      { text: 'offline', value: 'offline' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'serviceType',\n    enDescriptor: 'serviceType',\n    cnDescriptor: '业务类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'web', value: 'web' },\n      { text: 'download', value: 'download' },\n      { text: 'media', value: 'media' },\n    ],\n  },\n  {\n    key: 'projectId',\n    enDescriptor: 'projectId',\n    cnDescriptor: '项目ID',\n    link: '',\n    type: 'inputNumbermulti',\n  },\n  {\n    key: 'domainType',\n    enDescriptor: 'domainType',\n    cnDescriptor: '主源站类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '自有源', value: 'cname' },\n      { text: 'cos接入', value: 'cos' },\n    ],\n  },\n  {\n    key: 'fullUrlCache',\n    enDescriptor: 'fullUrlCache',\n    cnDescriptor: '全路径缓存',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '打开', value: 'on' },\n      { text: '关闭', value: 'off' },\n    ],\n  },\n  {\n    key: 'https',\n    enDescriptor: 'https',\n    cnDescriptor: '是否配置https',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'on', value: 'on' },\n      { text: 'off', value: 'off' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'originPullProtocol',\n    enDescriptor: 'originPullProtocol',\n    cnDescriptor: '回源协议类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'http', value: 'http' },\n      { text: 'follow', value: 'follow' },\n      { text: 'https', value: 'https' },\n    ],\n  },\n  {\n    key: 'tagKey',\n    enDescriptor: 'tagKey',\n    cnDescriptor: '标签键',\n    link: '',\n    type: 'inputmulti',\n  },\n];\n\nconst CDN_STATE = {\n  region: 'ap-guangzhou',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'Domain',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    Filters: { ...CDNFilterFields },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    const Filters: any[] = [];\n    _.forEach(queries.Filters, (item: any, key) => {\n      // console.log('item', item, queries);\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          Filters.push({ Name: key, Value: _.uniq(item).slice(0, 5) });\n        }\n      } else if (_.isObject(item)) {\n        if (!_.isEmpty(_.get(item, 'value', []))) {\n          Filters.push({ Name: key, Value: _.get(item, 'value', []).slice(0, 5) });\n        }\n      }\n    });\n    if (Filters.length > 0) {\n      params.Filters = Filters;\n    }\n  }\n  return params;\n}\n\nconst CDNInstanceAliasList = ['Domain', 'ProjectId'];\n\nconst CDNInvalidDemensions = {\n  projectId: 'ProjectId',\n  domain: 'Domain',\n};\nconst templateQueryIdMap = {\n  instance: 'Domain',\n};\nexport default CDN_STATE;\nexport {\n  CDNFilterFieldsDescriptor,\n  templateQueryIdMap,\n  CDNInstanceAliasList,\n  CDNInvalidDemensions,\n  GetInstanceQueryParams as CDNGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\n// export const LBQueryDescriptor = [{\n//   key: 'Offset',\n//   enDescriptor: 'Offset',\n//   cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n//   link: '',\n//   type: 'inputnumber',\n//   min: 0,\n// },\n// {\n//   key: 'Limit',\n//   enDescriptor: 'Limit',\n//   cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为2000',\n//   link: '',\n//   type: 'inputnumber',\n//   min: 1,\n//   max: 2000,\n// },\n// {\n//   key: 'AddressId',\n//   enDescriptor: 'Address Id',\n//   cnDescriptor: '标识 EIP 的唯一 ID ',\n//   link: '',\n//   type: 'inputmulti',\n// }\n// ];\n\nexport const LBFilterDescriptor = [\n  {\n    key: 'address-id',\n    enDescriptor: 'Address ID',\n    cnDescriptor: 'EIP 的唯一 ID ',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'address-name',\n    enDescriptor: 'Address Name',\n    cnDescriptor: 'EIP 名称 ',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'address-ip',\n    enDescriptor: 'Address IP',\n    cnDescriptor: 'EIP 的 IP 地址 ',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'address-status',\n    enDescriptor: 'Address Status',\n    cnDescriptor: 'EIP 的状态',\n    link: '',\n    type: 'select',\n    list: [\n      { value: 'CREATING', text: 'CREATING' },\n      { value: 'BINDING', text: 'BINDING' },\n      { value: 'BIND', text: 'BIND' },\n      { value: 'UNBINDING', text: 'UNBINDING' },\n      { value: 'UNBIND', text: 'UNBIND' },\n      { value: 'OFFLINING', text: 'OFFLINING' },\n      { value: 'BIND_ENI', text: 'BIND_ENI' },\n    ],\n  },\n  {\n    key: 'instance-id',\n    enDescriptor: 'Instance ID',\n    cnDescriptor: '实例ID ',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'private-ip-address',\n    enDescriptor: 'Private IP Address',\n    cnDescriptor: 'EIP 绑定的内网 IP',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'network-interface-id',\n    enDescriptor: 'Network Interface ID',\n    cnDescriptor: 'EIP 绑定的弹性网卡 ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'is-arrears',\n    enDescriptor: 'Arrears',\n    cnDescriptor: 'EIP 是否欠费 ',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '正常', value: 'FALSE' },\n      { text: '欠费', value: 'TRUE' },\n    ],\n  },\n];\n\n// const LBFilterFields = {\n//   \"address-id\": [],\n//   \"address-name\": [],\n//   \"address-ip\": [],\n//   \"address-status \": [],\n//   \"instance-id \": [],\n//   \"private-ip-address\": [],\n//   \"network-interface-id \": [],\n//   \"is-arrears \": [],\n// };\n\nconst InstanceKey = 'AddressIds';\nconst LB_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'AddressId',\n  version: '',\n  queries: {\n    Offset: 0,\n    Limit: 20,\n    [InstanceKey]: [''],\n    Filters: {\n      'address-id': [],\n      'address-name': [],\n      'address-ip': [],\n      'address-status ': [],\n      'instance-id ': [],\n      'private-ip-address': [],\n      'network-interface-id ': [],\n      'is-arrears ': [],\n    },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    if (queries.instanceIdsChecked) {\n      if (_.isArray(queries[InstanceKey])) {\n        const InstanceIds = _.compact(queries[InstanceKey]);\n        if (_.uniq(InstanceIds).length > 0) {\n          params[InstanceKey] = _.uniq(InstanceIds).slice(0, 100);\n        }\n      }\n    } else if (queries.filtersChecked) {\n      const Filters: any[] = [];\n      _.forEach(queries.Filters, (item: any, key) => {\n        if (Filters.length > 9) {\n          return;\n        }\n        if (_.isArray(item)) {\n          item = _.compact(item);\n          if (item.length > 0) {\n            Filters.push({ Name: key, Values: _.uniq(item).slice(0, 5) });\n          }\n        } else if (_.isObject(item)) {\n          if (!_.isEmpty(_.get(item, 'value', []))) {\n            Filters.push({ Name: key, Values: _.get(item, 'value', []).slice(0, 5) });\n          }\n        }\n      });\n      if (Filters.length > 0) {\n        params.Filters = Filters;\n      }\n    }\n  }\n  return params;\n}\n\nconst LBInstanceAliasList = ['AddressId', 'AddressName', 'AddressIp'];\n\n// 维度eip对应于实例中的哪个字段？映射\nconst LBInvalidDemensions = {\n  eip: 'AddressIp',\n};\n\nconst templateQueryIdMap = {\n  instance: 'AddressId',\n};\n// 从monitor维度到LB实例对应字段的映射\n// export const metric2Instance = {\n//   functionName: 'FunctionName',\n//   namespace: 'Namespace'\n// };\n\nexport default LB_STATE;\nexport {\n  LBInstanceAliasList,\n  LBInvalidDemensions,\n  templateQueryIdMap,\n  GetInstanceQueryParams as LBGetInstanceQueryParams,\n};\n\n// monitor监控数据默认支持的维度\n// export const LBDefaultDimensionList = ['functionName', 'namespace', 'version'];\n","import _ from 'lodash';\nconst InstanceTypes = [\n  { text: '所有实例', value: 0 },\n  { text: '正式实例', value: 1 },\n  { text: '临时实例', value: 2 },\n  { text: '只读实例', value: 3 },\n  { text: '正式，只读，灾备实例', value: -1 },\n];\n\nconst ClusterTypes = [\n  { text: '副本集实例', value: 0 },\n  { text: '分片实例', value: 1 },\n  { text: '所有实例', value: -1 },\n];\n\nconst Status = [\n  { text: '待初始化', value: 0 },\n  { text: '流程执行中', value: 1 },\n  { text: '实例有效', value: 2 },\n  { text: '实例已过期', value: -2 },\n];\n\nconst PayMode = [\n  { text: '按量计费', value: 0 },\n  { text: '包年包月', value: 1 },\n  { text: '按量包年包月计费', value: -1 },\n];\n\nconst OrderBy = [\n  { text: 'ProjectId', value: 'ProjectId' },\n  { text: 'InstanceName', value: 'InstanceName' },\n  { text: 'CreateTime', value: 'CreateTime' },\n];\n\nconst OrderByType = [\n  { text: '升序', value: 'ASC' },\n  { text: '降序', value: 'DESC' },\n];\n\nconst MongoDBFields = {\n  InstanceIds: [],\n  InstanceType: {},\n  ClusterType: {},\n  Status: [],\n  VpcId: '',\n  SubnetId: '',\n  PayMode: {},\n  Limit: 20,\n  Offset: 0,\n  OrderBy: '',\n  OrderByType: '',\n};\n\nconst MONGODBFieldsDescriptor = [\n  {\n    key: 'Offset',\n    enDescriptor: 'Offset',\n    cnDescriptor: '偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项',\n    link: '',\n    type: 'inputnumber',\n    min: 0,\n  },\n  {\n    key: 'Limit',\n    enDescriptor: 'Limit',\n    cnDescriptor: '单次请求返回的数量，默认为20，最小值为1，最大值为100',\n    link: '',\n    type: 'inputnumber',\n    min: 1,\n    max: 100,\n  },\n  {\n    key: 'InstanceIds',\n    enDescriptor: 'InstancesIds',\n    cnDescriptor: '实例名称',\n    type: 'inputmulti',\n  },\n  {\n    key: 'InstanceType',\n    enDescriptor: 'InstanceType',\n    cnDescriptor: '实例类型',\n    link: '',\n    type: 'select',\n    list: InstanceTypes,\n  },\n  {\n    key: 'ClusterType',\n    enDescriptor: 'ClusterType',\n    cnDescriptor: '集群类型',\n    link: '',\n    type: 'select',\n    list: ClusterTypes,\n  },\n  {\n    key: 'Status',\n    enDescriptor: 'Status',\n    cnDescriptor: '实例状态',\n    link: '',\n    multiple: true,\n    type: 'select',\n    list: Status,\n  },\n  {\n    key: 'VpcId',\n    enDescriptor: 'VpcId',\n    cnDescriptor: '私有网络的ID',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'SubnetId',\n    enDescriptor: 'SubnetId',\n    cnDescriptor: '私有网络的子网ID，基础网络则不传该参数。入参设置该参数的同时，必须设置相应的VpcId',\n    link: '',\n    type: 'input',\n  },\n  {\n    key: 'PayMode',\n    enDescriptor: 'PayMode',\n    cnDescriptor: '付费类型',\n    link: '',\n    type: 'select',\n    list: PayMode,\n  },\n  {\n    key: 'OrderBy',\n    enDescriptor: 'OrderBy',\n    cnDescriptor: '排序字段',\n    link: '',\n    type: 'select',\n    list: OrderBy,\n  },\n  {\n    key: 'OrderByType',\n    enDescriptor: 'OrderByType',\n    cnDescriptor: '排序方式',\n    link: '',\n    type: 'select',\n    list: OrderByType,\n  },\n];\n\nconst MONGODB_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'InstanceId',\n  queries: { ...MongoDBFields },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        // select 单选\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\nconst MONGODBInstanceAliasList = ['InstanceId', 'InstanceName'];\n\nconst MONGODBInvalidDemensions = {\n  target: 'InstanceId',\n};\n\nconst templateQueryIdMap = {\n  instance: 'InstanceId',\n};\nexport default MONGODB_STATE;\nexport {\n  MONGODBFieldsDescriptor,\n  MONGODBInvalidDemensions,\n  MONGODBInstanceAliasList,\n  templateQueryIdMap,\n  GetInstanceQueryParams as MONGODBGetInstanceQueryParams,\n};\n","import _ from 'lodash';\n\nconst NATGATEWAYInstanceAliasList = ['NatGatewayId', 'NatGatewayName'];\n\nconst NATGatewayFilterFields = {\n  'nat-gateway-id': [],\n  'nat-gateway-name': [],\n  'vpc-id': [],\n};\n\nconst NATGatewayFilterFieldsDescriptor = [\n  {\n    key: 'nat-gateway-id',\n    enDescriptor: 'NatGateway ID',\n    cnDescriptor: 'NAT网关统一 ID',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'nat-gateway-name',\n    enDescriptor: 'NatGateway Name',\n    cnDescriptor: 'NatGateway Name',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'vpc-id',\n    enDescriptor: 'VPC ID',\n    cnDescriptor: '私有网络 ID',\n    link: '',\n    type: 'inputmulti',\n  },\n];\n\nconst NATGATEWAY_STATE = {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'NatGatewayId',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    instanceIdsChecked: false,\n    filtersChecked: false,\n    NatGatewayIds: [''],\n    Filters: { ...NATGatewayFilterFields },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    if (queries.instanceIdsChecked) {\n      if (_.isArray(queries.NatGatewayIds)) {\n        const NatGatewayIds = _.compact(queries.NatGatewayIds);\n        if (_.uniq(NatGatewayIds).length > 0) {\n          params.InstanceIds = _.uniq(NatGatewayIds).slice(0, 100);\n        }\n      }\n    } else if (queries.filtersChecked) {\n      const Filters: any[] = [];\n      _.forEach(queries.Filters, (item: any, key) => {\n        if (Filters.length > 9) {\n          return;\n        }\n        if (_.isArray(item)) {\n          item = _.compact(item);\n          if (item.length > 0) {\n            Filters.push({ Name: key, Values: _.uniq(item).slice(0, 5) });\n          }\n        } else if (_.isObject(item)) {\n          if (!_.isEmpty(_.get(item, 'value', []))) {\n            Filters.push({ Name: key, Values: _.get(item, 'value', []).slice(0, 5) });\n          }\n        }\n      });\n      if (Filters.length > 0) {\n        params.Filters = Filters;\n      }\n    }\n  }\n  return params;\n}\n\nconst templateQueryIdMap = {\n  instance: 'NatGatewayId',\n};\n\nconst NATInvalidDemensions = {\n  natId: 'NatGatewayId',\n};\n\nexport default NATGATEWAY_STATE;\nexport {\n  NATGatewayFilterFieldsDescriptor,\n  NATGATEWAYInstanceAliasList,\n  templateQueryIdMap,\n  NATInvalidDemensions,\n  GetInstanceQueryParams as NATGATEWAYGetInstanceQueryParams,\n};\n","import _ from 'lodash';\nconst CDNFilterFields = {\n  origin: [],\n  domain: [],\n  resourceId: [],\n  status: [],\n  serviceType: [],\n  projectId: [],\n  domainType: [],\n  fullUrlCache: [],\n  https: [],\n  originPullProtocol: [],\n  tagKey: [],\n};\n\nconst OVCDNFilterFieldsDescriptor = [\n  {\n    key: 'origin',\n    enDescriptor: 'origin',\n    cnDescriptor: '主源站',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'domain',\n    enDescriptor: 'domain',\n    cnDescriptor: '域名',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'resourceId',\n    enDescriptor: 'resourceId',\n    cnDescriptor: '域名id',\n    link: '',\n    type: 'inputmulti',\n  },\n  {\n    key: 'status',\n    enDescriptor: 'status',\n    cnDescriptor: '域名状态',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'online', value: 'online' },\n      { text: 'offline', value: 'offline' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'serviceType',\n    enDescriptor: 'serviceType',\n    cnDescriptor: '业务类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'web', value: 'web' },\n      { text: 'download', value: 'download' },\n      { text: 'media', value: 'media' },\n    ],\n  },\n  {\n    key: 'projectId',\n    enDescriptor: 'projectId',\n    cnDescriptor: '项目ID',\n    link: '',\n    type: 'inputNumbermulti',\n  },\n  {\n    key: 'domainType',\n    enDescriptor: 'domainType',\n    cnDescriptor: '主源站类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '自有源', value: 'cname' },\n      { text: 'cos接入', value: 'cos' },\n    ],\n  },\n  {\n    key: 'fullUrlCache',\n    enDescriptor: 'fullUrlCache',\n    cnDescriptor: '全路径缓存',\n    link: '',\n    type: 'select',\n    list: [\n      { text: '打开', value: 'on' },\n      { text: '关闭', value: 'off' },\n    ],\n  },\n  {\n    key: 'https',\n    enDescriptor: 'https',\n    cnDescriptor: '是否配置https',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'on', value: 'on' },\n      { text: 'off', value: 'off' },\n      { text: 'processing', value: 'processing' },\n    ],\n  },\n  {\n    key: 'originPullProtocol',\n    enDescriptor: 'originPullProtocol',\n    cnDescriptor: '回源协议类型',\n    link: '',\n    type: 'select',\n    list: [\n      { text: 'http', value: 'http' },\n      { text: 'follow', value: 'follow' },\n      { text: 'https', value: 'https' },\n    ],\n  },\n  {\n    key: 'tagKey',\n    enDescriptor: 'tagKey',\n    cnDescriptor: '标签键',\n    link: '',\n    type: 'inputmulti',\n  },\n];\n\nconst OVCDN_STATE = {\n  region: 'ap-guangzhou',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'Domain',\n  queries: {\n    Limit: 20,\n    Offset: 0,\n    Filters: { ...CDNFilterFields },\n  },\n};\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    const Filters: any[] = [];\n    _.forEach(queries.Filters, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          Filters.push({ Name: key, Value: _.uniq(item).slice(0, 5) });\n        }\n      } else if (_.isObject(item)) {\n        if (!_.isEmpty(_.get(item, 'value', []))) {\n          Filters.push({ Name: key, Value: _.get(item, 'value', []).slice(0, 5) });\n        }\n      }\n    });\n    if (Filters.length > 0) {\n      params.Filters = Filters;\n    }\n  }\n  return params;\n}\n\nconst OVCDNInstanceAliasList = ['Domain', 'ResourceId'];\n\nconst OVCDNInvalidDemensions = {\n  projectId: 'ProjectId',\n  domain: 'Domain',\n};\nconst templateQueryIdMap = {\n  instance: 'Domain',\n};\nexport default OVCDN_STATE;\nexport {\n  OVCDNFilterFieldsDescriptor,\n  OVCDNInstanceAliasList,\n  templateQueryIdMap,\n  OVCDNInvalidDemensions,\n  GetInstanceQueryParams as OVCDNGetInstanceQueryParams,\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__56__;","module.exports = __WEBPACK_EXTERNAL_MODULE__57__;","import {\n  APIGATEWAYInstanceAliasList,\n  APIGATEWAYInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  regionSupported,\n  keyInStorage,\n  queryMonitorExtraConfg,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = APIGATEWAYInstanceAliasList;\n  InvalidDimensions = APIGATEWAYInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'apigateway',\n    action: 'DescribeServicesStatus',\n    responseField: 'ServiceSet',\n  };\n\n  keyInStorage = keyInStorage;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // getFilterDropdown({ field }) {\n  //   return super.getRegions();\n  // }\n  getRegions() {\n    return Promise.resolve(regionSupported);\n  }\n  async getEnvironmentNameList(params: any) {\n    const { region, instanceId } = params;\n    const serviceInfo = GetServiceAPIInfo(region, this.service);\n\n    // 从分页数据，获取全量数据\n    const res = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action: 'DescribeServiceEnvironmentList' }\n        );\n      },\n      {\n        ServiceId: instanceId,\n      },\n      'EnvironmentList'\n    );\n    const [rs] = res;\n    return rs;\n  }\n  async fetchMetricData(action: string, region: string, instance: any) {\n    // console.log({ action, region, instance });\n    if (action === 'DescribeServiceEnvironmentList') {\n      const rs = await this.getEnvironmentNameList({ region, instanceId: instance[this.templateQueryIdMap.instance] });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[this.templateQueryIdMap.environmentName];\n        return {\n          text: o[this.templateQueryIdMap.environmentName],\n          value: o[this.templateQueryIdMap.environmentName],\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage.environmentList, rs);\n      return result;\n    }\n    return [];\n  }\n}\n","import {\n  BMINTRALBInstanceAliasList,\n  BMINTRALBInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  isValidMetric,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = BMINTRALBInstanceAliasList;\n  InvalidDimensions = BMINTRALBInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'bmlb',\n    action: 'DescribeLoadBalancers',\n    responseField: 'LoadBalancerSet',\n    interceptor: {\n      request: (params) => ({\n        ...params,\n        LoadBalancerType: 'internal',\n      }), // 设置一些请求参数的 默认值\n    },\n  };\n  RegionMap = {};\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // 重写getRegion\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/bm',\n      },\n      'bm',\n      { action: 'DescribeRegions', region: 'ap-guangzhou' }\n    ).then((response) => {\n      // 缓存，后面获取可用区zone\n      this.RegionMap = _.keyBy(response.RegionInfoSet, 'Region');\n      return _.map(response.RegionInfoSet || [], (item) => {\n        return {\n          text: item.RegionDescription,\n          value: item.Region,\n        };\n      });\n    });\n  }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        if (isValidMetric(item)) {\n          return item;\n        }\n        return null;\n      })\n    );\n  }\n}\n","import { BMLBInstanceAliasList, CPMInvalidDemensions, namespace, templateQueryIdMap, isValidMetric } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = BMLBInstanceAliasList;\n  InvalidDimensions = CPMInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'bmlb',\n    action: 'DescribeLoadBalancers',\n    responseField: 'LoadBalancerSet',\n    interceptor: {\n      request: (params) => ({\n        ...params,\n        LoadBalancerType: 'open',\n      }), // 设置一些请求参数的 默认值\n    },\n  };\n  RegionMap = {};\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        if (isValidMetric(item)) {\n          return item;\n        }\n        return null;\n      })\n    );\n  }\n  // 重写getRegion\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/bm',\n      },\n      'bm',\n      { action: 'DescribeRegions', region: 'ap-guangzhou' }\n    ).then((response) => {\n      // 缓存，后面获取可用区zone\n      this.RegionMap = _.keyBy(response.RegionInfoSet, 'Region');\n      return _.map(response.RegionInfoSet || [], (item) => {\n        return {\n          text: item.RegionDescription,\n          value: item.Region,\n        };\n      });\n    });\n  }\n}\n","import {\n  BMPCXInstanceAliasList,\n  BMPCXInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = BMPCXInstanceAliasList;\n  InvalidDimensions = BMPCXInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'bmvpc',\n    action: 'DescribeVpcPeerConnections',\n    responseField: 'VpcPeerConnectionSet',\n  };\n  MetricReqConfig = {\n    resultFilter: modifyDimensons,\n  };\n  RegionMap = {};\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // 重写getRegion\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/bm',\n      },\n      'bm',\n      { action: 'DescribeRegions', region: 'ap-guangzhou' }\n    ).then((response) => {\n      // 缓存，后面获取可用区zone\n      this.RegionMap = _.keyBy(response.RegionInfoSet, 'Region');\n      return _.map(response.RegionInfoSet || [], (item) => {\n        return {\n          text: item.RegionDescription,\n          value: item.Region,\n        };\n      });\n    });\n  }\n}\n","import { BWPInstanceAliasList, BWPInvalidDemensions } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class BWPDatasource extends BaseDatasource {\n  Namespace = 'QCE/BWP';\n  InstanceAliasList = BWPInstanceAliasList;\n  InvalidDimensions = BWPInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'BandwidthPackageId',\n  };\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeBandwidthPackages',\n    responseField: 'BandwidthPackageSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import { CBSInstanceAliasList, CBSInvalidDemensions, namespace, templateQueryIdMap, isValidMetric } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = CBSInstanceAliasList;\n  InvalidDimensions = CBSInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'cbs',\n    action: 'DescribeDisks',\n    responseField: 'DiskSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.filter(rawSet, isValidMetric);\n  }\n}\n","import _ from 'lodash';\nimport { CDBInstanceAliasList, CDBInvalidDemensions, isValidMetric, modifyDimensons } from './query_def';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class CDBDatasource extends BaseDatasource {\n  Namespace = 'QCE/CDB';\n  InstanceAliasList = CDBInstanceAliasList;\n  InvalidDimensions = CDBInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'InstanceId',\n  };\n  InstanceReqConfig = {\n    service: 'cdb',\n    action: 'DescribeDBInstances',\n    responseField: 'Items',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        if (isValidMetric(item)) {\n          return modifyDimensons(item);\n        }\n        return null;\n      })\n    );\n  }\n  /**\n   * 获取 可用区\n   * @param region 地域信息\n   */\n  getZones(region) {\n    const serviceInfo = GetServiceAPIInfo(region, 'cvm');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeZones' }\n    ).then((response) => {\n      return _.filter(\n        _.map(response.ZoneSet || [], (item) => {\n          return { text: item.ZoneName, value: item.ZoneId, ZoneState: item.ZoneState, Zone: item.Zone };\n        }),\n        (item) => item.ZoneState === 'AVAILABLE'\n      );\n    });\n  }\n}\n","import _ from 'lodash';\nimport { CDNInstanceAliasList, CDNInvalidDemensions } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class CDNDatasource extends BaseDatasource {\n  Namespace = 'QCE/CDN';\n  InstanceAliasList = CDNInstanceAliasList;\n  InvalidDimensions = CDNInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'Domain',\n  };\n  InstanceReqConfig = {\n    service: 'cdn',\n    action: 'DescribeDomains',\n    responseField: 'Domains',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async metricFindQuery(query: any, regex?: string) {\n    return super.metricFindQuery({ ...query, ...{ region: 'ap-guangzhou' } }, regex);\n  }\n}\n","import { CDNPROVINCEInstanceAliasList, CDNPROVINCEInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = CDNPROVINCEInstanceAliasList;\n  InvalidDimensions = CDNPROVINCEInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'cdn',\n    action: 'DescribeDomains',\n    responseField: 'Domains',\n  };\n  extrasAlias = ['isp', 'district'];\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // getFilterDropdown({ field }) {\n  //   return super.getRegions();\n  // }\n  async metricFindQuery(query: any, regex?: string) {\n    return super.metricFindQuery({ ...query, ...{ region: 'ap-guangzhou' } }, regex);\n  }\n  async getConsumerList(params: any) {\n    const { region, field } = params;\n    const serviceInfo = GetServiceAPIInfo(region, 'cdn');\n\n    // 从分页数据，获取全量数据\n    const rs = await this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: {\n          Name: field,\n        },\n      },\n      serviceInfo.service,\n      { action: 'DescribeMapInfo' }\n    );\n    return (rs.MapInfoList || []).map((o) => {\n      return {\n        text: o.Name,\n        value: o.Name,\n      };\n    });\n  }\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    if (action === 'DescribeMapInfo') {\n      const { name: field } = query;\n      const rs = await this.getConsumerList({ region, field });\n      return rs;\n    }\n    return [];\n  }\n}\n","import {\n  CEIPSUMMARYInstanceAliasList,\n  CEIPInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = CEIPSUMMARYInstanceAliasList;\n  InvalidDimensions = CEIPInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeAddresses',\n    responseField: 'AddressSet',\n    interceptor: {\n      request: (params) => {\n        const { Filters } = params;\n        if (!Filters) {\n          params.Filters = [];\n        }\n        params.Filters.push({\n          Name: 'address-type',\n          Values: ['AnycastEIP'],\n        });\n        return params;\n      }, // 设置一些请求参数的 默认值\n      // response: (data: unknown[]) =>[\n      //   {\n      //     AddressId: 'AddressId',\n      //     AddressIp: '111.22.3.4'\n      //   },\n      // ],\n    },\n  };\n  MetricReqConfig = {\n    resultFilter: modifyDimensons,\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  // async getInstances(region, params = {}) {\n  //   const rawSet = await super.getInstances(region, params);\n  //   return rawSet.filter((item) => item.AddressType === 'AnycastEIP');\n  // }\n\n  // async getVariableInstances(region, query = {}) {\n  //   const rawSet = await super.getVariableInstances(region, query);\n  //   return rawSet.filter((item) => item.AddressType === 'AnycastEIP');\n  // }\n}\n","import { CESInstanceAliasList, CESInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = CESInstanceAliasList;\n  InvalidDimensions = CESInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'es',\n    action: 'DescribeInstances',\n    responseField: 'InstanceList',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import _ from 'lodash';\nimport { BaseDatasource } from '../_base/datasource';\nimport { CFSInstanceAliasList, CFSInvalidDemensions, regionSupported } from './query_def';\n\nexport default class CFSDatasource extends BaseDatasource {\n  InstanceKey: string;\n  Namespace: string;\n  InstanceAliasList: string[];\n  InvalidDimensions: Record<string, string>;\n  templateQueryIdMap = {\n    instance: 'FileSystemId',\n  };\n  extrasAlias = ['version'];\n  InstanceReqConfig: { service?: string | undefined; action: string; responseField: string };\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n\n    this.Namespace = 'QCE/CFS';\n    this.InstanceAliasList = CFSInstanceAliasList;\n    this.InvalidDimensions = CFSInvalidDemensions;\n    this.InstanceReqConfig = {\n      service: 'cfs',\n      action: 'DescribeCfsFileSystems',\n      responseField: 'FileSystems',\n    };\n  }\n  getRegions() {\n    return Promise.resolve(regionSupported);\n  }\n}\n","import _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport { BaseDatasource } from '../_base/datasource';\nimport {\n  CKAFKAInstanceAliasList,\n  CKAFKATopicAliasList,\n  CKAFKAInvalidDemensions,\n  templateQueryIdMap,\n  keyInStorage,\n  queryMonitorExtraConfg,\n} from './query_def';\n\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class CKFKADatasource extends BaseDatasource {\n  Namespace = 'QCE/CKAFKA';\n  InstanceAliasList = CKAFKAInstanceAliasList;\n  TopicAliasList = CKAFKATopicAliasList;\n  InvalidDimensions = CKAFKAInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'ckafka',\n    action: 'DescribeInstances',\n    responseField: 'InstanceList',\n  };\n  extraMetricDims = ['topicId'];\n  extrasAlias = ['topicId', 'consumerGroup', 'partition'];\n  keyInStorage = keyInStorage;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getConsumerGroups(region, params) {\n    const serviceInfo = GetServiceAPIInfo(region, 'ckafka');\n\n    // 从分页数据，获取全量数据\n    const rs = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action: 'DescribeConsumerGroup' }\n        );\n      },\n      params,\n      ['GroupListForMonitor', 'TopicListForMonitor', 'PartitionListForMonitor']\n    );\n\n    let [GroupList, TopicList, PartitionList] = rs;\n    // 无重复数组\n    TopicList = _.uniqBy(TopicList, (item) => (item as any).TopicId);\n    GroupList = _.uniqBy(GroupList, (item) => (item as any).GroupName);\n    PartitionList = _.uniqBy(PartitionList, (item) => (item as any).Partition);\n    return {\n      TopicList,\n      GroupList,\n      PartitionList,\n    };\n    // return {\n    //   TopicList: TopicList.map((topic) => ({\n    //     text: topic.TopicId,\n    //     value: topic.TopicId, // 为了获取多维度的值，这里完全可以使用JSON.stringify()将整个对象放进去\n    //     TopicName: topic.TopicName,\n    //   })),\n    //   GroupList: GroupList.map((group) => ({\n    //     text: group.GroupName,\n    //     value: group.GroupName,\n    //   })),\n    //   PartitionList: PartitionList.map((par) => ({\n    //     text: par.Partition,\n    //     value: par.Partition,\n    //   })),\n    // };\n  }\n  formatTopicVarDisplay(topic: Record<string, any>, displayTpl: string | undefined, topicAlias: string) {\n    if (displayTpl) {\n      return displayTpl.replace(/\\$\\{(\\w+)\\}/g, (a, b) => {\n        if (!b || !this.TopicAliasList.includes(b)) {\n          return '';\n        }\n        return this.getAliasValue(topic, b);\n      });\n    }\n    return this.getAliasValue(topic, topicAlias);\n  }\n  // 查询指标下的数据\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    const result = await this.getConsumerGroups(region, {\n      InstanceId: instance.InstanceId,\n    });\n    const { display } = query;\n    const { TopicList, GroupList, PartitionList } = result;\n    let { topicalias } = query;\n    topicalias = this.TopicAliasList.includes(topicalias) ? topicalias : this.templateQueryIdMap.topicId;\n    // console.log({ TopicList, GroupList, PartitionList });\n    // const res1 = await instanceStorage.setExtraStorage(this.service, this.keyInStorage.TopicList, TopicList);\n    // const res2 = await instanceStorage.setExtraStorage(this.service, this.keyInStorage.GroupList, GroupList);\n    // const res3 = await instanceStorage.setExtraStorage(this.service, this.keyInStorage.PartitionList, PartitionList);\n    // console.log({ res1, res2, res3 });\n    const rs = {\n      TopicList: TopicList.map((topic) => {\n        const topicAlias = this.formatTopicVarDisplay(topic, display, topicalias);\n        topic._InstanceAliasValue = topicAlias || topic.TopicId;\n        return {\n          text: topicAlias || topic.TopicId,\n          value: topic[templateQueryIdMap.topicId], // 为了获取多维度的值，这里完全可以使用JSON.stringify()将整个对象放进去\n          TopicName: topic.TopicName,\n        };\n      }),\n      GroupList: GroupList.map((group) => {\n        group._InstanceAliasValue = group.GroupName;\n        return {\n          text: group.GroupName,\n          value: group[templateQueryIdMap.groupName],\n        };\n      }),\n      PartitionList: PartitionList.map((par) => {\n        par._InstanceAliasValue = par.Partition;\n        return {\n          text: par.Partition,\n          value: par[templateQueryIdMap.partition],\n        };\n      }),\n    };\n    await instanceStorage.setExtraStorage(this.service, this.keyInStorage.TopicList, TopicList);\n    await instanceStorage.setExtraStorage(this.service, this.keyInStorage.GroupList, GroupList);\n    await instanceStorage.setExtraStorage(this.service, this.keyInStorage.PartitionList, PartitionList);\n    // console.log({ res1, res2, res3 });\n    // console.log({rs});\n    // 根据action返回指定的维度数据列表\n    switch (action) {\n      case 'DescribeTopicList':\n        return rs.TopicList;\n      case 'DescribeGroup':\n        return rs.GroupList;\n      case 'DescribePartion':\n        return rs.PartitionList;\n      default:\n        return [];\n    }\n  }\n\n  // async getOtherAlias(datapoints) {\n  //   let dimension;\n  //   for(let j = 0; j < datapoints.Dimensions.length; j++){\n  //     if(datapoints.Dimensions[j] !== 'InstanceName'){\n  //       dimension.push(datapoints.Dimensions[j])\n  //     }\n  //   }\n  //   console.log(dimension);\n\n  //   return dimension\n  // }\n}\n","import {\n  InstanceAliasList,\n  LOADBALANCEListenerAliasList,\n  LOADBALANCEVALIDDIMENSIONS,\n  templateQueryIdMap,\n  keyInStorage,\n  queryMonitorExtraConfg,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class DCDatasource extends BaseDatasource {\n  // Namespace = namespace;\n  InstanceAliasList = InstanceAliasList;\n  ListenerAliasList = LOADBALANCEListenerAliasList;\n  // InvalidDimensions = LOADBALANCEVALIDDIMENSIONS;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  // InstanceReqConfig = {\n  //   service: 'clb',\n  //   action: 'DescribeLoadBalancers',\n  //   responseField: 'LoadBalancerSet',\n  // };\n  keyInStorage = keyInStorage;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // getFilterDropdown({ field }) {\n  //   return super.getRegions();\n  // }\n  getInvalidDimensions(selfIns: any) {\n    if (selfIns.service === 'lbPrivate') return { ...LOADBALANCEVALIDDIMENSIONS, vpcId: 'NumericalVpcId' };\n    return LOADBALANCEVALIDDIMENSIONS;\n  }\n  getInstanceReqConfig(selfIns: any) {\n    const res: any = {\n      service: 'clb',\n      action: 'DescribeLoadBalancers',\n      responseField: 'LoadBalancerSet',\n    };\n    if (selfIns.service === 'lbPrivate' || selfIns.service === 'loadBalance') {\n      res.interceptor = {\n        request: (param) => ({ ...param, LoadBalancerType: 'INTERNAL' }),\n      };\n    }\n    if (selfIns.service === 'lbPublic') {\n      res.interceptor = {\n        request: (param) => ({ ...param, LoadBalancerType: 'OPEN' }),\n      };\n    }\n    return res;\n  }\n  async getListenerList(params: any) {\n    const { region, instanceId } = params;\n    const serviceInfo = GetServiceAPIInfo(region, 'clb');\n\n    // 从分页数据，获取全量数据\n    const res = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action: 'DescribeListeners' }\n        );\n      },\n      {\n        LoadBalancerId: instanceId,\n      },\n      'Listeners'\n    );\n    const [rs] = res;\n    return rs;\n  }\n  formatListenerVarDisplay(listener: Record<string, any>, displayTpl: string | undefined, listenerAlias: string) {\n    if (displayTpl) {\n      return displayTpl.replace(/\\$\\{(\\w+)\\}/g, (a, b) => {\n        if (!b || !this.ListenerAliasList.includes(b)) {\n          return '';\n        }\n        return this.getAliasValue(listener, b);\n      });\n    }\n    return this.getAliasValue(listener, listenerAlias);\n  }\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    const { display } = query;\n    // console.log({ action, region, instance });\n    if (action === 'DescribeListeners') {\n      const rs = await this.getListenerList({ region, instanceId: instance[this.templateQueryIdMap.instance] });\n      let { listeneralias } = query;\n      listeneralias = this.ListenerAliasList.includes(listeneralias) ? listeneralias : this.templateQueryIdMap.listener;\n      const result = rs.flatMap((o) => {\n        const listenAlias = this.formatListenerVarDisplay(o, display, listeneralias);\n        const lisId = o[this.templateQueryIdMap.listener];\n        o._InstanceAliasValue = listenAlias || lisId;\n        // if (!o[listeneralias]) return [];\n        return {\n          text: listenAlias || lisId,\n          value: lisId,\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage.listener, rs);\n      return result;\n    }\n    return [];\n  }\n}\n","import { BaseDatasource } from '../_base/datasource';\nimport { InvalidDemensions, InstanceAliasList, templateQueryIdMap } from './query_def';\n\nexport default class CmqDatasource extends BaseDatasource {\n  InvalidDimensions: Record<string, string> = InvalidDemensions;\n  InstanceAliasList: string[] = InstanceAliasList;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'cmq',\n    action: 'DescribeQueueDetail',\n    responseField: 'QueueSet',\n  };\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawMetric = await super.getMetrics(region);\n    return rawMetric.map((metric) => {\n      let dims = metric.Dimensions[0].Dimensions;\n      dims = Array.from(new Set([...dims, 'queueId', 'queueName']));\n      metric.Dimensions[0].Dimensions = dims;\n      return metric;\n    });\n  }\n}\n","import { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport { BaseDatasource } from '../_base/datasource';\nimport {\n  InvalidDemensions,\n  InstanceAliasList,\n  templateQueryIdMap,\n  keyInStorage,\n  queryMonitorExtraConfg,\n} from './query_def';\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class CmqTopicDatasource extends BaseDatasource {\n  Namespace = 'QCE/CMQTOPIC';\n  InvalidDimensions: Record<string, string> = InvalidDemensions;\n  InstanceAliasList: string[] = InstanceAliasList;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'cmq',\n    action: 'DescribeTopicDetail',\n    responseField: 'TopicSet',\n  };\n  keyInStorage = keyInStorage;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  extraMetricDims = ['subscriptionId']; // 多选\n\n  async fetchAllSubscription(region: string, params: any) {\n    const serviceInfo = GetServiceAPIInfo(region, 'cmq');\n    // console.log(serviceInfo, 'serviceinfo');\n\n    // 从分页数据，获取全量数据\n    const rs = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action: 'DescribeSubscriptionDetail' }\n        );\n      },\n      params,\n      'SubscriptionSet'\n    );\n\n    return rs[0];\n  }\n\n  async fetchMetricData(action: string, region: string, instance: any) {\n    let result;\n    switch (action) {\n      case 'DescribeSubscriptionDetail':\n        result = await this.fetchAllSubscription(region, { TopicName: instance.TopicName });\n        // eslint-disable-next-line no-case-declarations\n        const rs = result.map((item) => {\n          item._InstanceAliasValue = item.SubscriptionId;\n          return { text: item.SubscriptionId, value: item[templateQueryIdMap.subscription] };\n        });\n        await instanceStorage.setExtraStorage(this.service, this.keyInStorage.subscriptionId, result);\n        return rs;\n      default:\n        return [];\n    }\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawMetric = await super.getMetrics(region);\n    return rawMetric.map((metric) => {\n      let dims = metric.Dimensions[0].Dimensions;\n      dims.push('topicId');\n      if (['NumOfNotify', 'NumOfSuccNotify'].includes(metric.MetricName)) {\n        dims.push('subscriptionId');\n      }\n\n      dims = Array.from(new Set(dims));\n      metric.Dimensions[0].Dimensions = dims;\n      return metric;\n    });\n  }\n}\n","import { BaseDatasource } from '../_base/datasource';\n\ninterface BucketListResult {\n  Owner: { ID: 'string'; DisplayName: 'string' };\n  Buckets: { Name: string; Region: string }[];\n}\n\nexport default class CosDatasource extends BaseDatasource {\n  InvalidDimensions: Record<string, string> = {};\n  InstanceAliasList: string[] = ['BucketName'];\n  templateQueryIdMap = {\n    instance: 'BucketName',\n  };\n  InstanceReqConfig = {} as any; // 不必要的配置\n  cosURL: string;\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n    this.cosURL = `/api/datasources/${this.instanceSettings.id}/resources/tc_cos_list`;\n  }\n  async getInstances(region: string) {\n    return this.backendSrv\n      .datasourceRequest({\n        url: this.cosURL,\n        method: 'GET',\n        params: { region },\n        headers: { 'Content-Type': 'application/json' },\n      })\n      .then((res) => {\n        let { data }: { data: BucketListResult } = res;\n        data = data || {};\n        let { Buckets } = data;\n        Buckets = Buckets || [];\n\n        // name contains appid，see detail https://cloud.tencent.com/document/product/436/8291\n        return Buckets.map((item) => ({\n          ...item,\n          BucketName: item.Name,\n          bucket: item.Name,\n          appid: item.Name.split('-').slice(-1)[0],\n        }));\n      });\n  }\n\n  async getVariableInstances(region) {\n    return this.getInstances(region);\n  }\n\n  async getRegions() {\n    const regionList = await super.getRegions();\n    regionList.splice(11, 0, { value: 'ap-beijing-fsi', text: '华北地区(北京金融)', RegionState: 'AVAILABLE' });\n    return regionList;\n  }\n}\n","import {\n  CPMInstanceAliasList,\n  CPMInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = CPMInstanceAliasList;\n  InvalidDimensions = CPMInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'bm',\n    action: 'DescribeDevices',\n    responseField: 'DeviceInfoSet',\n  };\n  RegionMap = {};\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // 重写getRegion\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/bm',\n      },\n      'bm',\n      { action: 'DescribeRegions', region: 'ap-guangzhou' }\n    ).then((response) => {\n      // 缓存，后面获取可用区zone\n      this.RegionMap = _.keyBy(response.RegionInfoSet, 'Region');\n      return _.map(response.RegionInfoSet || [], (item) => {\n        return {\n          text: item.RegionDescription,\n          value: item.Region,\n        };\n      });\n    });\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.map((item) => modifyDimensons(item));\n  }\n\n  getFilterDropdown({ field, region }) {\n    if (field === 'DeviceClassCode') {\n      const serviceInfo = GetServiceAPIInfo(region, 'bm');\n      return this.doRequest(\n        {\n          url: this.url + serviceInfo.path,\n        },\n        'bm',\n        { region, action: 'DescribeDeviceClass' }\n      ).then((response) => {\n        return _.map(response.DeviceClassSet || [], (item) => {\n          return { text: item.DeviceClassCode, value: item.DeviceClassCode };\n        });\n      });\n    }\n    return [];\n  }\n}\n","import _ from 'lodash';\nimport { CVMInstanceAliasList, isValidMetric, modifyDimensons } from './query_def';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class CVMDatasource extends BaseDatasource {\n  Namespace = 'QCE/CVM';\n  InstanceAliasList = CVMInstanceAliasList;\n  InvalidDimensions = {};\n  templateQueryIdMap = {\n    instance: 'InstanceId',\n  };\n  InstanceReqConfig = {\n    service: 'cvm',\n    action: 'DescribeInstances',\n    responseField: 'InstanceSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        if (isValidMetric(item)) {\n          return modifyDimensons(item);\n        }\n        return null;\n      })\n    );\n  }\n\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/api',\n        data: { Product: 'cvm' },\n      },\n      'api',\n      { action: 'DescribeRegions' }\n    ).then((response) => {\n      return _.filter(\n        _.map(response.RegionSet || [], (item) => {\n          return {\n            text: item.RegionName,\n            value: item.Region,\n            RegionState: item.RegionState,\n          };\n        }),\n        (item) => item.RegionState === 'AVAILABLE'\n      );\n    });\n  }\n\n  getZones(region) {\n    const serviceInfo = GetServiceAPIInfo(region, 'api');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: { Product: 'cvm' },\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeZones' }\n    ).then((response) => {\n      return _.filter(\n        _.map(response.ZoneSet || [], (item) => {\n          return { text: item.ZoneName, value: item.Zone, ZoneState: item.ZoneState, Zone: item.Zone };\n        }),\n        (item) => item.ZoneState === 'AVAILABLE'\n      );\n    });\n  }\n}\n","import {\n  CYNOSDBMYSQLInstanceAliasList,\n  CYNOSDBInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  regionSupported,\n  modifyDimensons,\n  checkKeys,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class CYNOSDBMYSQLDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = CYNOSDBMYSQLInstanceAliasList;\n  InvalidDimensions = CYNOSDBInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  checkKeys = checkKeys;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'cynosdb',\n    action: 'DescribeInstances',\n    responseField: 'InstanceSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.map((item) => modifyDimensons(item));\n  }\n  getRegions() {\n    return Promise.resolve(regionSupported);\n  }\n}\n","import { DCInstanceAliasList, DCInvalidDemensions, namespace, modifyDimensons } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = DCInstanceAliasList;\n  InvalidDimensions = DCInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'DirectConnectId',\n  };\n  InstanceReqConfig = {\n    service: 'dc',\n    action: 'DescribeDirectConnects',\n    responseField: 'DirectConnectSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.map((item) => modifyDimensons(item));\n  }\n}\n","import {\n  DCDBInstanceAliasList,\n  DCDBInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  regionSupported,\n  modifyDimensons,\n  keyInStorage,\n  queryMonitorExtraConfg,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = DCDBInstanceAliasList;\n  InvalidDimensions = DCDBInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'dcdb',\n    action: 'DescribeDCDBInstances',\n    responseField: 'Instances',\n  };\n  keyInStorage = keyInStorage;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  extraActionMap = {\n    DescribeDCDBShards: {\n      service: 'dcdb',\n      action: 'DescribeDCDBShards',\n      responseField: 'Shards',\n      pickKey: 'ShardInstanceId',\n    },\n    DescribeDCDBInstanceNodeInfo: {\n      service: 'dcdb',\n      action: 'DescribeDCDBInstanceNodeInfo',\n      responseField: 'NodesInfo',\n      pickKey: 'NodeId',\n    },\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // 重写getRegion,无接口，用本地config\n  getRegions() {\n    return Promise.resolve(regionSupported);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        return modifyDimensons(item);\n      })\n    );\n  }\n  async getConsumerList(params: any) {\n    const { region, action: act, payload } = params;\n    const { service, action, responseField } = this.extraActionMap[act];\n\n    const serviceInfo = GetServiceAPIInfo(region, service);\n\n    // 从分页数据，获取全量数据\n    const rs = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action }\n        );\n      },\n      payload,\n      responseField\n    );\n    return rs[0];\n  }\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    const payload: any = {\n      InstanceId: instance[this.templateQueryIdMap.instance],\n      Limit: 100,\n    };\n    if (Object.keys(this.extraActionMap).indexOf(action) !== -1) {\n      const rs = await this.getConsumerList({ region, action, payload });\n      const { pickKey } = this.extraActionMap[action];\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[this.templateQueryIdMap[pickKey]];\n        return {\n          text: o[this.templateQueryIdMap[pickKey]],\n          value: o[this.templateQueryIdMap[pickKey]],\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage[pickKey], rs);\n      return result;\n    }\n    return [];\n  }\n}\n","import { DCGInstanceAliasList, DCGInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = DCGInstanceAliasList;\n  InvalidDimensions = DCGInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeDirectConnectGateways',\n    responseField: 'DirectConnectGatewaySet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import { DCXInstanceAliasList, DCXInvalidDemensions, namespace, modifyDimensons } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class DCXDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = DCXInstanceAliasList;\n  InvalidDimensions = DCXInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'DirectConnectTunnelId',\n  };\n  InstanceReqConfig = {\n    service: 'dc',\n    action: 'DescribeDirectConnectTunnels',\n    responseField: 'DirectConnectTunnelSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.map((item) => modifyDimensons(item));\n  }\n}\n","import {\n  ECMInstanceAliasList,\n  ECMInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = ECMInstanceAliasList;\n  InvalidDimensions = ECMInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'ecm',\n    action: 'DescribeInstances',\n    responseField: 'InstanceSet',\n  };\n  MetricReqConfig = {\n    resultFilter: modifyDimensons,\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async metricFindQuery(query: any, regex?: string) {\n    return super.metricFindQuery({ ...query, ...{ region: 'ap-guangzhou' } }, regex);\n  }\n}\n","import {\n  ECMBLOCKSTORAGEInstanceAliasList,\n  ECMBLOCKSTORAGEInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  queryMonitorExtraConfg,\n  keyInStorage,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = ECMBLOCKSTORAGEInstanceAliasList;\n  InvalidDimensions = ECMBLOCKSTORAGEInvalidDemensions;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  templateQueryIdMap = templateQueryIdMap;\n  keyInStorage = keyInStorage;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'ecm',\n    action: 'DescribeInstances',\n    responseField: 'InstanceSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async getDiskList(params: any) {\n    const { payload } = params;\n    const { InstanceId } = payload;\n    const instanceCache = await instanceStorage.getInstance(this.service);\n    const instanceObj: any =\n      _.cloneDeep(instanceCache.find((item) => item[this.templateQueryIdMap.instance] === InstanceId)) ?? {};\n    const { DataDisks: dataDisks } = instanceObj;\n    return dataDisks;\n  }\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    const payload: any = {\n      InstanceId: instance,\n      Limit: 100,\n    };\n    const rs = await this.getDiskList({ region, action, payload });\n    const result = rs.map((o) => {\n      o._InstanceAliasValue = o[this.templateQueryIdMap.diskId];\n      return {\n        text: o[this.templateQueryIdMap.diskId],\n        value: o[this.templateQueryIdMap.diskId],\n      };\n    });\n    await instanceStorage.setExtraStorage(this.service, this.keyInStorage.diskId, rs);\n    return result;\n  }\n}\n","import { ECMLBInstanceAliasList, ECMLBInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = ECMLBInstanceAliasList;\n  InvalidDimensions = ECMLBInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'ecm',\n    action: 'DescribeLoadBalancers',\n    responseField: 'LoadBalancerSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async metricFindQuery(query: any, regex?: string) {\n    return super.metricFindQuery({ ...query, ...{ region: 'ap-guangzhou' } }, regex);\n  }\n}\n","import {\n  GSEInstanceAliasList,\n  GSEInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  regionSupported,\n  keyInStorage,\n  queryMonitorExtraConfg,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = GSEInstanceAliasList;\n  InvalidDimensions = GSEInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'gse',\n    action: 'DescribeInstances',\n    responseField: 'Instances',\n  };\n\n  keyInStorage = keyInStorage;\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // getFilterDropdown({ field }) {\n  //   return super.getRegions();\n  // }\n  getRegions() {\n    return Promise.resolve(regionSupported);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(\n      rawSet.map((item) => {\n        return modifyDimensons(item);\n      })\n    );\n  }\n  async getQueueNameList(params: any) {\n    const { region } = params;\n    const serviceInfo = GetServiceAPIInfo(region, this.service);\n\n    // 从分页数据，获取全量数据\n    const res = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action: 'DescribeGameServerSessionQueues' }\n        );\n      },\n      {},\n      'GameServerSessionQueues'\n    );\n    const [rs] = res;\n    return rs;\n  }\n  async getFleetList(params: any) {\n    const { region } = params;\n    const serviceInfo = GetServiceAPIInfo(region, this.service);\n\n    // 从分页数据，获取全量数据\n    const res = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action: 'ListFleets' }\n        );\n      },\n      {},\n      'FleetIds'\n    );\n    const [rs] = res;\n    return rs.map((r) => ({ [this.templateQueryIdMap.FleetId]: r }));\n  }\n  async fetchMetricData(action: string, region: string, instance: any) {\n    // console.log({ action, region, instance });\n    if (action === 'DescribeGameServerSessionQueues') {\n      const rs = await this.getQueueNameList({ region, instanceId: instance[this.templateQueryIdMap.instance] });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[this.templateQueryIdMap.Name];\n        return {\n          text: o[this.templateQueryIdMap.Name],\n          value: o[this.templateQueryIdMap.Name],\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage.queue, rs);\n      return result;\n    }\n    if (action === 'ListFleets') {\n      const rs = await this.getFleetList({ region, instanceId: instance[this.templateQueryIdMap.instance] });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[this.templateQueryIdMap.FleetId];\n        return {\n          text: o[this.templateQueryIdMap.FleetId],\n          value: o[this.templateQueryIdMap.FleetId],\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage.fleet, rs);\n      return result;\n    }\n    return [];\n  }\n}\n","import _ from 'lodash';\nimport { BaseDatasource } from '../_base/datasource';\nimport { LBInstanceAliasList, LBInvalidDemensions } from './query_def';\n\nexport default class SCFDatasource extends BaseDatasource {\n  Namespace = 'QCE/LB';\n  InstanceAliasList = LBInstanceAliasList;\n  InvalidDimensions = LBInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'AddressId',\n  };\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeAddresses',\n    responseField: 'AddressSet',\n    interceptor: {\n      request: (params) => {\n        const { Filters } = params;\n        if (!Filters) {\n          params.Filters = [];\n        }\n        params.Filters.push({\n          Name: 'address-type',\n          Values: ['EIP'],\n        });\n        return params;\n      }, // 设置一些请求参数的 默认值\n    },\n  };\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.filter((item) =>\n      /* hack：这里多加了筛选条件，是因为后端数据不准确，坑啊！ 只拿取包含eip的指标 */\n      item.Dimensions?.[0]?.Dimensions?.includes('eip')\n    );\n  }\n\n  // async getInstances(region, params = {}) {\n  //   const rawSet = await super.getInstances(region, params);\n  //   /* hack：这里多加了筛选条件，是因为后端数据不准确，坑啊！ 只拿取包含eip的指标 */\n  //   return rawSet.filter((item) => item.AddressType === 'EIP');\n  // }\n\n  // async getVariableInstances(region, query = {}) {\n  //   const rawSet = await super.getVariableInstances(region, query);\n  //   return rawSet.filter((item) => item.AddressType === 'EIP');\n  // }\n}\n","import _ from 'lodash';\nimport { MONGODBInstanceAliasList, MONGODBInvalidDemensions } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class MONGODBDatasource extends BaseDatasource {\n  Namespace = 'QCE/CMONGO';\n  InstanceAliasList = MONGODBInstanceAliasList;\n  InvalidDimensions = MONGODBInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'InstanceId',\n  };\n  InstanceReqConfig = {\n    service: 'mongodb',\n    action: 'DescribeDBInstances',\n    responseField: 'InstanceDetails',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport { BaseDatasource } from '../_base/datasource';\nimport { InvalidDemensions, InstanceAliasList, templateQueryIdMap } from './query_def';\n\nexport default class MrHdfsDatasource extends BaseDatasource {\n  InvalidDimensions: Record<string, string> = InvalidDemensions;\n  InstanceAliasList: string[] = InstanceAliasList;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'emr',\n    action: 'DescribeInstances',\n    responseField: 'ClusterList',\n    interceptor: {\n      request: (params) => ({\n        ...params,\n        DisplayStrategy: params.DisplayStrategy || 'monitorManage',\n        ProjectId: params.ProjectId || -1,\n      }), // 设置一些请求参数的 默认值\n      response: (data: unknown[]) => data.map(({ ClusterId, ClusterName }) => ({ ClusterId, ClusterName })),\n      // response: (data: unknown[]) =>\n      //   data?.length\n      //     ? data\n      //     : [\n      //         {\n      //           AddTime: '2019-09-16 16:48:01',\n      //           AlarmInfo: '',\n      //           AppId: 251008830,\n      //           ChargeType: 1,\n      //           ClusterId: 'emr-p9f700x8',\n      //           ClusterName: 'beckwu_包年勿删',\n      //           Config: {\n      //             ChargeType: 1,\n      //             ComNodeSize: 0,\n      //             ComResource: {\n      //               Cpu: 0,\n      //               DiskSize: 0,\n      //               DiskType: '',\n      //               MemSize: 0,\n      //               RootSize: 0,\n      //               Spec: '',\n      //               SpecName: '',\n      //               StorageType: 0,\n      //             },\n      //             CoreNodeSize: 2,\n      //             CoreResource: {\n      //               Cpu: 2,\n      //               DiskSize: 100,\n      //               DiskType: 'CLOUD_BASIC',\n      //               MemSize: 8192,\n      //               RootSize: 0,\n      //               Spec: 'CVM.S2',\n      //               SpecName: 'EMR标准型S2',\n      //               StorageType: 2,\n      //             },\n      //             MasterNodeSize: 1,\n      //             MasterResource: {\n      //               Cpu: 2,\n      //               DiskSize: 100,\n      //               DiskType: 'CLOUD_BASIC',\n      //               MemSize: 8192,\n      //               RootSize: 0,\n      //               Spec: 'CVM.S2',\n      //               SpecName: 'EMR标准型S2',\n      //               StorageType: 2,\n      //             },\n      //             OnCos: false,\n      //             SoftInfo: ['zookeeper-3.4.9', 'hadoop-3.1.2', 'knox-1.2.0', 'sys-1.0'],\n      //             TaskNodeSize: 1,\n      //             TaskResource: {\n      //               Cpu: 2,\n      //               DiskSize: 100,\n      //               DiskType: 'CLOUD_BASIC',\n      //               MemSize: 8192,\n      //               RootSize: 0,\n      //               Spec: 'CVM.S2',\n      //               SpecName: 'EMR标准型S2',\n      //               StorageType: 2,\n      //             },\n      //           },\n      //           EmrVersion: 'EMR-V3.0.0',\n      //           Ftitle: '集群运行中',\n      //           Id: 19541,\n      //           IsTradeCluster: 0,\n      //           MasterIp: '--',\n      //           ProjectId: 0,\n      //           RegionId: 1,\n      //           ResourceOrderId: 0,\n      //           RunTime: '0天2小时48分钟55秒',\n      //           Status: 2,\n      //           SubnetId: 1230738,\n      //           TradeVersion: 1,\n      //           Uin: '1875765535',\n      //           VpcId: 78518,\n      //           ZoneId: 100002,\n      //         },\n      //       ],\n    },\n  };\n\n  async fetchAllNodes(region: string, params: any) {\n    const serviceInfo = GetServiceAPIInfo(region, 'emr');\n\n    // 从分页数据，获取全量数据\n    const rs = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action: 'DescribeClusterNodes' }\n        );\n      },\n      params,\n      'NodeList'\n    );\n\n    return rs[0].map((item) => ({ text: item.Ip, value: item.Ip }));\n  }\n\n  async fetchMetricData(action: string, region: string, instance: any) {\n    let result;\n    switch (action) {\n      case 'DescribeClusterNodes':\n        result = await this.fetchAllNodes(region, { InstanceId: instance.ClusterId, NodeFlag: 'all' });\n        return result;\n      default:\n        return [];\n    }\n  }\n}\n","import _ from 'lodash';\nimport { NATGATEWAYInstanceAliasList, NATInvalidDemensions } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class NATGATEWAYDatasource extends BaseDatasource {\n  Namespace = 'QCE/NAT_GATEWAY';\n  InstanceAliasList = NATGATEWAYInstanceAliasList;\n  InvalidDimensions = NATInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'NatGatewayId',\n  };\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeNatGateways',\n    responseField: 'NatGatewaySet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import _ from 'lodash';\nimport { OVCDNInstanceAliasList, OVCDNInvalidDemensions } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class OVCDNDatasource extends BaseDatasource {\n  Namespace = 'QCE/OV_CDN';\n  InstanceAliasList = OVCDNInstanceAliasList;\n  InvalidDimensions = OVCDNInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'Domain',\n  };\n  InstanceReqConfig = {\n    service: 'cdn',\n    action: 'DescribeDomains',\n    responseField: 'Domains',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async metricFindQuery(query: any, regex?: string) {\n    return super.metricFindQuery({ ...query, ...{ region: 'ap-guangzhou' } }, regex);\n  }\n}\n","import { PCXInstanceAliasList, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo, GetRequestParamsV2, SliceLength } from '../../common/constants';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = PCXInstanceAliasList;\n  InvalidDimensions = {};\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'xx',\n    action: 'xx',\n    responseField: 'xx',\n  };\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  getInstances(region = 'ap-guangzhou', params = {}) {\n    params = { offset: 0, limit: 50, ...params };\n    const serviceInfo = GetServiceAPIInfo(region, 'pcx');\n    return this.doRequestV2(\n      {\n        url: this.url + serviceInfo.path,\n        data: params,\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeVpcPeeringConnections' }\n    ).then((response) => {\n      return response.data || [];\n    });\n  }\n\n  /**\n   * 模板变量中获取全量的 PCX 实例列表\n   * @param region 地域信息\n   */\n  getVariableInstances(region, query) {\n    let result: any[] = [];\n    const params = { Offset: 0, Limit: 50, ...query };\n    const serviceInfo = GetServiceAPIInfo(region, 'pcx');\n    return this.doRequestV2(\n      {\n        url: this.url + serviceInfo.path,\n        data: params,\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeVpcPeeringConnections' }\n    ).then((response) => {\n      result = response.data || [];\n      const total = response.totalCount || 0;\n      if (result.length >= total) {\n        return result;\n      } else {\n        const param = SliceLength(total, 50);\n        const promises: any[] = [];\n        _.forEach(param, (item) => {\n          promises.push(this.getInstances(region, item));\n        });\n        return Promise.all(promises)\n          .then((responses) => {\n            _.forEach(responses, (item) => {\n              result = _.concat(result, item);\n            });\n            return result;\n          })\n          .catch((error) => {\n            return result;\n          });\n      }\n    });\n  }\n\n  getVpcId(region, params: any = {}) {\n    params = { Offset: 0, Limit: 20, ...params };\n    // TODO 等待腾讯云接口查问题\n    params.Offset = String(params.Offset);\n    params.Limit = String(params.Limit);\n    const serviceInfo = GetServiceAPIInfo(region, 'vpc');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: params,\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeVpcs' }\n    ).then((response) => {\n      return _.map(response.VpcSet || [], (item) => ({ text: item.VpcId, value: item.VpcId }));\n    });\n  }\n\n  getVpcIds(region) {\n    let result: any[] = [];\n    const params: any = { Offset: 0, Limit: 100 };\n    // TODO 等待腾讯云接口查问题\n    params.Offset = String(params.Offset);\n    params.Limit = String(params.Limit);\n    const serviceInfo = GetServiceAPIInfo(region, 'vpc');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: params,\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeVpcs' }\n    ).then((response) => {\n      result = _.map(response.VpcSet || [], (item) => ({ text: item.VpcId, value: item.VpcId }));\n      const total = response.TotalCount || 0;\n      if (result.length >= total) {\n        return result;\n      } else {\n        const param = SliceLength(total, 100);\n        const promises: any[] = [];\n        _.forEach(param, (item) => {\n          promises.push(this.getVpcId(region, item));\n        });\n        return Promise.all(promises)\n          .then((responses) => {\n            _.forEach(responses, (item) => {\n              result = _.concat(result, item);\n            });\n            return result;\n          })\n          .catch((error) => {\n            return result;\n          });\n      }\n    });\n  }\n\n  /**\n   * 腾讯云 API 2.0 请求接口\n   * @param options\n   * @param service\n   * @param signObj\n   */\n  async doRequestV2(options, service, signObj: any = {}) {\n    options = await GetRequestParamsV2(\n      options,\n      service,\n      signObj,\n      this.secretId,\n      this.instanceSettings.id,\n      this.backendSrv\n    );\n    return this.backendSrv\n      .datasourceRequest(options)\n      .then((response) => {\n        return _.get(response, 'data', {});\n      })\n      .catch((error) => {\n        throw error;\n      });\n  }\n}\n","import _ from 'lodash';\nimport {\n  POSTGRESInstanceAliasList,\n  PostgreInvalidDemensions,\n  namespace,\n  modifyDimensons,\n  templateQueryIdMap,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class CDBDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = POSTGRESInstanceAliasList;\n  InvalidDimensions = PostgreInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'postgres',\n    action: 'DescribeDBInstances',\n    responseField: 'DBInstanceSet',\n  };\n\n  MetricReqConfig = {\n    resultFilter: modifyDimensons,\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import { QAAPInstanceAliasList, QAAPInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class QAAPDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = QAAPInstanceAliasList;\n  InvalidDimensions = QAAPInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'gaap',\n    action: 'DescribeProxies',\n    responseField: 'ProxySet',\n    interceptor: {\n      // response: (data: unknown[]) =>[\n      //   {\n      //     \"NetDetectId\": \"netd-12345678\",\n      //   },\n      // ],\n    },\n  };\n  // MetricReqConfig = {\n  //   resultFilter: modifyDimensons,\n  // };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import _ from 'lodash';\nimport { REDISInstanceAliasList, RedisInvalidDemensions, isValidMetric } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class REDISDatasource extends BaseDatasource {\n  Namespace = 'QCE/REDIS';\n  InstanceAliasList = REDISInstanceAliasList;\n  InvalidDimensions = RedisInvalidDemensions;\n  templateQueryIdMap = {\n    instance: 'InstanceId',\n  };\n  InstanceReqConfig = {\n    service: 'redis',\n    action: 'DescribeInstances',\n    responseField: 'InstanceSet',\n    interceptor: {\n      request: (params) => ({ ...params, MonitorVersion: '1m' }),\n    },\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.filter((item) => isValidMetric(item));\n  }\n}\n","import _ from 'lodash';\nimport {\n  REDISMEMInstanceAliasList,\n  namespace,\n  RedisMemInvalidDemensions,\n  isValidMetric,\n  templateQueryIdMap,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class REDISDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = REDISMEMInstanceAliasList;\n  InvalidDimensions = RedisMemInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'redis',\n    action: 'DescribeInstances',\n    responseField: 'InstanceSet',\n    interceptor: {\n      request: (params) => ({ ...params, MonitorVersion: '5s' }),\n    },\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.filter((item) => isValidMetric(item));\n  }\n}\n","import _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { BaseDatasource } from '../_base/datasource';\nimport {\n  SCFInstanceAliasList,\n  SCFInvalidDemensions,\n  regionSupported,\n  queryMonitorExtraConfg,\n  keyInStorage,\n  templateQueryIdMap,\n} from './query_def';\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class SCFDatasource extends BaseDatasource {\n  InstanceKey: string;\n  Namespace: string;\n  InstanceAliasList: string[];\n  InvalidDimensions: Record<string, string>;\n  templateQueryIdMap = templateQueryIdMap;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  keyInStorage = keyInStorage;\n  InstanceReqConfig: { service?: string | undefined; action: string; responseField: string };\n\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n\n    this.Namespace = 'QCE/SCF_V2';\n    this.InstanceAliasList = SCFInstanceAliasList;\n    this.InvalidDimensions = SCFInvalidDemensions;\n    this.InstanceReqConfig = {\n      service: 'scf',\n      action: 'ListFunctions',\n      responseField: 'Functions',\n    };\n  }\n\n  getRegions() {\n    return Promise.resolve(regionSupported);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return rawSet.filter(\n      (item) =>\n        /* hack：这里多加了筛选条件，是因为后端数据不准确，坑啊！ 只拿取包含functionName的指标 */\n        item.Dimensions?.[0]?.Dimensions?.includes('functionName') &&\n        item.Dimensions?.[0]?.Dimensions?.includes('namespace') &&\n        !item.MetricName.startsWith('Name')\n    );\n  }\n\n  getVersions(region, params) {\n    const serviceInfo = GetServiceAPIInfo(region, 'scf');\n    return this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: params,\n      },\n      serviceInfo.service,\n      { region, action: 'ListVersionByFunction' }\n    ).then((response) => {\n      return response.Versions;\n    });\n  }\n\n  async fetchMetricData(action: string, region: string, instance: any) {\n    // console.log({ action, region, instance });\n    if (action === 'ListVersionByFunction') {\n      const rs = await this.getVersions(region, { FunctionName: instance[this.templateQueryIdMap.instance] });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[this.templateQueryIdMap.version];\n        return {\n          text: o[this.templateQueryIdMap.version],\n          value: o[this.templateQueryIdMap.version],\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage.version, rs);\n      return result;\n    }\n    return [];\n  }\n}\n","import {\n  SQLSERVERInstanceAliasList,\n  SQLSERVERInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  regionSupported,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = SQLSERVERInstanceAliasList;\n  InvalidDimensions = SQLSERVERInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'sqlserver',\n    action: 'DescribeDBInstances',\n    responseField: 'DBInstances',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(rawSet.map((item) => modifyDimensons(item)));\n  }\n  getRegions() {\n    return Promise.resolve(regionSupported);\n  }\n  getFilterDropdown({ field, region }) {\n    if (field === 'Zone') {\n      const serviceInfo = GetServiceAPIInfo(region, 'cvm');\n      return this.doRequest(\n        {\n          url: this.url + serviceInfo.path,\n        },\n        serviceInfo.service,\n        { region, action: 'DescribeZones' }\n      ).then((response) => {\n        return _.filter(\n          _.map(response.ZoneSet || [], (item) => {\n            return { text: item.ZoneName, value: item.Zone, ZoneState: item.ZoneState, Zone: item.Zone };\n          }),\n          (item) => item.ZoneState === 'AVAILABLE'\n        );\n      });\n    }\n    return [];\n  }\n}\n","import {\n  TCAPLUSInstanceAliasList,\n  TCAPLUSInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  regonsMap,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = TCAPLUSInstanceAliasList;\n  InvalidDimensions = TCAPLUSInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'tcaplusdb',\n    action: 'DescribeTables',\n    responseField: 'TableInfos',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // 重写getRegion\n  getRegions() {\n    return this.doRequest(\n      {\n        url: this.url + '/tcaplusdb',\n      },\n      'tcaplusdb',\n      { action: 'DescribeRegions', region: 'ap-guangzhou' }\n    ).then((response) => {\n      return _.map(response.RegionInfos || [], (item) => {\n        return {\n          text: regonsMap[item.RegionName],\n          value: item.RegionName,\n        };\n      });\n    });\n  }\n}\n","import {\n  TDMQInstanceAliasList,\n  TDMQInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  regionSupported,\n  modifyDimensons,\n  queryMonitorExtraConfg,\n  keyInStorage,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport { fetchAllFactory } from '../../common/utils';\nimport instanceStorage from '../../common/datasourceStorage';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = TDMQInstanceAliasList;\n  InvalidDimensions = TDMQInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  queryMonitorExtraConfg = queryMonitorExtraConfg;\n  keyInStorage = keyInStorage;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'tdmq',\n    action: 'DescribeClusters',\n    responseField: 'ClusterSet',\n  };\n  extraActionMap = {\n    DescribeTopics: {\n      service: 'tdmq',\n      action: 'DescribeTopics',\n      responseField: 'TopicSets',\n      pickKey: 'topicName',\n    },\n    DescribeEnvironments: {\n      service: 'tdmq',\n      action: 'DescribeEnvironments',\n      responseField: 'EnvironmentSet',\n      pickKey: 'environmentId',\n    },\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  // getFilterDropdown({ field }) {\n  //   return super.getRegions();\n  // }\n  getRegions() {\n    return Promise.resolve(regionSupported);\n  }\n\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await super.getMetrics(region);\n    return _.compact(rawSet.map((item) => modifyDimensons(item)));\n  }\n\n  async getConsumerList(params: any) {\n    const { region, action: act, payload } = params;\n    const { service, action, responseField } = this.extraActionMap[act];\n\n    const serviceInfo = GetServiceAPIInfo(region, service);\n\n    // 从分页数据，获取全量数据\n    const rs = await fetchAllFactory(\n      (data) => {\n        return this.doRequest(\n          {\n            url: this.url + serviceInfo.path,\n            data,\n          },\n          serviceInfo.service,\n          { region, action }\n        );\n      },\n      payload,\n      responseField\n    );\n    // console.log({ rs });\n    return rs[0];\n  }\n  async fetchMetricData(action: string, region: string, instance: any, query: any) {\n    const payload: any = {\n      Limit: 100,\n      ClusterId: instance[this.templateQueryIdMap.instance],\n    };\n    if (Object.keys(this.extraActionMap).indexOf(action) !== -1) {\n      if (action === 'DescribeTopics') {\n        payload.EnvironmentId = this.getVariable(query['environmentid']);\n      }\n      const rs = await this.getConsumerList({ region, action, payload });\n      const { pickKey } = this.extraActionMap[action];\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[this.templateQueryIdMap[pickKey]];\n        return {\n          text: o[this.templateQueryIdMap[pickKey]],\n          value: o[this.templateQueryIdMap[pickKey]],\n        };\n      });\n      await instanceStorage.setExtraStorage(this.service, this.keyInStorage[pickKey], rs);\n      return result;\n    }\n    return [];\n  }\n}\n","import {\n  VCLBInstanceAliasList,\n  VCLBInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  clbNamespaceMap,\n  regionSupported,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\nimport { GetServiceAPIInfo } from '../../common/constants';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = VCLBInstanceAliasList;\n  InvalidDimensions = VCLBInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'clb',\n    action: 'DescribeLoadBalancers',\n    responseField: 'LoadBalancerSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  getRegions() {\n    return Promise.resolve(regionSupported);\n  }\n  async getAllMetrics(region: string) {\n    const serviceInfo = GetServiceAPIInfo(region, 'monitor');\n    const { MetricSet: public_metrics } = await this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: {\n          Namespace: clbNamespaceMap.public,\n        },\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeBaseMetrics' }\n    );\n    const { MetricSet: private_metrics } = await this.doRequest(\n      {\n        url: this.url + serviceInfo.path,\n        data: {\n          Namespace: clbNamespaceMap.private,\n        },\n      },\n      serviceInfo.service,\n      { region, action: 'DescribeBaseMetrics' }\n    );\n    console.log({ private_metrics, public_metrics });\n    const res = Object.values(_.keyBy(_.concat(private_metrics, public_metrics), 'MetricName'));\n    return res.map((t) => modifyDimensons(t));\n  }\n  async getMetrics(region = 'ap-guangzhou') {\n    const rawSet = await this.getAllMetrics(region);\n    return _.compact(rawSet);\n  }\n}\n","import { VBCInstanceAliasList, VBCInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = VBCInstanceAliasList;\n  InvalidDimensions = VBCInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeCcns',\n    responseField: 'CcnSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  getFilterDropdown({ field }) {\n    return super.getRegions();\n  }\n}\n","import {\n  VPCNETDETECTInstanceAliasList,\n  VPCNETInvalidDemensions,\n  namespace,\n  templateQueryIdMap,\n  modifyDimensons,\n} from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = VPCNETDETECTInstanceAliasList;\n  InvalidDimensions = VPCNETInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeNetDetects',\n    responseField: 'NetDetectSet',\n    interceptor: {\n      // response: (data: unknown[]) =>[\n      //   {\n      //     \"NetDetectId\": \"netd-12345678\",\n      //   },\n      // ],\n    },\n  };\n  MetricReqConfig = {\n    resultFilter: modifyDimensons,\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import { VPNGWInstanceAliasList, VPNGWInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\nimport { GetServiceAPIInfo } from '../../common/constants';\nimport _ from 'lodash';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = VPNGWInstanceAliasList;\n  InvalidDimensions = VPNGWInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeVpnGateways',\n    responseField: 'VpnGatewaySet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n\n  getFilterDropdown({ field, region }) {\n    if (field === 'zone') {\n      const serviceInfo = GetServiceAPIInfo(region, 'cvm');\n      return this.doRequest(\n        {\n          url: this.url + serviceInfo.path,\n        },\n        serviceInfo.service,\n        { region, action: 'DescribeZones' }\n      ).then((response) => {\n        return _.filter(\n          _.map(response.ZoneSet || [], (item) => {\n            return { text: item.ZoneName, value: item.Zone, ZoneState: item.ZoneState, Zone: item.Zone };\n          }),\n          (item) => item.ZoneState === 'AVAILABLE'\n        );\n      });\n    }\n    return [];\n  }\n}\n","import { VPNXInstanceAliasList, VPNXInvalidDemensions, namespace, templateQueryIdMap } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class DCDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = VPNXInstanceAliasList;\n  InvalidDimensions = VPNXInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  // 此处service是接口的配置参数，需和plugin.json里一致，和constant.ts中SERVICES_API_INFO保持一致\n  InstanceReqConfig = {\n    service: 'vpc',\n    action: 'DescribeVpnConnections',\n    responseField: 'VpnConnectionSet',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n}\n","import _ from 'lodash';\nimport { WAFInstanceAliasList, WAFInvalidDemensions, templateQueryIdMap, namespace } from './query_def';\nimport { BaseDatasource } from '../_base/datasource';\n\nexport default class CDNDatasource extends BaseDatasource {\n  Namespace = namespace;\n  InstanceAliasList = WAFInstanceAliasList;\n  InvalidDimensions = WAFInvalidDemensions;\n  templateQueryIdMap = templateQueryIdMap;\n  InstanceReqConfig = {\n    service: 'cdn',\n    action: 'DescribeDomains',\n    responseField: 'Domains',\n  };\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    super(instanceSettings, backendSrv, templateSrv);\n  }\n  async metricFindQuery(query: any, regex?: string) {\n    return super.metricFindQuery({ ...query, ...{ region: 'ap-guangzhou' } }, regex);\n  }\n}\n","import coreModule from 'grafana/app/core/core_module';\nimport { APIGATEWAYFilterFieldsDescriptor, templateQueryIdMap, queryEditorName, namespace } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.APIGATEWAYFilterFieldsDescriptor = APIGATEWAYFilterFieldsDescriptor;\n      $scope.namespace = namespace;\n    };\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      const service = GetServiceFromNamespace($scope.namespace);\n      // console.log({namespace, service});\n      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance)[templateQueryIdMap.instance];\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n    $scope.getExtraDropdown = async (target) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      const instanceId = $scope.getInstanceId();\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const rs = await $scope.datasource.getServiceFn(service, 'getEnvironmentNameList')({ region, instanceId });\n\n      const result = rs.map((o) => {\n        return {\n          text: o.EnvironmentName,\n          value: JSON.stringify(o),\n        };\n      });\n      return result;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/45073\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in APIGATEWAYFilterFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputNumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />    \n      <multi-condition\n        ng-if=\"field.type === 'inputNumberMulti'\"\n        type=\"'inputNumber'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        maxNum=\"field.max\"\n        minNum=\"field.min\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputMulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- 起始区域 目的区域等 -->\n  <div>\n    <div class=\"gf-form-inline\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">EnvironmentName</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target.EnvironmentName\" allow-custom=\"true\" lookup-text=\"true\"  get-options=\"getExtraDropdown(target)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive(queryEditorName, sQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { BWPFilterFieldsDescriptor } from './query_def';\n\nexport class BWPQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.BWPFilterFieldsDescriptor = BWPFilterFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        case 'zone':\n          return $scope.getZones();\n        default:\n          return [];\n      }\n    };\n\n    $scope.getZones = () => {\n      if (!$scope.region) {\n        return [];\n      }\n      return $scope.datasource.getZones('cvm', $scope.region);\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/213/15728\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        单次请求返回的数量，默认为20，最小值为1，最大值为100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      BandwidthPackageIds\n      <info-popover mode=\"right-normal\">\n        带宽包唯一ID列表，参数不支持同时指定 BandwidthPackageIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n      switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n  <multi-condition type=\"'input'\" max-cond=\"100\" value=\"target.queries.BandwidthPackageIds\" on-change=\"onChange()\">\n  </multi-condition>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      Filters\n      <info-popover mode=\"right-normal\">\n        过滤条件，每次请求的 Filters 的上限为10，Filter.Values 的上限为5。参数不支持同时指定 BandwidthPackageIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n      on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n  <div class=\"gf-form-inline\" ng-repeat=\"field in BWPFilterFieldsDescriptor\">\n    <label class=\"gf-form-label width-14\">\n      {{ field.key }}\n      <info-popover mode=\"right-normal\">\n        {{ field.cnDescriptor }}\n        <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n      </info-popover>\n    </label>\n    <multi-condition\n      ng-if=\"field.type === 'dropdownmulti'\"\n      type=\"'dropdown'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      get-options=\"getDropdown(field.key)\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputNumbermulti'\"\n      type=\"'inputNumber'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      maxNum=\"field.max\"\n      minNum=\"field.min\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputmulti'\"\n      type=\"'input'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <custom-select-dropdown\n      ng-if=\"field.type === 'select'\"\n      value=\"target.queries.Filters[field.key]\"\n      options=\"field.list\"\n      multiple=\"true\"\n      on-change=\"onChange()\"\n    ></custom-select-dropdown>\n  </div>\n</div>\n\n</div>\n`;\n\nexport function bwpQuery() {\n  return {\n    template: template,\n    controller: BWPQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('bwpQuery', bwpQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { CDBFieldsDescriptor } from './query_def';\n\nexport class CDBQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.CDBFieldsDescriptor = CDBFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        case 'ZoneIds':\n          return $scope.getZones();\n        default:\n          return [];\n      }\n    };\n\n    $scope.getZones = () => {\n      if (!$scope.region) {\n        return [];\n      }\n      return $scope.datasource.getZones('cdb', $scope.region);\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/236/15872\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in CDBFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n`;\n\nexport function cdbQuery() {\n  return {\n    template: template,\n    controller: CDBQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('cdbQuery', cdbQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { CDNFilterFieldsDescriptor } from './query_def';\n\nexport class CDNQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.CDNFilterFieldsDescriptor = CDNFilterFieldsDescriptor;\n    };\n\n    // $scope.onChecked = (srcField, dstField) => {\n    //   if ($scope.target.queries[srcField] === true) {\n    //     $scope.target.queries[dstField] = false;\n    //   }\n    //   $scope.onChange();\n    // };\n\n    // $scope.getDropdown = (field) => {\n    //   switch (field) {\n    //     case 'zone':\n    //       return $scope.getZones();\n    //     default:\n    //       return [];\n    //   }\n    // };\n\n    // $scope.getZones = () => {\n    //   if (!$scope.region) {\n    //     return [];\n    //   }\n    //   return $scope.datasource.getZones('cvm', $scope.region);\n    // };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/228/41118\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        单次请求返回的数量，默认为20，最小值为1，最大值为100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\" ng-repeat=\"field in CDNFilterFieldsDescriptor\">\n<label class=\"gf-form-label width-14\">\n  {{ field.key }}\n  <info-popover mode=\"right-normal\">\n    {{ field.cnDescriptor }}\n    <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n  </info-popover>\n</label>\n<multi-condition\n  ng-if=\"field.type === 'inputNumbermulti'\"\n  type=\"'inputNumber'\"\n  max-cond=\"5\"\n  value=\"target.queries.Filters[field.key]\"\n  maxNum=\"field.max\"\n  minNum=\"field.min\"\n  on-change=\"onChange()\"\n></multi-condition>\n<multi-condition\n  ng-if=\"field.type === 'inputmulti'\"\n  type=\"'input'\"\n  max-cond=\"5\"\n  value=\"target.queries.Filters[field.key]\"\n  on-change=\"onChange()\"\n></multi-condition>\n<custom-select-dropdown\n  ng-if=\"field.type === 'select'\"\n  value=\"target.queries.Filters[field.key]\"\n  options=\"field.list\"\n  multiple=\"true\"\n  on-change=\"onChange()\"\n></custom-select-dropdown>\n</div>\n\n</div>\n`;\n\nexport function cdnQuery() {\n  return {\n    template: template,\n    controller: CDNQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('cdnQuery', cdnQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { CDNPROVINCEFilterFieldsDescriptor, queryEditorName, namespace } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nconst ExtraFields = [\n  {\n    label: 'Isp',\n    field: 'isp',\n  },\n  {\n    label: 'Province',\n    field: 'district',\n  },\n];\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.CDNPROVINCEFilterFieldsDescriptor = CDNPROVINCEFilterFieldsDescriptor;\n      $scope.ExtraFields = ExtraFields;\n      $scope.namespace = namespace;\n    };\n\n    $scope.getExtraDropdown = async (target, field) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const rs = await $scope.datasource.getServiceFn(service, 'getConsumerList')({ region, field });\n      return rs;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Domains are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/228/41118\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\" ng-repeat=\"field in CDNPROVINCEFilterFieldsDescriptor\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <input\n          ng-if=\"field.type === 'inputNumber'\"\n          style=\"margin-right:2px\"\n          type=\"number\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n          ng-min=\"field.min\"\n          ng-max=\"field.max\"\n        />\n        <input\n          ng-if=\"field.type === 'input'\"\n          style=\"margin-right:2px\"\n          type=\"text\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n        />    \n        <multi-condition\n          ng-if=\"field.type === 'inputNumberMulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputMulti'\"\n          type=\"'input'\"\n          value=\"target.queries[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries[field.key]\"\n          options=\"field.list\"\n          multiple=\"field.multiple || false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n\n<!-- 起始区域 目的区域等 -->\n  <div\">\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in ExtraFields\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(target, extra.field)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive(queryEditorName, sQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { CFSQueryDescriptor } from './query_def';\n\nexport class SCFQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.CFSQueryDescriptor = CFSQueryDescriptor;\n    };\n\n    $scope.getVersions = async (target) => {\n      // console.log(2222);\n\n      // return [{ text: 1, value: 1 }];\n      // console.log(target, 'target');\n      const { instance, region } = target;\n      const fetcher = $scope.datasource.getServiceFn('scf', 'getVersions');\n      if (!instance || !region) return [];\n\n      return fetcher(region, { FunctionName: JSON.parse(instance).FunctionName }).then((res) => {\n        // console.log(res, 'res');\n\n        return res;\n      });\n    };\n    // $scope.onChecked = (srcField, dstField) => {\n    //   if ($scope.target.queries[srcField] === true) {\n    //     $scope.target.queries[dstField] = false;\n    //   }\n    //   $scope.onChange();\n    // };\n\n    // $scope.getDropdown = (field) => {\n    //   switch (field) {\n    //     case 'zone':\n    //       return $scope.getZones();\n    //     default:\n    //       return [];\n    //   }\n    // };\n\n    // $scope.getZones = () => {\n    //   if (!$scope.region) {\n    //     return [];\n    //   }\n    //   return $scope.datasource.getZones('cvm', $scope.region);\n    // };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n  FileSystems are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/582/38170\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in CFSQueryDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n  </div>\n`;\n\nexport function scfQuery() {\n  return {\n    template: template,\n    controller: SCFQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\ncoreModule.directive('cfsQuery', scfQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { CKAFKAQueryDescriptor } from './query_def';\n\nconst ExtraFields = [\n  {\n    label: 'TopicId',\n    field: 'topicId',\n  },\n  {\n    label: 'ConsumerGroup',\n    field: 'consumerGroup',\n  },\n  {\n    label: 'Partition',\n    field: 'partition',\n  },\n];\n\nexport class CKAFKAQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.CKAFKAQueryDescriptor = CKAFKAQueryDescriptor;\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        default:\n          return [];\n      }\n    };\n\n    // 各个实例下的消费分组信息，由于不想每次都重复发请求，所以这里做了一层缓存，数据结构为{ [instanceId]: { TopicList, GroupList  } }\n    $scope.consumerGroupCacheMap = {};\n\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}));\n    };\n\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      instance = $scope.datasource.getServiceFn('ckafka', 'getVariable')(instance);\n      if (Array.isArray(instance)) instance = instance[0];\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance).InstanceId;\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n\n    $scope.getExtraDropdown = async (target, field) => {\n      const InstanceId = $scope.getInstanceId();\n      let data = $scope.consumerGroupCacheMap[InstanceId];\n\n      if (!data) {\n        const fetcher = $scope.datasource.getServiceFn('ckafka', 'getConsumerGroups');\n        const region = $scope.datasource.getServiceFn('ckafka', 'getVariable')(target.region);\n        const res = await fetcher(region, { InstanceId });\n\n        const { TopicList, GroupList, PartitionList } = res;\n        data = {\n          TopicList: TopicList.map((topic) => {\n            topic._InstanceAliasValue = topic.TopicId;\n            return {\n              text: topic.TopicId,\n              value: JSON.stringify(topic), // 为了获取多维度的值，这里完全可以使用JSON.stringify()将整个对象放进去\n            };\n          }),\n          GroupList: GroupList.map((group) => {\n            group._InstanceAliasValue = group.GroupName;\n            return {\n              text: group.GroupName,\n              value: JSON.stringify(group),\n            };\n          }),\n          PartitionList: PartitionList.map((par) => {\n            par._InstanceAliasValue = par.Partition;\n            return {\n              text: par.Partition,\n              value: JSON.stringify(par),\n            };\n          }),\n        };\n      }\n      // 缓存\n      $scope.consumerGroupCacheMap[InstanceId] = data;\n\n      // console.log(data, field, 'daata--');\n\n      switch (field) {\n        case 'topicId':\n          return data.TopicList;\n        case 'consumerGroup':\n          return data.GroupList;\n        case 'partition':\n          return data.PartitionList;\n      }\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/583/18582\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in CKAFKAQueryDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- 主题，消费分组，分区 -->\n  <div ng-if=\"target.instance\">\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getExtraDropdown(target, extra.field)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  </div>\n`;\n\nexport function scfQuery() {\n  return {\n    template: template,\n    controller: CKAFKAQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive('ckafkaQuery', scfQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { LOADBALANCEFieldsDescriptor, templateQueryIdMap, namespace } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.LOADBALANCEFieldsDescriptor = LOADBALANCEFieldsDescriptor;\n      $scope.namespace = namespace;\n    };\n    $scope.onFieldChange = (field) => {\n      $scope.onRefresh();\n    };\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      const service = GetServiceFromNamespace($scope.namespace);\n      // console.log({namespace, service});\n      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance)[templateQueryIdMap.instance];\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n    $scope.getExtraDropdown = async (target) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      const instanceId = $scope.getInstanceId();\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const rs = await $scope.datasource.getServiceFn(service, 'getListenerList')({ region, instanceId });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[templateQueryIdMap.listener];\n        return {\n          text: o[templateQueryIdMap.listener],\n          value: JSON.stringify(o),\n        };\n      });\n      return result;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/214/30685\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in LOADBALANCEFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputNumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputNumberMulti'\"\n        type=\"'inputNumber'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        maxNum=\"field.max\"\n        minNum=\"field.min\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputMulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n</div>\n\n<!--Listener维度部分-->\n<div class=\"gf-form-inline\" ng-if=\"target.instance\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label query-keyword width-9\">\n      Listeners\n      <info-popover mode=\"right-normal\">\n        可不选择监听器，这时通过实例维度查询监控数据\n      </info-popover>\n    </label>\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n      <gf-form-dropdown model=\"target.listener\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getExtraDropdown(target)\"\n        on-change=\"onRefresh()\" css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n  </div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive('clbQuery', sQuery);\n","import createQuery from '../_base/query';\nimport { InstanceQueryDescriptor } from './query_def';\n\ncreateQuery('cmqQuery', {\n  fieldDescriptor: InstanceQueryDescriptor,\n  instanceDocUrl: 'https://cloud.tencent.com/document/api/406/42624',\n  namespace: 'QCE/CMQ',\n});\n","import coreModule from 'grafana/app/core/core_module';\nimport { InstanceQueryDescriptor } from './query_def';\n\nconst ExtraFields = [\n  {\n    label: 'Subscription(订阅)',\n    field: 'subscriptionId',\n  },\n];\n\nexport class CmqTopicQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.InstanceQueryDescriptor = InstanceQueryDescriptor;\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        default:\n          return [];\n      }\n    };\n\n    // 各个实例下的订阅，由于不想每次都重复发请求，所以这里做了一层缓存，数据结构为{ [instanceId]: {   } }\n    $scope.cacheMap = {};\n\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}));\n    };\n\n    $scope.getTopicName = () => {\n      let { instance } = $scope.target;\n      instance = $scope.datasource.getServiceFn('cmqTopic', 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance).TopicName;\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n\n    $scope.onExtraFieldChange = (field) => {\n      $scope.onRefresh();\n    };\n\n    $scope.getExtraDropdown = async (target, field) => {\n      if (field === 'subscriptionId') {\n        const TopicName = $scope.getTopicName();\n        let data = $scope.cacheMap[TopicName];\n\n        if (!data) {\n          const region = $scope.datasource.getServiceFn('cmqTopic', 'getVariable')(target.region);\n          const fetcher = $scope.datasource.getServiceFn('cmqTopic', 'fetchAllSubscription');\n          const datas = await fetcher(region, { TopicName });\n          data = datas.map((item) => {\n            item._InstanceAliasValue = item.SubscriptionId;\n            return { text: item.SubscriptionId, value: JSON.stringify(item) };\n          });\n        }\n\n        // 缓存\n        $scope.cacheMap[TopicName] = data;\n        return data;\n      }\n      return [];\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/406/42637\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in InstanceQueryDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- 主题的ui -->\n  <div ng-if=\"target.instance\">\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"true\" get-options=\"getExtraDropdown(target, extra.field)\"\n            on-change=\"onExtraFieldChange(extra.field)\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  </div>\n`;\n\nexport function scfQuery() {\n  return {\n    template: template,\n    controller: CmqTopicQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive('cmqTopicQuery', scfQuery);\n","import _ from 'lodash';\n\nfunction GetInstanceQueryParams(queries: any = {}) {\n  const params: any = {};\n  if (!_.isEmpty(queries)) {\n    params.Limit = _.get(queries, 'Limit', 20) || 20;\n    params.Offset = _.get(queries, 'Offset', 0) || 0;\n    queries = _.omit(queries, ['Offset', 'Limit']);\n    _.forEach(queries, (item: any, key) => {\n      if (_.isArray(item)) {\n        item = _.compact(item);\n        if (item.length > 0) {\n          params[key] = _.uniq(item);\n        }\n      } else if (_.isObject(item)) {\n        if (_.isNumber(_.get(item, 'value', undefined)) || !_.isEmpty(_.get(item, 'value', undefined))) {\n          params[key] = _.get(item, 'value');\n        }\n      } else if (_.isNumber(item) || !_.isEmpty(item)) {\n        params[key] = item;\n      }\n    });\n  }\n  return params;\n}\n\n// 与名称挂钩的变量\nconst InstanceAliasList = ['BucketName'];\nexport { InstanceAliasList, GetInstanceQueryParams };\n\n// 界面状态模型，default\nexport default {\n  region: '',\n  metricName: '',\n  metricUnit: '',\n  period: undefined,\n  dimensionObject: null,\n  instance: '',\n  instanceAlias: 'BucketName',\n  queries: {},\n};\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { CVMFilterFieldsDescriptor } from './query_def';\n\nexport class CVMQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.CVMFilterFieldsDescriptor = CVMFilterFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        case 'zone':\n          return $scope.getZones();\n        default:\n          return [];\n      }\n    };\n\n    $scope.getZones = () => {\n      if (!$scope.region) {\n        return [];\n      }\n      return $scope.datasource.getZones('cvm', $scope.region);\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/213/15728\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        单次请求返回的数量，默认为20，最小值为1，最大值为100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      InstanceIds\n      <info-popover mode=\"right-normal\">\n        实例 ID，每次请求的实例的上限为100，参数不支持同时指定 InstanceIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n      switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n  <multi-condition type=\"'input'\" max-cond=\"100\" value=\"target.queries.InstanceIds\" on-change=\"onChange()\">\n  </multi-condition>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      Filters\n      <info-popover mode=\"right-normal\">\n        过滤条件，每次请求的 Filters 的上限为10，Filter.Values 的上限为5。参数不支持同时指定 InstanceIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n      on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n  <div class=\"gf-form-inline\" ng-repeat=\"field in CVMFilterFieldsDescriptor\">\n    <label class=\"gf-form-label width-14\">\n      {{ field.key }}\n      <info-popover mode=\"right-normal\">\n        {{ field.cnDescriptor }}\n        <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n      </info-popover>\n    </label>\n    <multi-condition\n      ng-if=\"field.type === 'dropdownmulti'\"\n      type=\"'dropdown'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      get-options=\"getDropdown(field.key)\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputNumbermulti'\"\n      type=\"'inputNumber'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      maxNum=\"field.max\"\n      minNum=\"field.min\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputmulti'\"\n      type=\"'input'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <custom-select-dropdown\n      ng-if=\"field.type === 'select'\"\n      value=\"target.queries.Filters[field.key]\"\n      options=\"field.list\"\n      multiple=\"true\"\n      on-change=\"onChange()\"\n    ></custom-select-dropdown>\n  </div>\n</div>\n\n</div>\n`;\n\nexport function cvmQuery() {\n  return {\n    template: template,\n    controller: CVMQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('cvmQuery', cvmQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { DCDBFilterFieldsDescriptor, queryEditorName, namespace, templateQueryIdMap } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nconst ExtraFields = [\n  {\n    label: 'nodeid',\n    field: 'NodeId',\n    action: 'DescribeDCDBInstanceNodeInfo',\n  },\n  {\n    label: 'shardid',\n    field: 'ShardId',\n    action: 'DescribeDCDBShards',\n  },\n];\nconst dropdownTextConfig = {\n  DescribeDCDBInstanceNodeInfo: 'NodeId',\n  DescribeDCDBShards: 'ShardInstanceId',\n};\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.DCDBFilterFieldsDescriptor = DCDBFilterFieldsDescriptor;\n      $scope.ExtraFields = ExtraFields;\n      $scope.namespace = namespace;\n    };\n\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      const service = GetServiceFromNamespace($scope.namespace);\n      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance)[templateQueryIdMap.instance];\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}) || item.label in ($scope.dims ?? {}));\n    };\n    $scope.getExtraDropdown = async (target, action) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const instanceId = $scope.getInstanceId();\n      const payload: any = {\n        InstanceId: instanceId,\n        Limit: 100,\n      };\n      const rs = await $scope.datasource.getServiceFn(service, 'getConsumerList')({ region, action, payload });\n\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[templateQueryIdMap[dropdownTextConfig[action]]];\n        return {\n          text: o[templateQueryIdMap[dropdownTextConfig[action]]],\n          value: JSON.stringify(o),\n        };\n      });\n      return result;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Functions are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/50388\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\" ng-repeat=\"field in DCDBFilterFieldsDescriptor\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <input\n          ng-if=\"field.type === 'inputNumber'\"\n          style=\"margin-right:2px\"\n          type=\"number\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n          ng-min=\"field.min\"\n          ng-max=\"field.max\"\n        />\n        <input\n          ng-if=\"field.type === 'input'\"\n          style=\"margin-right:2px\"\n          type=\"text\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n        />    \n        <multi-condition\n          ng-if=\"field.type === 'inputNumberMulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputMulti'\"\n          type=\"'input'\"\n          value=\"target.queries[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries[field.key]\"\n          options=\"field.list\"\n          multiple=\"field.multiple || false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n\n<!-- 起始区域 目的区域等 -->\n  <div\">\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(target, extra.action)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive(queryEditorName, sQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { ECMBLOCKSTORAGEFilterFieldsDescriptor, queryEditorName, namespace, templateQueryIdMap } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nconst ExtraFields = [\n  // {\n  //   label: 'nodeid',\n  //   field: 'NodeId',\n  //   action: 'DescribeInstanceNodeInfo',\n  // },\n  {\n    label: 'diskId',\n    field: 'diskId',\n  },\n];\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.ECMBLOCKSTORAGEFilterFieldsDescriptor = ECMBLOCKSTORAGEFilterFieldsDescriptor;\n      $scope.ExtraFields = ExtraFields;\n      $scope.namespace = namespace;\n    };\n\n    // $scope.getInstanceId = () => {\n    //   let { instance } = $scope.target;\n    //   const service = GetServiceFromNamespace($scope.namespace);\n    //   instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n    //   if (!instance) {\n    //     return '';\n    //   }\n    //   try {\n    //     instance = JSON.parse(instance)[templateQueryIdMap.instance];\n    //   } catch (error) {\n    //     console.log();\n    //   }\n    //   return instance;\n    // };\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}) || item.label in ($scope.dims ?? {}));\n    };\n    $scope.getExtraDropdown = (target, action) => {\n      let { instance } = target;\n      const service = GetServiceFromNamespace($scope.namespace);\n      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n      try {\n        instance = JSON.parse(instance);\n        const { DataDisks: dataDisks } = instance;\n        return dataDisks.map((o) => {\n          o._InstanceAliasValue = o[templateQueryIdMap.diskId];\n          return {\n            text: o[templateQueryIdMap.diskId],\n            value: JSON.stringify(o),\n          };\n        });\n      } catch (error) {\n        // console.log('instance error', instance);\n        const payload: any = {\n          InstanceId: instance,\n        };\n        const rs = $scope.datasource.getServiceFn(service, 'getDiskList')({ payload });\n        const result = rs.map((o) => {\n          return {\n            text: o[templateQueryIdMap.diskId],\n            value: JSON.stringify(o),\n          };\n        });\n        return result;\n      }\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Functions are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/50388\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\" ng-repeat=\"field in ECMBLOCKSTORAGEFilterFieldsDescriptor\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <input\n          ng-if=\"field.type === 'inputNumber'\"\n          style=\"margin-right:2px\"\n          type=\"number\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n          ng-min=\"field.min\"\n          ng-max=\"field.max\"\n        />\n        <input\n          ng-if=\"field.type === 'input'\"\n          style=\"margin-right:2px\"\n          type=\"text\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n        />    \n        <multi-condition\n          ng-if=\"field.type === 'inputNumberMulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputMulti'\"\n          type=\"'input'\"\n          value=\"target.queries[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries[field.key]\"\n          options=\"field.list\"\n          multiple=\"field.multiple || false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n\n<!-- 起始区域 目的区域等 -->\n  <div\">\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(target)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive(queryEditorName, sQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { GSEFilterFieldsDescriptor, templateQueryIdMap, queryEditorName, namespace } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nconst ExtraFields = [\n  {\n    label: 'fleetId',\n    field: 'FleetId',\n  },\n  {\n    label: 'queueName',\n    field: 'Name',\n  },\n];\nconst actionMaps = {\n  FleetId: 'getFleetList',\n  Name: 'getQueueNameList',\n};\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.GSEFilterFieldsDescriptor = GSEFilterFieldsDescriptor;\n      $scope.namespace = namespace;\n    };\n\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}));\n    };\n\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      const service = GetServiceFromNamespace($scope.namespace);\n      // console.log({namespace, service});\n      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance)[templateQueryIdMap.instance];\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n    $scope.getExtraDropdown = async (target, field) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      const instanceId = $scope.getInstanceId();\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      // const rs = await $scope.datasource.getServiceFn(service, 'getEnvironmentNameList')({ region, instanceId });\n      let rs = await $scope.datasource.getServiceFn(service, actionMaps[field])({ region, instanceId });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[templateQueryIdMap[field]];\n        return {\n          text: o[templateQueryIdMap[field]],\n          value: JSON.stringify(o),\n        };\n      });\n      return result;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/45073\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in GSEFilterFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputNumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />    \n      <multi-condition\n        ng-if=\"field.type === 'inputNumberMulti'\"\n        type=\"'inputNumber'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        maxNum=\"field.max\"\n        minNum=\"field.min\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputMulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- 起始区域 目的区域等 -->\n<div>\n  <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n      <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n        <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getExtraDropdown(target, extra.field)\"\n          on-change=\"onRefresh()\" css-class=\"min-width-10\">\n        </gf-form-dropdown>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive(queryEditorName, sQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { LBFilterDescriptor } from './query_def';\n\nexport class LBQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      // $scope.LBQueryDescriptor = LBQueryDescriptor;\n      $scope.LBFilterDescriptor = LBFilterDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        case 'zone':\n          return $scope.getZones();\n        default:\n          return [];\n      }\n    };\n\n    $scope.getZones = () => {\n      if (!$scope.region) {\n        return [];\n      }\n      return $scope.datasource.getZones('cvm', $scope.region);\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/215/16702\">Click here to get API doc.</a>\n</label>\n\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        单次请求返回的数量，默认为20，最小值为1，最大值为100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      AddressIds\n      <info-popover mode=\"right-normal\">\n        实例 ID，每次请求的实例的上限为100，参数不支持同时指定 AddressIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n      switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n  <multi-condition type=\"'input'\" max-cond=\"100\" value=\"target.queries.AddressIds\" on-change=\"onChange()\">\n  </multi-condition>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      Filters\n      <info-popover mode=\"right-normal\">\n        过滤条件，每次请求的 Filters 的上限为10，Filter.Values 的上限为5。参数不支持同时指定 AddressIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n      on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n  </div>\n</div>\n\n<!--Filters部分-->\n<div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n  <div class=\"gf-form-inline\" ng-repeat=\"field in LBFilterDescriptor\">\n    <label class=\"gf-form-label width-14\">\n      {{ field.key }}\n      <info-popover mode=\"right-normal\">\n        {{ field.cnDescriptor }}\n        <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n      </info-popover>\n    </label>\n    <multi-condition\n      ng-if=\"field.type === 'dropdownmulti'\"\n      type=\"'dropdown'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      get-options=\"getDropdown(field.key)\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputNumbermulti'\"\n      type=\"'inputNumber'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      maxNum=\"field.max\"\n      minNum=\"field.min\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputmulti'\"\n      type=\"'input'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <custom-select-dropdown\n      ng-if=\"field.type === 'select'\"\n      value=\"target.queries.Filters[field.key]\"\n      options=\"field.list\"\n      multiple=\"true\"\n      on-change=\"onChange()\"\n    ></custom-select-dropdown>\n  </div>\n</div>\n\n</div>\n`;\n\nexport function lbQuery() {\n  return {\n    template: template,\n    controller: LBQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('lbQuery', lbQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { MONGODBFieldsDescriptor } from './query_def';\n\nexport class MongoDBQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.MONGODBFieldsDescriptor = MONGODBFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        default:\n          return [];\n      }\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/240/35769\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in MONGODBFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <gf-form-dropdown\n        ng-if=\"field.type === 'dropdown'\"\n        model=\"target.queries[field.key]\"\n        allow-custom=\"true\"\n        lookup-text=\"true\"\n        get-options=\"getDropdown(field.key)\"\n        on-change=\"onChange()\"\n        css-class=\"min-width-10\"\n      ></gf-form-dropdown>\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n\n</div>\n`;\n\nexport function mongodbQuery() {\n  return {\n    template: template,\n    controller: MongoDBQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('mongodbQuery', mongodbQuery);\n","import { InstanceQueryDescriptor } from './query_def';\nimport coreModule from 'grafana/app/core/core_module';\n\nconst ExtraFields = [\n  {\n    label: 'NodeIP',\n    field: 'nodeIP',\n  },\n];\n\nexport class MrQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.InstanceQueryDescriptor = InstanceQueryDescriptor;\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        default:\n          return [];\n      }\n    };\n\n    // 各个实例下的订阅，由于不想每次都重复发请求，所以这里做了一层缓存，数据结构为{ [instanceId]: {   } }\n    $scope.cacheMap = {};\n\n    $scope.getExtraFields = () => {\n      return Object.keys($scope.dims ?? {}).some((item: string) => item.startsWith('host4')) ? ExtraFields : [];\n      // return ExtraFields;\n    };\n\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      instance = $scope.datasource.getServiceFn('mrHDFS', 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance).ClusterId;\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n\n    $scope.onExtraFieldChange = (field) => {\n      $scope.onRefresh();\n    };\n\n    $scope.getExtraDropdown = async (target, field) => {\n      if (field === 'nodeIP') {\n        const InstanceId = $scope.getInstanceId();\n        let data = $scope.cacheMap[InstanceId];\n\n        if (!data) {\n          const region = $scope.datasource.getServiceFn('mrHDFS', 'getVariable')(target.region);\n          const fetcher = $scope.datasource.getServiceFn('mrHDFS', 'fetchAllNodes');\n          data = await fetcher(region, { InstanceId, NodeFlag: 'all' });\n        }\n\n        // 缓存\n        $scope.cacheMap[InstanceId] = data;\n        return data;\n      }\n      return [];\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/589/34266\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in InstanceQueryDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n<!-- 主题的ui -->\n  <div ng-if=\"target.instance\">\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(target, extra.field)\"\n            on-change=\"onExtraFieldChange(extra.field)\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  </div>\n`;\n\nexport function mrQuery() {\n  return {\n    template: template,\n    controller: MrQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive('mrQuery', mrQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { NATGatewayFilterFieldsDescriptor } from './query_def';\n\nexport class NatGatewayQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.NATGatewayFilterFieldsDescriptor = NATGatewayFilterFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        default:\n          return [];\n      }\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/215/36034\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        单次请求返回的数量，默认为20，最小值为1，最大值为100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-10\">\n      NatGatewayIds\n      <info-popover mode=\"right-normal\">\n        NAT网关统一 ID，参数不支持同时指定 NatGatewayIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n      switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n  <multi-condition type=\"'input'\" value=\"target.queries.NatGatewayIds\" on-change=\"onChange()\">\n  </multi-condition>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-10\">\n      Filters\n      <info-popover mode=\"right-normal\">\n        过滤条件，参数不支持同时指定NatGatewayIds和Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n      on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n  <div class=\"gf-form-inline\" ng-repeat=\"field in NATGatewayFilterFieldsDescriptor\">\n    <label class=\"gf-form-label width-14\">\n      {{ field.key }}\n      <info-popover mode=\"right-normal\">\n        {{ field.cnDescriptor }}\n        <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n      </info-popover>\n    </label>\n    <multi-condition\n      ng-if=\"field.type === 'dropdownmulti'\"\n      type=\"'dropdown'\"\n      value=\"target.queries.Filters[field.key]\"\n      get-options=\"getDropdown(field.key)\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputNumbermulti'\"\n      type=\"'inputNumber'\"\n      value=\"target.queries.Filters[field.key]\"\n      maxNum=\"field.max\"\n      minNum=\"field.min\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputmulti'\"\n      type=\"'input'\"\n      value=\"target.queries.Filters[field.key]\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <custom-select-dropdown\n      ng-if=\"field.type === 'select'\"\n      value=\"target.queries.Filters[field.key]\"\n      options=\"field.list\"\n      multiple=\"true\"\n      on-change=\"onChange()\"\n    ></custom-select-dropdown>\n  </div>\n</div>\n\n</div>\n`;\n\nexport function natGatewayQuery() {\n  return {\n    template: template,\n    controller: NatGatewayQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('natGatewayQuery', natGatewayQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { OVCDNFilterFieldsDescriptor } from './query_def';\n\nexport class OVCDNQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.OVCDNFilterFieldsDescriptor = OVCDNFilterFieldsDescriptor;\n    };\n\n    // $scope.onChecked = (srcField, dstField) => {\n    //   if ($scope.target.queries[srcField] === true) {\n    //     $scope.target.queries[dstField] = false;\n    //   }\n    //   $scope.onChange();\n    // };\n\n    // $scope.getDropdown = (field) => {\n    //   switch (field) {\n    //     case 'zone':\n    //       return $scope.getZones();\n    //     default:\n    //       return [];\n    //   }\n    // };\n\n    // $scope.getZones = () => {\n    //   if (!$scope.region) {\n    //     return [];\n    //   }\n    //   return $scope.datasource.getZones('cvm', $scope.region);\n    // };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/213/15728\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        单次请求返回的数量，默认为20，最小值为1，最大值为100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\" ng-repeat=\"field in OVCDNFilterFieldsDescriptor\">\n<label class=\"gf-form-label width-14\">\n  {{ field.key }}\n  <info-popover mode=\"right-normal\">\n    {{ field.cnDescriptor }}\n    <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n  </info-popover>\n</label>\n<multi-condition\n  ng-if=\"field.type === 'inputNumbermulti'\"\n  type=\"'inputNumber'\"\n  max-cond=\"5\"\n  value=\"target.queries.Filters[field.key]\"\n  maxNum=\"field.max\"\n  minNum=\"field.min\"\n  on-change=\"onChange()\"\n></multi-condition>\n<multi-condition\n  ng-if=\"field.type === 'inputmulti'\"\n  type=\"'input'\"\n  max-cond=\"5\"\n  value=\"target.queries.Filters[field.key]\"\n  on-change=\"onChange()\"\n></multi-condition>\n<custom-select-dropdown\n  ng-if=\"field.type === 'select'\"\n  value=\"target.queries.Filters[field.key]\"\n  options=\"field.list\"\n  multiple=\"true\"\n  on-change=\"onChange()\"\n></custom-select-dropdown>\n</div>\n\n</div>\n`;\n\nexport function ovCdnQuery() {\n  return {\n    template: template,\n    controller: OVCDNQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('ovCdnQuery', ovCdnQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { PCXFieldsDescriptor } from './query_def';\n\nexport class PCXQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.PCXFieldsDescriptor = PCXFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        case 'vpcId':\n          return $scope.getVpcIds();\n        default:\n          return [];\n      }\n    };\n\n    $scope.getVpcIds = () => {\n      if (!$scope.region) {\n        return [];\n      }\n      return $scope.datasource.getVpcIds('pcx', $scope.region);\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/215/2101\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in PCXFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <gf-form-dropdown\n        ng-if=\"field.type === 'dropdown'\"\n        model=\"target.queries[field.key]\"\n        allow-custom=\"true\"\n        lookup-text=\"true\"\n        get-options=\"getDropdown(field.key)\"\n        on-change=\"onChange()\"\n        css-class=\"min-width-10\"\n      ></gf-form-dropdown>\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n\n</div>\n`;\n\nexport function pcxQuery() {\n  return {\n    template: template,\n    controller: PCXQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('pcxQuery', pcxQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { RedisFieldsDescriptor } from './query_def';\n\nexport class RedisQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.RedisFieldsDescriptor = RedisFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        default:\n          return [];\n      }\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/240/35769\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in RedisFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <gf-form-dropdown\n        ng-if=\"field.type === 'dropdown'\"\n        model=\"target.queries[field.key]\"\n        allow-custom=\"true\"\n        lookup-text=\"true\"\n        get-options=\"getDropdown(field.key)\"\n        on-change=\"onChange()\"\n        css-class=\"min-width-10\"\n      ></gf-form-dropdown>\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n\n</div>\n`;\n\nexport function redisQuery() {\n  return {\n    template: template,\n    controller: RedisQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('redisQuery', redisQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { RedisMemFieldsDescriptor } from './query_def';\n\nexport class RedisMemQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.RedisMemFieldsDescriptor = RedisMemFieldsDescriptor;\n    };\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.getDropdown = (field) => {\n      switch (field) {\n        default:\n          return [];\n      }\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Instances are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/240/35769\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in RedisMemFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <gf-form-dropdown\n        ng-if=\"field.type === 'dropdown'\"\n        model=\"target.queries[field.key]\"\n        allow-custom=\"true\"\n        lookup-text=\"true\"\n        get-options=\"getDropdown(field.key)\"\n        on-change=\"onChange()\"\n        css-class=\"min-width-10\"\n      ></gf-form-dropdown>\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n\n</div>\n`;\n\nexport function redisMemQuery() {\n  return {\n    template: template,\n    controller: RedisMemQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      onChange: '&',\n    },\n  };\n}\n\ncoreModule.directive('redisMemQuery', redisMemQuery);\n","import coreModule from 'grafana/app/core/core_module';\nimport { SCFQueryDescriptor, templateQueryIdMap } from './query_def';\n\nexport class SCFQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.SCFQueryDescriptor = SCFQueryDescriptor;\n    };\n\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      instance = $scope.datasource.getServiceFn('scf', 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance).FunctionName;\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n\n    $scope.getVersions = async (target) => {\n      // console.log(2222);\n\n      // return [{ text: 1, value: 1 }];\n      // console.log(target, 'target');\n      // let { instance, region } = target;\n      const FunctionName = $scope.getInstanceId();\n      const region = $scope.datasource.getServiceFn('scf', 'getVariable')(target.region);\n      if (!FunctionName || !region) return [];\n\n      const fetcher = $scope.datasource.getServiceFn('scf', 'getVersions');\n\n      return fetcher(region, { FunctionName }).then((res) => {\n        // console.log(res, 'res');\n        const result = res.map((o) => {\n          o._InstanceAliasValue = o[templateQueryIdMap.version];\n          return {\n            text: o[templateQueryIdMap.version],\n            value: JSON.stringify(o),\n          };\n        });\n        return result;\n      });\n    };\n    // $scope.onChecked = (srcField, dstField) => {\n    //   if ($scope.target.queries[srcField] === true) {\n    //     $scope.target.queries[dstField] = false;\n    //   }\n    //   $scope.onChange();\n    // };\n\n    // $scope.getDropdown = (field) => {\n    //   switch (field) {\n    //     case 'zone':\n    //       return $scope.getZones();\n    //     default:\n    //       return [];\n    //   }\n    // };\n\n    // $scope.getZones = () => {\n    //   if (!$scope.region) {\n    //     return [];\n    //   }\n    //   return $scope.datasource.getZones('cvm', $scope.region);\n    // };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/api/583/18582\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in SCFQueryDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputnumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />\n      <multi-condition\n        ng-if=\"field.type === 'inputmulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'dropdownmulti'\"\n        type=\"'dropdown'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n        get-options=\"getDropdown(field.key)\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- version部分 -->\n<div class=\"gf-form-inline\" ng-if=\"target.instance\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label query-keyword width-9\">Version</label>\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n      <gf-form-dropdown model=\"target.version\" allow-custom=\"false\" get-options=\"getVersions(target)\"\n        on-change=\"onRefresh()\" css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n  </div>\n</div>\n\n  </div>\n`;\n\nexport function scfQuery() {\n  return {\n    template: template,\n    controller: SCFQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n    },\n  };\n}\ncoreModule.directive('scfQuery', scfQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { TDMQFilterFieldsDescriptor, queryEditorName, namespace, templateQueryIdMap } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nconst ExtraFields = [\n  {\n    label: 'environmentId',\n    field: 'environmentId',\n    action: 'DescribeEnvironments',\n  },\n  {\n    label: 'topicName',\n    field: 'topicName',\n    action: 'DescribeTopics',\n  },\n];\n\nconst dropdownTextConfig = {\n  DescribeTopics: 'topicName',\n  DescribeEnvironments: 'environmentId',\n};\nexport class QueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.TDMQFilterFieldsDescriptor = TDMQFilterFieldsDescriptor;\n      $scope.ExtraFields = ExtraFields;\n      $scope.namespace = namespace;\n    };\n\n    $scope.getInstanceId = () => {\n      let { instance } = $scope.target;\n      const service = GetServiceFromNamespace($scope.namespace);\n      instance = $scope.datasource.getServiceFn(service, 'getVariable')(instance);\n      if (!instance) {\n        return '';\n      }\n      try {\n        instance = JSON.parse(instance)[templateQueryIdMap.instance];\n      } catch (error) {\n        // console.log();\n      }\n      return instance;\n    };\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}) || item.label in ($scope.dims ?? {}));\n    };\n    $scope.getExtraDropdown = async (target, action) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      const region = $scope.datasource.getServiceFn(service, 'getVariable')(target.region);\n      const payload: any = {\n        Limit: 100,\n        ClusterId: $scope.getInstanceId(),\n      };\n      if (action === 'DescribeTopics') {\n        let evId = $scope.target.environmentId;\n        try {\n          evId = JSON.parse(evId);\n          evId = evId[templateQueryIdMap.environmentId];\n        } catch (e) {}\n        payload.EnvironmentId = evId;\n      }\n\n      const rs = await $scope.datasource.getServiceFn(service, 'getConsumerList')({ region, action, payload });\n      const result = rs.map((o) => {\n        o._InstanceAliasValue = o[templateQueryIdMap[dropdownTextConfig[action]]];\n        return {\n          text: o[templateQueryIdMap[dropdownTextConfig[action]]],\n          label: o[templateQueryIdMap[dropdownTextConfig[action]]],\n          value: JSON.stringify(o),\n        };\n      });\n      return result;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n  <div class=\"tc-sub-params\" ng-if=\"showDetail\">\n    <label class=\"gf-form-label tc-info-label\">\n      Functions are queried by following params.\n      <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/50388\">Click here to get API doc.</a>\n    </label>\n    <div class=\"gf-form-inline\" ng-repeat=\"field in TDMQFilterFieldsDescriptor\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label width-14\">\n          {{ field.key }}\n          <info-popover mode=\"right-normal\">\n            {{ field.cnDescriptor }}\n            <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n          </info-popover>\n        </label>\n        <input\n          ng-if=\"field.type === 'inputNumber'\"\n          style=\"margin-right:2px\"\n          type=\"number\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n          ng-min=\"field.min\"\n          ng-max=\"field.max\"\n        />\n        <input\n          ng-if=\"field.type === 'input'\"\n          style=\"margin-right:2px\"\n          type=\"text\"\n          ng-model=\"target.queries[field.key]\"\n          ng-change=\"onChange()\"\n          class=\"gf-form-input width-10\"\n        />    \n        <multi-condition\n          ng-if=\"field.type === 'inputNumberMulti'\"\n          type=\"'inputNumber'\"\n          max-cond=\"5\"\n          value=\"target.queries.Filters[field.key]\"\n          maxNum=\"field.max\"\n          minNum=\"field.min\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <multi-condition\n          ng-if=\"field.type === 'inputMulti'\"\n          type=\"'input'\"\n          value=\"target.queries[field.key]\"\n          on-change=\"onChange()\"\n        ></multi-condition>\n        <custom-select-dropdown\n          ng-if=\"field.type === 'select'\"\n          value=\"target.queries[field.key]\"\n          options=\"field.list\"\n          multiple=\"field.multiple || false\"\n          on-change=\"onChange()\"\n        ></custom-select-dropdown>\n      </div>\n    </div>\n  </div>\n\n<!-- 起始区域 目的区域等 -->\n  <div\">\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(target, extra.action)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport function sQuery() {\n  return {\n    template: template,\n    controller: QueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive(queryEditorName, sQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import coreModule from 'grafana/app/core/core_module';\nimport { VBCFilterFieldsDescriptor, namespace } from './query_def';\nimport { GetServiceFromNamespace } from '../../common/constants';\n\nconst ExtraFields: any = [\n  // {\n  //   label: 'SRegion',\n  //   field: 'SRegion',\n  // },\n  // {\n  //   label: 'DRegion',\n  //   field: 'DRegion',\n  // },\n];\n\nexport class VBCQueryCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.VBCFilterFieldsDescriptor = VBCFilterFieldsDescriptor;\n      $scope.namespace = namespace;\n    };\n    $scope.getExtraFields = () => {\n      return ExtraFields.filter((item) => item.field in ($scope.dims ?? {}));\n    };\n\n    $scope.getExtraDropdown = (field) => {\n      const service = GetServiceFromNamespace($scope.namespace);\n      // return $scope.datasource.getServiceFn(service, 'getFilterDropdown')({ field })\n      return $scope.datasource.getFilterDropdown(service, { field });\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div>\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n  <label class=\"gf-form-label tc-info-label\">\n    Functions are queried by following params.\n    <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"https://cloud.tencent.com/document/product/248/45073\">Click here to get API doc.</a>\n  </label>\n  <div class=\"gf-form-inline\" ng-repeat=\"field in VBCFilterFieldsDescriptor\">\n    <div class=\"gf-form\">\n      <label class=\"gf-form-label width-14\">\n        {{ field.key }}\n        <info-popover mode=\"right-normal\">\n          {{ field.cnDescriptor }}\n          <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n        </info-popover>\n      </label>\n      <input\n        ng-if=\"field.type === 'inputNumber'\"\n        style=\"margin-right:2px\"\n        type=\"number\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n        ng-min=\"field.min\"\n        ng-max=\"field.max\"\n      />\n      <input\n        ng-if=\"field.type === 'input'\"\n        style=\"margin-right:2px\"\n        type=\"text\"\n        ng-model=\"target.queries[field.key]\"\n        ng-change=\"onChange()\"\n        class=\"gf-form-input width-10\"\n      />    \n      <multi-condition\n        ng-if=\"field.type === 'inputNumberMulti'\"\n        type=\"'inputNumber'\"\n        max-cond=\"5\"\n        value=\"target.queries.Filters[field.key]\"\n        maxNum=\"field.max\"\n        minNum=\"field.min\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <multi-condition\n        ng-if=\"field.type === 'inputMulti'\"\n        type=\"'input'\"\n        value=\"target.queries[field.key]\"\n        on-change=\"onChange()\"\n      ></multi-condition>\n      <custom-select-dropdown\n        ng-if=\"field.type === 'select'\"\n        value=\"target.queries[field.key]\"\n        options=\"field.list\"\n        multiple=\"field.multiple || false\"\n        on-change=\"onChange()\"\n      ></custom-select-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- 起始区域 目的区域等 -->\n  <div>\n    <div class=\"gf-form-inline\" ng-repeat=\"extra in getExtraFields()\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label query-keyword width-9\">{{extra.label}}</label>\n        <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n          <gf-form-dropdown model=\"target[extra.field]\" allow-custom=\"false\" get-options=\"getExtraDropdown(extra.field)\"\n            on-change=\"onRefresh()\" css-class=\"min-width-10\">\n          </gf-form-dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport function scfQuery() {\n  return {\n    template: template,\n    controller: VBCQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n      onRefresh: '&',\n      dims: '=',\n    },\n  };\n}\ncoreModule.directive('vbcQuery', scfQuery);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","import queryFactory from '../_base/query';\nimport { queryEditorConfig, queryEditorName } from './query_def';\nqueryFactory(queryEditorName, queryEditorConfig);\n","var map = {\n\t\".\": 7,\n\t\"./\": 7,\n\t\"./_base/datasource\": 1,\n\t\"./_base/datasource.ts\": 1,\n\t\"./_base/query\": 5,\n\t\"./_base/query.ts\": 5,\n\t\"./_base/query_filter\": 158,\n\t\"./_base/query_filter.ts\": 158,\n\t\"./_base/types\": 159,\n\t\"./_base/types.ts\": 159,\n\t\"./apigateway/datasource\": 59,\n\t\"./apigateway/datasource.ts\": 59,\n\t\"./apigateway/query\": 107,\n\t\"./apigateway/query.ts\": 107,\n\t\"./apigateway/query_def\": 13,\n\t\"./apigateway/query_def.ts\": 13,\n\t\"./bmIntraLb/datasource\": 60,\n\t\"./bmIntraLb/datasource.ts\": 60,\n\t\"./bmIntraLb/query\": 108,\n\t\"./bmIntraLb/query.ts\": 108,\n\t\"./bmIntraLb/query_def\": 20,\n\t\"./bmIntraLb/query_def.ts\": 20,\n\t\"./bm_lb/datasource\": 61,\n\t\"./bm_lb/datasource.ts\": 61,\n\t\"./bm_lb/query\": 109,\n\t\"./bm_lb/query.ts\": 109,\n\t\"./bm_lb/query_def\": 21,\n\t\"./bm_lb/query_def.ts\": 21,\n\t\"./bm_pcx/datasource\": 62,\n\t\"./bm_pcx/datasource.ts\": 62,\n\t\"./bm_pcx/query\": 110,\n\t\"./bm_pcx/query.ts\": 110,\n\t\"./bm_pcx/query_def\": 22,\n\t\"./bm_pcx/query_def.ts\": 22,\n\t\"./bwp/datasource\": 63,\n\t\"./bwp/datasource.ts\": 63,\n\t\"./bwp/query\": 111,\n\t\"./bwp/query.ts\": 111,\n\t\"./bwp/query_def\": 50,\n\t\"./bwp/query_def.ts\": 50,\n\t\"./cbs/datasource\": 64,\n\t\"./cbs/datasource.ts\": 64,\n\t\"./cbs/query\": 112,\n\t\"./cbs/query.ts\": 112,\n\t\"./cbs/query_def\": 23,\n\t\"./cbs/query_def.ts\": 23,\n\t\"./cdb/datasource\": 65,\n\t\"./cdb/datasource.ts\": 65,\n\t\"./cdb/query\": 113,\n\t\"./cdb/query.ts\": 113,\n\t\"./cdb/query_def\": 43,\n\t\"./cdb/query_def.ts\": 43,\n\t\"./cdn/datasource\": 66,\n\t\"./cdn/datasource.ts\": 66,\n\t\"./cdn/query\": 114,\n\t\"./cdn/query.ts\": 114,\n\t\"./cdn/query_def\": 51,\n\t\"./cdn/query_def.ts\": 51,\n\t\"./cdn_province/datasource\": 67,\n\t\"./cdn_province/datasource.ts\": 67,\n\t\"./cdn_province/query\": 115,\n\t\"./cdn_province/query.ts\": 115,\n\t\"./cdn_province/query_def\": 24,\n\t\"./cdn_province/query_def.ts\": 24,\n\t\"./ceip_summary/datasource\": 68,\n\t\"./ceip_summary/datasource.ts\": 68,\n\t\"./ceip_summary/query\": 116,\n\t\"./ceip_summary/query.ts\": 116,\n\t\"./ceip_summary/query_def\": 25,\n\t\"./ceip_summary/query_def.ts\": 25,\n\t\"./ces/datasource\": 69,\n\t\"./ces/datasource.ts\": 69,\n\t\"./ces/query\": 117,\n\t\"./ces/query.ts\": 117,\n\t\"./ces/query_def\": 32,\n\t\"./ces/query_def.ts\": 32,\n\t\"./cfs/datasource\": 70,\n\t\"./cfs/datasource.ts\": 70,\n\t\"./cfs/query\": 118,\n\t\"./cfs/query.ts\": 118,\n\t\"./cfs/query_def\": 44,\n\t\"./cfs/query_def.ts\": 44,\n\t\"./ckafka/datasource\": 71,\n\t\"./ckafka/datasource.ts\": 71,\n\t\"./ckafka/query\": 119,\n\t\"./ckafka/query.ts\": 119,\n\t\"./ckafka/query_def\": 14,\n\t\"./ckafka/query_def.ts\": 14,\n\t\"./clb/datasource\": 72,\n\t\"./clb/datasource.ts\": 72,\n\t\"./clb/query\": 120,\n\t\"./clb/query.ts\": 120,\n\t\"./clb/query_def\": 11,\n\t\"./clb/query_def.ts\": 11,\n\t\"./cmq/datasource\": 73,\n\t\"./cmq/datasource.ts\": 73,\n\t\"./cmq/query\": 121,\n\t\"./cmq/query.ts\": 121,\n\t\"./cmq/query_def\": 45,\n\t\"./cmq/query_def.ts\": 45,\n\t\"./cmq_topic/datasource\": 74,\n\t\"./cmq_topic/datasource.ts\": 74,\n\t\"./cmq_topic/query\": 122,\n\t\"./cmq_topic/query.ts\": 122,\n\t\"./cmq_topic/query_def\": 26,\n\t\"./cmq_topic/query_def.ts\": 26,\n\t\"./cos/datasource\": 75,\n\t\"./cos/datasource.ts\": 75,\n\t\"./cos/query_def\": 123,\n\t\"./cos/query_def.ts\": 123,\n\t\"./cpm/datasource\": 76,\n\t\"./cpm/datasource.ts\": 76,\n\t\"./cpm/query\": 124,\n\t\"./cpm/query.ts\": 124,\n\t\"./cpm/query_def\": 27,\n\t\"./cpm/query_def.ts\": 27,\n\t\"./cvm/datasource\": 77,\n\t\"./cvm/datasource.ts\": 77,\n\t\"./cvm/query\": 125,\n\t\"./cvm/query.ts\": 125,\n\t\"./cvm/query_def\": 46,\n\t\"./cvm/query_def.ts\": 46,\n\t\"./cynosdb_mysql/datasource\": 78,\n\t\"./cynosdb_mysql/datasource.ts\": 78,\n\t\"./cynosdb_mysql/query\": 126,\n\t\"./cynosdb_mysql/query.ts\": 126,\n\t\"./cynosdb_mysql/query_def\": 16,\n\t\"./cynosdb_mysql/query_def.ts\": 16,\n\t\"./dc/datasource\": 79,\n\t\"./dc/datasource.ts\": 79,\n\t\"./dc/query\": 127,\n\t\"./dc/query.ts\": 127,\n\t\"./dc/query_def\": 33,\n\t\"./dc/query_def.ts\": 33,\n\t\"./dcdb/datasource\": 80,\n\t\"./dcdb/datasource.ts\": 80,\n\t\"./dcdb/query\": 128,\n\t\"./dcdb/query.ts\": 128,\n\t\"./dcdb/query_def\": 9,\n\t\"./dcdb/query_def.ts\": 9,\n\t\"./dcg/datasource\": 81,\n\t\"./dcg/datasource.ts\": 81,\n\t\"./dcg/query\": 129,\n\t\"./dcg/query.ts\": 129,\n\t\"./dcg/query_def\": 34,\n\t\"./dcg/query_def.ts\": 34,\n\t\"./dcx/datasource\": 82,\n\t\"./dcx/datasource.ts\": 82,\n\t\"./dcx/query\": 130,\n\t\"./dcx/query.ts\": 130,\n\t\"./dcx/query_def\": 35,\n\t\"./dcx/query_def.ts\": 35,\n\t\"./ecm/datasource\": 83,\n\t\"./ecm/datasource.ts\": 83,\n\t\"./ecm/query\": 131,\n\t\"./ecm/query.ts\": 131,\n\t\"./ecm/query_def\": 28,\n\t\"./ecm/query_def.ts\": 28,\n\t\"./ecm_block_storage/datasource\": 84,\n\t\"./ecm_block_storage/datasource.ts\": 84,\n\t\"./ecm_block_storage/query\": 132,\n\t\"./ecm_block_storage/query.ts\": 132,\n\t\"./ecm_block_storage/query_def\": 12,\n\t\"./ecm_block_storage/query_def.ts\": 12,\n\t\"./ecm_lb/datasource\": 85,\n\t\"./ecm_lb/datasource.ts\": 85,\n\t\"./ecm_lb/query\": 133,\n\t\"./ecm_lb/query.ts\": 133,\n\t\"./ecm_lb/query_def\": 36,\n\t\"./ecm_lb/query_def.ts\": 36,\n\t\"./gse/datasource\": 86,\n\t\"./gse/datasource.ts\": 86,\n\t\"./gse/query\": 134,\n\t\"./gse/query.ts\": 134,\n\t\"./gse/query_def\": 10,\n\t\"./gse/query_def.ts\": 10,\n\t\"./index\": 7,\n\t\"./index.ts\": 7,\n\t\"./lb/datasource\": 87,\n\t\"./lb/datasource.ts\": 87,\n\t\"./lb/query\": 135,\n\t\"./lb/query.ts\": 135,\n\t\"./lb/query_def\": 52,\n\t\"./lb/query_def.ts\": 52,\n\t\"./mongodb/datasource\": 88,\n\t\"./mongodb/datasource.ts\": 88,\n\t\"./mongodb/query\": 136,\n\t\"./mongodb/query.ts\": 136,\n\t\"./mongodb/query_def\": 53,\n\t\"./mongodb/query_def.ts\": 53,\n\t\"./mr/datasource\": 89,\n\t\"./mr/datasource.ts\": 89,\n\t\"./mr/query\": 137,\n\t\"./mr/query.ts\": 137,\n\t\"./mr/query_def\": 47,\n\t\"./mr/query_def.ts\": 47,\n\t\"./nat_gateway/datasource\": 90,\n\t\"./nat_gateway/datasource.ts\": 90,\n\t\"./nat_gateway/query\": 138,\n\t\"./nat_gateway/query.ts\": 138,\n\t\"./nat_gateway/query_def\": 54,\n\t\"./nat_gateway/query_def.ts\": 54,\n\t\"./ov_cdn/datasource\": 91,\n\t\"./ov_cdn/datasource.ts\": 91,\n\t\"./ov_cdn/query\": 139,\n\t\"./ov_cdn/query.ts\": 139,\n\t\"./ov_cdn/query_def\": 55,\n\t\"./ov_cdn/query_def.ts\": 55,\n\t\"./pcx/datasource\": 92,\n\t\"./pcx/datasource.ts\": 92,\n\t\"./pcx/query\": 140,\n\t\"./pcx/query.ts\": 140,\n\t\"./pcx/query_def\": 48,\n\t\"./pcx/query_def.ts\": 48,\n\t\"./postgresql/datasource\": 93,\n\t\"./postgresql/datasource.ts\": 93,\n\t\"./postgresql/query\": 141,\n\t\"./postgresql/query.ts\": 141,\n\t\"./postgresql/query_def\": 29,\n\t\"./postgresql/query_def.ts\": 29,\n\t\"./qaap/datasource\": 94,\n\t\"./qaap/datasource.ts\": 94,\n\t\"./qaap/query\": 142,\n\t\"./qaap/query.ts\": 142,\n\t\"./qaap/query_def\": 37,\n\t\"./qaap/query_def.ts\": 37,\n\t\"./redis/datasource\": 95,\n\t\"./redis/datasource.ts\": 95,\n\t\"./redis/query\": 143,\n\t\"./redis/query.ts\": 143,\n\t\"./redis/query_def\": 49,\n\t\"./redis/query_def.ts\": 49,\n\t\"./redis_mem/datasource\": 96,\n\t\"./redis_mem/datasource.ts\": 96,\n\t\"./redis_mem/query\": 144,\n\t\"./redis_mem/query.ts\": 144,\n\t\"./redis_mem/query_def\": 38,\n\t\"./redis_mem/query_def.ts\": 38,\n\t\"./scf/datasource\": 97,\n\t\"./scf/datasource.ts\": 97,\n\t\"./scf/query\": 145,\n\t\"./scf/query.ts\": 145,\n\t\"./scf/query_def\": 17,\n\t\"./scf/query_def.ts\": 17,\n\t\"./sqlserver/datasource\": 98,\n\t\"./sqlserver/datasource.ts\": 98,\n\t\"./sqlserver/query\": 146,\n\t\"./sqlserver/query.ts\": 146,\n\t\"./sqlserver/query_def\": 18,\n\t\"./sqlserver/query_def.ts\": 18,\n\t\"./tcaplus/datasource\": 99,\n\t\"./tcaplus/datasource.ts\": 99,\n\t\"./tcaplus/query\": 147,\n\t\"./tcaplus/query.ts\": 147,\n\t\"./tcaplus/query_def\": 30,\n\t\"./tcaplus/query_def.ts\": 30,\n\t\"./tdmq/datasource\": 100,\n\t\"./tdmq/datasource.ts\": 100,\n\t\"./tdmq/query\": 148,\n\t\"./tdmq/query.ts\": 148,\n\t\"./tdmq/query_def\": 8,\n\t\"./tdmq/query_def.ts\": 8,\n\t\"./v_clb/datasource\": 101,\n\t\"./v_clb/datasource.ts\": 101,\n\t\"./v_clb/query\": 149,\n\t\"./v_clb/query.ts\": 149,\n\t\"./v_clb/query_def\": 15,\n\t\"./v_clb/query_def.ts\": 15,\n\t\"./vbc/datasource\": 102,\n\t\"./vbc/datasource.ts\": 102,\n\t\"./vbc/query\": 150,\n\t\"./vbc/query.ts\": 150,\n\t\"./vbc/query_def\": 39,\n\t\"./vbc/query_def.ts\": 39,\n\t\"./vpc_net_detect/datasource\": 103,\n\t\"./vpc_net_detect/datasource.ts\": 103,\n\t\"./vpc_net_detect/query\": 151,\n\t\"./vpc_net_detect/query.ts\": 151,\n\t\"./vpc_net_detect/query_def\": 31,\n\t\"./vpc_net_detect/query_def.ts\": 31,\n\t\"./vpngw/datasource\": 104,\n\t\"./vpngw/datasource.ts\": 104,\n\t\"./vpngw/query\": 152,\n\t\"./vpngw/query.ts\": 152,\n\t\"./vpngw/query_def\": 40,\n\t\"./vpngw/query_def.ts\": 40,\n\t\"./vpnx/datasource\": 105,\n\t\"./vpnx/datasource.ts\": 105,\n\t\"./vpnx/query\": 153,\n\t\"./vpnx/query.ts\": 153,\n\t\"./vpnx/query_def\": 41,\n\t\"./vpnx/query_def.ts\": 41,\n\t\"./waf/datasource\": 106,\n\t\"./waf/datasource.ts\": 106,\n\t\"./waf/query\": 154,\n\t\"./waf/query.ts\": 154,\n\t\"./waf/query_def\": 42,\n\t\"./waf/query_def.ts\": 42\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 155;","'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    var obj;\n\n    while (queue.length) {\n        var item = queue.pop();\n        obj = item.obj[item.prop];\n\n        if (Array.isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n\n    return obj;\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (Array.isArray(target)) {\n            target.push(source);\n        } else if (typeof target === 'object') {\n            if (options.plainObjects || options.allowPrototypes || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (Array.isArray(target) && !Array.isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (Array.isArray(target) && Array.isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                if (target[i] && typeof target[i] === 'object') {\n                    target[i] = merge(target[i], item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str) {\n    try {\n        return decodeURIComponent(str.replace(/\\+/g, ' '));\n    } catch (e) {\n        return str;\n    }\n};\n\nvar encode = function encode(str) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = typeof str === 'string' ? str : String(str);\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    return compactQueue(queue);\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (obj === null || typeof obj === 'undefined') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    merge: merge\n};\n","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nmodule.exports = {\n    'default': 'RFC3986',\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return value;\n        }\n    },\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n","import coreModule from 'grafana/app/core/core_module';\nimport { DetailQueryConfig } from './types';\n\nclass SPQueryCtrl {\n  static _config: DetailQueryConfig;\n\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    Object.assign($scope, SPQueryCtrl._config);\n\n    $scope.onChecked = (srcField, dstField) => {\n      if ($scope.target.queries[srcField] === true) {\n        $scope.target.queries[dstField] = false;\n      }\n      $scope.onChange();\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div class=\"tc-sub-params\" ng-if=\"showDetail\">\n<label class=\"gf-form-label tc-info-label\">\n  Instances are queried by following params.\n  <a target=\"_blank\" style=\"text-decoration:underline;color:#006eff;font-size:medium\" href=\"{{instanceDocUrl}}\">Click here to get API doc.</a>\n</label>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Offset\n      <info-popover mode=\"right-normal\">\n        偏移量, 例如Offset=20&Limit=20 返回第 20 到 40 项\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Offset\" class=\"gf-form-input width-10\" ng-min=\"0\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-14\">\n      Limit\n      <info-popover mode=\"right-normal\">\n        单次请求返回的数量，默认为20，最小值为1，最大值为100\n      </info-popover>\n    </label>\n    <input type=\"number\" ng-model=\"target.queries.Limit\" class=\"gf-form-input width-10\" ng-min=\"1\" ng-max=\"100\" ng-change=\"onChange()\">\n  </div>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      InstanceIds\n      <info-popover mode=\"right-normal\">\n        实例 ID，每次请求的实例的上限为100，参数不支持同时指定 InstanceIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.instanceIdsChecked\"\n      switch-class=\"max-width-5\" on-change=\"onChecked('instanceIdsChecked', 'filtersChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div class=\"gf-form-inline tc-sub-params\" ng-if=\"target.queries.instanceIdsChecked\">\n  <multi-condition type=\"'input'\" max-cond=\"100\" value=\"target.queries.InstanceIds\" on-change=\"onChange()\">\n  </multi-condition>\n</div>\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\">\n    <label class=\"gf-form-label width-9\">\n      Filters\n      <info-popover mode=\"right-normal\">\n        过滤条件，每次请求的 Filters 的上限为10，Filter.Values 的上限为5。参数不支持同时指定 InstanceIds 和 Filters\n      </info-popover>\n    </label>\n    <gf-form-switch class=\"gf-form tc-switch\" label-class=\"width-7\" checked=\"target.queries.filtersChecked\" switch-class=\"max-width-5\"\n      on-change=\"onChecked('filtersChecked','instanceIdsChecked')\"></gf-form-switch>\n  </div>\n</div>\n<div ng-if=\"target.queries.filtersChecked\" class=\"tc-sub-params\">\n  <div class=\"gf-form-inline\" ng-repeat=\"field in CVMFilterFieldsDescriptor\">\n    <label class=\"gf-form-label width-14\">\n      {{ field.key }}\n      <info-popover mode=\"right-normal\">\n        {{ field.cnDescriptor }}\n        <a target=\"_blank\" href=\"{{field.link}}\" ng-if=\"field.link\">Click here for more information.</a>\n      </info-popover>\n    </label>\n    <multi-condition\n      ng-if=\"field.type === 'dropdownmulti'\"\n      type=\"'dropdown'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      get-options=\"getDropdown(field.key)\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputNumbermulti'\"\n      type=\"'inputNumber'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      maxNum=\"field.max\"\n      minNum=\"field.min\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <multi-condition\n      ng-if=\"field.type === 'inputmulti'\"\n      type=\"'input'\"\n      max-cond=\"5\"\n      value=\"target.queries.Filters[field.key]\"\n      on-change=\"onChange()\"\n    ></multi-condition>\n    <custom-select-dropdown\n      ng-if=\"field.type === 'select'\"\n      value=\"target.queries.Filters[field.key]\"\n      options=\"field.list\"\n      multiple=\"true\"\n      on-change=\"onChange()\"\n    ></custom-select-dropdown>\n  </div>\n</div>\n</div>\n`;\n\nexport function queryDDO() {\n  return {\n    template: template,\n    controller: SPQueryCtrl,\n    restrict: 'E',\n    scope: {\n      target: '=',\n      showDetail: '=',\n      region: '=',\n      datasource: '=',\n      getDropdownOptions: '&',\n      onChange: '&',\n    },\n  };\n}\n\nexport default (name: string, config: DetailQueryConfig) => {\n  SPQueryCtrl._config = config;\n  coreModule.directive(name, queryDDO);\n};\n","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__161__;","module.exports = __WEBPACK_EXTERNAL_MODULE__162__;","module.exports = __WEBPACK_EXTERNAL_MODULE__163__;","module.exports = __WEBPACK_EXTERNAL_MODULE__164__;","module.exports = \"<query-editor-row query-ctrl=\\\"ctrl\\\" class=\\\"generic-datasource-query-row\\\" has-text-edit-mode=\\\"true\\\">\\n  <div class=\\\"gf-form-inline\\\">\\n    <div class=\\\"gf-form\\\">\\n      <label class=\\\"gf-form-label query-keyword width-9\\\">Namespace</label>\\n      <div class=\\\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\\\">\\n        <gf-cascader\\n          ng-if=\\\"ctrl.isCascader\\\"\\n          style=\\\"width: 160px\\\"\\n          change-on-select=\\\"false\\\"\\n          options=\\\"ctrl.cascaderOptions\\\"\\n          on-select=\\\"ctrl.cascaderChange(_query)\\\"\\n          initial-value=\\\"{{ctrl.target.namespace}}\\\"\\n        ></gf-cascader>\\n\\n        <gf-form-dropdown\\n          ng-if=\\\"!ctrl.isCascader\\\"\\n          model=\\\"ctrl.target.namespace\\\"\\n          lookup-text=\\\"true\\\"\\n          get-options=\\\"ctrl.getNamespaces($query)\\\"\\n          on-change=\\\"ctrl.onNamespaceChange()\\\"\\n          css-class=\\\"min-width-10\\\"\\n        >\\n        </gf-form-dropdown>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"gf-form-inline\\\" ng-if=\\\"!ctrl.hideRegion\\\">\\n    <div class=\\\"gf-form\\\">\\n      <label class=\\\"gf-form-label query-keyword width-9\\\">Region</label>\\n      <div class=\\\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\\\">\\n        <gf-form-dropdown\\n          model=\\\"ctrl.target[ctrl.target.service].region\\\"\\n          allow-custom=\\\"true\\\"\\n          lookup-text=\\\"true\\\"\\n          get-options=\\\"ctrl.getRegions($query)\\\"\\n          on-change=\\\"ctrl.onRegionChange()\\\"\\n          css-class=\\\"min-width-10\\\"\\n          disabled\\n        >\\n        </gf-form-dropdown>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"gf-form-inline\\\">\\n    <div class=\\\"gf-form\\\">\\n      <label class=\\\"gf-form-label query-keyword width-9\\\">MetricName</label>\\n      <div class=\\\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\\\">\\n        <gf-form-dropdown\\n          model=\\\"ctrl.target[ctrl.target.service].metricName\\\"\\n          allow-custom=\\\"true\\\"\\n          lookup-text=\\\"true\\\"\\n          get-options=\\\"ctrl.getMetrics($query)\\\"\\n          on-change=\\\"ctrl.onMetricChange()\\\"\\n          css-class=\\\"min-width-10\\\"\\n        >\\n        </gf-form-dropdown>\\n      </div>\\n    </div>\\n    <div class=\\\"gf-form gf-form-label--grow\\\" ng-if=\\\"!!ctrl.getMetricNameDesc()\\\">\\n      <label class=\\\"gf-form-label gf-form-label--grow\\\">({{ctrl.getMetricNameDesc()}})</label>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"gf-form-inline\\\" style=\\\"align-items: center\\\">\\n    <div class=\\\"gf-form\\\">\\n      <label class=\\\"gf-form-label query-keyword width-9\\\">Period</label>\\n      <div class=\\\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\\\">\\n        <select\\n          class=\\\"gf-form-input min-width-10\\\"\\n          ng-change=\\\"ctrl.refresh()\\\"\\n          ng-model=\\\"ctrl.target[ctrl.target.service].period\\\"\\n          ng-options=\\\"f for f in ctrl.sortedPeriodList\\\"\\n        ></select>\\n      </div>\\n    </div>\\n    <span style=\\\"margin-left: 8px; font-size: 12px\\\">(时间单位：秒)</span>\\n  </div>\\n\\n  <div class=\\\"gf-form-inline\\\">\\n    <div class=\\\"gf-form\\\">\\n      <label class=\\\"gf-form-label query-keyword width-9\\\">Instance</label>\\n      <div class=\\\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\\\">\\n        <select\\n          class=\\\"gf-form-input min-width-8\\\"\\n          ng-change=\\\"ctrl.onInstanceAliasChange()\\\"\\n          ng-model=\\\"ctrl.target[ctrl.target.service].instanceAlias\\\"\\n          ng-options=\\\"f.value as f.text for f in ctrl.instanceAliasList\\\"\\n        ></select>\\n      </div>\\n      <div class=\\\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\\\">\\n        <gf-form-dropdown\\n          model=\\\"ctrl.target[ctrl.target.service].instance\\\"\\n          allow-custom=\\\"true\\\"\\n          lookup-text=\\\"true\\\"\\n          get-options=\\\"ctrl.getInstances($query)\\\"\\n          on-change=\\\"ctrl.onInstanceChange()\\\"\\n          css-class=\\\"min-width-10\\\"\\n        >\\n        </gf-form-dropdown>\\n      </div>\\n    </div>\\n    <div class=\\\"gf-form\\\" ng-if=\\\"!ctrl.isVariable('instance')\\\">\\n      <label class=\\\"gf-form-label width-7\\\">Show Details</label>\\n      <gf-form-switch\\n        class=\\\"gf-form tc-switch\\\"\\n        label-class=\\\"width-7\\\"\\n        checked=\\\"ctrl.target.showInstanceDetails\\\"\\n        switch-class=\\\"max-width-5\\\"\\n      ></gf-form-switch>\\n    </div>\\n    <div class=\\\"gf-form gf-form-label--grow\\\">\\n      <!-- this is explain how much items will display to user -->\\n      <label class=\\\"gf-form-label gf-form-label--grow\\\">(按照具体的查询条件搜索实例，默认拉取前 20 条实例)</label>\\n    </div>\\n  </div>\\n</query-editor-row>\\n\";","var map = {\n\t\"./_base/query.ts\": 5,\n\t\"./apigateway/datasource\": 59,\n\t\"./apigateway/datasource.ts\": 59,\n\t\"./apigateway/query.ts\": 107,\n\t\"./apigateway/query_def.ts\": 13,\n\t\"./bmIntraLb/datasource\": 60,\n\t\"./bmIntraLb/datasource.ts\": 60,\n\t\"./bmIntraLb/query.ts\": 108,\n\t\"./bmIntraLb/query_def.ts\": 20,\n\t\"./bm_lb/datasource\": 61,\n\t\"./bm_lb/datasource.ts\": 61,\n\t\"./bm_lb/query.ts\": 109,\n\t\"./bm_lb/query_def.ts\": 21,\n\t\"./bm_pcx/datasource\": 62,\n\t\"./bm_pcx/datasource.ts\": 62,\n\t\"./bm_pcx/query.ts\": 110,\n\t\"./bm_pcx/query_def.ts\": 22,\n\t\"./bwp/datasource\": 63,\n\t\"./bwp/datasource.ts\": 63,\n\t\"./bwp/query.ts\": 111,\n\t\"./bwp/query_def.ts\": 50,\n\t\"./cbs/datasource\": 64,\n\t\"./cbs/datasource.ts\": 64,\n\t\"./cbs/query.ts\": 112,\n\t\"./cbs/query_def.ts\": 23,\n\t\"./cdb/datasource\": 65,\n\t\"./cdb/datasource.ts\": 65,\n\t\"./cdb/query.ts\": 113,\n\t\"./cdb/query_def.ts\": 43,\n\t\"./cdn/datasource\": 66,\n\t\"./cdn/datasource.ts\": 66,\n\t\"./cdn/query.ts\": 114,\n\t\"./cdn/query_def.ts\": 51,\n\t\"./cdn_province/datasource\": 67,\n\t\"./cdn_province/datasource.ts\": 67,\n\t\"./cdn_province/query.ts\": 115,\n\t\"./cdn_province/query_def.ts\": 24,\n\t\"./ceip_summary/datasource\": 68,\n\t\"./ceip_summary/datasource.ts\": 68,\n\t\"./ceip_summary/query.ts\": 116,\n\t\"./ceip_summary/query_def.ts\": 25,\n\t\"./ces/datasource\": 69,\n\t\"./ces/datasource.ts\": 69,\n\t\"./ces/query.ts\": 117,\n\t\"./ces/query_def.ts\": 32,\n\t\"./cfs/datasource\": 70,\n\t\"./cfs/datasource.ts\": 70,\n\t\"./cfs/query.ts\": 118,\n\t\"./cfs/query_def.ts\": 44,\n\t\"./ckafka/datasource\": 71,\n\t\"./ckafka/datasource.ts\": 71,\n\t\"./ckafka/query.ts\": 119,\n\t\"./ckafka/query_def.ts\": 14,\n\t\"./clb/datasource\": 72,\n\t\"./clb/datasource.ts\": 72,\n\t\"./clb/query.ts\": 120,\n\t\"./clb/query_def.ts\": 11,\n\t\"./cmq/datasource\": 73,\n\t\"./cmq/datasource.ts\": 73,\n\t\"./cmq/query.ts\": 121,\n\t\"./cmq/query_def.ts\": 45,\n\t\"./cmq_topic/datasource\": 74,\n\t\"./cmq_topic/datasource.ts\": 74,\n\t\"./cmq_topic/query.ts\": 122,\n\t\"./cmq_topic/query_def.ts\": 26,\n\t\"./cos/datasource\": 75,\n\t\"./cos/datasource.ts\": 75,\n\t\"./cos/query_def.ts\": 123,\n\t\"./cpm/datasource\": 76,\n\t\"./cpm/datasource.ts\": 76,\n\t\"./cpm/query.ts\": 124,\n\t\"./cpm/query_def.ts\": 27,\n\t\"./cvm/datasource\": 77,\n\t\"./cvm/datasource.ts\": 77,\n\t\"./cvm/query.ts\": 125,\n\t\"./cvm/query_def.ts\": 46,\n\t\"./cynosdb_mysql/datasource\": 78,\n\t\"./cynosdb_mysql/datasource.ts\": 78,\n\t\"./cynosdb_mysql/query.ts\": 126,\n\t\"./cynosdb_mysql/query_def.ts\": 16,\n\t\"./dc/datasource\": 79,\n\t\"./dc/datasource.ts\": 79,\n\t\"./dc/query.ts\": 127,\n\t\"./dc/query_def.ts\": 33,\n\t\"./dcdb/datasource\": 80,\n\t\"./dcdb/datasource.ts\": 80,\n\t\"./dcdb/query.ts\": 128,\n\t\"./dcdb/query_def.ts\": 9,\n\t\"./dcg/datasource\": 81,\n\t\"./dcg/datasource.ts\": 81,\n\t\"./dcg/query.ts\": 129,\n\t\"./dcg/query_def.ts\": 34,\n\t\"./dcx/datasource\": 82,\n\t\"./dcx/datasource.ts\": 82,\n\t\"./dcx/query.ts\": 130,\n\t\"./dcx/query_def.ts\": 35,\n\t\"./ecm/datasource\": 83,\n\t\"./ecm/datasource.ts\": 83,\n\t\"./ecm/query.ts\": 131,\n\t\"./ecm/query_def.ts\": 28,\n\t\"./ecm_block_storage/datasource\": 84,\n\t\"./ecm_block_storage/datasource.ts\": 84,\n\t\"./ecm_block_storage/query.ts\": 132,\n\t\"./ecm_block_storage/query_def.ts\": 12,\n\t\"./ecm_lb/datasource\": 85,\n\t\"./ecm_lb/datasource.ts\": 85,\n\t\"./ecm_lb/query.ts\": 133,\n\t\"./ecm_lb/query_def.ts\": 36,\n\t\"./gse/datasource\": 86,\n\t\"./gse/datasource.ts\": 86,\n\t\"./gse/query.ts\": 134,\n\t\"./gse/query_def.ts\": 10,\n\t\"./lb/datasource\": 87,\n\t\"./lb/datasource.ts\": 87,\n\t\"./lb/query.ts\": 135,\n\t\"./lb/query_def.ts\": 52,\n\t\"./mongodb/datasource\": 88,\n\t\"./mongodb/datasource.ts\": 88,\n\t\"./mongodb/query.ts\": 136,\n\t\"./mongodb/query_def.ts\": 53,\n\t\"./mr/datasource\": 89,\n\t\"./mr/datasource.ts\": 89,\n\t\"./mr/query.ts\": 137,\n\t\"./mr/query_def.ts\": 47,\n\t\"./nat_gateway/datasource\": 90,\n\t\"./nat_gateway/datasource.ts\": 90,\n\t\"./nat_gateway/query.ts\": 138,\n\t\"./nat_gateway/query_def.ts\": 54,\n\t\"./ov_cdn/datasource\": 91,\n\t\"./ov_cdn/datasource.ts\": 91,\n\t\"./ov_cdn/query.ts\": 139,\n\t\"./ov_cdn/query_def.ts\": 55,\n\t\"./pcx/datasource\": 92,\n\t\"./pcx/datasource.ts\": 92,\n\t\"./pcx/query.ts\": 140,\n\t\"./pcx/query_def.ts\": 48,\n\t\"./postgresql/datasource\": 93,\n\t\"./postgresql/datasource.ts\": 93,\n\t\"./postgresql/query.ts\": 141,\n\t\"./postgresql/query_def.ts\": 29,\n\t\"./qaap/datasource\": 94,\n\t\"./qaap/datasource.ts\": 94,\n\t\"./qaap/query.ts\": 142,\n\t\"./qaap/query_def.ts\": 37,\n\t\"./redis/datasource\": 95,\n\t\"./redis/datasource.ts\": 95,\n\t\"./redis/query.ts\": 143,\n\t\"./redis/query_def.ts\": 49,\n\t\"./redis_mem/datasource\": 96,\n\t\"./redis_mem/datasource.ts\": 96,\n\t\"./redis_mem/query.ts\": 144,\n\t\"./redis_mem/query_def.ts\": 38,\n\t\"./scf/datasource\": 97,\n\t\"./scf/datasource.ts\": 97,\n\t\"./scf/query.ts\": 145,\n\t\"./scf/query_def.ts\": 17,\n\t\"./sqlserver/datasource\": 98,\n\t\"./sqlserver/datasource.ts\": 98,\n\t\"./sqlserver/query.ts\": 146,\n\t\"./sqlserver/query_def.ts\": 18,\n\t\"./tcaplus/datasource\": 99,\n\t\"./tcaplus/datasource.ts\": 99,\n\t\"./tcaplus/query.ts\": 147,\n\t\"./tcaplus/query_def.ts\": 30,\n\t\"./tdmq/datasource\": 100,\n\t\"./tdmq/datasource.ts\": 100,\n\t\"./tdmq/query.ts\": 148,\n\t\"./tdmq/query_def.ts\": 8,\n\t\"./v_clb/datasource\": 101,\n\t\"./v_clb/datasource.ts\": 101,\n\t\"./v_clb/query.ts\": 149,\n\t\"./v_clb/query_def.ts\": 15,\n\t\"./vbc/datasource\": 102,\n\t\"./vbc/datasource.ts\": 102,\n\t\"./vbc/query.ts\": 150,\n\t\"./vbc/query_def.ts\": 39,\n\t\"./vpc_net_detect/datasource\": 103,\n\t\"./vpc_net_detect/datasource.ts\": 103,\n\t\"./vpc_net_detect/query.ts\": 151,\n\t\"./vpc_net_detect/query_def.ts\": 31,\n\t\"./vpngw/datasource\": 104,\n\t\"./vpngw/datasource.ts\": 104,\n\t\"./vpngw/query.ts\": 152,\n\t\"./vpngw/query_def.ts\": 40,\n\t\"./vpnx/datasource\": 105,\n\t\"./vpnx/datasource.ts\": 105,\n\t\"./vpnx/query.ts\": 153,\n\t\"./vpnx/query_def.ts\": 41,\n\t\"./waf/datasource\": 106,\n\t\"./waf/datasource.ts\": 106,\n\t\"./waf/query.ts\": 154,\n\t\"./waf/query_def.ts\": 42\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 167;","'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching\n        return prefix + '[]';\n    },\n    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching\n        return prefix;\n    }\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaults = {\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar stringify = function stringify( // eslint-disable-line func-name-matching\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter,\n    encodeValuesOnly\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (Array.isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        if (Array.isArray(obj)) {\n            values = values.concat(stringify(\n                obj[key],\n                generateArrayPrefix(prefix, key),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly\n            ));\n        } else {\n            values = values.concat(stringify(\n                obj[key],\n                prefix + (allowDots ? '.' + key : '[' + key + ']'),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly\n            ));\n        }\n    }\n\n    return values;\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = opts ? utils.assign({}, opts) : {};\n\n    if (options.encoder !== null && options.encoder !== undefined && typeof options.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var delimiter = typeof options.delimiter === 'undefined' ? defaults.delimiter : options.delimiter;\n    var strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n    var skipNulls = typeof options.skipNulls === 'boolean' ? options.skipNulls : defaults.skipNulls;\n    var encode = typeof options.encode === 'boolean' ? options.encode : defaults.encode;\n    var encoder = typeof options.encoder === 'function' ? options.encoder : defaults.encoder;\n    var sort = typeof options.sort === 'function' ? options.sort : null;\n    var allowDots = typeof options.allowDots === 'undefined' ? false : options.allowDots;\n    var serializeDate = typeof options.serializeDate === 'function' ? options.serializeDate : defaults.serializeDate;\n    var encodeValuesOnly = typeof options.encodeValuesOnly === 'boolean' ? options.encodeValuesOnly : defaults.encodeValuesOnly;\n    if (typeof options.format === 'undefined') {\n        options.format = formats['default'];\n    } else if (!Object.prototype.hasOwnProperty.call(formats.formatters, options.format)) {\n        throw new TypeError('Unknown format option provided.');\n    }\n    var formatter = formats.formatters[options.format];\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (Array.isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (options.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = options.arrayFormat;\n    } else if ('indices' in options) {\n        arrayFormat = options.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (sort) {\n        objKeys.sort(sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        keys = keys.concat(stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            strictNullHandling,\n            skipNulls,\n            encode ? encoder : null,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            formatter,\n            encodeValuesOnly\n        ));\n    }\n\n    var joined = keys.join(delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    parameterLimit: 1000,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n\n    for (var i = 0; i < parts.length; ++i) {\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder);\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder);\n            val = options.decoder(part.slice(pos + 1), defaults.decoder);\n        }\n        if (has.call(obj, key)) {\n            obj[key] = [].concat(obj[key]).concat(val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options) {\n    var leaf = val;\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]') {\n            obj = [];\n            obj = obj.concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys\n        // that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while ((segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options);\n};\n\nmodule.exports = function (str, opts) {\n    var options = opts ? utils.assign({}, opts) : {};\n\n    if (options.decoder !== null && options.decoder !== undefined && typeof options.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    options.ignoreQueryPrefix = options.ignoreQueryPrefix === true;\n    options.delimiter = typeof options.delimiter === 'string' || utils.isRegExp(options.delimiter) ? options.delimiter : defaults.delimiter;\n    options.depth = typeof options.depth === 'number' ? options.depth : defaults.depth;\n    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : defaults.arrayLimit;\n    options.parseArrays = options.parseArrays !== false;\n    options.decoder = typeof options.decoder === 'function' ? options.decoder : defaults.decoder;\n    options.allowDots = typeof options.allowDots === 'boolean' ? options.allowDots : defaults.allowDots;\n    options.plainObjects = typeof options.plainObjects === 'boolean' ? options.plainObjects : defaults.plainObjects;\n    options.allowPrototypes = typeof options.allowPrototypes === 'boolean' ? options.allowPrototypes : defaults.allowPrototypes;\n    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : defaults.parameterLimit;\n    options.strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options);\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--8-1!../../../node_modules/postcss-loader/src/index.js??ref--8-2!../../../node_modules/sass-loader/dist/cjs.js!./query_editor.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","\"use strict\";\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && btoa) {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(true);\n// Module\nexports.push([module.id, \".tc-sub-params{margin-top:4px;margin-left:125px}.tc-sub-params .gf-form-inline{min-height:42px}.tc-sub-params .gf-form-inline .gf-form-label{margin-bottom:2px}.tc-sub-params .tc-info-label{margin-bottom:6px}.tc-sub-params .tc-info-label>a{margin-left:10px}.tc-switch{border-left:1px solid #262628;margin-bottom:0 !important}.tc-condition-block{margin-right:10px;display:inline-block}.tc-condition-block .tc-condition-input{border-radius:0}.tc-condition-block .tc-condition-minus{vertical-align:top;border-radius:0 3px 3px 0}.tc-condition-block .tc-condition-dropdown{display:inline-block}.tc-condition-block>input{display:inline-block;margin-right:0}.tc-condition-block>label{display:inline-block}.tc-condition-add{display:inline-block;vertical-align:top}.tc-condition-add>label{border-radius:3px}.filtered-color{color:#ff851b}.secret-tips{position:absolute;right:-25px;border-radius:2px;background:#1b1b1b;padding:10px;top:-35px;width:300px;border:1px solid #2c3235}.secret-tips-tri{position:absolute;width:15px;height:15px;left:-8px;top:60px;background:#1b1b1b;border:1px solid #2c3235;border-top:0;border-right:0;transform:rotate(45deg)}.rc-cascader-menu-item{min-width:160px;font-size:14px}\", \"\",{\"version\":3,\"sources\":[\"query_editor.css\"],\"names\":[],\"mappings\":\"AAAA,eAAe,cAAc,CAAC,iBAAiB,CAAC,+BAA+B,eAAe,CAAC,8CAA8C,iBAAiB,CAAC,8BAA8B,iBAAiB,CAAC,gCAAgC,gBAAgB,CAAC,WAAW,6BAA6B,CAAC,0BAA0B,CAAC,oBAAoB,iBAAiB,CAAC,oBAAoB,CAAC,wCAAwC,eAAe,CAAC,wCAAwC,kBAAkB,CAAC,yBAAyB,CAAC,2CAA2C,oBAAoB,CAAC,0BAA0B,oBAAoB,CAAC,cAAc,CAAC,0BAA0B,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,CAAC,wBAAwB,iBAAiB,CAAC,gBAAgB,aAAa,CAAC,aAAa,iBAAiB,CAAC,WAAW,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,wBAAwB,CAAC,iBAAiB,iBAAiB,CAAC,UAAU,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,kBAAkB,CAAC,wBAAwB,CAAC,YAAY,CAAC,cAAc,CAAC,uBAAuB,CAAC,uBAAuB,eAAe,CAAC,cAAc\",\"file\":\"query_editor.css\",\"sourcesContent\":[\".tc-sub-params{margin-top:4px;margin-left:125px}.tc-sub-params .gf-form-inline{min-height:42px}.tc-sub-params .gf-form-inline .gf-form-label{margin-bottom:2px}.tc-sub-params .tc-info-label{margin-bottom:6px}.tc-sub-params .tc-info-label>a{margin-left:10px}.tc-switch{border-left:1px solid #262628;margin-bottom:0 !important}.tc-condition-block{margin-right:10px;display:inline-block}.tc-condition-block .tc-condition-input{border-radius:0}.tc-condition-block .tc-condition-minus{vertical-align:top;border-radius:0 3px 3px 0}.tc-condition-block .tc-condition-dropdown{display:inline-block}.tc-condition-block>input{display:inline-block;margin-right:0}.tc-condition-block>label{display:inline-block}.tc-condition-add{display:inline-block;vertical-align:top}.tc-condition-add>label{border-radius:3px}.filtered-color{color:#ff851b}.secret-tips{position:absolute;right:-25px;border-radius:2px;background:#1b1b1b;padding:10px;top:-35px;width:300px;border:1px solid #2c3235}.secret-tips-tri{position:absolute;width:15px;height:15px;left:-8px;top:60px;background:#1b1b1b;border:1px solid #2c3235;border-top:0;border-right:0;transform:rotate(45deg)}.rc-cascader-menu-item{min-width:160px;font-size:14px}\"]}]);\n// Exports\nmodule.exports = exports;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","import _ from 'lodash';\nimport { Datasources, SERVICES } from './tc_monitor';\nimport { GetServiceFromNamespace, ParseMetricQuery } from './common/constants';\nimport { serviceGroupBy } from './common/utils';\n\nexport default interface DatasourceInterface {\n  instanceSettings: any;\n  backendSrv: any;\n  templateSrv: any;\n  query: (options: any) => any;\n  testDatasource: () => any;\n  metricFindQuery: (query: any) => any;\n  getRegions?: (service: string) => any;\n  getMetrics: (service: string, region: string) => any;\n  getInstances: (service: string, region: string, params: any) => any;\n  getZones?: (service: string, region: string) => any;\n}\n\nexport class TCMonitorDatasource implements DatasourceInterface {\n  instanceSettings: any;\n  backendSrv: any;\n  templateSrv: any;\n\n  /** @ngInject */\n  constructor(instanceSettings, backendSrv, templateSrv) {\n    this.instanceSettings = instanceSettings;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    _.forEach(Datasources, (_class: any, key) => {\n      this[key] = new _class(this.instanceSettings, this.backendSrv, this.templateSrv);\n    });\n  }\n\n  // 根据 Datasource Config 配置时勾选的监控服务项，获取相应的命名空间\n  getNamespaces() {\n    const namespaces: any[] = [];\n    _.forEach(SERVICES, (service) => {\n      if (this.instanceSettings.jsonData[service.service] === true) {\n        // namespaces.push(service.namespace);\n        namespaces.push(service);\n      }\n    });\n    return namespaces;\n  }\n\n  getCascaderNamespaces() {\n    const validServices = SERVICES.filter((service) => this.instanceSettings.jsonData[service.service]);\n    return serviceGroupBy(validServices);\n  }\n\n  getSelectedServices() {\n    const namespaces = this.getNamespaces();\n    return _.map(namespaces, ({ namespace }) => {\n      return GetServiceFromNamespace(namespace);\n    });\n  }\n\n  /**\n   * 根据 Panel 的配置项，获取相应的监控数据\n   *\n   * @param options Panel 的配置参数，示例如下\n   *  {\n   *     cacheTimeout: undefined,\n   *     dashboardId: 41,\n   *     interval: \"30s\",\n   *     intervalMs: 30000,\n   *     maxDataPoints: 554,\n   *     panelId: 2,\n   *     range: {\n   *        from: Moment,\n   *        to: Moment,\n   *        raw: {from: \"now-6h\", to: \"now\"}\n   *     },\n   *     rangeRaw: {from: \"now-6h\", to: \"now\"},\n   *     scopedVars: {__interval: {…}, __interval_ms: {…}}\n   *     targets: [\n   *       {\n   *          namespace: \"QCE/CVM\",\n   *          refId: \"A\",\n   *          service: \"cvm\",\n   *          showInstanceDetails: false,\n   *          cvm: {\n   *            dimensionObject: {InstanceId: {…}}\n   *            instance: \"\",\n   *            instanceAlias: \"InstanceId\",\n   *            metricName: \"AccOuttraffic\",\n   *            metricUnit: \"MB\",\n   *            period: 10,\n   *            queries: {Filters: {…}, InstanceIds: Array(1), Limit: 20, Offset: 0, filtersChecked: false, …},\n   *            region: \"ap-beijing\"\n   *          },\n   *          cdb: {},\n   *       },\n   *     ],\n   *     timezone: \"browser\"\n   *   }\n   * @return 返回数据对象，示例如下\n   * {\n   *   data: [\n   *     {\n   *       \"target\": \"AccOuttraffic - ins-123\",\n   *       \"datapoints\": [\n   *         [861, 1450754160000],\n   *         [767, 1450754220000]\n   *       ]\n   *     }\n   *   ]\n   * }\n   */\n  query(options: any): Record<string, any> {\n    const promises: any[] = [];\n    const services = this.getSelectedServices();\n    _.forEach(services, (service) => {\n      const optionsTemp = _.cloneDeep(options);\n      const targets = _.filter(optionsTemp.targets, (item) => item.service === service);\n      optionsTemp.targets = targets;\n      if (optionsTemp.targets.length > 0) {\n        const promiseTemp = this[`${_.toUpper(service)}Datasource`].query(optionsTemp);\n        if (promiseTemp) {\n          promises.push(promiseTemp);\n        }\n      }\n    });\n    if (promises.length === 0) {\n      return Promise.resolve({ data: [] });\n    }\n    return Promise.all(promises).then((results) => {\n      return { data: _.flatten(results) };\n    });\n  }\n\n  /**\n   * 获取模板变量的选择项列表\n   *\n   * @param query 模板变量配置填写的 Query 参数字符串\n   */\n  metricFindQuery(query: string, options?: any) {\n    const queries = ParseMetricQuery(query);\n    const service = GetServiceFromNamespace(queries['namespace'] || '');\n\n    if (_.isEmpty(queries) || !queries['namespace'] || !queries['action'] || !service) {\n      return Promise.resolve([]);\n    }\n    if (this[`${_.toUpper(service)}Datasource`].metricFindQuery) {\n      const result = this[`${_.toUpper(service)}Datasource`].metricFindQuery(\n        queries,\n        _.get(options, 'variable.regex', undefined)\n      );\n      if (result) {\n        return result;\n      }\n    }\n    return Promise.resolve([]);\n  }\n\n  /**\n   * 获取地域列表\n   * @param service\n   */\n  getRegions(service) {\n    if (this[`${_.toUpper(service)}Datasource`].getRegions) {\n      return this[`${_.toUpper(service)}Datasource`].getRegions();\n    }\n    return [];\n  }\n\n  /**\n   * 获取监控指标列表\n   * @param service\n   * @param region\n   */\n  getMetrics(service, region) {\n    return this[`${_.toUpper(service)}Datasource`].getMetrics(region);\n  }\n\n  /**\n   * 获取可用区列表\n   * @param service\n   * @param region\n   */\n  getZones(service, region) {\n    if (this[`${_.toUpper(service)}Datasource`].getZones) {\n      return this[`${_.toUpper(service)}Datasource`].getZones(region);\n    }\n    return [];\n  }\n\n  /**\n   * 获取filter中dropdown列表\n   * @param service\n   * @param param\n   */\n  getFilterDropdown(service, param) {\n    if (this[`${_.toUpper(service)}Datasource`].getFilterDropdown) {\n      return this[`${_.toUpper(service)}Datasource`].getFilterDropdown(param);\n    }\n    return [];\n  }\n\n  /**\n   * 获取实例列表\n   * @param service\n   * @param region\n   * @param params\n   */\n  getInstances(service, region, params) {\n    return this[`${_.toUpper(service)}Datasource`].getInstances(region, params);\n  }\n\n  /**\n   * 获取监听器列表\n   * @param service\n   * @param region\n   * @param params\n   */\n  getListeners(service, region, instance) {\n    if (!this[`${_.toUpper(service)}Datasource`].getListeners) {\n      return [];\n    }\n    return this[`${_.toUpper(service)}Datasource`].getListeners(region, instance);\n  }\n\n  /**\n   * 获取 私有网络列表\n   * @param service\n   */\n  getVpcIds(service, region) {\n    if (this[`${_.toUpper(service)}Datasource`].getVpcIds) {\n      return this[`${_.toUpper(service)}Datasource`].getVpcIds(region);\n    }\n  }\n\n  // 在 Datasource Config 配置时，验证 SerectId、SerectKey 的有效性，并测试勾选的监控服务项的对应 API 连通性\n  testDatasource() {\n    const promises: any[] = [];\n    const services = this.getSelectedServices();\n    _.forEach(services, (service) => {\n      promises.push(this[`${_.toUpper(service)}Datasource`].testDatasource());\n    });\n    if (promises.length === 0) {\n      return Promise.resolve({\n        status: 'error',\n        message: `Nothing configured. At least one of the API's services must be configured.`,\n        title: 'Error',\n      });\n    }\n    return Promise.all(promises).then((results) => {\n      let status = 'success';\n      let message = 'Datsource Connection OK';\n\n      const errorMsg = _.reduce(\n        results,\n        (acc, cur) => {\n          if (cur.status === 'error') {\n            if (acc === '') acc += 'Oops! Found an error in: ';\n            acc += `${cur.service}: ${cur.message}; \\n`;\n          }\n          return acc;\n        },\n        ''\n      );\n\n      if (errorMsg) {\n        status = 'error';\n        message = errorMsg;\n      }\n\n      return {\n        status,\n        message,\n        title: _.upperFirst(status),\n      };\n    });\n  }\n\n  getServiceFn(service, fnName) {\n    return (...argu) => {\n      if (!this[`${_.toUpper(service)}Datasource`][fnName]) {\n        return [];\n      }\n      return this[`${_.toUpper(service)}Datasource`][fnName](...argu);\n    };\n  }\n}\n","import coreModule from 'grafana/app/core/core_module';\nimport _ from 'lodash';\nimport { isDefined } from 'angular';\n\n// mutilple conditions directive for instance query params\nexport class MultiConditionCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope) {\n    $scope.init = () => {\n      $scope.type = $scope.type || 'input';\n      $scope.placeholder = isDefined($scope.placeholder) ? $scope.placeholder : '';\n      $scope.value = isDefined($scope.value) ? $scope.value : [];\n      $scope.maxCond = _.toInteger($scope.maxCond) > 0 ? _.toInteger($scope.maxCond) : -1;\n    };\n\n    $scope.onInputBlur = () => {\n      $scope.onChangeInternal();\n    };\n\n    $scope.deleteCondition = (index) => {\n      $scope.value.splice(index, 1);\n      $scope.onChangeInternal();\n    };\n\n    $scope.addCondition = (cond) => {\n      $scope.value.push(cond);\n      $scope.onChangeInternal();\n    };\n\n    $scope.onChangeInternal = () => {\n      $scope.onChange({ value: $scope.value });\n    };\n\n    $scope.onSelectChange = (value) => {\n      $scope.onChange({ value });\n    };\n\n    $scope.getSelectedOptions = () => {\n      const selectedOptions = _.filter(\n        $scope.options,\n        (item) => _.get($scope.value, 'value', []).indexOf(item.value) !== -1\n      );\n      return selectedOptions.length > 0\n        ? _.map(selectedOptions, (option) => `${option.text}: ${option.value}`).join('; ')\n        : undefined;\n    };\n\n    $scope.init();\n  }\n}\n\nconst template = `\n<div ng-if=\"type === 'input'\">\n  <div ng-repeat=\"v in value track by $index\" class=\"gf-form tc-condition-block\">\n    <input class=\"gf-form-input width-10 tc-condition-input\" type=\"text\" ng-model=\"value[$index]\" placeholder=\"{{placeholder}}\"\n      ng-blur=\"onInputBlur()\"></input>\n    <label class=\"gf-form-label pointer tc-condition-minus\">\n      <a class=\"pointer\" ng-click=\"deleteCondition($index)\">\n        <i class=\"fa fa-minus\"></i>\n      </a>\n    </label>\n  </div>\n  <div class=\"gf-form tc-condition-add\">\n    <label class=\"gf-form-label query-part\" ng-if=\"maxCond === -1 || value.length < maxCond\">\n      <a class=\"pointer\" ng-click=\"addCondition('')\">\n        <i class=\"fa fa-plus\"></i>\n      </a>\n    </label>\n  </div>\n</div>\n\n<div ng-if=\"type === 'inputNumber'\">\n  <div ng-repeat=\"v in value track by $index\" class=\"gf-form tc-condition-block\">\n    <input type=\"number\" ng-model=\"value[$index]\" ng-blur=\"onInputBlur()\" class=\"gf-form-input width-10 tc-condition-input\"\n      ng-min=\"minNum\" ng-max=\"maxNum\" ng-change=\"onChangeInternal()\">\n    <label class=\"gf-form-label pointer tc-condition-minus\">\n      <a class=\"pointer\" ng-click=\"deleteCondition($index)\">\n        <i class=\"fa fa-minus\"></i>\n      </a>\n    </label>\n  </div>\n  <div class=\"gf-form tc-condition-add\">\n    <label class=\"gf-form-label query-part\" ng-if=\"maxCond === -1 || value.length < maxCond\">\n      <a class=\"pointer\" ng-click=\"addCondition(undefined)\">\n        <i class=\"fa fa-plus\"></i>\n      </a>\n    </label>\n  </div>\n</div>\n\n<div class=\"gf-form\" ng-if=\"type === 'select'\">\n  <custom-select-dropdown value=\"value\" multiple=\"true\" options=\"options\" on-change=\"onSelectChange(value)\"></custom-select-dropdown>\n  <label class=\"gf-form-label tc-info-label\" ng-if=\"getSelectedOptions()\">\n    {{getSelectedOptions()}}\n  </label>\n</div>\n\n<div ng-if=\"type === 'dropdown'\">\n  <div ng-repeat=\"v in value track by $index\" class=\"gf-form tc-condition-block\" style=\"vertical-align: top;\">\n    <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent tc-condition-dropdown\">\n      <gf-form-dropdown model=\"value[$index]\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"getOptions()\" on-change=\"onChangeInternal()\"\n        css-class=\"min-width-10\">\n      </gf-form-dropdown>\n    </div>\n    <label class=\"gf-form-label pointer tc-condition-minus\">\n      <a class=\"pointer\" ng-click=\"deleteCondition($index)\">\n        <i class=\"fa fa-minus\"></i>\n      </a>\n    </label>\n  </div>\n  <div class=\"gf-form tc-condition-add\">\n    <label class=\"gf-form-label query-part\" ng-if=\"maxCond === -1 || value.length < maxCond\">\n      <a class=\"pointer\" ng-click=\"addCondition('')\">\n        <i class=\"fa fa-plus\"></i>\n      </a>\n    </label>\n  </div>\n</div>\n\n<!-- <div class=\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\">\n  <gf-form-dropdown model=\"ctrl.target.cvm.instance\" allow-custom=\"true\" lookup-text=\"true\" get-options=\"ctrl.getInstances($query)\"\n    on-change=\"ctrl.onInstanceChange()\" css-class=\"min-width-10\">\n  </gf-form-dropdown>\n</div> -->\n`;\n\nexport function multiCondition() {\n  return {\n    template: template,\n    controller: MultiConditionCtrl,\n    restrict: 'E',\n    scope: {\n      type: '=',\n      value: '=',\n      maxCond: '=?',\n      placeholder: '=?',\n      options: '=?',\n      maxNum: '=?',\n      minNum: '=?',\n      multiple: '=?',\n      onChange: '&',\n      getOptions: '&',\n    },\n  };\n}\n\ncoreModule.directive('multiCondition', multiCondition);\n","import angular from 'angular';\nimport _ from 'lodash';\nimport coreModule from 'grafana/app/core/core_module';\n\nexport class CustomSelectDropdownCtrl {\n  dropdownVisible: any;\n  highlightIndex: any;\n  linkText: any;\n  oldVariableText: any;\n  selectOptions: any;\n  options: any;\n  value: any;\n  search: any;\n  multiple: boolean | undefined;\n  selectedValues: any;\n  variable: any;\n\n  hide: any;\n  onChange: any;\n\n  /** @ngInject */\n  constructor() {}\n\n  show() {\n    this.oldVariableText = _.get(this.value, 'text', '');\n    this.highlightIndex = -1;\n\n    this.selectOptions = _.cloneDeep(this.options);\n    _.map(this.selectOptions, (option) => {\n      const selectedValue = _.get(this.value, 'value');\n      if (!selectedValue) {\n        option.selected = false;\n      } else if (_.isArray(selectedValue)) {\n        option.selected = _.indexOf(selectedValue, option.value) !== -1 ? true : false;\n      } else {\n        option.selected = selectedValue === option.value;\n      }\n    });\n\n    this.selectedValues = _.filter(this.selectOptions, { selected: true });\n\n    this.search = {\n      query: '',\n      options: this.selectOptions.slice(0, Math.min(this.selectOptions.length, 1000)),\n    };\n\n    this.dropdownVisible = true;\n  }\n\n  updateLinkText() {\n    this.linkText = _.get(this.value, 'text', '');\n  }\n\n  clearSelections() {\n    _.each(this.selectOptions, (option) => {\n      option.selected = false;\n    });\n\n    this.selectionsChanged(false);\n  }\n\n  keyDown(evt) {\n    if (evt.keyCode === 27) {\n      this.hide();\n    }\n    if (evt.keyCode === 40) {\n      this.moveHighlight(1);\n    }\n    if (evt.keyCode === 38) {\n      this.moveHighlight(-1);\n    }\n    if (evt.keyCode === 13) {\n      if (this.search.options.length === 0) {\n        this.commitChanges();\n      } else {\n        this.selectValue(this.search.options[this.highlightIndex], {}, true, false);\n      }\n    }\n    if (evt.keyCode === 32) {\n      this.selectValue(this.search.options[this.highlightIndex], {}, false, false);\n    }\n  }\n\n  moveHighlight(direction) {\n    this.highlightIndex = (this.highlightIndex + direction) % this.search.options.length;\n  }\n\n  selectValue(option, event, commitChange?, excludeOthers?) {\n    if (!option) {\n      return;\n    }\n    option.selected = this.multiple ? !option.selected : true;\n\n    commitChange = commitChange || false;\n    excludeOthers = excludeOthers || false;\n\n    const setAllExceptCurrentTo = (newValue) => {\n      _.each(this.selectOptions, (other) => {\n        if (option !== other) {\n          other.selected = newValue;\n        }\n      });\n    };\n\n    // commit action (enter key), should not deselect it\n    if (commitChange) {\n      option.selected = true;\n    }\n\n    if (excludeOthers) {\n      setAllExceptCurrentTo(false);\n      commitChange = true;\n    } else if (!this.multiple) {\n      setAllExceptCurrentTo(false);\n      commitChange = true;\n    } else if (event.ctrlKey || event.metaKey || event.shiftKey) {\n      commitChange = true;\n      setAllExceptCurrentTo(false);\n    }\n\n    this.selectionsChanged(commitChange);\n  }\n\n  selectionsChanged(commitChange) {\n    this.selectedValues = _.filter(this.selectOptions, { selected: true });\n    this.value.value = _.map(this.selectedValues, 'value');\n    this.value.text = _.map(this.selectedValues, 'text').join(' + ');\n    if (!this.multiple) {\n      this.value.value = _.get(this.selectedValues, '0.value', '');\n    }\n\n    if (commitChange) {\n      this.commitChanges();\n    }\n  }\n\n  commitChanges() {\n    this.dropdownVisible = false;\n\n    this.updateLinkText();\n\n    if (this.value.text !== this.oldVariableText) {\n      this.onChange({ value: this.value });\n    }\n  }\n\n  queryChanged() {\n    this.highlightIndex = -1;\n    this.search.options = _.filter(this.selectOptions, (option) => {\n      return option.text.toLowerCase().indexOf(this.search.query.toLowerCase()) !== -1;\n    });\n\n    this.search.options = this.search.options.slice(0, Math.min(this.search.options.length, 1000));\n  }\n\n  init() {\n    if (_.isEmpty(this.value)) {\n      this.value = { text: '', value: this.multiple ? [] : '' };\n    }\n    this.updateLinkText();\n  }\n}\n\nconst template = `\n<div class=\"variable-link-wrapper\">\n  <a ng-click=\"vm.show()\" class=\"variable-value-link min-width-10\">\n    {{vm.linkText}}\n    <i class=\"fa fa-caret-down\" style=\"font-size:12px;float:right;position:relative;top:4px\"></i>\n  </a>\n\n  <input\n    type=\"text\"\n    class=\"gf-form-input\"\n    style=\"display: none\"\n    ng-keydown=\"vm.keyDown($event)\"\n    ng-model=\"vm.search.query\"\n    ng-change=\"vm.queryChanged()\"\n  ></input>\n\n  <div class=\"variable-value-dropdown\" ng-if=\"vm.dropdownVisible\" ng-class=\"{'multi': vm.multiple, 'single': !vm.multiple}\">\n    <div class=\"variable-options-wrapper\">\n      <div class=\"variable-options-column\">\n        <a class=\"variable-options-column-header\" ng-if=\"!!vm.multiple\" ng-class=\"{'many-selected': vm.selectedValues.length > 1}\"\n          bs-tooltip=\"'Clear selections'\" data-placement=\"top\" ng-click=\"vm.clearSelections()\">\n          <span class=\"variable-option-icon\"></span>\n          Selected ({{vm.selectedValues.length}})\n        </a>\n        <a class=\"variable-option pointer\" ng-repeat=\"option in vm.search.options\" ng-class=\"{'selected': option.selected, 'highlighted': $index === vm.highlightIndex}\"\n          ng-click=\"vm.selectValue(option, $event)\">\n          <span class=\"variable-option-icon\"></span>\n          <span>{{option.text}}</span>\n        </a>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\n/** @ngInject */\nexport function customSelectDropdown($compile, $window, $timeout, $rootScope) {\n  return {\n    restrict: 'E',\n    scope: { options: '=', multiple: '=', value: '=', onChange: '&' },\n    template: template,\n    controller: 'CustomSelectDropdownCtrl',\n    controllerAs: 'vm',\n    bindToController: true,\n    link: (scope, elem) => {\n      const bodyEl = angular.element($window.document.body);\n      const linkEl = elem.find('.variable-value-link');\n      const inputEl = elem.find('input');\n\n      function bodyOnClick(e) {\n        if (elem.has(e.target).length === 0) {\n          scope.$apply(() => {\n            scope.vm.commitChanges();\n          });\n        }\n      }\n\n      function openDropdown() {\n        inputEl.css('width', Math.max(linkEl.width(), 136) + 'px');\n\n        inputEl.show();\n        linkEl.hide();\n\n        inputEl.focus();\n        $timeout(\n          () => {\n            bodyEl.on('click', bodyOnClick);\n          },\n          0,\n          false\n        );\n      }\n\n      function switchToLink() {\n        inputEl.hide();\n        linkEl.show();\n        bodyEl.off('click', bodyOnClick);\n      }\n\n      scope.$watch('vm.dropdownVisible', (newValue) => {\n        if (newValue) {\n          openDropdown();\n        } else {\n          switchToLink();\n        }\n      });\n\n      scope.vm.init();\n    },\n  };\n}\n\ncoreModule.controller('CustomSelectDropdownCtrl', CustomSelectDropdownCtrl);\ncoreModule.directive('customSelectDropdown', customSelectDropdown);\n","import coreModule from 'grafana/app/core/core_module';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst genController = (component) =>\n  class Controller {\n    _$scope: any;\n    _$element: any;\n\n    /** @ngInject */\n    constructor($scope, $element) {\n      this._$scope = $scope;\n      this._$element = $element;\n    }\n\n    $onInit() {\n      // extract porps\n      const props = Object.entries(this._$scope).reduce((acc, [key, value]) => {\n        if (!key.startsWith('$')) {\n          if (typeof value === 'function') {\n            acc[key] = (...args) => value({ _query: args.length === 1 ? args[0] : args });\n          } else {\n            acc[key] = value;\n          }\n        }\n        return acc;\n      }, {} as any);\n\n      // wating dom mounted\n      setTimeout(() => {\n        ReactDOM.render(React.createElement(component, props), this._$element[0]);\n      });\n    }\n  };\n\nexport function loadReactComponent(\n  RectCompo: React.ComponentType,\n  componentName: string,\n  propTypes: Record<string, string>\n) {\n  coreModule.directive(componentName, () => ({\n    template: `<div class=\"${componentName}\"></div>`,\n    controller: genController(RectCompo),\n    restrict: 'E',\n    scope: propTypes,\n    replace: true,\n  }));\n}\n","import { Cascader } from '@grafana/ui';\nimport { loadReactComponent } from '../common/react-loader';\n\nloadReactComponent(Cascader, 'gfCascader', {\n  separator: '@?',\n  placeholder: '@?',\n  options: '<',\n  changeOnSelect: '<?',\n  onSelect: '&',\n  width: '@?',\n  initialValue: '@?',\n  allowCustomValue: '<?',\n  formatCreateLabel: '&?',\n  displayAllSelectedLevels: '<?',\n});\n","import editorHtmlTmp from './query.editor.html';\nimport { SERVICES } from '../tc_monitor/index';\n\nconst hackModuleName = {\n  loadBalance: 'clb',\n  lbPrivate: 'clb',\n  lbPublic: 'clb',\n  mongoDB: 'mongodb',\n\n  // MapReduce\n  mrHDFS: 'mr',\n  mrHBASE: 'mr',\n  mrHIVE: 'mr',\n  mrNODE: 'mr',\n  mrPRESTO: 'mr',\n  mrSPARK: 'mr',\n  mrYARN: 'mr',\n  mrZOOKEEPER: 'mr',\n};\n\nexport const editorHtml = (function () {\n  let str = editorHtmlTmp;\n  SERVICES.forEach(({ service }) => {\n    const serviceSwitch = hackModuleName[service] || service.replace(/([A-Z])/g, '-$1').toLowerCase();\n    str += `<${serviceSwitch}-query\n      ng-if=\"ctrl.target.service==='${service}'\"\n      target=\"ctrl.target.${service}\"\n      show-detail=\"ctrl.checkShowDetail('instance')\"\n      datasource=\"ctrl.datasource\"\n      on-change=\"ctrl.onInstanceQueryChange()\"\n      on-refresh=\"ctrl.refresh()\"\n      dims=\"ctrl.target.${service}.dimensionObject\"\n      region=\"ctrl.getVariable(ctrl.target.${service}.region)\"\n    ></${serviceSwitch}-query>`;\n  });\n  const footStr = `\n    <div class=\"gf-form\" ng-show=\"ctrl.lastQueryError\">\n      <pre class=\"gf-form-pre alert alert-error\">{{ctrl.lastQueryError}}</pre>\n    </div>\n  </query-editor-row>`;\n  return str + footStr;\n})();\n","import { QueryCtrl } from 'grafana/app/plugins/sdk';\nimport _ from 'lodash';\n\nimport { GetServiceFromNamespace, ReplaceVariable, isVariable } from './common/constants';\nimport { InitServiceState, InstanceAliasList, GetInstanceQueryParams, SERVICES } from './tc_monitor';\n\nimport './components/multi_condition';\nimport './components/custom_select_dropdown';\nimport './components/cascader';\nimport './css/query_editor.css';\nimport { editorHtml } from './partials/queryEditorTemplate';\nexport class TCMonitorDatasourceQueryCtrl extends QueryCtrl {\n  // static templateUrl = 'datasource/partials/query.editor.html';\n  static template = editorHtml;\n  datasource: any;\n  panelCtrl: any;\n  namespaces: string[] = [];\n  regions: any[] = [];\n  instanceList: any[] = [];\n  // listenerList: any[] = [];\n  metricList: any[] = [];\n  periodList: number[] = [];\n  dimensionList: any[] = [];\n  instanceAliasList: any[] = [];\n  // listenerAliasList: any[] = [];\n  target: {\n    refId: string;\n    service: string;\n    namespace: string;\n    showInstanceDetails: boolean;\n  };\n  defaults = {\n    namespace: '',\n    service: '',\n    showInstanceDetails: false,\n    ...InitServiceState,\n  };\n\n  cascaderOptions: any = [];\n\n  lastQuery: string;\n  lastQueryError?: string;\n\n  isMetricsNeedUpdate: boolean;\n  hideRegion: boolean;\n\n  $scope: any;\n\n  /** @ngInject */\n  // eslint-disable-next-line @typescript-eslint/no-parameter-properties\n  constructor($scope, $injector, private templateSrv) {\n    super($scope, $injector);\n    this.$scope = $scope;\n    this.cascaderOptions = this.datasource.getCascaderNamespaces();\n    this.namespaces = this.datasource.getNamespaces();\n    // 当数据源的命名空间列表存在时，设置相应的默认值\n    if (this.namespaces.length > 0) {\n      // if (_.indexOf(this.namespaces, this.target.namespace) === -1) {\n      //   this.target.namespace = this.namespaces[0];\n      // }\n      this.target.namespace =\n        this.target.namespace ?? this.cascaderOptions[0]?.items?.[0].value ?? this.cascaderOptions[0].value;\n      this.target.service = GetServiceFromNamespace(this.target.namespace) || '';\n    }\n    this.hideRegion = !!SERVICES.find((o) => o.service === this.target.service)?.hideRegion;\n    _.defaultsDeep(this.target, this.defaults);\n    this.instanceAliasList = this.getInstanceAliasList(this.target.service);\n    // this.listenerAliasList = this.getListenerAliasList(this.target.service);\n    this.panelCtrl.events.on('data-received', this.onDataReceived.bind(this), $scope);\n    this.panelCtrl.events.on('data-error', this.onDataError.bind(this), $scope);\n  }\n\n  get sortedPeriodList() {\n    return this.periodList.sort((a, b) => a - b);\n  }\n  get isCascader() {\n    return this.cascaderOptions.length > 1;\n  }\n  cascaderChange(namespace) {\n    this.target.namespace = namespace;\n    this.onNamespaceChange();\n  }\n\n  onDataReceived(dataList) {\n    this.lastQueryError = undefined;\n    this.lastQuery = '';\n\n    const anySeriesFromQuery: any = _.find(dataList, { refId: this.target.refId });\n    if (anySeriesFromQuery) {\n      this.lastQuery = anySeriesFromQuery.query;\n    }\n  }\n\n  onDataError(err) {\n    this.handleQueryCtrlError(err);\n  }\n\n  handleQueryCtrlError(err) {\n    if (_.get(err, 'query.refId') !== this.target.refId) {\n      return;\n    }\n\n    if (_.get(err, 'error.data.error.innererror', undefined)) {\n      if (_.get(err, 'error.data.error.innererror.innererror', undefined)) {\n        this.lastQueryError = _.get(err, 'error.data.error.innererror.innererror.message');\n      } else {\n        this.lastQueryError = _.get(err, 'error.data.error.innererror.message');\n      }\n    } else if (_.get(err, 'error.data.error', undefined)) {\n      this.lastQueryError = _.get(err, 'error.data.error.message');\n    } else if (_.get(err, 'error.data', undefined)) {\n      this.lastQueryError = _.get(err, 'error.data.message');\n    } else if (_.get(err, 'data.error', undefined)) {\n      this.lastQueryError = _.get(err, 'data.error.message');\n      // eslint-disable-next-line no-empty\n    } else if (err.data?.message) {\n    } else if (_.get(err, 'data.message', undefined)) {\n      this.lastQueryError = _.get(err, 'data.message');\n    } else {\n      this.lastQueryError = err;\n    }\n  }\n\n  /**\n   * 获取实例展示字段的选择列表\n   *\n   * @param service 监控服务名\n   */\n  getInstanceAliasList(service) {\n    if (!service) {\n      return [];\n    }\n    return _.map(InstanceAliasList[`${_.toUpper(service)}InstanceAliasList`] || [], (item) => ({\n      text: `As ${item}`,\n      value: item,\n    }));\n  }\n  getNamespaces(query) {\n    return _.map(this.namespaces, (o: any) => ({ text: o.label, value: o.namespace })); // TODO: 为什么对对象排序不行呢？？？？待解决\n  }\n  onNamespaceChange() {\n    const service = GetServiceFromNamespace(this.target.namespace) || '';\n    this.hideRegion = !!SERVICES.find((o) => o.service === service)?.hideRegion;\n    this.regions = [];\n    this.metricList = [];\n    this.periodList = [];\n    this.dimensionList = [];\n    this.instanceList = [];\n    // this.listenerList = [];\n\n    const initState = InitServiceState[service];\n    this.target[service] = _.cloneDeep(initState);\n    this.target.service = service;\n\n    this.instanceAliasList = this.getInstanceAliasList(service);\n    // this.listenerAliasList = this.getListenerAliasList(service);\n\n    this.refresh();\n    if (this.isCascader) this.$scope.$apply();\n  }\n\n  /**\n   * 获取地域列表\n   * output:\n   *  [\n   *    {\n   *      \"Region\": \"ap-beijing\",\n   *      \"RegionName\": \"华北地区(北京)\",\n   *      \"RegionState\": \"AVAILABLE\"\n   *    },\n   *    {\n   *      \"Region\": \"ap-guangzhou\",\n   *      \"RegionName\": \"华南地区(广州)\",\n   *      \"RegionState\": \"AVAILABLE\"\n   *    }\n   *  ]\n   */\n  getRegions(query) {\n    const service = this.target.service;\n    if (!service || _.startsWith('$')) {\n      return [];\n    }\n    if (this.regions.length) {\n      return this.regions;\n    }\n    return this.datasource\n      .getRegions(service)\n      .then((list) => {\n        this.regions = list;\n        return list;\n      })\n      .catch(this.handleQueryCtrlError.bind(this));\n  }\n\n  onRegionChange() {\n    const service = this.target.service;\n    this.target[service].instance = '';\n    this.instanceList = [];\n    // this.listenerList = [];\n    this.isMetricsNeedUpdate = true;\n    _.forEach(this.target[service].dimensionObject, (__, key) => {\n      this.target[service].dimensionObject[key] = { Name: key, Value: '' };\n    });\n    this.target[service].queries = _.cloneDeep(InitServiceState[service].queries);\n    this.getInstances();\n    this.refresh();\n  }\n\n  /**\n   * 获取模板变量的实际值\n   *\n   * @param variable 模板变量的名字\n   * @param multiple 是否允许多选，如果为 false，返回实际值数组的第一个值\n   */\n  getVariable(variable: string, multiple: boolean) {\n    return ReplaceVariable(this.templateSrv, this.panelCtrl.panel.scopedVars, variable, multiple);\n  }\n\n  getMetricNameDesc() {\n    const service = this.target.service;\n    const index = _.findIndex(this.metricList, (item) => item.MetricName === this.target[service].metricName);\n    return index !== -1 ? this.metricList[index].Meaning.Zh : '';\n  }\n\n  getMetrics(query) {\n    const service = this.target.service;\n    const region = this.getVariable(_.get(this.target[service], 'region', ''), false);\n\n    if (!service || !region) {\n      return [];\n    }\n    if (!this.isMetricsNeedUpdate && this.metricList.length > 0) {\n      return _.map(this.metricList, (item) => ({ text: item.MetricName, value: item.MetricName }));\n    }\n    return this.datasource\n      .getMetrics(service, region)\n      .then((list) => {\n        this.metricList = list;\n        this.isMetricsNeedUpdate = false;\n        const index = _.findIndex(this.metricList, (item) => item.MetricName === this.target[service].metricName);\n        if (index !== -1) {\n          this.periodList = _.get(this.metricList[index], 'Period', []);\n          this.dimensionList = _.get(this.metricList[index], 'Dimensions.0.Dimensions', []);\n        }\n        return _.map(list, (item) => ({ text: item.MetricName, value: item.MetricName }));\n      })\n      .catch(this.handleQueryCtrlError.bind(this));\n  }\n\n  onMetricChange() {\n    const service = this.target.service;\n    let periodList = [];\n    let dimensionList = [];\n    const dimensionObject: any = {};\n    let metricUnit = '';\n    const index = _.findIndex(this.metricList, (item) => item.MetricName === this.target[service].metricName);\n    if (index !== -1) {\n      periodList = _.get(this.metricList[index], 'Period', []);\n      dimensionList = _.get(this.metricList[index], 'Dimensions.0.Dimensions', []);\n      // dimensionList = dimensionList.length > 0 ? dimensionList : (DefaultDimensions[service] ?? []);\n      metricUnit = _.get(this.metricList[index], 'Unit', '');\n    }\n    _.forEach(dimensionList, (item) => {\n      dimensionObject[item] = { Name: item, Value: '' };\n    });\n    this.periodList = periodList;\n    this.dimensionList = dimensionList;\n    this.target[service].period =\n      periodList.length > 0 ? (_.indexOf(periodList, 300) === -1 ? periodList[0] : 300) : undefined;\n    this.target[service].dimensionObject = dimensionObject;\n    this.target[service].metricUnit = metricUnit;\n    this.refresh();\n  }\n\n  getInstances() {\n    const service = this.target.service;\n    const region = this.getVariable(_.get(this.target[service], 'region', ''), false);\n    if (!service || !region) {\n      return [];\n    }\n    const params = this.getInstanceQueryParams(service);\n    return this.datasource\n      .getInstances(service, region, params)\n      .then((list) => {\n        this.instanceList = list;\n        const instanceAlias = this.target[service].instanceAlias; // InstanceId\n        const instances: any[] = [];\n        _.forEach(list, (item) => {\n          // 根据 instanceAlias，确定实例展示字段，并保存至 _InstanceAliasValue，用于 constants.ts 的监控数据解析函数 ParseQueryResult\n          const instanceAliasValue = _.get(item, instanceAlias);\n          // console.log({instanceAliasValue}); 遍历出所有的InstanceId\n          if (instanceAliasValue) {\n            if (typeof instanceAliasValue === 'string') {\n              item._InstanceAliasValue = instanceAliasValue;\n              instances.push({ text: instanceAliasValue, value: JSON.stringify(item) });\n            } else if (_.isArray(instanceAliasValue)) {\n              _.forEach(instanceAliasValue, (subItem) => {\n                item._InstanceAliasValue = subItem;\n                instances.push({ text: subItem, value: JSON.stringify(item) });\n              });\n            }\n          }\n        });\n        return instances;\n      })\n      .catch(this.handleQueryCtrlError.bind(this));\n  }\n  onInstanceChange(v) {\n    const service = this.target.service;\n    if (this.target[service].listener) {\n      this.target[service].listener = '';\n    }\n    this.refresh();\n  }\n\n  // getListeners() {\n  //   const service = this.target.service;\n  //   const region = this.getVariable(_.get(this.target[service], 'region', ''), false);\n  //   const instance = this.getVariable(_.get(this.target[service], 'instance', ''), false);\n  //   if (!service || !region) {\n  //     return [];\n  //   }\n  //   let instanceMap = {};\n  //   // console.log({instance});\n  //   try {\n  //     instanceMap = JSON.parse(instance);\n  //   } catch (e) {\n  //     console.log(e);\n  //   }\n  //   const idKey = IdKeys[service];\n  //   const instanceId = _.get(instanceMap, idKey);\n  //   return this.datasource.getListeners(service, region, instanceId)\n  //     .then(list => {\n  //       this.listenerList = list;\n  //       const listenerAlias = this.target[service].listenerAlias;\n  //       const listeners: any[] = [];\n  //       _.forEach(list, (item) => {\n  //         const listenerAliasValue = _.get(item, listenerAlias);\n  //         if (listenerAliasValue) {\n  //           if (typeof listenerAliasValue === 'string') {\n  //             item._listenerAliasValue = listenerAliasValue;\n  //             listeners.push({ text: listenerAliasValue, value: JSON.stringify(item) });\n  //           } else if (_.isArray(listenerAliasValue)) {\n  //             _.forEach(listenerAliasValue, (subItem) => {\n  //               item._listenerAliasValue = subItem;\n  //               listeners.push({ text: subItem, value: JSON.stringify(item) });\n  //             });\n  //           }\n  //         }\n  //       });\n  //       // console.log({listeners});\n  //       return listeners;\n  //     })\n  //     .catch(this.handleQueryCtrlError.bind(this));\n  // }\n  /**\n   * 获取实例请求接口的请求参数\n   *\n   * @param service 监控服务名\n   */\n  getInstanceQueryParams(service) {\n    const queries = this.target[service].queries;\n    if (GetInstanceQueryParams[`${_.toUpper(service)}GetInstanceQueryParams`]) {\n      return GetInstanceQueryParams[`${_.toUpper(service)}GetInstanceQueryParams`](queries);\n    } else {\n      return {};\n    }\n  }\n\n  onInstanceAliasChange() {\n    // 仅当 instance 字段不是模板变量时，执行以下操作\n    if (!this.isVariable('instance')) {\n      const service = this.target.service;\n      this.target[service].instance = '';\n      this.refresh();\n    }\n  }\n\n  onInstanceQueryChange() {\n    // 仅当 instance 字段不是模板变量时，执行以下操作\n    if (!this.isVariable('instance')) {\n      const service = this.target.service;\n      this.target[service].instance = '';\n      this.instanceList = [];\n      _.forEach(this.target[service].dimensionObject, (__, key) => {\n        this.target[service].dimensionObject[key] = { Name: key, Value: '' };\n      });\n      this.refresh();\n    }\n  }\n  isVariable(field) {\n    const service = this.target.service;\n    const value = this.target[service]?.[field];\n    return isVariable(value);\n  }\n  checkShowDetail(field) {\n    return !this.isVariable(field) && this.target.showInstanceDetails;\n  }\n}\n","import _ from 'lodash';\nimport { SERVICES } from './tc_monitor';\n\nexport class TCMonitorDatasourceConfigCtrl {\n  static templateUrl = 'datasource/partials/config.html';\n  current: any;\n\n  filterKey = '';\n\n  error = {\n    secretId: '',\n    secretKey: '',\n  };\n\n  // save后保存，不用再次出入\n  secretKeyCache = '';\n\n  get filteredList() {\n    const rawList = this.current.jsonData.services ?? [];\n    return rawList\n      .filter((item) => item.label.toLowerCase().includes(this.filterKey.toLowerCase()))\n      .map((item) => {\n        item.filteredLabel = this.getFitleredLabel(item.label);\n        return item;\n      });\n  }\n\n  get allChecked() {\n    return this.filteredList.length && this.filteredList.every((item) => this.current.jsonData[item.service]);\n  }\n\n  set allChecked(v) {\n    this.filteredList.forEach((item) => {\n      this.current.jsonData[item.service] = v;\n    });\n  }\n\n  /** @ngInject */\n  constructor($scope) {\n    this.current.jsonData.services = SERVICES;\n    // 默认设置所有监控服务项不选\n    _.forEach(this.current.jsonData.services, (service) => {\n      this.current.jsonData[service.service] = _.get(this.current.jsonData, [service.service], false);\n    });\n  }\n  resetSecret() {\n    this.current.secureJsonFields.secretKey = false;\n    this.current.jsonData.secretId = '';\n  }\n  onSecretKeyChange(secretKey) {\n    this.current.secureJsonData = { ...this.current.secureJsonData, secretKey };\n  }\n  getFitleredLabel(label: string) {\n    if (!this.filterKey) return label;\n    return label.replace(new RegExp(`(${this.filterKey})`, 'ig'), '<span class=\"filtered-color\">$1</span>');\n  }\n\n  checkSecretId(target: string) {\n    // const isValid = /^[a-zA-Z\\d]+$/.test(target) && target?.length === 36;\n    const isValid = target?.length > 0;\n    this.error.secretId = isValid ? '' : 'SecretId is required! ';\n  }\n\n  checkSecretKey(target: string) {\n    // const isValid = /^[a-zA-Z\\d]+$/.test(target) && target?.length === 32;\n    const isValid = target?.length > 0;\n    this.error.secretKey = isValid ? '' : 'SecretKey is required! ';\n  }\n}\n","import { TCMonitorDatasource } from './datasource';\nimport { TCMonitorDatasourceQueryCtrl } from './query.ctrl';\nimport { TCMonitorDatasourceConfigCtrl } from './config.ctrl';\n\nexport {\n  TCMonitorDatasource as Datasource,\n  TCMonitorDatasourceConfigCtrl as ConfigCtrl,\n  TCMonitorDatasourceQueryCtrl as QueryCtrl,\n};\n"],"sourceRoot":""}