const en_US = {
  language: 'Language',
  enable_intranet_API_mode: 'Enable Intranet API Mode',
  cloud_database: 'Cloud Database',
  cloud_load_balancer: 'Cloud Load Balancer',
  virtual_private_cloud: 'Virtual Private Cloud',
  content_delivery_network: 'Content Delivery Network',
  message_queue: 'Message Queue',
  direct_connect: 'Direct Connect',
  cloud_physical_machine: 'Cloud Physical Machine',
  elastic_mapReduce: 'Elastic MapReduce',
  edge_computing_machine: 'Edge Computing Machine',
  // namespace
  RUM: 'Real User Monitoring(RUM)',
  CLS: 'Cloud Log Service(CLS)',
  CVM: 'Cloud Virtual Machine(CVM)',
  CDB: 'TencentDB for MySQL(CDB)',
  CMONGO: 'TencentDB for MongoDB(CMONGO)',
  POSTGRES: 'TencentDB for PostgreSQL(POSTGRES)',
  REDIS: 'TencentDB for Redis(REDIS)',
  REDIS_MEM: 'TencentDB for Redis(Memory Edition, 5-Second)(REDIS_MEM)',
  SQLSERVER: 'TencentDB for SQL Server(SQLSERVER)',
  CYNOSDB_MYSQL: 'TencentDB for CYNOSDB_MYSQL(CYNOSDB_MYSQL)',
  TCAPLUS: 'TencentDB for TcaplusDB(TCAPLUS)',
  TDMYSQL: 'TDSQL for MySQL(TDMYSQL)',
  PCX: 'Peering Connection(PCX)',
  BWP: 'Bandwidth Packet(BWP)',
  NAT_GATEWAY: 'NAT Gateway(NAT_GATEWAY)',
  VPNGW: 'VPN Gateway(VPNGW)',
  VPNX: 'VPN Tunnel(VPNX)',
  DCG: 'Direct Connect Gateway(DCG)',
  CEIP_SUMMARY: 'Anycast EIP(CEIP_SUMMARY)',
  VPC_NET_DETECT: 'Network Detection(VPC_NET_DETECT)',
  VBC: 'Cloud Connect Network(VBC)',
  LB: 'Elastic IP(LB)',
  LB_PUBLIC: 'Public Network CLB(LB_PUBLIC)',
  LB_PRIVATE: 'Private Network CLB Layer-4 Protocol(LB_PRIVATE)',
  LOADBALANCE: 'Private Network CLB Layer-7 Protocol(LOADBALANCE)',
  CDN: 'Chinese Mainland Domain(CDN)',
  CDN_LOG_DATA: 'Province(CDN_LOG_DATA)',
  OV_CDN: 'Overseas Domain(OV_CDN)',
  SCF_V2: 'Serverless Cloud Function(SCF)',
  CFS: 'Cloud File Storage(CFS)',
  COS: 'Cloud Object Storage(COS)',
  CKAFKA: 'Message Queue CKafka(CKAFKA)',
  CMQ: 'Message Queue for Queue Service(CMQ)',
  CMQTOPIC: 'Message Queue for Topic Subscription(CMQTOPIC)',
  TDMQ: 'Tencent Distributed Message Queue for Pulsar(TDMQ)',
  TDMQ_ROCKETMQ: 'Tencent Distributed Message Queue for RocketMQ(ROCKETMQ)',
  TDMQ_RABBITMQ: 'Tencent Distributed Message Queue for RabbitMQ(RABBITMQ)',
  DCX: 'Direct Connect for Dedicated Tunnel(DCX)',
  DC: 'Direct Connect for Connection(DC)',
  CPM: 'Cloud Physical Machine(CPM)',
  BM_PCX: 'Cloud Physical Machine for Peering Connection(BM_PCX)',
  BM_LB: 'Cloud Physical Machine for Public Network CLB(BM_LB)',
  BM_INTRA_LB: 'Cloud Physical Machine for Private Network CLB(BM_INTRA_LB)',
  CES: 'Elasticsearch Service(CES)',
  BLOCK_STORAGE: 'Cloud Block Storage(BLOCK_STORAGE)',
  APIGATEWAY: 'API Gateway(APIGATEWAY)',
  QAAP: 'Global Application Acceleration Platform(GAAP)',
  ECM: 'Edge Computing Machine for Computation and Networking(ECM)',
  ECM_BLOCK_STORAGE: 'Edge Computing Machine for Block Storage(ECM_BLOCK_STORAGE)',
  ECM_LB: 'Edge Computing Machine for Layer-4 CLB(ECM_LB)',
  GSE: 'Game Server Elastic-scaling(GSE)',
  TKE: 'Tencent Kubernetes Engine(TKE)',
  ECDN: 'Enterprise Content Delivery Network(ECDN)',
  WAF: 'Web Application Firewall(WAF)',
  // others
  multi_scene: 'Multi-Scene',
  lite: 'Lite',
  cloud_monitor: 'Cloud Monitor',
  cloud_log_service: 'Cloud Log Service',
  real_user_monitoring: 'Real User Monitoring',
  apm_monitoring: 'Application Monitoring',
  region: 'Region',
  log_topic: 'Log Topic',
  syntax_rule: 'Syntax Rule',
  max_result_num: 'Maximum result number',
  search_statement: 'Search Statement',
  time_unit: 'Time unit',
  seconds: 'seconds',
  search_description:
    'Search for instances according to specific query conditions, and pull the first 20 instances by default',
  // region
  'ap-guangzhou': 'South China(Guangzhou)',
  'ap-shenzhen-fsi': 'South China(Shenzhen Finance)',
  'ap-guangzhou-open': 'South China(Guangzhou OPEN)',
  'ap-shenzhen': 'South China(Shenzhen)',
  'ap-qingyuan': 'South China(Qingyuan)',
  'ap-shanghai': 'East China(Shanghai)',
  'ap-shanghai-fsi': 'East China(Shanghai Finance)',
  'ap-jinan-ec': 'East China(Jinan)',
  'ap-hangzhou-ec': 'East China(Hangzhou)',
  'ap-nanjing': 'East China(Nanjing)',
  'ap-fuzhou-ec': 'East China(Fuzhou)',
  'ap-hefei-ec': 'East China(Hefei)',
  'ap-beijing': 'North China region(Beijing)',
  'ap-tianjin': 'North China region(Tianjin)',
  'ap-beijing-fsi': 'North China region(Beijing Finance)',
  'ap-shijiazhuang-ec': 'North China region(Shijiazhuang)',
  'ap-wuhan-ec': 'Central China(Wuhan)',
  'ap-changsha-ec': 'Central China(Changsha)',
  'ap-zhengzhou-ec': 'Central China(Zhengzhou)',
  'ap-chengdu': 'Southwest China(Chengdu)',
  'ap-chongqing': 'Southwest China(Chongqing)',
  'ap-xian-ec': "Northwest region(Xi'an)",
  'ap-shenyang-ec': 'Northeast China(Shenyang)',
  'ap-taipei': 'Hong Kong, Macau and Taiwan (China)(Taipei, China)',
  'ap-hongkong': 'Hong Kong, Macau and Taiwan (China)(Hong Kong, China)',
  'ap-seoul': 'Northeast Asia(Seoul)',
  'ap-tokyo': 'Northeast Asia(Tokyo)',
  'ap-singapore': 'Southeast Asia(Singapore)',
  'ap-bangkok': 'Southeast Asia(Bangkok)',
  'ap-jakarta': 'Southeast Asia(Jakarta)',
  'na-siliconvalley': 'US West(Silicon Valley)',
  'eu-frankfurt': 'Europe(Frankfurt)',
  'eu-moscow': 'Europe(Northeastern Europe)',
  'ap-mumbai': 'South Asia(Mumbai)',
  'na-ashburn': 'US East(Virginia)',
  'sa-saopaulo': 'South America(SÃ£o Paulo)',
  'na-toronto': 'North America(Toronto)',
};
export default en_US;
